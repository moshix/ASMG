//SOURCE JOB CLASS=A,MSGCLASS=X,REGION=4096K
//* STEP01 EXEC PGM=IEFBR14
//* SYSPRINT DD SYSOUT=*
//* DD1      DD DISP=(OLD,DELETE,DELETE),DSN=CBT593.ASMG27A.SOURCE
//STEP02 EXEC PGM=IEFBR14
//SYSPRINT DD SYSOUT=*
//DD1      DD DISP=(NEW,CATLG,DELETE),DSN=CBT593.ASMG27A.SOURCE,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=12800),
//             SPACE=(CYL,(15,1,6),RLSE),
//             UNIT=3330,VOL=SER=PSTCAD
//STEP03 EXEC PGM=IEBUPDTE
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DISP=OLD,DSN=CBT593.ASMG27A.SOURCE
//SYSUT2   DD DISP=OLD,DSN=CBT593.ASMG27A.SOURCE
//SYSIN    DD DATA
./ ADD NAME=ASMGF1
F1       TITLE     'ASMG     MACRO GENERATOR INITIALIZATION PHASE'      00020027
*****    ISEQ  73,78                                                    00040027
*TITLE-'ASMGF1' (PHASE F1)                                              00060027
*FUNCTION- INITIALIZATION, INCLUDING...                                 00080027
*   PROCESS INVOKER'S DD NAMES, IF ANY.                                 00100027
*   PROCESS ASSEMBLER PARAMETER LIST.                                   00120027
*   OPEN ALL NECESSARY DATASETS.                                        00140027
*   LOAD THE CORRECT OP-CODE TABLE AND ASSOCIATED HASH TABLE FOR        00160027
*     THE GLOBAL DICTIONARY.                                            00180027
*   GET MAIN STORAGE AND ALLOCATE BUFFER AREAS.                         00200027
*   INITIALIZE CONSTANTS AND INDICATORS IN COMMON AREA FOR PHASE F2.    00220027
*   BUILD A DIRECTORY OF ALL MACROS ON SYSLIB VS TTR DISK ADDRESS.      00240027
*   PROCESS ICTL RECORD.                                                00260027
*ENTRY POINT-ASMGF1. ENTERED FROM PHASE 'ASM' BY                        00280027
*        LINK DE=(R2),MF=(E,(1))     I.E. EP=ASMGF2                     00300027
*INPUT-                                                                 00320027
*   ON SYSIN- SOURCE CARDS.                                             00340027
*   IN REG R14 - RETURN ADDRESS TO PHASE 'ASM'.                         00360027
*   IN REG R9 - ADDRESS OF PARAMETER LIST 'LIST1' IN PHASE 'ASM'.       00380027
*   IN REG R10- 00 IF FIRST ENTRY, FF IF LOOP IN BATCH MODE.            00400027
*   'LIST1' INCLUDES ADDRESS OF CONTROL PROG PARAM LIST.                00420027
*   CONTROL PROG PARAM LIST HAS THE FOLLOWING FORMAT...                 00440027
*     IF NO DDNAMES ARE SPECIFIED-                                      00460027
*        DC    X'80',AL3(ASMPAR)   POINT TO ASSEMBLER PARAMETER STRING  00480027
*     IF ANY DDNAMES ARE SPECIFIED-                                     00500027
*        DC    A(ASMPAR)           POINT TO ASSEMBLER PARAMETER STRING  00520027
*        DC    X'80',AL3(DDNAM)    POINT TO DDNAME PARAMETER STRING     00540027
*                                                                       00560027
*   FORMAT OF ASMPAR STRING- LLPARAM1,PARAM2,PARAM3,....                00580027
*              IT MUST START ON A HALFWORD BOUNDARY.                    00600027
*   FORMAT OF DDNAME STRING- LLDDNAME01DDNAME02DDNAME03....             00620027
*              IT MUST START ON A HALFWORD BOUNDARY.                    00640027
*                                                                       00660027
*   LL IS BYTE LENGTH OF STRING IN BINARY (EXCLUDING LL)                00680027
*                                                                       00700027
*   EACH DDNAME USES 8 BYTES. DDNAME LIST IS ORDER- AND POSITION-       00720027
*   DEPENDENT. EACH NAME IN THE LIST REPLACES THE CORRESPONDINGLY       00740027
*   POSITIONED NAME IN THE FOLLOWING STANDARD LIST-                     00760027
*                   SYSLIN                                              00780027
*                   SYSUP                                               00800027
*                   SYSTERM                                             00820027
*                   SYSLIB                                              00840027
*                   SYSIN                                               00860027
*                   SYSPRINT                                            00880027
*                   SYSPUNCH                                            00900027
*                   SYSUT1                                              00920027
*                   SYSUT2                                              00940027
*                   SYSUT3                                              00960027
*   THE ASSEMBLER USES ALL TEN ENTRIES IN THIS STRING.                  00980027
*   EIGHT HEX ZEROS MEANS KEEP THE STANDARD NAME.                       01000027
*                                                                       01020027
*   EXAMPLE. TO CHANGE SYSIN TO MYNAME AND SYSPUNCH TO HISNAME, THE     01040027
*   FORMAT OF THE DDNAME STRING IS                                      01060027
*            5800000000000000000000000000000000MYNAME  00000000HISNAME  01080027
*              WHERE '0' IS A BYTE OF BINARY ZEROS.                     01100027
*                                                                       01120027
*EXTERNAL ROUTINES- I/O PACKAGE IN PHASE 'ASM', DECK 'BUFF'             01140027
*   READ, WRITE, CHECK, NOTE                                            01160027
*EXIT- AFTER LOCATION F2XCTL                                            01180027
*        XCTL     EP=ASMGF2                                             01200027
*                                                                       01220027
*   EXIT CONDITIONS INDICATED IN ERRSW1 BYTE -                          01240027
*   ERRBDPM='0' -- PARM FIELD OK.                                       01260027
*   ERRBDPM='1' -- ERROR IN PARM FIELD.                                 01280027
*                                                                       01300027
         SPACE     4                                                    01320027
*                                                                       01340027
*        SET ALL GLOBAL SWITCHES NOW                                    01360027
         COPY      ASMGSET                                              01380027
*                                                                       01400027
*        END OF SETTING GLOBAL SWITCHES                                 01420027
         EJECT                                                          01440027
ASMGF1   CSECT                                                          01460027
*                                                                       01480027
*                                                                       01500027
*        REGISTER DEFINITIONS-                                          01520027
         SETR                                                           01540027
*                                                                       01560027
         LR        R11,R15             TRANSFER ENTRY ADDRESS           01580027
         USING     ASMGF1,R11,R12      TELL ASSEMBLER ABOUT MY BASES    01600027
         LA        R12,4095(,R11)      FORM ALMOST THE SECOND BASE      01620027
         LA        R12,1(,R12)         THIS IS MY SECOND BASE           01640027
*                                                                       01660027
         ENTRYOUT  F1,CSECT=GAECT                                       01680027
*                                                                       01700027
         LR        R15,R13             SAVE ASM SAVE AREA ADDRESS       01720027
         L         R13,=A(COMMON)      USE SAVE AREA AT START OF COMMON 01740027
         USING     COMMON,R13                                           01760027
*                                                                       01780027
*        GET ASM PARAMETER LIST STUFF                                   01800027
*                                                                       01820027
         ST        R15,ASMSAVE         ADDRESS OF SAVE AREA IN ASM      01840027
         ST        R14,RETURN          SAVE RETURN ADDRESS TO ASM       01860027
         ST        R9,ADLIST1          SAVE ADDRESS OF LIST1 IN ASM     01880027
         MVC       BUFFENT(4),L1BUFADR(R9)  GET ADDRESS OF BUFF RTN     01900027
         MVC       INITERAD(4),L1BUFERR(R9)  BUFF ERROR HANDLER IN ASM  01920027
         MVC       ADCBLB(8),L1DCBADS+L1SLIB(R9) SYSLIB/SYSIN DCB ADDR  01940027
*                                                                       01960027
         L         R6,L1CTLPRM(,R9)    POINT TO CONTROL PROG PARAM LIST 01980027
         SPACE     2                                                    02000027
DDLIST   DS        0H                                                   02020027
         LTR       R10,R10             ONLY SET DDNAMES ON 1ST PASS     02040027
         BNZ       SYSTYPE                                              02060027
*                                                                       02080027
***   PROCESS LIST OF INVOKERS DD NAMES, IF PRESENT.   ***              02100027
*                                                                       02120027
         TM        0(R6),X'80'         TEST FOR END OF PARAM LIST       02140027
         BO        SYSTYPE             BRANCH IF END                    02160027
         L         R3,4(,R6)           POINT TO INVOKER'S DDNAME LIST   02180027
         LA        R4,12*8             WILL ACCEPT 12 DDNAMES AT MOST   02200027
         CH        R4,0(,R3)           ARE THERE MORE .Q                02220027
         BL        DDLENMX             USE ONLY MAXIMUM IF SO           02240027
         LH        R4,0(,R3)           GET OVERRIDING LENGTH            02260027
DDLENMX  DS        0H                                                   02280027
         L         R7,=F'-8'           BXH INCREMENT                    02300027
         NR        R4,R7               DOUBLE WORD ALIGN LENGTH         02320027
         LA        R3,2(R4,R3)         POINT TO END OF LAST DDNAME      02340027
         B         DDINC               POINT TO NEXT TO LAST            02360027
*                                                                       02380027
*        PICK UP INVOKER'S DD NAMES                                     02400027
DDLOOP   DS        0H                                                   02420027
         OC        0(8,R3),0(R3)       IS DDNAME ZERO .Q                02440027
         BZ        DDINC               BRANCH AROUND IF YES             02460027
         LR        R1,R4               GET DDNAME OFFSET                02480027
         SRL       R1,2                DIVIDE BY FOUR                   02500027
         LH        R1,DCTDVTAD(R1)     CONVERT TO INTERNAL DISPLACEMENT 02520027
         L         R5,L1DCBADS(R1,R9)  POINT TO DCB                     02540027
         MVC       DCBDDNAM(8,R5),0(R3)  ALTER DDNAME IN DCB            02560027
         AR        R1,R1               DOUBLE OFFSET                    02580027
         LA        R5,L1DDNAM(R1,R9)   POINT TO DDNAME IN LIST          02600027
         MVC       0(8,R5),0(R3)       ALTER NAME IN DDNAME LIST        02620027
DDINC    DS        0H                                                   02640027
         AR        R3,R7               POINT AT PREVIOUS USER DDNAME    02660027
         BXH       R4,R7,DDLOOP        REDUCE LENGTH BY EIGHT AND TEST  02680027
         SPACE     2                                                    02700027
*                                                                       02720027
***      PROCESS LIST OF ACCESS METHOD ADDRESSES, IF PRESENT   ***      02740027
*                                                                       02760027
SYSACSMS DS        0H                                                   02780027
         TM        4(R6),X'80'         END OF PARAM LIST .Q             02800027
         BO        SYSTYPE             BRANCH IF END                    02820027
         L         R3,8(,R6)           POINT TO INVOKER'S LIST          02840027
SYSACSML DS        0H                                                   02860027
         TM        3(R3),X'03'         A MULTIPLE OF FOUR .Q            02880027
         BNZ       SYSACSME            BRANCH IF NOT                    02900027
         IC        R4,0(,R3)           GET ACMETH CODE                  02920027
         N         R4,=F'127'          PURIFY THE OFFSET                02940027
         CH        R4,=H'48'           IS IT TOO BIG .Q                 02960027
         BNL       SYSACSME            BRANCH IF YES                    02980027
         SRL       R4,1                DIVIDE BY TWO                    03000027
         LH        R4,DCTDVTAD(R4)     GET DCB LIST OFFSET              03020027
         CLC       1(3,R3),F1+1        IS THIS ONE OR LESS              03040027
         BNH       SYSACSME            FORGET IT IF SO                  03060027
         L         R1,L1DCBADS(R4,R9)  GET DCB ADDRESS                  03080027
         TM        L1DCBPAD(R1),X'0C'  MONITOR FOR PUTS/GETS            03100027
         BZ        SYSACSME            BRANCH IF NO                     03120027
         MVI       DCBOFLGS(R1),X'10'  OPEN BUT LOCKED                  03140027
         MVC       DCBGET+1(3,R1),1(R3)  ENTER USER'S ADDRESS           03160027
SYSACSME DS        0H                                                   03180027
         TM        0(R3),X'80'         AT THE END .Q                    03200027
         BO        SYSTYPE             BRANCH IF YES                    03220027
         LA        R3,4(,R3)           NEXT ENTRY                       03240027
         B         SYSACSML            LOOP ALONG                       03260027
         SPACE     2                                                    03280027
*                                                                       03300027
*        DETERMINE TYPE OF OPERATING SYSTEM                             03320027
*                                                                       03340027
SYSTYPE  DS        0H                                                   03360027
         L         R1,CVTPTR           GET CVT POINTER                  03380027
         S         R1,F8               POINT AT CVT PREFIX              03400027
         CLI       CVTRELNO(R1),C'C'   DOES RELNO START WITH 'C' .Q     03420027
         BNE       SYSNCMS             NOT CMS IF NO                    03440027
         LA        R2,7                OFFSET POINTER FOR CMS           03460027
         OI        PARBYT3,CMS         TURN ON CMS OPTION               03480027
         B         SYSTNV              AND CONTINUE PROCESSING          03500027
SYSNCMS  DS        0H                                                   03520027
         IC        R2,CVTDCB(,R1)      TYPE OF SYSTEM FLAG              03540027
         SRL       R2,4                SHIFT TO OFFSET                  03560027
         N         R2,F7               CLEAR GARBAGE                    03580027
         BCTR      R2,0                DECREMENT BY ONE                 03600027
         AR        R2,R2               DOUBLE IT                        03620027
         TM        CVTDCB(R1),X'02'    ARE WE VIRTUAL .Q                03640027
         BZ        SYSTNV              BRANCH IF NOT                    03660027
         LA        R2,1(,R2)           INCREMENT OFFSET                 03680027
SYSTNV   DS        0H                                                   03700027
         SLL       R2,2                WORK WITH MULTIPLES OF FOUR      03720027
         LA        R2,SYSTAB(R2)       POINT AT ENTRY IN SYSTAB         03740027
         MVC       SPACENEG+2(1),3(R2) SET DEFAULT SPACE PARAMETER      03760027
         MVC       SYSTEM+7(3),0(R2)   SET NAME OF SYSTEM FOR HEADER    03780027
         MVC       SYSTEM+11(4),CVTRELNO(R1)  SET RELEASE NUMBER        03800027
         CLI       SYSTEM+14,C' '      IS RELEASE TOO SHORT             03820027
         BNE       SYSMODEL            BRANCH IF NOT                    03840027
         MVC       SYSTEM+14(1),SYSTEM+13  SHUFFLE AROUND               03860027
         MVI       SYSTEM+13,C'.'      AND ADD A SEPARATOR              03880027
SYSMODEL DS        0H                                                   03900027
*.* DAN SKOMSKY 09/22/2007 ALLOW FOR FOUR DIGIT MODEL NUMBER  DS092207  03905027
*.*      UNPK      DWORD(4),CVTMDL(3,R1)  CONVERT MODEL NUM   DS092207  03920027
*.*      MVC       MODEL+6(2),DWORD+1  ASSUME IT'S A 360      DS092207  03940027
*.*      CLI       DWORD,C'0'          BUT TEST IT            DS092207  03960027
*.*      BE        PARMSCAN            BRANCH IF IT IS        DS092207  03980027
*.*      MVC       MODEL+6(3),DWORD    SET 3 DIGIT MODEL NUM  DS092207  04000027
         UNPK      DWORD(5),CVTMDL(3,R1) CONVERT MODEL NUMBER DS092207  04001027
         CLI       DWORD,C'0'          TEST FIRST BYTE        DS092207  04002027
         BE        *+4+6+4 ---------+  BRANCH TO TEST BYTE 2  DS092207  04003027
         MVC       MODEL+6(4),DWORD |  SET 4 DIGIT MODEL      DS092207  04004027
         B         PARMSCAN         |  CONTINUE               DS092207  04005027
         CLI       DWORD+1,C'0' <---+  TEST SECOND BYTE       DS092207  04006027
         BE        *+4+6+4 ------------+ BRANCH TO DEFAULT    DS092207  04007027
         MVC       MODEL+6(3),DWORD+1  | SET 3 DIGIT MODEL    DS092207  04008027
         B         PARMSCAN            | CONTINUE             DS092207  04009027
         MVC       MODEL+6(2),DWORD+2 <+ SET 2 DIGIT MODEL    DS092207  04009227
         SPACE     2                                                    04020027
*                                                                       04040027
*        SCAN OFF THE PARM FIELD                                        04060027
*                                                                       04080027
*        CHECK IF ANY PARM FIELD                                        04100027
PARMSCAN DS        0H                                                   04120027
         L         R1,0(,R6)           POINT AT PARM                    04140027
         LH        R2,0(,R1)           PICK UP LENGTH                   04160027
         LTR       R2,R2               TEST FOR NO PARM                 04180027
         BZ        ENDSCN                                               04200027
*        INITIALIZE FOR SCAN                                            04220027
         LA        R1,2(,R1)           INITIALIZE FIELD SCAN POINTER    04240027
         AR        R2,R1               LAST CHARACTER + 1               04260027
*        SCAN OFF ONE WORD                                              04280027
NEXTWORD DS        0H                                                   04300027
         ST        R1,PARMOFF          SAVE INITIAL ADDRESS             04320027
         LR        R4,R1               START OF WORD                    04340027
         LR        R3,R1               INITIALIZE FORMER CHARACTER      04360027
         NI        ERRSW1,X'FF'-ERRLPRN  CLEAR PARENS SWITCH            04380027
         CLI       0(R1),C' '          IS A BLANK FIRST .Q              04400027
         BNE       WORDSCAN            START SCANNING IF NOT            04420027
         CR        R1,R2               TEST FOR END OF PARM             04440027
         BNL       WORDEND             BRANCH IF THAT'S ALL             04460027
         LA        R1,1(,R1)           POINT TO NEXT CHARACTER          04480027
         B         NEXTWORD            AND TRY AGAIN                    04500027
WORDSCAN DS        0H                                                   04520027
         CR        R1,R2               TEST FOR END OF PARM             04540027
         BNL       WORDEND             BRANCH IF AT THE END             04560027
         CLI       0(R1),C','          TEST FOR COMMA                   04580027
         BE        WORDEND             BRANCH IF COMMA                  04600027
         CLI       0(R1),C' '          TEST FOR BLANK                   04620027
         BE        WORDEND             BRANCH IF BLANK                  04640027
         CLI       0(R1),C'='          TEST FOR EQUAL                   04660027
         BE        WORDEND             BRANCH IF EQUAL                  04680027
         CLI       0(R1),C'('          LEFT PAREN                       04700027
         BE        WORDLPRN            BRANCH IF LEFT PAREN             04720027
         LA        R1,1(,R1)           POINT AT NEXT CHARACTER          04740027
         B         WORDSCAN            DO IT AGAIN                      04760027
WORDLPRN DS        0H                                                   04780027
         OI        ERRSW1,ERRLPRN      SET PAREN DELIMITER SWITCH       04800027
*                                                                       04820027
*        COMPUTE PARM LENGTH                                            04840027
WORDEND  DS        0H                                                   04860027
         LR        R5,R1               LAST LETTER OF WORD+1            04880027
WORDEND2 DS        0H                                             V7A27 04890028
         SR        R5,R4               MINUS FIRST LETTER               04900027
         BZ        COMTEST             TEST FOR ZERO LENGTH, NOW OK     04920027
         CH        R5,H12              TEST FOR TOO LONG                04940027
         BH        PARMERR             ERROR IF SO                      04960027
         BCTR      R5,0                LENGTH-1                         04980027
         LA        R3,OPTEST           POINT TO START OF PARAM TABLE    05000027
NEXTOPT  DS        0H                                                   05020027
         CLI       0(R3),X'FF'         AT THE END .Q                    05040027
         BE        NOCHECK             POSSIBLE ERROR IF SO       V7A27 05060028
         IC        R6,OPTPLEN(,R3)     GET MIN LENGTH-1 OF PARM         05080027
         SRL       R6,4                SHIFT                            05100027
         N         R6,F15              AND PURIFY                       05120027
         CR        R5,R6               IS THIS A CANDIDATE .Q           05140027
         BL        BXLEOPT             BRANCH IF NOT                    05160027
         EX        R5,OPTCLC           DO THE COMPARE                   05180027
         BE        FOUND               BRANCH IF THIS IS IT             05200027
BXLEOPT  DS        0H                                                   05220027
         LA        R3,OPTPEND(,R3)     POINT TO NEXT ENTRY              05240027
         B         NEXTOPT             TRY AGAIN                        05260027
OPTCLC   CLC       OPTPSTR(*-*,R3),0(R4)  COMPARE NAMES                 05280027
*                                                                 V7A27 05281028
*        CHECK FOR 'N' AS VALID ALTERNATIVE FOR 'NO'              V7A27 05282028
NOCHECK  DS        0H                                             V7A27 05283028
         CLI       0(R4),C'N'          START WITH 'N' .Q          V7A27 05284028
         BNE       PARMERR             ERROR IF NOT               V7A27 05285028
         CLI       1(R4),C'O'          START WITH 'NO' .Q         V7A27 05286028
         BE        PARMERR             ERROR IF YES               V7A27 05287028
         EX        R5,NOMVC            MOVE CURRENT ARGUMENT      V7A27 05288028
         MVI       NOWORK,C'N'         WITH 'N' AT THE START      V7A27 05289028
         MVI       NOWORK+1,C'O'       AND 'O' NEXT               V7A27 05290028
         LA        R5,NOWORK+2(5)      POINT TO END CHAR PLUS ONE V7A27 05291028
         LA        R4,NOWORK           POINT TO FIRST CHARACTER   V7A27 05292028
         B         WORDEND2            AND GO THROUGH IT AGAIN    V7A27 05293028
NOMVC    MVC       NOWORK+1(*-*),0(R4) MOVE FAILED ARGUMENT       V7A27 05294028
NOWORK   DC        CL13' '             WORK AREA FOR 'NO' PARM    V7A27 05295028
*                                                                       05300027
*        A MATCH HAS BEEN FOUND                                         05320027
FOUND    DS        0H                                                   05340027
         ST        R1,PARMOFF          SAVE CURRENT PARM POINTER        05360027
         IC        R5,OPTPFLGS(,R3)    PICK UP CONTROL BYTE             05380027
         N         R5,F15              KNOCK OFF TOP HALF BYTE          05400027
         AR        R5,R5               DOUBLE IT                        05420027
         LH        R5,ONOFFTBL(R5)     GET ROUTINE OFFSET               05440027
         B         ASMGF1(R5)          DO WHAT CONTROL BYTE SAYS        05460027
ONOFFTBL DC        AL2(ON1ON2-ASMGF1)       CONTROL BYTE =X'0'          05480027
         DC        AL2(OFF1OFF2-ASMGF1)     CONTROL BYTE =X'1'          05500027
         DC        AL2(OFF1ON2-ASMGF1)      CONTROL BYTE =X'2'          05520027
         DC        AL2(ONDIGIT-ASMGF1)      CONTROL BYTE =X'3'          05540027
         DC        AL2(ONSPARM-ASMGF1)      CONTROL BYTE =X'4'          05560027
         DC        AL2(ONSPACE-ASMGF1)      CONTROL BYTE =X'5'          05580027
ON1ON2   DS        0H                                                   05600027
         OC        PARBYT0(6),OPTPBITS(R3)  TURN SWITCHES ON            05620027
         B         SUFFTEST            AND CONTINUE                     05640027
OFF1OFF2 DS        0H                                                   05660027
         NC        PARBYT0(6),OPTPBITS(R3)  TURN SWITCHES OFF           05680027
         B         SUFFTEST            AND CONTINUE                     05700027
OFF1ON2  DS        0H                                                   05720027
         NC        PARBYT0(2),OPTPBITS(R3)  TURN SOME BITS OFF          05740027
         OC        PARBYT(4),OPTPBITS+2(R3) AND SOME BITS ON            05760027
SUFFTEST DS        0H                                                   05780027
         TM        OPTPFLGS(R3),X'40'  IS THIS AN XREF SUFFIX .Q        05800027
         BO        ONSXREF             BRANCH IF YES                    05820027
         B         COMTEST             GO TEST FOR COMMAS AND BLANKS    05840027
ONDIGIT  DS        0H                                                   05860027
*        SCAN OFF NUMBER                                                05880027
         CLI       0(R1),C'='          EQUAL DELIMITER .Q               05900027
         BE        ONDIGDLM            BRANCH IF YES                    05920027
         CLI       0(R1),C'('          PAREN DELIMITER .Q               05940027
         BNE       ONDIGST             BRANCH IF NOT                    05960027
         OI        ERRSW1,ERRLPRN      SET PARENS SWITCH                05980027
ONDIGDLM DS        0H                                                   06000027
         LA        R1,1(,R1)           BUMP PAST DELIMITER              06020027
ONDIGST  DS        0H                                                   06040027
         LR        R4,R1               1ST DIGIT IN NUMBER              06060027
NUMSCAN  DS        0H                                                   06080027
         CR        R1,R2               TEST FOR END OF PARM FIELD       06100027
         BE        NUMEND                                               06120027
         CLI       0(R1),C'0'          TEST FOR NUMERIC                 06140027
         BL        NUMEND                                               06160027
         CLI       0(R1),C'9'                                           06180027
         BH        NUMEND                                               06200027
         LA        R1,1(,R1)           POINT AT NEXT CHARACTER          06220027
         B         NUMSCAN                                              06240027
NUMEND   DS        0H                                                   06260027
         LR        R5,R1               COMPUTE LENGTH OF NUMBER         06280027
         SR        R5,R4                                                06300027
         BZ        PARMERR             ERROR IF NO DIGITS               06320027
         C         R5,F7               TEST FOR TOO MANY DIGITS         06340027
         BH        PARMERR                                              06360027
         BCTR      R5,0                LENGTH-1                         06380027
         EX        R5,PARMPACK         PACK DIGITS INTO DWORD           06400027
         CVB       R4,DWORD            PLACE BINARY NUM IN R4           06420027
*        TEST IF NUMBER FOLLOWED BY LETTER K                            06440027
         CR        R1,R2               TEST FOR END OF PARM FIELD       06460027
         BE        NOK                                                  06480027
         CLI       0(R1),C'K'          TEST FOR LETTER K                06500027
         BNE       NOK                                                  06520027
         LA        R1,1(,R1)           POINT AT NEXT CHARACTER          06540027
         SLA       R4,10               MULTIPLY BY 1024                 06560027
         BO        PARMERR             TEST FOR OVERFLOW                06580027
NOK      DS        0H                                                   06600027
         SR        R5,R5               ZERO OFFSET REGISTER             06620027
         IC        R5,OPTPBITS(,R3)    1ST HALF OF OFFSET INTO TAB3PARM 06640027
         SLL       R5,8                MOVE ONE BYTE OVER               06660027
         IC        R5,OPTPBITS+1(,R3)  2ND HALF OF OFFSET INTO TAB3PARM 06680027
         C         R4,TAB3PARM+TAB3MIN(R5)  CHECK FOR BIG ENOUGH        06700027
         BL        PARMERR                  BRANCH IF TOO SMALL         06720027
*                                                                       06740027
         CL        R4,TAB3PARM+TAB3MAX(R5)  CHECK FOR SMALL ENOUGH      06760027
         BH        PARMERR                  BRANCH IF TOO BIG           06780027
         ST        R4,TAB3PARM+TAB3DEF(R5)  STORE CONVERTED NUMBER      06800027
PNCMTEST DS        0H                                                   06820027
         TM        ERRSW1,ERRLPRN      LEFT PARENS AROUND PARM .Q       06840027
         BZ        COMTEST             BRANCH IF NOT                    06860027
         CLI       0(R1),C')'          RIGHT PAREN                      06880027
         BE        BLKTEST             IGNORE IT IF SO                  06900027
COMTEST  DS        0H                                                   06920027
         ST        R1,PARMOFF          SAVE CURRENT PARM POINTER        06940027
         CR        R1,R2               TEST FOR END OF PARM FIELD       06960027
         BNL       ENDSCN                                               06980027
         CLI       0(R1),C' '          TEST FOR A BLANK                 07000027
         BE        BLKTEST             BRANCH IF YES                    07020027
         CLI       0(R1),C','          TEST FOR COMMA                   07040027
         BNE       PARMERR             THEN IT MUST BE AN ERROR         07060027
BLKTEST  DS        0H                                                   07080027
         LA        R1,1(,R1)           POINT AT NEXT CHARACTER          07100027
         B         NEXTWORD            GET NEXT PARM                    07120027
*                                                                       07140027
*        SCAN OFF SYSPARM AND ITS LENGTH                                07160027
*                                                                       07180027
ONSPARM  DS        0H                                                   07200027
         CLI       0(R1),C'='          EQUAL DELIMITER .Q               07220027
         BE        ONSPARM1            BRANCH IF YES                    07240027
         CLI       0(R1),C'('          PAREN DELIMITER .Q               07260027
         BNE       PARMERR             BRANCH TO ERROR IF NOT           07280027
ONSPARM1 DS        0H                                                   07300027
         LA        R1,1(,R1)           BUMP INPUT POINTER               07320027
         ST        R1,L1ASPARM(,R9)    REMEMBER WHERE PARM STARTS       07340027
         ST        R1,PARMOFF          SAVE CURRENT PARM POINTER        07360027
         SR        R3,R3               ZERO LENGTH OF PARM              07380027
         SR        R4,R4               ZERO QUOTE BRACKET COUNTER       07400027
         CR        R1,R2               AT THE STRING END .Q             07420027
         BNL       SYSPDONE            BRANCH IF YES                    07440027
*                                                                       07460027
         CLI       0(R1),C''''         DO QUOTES SURROUND PARM .Q       07480027
         BNE       SYSPBRAK            NO, CHECK FOR BRACKETS           07500027
SYSPQ1   DS        0H                                                   07520027
         BCTR      R4,0                OUTSTANDING QUOTE                07540027
SYSPQ2   DS        0H                                                   07560027
         BAL       R5,SYSPBUMP         BUMP POINTERS                    07580027
         CLI       0(R1),C''''         A QUOTE .Q                       07600027
         BNE       SYSPQ2              NO, GO BACK                      07620027
         SR        R4,R4               NO OUTSTANDING QUOTE             07640027
         BAL       R5,SYSPBUMP         BUMP POINTERS                    07660027
         CLI       0(R1),C''''         A DOUBLE QUOTE .Q                07680027
         BE        SYSPQ1              YES, GO BACK                     07700027
         B         SYSPDONE            THAT'S IT                        07720027
*                                                                       07740027
SYSPBRAK DS        0H                                                   07760027
         TM        ERRSW1,ERRLPRN      PARENS AROUND PARM .Q            07780027
         BZ        SYSPB0              BRANCH IF NOT                    07800027
         BCTR      R1,0                DECREMENT INPUT POINTER          07820027
*                                                                       07840027
SYSPB0   DS        0H                                                   07860027
         CLI       0(R1),C'('          DO BRACKETS SURROUND PARM .Q     07880027
         BNE       SYSPORD             NO, ORDINARY COMMA CASE          07900027
SYSPB1   DS        0H                                                   07920027
         LA        R4,1(,R4)           BUMP '(' COUNT                   07940027
SYSPB2   DS        0H                                                   07960027
         BAL       R5,SYSPBUMP         BUMP POINTERS                    07980027
         CLI       0(R1),C'('          MORE '(' .Q                      08000027
         BE        SYSPB1              YES, GO BACK AND BUMP COUNT      08020027
         CLI       0(R1),C')'          IS IT ')' .Q                     08040027
         BNE       SYSPB2              NO, GO BACK AND PROCEED          08060027
         BCTR      R4,0                DECREMENT BRACKET COUNT          08080027
         LTR       R4,R4               DO BRACKETS MATCH .Q             08100027
         BNZ       SYSPB2              NOT YET, GO BACK                 08120027
         TM        ERRSW1,ERRLPRN      LEFT PARENS AROUND PARM .Q       08140027
         BO        SYSPB3              BRANCH IF YES                    08160027
         LA        R3,1(,R3)           ANTICIPATE END OF STRING         08180027
         BAL       R5,SYSPBUMP         BUMP POINTERS TO COMMA           08200027
         BCTR      R3,0                NO END OF STRING                 08220027
         B         SYSPDONE            ALMOST READY TO GO BACK          08240027
SYSPB3   DS        0H                                                   08260027
         BCTR      R3,0                DECREMENT LENGTH BY TRAILING ')' 08280027
         B         SYSPDONE            AND QUIT                         08300027
*                                                                       08320027
SYSPORD  DS        0H                                                   08340027
         CLI       0(R1),C','          TERMINATING COMMA .Q             08360027
         BE        SYSPDONE            YES, THAT'S ALL                  08380027
         LA        R3,1(,R3)           ANTICIPATE END OF STRING         08400027
         BAL       R5,SYSPBUMP         BUMP POINTERS                    08420027
         BCTR      R3,0                NO END OF STRING                 08440027
         B         SYSPORD             TRY AGAIN                        08460027
*                                                                       08480027
SYSPDONE DS        0H                                                   08500027
         LTR       R4,R4               ANY OUTSTANDING ')' OR ',' .Q    08520027
         BNZ       PARMERR             IF SO, THEN AN ERROR             08540027
         STC       R3,L1ASPARM(,R9)    SAVE LENGTH OF PARM              08560027
         B         PNCMTEST            RETURN                           08580027
*                                                                       08600027
SYSPBUMP DS        0H                                                   08620027
         LA        R1,1(,R1)           BUMP PARM POINTER                08640027
         CR        R1,R2               TEST FOR END OF PARM FIELD       08660027
         BNL       SYSPDONE            NO PARM LEFT                     08680027
         LA        R3,1(,R3)           BUMP LENGTH                      08700027
         BR        R5                  NORMAL RETURN                    08720027
         SPACE     2                                                    08740027
ONSPACE  DS        0H                                                   08760027
         CLI       0(R1),C'='          EQUAL DELIM .Q                   08780027
         BE        ONSPACE2            YES                              08800027
         CLI       0(R1),C'('          PAREN DELIMITER .Q               08820027
         BE        ONSPACE2            YES                              08840027
ONSPACE1 DS        0H                                                   08860027
         LA        R3,SPACEEQ          POINT TO SPACE=N                 08880027
         B         FOUND               AND CONTINUE                     08900027
ONSPACE2 DS        0H                                                   08920027
         CLC       =C'MAX-',1(R1)      IS THIS IT                       08940027
         BNE       ONSPACE3            BRANCH IF NOT                    08960027
         LA        R1,5(,R1)           UP INPUT POINTER                 08980027
         LA        R3,SPACEMM          POINT TO SPACE=MAX-              09000027
         B         FOUND               AND CONTINUE                     09020027
ONSPACE3 DS        0H                                                   09040027
         CLC       =C'MAX',1(R1)       IS THIS IT .Q                    09060027
         BNE       ONSPACE4            BRANCH IF NOT                    09080027
         LA        R1,4(,R1)           UP INPUT POINTER                 09100027
         LA        R3,SPACEMX          POINT TO SPACE=MAX               09120027
         B         FOUND               AND CONTINUE                     09140027
ONSPACE4 DS        0H                                                   09160027
         LA        R1,1(,R1)           GET OVER DELIMITER               09180027
         B         ONSPACE1            SPACE999 ALL THAT'S LEFT         09200027
         SPACE     2                                                    09220027
ONSXREF  DS        0H                                                   09240027
         CLI       0(R1),C'='          EQUAL DELIMITER .Q               09260027
         BE        ONSXREFP            YES                              09280027
         CLI       0(R1),C'('          PAREN DELIMITER .Q               09300027
         BE        ONSXREFP            YES                              09320027
ONSXREFA DS        0H                                                   09340027
         NI        PARBYT3,X'FF'-XREFFS  XREF(FULL)                     09360027
         MVI       XREFSUFX,X'00'      SET SUFFIX LENGTH ZERO           09380027
         B         COMTEST             CHECK FOR COMMAS AND BLANKS      09400027
ONSXREFP DS        0H                                                   09420027
         CLC       =C'FULL',1(R1)      XREF(FULL) .Q                    09440027
         BNE       ONSXREFQ            BRANCH IF NO                     09460027
         NI        PARBYT3,X'FF'-XREFFS  XREF(FULL)                     09480027
         ST        R1,XREFSUFX         SAVE XREF SUFFIX ADDRESS         09500027
         MVI       XREFSUFX,X'04'      SET SUFFIX LENGTH                09520027
         LA        R1,5(,R1)           POINT AFTER FULL                 09540027
         B         PNCMTEST            CHECK FOR DELIMS                 09560027
ONSXREFQ DS        0H                                                   09580027
         CLC       =C'SHORT',1(R1)     XREF(SHORT) .Q                   09600027
         BNE       ONSXREFA            BRANCH IF NOT                    09620027
         OI        PARBYT3,XREFFS      XREF(SHORT)                      09640027
         ST        R1,XREFSUFX         SAVE XREF SUFFIX ADDRESS         09660027
         MVI       XREFSUFX,X'05'      SET SUFFIX LENGTH                09680027
         LA        R1,6(,R1)           POINT AFTER SHORT                09700027
         B         PNCMTEST            AND CONTINUE                     09720027
         SPACE     2                                                    09740027
PARMPACK PACK      DWORD(8),0(*-*,R4)  EX'ED INSTRUCTION                09760027
MOVEPARM MVC       LINE+L'OVERRIDE+1(*-*),2(R6)  EX'ED MOVE PARM INST   09780027
PARMERR  DS        0H                                                   09800027
         OI        ERRSW1,ERRBDPM      SET PARM FIELD ERROR SW FOR F2   09820027
         SPACE     2                                                    09840027
*        CHECK IF CONFLICTING SPACE PARAMETERS ARE IN EFFECT            09860027
*        IF SO TURN OFF ALL BUT ONE                                     09880027
*        LOWEST PRIORITY SHOULD BE GIVEN TO DEFAULT FORM                09900027
ENDSCN   DS        0H                                                   09920027
         CLI       SPACEPOS+TAB3DEF,X'FF'  TEST FOR SPACE=N FORM        09940027
         BE        TRYMAX                                               09960027
         NI        PARBYT2,X'FF'-SPACEM  TURN OFF SPACE=MAX             09980027
OFFMAXN  DS        0H                                                   10000027
         MVI       SPACENEG+TAB3DEF,X'FF'  TURN OFF SPACE=MAX-N         10020027
         B         OPEN                                                 10040027
TRYMAX   DS        0H                                                   10060027
         TM        PARBYT2,SPACEM      TEST FOR SPACE=MAX               10080027
         BO        OFFMAXN             BRANCH IF YES                    10100027
         EJECT                                                          10120027
OPEN     DS        0H                                                   10140027
         LTR       R10,R10             BYPASS OPEN IF NOT 1ST F1 TIME   10160027
         BNE       HEADING             BRANCH TO PRINT HEADING          10180027
*                                                                       10200027
*        PICK UP BLKSIZES SPECIFIED BY USER ON UTILITY DD CARDS         10220027
         LM        R6,R8,=A(4,8,0)     INIT BXLE REGS                   10240027
LOOPJFCB DS        0H                                                   10260027
         L         R2,L1DCBADS+L1SUT1(R8,R9)  GET ADDRESS OF UT DCB     10280027
         MVC       IOSAVE+1(3),DCBEXLST(R2) SAVE UTILITY EXLST          10300027
         MVC       DCBEXLST(3,R2),=AL3(UTEXLST) POINTER FOR JFCB        10320027
         RDJFCB    ((R2))              GET DD CARD DATA                 10340027
         MVC       L1DCBBLK(2,R2),UTJFCB+JFCBLKSI  SAVE USER'S BLKSIZE  10360027
         MVC       DCBEXLST(3,R2),IOSAVE+1 RESTORE UTILITY EXLST        10380027
         BXLE      R8,R6,LOOPJFCB      LOOP FOR ALL UTILITIES           10400027
         AIF       (NOT &SYSGO).NOSYSGO                                 10420027
*        CHECK IF SYSLIN OR SYSGO IS IN THE TIOT                        10440027
         L         R8,L1DCBADS+L1SLIN(,R9)  SYSLIN DCB ADDRESS          10460027
         TM        DCBOFLGS(R8),X'10'  IS IT ALREADY OPEN .Q            10480027
         BO        OPENAWAY            BRANCH IF YES                    10500027
         LA        R1,L1DDNAM+2*L1SLIN(,R9)  POINT AT SYSLIN DDNAME     10520027
         BAL       R14,SRCHTIOT        TEST IF IN TIOT                  10540027
         BE        OPENAWAY            BR IF SO                         10560027
         LA        R1,=CL8'SYSGO'      POINT AT NAME SYSGO              10580027
         BAL       R14,SRCHTIOT        TEST IF SYSGO IN TIOT            10600027
         BNE       OPENAWAY            BR IF NOT                        10620027
         MVC       L1DDNAM+2*L1SLIN(8,R9),=CL8'SYSGO' NEW SYSLIN DDNAME 10640027
         MVC       DCBDDNAM(8,R8),=CL8'SYSGO' REPLACE NAME IN DCB       10660027
OPENAWAY DS        0H                  CARRY ON                         10680027
.NOSYSGO ANOP                                                           10700027
*        PICK UP THE DCB ADDRESS AND PUT THEM IN THE OPEN EXPANSION     10720027
         OC        OPADLIN(4*10),L1DCBADS(R9)  DCB ADDRESSES TO OPEN    10740027
*        TEST IF THE OPTIONAL DATASETS SHOULD BE OPENED                 10760027
         TM        PARBYT,DECK         TEST DECK OPTION                 10780027
         BO        *+10                                                 10800027
         MVC       OPADPCH(3*4),OPADPCH+4 REMOVE SYSPUNCH ENTRY         10820027
         L         R8,L1DCBADS+L1SPRINT(,R9)  GET SYSPRINT DCB ADDRESS  10840027
         TM        DCBOFLGS(R8),X'10'  IS SYSPRINT ALREADY OPEN .Q      10860027
         BO        OPENUPDT            BRANCH IF YES                    10880027
         TM        PARBYT3,PRT         IS PRINT ON .Q                   10900027
         BZ        OPENDPRT            NO, DUMMY OPEN AND BR14 RETURN   10920027
         LA        R1,L1DDNAM+2*L1SPRINT(,R9)  POINT AT SYSPRINT DDNAME 10940027
         BAL       R14,SRCHTIOT        TEST IF SYSPRINT IN TIOT         10960027
         BE        OPENUPDT            PROCEED IF IT IS                 10980027
         TM        PARBYT,LIST         IS NOLIST ON .Q                  11000027
         BO        OPENUPDT            NO, TERMINATE FOR NO SYSPRINT    11020027
OPENDPRT DS        0H                                                   11040027
         TM        PARBYT2,TERM        IS TERM ON .Q                    11060027
         BZ        OPENUPDT            NO, TERMINATE FOR NO SYSPRINT    11080027
         MVC       OPADPRT(5*4),OPADPRT+4 REMOVE SYSPRINT ENTRY         11100027
         LA        R1,L1DPTRTN(,R9)    ADDRESS OF DUMMY PRINT ROUTINE   11120027
         ST        R1,DCBGET(,R8)      FAKE IN SYSPRINT PUT ADDRESS     11140027
         MVI       DCBOFLGS(R8),X'10'  MARK IT OPEN LOCKED              11160027
         NI        PARBYT0,X'FF'                           TURN         11180027
         NI        PARBYT1,X'FF'-FUPLIST-ESD-FLIST-FXREF   OFF          11200027
         NI        PARBYT,X'FF'-LIST-RLD-UPLIST-XREF       ANYTHING     11220027
         NI        PARBYT2,X'FF'-LREF                      THAT         11240027
         NI        PARBYT3,X'FF'-UMAP                      PRINTS       11260027
         NI        PARBYT4,X'FF'                           ANYTHING     11280027
OPENUPDT DS        0H                  CHECK SYSLIB IN TIOT             11300027
         L         R8,L1DCBADS+L1SLIB(,R9)   SYSLIB DCB ADDRESS         11320027
         LA        R1,L1DDNAM+2*L1SLIB(,R9)  POINT AT SYSLIB DDNAME     11340027
         MVC   DIRDCB+DCBDDNAM(8),0(R1)                                 11360027
         BAL       R14,SRCHTIOT        TEST IF SYSLIB PRESENT           11380027
         BE        OPENSYUP            BRANCH IF IT IS                  11400027
         MVC       OPADLIB(6*4),OPADLIB+4 REMOVE SYSLIB ENTRY           11420027
OPENSYUP DS        0H                  NOW CHECK SYSUP                  11440027
         TM        PARBYT2,UPDATE      TEST UPDATE OPTION               11460027
         BO        *+10                                                 11480027
         MVC       OPADUP(7*4),OPADUP+4 REMOVE UPDATE ENTRY             11500027
         TM        PARBYT2,TERM        TEST TERM OPTION                 11520027
         BO        *+10                                                 11540027
         MVC       OPADTER(8*4),OPADTER+4 REMOVE SYSTERM ENTRY          11560027
         TM        PARBYT,LOAD         TEST LOAD OPTION                 11580027
         BO        *+10                                                 11600027
         MVC       OPADLIN(9*4),OPADLIN+4 REMOVE SYSLIN ENTRY           11620027
*        LOAD UP BRANCH ADDRESS FOR DUMMY EXLST ROUTINE IN ASM          11640027
         LA        R8,EXLST  SET BRANCH ADDRESS FOR EXLST ROUT. IN ASM  11660027
*        DO THE OPEN                                                    11680027
         OPEN (*-*,(OUTPUT,REREAD),    SYSLIN                          X11700027
               *-*,(OUTPUT,REREAD),    SYSTERM                         X11720027
               *-*,(INPUT,REREAD),     SYSUP                           X11740027
               *-*,(INPUT,REREAD),     SYSLIB                          X11760027
               *-*,(INPUT,REREAD),     SYSIN                           X11780027
               *-*,(OUTPUT,REREAD),    SYSPRINT                        X11800027
               *-*,(OUTPUT,REREAD),    SYSPUNCH                        X11820027
               *-*,(OUTIN,REREAD),     SYSUT1                          X11840027
               *-*,(OUTIN,REREAD),     SYSUT2                          X11860027
               *-*,(OUTIN,REREAD))     SYSUT3                           11880027
*        ADDRESSES OF THE ADDRESSES IN THE OPEN PARAMETER LIST          11900027
OPADLIN  EQU       *-2-10*4            SYSLIN                           11920027
OPADTER  EQU       *-2-9*4             SYSTERM                          11940027
OPADUP   EQU       *-2-8*4             SYSUP                            11960027
OPADLIB  EQU       *-2-7*4             SYSLIB                           11980027
OPADPRT  EQU       *-2-5*4             SYSPRINT                         12000027
OPADPCH  EQU       *-2-4*4             SYSPUNCH                         12020027
*        OPEN ROUTINE ALL DONE                                          12040027
         LA        R1,L1OUTRTN(,R9)    GET OUT ROUTINE ADDRESS          12060027
         ST        R1,IOSAVE           SAVE IT                          12080027
         LA        R2,OPADLIN-4        POINT AT OPEN ADDR LIST          12100027
PTCHLOOP DS        0H                                                   12120027
         LA        R2,4(,R2)           POINT TO NEXT DCB ADDRESS        12140027
         L         R5,0(,R2)           GET NEXT DCB ADDRESS             12160027
         TM        L1DCBPAD(R5),X'08'  IS IT PUT MONITORED .Q           12180027
         BZ        PTCHARND            BRANCH IF NOT                    12200027
         MVC       L1DCBPAD+1(3,R5),DCBGET+1(R5) SAVE REAL ADDRESS      12220027
         MVC       DCBGET+1(3,R5),IOSAVE+1       PUT IN DUMMY ADDRESS   12240027
PTCHARND DS        0H                                                   12260027
         LTR       R5,R5               TEST FOR LAST DCB IN LIST        12280027
         BP        PTCHLOOP            BRANCH IF NOT LAST               12300027
         L         R1,L1DCBADS+L1SIN(,R9)  POINT AT SYSIN DCB           12320027
         MVC       L1DCBPAD+1(3,R1),DCBGET+1(R1)  SAVE REAL GET ADDRESS 12340027
         MVC       L1SINAD+5(3,R9),DCBGET+1(R1)   SAVE FOR SYSINMON     12360027
         MVC       DCBGET+1(3,R1),L1SINAD+1(R9)   INSERT SYSINMON ADDR  12380027
         B         HEADING             GO AND PROCESS HEADING           12400027
*                                                                       12420027
*        EXLST FOR UTILITIES WHILE READING THE JFCB                     12440027
UTEXLST  DC        0F'0',X'87',AL3(UTJFCB) EXLST USED BY RDJFCB         12460027
*                                                                       12480027
         SPACE     2                                                    12500027
*                                                                       12520027
*        THIS SUBROUTINE ATTEMPTS TO FIND A DDNAME IN THE TIOT          12540027
*        ENTER WITH R1 POINTING AT THE DDNAME AND R8 AT THE DCB.        12560027
*        ON RETURN, THE CONDITION CODE REFLECTS THE SEARCH'S            12580027
*        SUCCESS AND R15 AS THE ENTRY POINTER.                          12600027
*                                                                       12620027
SRCHTIOT DS        0H                                                   12640027
         TM        PARBYT3,CMS         ARE WE UNDER CMS .Q              12660027
         BO        TIOTCMS             YES, THEN THERE IS NO TIOT       12680027
         L         R15,CVTPTR          CVT POINTER                      12700027
         L         R15,0(,R15)         TCB ADDRESS PAIR                 12720027
         L         R15,4(,R15)         MY TCB                           12740027
         L         R15,12(,R15)        MY TIOT                          12760027
         LA        R15,24(,R15)        1ST ENTRY IN TIOT                12780027
         SR        R0,R0               CLEAR R0                         12800027
TIOTLOOP DS        0H                                                   12820027
         IC        R0,0(,R15)          PICK UP TIOT ENTRY LENGTH        12840027
         LTR       R0,R0               TEST FOR LAST                    12860027
         BE        TIOTFAIL                                             12880027
         CLC       4(8,R15),0(R1)      COMPARE DD NAMES                 12900027
         BCR       8,R14               RETURN IF FOUND                  12920027
         AR        R15,R0              POINT AT NEXT ENTRY              12940027
         B         TIOTLOOP                                             12960027
TIOTFAIL DS        0H                                                   12980027
         CLI       *,0                 SET CC                           13000027
         BR        R14                 RETURN                           13020027
TIOTCMS  DS        0H                                                   13040027
         MVC       IOSAVE+1(3),DCBEXLST(R8)  SAVE DCB EXIT LIST ADDR    13060027
         MVC       DCBEXLST(3,R8),=AL3(UTEXLST)  SET MY EXIT LIST       13080027
         RDJFCB    ((R8))              GET SOME INFORMATION             13100027
         MVC       DCBEXLST(3,R8),IOSAVE+1   RESTORE ORIGINAL DCB EXLST 13120027
         CLC       UTJFCB+1(175),UTJFCB  ANY DATA PRESENT .Q            13140027
         BZ        TIOTFAIL            IF NONE, NO FILEDEF PRESENT      13160027
         SR        R0,R0               INDICATE SUCCESS                 13180027
         BR        R14                 AND RETURN                       13200027
         EJECT                                                          13220027
*        EXLST ROUTINE                                                  13240027
*        THIS ROUTINE ENTERED FOR ALL DCB'S BEING OPENED                13260027
*                                                                       13280027
EXLST    DS        0H                                                   13300027
         STM       R14,R2,IOSAVE       MOVE SOME REGISTERS TO STORAGE   13320027
*        TEST IF UTILITY, AND IF SO SET THE BLKSIZE FROM THE DD CARD    13340027
***      CLI       DCBRECFM(R1),X'C0'  TEST FOR UTILITY (RECFM = U)     1336??27
***      BNE       *+14                SKIP IF NOT                      1338??27
***      MVC       DCBBLKSI(2,R1),L1DCBBLK(R1)  PLACE BLKSIZE FROM JFCB 1340??27
*./      DELETE    SEQ1=13340027,SEQ2=13360027                    V7A42 13340027
         LA        R1,0(,R1)           CLEAR HIGH ORDER BYTE      V7A42 13340028
         C         R1,L1DCBADS+L1SUT1(,R9)       SYSUT1 .Q        V7A42 13341028
         BE        EXUTIL              IF YES, GO PROCESS IT      V7A42 13342028
         C         R1,L1DCBADS+L1SUT2(,R9)       SYSUT2 .Q        V7A42 13343028
         BE        EXUTIL              IF YES, GO PROCESS IT      V7A42 13344028
         L         R5,L1DCBADS+L1SUT3(,R9)       SYSUT3 DCBAD     V7A42 13345028
         LA        R5,0(,R5)           CLEAR HIGH ORDER BYTE      V7A42 13346028
         CR        R1,R5               SYSUT3 .Q                  V7A42 13347028
         BE        EXUTIL              IF YES, GO PROCESS IT      V7A42 13348028
         OC        L1DBLK(8,R9),L1DBLK(R9)  DEBLOCKING RTN HERE   V7A42 13349028
         BZ        EXBEGIN             BRANCH IF NOT              V7A42 13350028
         C         R1,L1DCBADS+L1SLIB(,R9)       SYSLIB .Q        V7A42 13351028
         BNE       EXNUTIL             IF NOT, PROCESS OTHERS     V7A42 13352028
*                                                                 V7A42 13353028
*        HERE TO PROCESS SYSLIB.  FORCE RECFM=U AND MAKE          V7A42 13354028
*        BLKSIZE THE NEXT STRICTLY LARGER MULTIPLE OF 8.          V7A42 13355028
*                                                                 V7A42 13356028
         OI        DCBRECFM(R1),X'C0'  MAKE RECFM = 'U'           V7A42 13357028
         LH        R5,DCBBLKSI(,R1)    GET THE BLOCK SIZE         V7A42 13358028
         N         R5,=F'-8'           ROUND TO MULT OF EIGHT     V7A42 13359028
         S         R5,=F'-8'           MAKE IT NEXT MULTIPLE      V7A42 13360028
         STH       R5,DCBBLKSI(,R1)    SAVE IT BACK IN DCB        V7A42 13361028
         B         EXLSTEND            GO RETURN TO OPEN          V7A42 13362028
*                                                                 V7A42 13363028
*        HERE TO PROCESS UTILITY DATA SETS                        V7A42 13364028
*                                                                 V7A42 13365028
EXUTIL   DS        0H                                             V7A42 13366028
         XC        DCBLRECL(2,R1),DCBLRECL(R1)    CLEAR LRECL     V7A26 13382028
         MVI       DCBKEYLE(R1),X'00'  AND KEY LENGTH             V7A26 13384028
         B         EXLSTEND            AND GO TO RETURN                 13400027
*                                                                 V7A42 13401028
*        HERE IF NOT A UTILITY OR SYSLIB                          V7A42 13402028
*                                                                 V7A42 13403028
EXNUTIL  DS        0H                  JOIN HERE                  V7A42 13404028
         TM        DCBRECFM(R1),X'40'  RECFM= 'V' OR 'U' .Q       V7A42 13405028
         BZ        EXBEGIN             IF NOT, MUST BE F (NORMAL) V7A42 13406028
         C         R1,L1DCBADS+L1SIN(,R9)        SYSIN .Q         V7A42 13407028
         BE        EXLSTEND            IF SO, DON'T DO ANYTHING   V7A42 13408028
         C         R1,L1DCBADS+L1SUP(,R9)        SYSUP .Q         V7A42 13409028
         BE        EXLSTEND            AGAIN, IF SO RETURN        V7A42 13410028
*        FOR OTHER DATASETS FIND ENTRY IN DCBTAB AND PICK UP LRECL      13420027
EXBEGIN  DS        0H                                             V7A42 13430028
         BAL       R8,DCBTABFI         CALL SUB. TO FIND DCBTAB ENTRY   13440027
         LH        R7,DCBLRECL(,R1)    PICK UP LRECL FROM DCB           13460027
         LA        R8,133              FOR SYSPRINT AND SYSTERM         13480027
         CH        R8,0(,R3)           IS IT SYSPRINT OR SYSTERM .Q     13500027
         BNE       FETBLKSI            BRANCH IF NOT                    13520027
         CR        R8,R7               WAS 133 SPECIFIED .Q             13540027
         BE        FETBLKSI            BRANCH IF YES                    13560027
         SH        R8,H12              MAKE IT 121 THEN                 13580027
         LR        R7,R8               SET IT IN REGISTER               13600027
         STH       R7,DCBLRECL(,R1)    SET IT IN DCB                    13620027
         STH       R7,0(,R3)           AND SET IT IN TABLE              13640027
FETBLKSI DS        0H                                                   13660027
*        TEST BLKSIZE                                                   13680027
         LH        R5,DCBBLKSI(,R1)    FETCH BLOCKSIZE                  13700027
         LTR       R5,R5               TEST IF USER SPECIFIED           13720027
         BZ        DEFBLKSI                                             13740027
         SR        R4,R4                                                13760027
         DR        R4,R7               TEST BLKSIZE MULTIPLE OF LRECL   13780027
         LTR       R4,R4                                                13800027
         LH        R5,DCBBLKSI(,R1)    RESTORE BLKSIZE                  13820027
         BZ        BLKEDTST                                             13840027
         OI        5(R3),X'40'         SET BLKSIZE ERROR SWITCH         13860027
DEFBLKSI DS        0H                                                   13880027
         LH        R5,0(,R3)           DEFAULT BLKSIZE                  13900027
         STH       R5,DCBBLKSI(,R1)                                     13920027
*        TEST IF BLOCKED                                                13940027
BLKEDTST DS        0H                                                   13960027
         CR        R5,R7               SEE IF BLKSIZE .GT. LRECL        13980027
         BE        BUFNOCK                                              14000027
         OI        DCBRECFM(R1),X'10'  TURN ON B BIT                    14020027
*        CHECK BUFNO                                                    14040027
BUFNOCK  DS        0H                                                   14060027
         CLI       DCBBUFNO(R1),X'00'  SEE IF USER SPECIFIED BUFNO      14080027
         BNE       EXLINST             YES, HE DID                      14100027
         MVC       DCBBUFNO(1,R1),2(R3) SET DEFAULT BUFNO               14120027
*                                                                       14140027
*        DETERMINE IF SYSIN AND SYSLIN CAN SHARE BUFFERS                14160027
EXLINST  DS        0H                                                   14180027
         C         R1,ADCBIN           IS THIS SYSIN .Q                 14200027
         BNE       EXLSTEND            NO                               14220027
         TM        PARBYT1,BATCH       TEST IF BATCH .Q                 14240027
         BO        EXLSTEND            NO IT'S NOT                      14260027
         TM        PARBYT2,EXECUTE     TEST IF EXECUTE .Q               14280027
         BO        EXLSTEND            YES, CAN'T SHARE BUFFERS         14300027
         TM        PARBYT3,CMS         TEST IF CMS .Q                   14320027
         BO        EXLSTEND            YES, DON'T SHARE BUFFERS         14340027
         TM        DCBRECFM(R1),X'C0'  IS THIS RECFM 'U' .Q       V7A42 14342028
         BO        EXLSTEND            OF SO, DON'T SHARE BUFFERS V7A42 14344028
*                                                                       14360027
*        DETERMINE THE LARGEST BLKSIZE AND BUFNO.  COMPUTE              14380027
*        THE SIZE OF A COMBINED BUFFER POOL VS TWO SIMPLE POOLS.        14400027
         SR        R4,R4               PREPARE REGISTER                 14420027
         IC        R4,DCBBUFNO(,R1)    AND INSERT SYSIN BUFNO           14440027
         LR        R7,R4               TRANSFER IT                      14460027
         MH        R7,DCBBLKSI(,R1)    APPROX SYSIN POOL SIZE           14480027
         L         R10,L1DCBADS+L1SLIN(,R9)  SYSLIN DCB ADDRESS         14500027
         SR        R6,R6               PREPARE REGISTER                 14520027
         IC        R6,DCBBUFNO(,R10)   AND INSERT SYSLIN BUFNO          14540027
         CR        R4,R6               PICK LARGEST BUFNO               14560027
         BNL       *+6                 SYSIN WAS LARGER                 14580027
         LR        R4,R6               SYSLIN WAS LARGER                14600027
         MH        R6,DCBBLKSI(,R10)   APPROX SYSLIN POOL SIZE          14620027
         AR        R7,R6               TOTAL FOR TWO SIMPLE POOLS       14640027
         LH        R6,DCBBLKSI(,R10)   SYSLIN BLKSIZE                   14660027
         CR        R5,R6               PICK LARGEST BLKSIZE             14680027
         BNL       *+6                 SYSIN WAS LARGER                 14700027
         LR        R5,R6               SYSLIN WAS LARGER                14720027
         LA        R5,4(,R5)           ADD 4 TO BLKSIZE FOR DUMMY PTRS  14740027
         LR        R9,R5               LOAD LARGEST BLKSIZE             14760027
         MR        R8,R4               COMPUTE COMBINED POOL SIZE       14780027
         CR        R9,R7               TEST IF COMBINED POOL SMALLEST   14800027
         BH        EXLSTEND            BR IF TWO SIMPLE POOLS SMALLER   14820027
*                                                                       14840027
*        GET A BUFFER POOL AND SET ITS ADDRESS IN DCBS                  14860027
         LA        R0,8(,R9)           ADD 8 FOR BUFCB                  14880027
         LR        R9,R1               SAVE SYSIN DCB ADDRESS           14900027
         GETMAIN   R,LV=(0)            GET THE CORE                     14920027
         ST        R1,IOSAVE+4         BUFCB ADDR                       14940027
         MVC       DCBBUFCB(3,R9),IOSAVE+5  IN SYSIN DCB                14960027
         MVC       DCBBUFCB(3,R10),IOSAVE+5 IN SYSLIN DCB               15980027
*                                                                       15000027
*        BUILD THE BUFFER CONTROL BLOCK AND BUFFER CHAINS               15020027
         LR        R7,R1               LOCATION TO PLACE 1ST BUFFER PTR 15040027
         LA        R6,12(,R1)          1ST DUMMY BUFFER LOCATION        15060027
         STH       R4,4(,R1)           NUMBER OF BUFFERS                15080027
         STH       R5,6(,R1)           BUFFER LENGTH                    15100027
BUFAGAIN DS        0H                                                   15120027
         LR        R8,R4               NUMBER OF BUFFERS IS LOOP INDEX  15140027
BUFCHAIN DS        0H                                                   15160027
         ST        R6,0(,R7)           STORE BUFFER CHAIN ENTRY         15180027
         LR        R7,R6               CHAIN TO THE NEXT BUFFER         15200027
         AR        R6,R5               BUMP TO NEXT BUFFER              15220027
         BCT       R8,BUFCHAIN         LOOP FOR EACH BUFFER             15240027
         BC        *-*,BUFDONE         ONE TIME SWITCH                  15260027
         MVI       *-3,X'F0'           TURN ON THE BRANCH               15280027
         LA        R6,8(,R1)           1ST REAL BUFFER POINTER          15300027
         B         BUFAGAIN            GO AND CHAIN THE REAL BUFFERS    15320027
BUFDONE  DS        0H                                                   15340027
         SR        R0,R0               PREPARE REGISTER                 15360027
         ST        R0,0(,R7)           AND ZERO END OF CHAIN            15380027
*                                                                       15400027
*        NOW WE RETURN TO OPEN TO LET IT USE OUR BUFFER POOL.           15420027
*        OPEN DOES NOT REALIZE THAT IT CONTAINS TWICE AS MANY           15440027
*        AS IT SHOULD.                                                  15460027
*        THEREFORE, OPEN WILL PLACE BOTH THE SYSIN AND SYSLIN           15480027
*        BUFFERS IN THE SAME PLACE                                      15500027
EXLSTEND DS        0H                                                   15520027
         LM        R14,R2,IOSAVE       RESTORE R14 ETC.                 15540027
         BR        R14                 RETURN TO OPEN                   15560027
         SPACE     4                                                    15580027
*                                                                       15600027
*        THIS ROUTINE FINDS AN ENTRY IN DCBTAB                          15620027
*                                                                       15640027
*        INPUT     R1  DCB ADDRESS                                      15660027
*                  R8  RETURN                                           15680027
*        OUTPUT    R3  ADDR OF ENTRY IN DCBTAB                          15700027
*                                                                       15720027
DCBTABFI DS        0H                                                   15740027
         SR        R3,R3               INIT INDEX REG                   15760027
         LA        R1,0(,R1)           CLEAR TOP BYTE                   15780027
DCBTFI01 DS        0H                                             V7A46 15800028
         L         R0,L1DCBADS(R3,R9)  GET DCB ADDRESS            V7A46 15802028
         N         R0,=X'00FFFFFF'     MAKE SURE IT'S PURE        V7A46 15804028
         CR        R1,R0               INDEX POINTS AT DCB .Q     V7A46 15806028
         BE        DCBTFI02            BRANCH IF YES              V7A46 15820028
         LA        R3,4(,R3)           INCREMENT INDEX FOR NEXT DCB     15840027
         B         DCBTFI01            AND LOOP                   V7A46 15860028
DCBTFI02 DS        0H                                             V7A46 15870028
         AR        R3,R3               CHANGE INDEX FROM 4* TO 8*       15880027
         LA        R3,DCBTAB(R3)       POINT AT PROPER ENTRY IN DCBTAB  15900027
         BR        R8                  RETURN                           15920027
         EJECT                                                          15940027
*        PRINT THE HEADING PAGE                                         15960027
*                                                                       15980027
HEADING  DS        0H                                                   16000027
         BAL       R14,ZMONTH          GET TIME, DAY AND DATE NOW       16020027
         MVC       LINE,L1BLANKS(R9)   BLANK PRINT BUFFER               16040027
*        TEST IF SYSPRINT OPEN                                          16060027
         L         R5,L1DCBADS+L1STERM(,R9)  SYSTERM DCB ADDRESS        16080027
         TM        DCBOFLGS(R5),X'10'  IS SYSTERM OPEN .Q               16100027
         BO        HEADTERM            YES, PRIME SYSTERM BUFFER        16120027
         L         R1,L1DCBADS+L1SPRINT(,R9)  SYSPRINT DCB ADDRESS      16140027
         TM        DCBOFLGS(R1),X'10'  IS SYSPRINT OPEN .Q              16160027
         BO        HEADPRNT            YES, CONTINUE                    16180027
         MVI       DCBTABTM+5,X'80'    MAKE SYSTERM READY FOR ABEND     16200027
         B         NOTOPEN             SYSTERM HAS FAILED               16220027
*                                                                       16240027
HEADTERM DS        0H                                                   16260027
         TM        PARBYT3,CMS         DID USER SPECIFY CMS .Q          16280027
         BO        POSTTERM            DON'T PRIME SYSTERM IF SO        16300027
         LA        R1,L1DDNAM+2*L1STERM(,R9)  POINT TO SYSTERM DCBNAME  16320027
         BAL       R14,SRCHTIOT        FIND TIOT ENTRY FOR SYSTERM      16340027
         TM        3(R15),TIOTTERM     IS SYSTERM A TSO TERMINAL .Q     16360027
         BO        POSTTERM            DON'T PRIME IT IF SO             16380027
TIOTTERM EQU       X'20'               TSO - DEVICE IS A TERMINAL       16400027
PRETERM  DS        0H                  OTHERWISE PRIME BUFFERS FOR HASP 16420027
         OI        L1DCBCC(R5),X'C0'   SET FOR ASA CARRIAGE CONTROL     16440027
         MVI       LINE,C'1'           NEW PAGE                         16460027
         PUT       (R5),LINE           PRINT THE LINE                   16480027
POSTTERM DS        0H                                                   16500027
         NI        L1DCBCC(R5),X'7F'   TURN OFF ASA                     16520027
         OI        L1DCBCC(R5),X'40'   TURN ON NUMERIC                  16540027
         L         R1,LCTBYT           GET ACTUAL LINE COUNT            16560027
         ST        R1,L1TRSAVE(,R9)    INITIALIZE SYSTERM LINE COUNT    16580027
*                                                                       16600027
HEADPRNT DS        0H                                                   16620027
         L         R5,L1DCBADS+L1SPRINT(,R9)  SYSPRINT DCB ADDRESS      16640027
         TM        DCBOFLGS(R5),X'10'  TEST IF OPEN OR MARKED           16660027
         BZ        NOTOPEN             SYSPRINT HAS FAILED              16680027
*        PRINT FIRST HEADING LINE                                       16700027
         OI        L1DCBCC(R5),X'C0'   SET FOR ASA CARR CONTROL         16720027
         MVI       LINE,C'1'           NEW PAGE                         16740027
         PUT       (R5),LINE           PUT OUT THE LINE                 16760027
         NI        L1DCBCC(R5),X'7F'   TURN OFF ASA                     16780027
         OI        L1DCBCC(R5),X'40'   TURN ON NUMERIC                  16800027
         MVI       LINE,X'02'          LEAVE SOME SPACES                16820027
         MVC       LINE+52(16),HEADER  MOVE IN HEADER                   16840027
         BAL       R14,SYSL1           PRINT FIRST LINE                 16860027
*        PRINT SECOND HEADING LINE                                      16880027
         MVC       L1PRDATE(9,R9),ZDATE    STORE DATE IN LIST1 IN ASM   16900027
         MVC       L1PRTIME(8,R9),ZTIME    STORE TIME IN LIST1 IN ASM   16920027
         MVC       L1ASDATE+1(2,R9),ZDATE+7   PLACE YEAR IN ASMGASM     16940027
         MVC       L1ASDATE+3(3,R9),ZDATE+3   PLACE MONTH IN ASMGASM    16960027
         MVC       L1ASDATE+6(2,R9),ZDATE     PLACE DAY IN ASMGASM      16980027
         MVC       L1ASTIME(8,R9),ZTIME    TIME AGAIN ALSO              17000027
         TR        L1ASDATE(16,R9),TRSLTB  TRANSLATE TWO TO INTERNAL    17020027
         MVI       L1ASDATE(R9),X'07'      ASSUME DATE LENGTH IS 7      17040027
         CLI       ZDATE,C' '              IS IT LESS .Q                17060027
         BNE       *+14                    NO, BRANCH AROUND            17080027
         MVI       L1ASDATE(R9),X'06'      YES, MAKE LENGTH 6           17100027
         MVC       L1ASDATE+6(1,R9),L1ASDATE+7(R9)  SHIFT DAY OVER      17120027
         MVC       LINE+1(7),LEVEL         PLACE EVERYTHING IN LINE     17140027
         MVC       LINE+14(8),RELEASE                                   17160027
         MVC       LINE+22(7),L1RLSDTE(R9) GET ASSEMBLER RELEASE DATE   17180027
         MVC       LINE+35(L'SYSTEM),SYSTEM                             17200027
         MVC       LINE+56(L'MODEL),MODEL  SET MODEL IDENTIFICATION     17220027
         MVC       LINE+70(5),TIME     SET TIME KEYWORD                 17240027
         MVC       LINE+75(8),ZTIME    SET TIME OF DAY                  17260027
         MVC       LINE+89(4),DAY      SET DAY KEYWORD                  17280027
         MVC       LINE+93(9),ZDAY     SET DAY OF WEEK                  17300027
         MVC       LINE+107(5),DATE    SET DATE KEYWORD                 17320027
         MVC       LINE+112(9),ZDATE   SET TODAY'S DATE                 17340027
         BAL       R14,SYSL1           PRINT SECOND LINE                17360027
*                                                                       17380027
*        PRINT OVERRIDING PARAMETER OPTIONS                             17400027
*                                                                       17420027
         L         R6,L1CTLPRM(,R9)    GET PARM LIST ADDRESS            17440027
         L         R6,0(,R6)           POINT AT THE PARM                17460027
         LH        R2,0(,R6)           PICK UP PARM LENGTH              17480027
         LTR       R2,R2               TEST FOR NO PARM AT ALL          17500027
         BZ        ASSEMHD             BRANCH IF NONE                   17520027
         MVC       LINE+1(L'OVERRIDE),OVERRIDE  PLACE HEADING           17540027
         LA        R1,100              ONLY PRINT FIRST 100 CHARS       17560027
         CR        R1,R2               COMPARE TO ACTUAL LENGTH         17580027
         BNL       OVERPRT             BRANCH IF LENGTH OK NOW          17600027
         LR        R2,R1               REPLACE ACTUAL LENGTH WITH 100   17620027
         MVC       LINE+L'OVERRIDE+101(3),=C'...' INDICATE SUSPENSION   17640027
OVERPRT  DS        0H                                                   17660027
         BCTR      R2,0                DECREMENT LENGTH BY ONE          17680027
         EX        R2,MOVEPARM         MOVE PARM TO PRINT LINE          17700027
         BAL       R14,SYSL1           PRINT PARM LINE                  17720027
         TM        ERRSW1,ERRBDPM      IS THERE A PARM ERROR .Q         17740027
         BZ        ASSEMHD             BRANCH IF NOT                    17760027
         MVI       LINE,X'00'          SINGLE SPACE                     17780027
         L         R2,L1CTLPRM(,R9)    GET PARM LIST ADDRESS            17800027
         L         R2,0(,R2)           POINT TO PARM                    17820027
         LA        R2,2(,R2)           BUMP PAST LENGTH                 17840027
         S         R2,PARMOFF          THE ERROR WAS HERE '*'           17860027
         LPR       R2,R2               MAKE IT POSITIVE                 17880027
         LA        R1,100              LAST POSSIBLE PARM PRINTED       17900027
         CR        R1,R2               IS LAST LESS THAN ERROR OFFSET   17920027
         BL        ERRORIND            BRANCH IF YES                    17940027
         LR        R1,R2               GET ERROR OFFSET                 17960027
ERRORIND DS        0H                                                   17980027
         LA        R0,C'*'             INSERT AN ASTERISK               18000027
         STC       R0,LINE+L'OVERRIDE+1(R1)  MARK START OF ERROR        18020027
         BAL       R14,SYSL1           NOTE LOCATION OF ERROR           18040027
*                                                                       18060027
*        PRINT ASSEMBLER OPTIONS                                        18080027
*                                                                       18100027
ASSEMHD  DS        0H                                                   18120027
         OC        L1DBLK(8,R9),L1DBLK(R9)  DEBLK ROUTINE .Q      V7A43 18122028
         BZ        OPTNOWYL            BRANCH IF NOT              V7A43 18124028
         NI        WYLSEQ+OPTPFLGS,X'FF'-X'80'   NOT SHORT FORM   V7A43 18126028
         NI        WYLNOSEQ+OPTPFLGS,X'FF'-X'80' NOT SHORT FORM   V7A43 18128028
OPTNOWYL DS        0H                                             V7A43 18130028
         MVC       LINE+1(18),OPTIONS  PLACE HEADING                    18140027
         LA        R5,LINE+18          LINE POSITION-1                  18160027
         LA        R7,OPTEST-OPTPEND   POINTER TO OPTION TABLE          18180027
OPTSEAR  DS        0H                                                   18200027
         LA        R7,OPTPEND(,R7)     POINT AT NEXT NAME IN LIST       18220027
         CLI       OPTPSTR(R7),X'FF'   TEST FOR LAST ONE                18240027
         BE        OPTDONE             BRANCH IF AT THE END             18260027
         TM        OPTPFLGS(R7),X'80'  TEST FOR ABBREVIATION            18280027
         BO        OPTSEAR             FORGET IT IF YES                 18300027
         IC        R15,OPTPFLGS(,R7)   PICK UP CONTROL BYTE             18320027
         N         R15,F15             KILL TOP HALF BYTE               18340027
         MVC       OPTWORK(6),PARBYT0  MOVE PARAM SWITCHES              18360027
         AR        R15,R15             DOUBLE INDEX VALUE               18380027
         LH        R15,OPTBTBL(R15)    GET ROUTINE OFFSET               18400027
         B         ASMGF1(R15)         DO WHAT CONTROL BYTE SAYS        18420027
OPTBTBL  DC        AL2(OPTN1N2-ASMGF1)   CONTROL BYTE =X'0'             18440027
         DC        AL2(OPTF1F2-ASMGF1)   CONTROL BYTE =X'1'             18460027
         DC        AL2(OPTF1N2-ASMGF1)   CONTROL BYTE =X'2'             18480027
         DC        AL2(OPTDIGIT-ASMGF1)  CONTROL BYTE =X'3'             18500027
         DC        AL2(OPTCPARM-ASMGF1)  CONTROL BYTE =X'4'             18520027
*        DO OPPOSITE OF WHAT PARM SCAN DOES                             18540027
OPTN1N2  DS        0H                                                   18560027
         NC        OPTWORK(6),OPTPBITS(R7)  KILL OTHER SWITCHES         18580027
         B         OPT2                TEST RESULTS                     18600027
OPTF1F2  DS        0H                                                   18620027
         OC        OPTWORK(6),OPTPBITS(R7)  FORCE SWITCHES              18640027
         B         OPT2                TEST RESULTS                     18660027
OPTF1N2  DS        0H                                                   18680027
         OC        OPTWORK(2),OPTPBITS(R7)  FORCE SOME SWITCHES         18700027
         NC        OPTWORK+2(4),OPTPBITS+2(R7)  KILL OTHERS             18720027
         B         OPT2                TEST RESULTS                     18740027
OPTDIGIT DS        0H                                                   18760027
         SR        R15,R15             ZERO OFFSET REGISTER             18780027
         IC        R15,OPTPBITS(,R7)   1ST HALF OFFSET INTO TAB3PARM    18800027
         SLL       R15,8               MOVE ONE BYTE OVER               18820027
         IC        R15,OPTPBITS+1(,R7) 2ND HALF OFFSET INTO TAB3PARM    18840027
         L         R2,TAB3PARM+TAB3DEF(R15)  PICK UP NUMBER             18860027
         LTR       R2,R2               IS IT NEGATIVE .Q                18880027
         BM        OPTSEAR             NEG MEANS OPTION NOT IN EFFECT   18900027
         LA        R15,1               SET NUMBER SWITCH                18920027
         B         OPTCHECK            SINCE R15 IS 1 NUMBER WILL BE   X18940027
                                         COLLECTED AFTER NAME           18960027
OPTCPARM DS        0H                                                   18980027
         SR        R15,R15             ZERO WORK REGISTER               19000027
         IC        R15,L1ASPARM(,R9)   PICK UP LENGTH OF SYSPARM        19020027
         LTR       R15,R15             IS IT NULL .Q                    19040027
         BZ        OPTCHECK            YES, THEN NOTHING SPECIAL        19060027
         L         R3,L1ASPARM(,R9)    PICK UP ADDRESS OF SYSPARM       19080027
         LA        R2,9(R15,R5)        WILL SYSPARM FIT                 19100027
         C         R2,ENDLINE            ON THIS LINE .Q                19120027
         BL        OPTPARMO            YES, PRESS ON                    19140027
OPTLOOP  DS        0H                                                   19160027
         BAL       R14,SYSL1           NO, PRINT CURRENT LINE           19180027
         MVI       LINE,X'00'          NO SKIP ON SUCCESSIVE LINE       19200027
         LA        R5,LINE+18          SET LINE POINTER                 19220027
         CH        R15,H80             WILL REMAINDER NOW FIT .Q        19240027
         BL        OPTPARMO            YES, PROCEED                     19260027
         LA        R2,80               NO, PRINT ONLY NEXT 80 THEN      19280027
         BAL       R14,OPTPARMP        GO DO IT                         19300027
         SH        R15,H80             DECREASE LENGTH LEFT BY 80       19320027
         AH        R3,H80              INCREMENT POINTER BY 80          19340027
         B         OPTLOOP             DO IT AGAIN                      19360027
OPTPARMO DS        0H                                                   19380027
         LR        R2,R15              TRANSFER LENGTH TO MOVE          19400027
         LA        R14,OPT3            GO THERE WHEN DONE               19420027
OPTPARMP DS        0H                                                   19440027
         MVC       1(8,R5),OPTPSTR(R7) MOVE IN SYSPARM=                 19460027
         MVC       OPTPSTR(8,R7),LINE+1  AND BLANK IT FOR NEXT TIME     19480027
         BCTR      R2,0                DECREASE LENGTH FOR A MOVE       19500027
         EX        R2,OPTSPRM          MOVE PARM INTO LINE              19520027
         LA        R5,9(R15,R5)        INCREMENT LINE POINTER           19540027
         BR        R14                 RESUME                           19560027
OPT2     DS        0H                                                   19580027
         CLC       OPTWORK(6),OPTPBITS(R7)  TEST IF SWITCH IN EFFECT    19600027
         BNE       OPTSEAR                                              19620027
OPTCHECK DS        0H                                                   19640027
         C         R5,ENDLINE          SEE IF LINE FULL                 19660027
         BL        OPTNAM                                               19680027
         BAL       R14,SYSL1           PRINT THE LINE                   19700027
         MVI       LINE,X'00'          NO SKIPS ON SUCCESSIVE LINES     19720027
         LA        R5,LINE+18          SET LINE POINTER                 19740027
*        PLACE NAME ON LINE                                             19760027
OPTNAM   DS        0H                                                   19780027
         IC        R4,OPTPLEN(,R7)     GET ACTUAL LENGTH-1              19800027
         N         R4,F15              AND PURIFY IT                    19820027
         EX        R4,OPTMVC           MOVE NAME                        19840027
         LA        R5,2(R4,R5)         INCREMENT LINE PT                19860027
         BCT       R15,OPT3  TEST NO NUMBER SWITCH                      19880027
*        PLACE NUMBER ON LINE                                           19900027
         LTR       R14,R2              TEST FOR MULTIPLE OF 1024        19920027
         BZ        OPT9                ZERO IS 0 , NOT 0K               19940027
         N         R14,=X'FFFFFC00'                                     19960027
         CR        R2,R14                                               19980027
         BNE       OPT9                                                 20000027
         LA        R15,1               CHANGE R15 FROM 0 TO 1           20020027
         SRL       R2,10               DIVIDE BY 1024                   20040027
OPT9     DS        0H                                                   20060027
         CVD       R2,DWORD            CONVERT TO PACKED DECIMAL        20080027
         MVC       OPTWORK(7),OPTEDIT  PREPARE TO FIND LENGTH & UNPACK  20100027
         LA        R1,OPTWORK+6        IN CASE NUM 0                    20120027
         LA        R2,0(R1,R15)        PREPARE TO CALCULATE LENGTH      20140027
         EDMK      OPTWORK(7),DWORD+4  CHANGE TO CHARACTER              20160027
         SR        R2,R1               CALCULATE LENGTH-1               20180027
         EX        R2,OPTMNUM          PLACE NUM ON LINE                20200027
         LA        R5,1(R2,R5)         INCREMENT LINE PT                20220027
OPT3     DS        0H                                                   20240027
         MVI       0(R5),C','          PLACE A COMMA                    20260027
         TM        OPTPFLGS(R7),X'40'  SUFFIX FOR XREF .Q               20280027
         BZ        OPTSEAR             BRANCH IF NOT                    20300027
         CLI       XREFSUFX,X'00'      ANY SUFFIX PRESENT .Q            20320027
         BE        OPTSEAR             BRANCH IF NOT                    20340027
         L         R15,XREFSUFX        POINT ONE BEFORE SUFFIX          20360027
         SR        R2,R2               ZERO A WORK REG                  20380027
         IC        R2,XREFSUFX         GET LENGTH OF SUFFIX             20400027
         BCTR      R2,0                GET LENGTH-1 OF SUFFIX           20420027
         MVI       0(R5),C'='          A DELIMITER                      20440027
         EX        R2,OPTMVCSF         MOVE THE SUFFIX                  20460027
         LA        R5,2(R2,R5)         NEXT OUTPUT COLUMN               20480027
         MVI       0(R5),C','          ADD A COMMA                      20500027
         B         OPTSEAR             DO IT AGAIN                      20520027
OPTMVCSF MVC       1(*-*,R5),1(R15)    EXECUTED MOVE                    20540027
OPTDONE  DS        0H                                                   20560027
         MVI       0(R5),C'.'          CLOBBER ',' WITH '.'             20580027
         LA        R14,PARMCHK         RETURN HERE AFTER PRINTING LINE  20600027
         B         SYSL1               PRINT LAST OPTION LINE           20620027
*                                                                       20640027
OPTSPRM  MVC       9(*-*,R5),0(R3)     EXECUTED MOVE PARM INTO LINE     20660027
OPTMVC   MVC       1(*-*,R5),OPTPSTR(R7)  EXECUTED MOVE NAME            20680027
OPTMNUM  MVC       0(*-*,R5),0(R1)     EXECUTED PLACE NUM ON LINE       20700027
         EJECT                                                          20720027
*        CHECK IF THERE WAS A PARM ERROR                                20740027
*                                                                       20760027
PARMCHK  DS        0H                                                   20780027
         TM        ERRSW1,ERRBDPM      ANY PARM ERRORS .Q               20800027
         BZ        SETUPDAT            BRANCH IF NONE                   20820027
         LA        R14,SETUPDAT        SET RETURN ADDRESS               20840027
         BAL       R0,ERROUT           BAL TO PRINT ERROR MESSAGE       20860027
         DC        C'255 ',AL1(L'MES255-1)                              20980027
MES255   DC        C'ERROR IN PARM FIELD'                               20900027
*                                                                       20920027
SETUPDAT DS        0H                                                   20940027
         SR        R1,R1               ZERO A REGISTER                  20960027
         ST        R1,L1PAGENO(,R9)    ZERO PAGE NUMBER FOR SYSPRINT    20980027
         MVC       L1UTLINO(4,R9),F1   SET UPDATE LINE COUNT            21000027
         LTR       R10,R10             ONLY CHECK OPENS 1ST F1 TIME     21020027
         BNE       GETHASH                                              21040027
*                                                                       21060027
*        SCAN THE DCB'S TO SEE IF THEY OPENED OK                        21080027
*                                                                       21100027
         LA        R2,OPADLIN-4        POINT AT OPEN ADDRESS LIST       21120027
OPENCHK1 DS        0H                                                   21140027
         LA        R2,4(,R2)           POINT AT NEXT DCB ADDRESS        21160027
         L         R5,0(,R2)           DCB ADDRESS                      21180027
         TM        DCBOFLGS(R5),X'10'  TEST IF OPEN                     21200027
         BO        OPENOK                                               21220027
NOTOPEN  DS        0H                                                   21240027
***      MVC       MES200+15(8),DCBDDNAM(R5) PLACE DDNAME IN ERROR      21260027
***      LA        R0,MSG200           POINT AT ERROR MESSAGE           21280027
***      CLI       DCBRECFM(R5),X'C0' TEST IF UTILITY (RECFM=U)         21300027
***      BE        ASMABEND            ABEND ASSEMBLER IF SO            21320027
*./      DELETE    SEQ1=21260027,SEQ2=21320027                    V7A46 21260027
         LR        R1,R5               FIND DATASET'S ENTRY IN DCBTAB   21340027
         BAL       R8,DCBTABFI           BY CALLING THE LOOKUP ROUTINE  21360027
         LA        R1,DCBTAB           START OF DCBTAB            V7A46 21362028
         SR        R1,R3               OFFSET FOUND IN TABLE      V7A46 21364028
         LPR       R1,R1               POSITIVE OFFSET            V7A46 21366028
         LA        R1,L1DDNAM(R1,R9)   POINT TO ASSOCIATED DDNAME V7A46 21368028
         MVC       MES200+15(8),0(R1)  PLACE DDNAME IN ERROR      V7A46 21370028
         LA        R0,MSG200           POINT AT ERROR MESSAGE     VA746 21372028
         TM        5(R3),X'80'         TEST THE ABEND SW                21380027
         BO        ASMABEND            ABEND THE ASSEMBLER IF SO        21400027
         BAL       R14,ERROUT          PRINT ERROR MESSAGE              21420027
         NC        PARBYT(2),3(R3)     TURN OFF OPTIONS MAYBE           21440027
         OC        L1SYNERR(1,R9),6(R3)  OR IN SEVERITY CODE FOR ASMGFD 21460027
*                                                                       21480027
OPENOK   DS        0H                                                   21500027
         LTR       R5,R5               TEST FOR LAST DCB                21520027
         BNM       OPENCHK1            TRY NEXT DCB                     21540027
         B         BLKCHK                                               21560027
*                                                                       21580027
MSG200   DC        C'200 ',AL1(L'MES200-1)                              21600027
MES200   DC        C'UNABLE TO OPEN ********'                           21620027
         EJECT                                                          21640027
*        TEST FOR BLKSIZE ERRORS DURING OPEN                            21660027
*                                                                       21680027
BLKCHK   DS        0H                                                   21700027
         LM        R4,R6,=A(8,6*8,0)   INITIALIZE FOR SCAN              21720027
*        SCAN DCBTAB TO CHECK ALL DCB'S EXCEPT UTILITIES                21740027
BLKCHK1  DS        0H                                                   21760027
         LA        R3,DCBTAB(R6)       POINT AT ENTRY IN DCBTAB         21780027
         TM        5(R3),X'40'         TEST FOR ERROR                   21800027
         BZ        BLKOK                                                21820027
         LA        R1,L1DDNAM(R6,R9)   POINT AT DDNAME LIST IN LIST1    21840027
         BAL       R14,ERR201          PRINT ERROR                      21860027
BLKOK    DS        0H                                                   21880027
         BXLE      R6,R4,BLKCHK1       LOOP FOR ALL DD CARDS            21900027
         B         UPTEST                                               21920027
*                                                                       21940027
ERR201   DS        0H                                                   21960027
         MVC       MES201+19(8),0(R1)  PLACE DD NAME IN MESSAGE         21980027
         OI        L1SYNERR(R9),X'02'  SET ERROR SWITCH FOR ASMGFD      22000027
         BAL       R0,ERROUT           PRINT IT                         22020027
MSG201   DC        C'201 ',AL1(L'MES201-1)                              22040027
MES201   DC        C'ILLEGAL BLKSIZE ON ********'                       22060027
         EJECT                                                          22080027
*        TEST UPDATE OPTION AND LOAD AND PATCH IN ASMGUP ROUTINE IF SO  22100027
*        MOVE PARBYTS TO ASM IN CASE OF UPDATE                          22120027
*                                                                       22140027
UPTEST   DS        0H                                                   22160027
         MVC       L1TIMELM(4,R9),EXTMWD   MOVE IN EXTIME               22180027
         MVC       L1COLCT(1,R9),COLCOUNT+3  MOVE COLUMN COUNT          22200027
         MVC       L1UPCOND(1,R9),UPCOND+3  MOVE UPDATE CONDITION CODE  22220027
         MVC       L1CALIGN(1,R9),CALIGN+3  MOVE COMMENT ALIGNMENT COL  22240027
         MVC       L1LINECT(2,R9),LCTBYT+2  MOVE LINECNT VALUE          22260027
         MVC       L1PBYT1(4,R9),PARBYT1    MOVE PARAMETER BITS         22280027
         TM        PARBYT1,EXTEN       IS EXTEN ON .Q                   22300027
         BO        DEFLSETC            YES, TAKE LSETC SPECIFIED        22320027
         MVI       LSETCBYT+3,X'08'    NO, MAKE DEFAULT 8               22340027
DEFLSETC DS        0H                                                   22360027
         MVC       L1LSETC(1,R9),LSETCBYT+3 MOVE DEFAULT LSETC          22380027
         TM        PARBYT2,UPDATE      TEST UPDATE OPTION               22400027
         BZ        SYSINIT             BRANCH IF OFF                    22420027
         LOAD      EP=ASMGUP           LOAD THE UPDATE MODULE           22440027
         ST        R0,L1SINAD+4(,R9)   ADDR OF ASMGUP FOR ASMGASM       22460027
         LA        R8,EXLST            EXLST ROUTINE ADDR FOR ASMGASM   22480027
         SPACE     3                                                    22500027
*        INITIALIZE THE SYSIN DCB                                       22520027
*                                                                       22540027
SYSINIT  DS        0H                                                   22560027
*        DO AN INITIALIZATION GET TO PRIME SYSINMON'S BUFFER            22580027
         L         R1,ADCBIN           POINT TO SYSIN DCB               22600027
         GET       (1),LINE+20         USE AREA FOR SUBSEQUENT PRINTING 22620027
         EJECT                                                          22640027
*        LOAD THE INSTRUCTION SET MODULE                                22660027
*                                                                       22680027
         L         R0,ISBIN            CHANGE INSTSET NUMBER TO CHAR    22700027
         CVD       R0,DWORD            CHANGE TO PACKED DECIMAL         22720027
         UNPK      L1ISNAME+6(2,R9),DWORD+6(2) PUT ZONED IN LIST1 AREA  22740027
         OI        L1ISNAME+7(R9),X'F0'      MAKE SIGN PLUS             22760027
         LOAD      EPLOC=L1ISNAME(,R9) LOAD THE INSTSET MODULE          22780027
         ST        R0,L1ISADDR(,R9)    SAVE ADDRESS IN CASE BATCH       22800027
*        MOVE THE HASH TABLE INTO COMMON                                22820027
GETHASH  DS        0H                                                   22840027
         L         R1,L1ISADDR(,R9)    POINT AT INSTSET MODULE          22860027
         MVC       PHASHT(2*PASHL),4(R1) MOVE HASH TABLE                22880027
         L         R2,0(,R1)           LENGTH OF INIT GBL DICT          22900027
         ST        R2,PNDX                                              22920027
         ST        R2,ENDOPC                                            22940027
*        IF NON-BATCH WRITE INITIAL GLOBAL DICT ON A UTILITY            22960027
         LTR       R10,R10             TEST FOR 1ST F1 TIME             22980027
         BNZ       BUFTOTAL                                             23000027
         TM        PARBYT1,BATCH       TEST IF BATCH                    23020027
         BO        GETMAIN                                              23040027
*        WRITE IT OUT ON SYSUT1                                         23060027
         LA        R5,2000             BLOCK LENGTH                     23080027
         LA        R4,2*PASHL+4(,R1)   STARTING ADDRESS                 23100027
         L         R3,L1DCBADS+L1SUT1(,R9)  SYSUT1 DCB ADDRESS          23120027
ISWRITE  DS        0H                                                   23140027
         CR        R2,R5               TEST IF SHORT BLOCK              23160027
         BNM       WRITEIS                                              23180027
         LR        R5,R2                                                23200027
WRITEIS  DS        0H                                                   23220027
         WRITE     DECB1,SF,(R3),(R4),(R5)                              23240027
         CHECK     DECB1                                                23260027
         AR        R4,R5               ADDRESS OF NEXT BLOCK            23280027
         SR        R2,R5               REMAINING LENGTH                 23300027
         BH        ISWRITE                                              23320027
*        REWIND THE UTILITY                                             23340027
         POINT     (R3),F1                                              23360027
*        DELETE THE MODULE                                              23380027
         DELETE    EPLOC=L1ISNAME(,R9) IT'S IN LIST1 IN ASMGASM         23400027
         SPACE     4                                                    23420027
*        GET STORAGE AS SPECIFIED BY SPACE PARAMETER                    23440027
*                                                                       23460027
GETMAIN  DS        0H                                                   23480027
         L         R3,SPACEPOS         LOAD SPACEPOS                    23500027
         LTR       R3,R3               TEST FOR SPACE=N OPTION          23520027
         BM        GETVAR              BRANCH IF NOT                    23540027
*        DO ELEMENT CONDITIONAL GETMAIN FOR SPACE=N                     23560027
         GETMAIN   EC,LV=(R3),A=GOTADDR                                 23580027
         BXH       R15,R15,ERROR998    TEST RETURN CODE                 23600027
         ST        R3,GOTLEN           SAVE LENGTH GOTTEN               23620027
         B         SWSET                                                23640027
*                                                                       23660027
*        DO VARIABLE CONDITIONAL GETMAIN FOR SPACE=MAX OR SPACE=MAX-N   23680027
GETVAR   DS        0H                                                   23700027
         GETMAIN   VC,LA=MINMAIN,A=GOTADDR                              23720027
         BXH       R15,R15,ERROR998    TEST RETURN CODE                 23740027
         L         R4,SPACENEG         GET MAX- VALUE                   23760027
         LTR       R0,R4               TEST SPACE=MAX-N                 23780027
         BM        SWSET               BRANCH IF NOT                    23800027
*        DO FREEMAIN FOR SPACE=MAX-N                                    23820027
         LM        R1,R2,GOTADDR       LOAD ADDRESS AND LEN GOTTEN      23840027
         SR        R2,R4               LENGTH KEPT                      23860027
         C         R2,MINMAIN          TEST SUFFICIENT STORAGE          23880027
         BL        ERROR998                                             23900027
         STM       R1,R2,GOTADDR   CHANGE ADDR AND LENGTH KEPT    V7A52 23920028
         AR        R1,R2           ADDRESS TO FREE                V7A52 23940028
         SPACE     1                                              V7A52 23960028
         FREEMAIN  R,LV=(0),A=(1)                                       23980027
         AIF       (&NOTSTAT).NOCORE                                    24000027
*        PRINT AMOUNT OF CORE GOTTEN                                    24020027
         L         R0,GOTLEN           AMT                              24040027
         SRL       R0,10               /1024                            24060027
         CVD       R0,DWORD            DECIMAL                          24080027
         ED        COREEDIT(4),DWORD+6 CHARS                            24100027
         B         PRNTCORE            PRINT IT                         24120027
CORELINE DC        CL50' '             BLANKS                           24140027
         ORG       CORELINE                                             24160027
         DC        C'GETMAINED CORE='                                   24180027
COREEDIT DC        C' ',X'202120',C'K'                                  24200027
         ORG                                                            24220027
PRNTCORE PRINTOUT  CORELINE,DCB=NO,CSECT=GAECT,TYPE=STAT                24240027
.NOCORE  ANOP                                                           24260027
         B         SWSET                                                24280027
*                                                                       24300027
*        INSUFFICIENT SPACE ERROR                                       24320027
ERROR998 DS        0H                                                   24340027
         BAL       R0,ASMABEND                                          24360027
         DC        C'998I',AL1(L'MES998-1)                              24380027
MES998   DC        C'INSUFFICIENT MEMORY TO SATISFY SPACE REQUIREMENT'  24400027
*                                                                       24420027
*        ONCE ONE MEGABYTE WAS ENOUGH, I STILL DON'T BELIEVE IT         24440027
MINMAIN  DC        A(MINIMUM,8000*1024)                                 24460027
GOTADDR  DC        F'0'                                                 24480027
GOTLEN   DC        F'0'                                                 24500027
GOTEXTRA DC        2F'0'               NEEDED FOR IDIOT MVT             24520027
MIN1     EQU       3*4*100+24          MIN BUFF WILL INITIALIZE ON      24540027
MIN2     EQU       &MAXMAC*11+512      AMT MIKE NEEDS FOR MACRO DIRCTRY 24560027
MINIMUM  EQU       MIN1+MIN2           MIN GETCORE WE CAN TOLERATE      24580027
         SPACE     2                                                    24600027
*        SET GOTMAINED ADDR AND LENGTH IN ASMGASM                       24620027
SWSET    DS        0H                                                   24640027
         MVC       L1FREEMN(8,R9),GOTADDR  FOR FREEMAIN IN ASMGASM      24660027
         EJECT                                                          24680027
*        THIS SECTION HAS BEEN ADDED TO BUILD A CORE RESIDENT           24700027
*        NOTE LIST OF THE SYSLIB DIRECTORY IF ENOUGH CORE               24720027
*        IS AVAILABLE. IF THERE IS NOT ENOUGH CORE, WE                  24740027
*        TERMINATE WITH A RETURN CODE OF 20 AFTER PRINTING              24760027
*        AN ERROR MESSAGE.                                              24780027
*                                                                       24800027
*                                                                       24820027
*                 R0                   WORK                             24840027
*                 R1                   WORK                             24860027
*                 R2                   POINTS TO SYSLIB DCB             24880027
*                 R3                   SUBROUTINE RETURN LINK           24900027
*                 R4                   WORK                             24920027
*                 R5                   POINTS TO NEXT INPUT BUFFER      24940027
*                 R6                   POINTS TO CURRENT INPUT BUFFER   24960027
*                 R7                   LENGTH OF USER DATA              24980027
*                 R8                   END ADDRESS IN BLOCK             25000027
*                 R9                   TABLE POINTER                    25020027
*                 R10                  WORK REGISTER                    25040027
*                 R11                  BASE REGISTER 1                  25060027
*                 R12                  BASE REGISTER 2                  25080027
*                 R13                  COMMON AND SAVE AREA POINTER     25100027
*                 R14                  LINKAGE                          25120027
*                 R15                  REGISTERS                        25140027
*                                                                       25160027
*        ALTER DCB FOR READING DIRECTORIES                              25180027
*                                                                       25200027
         OPEN  (DIRDCB,INPUT)                                           25220027
         LA    R2,DIRDCB           POINT TO DIRECTORY DCB               25240027
         EJECT                                                          25260027
*                                                                       25280027
*        SET UP CORE POINTERS                                           25300027
*                                                                       25320027
         L         R9,GOTADDR          ADDRESS OF CORE AREA             25340027
         LR        R4,R9               POINT TO END OF AREA             25360027
         A         R9,GOTLEN           ACQUIRED FROM OS                 25380027
         ST        R9,MACLAST                                           25400027
         LR        R5,R9               TOP OF CORE                      25420027
         S         R5,=A(&MAXMAC*12)   12 BYTES PER MACRO               25440027
         ST        R5,MACTABLS         =START OF TABLE                  25460027
*                                                                       25480027
*        CHECK IF SYSLIB IS OPEN                                        25500027
         TM        DCBOFLGS(R2),X'10'  IS IT OPEN .Q                    25520027
         BZ        MACROSIN            NO, QUIT.                        25540027
         TM        PARBYT3,CMS         DID USER SPECIFY CMS .Q          25560027
         BO        MACROSIN            DON'T READ DIRECTORY IF SO       25580027
         SPACE     2                                                    25600027
*                                                                       25620027
MACFIRST DS        0H                                                   25640027
         GET       DIRDCB              READ A DIRECTORY BLOCK           25660027
         EJECT                                                          25680027
*                                                                       25700027
*        LOGIC TO DO DOUBLE BUFFERED READING OF                         25720027
*        SYSLIB DIRECTORY FROM DISK                                     25740027
*                                                                       25760027
SKIPPER  DS        0H                                                   25780027
         NOP       MACFIRST            FOR SKIPPING EMPTY BLOCKS        25800027
*                                                                       25820027
*        PICK OFF THE NAME AND TTR FOR EACH MACRO                       25840027
*                                                                       25860027
         LH        R8,0(,R1)           LOAD LENGTH USED IN THIS BLOCK   25880027
         BCTR      R8,0                DECREMENT                        25900027
         LA        R8,0(R8,R1)         GET END ADDRESS OF THIS BLOCK    25920027
         LA        R6,2(,R1)           POINT TO FIRST RECORD            25940027
DEBLOCK1 DS        0H                                                   25960027
         CR        R6,R8               CHECK FOR END OF BLOCK           25980027
         BNL       MACFIRST            YES GET A NEW BLOCK              26000027
         CLI       0(R6),X'FF'         IS THIS LAST ENTRY .Q            26020027
         BE        NEWPDS              YES GET NEXT DIRECTORY           26040027
         SH        R9,=H'12'                                            26060027
         MVC       0(11,R9),0(R6)      STORE NAME & TTR                 26080027
         MVC       11(1,R9),EXT#       AND CONCAT #                     26100027
         C         R9,MACTABLS         END OF TABLE                     26120027
         BL        MACABEND            YES QUIT                         26140027
         IC        R4,11(,R6)          LOAD CONTROL BYTE                26160027
         N         R4,F31              MASK OFF GARBAGE                 26180027
         AR        R4,R4               GET LENGTH IN BYTES              26200027
         LA        R6,12(R6,R4)        INCREMENT RECORD POINTER         26220027
         B         DEBLOCK1            AND AROUND AGAIN.                26240027
         EJECT                                                          26260027
*                                                                       26280027
*        INCREMENT EXTENT COUNT AND RESET SKIPPER FOR THE               26300027
*        NEXT DIRECTORY.                                                26320027
*                                                                       26340027
NEWPDS   DS        0H                                                   26360027
         OI    SKIPPER+1,X'F0'                                          26380027
         B     MACFIRST                                                 26400027
         EJECT                                                          26420027
*                                                                       26440027
*        MACRO DIRECTORY IS NOW IN CORE                                 26460027
*                                                                       26480027
MACROSIN DS        0H                                                   26500027
         L         R1,ADLIST1          GET ADDRESS OF ASM LIST          26520027
         SH        R9,=H'12'           DROP DOWN BELOW DUMMY ENTRY      26540027
         ST        R9,L1BOTMC(,R1)     POINT TO LAST ENTRY FOR LOOKUP   26560027
         N         R9,=F'-8'           ALIGN TO DOUBLE WORD             26580027
         L         R4,MACLAST          GET END OF AREA ADDRESS          26600027
         ST        R4,L1TOPMC(,R1)     ADDRESS OF LOOKUP AREA           26620027
         SR        R4,R9               GET LENGTH REMAINING             26640027
         ST        R4,L1LENMC(,R1)     SAVE LENGTH FOR GROW IN ASMGF3   26660027
         S         R9,GOTADDR          LENGTH REMAINING                 26680027
         ST        R9,GOTLIST          GIVE TO BUFF                     26700027
         MVC       GOTLIST+4(4),GOTADDR                                 26720027
*                                                                       26740027
*        RESTORE THE SYSLIB DCB TO IT'S VIRGIN STATE                    26760027
*                                                                       26780027
         TM    DIRDCB+48,X'10'     IS DIRECTORY OPEN ??                 26800027
         BZ    NODIRDCB            NOPE ---                             26820027
         CLOSE     DIRDCB               CLOSE THE DIRECTORY             26840027
         FREEPOOL  DIRDCB               ABD RELEASE THE BUFFER POOL     26860027
NODIRDCB DS    0H                                                       26880027
*                                                                       26900027
*        RESTORE R9 AS POINTER TO LIST1 IN ASM                          26920027
*                                                                       26940027
         L         R9,ADLIST1          GET ADDRESS OF ASM LIST          26960027
*                                                                       26980027
*        EXIT STAGE RIGHT WITH A SMILE                                  27000027
*                                                                       27020027
*.* DAN SKOMSKY 09/22/2007 REMOVE USELESS WTO                 DS092207  27022027
*.*      WTO 'MACLIB DIR DONE',ROUTCDE=11                               27040027
         B         BUFFINIT                                             27060027
         SPACE     4                                                    27080027
*                                                                       27100027
*        THE FOOL DID NOT GIVE US ENOUGH CORE                           27120027
*                                                                       27140027
*        FLIP THE 208 ERROR BIT IN L1SYNERR AND CONTINUE.               27160027
*        ASMGF2 WILL RECOGNIZE THE FACT THAT THE TABLE OVERFLOWED       27180027
*        WHEN IT DOES A TABLE LOOKUP ON THE MEMBER NAME AND             27200027
*        WILL DO A CONVENTIONAL FIND IF THE MEMBER IS NOT IN THE TABLE  27220027
*                                                                       27240027
MACABEND DS        0H                                                   27260027
         L         R1,ADLIST1          POINT TO LIST1 IN ASMGASM        27280027
         OI        L1SYNERR(R1),X'08'  TURN ON INDICATION BIT           27300027
         AH        R9,=H'12'           GO BACK ONE IN TABLE             27320027
         B         MACROSIN            AND QUIT                         27340027
         SPACE     5                                                    27360027
*                                                                       27380027
*        CONSTANTS AND DATA AREAS FOR MACRO DIRECTORY                   27400027
*                                                                       27420027
DIRDCB   DCB   DSORG=PS,MACRF=GL,DDNAME=SYSLIB,RECFM=F,BLKSIZE=256,    X27440027
               LRECL=256,EXLST=EXLNEW,EODAD=MACROSIN                    27460027
EXLNEW   DS    0F                  NEW EXLST VALUE                      27480027
         DC    X'86',AL3(NEWEXTNT)                                      27500027
NEWEXTNT DS    0H                                                       27520027
         USING *,R15                                                    27540027
         ST    R1,NEWEXSAV         SAVE R1 FOR LATER RESTORE            27560027
         NI    SKIPPER+1,X'0F'     TURN OFF THE SKIPPER                 27580027
         LA    R1,0                CLEAR IT OUT                         27600027
         IC    R1,EXT#             INSERT EXTENT NUMBER                 27620027
         LA    R1,1(,R1)           INCREMENT BY ONE                     27640027
         STC   R1,EXT#             SAVE UPDATED VALUE                   27660027
         L     R1,NEWEXSAV         RESTORE R1                           27680027
         BR    R14                 RETURN TO EOV                        27700027
         DROP  R15                                                      27720027
NEWEXSAV DC    F'0'                R1 SAVE AREA                         27740027
EXT#     DC    AL1(0)              INITIAL EXTENT NUMBER                27760027
*                                                                       27780027
MACTABLS DC        F'0'                START OF TABLE ADDRESS           27800027
*                                                                       27820027
MACLAST  DC        F'0'                LAST TABLE ENTRY                 27840027
*                                                                       27860027
         EJECT                                                          27880027
*        MAKE INITIALIZATION CALL TO BUFF ROUTINE                       27900027
BUFFINIT DS        0H                                                   27920027
         MVC       INITUTAD(12),L1DCBADS+L1SUT1(R9)  MOVE UT DCB ADDRS  27940027
         MVC       UBUFFWD(4),UTBUFF+TAB3DEF  SET UTBUFF= VALUE         27960027
         L         R1,BUFFENT          POINT AT BUFFENT                 27980027
         CNOP      2,4                                                  28000027
         BALR      R0,R1               GO TO BUFFENT                    28020027
         DC        F'40'               ROUTINE NUMBER  INIT ROUTINE     28040027
GOTLIST  DC        A(0)                WILL HOLD AMT CORE GOT           28060027
         DC        A(0)                WILL HOLD CORE ADDR              28080027
         DC        F'3'                NUMBER OF UTILITIES              28100027
UBUFFWD  DC        F'3'                NUMBER BUFFERED                  28120027
INITUTAD DC        3F'0'               DCB ADDRESSES                    28140027
INITERAD DC        F'0'                ADDRESS OF ERROR EXIT ROUTINE    28160027
         SPACE     4                                                    28180027
*        CHOOSE DEFAULT UTILITY BLOCK SIZES                             28200027
*                                                                       28220027
         L         R1,MINBLK           MINIMUM BLOCKSIZE FOR UT1        28240027
         LR        R2,R1               ALSO UT2                         28260027
         LR        R3,R1               ALSO UT3                         28280027
         L         R0,GOTLEN           SPACE GOT                        28300027
         S         R0,=A(48*K1)        SEE IF BLKSIZE CAN BE INCREASED  28320027
         BL        SEEDCB                                               28340027
         SRL       R0,3                DIVIDE BY EIGHT                  28360027
         AR        R2,R0               INCREASE UT2 AND UT3 BLKSIZE     28380027
         AR        R3,R0                                                28400027
         SRL       R0,1                DIVIDE BY SIXTEEN                28420027
         AR        R1,R0               INCREASE UT1 BLKSIZE             28440027
         EJECT                                                          28460027
*                                                                       28480027
*        CHECK IF BLKSIZE ALREADY SPECIFIED                             28500027
SEEDCB   DS        0H                                                   28520027
         STM       R1,R3,ZSAVE         SAVE DEFAULT BLKSIZES            28540027
         LA        R2,8                SET INDEX FOR LOOP               28560027
         L         R3,=F'-4'           FOR BXH                          28580027
*        LOOP FOR EACH UTILITY DCB                                      28600027
UTLOOP   DS        0H                                                   28620027
         L         R4,L1DCBADS+L1SUT1(R2,R9)  POINT AT UT DCB           28640027
         LA        R1,0(R2,R2)             DOUBLE THE OFFSET            28660027
         LA        R1,L1DDNAM+2*L1SUT1(R1,R9)  POINT AT UT DDNAME       28680027
         LH        R5,DCBBLKSI(,R4)    LOAD BLKSIZE                     28700027
         LTR       R5,R5               TEST FOR ZERO                    28720027
         BZ        DEVTYPE                                              28740027
         C         R5,MINBLK           TEST IF BELOW MINIMUM            28760027
         BNL       ROUND                                                28780027
         BAL       R14,ERR201          PRINT ERROR                      28800027
*                                                                       28820027
*        ROUND DOWN DEFAULT BLKSIZE ACCORDING TO THE DEVICE             28840027
DEVTYPE  DS        0H                                                   28860027
         DEVTYPE   (1),IOSAVE,DEVTAB   DO DEVTYPE MACRO                 28880027
         SR        R0,R0               INITIALIZE RECORDS/TRK AT 1-1    28900027
DETB02   DS        0H                                                   28920027
         BAL       R14,CMBFSZ          CALCULATE OPTIMUM RECORD SIZE    28940027
         C         R5,ZSAVE(R2)        GREATER THAN DEFAULT .Q          28960027
         BH        DETB02              GET NEXT LOWER IF YES            28980027
         C         R5,MINBLK           ARE WE BELOW MINIMUM .Q          29000027
         BNL       ROUND               BRANCH IF NOT                    29020027
         L         R5,MINBLK           TAKE THE MINIMUM                 29040027
ROUND    DS        0H                                                   29060027
         N         R5,=F'-8'           ROUND DOWN TO DOUBLE WORDS LONG  29080027
         STH       R5,DCBBLKSI(,R4)    PLACE FINAL BLKSIZE IN DCB       29100027
         AIF       (&NOTSTAT).NOBLKSZ                                   29120027
*        PRINT BLKSIZE OF EACH UT                                       29140027
         CVD       R5,DWORD            DECIMAL                          29160027
         MVC       BLKLINE(8),0(R1)    DDNAME                           29180027
         MVC       BLKEDIT+1(5),=X'2020202120' INIT EDIT                29200027
         ED        BLKEDIT(6),DWORD+5  BLKSIZE IN CHAR                  29220027
         B         PRNTBLK             PRINT IT                         29240027
BLKLINE  DC        CL50' '             BLANKS                           29260027
         ORG       BLKLINE                                              29280027
         DC        C'SYSUTN   BLKSIZE='                                 29300027
BLKEDIT  DC        C' ',X'2020202120'                                   29320027
         ORG                                                            29340027
PRNTBLK  PRINTOUT  BLKLINE,DCB=NO,CSECT=GAECT,TYPE=STAT                 29360027
.NOBLKSZ ANOP                                                           29380027
         BXH       R2,R3,UTLOOP        LOOP FOR EACH UTILITY            29400027
         B         BUFTOTAL            GO SET UP BUFFERS AND DICTS      29420027
         EJECT                                                          29440027
*                                                                       29460027
*        COMPUTE MAXIMUM BLKSIZE FOR N BLOCKS PER TRACK.                29480027
*        EQUATION FOR FOLLOWING COMPUTATION IS --                       29500027
*             DL = (2**9(MB-(N-1)*BO))/2**9+(N-1)*TF                    29520027
*        WHERE     DL = DATA LENGTH = BLKSIZE                           29540027
*                  BO = BLOCK OVERHEAD                                  29560027
*                  TF = TOLERANCE FACTOR                                29580027
*                  MB = MAXIMUM BLOCK = TRACK CAPACITY                  29600027
*                                                                       29620027
*        INPUT     R0 IS (N-1) BLOCKS PER TRACK                         29640027
*                  R14 IS RETURN REGISTER                               29660027
*        OUTPUT    BLKSIZE IN R5                                        29680027
*                                                                       29700027
CMBFSZ   DS        0H                                                   29720027
         LR        R5,R0               SAVE N-1                         29740027
         A         R0,F1               N = N+1                          29760027
         SR        R6,R6               ZERO WORK REGISTER               29780027
         LR        R7,R6               AND ANOTHER                      29800027
         IC        R6,IOSAVE+14        LAST KEYED BLOCK OVERHEAD        29820027
         IC        R7,IOSAVE+16        LESS BLOCK OVERHEAD IF NOT KEYED 29840027
         TM        IOSAVE+17,ZEUS      IS IT 2305 .Q                    29860027
         BZ        NOTZEUS             BRANCH IF NOT                    29880027
         LH        R6,IOSAVE+14        2305 DRIVE OVERHEAD              29900027
NOTZEUS  DS        0H                                                   29920027
         SR        R7,R6               COMPUTE BLOCK OVERHEAD           29940027
         MR        R6,R5               COMPUTE M*(-BO) PLUS THE         29960027
         A         R7,IOSAVE+4         MAXIMUM SIZE FOR UNKEYED BLOCK   29980027
         TM        IOSAVE+17,ZEUS      IS IT 2305 .Q                    30000027
         BZ        NOZEUS              BRANCH IF NOT                    30020027
         LH        R6,IOSAVE+14        LAST BLOCK OVERHEAD              30040027
         B         YEZEUS              AND CONTINUE                     30060027
NOZEUS   DS        0H                                                   30080027
         SR        R6,R6               ZERO WORK REGISTERS              30100027
         IC        R6,IOSAVE+15        LAST BLOCK OVERHEAD              30120027
YEZEUS   DS        0H                                                   30140027
         SR        R7,R6               SUBTRACT LAST BLOCK OVERHEAD     30160027
         SR        R6,R6               ZERO WORK REGISTER               30180027
         IC        R6,IOSAVE+16        ADD KEY                          30200027
         AR        R7,R6               OVERHEAD                         30220027
         SLA       R7,9                TIMES 2**9                       30240027
         TM        IOSAVE+17,X'01'     IS TOLERANCE FACTOR NEEDED .Q    30260027
         BZ        NOTF                BRANCH IF NOT                    30280027
         MH        R5,IOSAVE+18        M*TF                             30300027
NOTF1    DS        0H                                                   30320027
         LA        R5,512(,R5)         ADD 2**9 TO IT                   30340027
         SR        R6,R6               ZERO EVEN OF EVEN/ODD            30360027
         DR        R6,R5               COMPUTE OPTIMUM BLOCK            30380027
         LR        R5,R7               PASS BACK ANSWER                 30400027
         BR        R14                 AND RETURN                       30420027
NOTF     DS        0H                                                   30440027
         SLA       R5,9                TIMES 2**9 ASSUME TF=512         30460027
         B         NOTF1               GO BACK                          30480027
         SPACE     2                                                    30500027
ZEUS     EQU       X'08'               2305 INDICATOR                   30520027
         EJECT                                                          30540027
*        COMPUTE TOTAL CORE REQUIREMENTS FOR F2 BUFFERS AND INIT DICTS  30560027
*                                                                       30580027
BUFTOTAL DS        0H                                                   30600027
         LM        R1,R3,L1DCBADS+L1SUT1(R9)  THREE UTILITY DCB ADDRS   30620027
         LH        R1,DCBBLKSI(,R1)    UT1 BLKSIZE                      30640027
         LH        R2,DCBBLKSI(,R2)    UT2 BLKSIZE                      30660027
         LH        R3,DCBBLKSI(,R3)    UT3 BLKSIZE                      30680027
         ST        R1,SSEG             SUBSETTED DICT SEGMENT LENGTH    30700027
         STH       R1,BWBLKS+BWBFSZ    LENGTH OF UT1 BUFFER             30720027
         STH       R3,BWBLKS+16+BWBFSZ LENGTH OF UT3 BUFFER             30740027
         ST        R3,INPLEN                                            30760027
         CR        R2,R3               PICK MIN(2,3) FOR OBSIZ          30780027
         BL        SP6                                                  30800027
         LR        R2,R3                                                30820027
SP6      DS        0H                                                   30840027
         ST        R2,OBSIZ            SET OBSIZE                       30860027
         L         R2,ADCBLB           ADD MACLIB TO UT1 BLKSIZE        30880027
         AH        R1,DCBBLKSI(,R2)                                     30900027
         AH        R1,DCBBLKSI(,R2)    DOUBLE IT                        30920027
         LA        R1,2*LBEND(,R1)     PLUS DECB PREFIX TO BUFFERS      30940027
         AR        R1,R3               ADD UT3 BLKSIZE                  30960027
         A         R1,=A(6*BLKSZ)      ADD ON OTHER CORE REQ'D          30980027
         ST        R1,TOTLEN           SAVE FOR CALL TO ASMGBUFF        31000027
         SPACE     4                                                    31020027
*********  GET CORE FROM ASMGBUFF  **********                           31040027
*                                                                       31060027
         L         R1,BUFFENT          ADDR OF ASMGBUFF                 31080027
         CNOP      2,4                                                  31100027
         BALR      R0,R1                                                31120027
         DC        F'36'          CODE FOR A SHRINK OF BUFF SPACE       31140027
TOTLEN   DC        A(0)                WILL HOLD TOTAL CORE REQ'D       31160027
         DC        A(0)                BUFF WILL FILL IN ADDR OF CORE   31180027
         CLI       TOTLEN+4,X'FF'      CHECK ENOUGH CORE                31200027
         BNE       COMINIT                                              31220027
         BAL       R0,ASMABEND         POINT AT TERMINAL MESSAGE        31240027
         DC        C'993I',AL1(L'MES993-1)                              31260027
MES993   DC        C'INSUFFICIENT MEMORY FOR PHASE F2 I/O BUFFERS'      31280027
ASMABEND DS        0H                                                   31300027
         L         R1,ADLIST1          POINT TO LIST1 IN ASMGASM        31320027
         B         L1ABEND(,R1)        BRANCH TO ABEND ROUTINE          31340027
         EJECT                                                          31360027
*                                                                       31380027
* INITIALIZE COMMON AREA                                                31400027
*                                                                       31420027
*                                                                       31440027
*                                                                       31460027
*        ASSIGN BUFFER LOCATIONS                                        31480027
*                                                                       31500027
COMINIT  DS        0H                                                   31520027
         L         R4,TOTLEN+4         BOTTOM OF MY CORE                31540027
         ST        R4,BWBUF1            START OF BUFFER 1 ADDRESS (UT3) 31560027
         ST        R4,BWBLKS+16+BWBUFF                                  31580027
         AH        R4,BWBLKS+16+BWBFSZ  UT3 BUFFER ADDRESS + LENGTH IS  31600027
         ST        R4,BWBUF2            START OF BUFFER 2 ADDRESS (UT1) 31620027
         ST        R4,BWBLKS+BWBUFF                                     31640027
         AH        R4,BWBLKS+BWBFSZ    UT1 BUFFER PLUS LENGTH           31660027
         ST        R4,LBDECBAD         1ST SYSLIB DECB POINTER          31680027
         XC        0(LBEND,R4),0(R4)   CLEAR 1ST SYSLIB DECB/SUFFIX     31700027
         L         R1,ADCBLB           SYSLIB DCB ADDRESS               31720027
         LA        R5,LBEND(,R4)       1ST SYSLIB BUFFER ADDRESS        31740027
         ST        R1,LBDCBAD(,R4)     DCB ADDRESS IN 1ST DECB          31760027
         ST        R5,LBAREAAD(,R4)    BUFFER ADDRESS IN 1ST DECB       31780027
         AH        R5,DCBBLKSI(,R1)    PLUS BLKSIZE OF 1ST MACLIB BUFF  31800027
         ST        R5,LBDECBAD+4       IS 2ND SYSLIB DECB ADDRESS       31820027
         XC        0(LBEND,R5),0(R5)   CLEAR 2ND SYSLIB DECB/SUFFIX     31840027
         LA        R4,LBEND(,R5)       2ND SYSLIB BUFFER ADDRESS        31860027
         ST        R1,LBDCBAD(,R5)     DCB ADDRESS IN 2ND DECB          31880027
         ST        R4,LBAREAAD(,R5)    BUFFER ADDRESS IN 2ND DECB       31900027
*                                                                       31920027
*        SET UP GLOBAL DICTIONARY                                       31940027
*                                                                       31960027
         AH        R4,DCBBLKSI(,R1)    POINT AT GLOBAL DICT             31980027
         LR        R5,R4                                                32000027
         ST        R5,GDP              START OF GBL DICT +              32020027
         A         R5,=A(6*BLKSZ)       INIT DICT ALLOCATION -          32040027
         BCTR      R5,0                 1 = END OF DICT SPACE WHICH     32060027
         ST        R5,DEND               GOES TO DEND.                  32080027
*                                                                       32100027
         EJECT                                                          32120027
*        IF IN BATCH MODE GET THE INITIAL GLOBAL DICTIONARY FROM THE    32140027
*          ASMGISXX MODULE WHICH IS CORE RESIDENT.                      32160027
*        IF NOT BATCH MODE, READ IT IN FROM SYSUT1.                     32180027
*                                                                       32200027
*        R4 POINTS AT GLOBAL DICTIONARY ALLOCATED SPACE                 32220027
         L         R2,PNDX             LENGTH OF DICT                   32240027
         LR        R6,R4               SAVE GDP FOR DCINIT              32260027
*                                                                       32280027
         TM        PARBYT1,BATCH       TEST IF BATCH                    32300027
         BZ        READGBL                                              32320027
*                                                                       32340027
         L         R1,L1ISADDR(,R9)    POINT AT INSTSET MODULE          32360027
         LA        R0,256              MVC LENGTH                       32380027
MVC256   DS        0H                                                   32400027
         SR        R2,R0               NUMBER OF BYTES GT 256 .Q        32420027
         BM        MVCLT256            BRANCH IF NOT                    32440027
         MVC       0(256,R4),2*PASHL+4(R1)  MOVE 256 BYTES              32460027
         BZ        DCINIT              BRANCH IF MULT OF 256            32480027
         AR        R4,R0               INCREMENT 'TO' LOCATION          32500027
         AR        R1,R0               INCREMENT 'FROM' LOCATION        32520027
         B         MVC256              MOVE ANOTHER CHUNK               32540027
MVCLT256 DS        0H                                                   32560027
         A         R2,F255             RESTORE REMAINING LENGTH-1       32580027
         EX        R2,MVCRT256         MOVE THE REST                    32600027
         B         DCINIT              AND CONTINUE                     32620027
MVCRT256 MVC       0(*-*,R4),2*PASHL+4(R1)  MOVE TAIL OF RECORD         32640027
*                                                                       32660027
*        READ GBL DICT FROM SYSUT1                                      32680027
READGBL  DS        0H                                                   32700027
         L         R3,L1DCBADS+L1SUT1(,R9)  SYSUT1 DCB ADDRESS          32720027
         LA        R5,2000             BLOCK SIZE                       32740027
READIS   READ      DECB2,SF,(R3),(R4),(R5)       READ GBLDICT BLOCK     32760027
         CHECK     DECB2                                                32780027
         AR        R4,R5               UP TO ADDRESS                    32800027
         SR        R2,R5               DECREMENT TOTAL LENGTH           32820027
         BH        READIS              BR IF MORE BLOCKS                32840027
*                                                                       32860027
*        REWIND THE UTILITY                                             32880027
         POINT     (R3),F1                                              32900027
         EJECT                                                          32920027
*                                                                       32940027
* INITIALIZATION FOR DICTIONARY MAINTENANCE                             32960027
*                                                                       32980027
*        DICTIONARY CORE ALLOCATION-                                    33000027
*        DICTIONARIES FOLLOW BUFFERS IN GETMAIN SPACE.                  33020027
*        BLOCK SIZE IS SPECIFIED IN 'BLKSZ'. FIRST 3 BLOCKS ARE INI-    33040027
*        TIALLY RESERVED FOR PERMANENT (GLOBAL) DICTIONARY. EACH        33060027
*        SUCCEEDING BLOCK CONTAINS ONE TRANSIENT (LOCAL) DICTIONARY.    33080027
*        BEGINNING OF THE FIRST TRANS DICT IS CALLED THE THRESHOLD.     33100027
*        END OF DICTIONARY IS COMPUTED DURING COMMON AREA INITIALIZA-   33120027
*        TION AND STORED AT 'DEND'.                                     33140027
*                                                                       33160027
*        R6 POINTS AT ALLOCATED SPACE FOR DICTS                         33180027
*                                                                       33200027
DCINIT   DS        0H                                                   33220027
         LA        R2,3*BLKSZ(,R6)     DICTIONARY START + 3 BLOCKS      33240027
         LR        R4,R2                 R4 = R2                        33260027
         LA        R3,BLKSZ(,R2)       DICTIONARY START + 4 BLOCKS      33280027
         STM       R2,R4,HISTRY         SAVE THESE FOR PHASE F2A        33300027
*                                                                       33320027
*        ZERO THE START OF EACH TRANS DICT SO THEY APPEAR EMPTY         33340027
*                                                                       33360027
DCL8     DS        0H                                                   33380027
         XC        0(7,R4),0(R4)        INSERT ZEROS                    33400027
         LA        R4,BLKSZ(,R4)        STEP POINTER 1 BLOCK            33420027
         C         R4,DEND              LOOP UNTIL OUT                  33440027
         BNH       DCL8                   OF DICTIONARY                 33460027
         SPACE     5                                                    33480027
*        IF IN BATCH & EXECUTE MODE READ AND PRINT THE $JOB CARD        33500027
*                                                                       33520027
*                                                                       33540027
         TM        L1PBYT1(R9),X'10'   WAS BATCH SPECIFIED .Q           33560027
         BZ        F2XCTL              BRANCH IF NOT                    33580027
         TM        L1PBYT2(R9),X'20'   WAS EXECUTE SPECIFIED .Q         33600027
         BZ        F2XCTL              BRANCH IF NOT                    33620027
         MVC       LINE,L1BLANKS(R9)   BLANK PRINT LINE FOR $JOB        33640027
         MVC       LINE+20(4),L1$JOB(R9)  MAYBE USER WON'T PROVIDE ONE  33660027
         TM        L1SINSW(R9),X'40'   WAS $JOB CARD FOUND IN INIT .Q   33680027
         BZ        NO$JOB              BRANCH IF NOT                    33700027
         NI        L1SINSW(R9),X'FF'-X'40'  TURN OFF $JOB INDICATION    33720027
         L         R1,L1DCBADS+L1SIN(,R9)  POINT AT SYSIN DCB           33740027
         GET       (1),LINE+20         READ THE $JOB CARD               33760027
NO$JOB   DS        0H                                                   33780027
         MVI       LINE,10             SKIP 10 LINES                    33800027
         BAL       R14,SYSL1           PRINT IT                         33820027
         EJECT                                                          33840027
*                                                                       33860027
*        INITIALIZATION IS COMPLETE                                     33880027
*        XCTL TO F2 FOR PROCESSING                                      33900027
*                                                                       33920027
F2XCTL   DS        0H                                                   33940027
         L         R10,BWBUF2          START OF BUFFER 2 ADDRESS (UT1)  33960027
         MVC       0(256,R10),F1F2STRT MOVE SHARED F1/F2 COMMON         33980027
         MVC       256(256,R10),F1F2STRT+256       ALL OF IT            34000027
         MVC       512(F1F2END-F1F2STRT-512,R10),F1F2STRT+512           34020027
         LA        R1,L1BLDL+2*L1LENBL(,R9)  ADDRESS OF ASMGF2 IN BLDL  34040027
         XCTL      ,DE=(R1)            TRANSFER CONTROL                 34060027
         SPACE     2                                                    34080027
*                                                                       34100027
*        THIS ROUTINE EXPANDS AND PRINTS ERROR MESSAGES                 34120027
*                                                                       34140027
ERROUT   DS        0H                                                   34160027
         STM       R14,R2,IOSAVE       SAVE REGS                        34180027
         LR        R1,R0               R1 POINTS AT MESSAGE             34200027
         MVC       ER1+1(1),4(R1)      LENGTH FOR MVC                   34220027
         MVC       LINE+3(4),ASMG      'ASMG' TO LINE                   34240027
         MVC       LINE+7(4),0(R1)     ERROR NUMBER                     34260027
ER1      MVC       LINE+14(*-*),5(R1)  PLACE MESSAGE                    34280027
         L         R1,L1DCBADS+L1STERM(,R9) SYSTERM DCB ADDRESS         34300027
         TM        DCBOFLGS(R1),X'10'  IS SYSTERM OPEN .Q               34320027
         BZ        SYSL2               NO, GO PRINT ON SYSPRINT         34340027
         L         R2,L1TRSAVE(,R9)    GET SYSTERM LINE COUNT           34360027
         S         R2,F2               DECREMENT BY TWO                 34380027
         BP        TERMPUT             BRANCH IF POSITIVE               34400027
         MVI       LINE,X'FF'          EJECT TO NEW PAGE                34420027
         L         R2,LCTBYT           RESTORE LINE COUNT               34440027
TERMPUT  DS        0H                                                   34460027
         ST        R2,L1TRSAVE(,R9)    SAVE UPDATED LINE COUNT          34480027
         PUT       (1),LINE            PUT THE LINE                     34500027
         MVI       LINE,X'02'          RESTORE CARRIAGE CONTROL         34520027
         B         SYSL2               GO PRINT ON SYSPRINT             34540027
ASMG     DC        C'ASMG'                                              34560027
         EJECT                                                          34580027
************  P R I N T  R O U T I N E  **************                  34600027
*                                                                       34620027
*  SYSTEM LIST SUBROUTINE  FOR ASSEMBLER G    PHASE F1                  34640027
*                                                                       34660027
*    USE OF PRINT ROUTINE                                               34680027
*                                                                       34700027
*                  133 BYTE OUTPUT LINE AT LOCATION 'LINE'.             34720027
*                  NO. LINES TO BE SKIPPED IN FIRST BYTE OF LINE.       34740027
*                                                                       34760027
SYSL1    DS        0H                                                   34780027
         STM       R14,R2,IOSAVE       SAVE VOLATILE REGISTERS          34800027
SYSL2    DS        0H                                                   34820027
         L         R1,L1DCBADS+L1SPRINT(,R9)  GET SYSPRINT DCB ADDRESS  34840027
         PUT       (1),LINE            PRINT IT OUT                     34860027
         MVC       LINE,L1BLANKS(R9)   CLEAR PRINT LINE                 34880027
         MVI       LINE,X'02'          SET FOR TWO SPACES               34900027
         LM        R14,R2,IOSAVE       RESTORE CALLER'S REGS            34920027
         BR        R14                 AND RETURN                       34940027
         EJECT                                                          34960027
***********  DATE AND TIME ROUTINE  *************                       34980027
*         THIS ROUTINE PLACES THE TIME IN CHARACTER IN LOCATION 'ZTIME' 35000027
*         IT IS IN FORMAT 'HH:MM:SS' WITH LEADING 0'S NOT SUPPRESSED    35020027
*         THE DATE IN CHARACTER IS PLACED IN LOCATION 'ZDATE'           35040027
*         IT IS IN FORMAT 'DD MON YY' WITH LEADING 0 SUPPRESSED         35060027
*                                                                       35080027
*        THE ROUTINE ALSO DETERMINES THE DAY OF THE WEEK AND PLACES IT  35100027
*        AT ZDAY.  IT ONLY WORKS FOR 1901 TO 1999.                      35120027
*        THE DAY OF THE WEEK SECTION OF THIS ROUTINE WAS INSPIRED BY,   35140027
*        AND IS SOMEWHAT MODELLED AFTER, THE PROGRAM 'WEEKDAY' (TYPE 3, 35160027
*        NUMBER 360D-03.8.003, AUTHOR RICHARD L. CONNER, OCTOBER 15,    35180027
*        1966, IBM CONTRIBUTED PROGRAM LIBRARY).                        35200027
*                                                                       35220027
*        CALLING SEQUENCE -    BAL      R14,ZMONTH                      35240027
*        THE ROUTINE MUST BE COVERED BY A BASE, AND R13 SHOULD POINT AT 35260027
*             AN OS SAVE AREA.                                          35280027
*                                                                       35300027
*                                                                       35320027
ZMONTH   DS        0H                                                   35340027
         STM       R14,R1,ZSAVE        SAVE SOME REGISTERS              35360027
         TIME      DEC                 GET TIME AND DATE                35380027
         ST        R0,ZWORK            STORE TIME                       35400027
         UNPK      ZWORK(7),ZWORK(4)   CHANGE TO CHARACTER              35420027
         MVC       ZTIME(2),ZWORK      PLACE IN TIME                    35440027
         MVC       ZTIME+3(2),ZWORK+2                                   35460027
         MVC       ZTIME+6(2),ZWORK+4                                   35480027
         SR        R0,R0               MAKE YR & DAY DBL WORD           35500027
         STM       R0,R1,ZWORK                                          35520027
         UNPK      L1JULDTE(5,R9),ZWORK+5(3)  SAVE JULIAN DATE FOR END  35540027
         UNPK      ZDATE+7(3),ZWORK+5(2) PLACE YR IN OUTPUT             35560027
         CVB       R1,ZWORK            YR & DAY DBL BINARY WORD         35580027
         D         R0,=F'1000'         YR IN R1, DAY IN R0              35600027
         BCTR      R1,0                YR-1                             35620027
         LR        R15,R1              YR-1                             35640027
         SRL       R15,2               (YR-1)/4                         35660027
         N         R1,F3               (YR-1) MOD 4                     35680027
         MH        R15,H5              (YR-1)/4*5                       35700027
         AR        R15,R1              (YR-1)/4*5 + ((YR-1) MOD 4)      35720027
         AR        R15,R0              (YR-1)/4*5 + ((YR-1) MOD 4)+DAYS 35740027
         SR        R14,R14             DBL WORD LONG                    35760027
         D         R14,F7              DAY OF WEEK IN R14               35780027
         MH        R14,H9              INDEX DAY NAME TABLE             35800027
         LA        R14,ZDAYTAB(R14)    GET THE DAY                      35820027
         MVC       ZDAY,0(R14)                                          35840027
         IC        R1,ZFEBTAB(R1)      28 OR 29 DAYS IN FEB             35860027
         STC       R1,ZFEB                                              35880027
         LA        R1,ZTAB-4           POINT AT MONTH TABLE             35900027
         SR        R15,R15             CLEAR R15                        35920027
ZLOOP    DS        0H                                                   35940027
         LA        R1,4(,R1)           POINT AT NEXT MONTH              35960027
         IC        R15,0(,R1)          PICK UP NO DAYS IN MONTH         35980027
         SR        R0,R15              SUBTRACT NO. DAYS IN MONTH       36020027
         BH        ZLOOP               DONE IF 0 OR NEGATIVE            36040027
         AR        R0,R15              ADD BACK LAST MONTH              36060027
         CVD       R0,ZWORK            CHANGE DAY IN MONTH TO PACKED    36080027
         MVC       ZDATE-2(4),ZEDIT    EDIT DAY INTO OUTPUT             36100027
         ED        ZDATE-2(4),ZWORK+6                                   36120027
         MVC       ZDATE+3(3),1(R1)    MOVE NAME OF MONTH TO OUTPUT     36140027
         LM        R14,R1,ZSAVE        RESTORE REGISTERS                36160027
         BR        R14                 RETURN                           36180027
ZTAB     DC        AL1(31),C'JAN'                                       36200027
ZFEB     DC        AL1(28),C'FEB'                                       36220027
         DC        AL1(31),C'MAR'                                       36240027
         DC        AL1(30),C'APR'                                       36260027
         DC        AL1(31),C'MAY'                                       36280027
         DC        AL1(30),C'JUN'                                       36300027
         DC        AL1(31),C'JUL'                                       36320027
         DC        AL1(31),C'AUG'                                       36340027
         DC        AL1(30),C'SEP'                                       36360027
         DC        AL1(31),C'OCT'                                       36380027
         DC        AL1(30),C'NOV'                                       36400027
         DC        AL1(255),C'DEC'                                      36420027
ZFEBTAB  DC        AL1(28,28,28,29)                                     36440027
ZDAYTAB  DC        C'MONDAY   '                                         36460027
         DC        C'TUESDAY  '                                         36480027
         DC        C'WEDNESDAY'                                         36500027
         DC        C'THURSDAY '                                         36520027
         DC        C'FRIDAY   '                                         36540027
         DC        C'SATURDAY '                                         36560027
         DC        C'SUNDAY   '                                         36580027
ZWORK    DC        D'0'                                                 36600027
         DC        2X'00'                                               36620027
ZDATE    DC        C'XX XXX XX'        DO NOT MOVE THIS CARD            36640027
         DC        X'00'                                                36660027
ZTIME    DC        C'XX:XX:XX'                                          36680027
ZDAY     DC        CL9' '                                               36700027
ZSAVE    DC        4F'0'                                                36720027
ZEDIT    DC        C' ',X'202120'                                       36740027
         EJECT                                                          36760027
         LTORG                                                          36780027
         SPACE     2                                                    36800027
K1       EQU       1024                ONE 'K'                          36820027
*        INTERPRETATION OF CVTDCB FLAGS                                 36840027
SYSTAB   DC        C'MVT',AL1(K1*4/256)     B'X001XX0X'                 36860027
*.* DAN SKOMSKY 09/22/2007 GET WITH THE TIMES                 DS092207  36862027
*.*      DC        C'VS2',AL1(K1*4/256)     B'X001XX1X'       DS092207  36880027
         DC        C'MVS',AL1(K1*4/256)     B'X001XX1X'       DS092207  36882027
         DC        C'MFT',AL1(K1*2/256)     B'X010XX0X'                 36900027
*.* DAN SKOMSKY 09/22/2007 GET WITH THE TIMES                 DS092207  36902027
*.*      DC        C'VS1',AL1(K1*4/256)     B'X010XX1X'       DS092207  36920027
         DC        C'SVS',AL1(K1*4/256)     B'X010XX1X'       DS092207  36922027
         DC        C'***',AL1(K1*4/256)     UNUSED                      36940027
         DC        C'***',AL1(K1*4/256)     UNUSED                      36960027
         DC        C'PCP',AL1(K1*2/256)     B'X100XX0X'                 36980027
         DC        C'CMS',AL1(K1*4/256)     CMS SAME AS PCP       V7A52 38340028
         SPACE     2                                                    38360027
DCTDVTAD DC        AL2(L1SLIN,L1STERM,L1SUP,L1SLIB)  INDIRECT           38380027
         DC        AL2(L1SIN,L1SPRINT,L1SPUNCH,L1SUT1) DCB              38400027
         DC        AL2(L1SUT2,L1SUT3,L1SLIN,L1STERM)   MAPPING          38420027
         SPACE     2                                                    38440027
ENDLINE  DC        A(LINE+100)                                          38460027
MINBLK   DC        F'1608'             UT1, UT2, UT3 MINIMUM BLKSIZE    38480027
XREFSUFX DC        X'00',AL3(*-*)      XREF OPTION SUFFIX, IF ANY       38500027
LEVEL    DC        C'LEVEL=G'                                           38520027
RELEASE  DC        C'RELEASE='                                          38540027
OVERRIDE DC        C'OVERRIDING PARM='                                  38560027
SYSTEM   DC        C'SYSTEM=AAA 9999'                                   38580027
*.* DAN SKOMSKY 09/22/2007 GET WITH THE TIMES                 DS092207  38582027
*.* MODEL    DC    C'MODEL=   '                               DS092207  38600027
MODEL    DC        C'MODEL=    '                              DS092207  38622027
TIME     DC        C'TIME='                                             38640027
DAY      DC        C'DAY='                                              38660027
DATE     DC        C'DATE='                                             38680027
*.* DAN SKOMSKY 09/22/2007 CONDITIONAL OS/XXX BLURB           DS092207  38682027
         AIF       (&SYM370).OS370 INCLUDE 370 INSTRUCTIONS?  DS092207  38684027
HEADER   DC        C'OS/360 '      DEFAULT TO OS/360 BLURB    DS092207  38700027
         AGO       .OSDONE         SKIP THE OS/370 BLURB      DS092207  38702027
.OS370   ANOP      .               YES, 370 INSTRUCTIONS      DS092207  38704027
HEADER   DC        C'OS/370 '      DO OS/370 BLURB            DS092207  38706027
.OSDONE  ANOP      .               WE ARE DONE WITH OS BLURB  DS092207  38708027
OPTIONS  DC        C'ASSEMBLER OPTIONS='                                38720027
OPTWORK  DC        7C' ',C'K'                                           38740027
OPTEDIT  DC        5X'20',X'2120'                                       38760027
         EJECT                                                          38780027
*                                                                       38800027
*        DCBTAB                                                         38820027
*                                                                       38840027
*     FORMAT.                                                           38860027
*        DC        H'DEFAULT BLKSIZE'                                   38880027
*        DC        AL1(DEFAULT BUFNO)                                   38900027
*        DC        XL2'MASK FOR TURNING OFF OPTIONS IF NO OPEN'         38920027
*        DC        X'SWITCHES'                                          38940027
*                  X'80'               ABEND IF NO OPEN                 38960027
*                  X'40'               BLKSIZE ERROR DETECTED           38980027
*        DC        X'NO OPEN SEVERITY CODE'   X'80' = 16,   X'40' = 4   39000027
*        DC        X'UNUSED'                                            39020027
*                                                                       39040027
DCBTAB   DC        H'3200',AL1(2),X'BFFF',X'00',X'80',X'00'   SYSLIN    39060027
DCBTABTM DC        H'0133',AL1(2),X'FFF7',X'00',X'40',X'00'   SYSTERM   39080027
         DC        H'0080',AL1(2),X'FFBF',X'00',X'80',X'00'   SYSUP     39100027
         DC        H'0080',AL1(0),X'FFFF',X'00',X'80',X'00'   SYSLIB    39120027
         DC        H'0080',AL1(2),X'FFFF',X'80',X'00',X'00'   SYSIN     39140027
         DC        H'0133',AL1(2),X'FFFF',X'80',X'00',X'00'   SYSPRINT  39160027
         DC        H'0000',AL1(0),X'FFFF',X'80',X'00',X'00'   UT1 V7A46 39162028
         DC        H'0000',AL1(0),X'FFFF',X'80',X'00',X'00'   UT2 V7A46 39164028
         DC        H'0000',AL1(0),X'FFFF',X'80',X'00',X'00'   UT3 V7A46 39166028
         DC        H'0080',AL1(3),X'7FFF',X'00',X'40',X'00'   SYSPUNCH  39180027
         SPACE     2                                                    39200027
         EJECT                                                          39220027
*                                      *PARBYT0                         39240027
*        DS        0CL1                *         RESERVED               39260027
*        DS        0CL2                *         RESERVED               39280027
*        DS        0CL3                *         RESERVED               39300027
*        DS        0CL4                *         RESERVED               39320027
*        DS        0CL5                *         RESERVED               39340027
*        DS        0CL6                *         RESERVED               39360027
*        DS        0CL7                *         RESERVED               39380027
*        DS        0CL8                *         RESERVED               39400027
*                                                                       39420027
*                                      *PARBYT1                         39440027
FUPLIST# DS        0CL9                *         FULLUPLIST             39460027
DOS#     DS        0CL10               *         DOS                    39480027
ESD#     DS        0CL11               *         ESD                    39500027
BATCH#   DS        0CL12               *         BATCH                  39520027
FLIST#   DS        0CL13               *         FULLLIST               39540027
EXTEN#   DS        0CL14               *         EXTEN                  39560027
FXREF#   DS        0CL15               *         FULLXREF               39580027
ALGN#    DS        0CL16               *         ALGN                   39600027
*                                                                       39620027
*                                      *PARBYT                          39640027
DECK#    DS        0CL17               *         DECK                   39660027
LOAD#    DS        0CL18               *         LOAD                   39680027
RENT#    DS        0CL19               *         RENT                   39700027
LIST#    DS        0CL20               *         LIST                   39720027
RLD#     DS        0CL21               *         RLD                    39740027
UPLIST#  DS        0CL22               *         UPLIST                 39760027
XREF#    DS        0CL23               *         XREF                   39780027
TEST#    DS        0CL24               *         TESTRAN                39800027
*                                                                       39820027
*                                      *PARBYT2                         39840027
LREF#    DS        0CL25               *         LREF                   39860027
UPDATE#  DS        0CL26               *         UPDATE                 39880027
EXECUTE# DS        0CL27               *         EXECUTE                39900027
SPACEM#  DS        0CL28               *         SPACE=MAX              39920027
TERM#    DS        0CL29               *         TERM                   39940027
NUM#     DS        0CL30               *         NUM                    39960027
STMT#    DS        0CL31               *         STMT                   39965027
SEQ#     DS        0CL32               *         SEQ              V7A43 39980028
*                                                                       40000027
*                                      *PARBYT3                         40020027
UMAP#    DS        0CL33               *         UMAP                   40040027
CMS#     DS        0CL34               *         CMS                    40060027
XREFFS#  DS        0CL35               *         XREF(FULL/SHORT)       40080027
PRT#     DS        0CL36               *         PRINTER                40100027
YFLAG#   DS        0CL37               *         YFLAG            V7A44 40120028
*        DS        0CL38               *         RESERVED               40140027
*        DS        0CL39               *         RESERVED               40160027
UNUSED#  DS        0CL40               *         UNUSED                 40180027
*                                                                       40200027
*                                      *PARBYT4                         40220027
*        DS        0CL41               *         RESERVED               40240027
*        DS        0CL42               *         RESERVED               40260027
*        DS        0CL43               *         RESERVED               40280027
*        DS        0CL44               *         RESERVED               40300027
*        DS        0CL45               *         RESERVED               40320027
*        DS        0CL46               *         RESERVED               40340027
*        DS        0CL47               *         RESERVED               40360027
*        DS        0CL48               *         RESERVED               40380027
         EJECT                                                          40400027
*                                                                       40420027
*        ASSEMBLER OPTIONS                                              40440027
*                                                                       40460027
*        THE FOLLOWING TABLE IDENTIFIES EACH OPTION AND ITS FUNCTION    40480027
*                                                                       40500027
*        TWELVE CHARACTERS WITH TRAILING BLANKS IDENTIFYING THE PARM    40520027
*        BITS 0-3     ACTUAL LENGTH OF PARM                             40540027
*        BITS 4-7     MINIMUM LENGTH OF PARM                            40560027
*        BIT  0       ON IF THIS IS A SHORT FORM                        40580027
*        BIT  1       ON IF THERE MAY BE A SUFFIX (XREF)                40600027
*        BITS 2-3     UNUSED                                            40620027
*        BITS 4-7     X'0'  OR OPTPBITS BYTES INTO SWITCHES             40640027
*                     X'1'  AND OPTPBITS BYTES INTO SWITCHES            40660027
*                     X'2'  OR 2 OPTPBITS, AND REST INTO SWITCHES       40680027
*                     X'3'  NEXT 2 IS OFFSET TO NUMBER CONTROL          40700027
*                     X'4'  SYSPARM ENTRY                               40720027
*                     X'5'  SPACE ENTRY                                 40740027
*        X'FF' ENDS THE TABLE                                           40760027
         SPACE                                                          40780027
OPTPSTR  EQU       0                   CHARACTERS WITH TRAILING BLANKS  40800027
OPTPLEN  EQU       OPTPSTR+12          ACTUAL AND MINIMUM LENGTHS       40820027
OPTPFLGS EQU       OPTPLEN+1           FLAGS AND CODES                  40840027
OPTPBITS EQU       OPTPFLGS+1          SWITCHING BITS                   40860027
OPTPEND  EQU       OPTPBITS+6          END OF ENTRY                     40880027
         SPACE                                                          40900027
OPTEST   DC        0F'0'               FOR STARTING ALIGNMENT           40920027
         APARM     ALIGN,MIN=3,ON=ALGN#,FORM=S                          40940027
         APARM     ALGN,MIN=2,ON=ALGN#                                  40960027
         APARM     NOALIGN,MIN=5,OFF=ALGN#,FORM=S                       40980027
         APARM     NOALGN,MIN=4,OFF=ALGN#                               41000027
         APARM     BATCH,MIN=1,ON=BATCH#                                41020027
         APARM     NOBATCH,MIN=3,OFF=BATCH#                             41040027
         APARM     'CALIGN=',MIN=2,ADDR=CALIGN                          41060027
         APARM     CMS,MIN=3,ON=CMS#                                    41080027
         APARM     'COLUMN=',MIN=2,ADDR=COLCOUNT                        41100027
         APARM     DECK,MIN=1,ON=DECK#                                  41120027
         APARM     NODECK,MIN=3,OFF=DECK#                               41140027
         APARM     DOS,MIN=3,ON=DOS#                                    41160027
         APARM     ESD,MIN=2,ON=ESD#                                    41180027
         APARM     NOESD,MIN=4,OFF=ESD#                                 41200027
         APARM     EXECUTE,MIN=4,ON=EXECUTE#                            41220027
         APARM     NOEXECUTE,MIN=6,OFF=EXECUTE#                         41240027
         APARM     EXTEN,MIN=2,ON=EXTEN#                                41260027
         APARM     NOEXTEN,MIN=4,OFF=EXTEN#                             41280027
         APARM     'EXTIME=',MIN=4,ADDR=EXTMWD                    V7A40 41300028
         APARM     'ETIME=',MIN=2,ADDR=EXTMWD,FORM=S              V7A40 41302028
         APARM     'INSTSET=',MIN=4,ADDR=ISBIN                          41320027
         APARM     'ISET=',MIN=2,ADDR=ISBIN,FORM=S                      41340027
         APARM     'LINECOUNT=',MIN=4,ADDR=LCTBYT,FORM=S                41360027
         APARM     'LINECNT=',MIN=6,ADDR=LCTBYT                         41380027
         APARM     'LCOUNT=',MIN=2,ADDR=LCTBYT,FORM=S             V7A27 41382028
         APARM     FULLLIST,MIN=5,ON=(FLIST#,LIST#)                     41400027
         APARM     FLIST,MIN=2,ON=(FLIST#,LIST#),FORM=S                 41420027
         APARM     LIST,MIN=1,ON=LIST#,OFF=FLIST#                       41440027
         APARM     NOLIST,MIN=3,OFF=(FLIST#,LIST#)                      41460027
         APARM     LOAD,MIN=2,ON=LOAD#                                  41480027
         APARM     NOLOAD,MIN=4,OFF=LOAD#                               41500027
         APARM     NOLD,MIN=4,OFF=LOAD#,FORM=S                    V7A27 41502028
         APARM     LREF,MIN=2,ON=LREF#                                  41520027
         APARM     NOLREF,MIN=4,OFF=LREF#                               41540027
         APARM     'LSETC=',MIN=2,ADDR=LSETCBYT                         41560027
         APARM     MULT,MIN=3,ON=BATCH#,FORM=S                          41580027
         APARM     NOMULT,MIN=5,OFF=BATCH#,FORM=S                       41600027
         APARM     NUMBER,MIN=1,ALEN=3,ON=NUM#                          41620027
         APARM     NONUMBER,MIN=1,ALEN=5,OFF=NUM#                       41640027
         APARM     OBJECT,MIN=3,ON=LOAD#,FORM=S                         41660027
         APARM     NOOBJECT,MIN=5,OFF=LOAD#,FORM=S                      41680027
         APARM     OS,MIN=2,OFF=DOS#                                    41700027
         APARM     PRINTER,MIN=2,ON=PRT#                                41720027
         APARM     PRTER,MIN=3,ON=PRT#,FORM=S                           41740027
         APARM     NOPRINTER,MIN=4,OFF=PRT#                             41760027
         APARM     NOPRTER,MIN=5,OFF=PRT#,FORM=S                        41780027
         APARM     PUNCH,MIN=3,ON=DECK#,FORM=S                          41800027
         APARM     NOPUNCH,MIN=5,OFF=DECK#,FORM=S                       41820027
         APARM     RENT,MIN=1,ON=RENT#                                  41840027
         APARM     NORENT,MIN=3,OFF=RENT#                               41860027
         APARM     RLD,MIN=2,ON=RLD#                                    41880027
         APARM     RDICT,MIN=2,ON=RLD#,FORM=S                     V7A27 41882028
         APARM     NORLD,MIN=4,OFF=RLD#                                 41900027
         APARM     NORDICT,MIN=4,OFF=RLD#,FORM=S                  V7A27 41902028
WYLSEQ   APARM     SEQUENCE,MIN=2,ON=SEQ#,FORM=S                  V7A43 41904028
WYLNOSEQ APARM     NOSEQUENCE,MIN=4,OFF=SEQ#,FORM=S               V7A43 41906028
         APARM     'SPACE=',MIN=2,ADDR=0,FORM=S,TYPE=5                  41920027
SPACEEQ  APARM     'SPACE=',MIN=6,ADDR=SPACEPOS                         41940027
SPACEMX  APARM     'SPACE=MAX',MIN=9,ON=SPACEM#                         41960027
SPACEMM  APARM     'SPACE=MAX-',MIN=10,ADDR=SPACENEG                    41980027
         APARM     STMT,MIN=2,ON=STMT#                                  42000027
         APARM     NOSTMT,MIN=4,OFF=STMT#                               42020027
         APARM     'SYSPARM=',MIN=2,ADDR=0,TYPE=4                       42040027
         APARM     TERMINAL,MIN=3,ALEN=4,ON=TERM#                       42060027
         APARM     NOTERMINAL,MIN=5,ALEN=6,OFF=TERM#                    42080027
         APARM     TESTRAN,MIN=3,ALEN=4,ON=TEST#                        42100027
         APARM     NOTESTRAN,MIN=5,ALEN=6,OFF=TEST#                     42120027
         APARM     UMAP,MIN=2,ON=UMAP#                                  42140027
         APARM     NOUMAP,MIN=4,OFF=UMAP#                               42160027
         APARM     UNUSED,MIN=4,ON=UNUSED#                              42180027
         APARM     'UPCOND=',MIN=3,ADDR=UPCOND                          42200027
         APARM     UPDATE,MIN=3,ON=UPDATE#                              42220027
         APARM     NOUPDATE,MIN=5,OFF=UPDATE#                           42240027
         APARM     FULLUPLIST,MIN=5,ON=(FUPLIST#,UPLIST#)               42260027
         APARM     FUPLIST,MIN=2,ON=(FUPLIST#,UPLIST#),FORM=S           42280027
         APARM     UPLIST,MIN=3,ON=UPLIST#,OFF=FUPLIST#                 42300027
         APARM     NOUPLIST,MIN=5,OFF=(FUPLIST#,UPLIST#)                42320027
         APARM     'UTBUFF=',MIN=2,ADDR=UTBUFF                          42340027
         APARM     'UBUFF=',MIN=2,ADDR=UTBUFF,FORM=S                    42360027
         APARM     FULLXREF,MIN=5,ON=(FXREF#,XREF#),SUFFIX=YES          42380027
         APARM     FXREF,MIN=2,ON=(FXREF#,XREF#),FORM=S,SUFFIX=YES      42400027
         APARM     XREF,MIN=1,ON=XREF#,OFF=FXREF#,SUFFIX=YES            42420027
         APARM     NOXREF,MIN=3,OFF=(FXREF#,XREF#),SUFFIX=YES           42440027
         APARM     YFLAG,MIN=2,ON=YFLAG#                          V7A44 42450028
         APARM     NOYFLAG,MIN=4,OFF=YFLAG#                       V7A44 42452028
         DC        X'FF'               END OF THE TABLE                 49120027
F1END    DC        0D'0'               END OF ASMGF1 ROUTINE            49140027
         EJECT                                                          49160027
         COMMON    PHASE=ASMGF1                                         49180027
*                                                                       49200027
*        DCB SYMBOLIC DISPLACEMENTS                                     49220027
*                                                                       49240027
DCBKEYLE EQU       16                                                   49260027
DCBBUFNO EQU       20                                                   49280027
DCBBUFCB EQU       21                                                   49300027
DCBEODAD EQU       32                                                   49320027
DCBRECFM EQU       36                                                   49340027
DCBEXLST EQU       37                                                   49360027
DCBDDNAM EQU       40                                                   49380027
DCBMACRF EQU       42                                                   49400027
DCBDEBAD EQU       45                                                   49420027
DCBOFLGS EQU       48                                                   49440027
DCBGET   EQU       48                                                   49460027
DCBBLKSI EQU       62                                                   49480027
DCBLRECL EQU       82                                                   49500027
*                                                                       49520027
JFCBLKSI EQU       102                 ONE JFCB DISPLACEMENT            49540027
*                                                                       49560027
CVTPTR   EQU       X'10'               ADDR OF CVT POINTER              49580027
CVTMDL   EQU       X'02'               MODEL ID FROM CVT PREFIX         49600027
CVTRELNO EQU       X'04'               RELEASE NUMBER FROM CVT PREFIX   49620027
CVTDCB   EQU       X'7C'               SYSTEM FLAGS FROM CVT PREFIX     49640027
*                                                                       49660027
         SPACE     2                                                    49680027
         END       ASMGF1                                               49700027
./ ADD NAME=ASMGASM
ASM      TITLE     'ASMG     MASTER ROOT SEGMENT'                       00020000
         ISEQ  73,78                                                    00040000
*TITLE-ASMGASM- PHASE 'ASM'- MASTER ROOT SEGMENT                        00060000
*FUNCTION- PERMANENT RESIDENT PHASE.                                    00080000
*   SAVES CONTROL PROGRAM (O.S. OR INVOKER) REGS.                       00100000
*   LINK'S TO ASMGF1 TO INITIATE THE ASSEMBLY.                          00120000
*   RECEIVES CONTROL FROM 'FPP' VIA 'RTA' AT THE END                    00140000
*   OF THE ASSEMBLY.  ASMGASM THEN                                      00160000
*   RETURNS TO ITS INVOKER AFTER CLOSING ALL DATASETS.                  00180000
*   DEFINES DCB'S FOR ALL 10 DATASETS.                                  00200000
*   CONTAINS SYSIN AND QSAM OUTPUT MONITORING ROUTINES, I/O ERROR       00220000
*     ROUTINE AND ABEND (NAMED FOR HISTORICAL REASON) ROUTINE.          00240000
*ENTRY POINT- ASMGASM                                                   00260000
*EXIT-   BR        R14                                                  00280000
         SPACE     2                                                    00300000
         COPY      ASMGSET                                              00320000
         EJECT                                                          00340000
ASMGASM  START                                                          00360000
*                                                                       00380000
*        REGISTER DEFINITIONS                                           00400000
*                                                                       00420000
         SETR                                                           00440000
         SPACE     2                                                    00460000
*        TO SAVE SOME CORE INITIALIZE IN A FUTURE SAVE AREA.            00480000
         USING     ASMGASM,R15         FOR A SINGLE BRANCH              00500000
         B         INITIAL             BRANCH FOR INITIALIZING          00520000
         DROP      R15                 FORGET R15                       00540000
         USING     ASMGASM,R12         NOW WE'RE USING R12              00560000
         DC        AL1(8),CL8'ASMGV2L7'                                 00570000
*./      DELETE    SEQ1=00580025,SEQ2=00640025                          00640000
*                                                                       00660000
*        LINK TO PHASE ASMGF1                                           00680000
*                                                                       00700000
DONEINIT DS        0H                                                   00720000
         SVC       6                   ISSUE LINK SVC TO ASMGF1         00740000
         EJECT                                                          00760000
*                                                                       00780000
*        RETURN AFTER ALL ASSEMBLIES                                    00800000
*                                                                       00820000
RETURN   DS        0H                                                   00830000
         BALR      R14,0               SET TEMPORARY BASE               00840000
         USING     *,R14                                                00860000
         L         R12,=A(ASMGASM)     SET UP NORMAL BASE               00880000
         DROP      R14                                                  00900000
         LA        R13,SAVE2            OS SAVE AREA                    00920000
*./      DELETE    SEQ1=00940022,SEQ2=01400022                          01400000
*                                                                       01420000
*        RETURN TO INVOKING PROGRAM                                     01440000
*                                                                       01460000
*                                                                       01480000
*        FREE THE CORE IF NECESSARY                                     01490000
         L         R1,FREEMEM          FREE GETMAIN AREA                01500000
         L         R0,FREEMEM+4                                         01520000
         LTR       R0,R0               TEST IF CORE GOTTEN YET          01530000
         BZ        CLOSE               BR IF NOT                        01535000
         FREEMAIN  R,LV=(0),A=(1)                                       01540000
*                                                                       01550000
*        CLOSE ALL DCB'S. A FEW MAY NOT HAVE BEEN OPENED - CLOSE ANYWAY 01560000
*                                                                       01570000
CLOSE    DS        0H                                                   01574000
*./      DELETE    SEQ1=01574426,SEQ2=01575226                          01575200
         LA        R2,LIST1+L1DCBADS   POINT TO 1ST DCB ADDR            01575600
CLOSLOOP DS        0H                                                   01576000
         L         R5,0(,R2)           GET DCB ADDRESS                  01576400
         L         R3,L1DCBPAD(,R5)    GET PATCHED GET/PUT ADDRESS      01576800
         LA        R3,0(,R3)           CLEAR HIGH BYTE                  01577200
         LTR       R3,R3               WAS DCB PATCHED INTO .Q          01577600
         BZ        CLOSPTCH            BRANCH IF NOT                    01578000
         MVC       DCBGET+1(3,R5),L1DCBPAD+1(R5)  RESTORE REAL ADDRESS  01578400
CLOSPTCH DS        0H                                                   01578800
         LA        R2,4(,R2)           POINT TO NEXT DCB ADDR           01579000
         LTR       R5,R5               LAST DCB .Q                      01579200
         BP        CLOSLOOP            BRANCH IF NOT                    01579600
        CLOSE (SYSTERM,LEAVE,          SYSTERM                         X01580000
               SYSUP,DISP,             SYSUP                           X01584000
               SYSLIB,DISP,            SYSLIB                          X01588000
               SYSIN,DISP,             SYSIN                           X01592000
               SYSLIN,DISP,            SYSLIN                          X01596000
               SYSPRINT,LEAVE,         SYSPRINT                        X01600000
               SYSPUNCH,LEAVE,         SYSPUNCH                        X01604000
               SYSUT1,REREAD,          SYSUT1                          X01608000
               SYSUT2,REREAD,          SYSUT2                          X01612000
               SYSUT3,REREAD)          SYSUT3                           01616000
*                                                                       01620000
*        FREE ALL QSAM BUFFERS.                                         01640000
         CLC       SYSIN+DCBBUFCB(3),SYSLIN+DCBBUFCB TEST IF SYSIN AND  01650000
         BE        FREEPRT               SYSLIN HAVE SAME BUFFER POOL   01655000
         LA        R1,SYSIN                                             01660000
         BAL       R2,FREEPOOL                                          01680000
FREEPRT  LA        R1,SYSPRINT                                          01700000
         BAL       R2,FREEPOOL                                          01720000
         LA        R1,SYSPUNCH                                          01740000
         BAL       R2,FREEPOOL                                          01760000
         LA        R1,SYSLIN                                            01780000
         BAL       R2,FREEPOOL                                          01800000
         LA        R1,SYSTERM                                           01804000
         BAL       R2,FREEPOOL                                          01808000
         LA        R1,SYSUP                                             01812000
         BAL       R2,FREEPOOL                                          01816000
*        DELETE THE ASMGISXX MODULE IN CASE BATCH                       01820000
         DELETE    EPLOC=ISNAME                                         01840000
*        DELETE THE ASMGUP ROUTINE IN CASE UPDATE                       01850000
         DELETE    EP=ASMGUP                                            01855000
*                                                                       01860000
*        RESTORE CALLER'S REGISTERS AND RETURN                          01880000
         L         R13,SAVE1            RESTORE CTL PROG SAVE ADDRESS   01900000
         LM        R14,R12,12(R13)      RESTORE CALLER'S REGISTERS      01920000
         L         R15,SAVECC-ASMGASM(,R15)  GET COMPLETION CODE        01940000
         LTR       R15,R15              IF ERR CODE IN REG,             01960000
         BCR       7,R14                RETURN IMMEDIATELY  (BNZR)      01980000
         MVI       12(R13),X'FF'        SET FOR NORMAL RETURN           02000000
         BR        R14                  RETURN                          02020000
*        FREEPOOL SUBROUTINE                                            02040000
FREEPOOL TM        23(R1),X'01'        TEST IF BUFFERS EXIST            02060000
         BCR       1,R2                BOR  BRANCH IF NOT               02080000
         FREEPOOL  (1)                 DO THE FREEPOOL                  02100000
         BR        R2                  RETURN                           02120000
         EJECT                                                          02130000
ABWTO    DC        0F'0',AL2(120+4),X'8000'  MF=E WTO INCL ROUTE CODES  02140000
ABMESS   DS        0CL133                                               02150000
         DC        C'  ASMG999A   ASSEMBLY TERMINATED. I/O ERROR. SYNAD*02160000
               AF INFO='''                                              02170000
*        THE NEXT 77 BYTES MAY BE CLOBBERED BY THE ABEND OR             02180000
*        THE I/O ERROR ROUTINES.                                        02190000
         SPACE     5                                                    02200000
*                                                                       02210000
*        THIS EXLST ROUTINE IS ENTERED DURING OPEN FOR EACH DCB         02220000
*        R8 CONTAINS ADDRESS OF EXLST ROUTINE IN F1 (LOADED BY F1)      02240000
*        IT IS ALSO ENTERED ON EACH IMPLICIT OPEN FORCED BY THE         02260000
*           CONCATENATION OF UNLIKE DEVICES                             02280000
*                                                                       02300000
         DC        0F'0'                                                02320000
EXITLIST DC        X'85'                                                02340000
         DC        AL3(EXITROUT)                                        02360000
EXITROUT DS        0H                                                   02380000
         USING     *,R15                                                02400000
         LA        R1,0(,R1)           ZERO TOP BYTE                    02420000
         C         R1,LIST1+L1DCBADS+L1SIN  IS THIS SYSIN .Q            02440000
         BE        EXIT0               YES, CONTINUE FURTHER ON         02450000
         C         R1,LIST1+L1DCBADS+L1SUP  IS THIS SYSUP .Q            02460000
         BCR       7,R8                NO, BR TO EXLST ROUTINE IN F1    02470000
EXIT0    TM        DCBOFLGS(R1),X'08'  TEST IF FIRST OPEN               02480000
         BO        EXIT1               BR IF NOT                        02500000
         OI        DCBOFLGS(R1),X'08'  TURN ON CONCAT OF UNLIKE DEVICES 02520000
         BR        R8                  GO TO EXLST ROUTINE IN F1        02540000
EXIT1    OI        SYSINSW,X'01'       SET RE-GET SWITCH                02560000
         NI        DCBRECFM(R1),X'EF'  TURN OFF BLOCKED BIT             02560200
         LH        R2,DCBBLKSI(,R1)    GET THE BLOCKSIZE                02560400
         CH        R2,DCBLRECL(,R1)    TEST IF BLOCKED                  02560600
         BE        *+8                 BR IF NOT                        02560800
         OI        DCBRECFM(R1),X'10'  SET THE  B  BIT                  02561000
         TM        DCBBUFCB+2(R1),X'01' TEST FOR MY BUFCB               02562000
         BCR       1,R14               BOR  BRANCH IF NOT               02564000
         L         R3,DCBBUFCB-1(,R1)  POINT AT BUFFER CONTROL BLOCK    02566000
         CLC       DCBBUFNO(1,R1),5(R3) TEST IF ENOUGH BUFFERS          02568000
         BH        EXIT2               BRANCH IF NOT                    02570000
*./      DELETE    SEQ1=02572023,SEQ2=02572023                          02572000
         LA        R2,4(,R2)           ADD 4 IN CASE IT GETS DUMMY BUF  02574000
         CH        R2,6(,R3)           TEST IF POOL BUFFERS LONG ENOUGH 02576000
         BCR       13,R14              BNHR  RETURN TO OPEN IF OK       02578000
EXIT2    OI        DCBBUFCB+2(R1),X'01' SET NO BUFCB IN DCB             02579000
         BR        R14                 RETURN TO OPEN                   02580000
         DROP      R15                                                  02600000
         EJECT                                                          02620000
*                                                                       02640000
*        THIS ROUTINE MONITORS SYSIN TO HANDLE EOF AND $JOB SITUATIONS  02660000
*                                                                       02680000
*        IT IS ENTERED BY DOING A NORMAL GET MOVE ON THE SYSIN DCB      02700000
*        PHASE F1 HAS ALTERED THE DCBGET ADDR IN THE DCB TO POINT HERE  02720000
*                                                                       02740000
SYSINMON DS        0H                                                   02760000
         USING     SYSINMON,R15        USE CALLER'S BRANCH REGISTER     02780000
         CLI       SYSINSW,X'00'       TEST FOR EOF OR $JOB             02800000
         BZ        SYSINMOV            NOT YET, THEN BRANCH             02820000
         L         R15,DCBEODAD(,R1)   LOAD EODAD ADDRESS               02840000
         BR        R15                 AND SIMULATE AN EOF              02860000
*                                                                       02880000
SYSINMOV DS        0H                                                   02900000
         STM       R12,R14,GETSAVE     SAVE SOME OF CALLER'S REGS       02920000
         LR        R12,R15             TRANSFER THE BASE                02940000
         DROP      R15                 DROP THE OLD                     02960000
         USING     SYSINMON,R12        AND USE THE NEW                  02980000
         LR        R14,R0              POINT TO USER'S INPUT AREA       03000000
         L         R15,SYSINBUF        GET ADDR OF NEXT RECORD          03020000
         MVC       0(80,R14),0(R15)    GIVE USER THE LAST RECORD        03040000
         MVC       SYSINEOD(3),DCBEODAD+1(R1)  SAVE USER'S EODAD ADDR   03060000
         MVC       DCBEODAD+1(3,R1),=AL3(SYSINEOF) SET MY EODAD         03080000
SYSINGET DS        0H                                                   03100000
         NI        SYSINSW,X'FE'       TURN OFF RE-READ SWITCH          03110000
         L         R15,DCBGETSV        GET REAL QSAM ADDRESS            03120000
         BALR      R14,R15             DO THE GET                       03130000
         TM        SYSINSW,X'01'       TEST RE-READ SWITCH              03140000
         BZ        SYSINGOK            GO ON IF NO RE-READ REQ'D        03150000
         MVC       DCBGETSV+1(3),SYSIN+DCBGET+1  SAVE GET ADDR AGAIN    03160000
         MVC       SYSIN+L1DCBPAD+1(3),SYSIN+DCBGET+1  SAVE FOR CLOSE   03170000
         MVC       SYSIN+DCBGET+1(3),SYSINAD+1   RESET FAKE ADDRESS     03180000
         B         SYSINGET            RE-ISSUE THE GET                 03190000
SYSINGOK DS        0H                                                   03200000
         TM        PARBYT1,X'10'       WAS BATCH SPECIFIED .Q           03220000
         BZ        SYSINRET            BRANCH IF NOT                    03240000
         TM        PARBYT2,X'20'       WAS EXECUTE SPECIFIED .Q         03260000
         BZ        SYSINRET            BRANCH IF NOT                    03280000
         CLC       0(L'$JOB,R1),$JOB   TEST FOR A $JOB CARD             03300000
         BNE       SYSINRET            BRANCH IF NOT                    03310000
         MVI       SYSINSW,X'40'       SET $JOB SWITCH                  03320000
         B         SYSINRET            AND QUIT                         03340000
*                                                                       03360000
SYSINEOF DS        0H                                                   03380000
         MVI       SYSINSW,X'80'       SET EOF SWITCH                   03400000
*                                                                       03420000
SYSINRET DS        0H                                                   03430000
         ST        R1,SYSINBUF         SAVE ADDR OF NEXT RECORD         03440000
         MVC       SYSIN+DCBEODAD+1(3),SYSINEOD  RESTORE USER'S EODAD   03460000
*./      DELETE    SEQ1=03480026,SEQ2=03500026                          03500000
         LM        R12,R14,GETSAVE     RESTORE CALLER'S REGISTERS       03520000
         BR        R14                 RETURN TO USER                   03540000
         USING     ASMGASM,R12         RESTORE USE OF R12               03560000
*                                                                       03580000
GETSAVE  DC        3F'0'               R12,R13,R14 GET ROUTINE SAVE     03590000
SYSINBUF DC        A(BLANKS+1)         ADDR FOR READING 1 CARD AHEAD    03600000
SYSINEOD DC        AL3(0)              SAVE REAL SYSIN EODAD            03620000
         EJECT                                                          03630000
*                                                                       03631200
*        OUTPUT MONITORING ROUTINE FOR ALL OUTPUT FILES                 03631400
*                                                                       03631600
ASMGPUT  DS        0H                  THIS IS IT                       03631800
         STM       R14,R12,PUTSAVE-ASMGASM(R15)  SAVE CALLER'S REGS     03632000
         LR        R12,R15             TRANSFER BASE ADDRESS            03632100
         LR        R2,R0               TRANSFER DATA ADDRESS            03632200
         LR        R3,R1               TRANSFER DCB ADDRESS             03632400
         LM        R4,R5,L1DCBRCT(R3)  R4 IS RECORD COUNT               03632600
*                                      R5 IS PREVIOUS LINE LOCATION     03632800
*                                                                       03633000
         TM        L1DCBCC(R3),X'C0'   WHICH CARRIAGE CONTROL .Q        03633200
         BM        SYSLNUM             BRANCH IF NUMERIC                03633400
         BO        SYSLASA             BRANCH IF ASA                    03633600
         BAL       R10,SYSLPUT         AS IT IS, GET A BUFFER           03633800
         EX        R6,SYSLASIS         PUT OUT THE LINE                 03634000
         B         SYSLRET             AND RETURN                       03634200
SYSLASA  DS        0H                                                   03634400
         CLI       0(R2),C'1'          NEW PAGE .Q                      03634600
         BNE       NOTONE              BRANCH IF NOT                    03634800
         MVI       CARCONT,EJECTIM     SET CARRIAGE CONTROL             03635000
         B         FIRSTPUT            BRANCH TO 1ST PUT                03635200
NOTONE   DS        0H                                                   03635400
         CLI       0(R2),C'-'          TRIPLE SPACE .Q                  03635600
         BNE       NOTRIP              BRANCH IF NOT                    03635800
         MVI       CARCONT,SPACE3IM    SET CARRIAGE CONTROL             03636000
         B         FIRSTPUT            BRANCH TO FIRST PUT              03636200
NOTRIP   DS        0H                                                   03636400
         CLI       0(R2),C'0'          DOUBLE SPACE .Q                  03636600
         BNE       NOTDOUB             BRANCH IF NOT                    03636800
         MVI       CARCONT,SPACE2IM    DOUBLE SPACE IMMEDIATE           03637000
         B         FIRSTPUT            BRANCH TO 1ST PUT                03637200
NOTDOUB  CLI       0(R2),C'+'          NO SPACE AT ALL .Q               03637400
         BE        SECNDPUT            BRANCH IF YES TO 2ND PUT         03637600
NOTPLUS  DS        0H                                                   03637800
         MVI       CARCONT,SPACE1IM    MOVE IN SINGLE SPACE             03638000
FIRSTPUT DS        0H                                                   03638200
         BAL       R10,SYSLPUT         GET OUTPUT BUFFER                03638400
         MVC       0(1,R5),CARCONT     SET CARRIAGE CONTROL             03638600
         BCTR      R6,0                DECREMENT LRECL BY ANOTHER ONE   03638800
         EX        R6,SYSLBLNK         AND BLANK LINE                   03639000
SECNDPUT DS        0H                                                   03639200
         BAL       R10,SYSLPUT         GET A BUFFER                     03639400
         MVI       0(R5),SPACE0AP      NO SPACE AFTER PRINT             03639600
         BCTR      R6,0                DECREMENT LRECL BY ANOTHER ONE   03639800
         EX        R6,SYSLMOVE         MOVE RECORD                      03640000
         B         SYSLRET             AND RETURN                       03640200
SYSLNUM  DS        0H                                                   03640400
         CLI       0(R2),X'00'         NORMAL PRINT CODE .Q             03640600
         BE        SYSLNORM            BRANCH TO PUT IF YES             03640800
         LTR       R5,R5               HAS FILE BEEN WRITTEN BEFORE .Q  03641000
         BNZ       SYSLCC2             BRANCH IF YES                    03641100
         BAL       R10,SYSLPUT         GET AN OUTPUT BUFFER             03641200
         BCTR      R6,0                DECREMENT LRECL BY ANOTHER       03641300
         EX        R6,SYSLBLNK         AND BLANK THE LINE               03641400
SYSLCC2  DS        0H                                                   03641500
         CLI       0(R2),200           DO WE WANT AN EJECT .Q           03641600
         BL        SYSLSPCE            BRANCH LOW FOR SPACES            03641700
SYSLEJCT DS        0H                                                   03641800
         MVI       0(R5),EJECTAP       PUT IN EJECT CODE                03641900
         B         SYSLNORM            CONTINUE AS USUAL                03642000
SYSLSPCE DS        0H                                                   03642100
         SR        R7,R7               01 TO 54 FORCES THAT NUMBER      03642200
         IC        R7,0(,R2)           OF BLANK LINES (SPACES)          03642400
         CLI       0(R2),X'02'         SEE IF LESS THAN 2               03642600
         BH        SYSLTRIP            NO, SPACE 3 AT A TIME            03642800
         IC        R7,APTBL-1(R7)      01 OR 02 FORCES ONLY             03643000
         STC       R7,0(,R5)           NEW CODE IN PREVIOUS LINE        03643200
         B         SYSLNORM            CONTINUE AS NORMAL               03643400
SYSLTRIP DS        0H                                                   03643600
         MVI       0(R5),SPACE3AP      03 TO 54 GENERATES MINIMUM       03643800
         S         R7,FW002            NUMBER OF LINES WITH             03644000
SYSLSPLP DS        0H                  SPACE IMMEDIATE CODES            03644200
         BAL       R10,SYSLPUT         PUT OUT 3 BLANK LINES            03644400
         BCTR      R6,0                DECREMENT BY ANOTHER ONE         03644600
         EX        R6,SYSLBLNK         BLANK ENTIRE LINE                03644800
         C         R7,FW003            ARE WE LESS THAN 3 .Q            03645000
         BNH       SYSLDBL             YES, PUT IN NUMBER SPACES LEFT   03645200
         MVI       0(R5),SPACE3IM      NO, SPACE ANOTHER 3              03645400
         S         R7,FW003            REDUCE COUNTER BY 3              03645600
         B         SYSLSPLP            LOOP                             03645800
SYSLDBL  DS        0H                                                   03646000
         IC        R7,IMTAB-1(R7)      PUT IN CORRECT SPACING           03646200
         STC       R7,0(,R5)           SAVE NUMBER OF SPACES            03646400
SYSLNORM DS        0H                                                   03646600
         BAL       R10,SYSLPUT         PUT OUT RECORD                   03646800
         MVI       0(R5),SPACE1AP      PUT IN NORMAL SPACE              03647000
         BCTR      R6,0                DECREMENT BY ANOTHER ONE         03647200
         EX        R6,SYSLMOVE         TRANSFER LINE TO BUFFER          03647400
SYSLRET  DS        0H                                                   03647600
         STM       R4,R5,L1DCBRCT(R3)  RESTORE RECORD COUNT, POINTER    03647800
         LM        R14,R12,PUTSAVE     RESTORE CALLER'S REGISTERS       03648000
         BR        R14                 RETURN                           03648200
SYSLPUT  DS        0H                                                   03648400
         L         R15,L1DCBPAD(,R3)   GET REAL PUT ADDRESS             03648600
         LR        R1,R3               RESTORE DCB ADDRESS              03648800
         BALR      R14,R15             GO DO IT                         03649000
         LR        R5,R1               SAVE POSITION OF NEXT RECORD     03649200
         LA        R4,1(,R4)           INCREMENT LINE COUNT       V7A50 03649328
         LH        R6,DCBLRECL(,R3)    GET LRECL OF FILE          V7A50 03649428
         BCTR      R6,0                DECREMENT BY ONE           V7A50 03649528
         CLC       DCBGET+1(3,R3),PUTOURTN+1  NEW ACCESS ADDR .Q  V7A50 03649628
         BCR       8,R10               RETURN IF NOT              V7A50 03649728
         MVC       L1DCBPAD+1(3,R3),DCBGET+1(R3)  SAVE THE NEW    V7A50 03649828
         MVC       DCBGET+1(3,R3),PUTOURTN+1  RESET THE DUMMY     V7A50 03649928
         BR        R10                 RETURN                           03650000
         SPACE     2                                                    03650200
PUTSAVE  DC        15F'0'              PUT ROUTINE SAVE AREA            03650400
PUTOURTN DC        A(LIST1+L1OUTRTN)   DUMMY OUTPUT ADDRESS       V7A50 03650528
FW002    DC        F'2'                FULL WORD TWO                    03650600
FW003    DC        F'3'                FULL WORD THREE                  03650800
SYSLBLNK MVC       1(*-*,R5),BLANKS+1  MOVE BLANKS TO OUTPUT LINE       03651000
SYSLMOVE MVC       1(*-*,R5),1(R2)     TRANSFER LINE TO BUFFER          03651200
SYSLASIS MVC       0(*-*,R5),0(R2)     OUTPUT RECORD AS IS              03651400
CARCONT  DC        X'00'               WORK AREA FOR CARRIAGE CONTROL   03651600
APTBL    DC        AL1(SPACE2AP,SPACE3AP)        SPACE AFTER PRINT      03651800
IMTAB    DC        AL1(SPACE1IM,SPACE2IM,SPACE3IM)  SPACE IMMEDIATE TBL 03652000
SPACE0AP EQU       X'01'                                                03652200
SPACE1AP EQU       X'09'                                                03652400
SPACE2AP EQU       X'11'                                                03652600
SPACE3AP EQU       X'19'                                                03652800
EJECTAP  EQU       X'89'                                                03653000
SPACE0IM EQU       X'03'                                                03653200
SPACE1IM EQU       X'0B'                                                03653400
SPACE2IM EQU       X'13'                                                03653600
SPACE3IM EQU       X'1B'                                                03653800
EJECTIM  EQU       X'8B'                                                03654000
*                                                                       03654200
         EJECT                                                          03655000
*                                                                       03660000
*        THIS ROUTINE IS ENTERED BY THE SYNAD EXIT ON AN I/O ERROR      03680000
*        R1 POINTS AT THE DCB FOR WHICH THE ERROR OCCURED               03700000
*                                                                       03720000
IOERR    DS        0H                                                   03740000
         USING     *,R15                                                03760000
         STM       R11,R12,SAVE3       SAVE REGISTERS                   03780000
         L         R12,=A(ASMGASM)     LOAD REGULAR BASE VALUE          03800000
         DROP      R15                                                  03820000
         LA        R11,0(0,R1)         CLEAR TOP BYTE OF REG FOR COMPAR 03840000
         C         R11,LIST1+L1DCBADS+L1SPRINT  IS THIS SYSPRINT .Q     03860000
         BE        SYSPNTER                                             03880000
         C         R11,LIST1+L1DCBADS+L1SPUNCH  IS THIS SYSPUNCH .Q     03900000
         BE        SYSPCHER                                             03920000
         BNL       SYNADQ              SYSPUNCH & ABOVE ARE QSAM        03940000
         MVI       SYNADAF+16,2        SYNADAF ACSMETH CODE FOR BSAM    03960000
         C         R11,LIST1+L1DCBADS+L1SLIB  IS THIS SYSLIB .Q         03980000
         BNE       SYNADQ                                               04000000
         MVI       SYNADAF+16,1        SYNADAF ACSMETH CODE FOR BPAM    04020000
SYNADQ   DS        0H                                                   04040000
         CNOP      0,4                                                  04060000
SYNADAF  SYNADAF   ACSMETH=QSAM                                         04080000
         MVC         ABMESS+59(60),68(1) PICK UP PART OF MESSAGE I WANT 04100000
         MVI         ABMESS+119,C''''                                   04120000
         SYNADRLS    ,                 RELEASE SYNADAF BUFF & SAVE AREA 04130000
WTONOP   MVI       AB3+1,X'00'         NOP SW TO TYPE AND PRINT   V7A47 04140028
         B           AB2                                                04160000
*                                                                       04180000
SYSPCHER LH        R11,PCHERTOT        INCREMENT                        04200000
         LA        R11,1(0,R11)        PCHERTOT                         04220000
         STH       R11,PCHERTOT                                         04240000
         OI        ERRORSW,X'20'                                        04260000
         B         SYSPRPU             ONE MORE CHECK             V7A47 04280028
*                                                                       04300000
SYSPNTER LH        R11,PRTERTOT        INCREMENT                        04320000
         LA        R11,1(0,R11)        PRTERTOT                         04340000
         STH       R11,PRTERTOT                                         04360000
         OI        ERRORSW,X'10'                                        04380000
SYSPRPU  DS        0H                                             V7A47 04382028
         TM        PARBYT3,X'40'       UNDER CMS .Q               V7A47 04384028
         BNO       BACK1               BRANCH TO RETURN IF NOT    V7A47 04386028
         MVI       WTONOP+1,X'F0'      NOP THE NOP TO WTO ONLY    V7A47 04388028
         B         SYNADQ              AND JOIN SYNAD             V7A47 04390028
*                                                                       04400000
BACK1    LM        R11,R12,SAVE3                                        04420000
         BR        R14                 RETURN TO I/O SUPERVISOR         04440000
         EJECT                                                          04460000
*        THIS POINT IS ENTERED IF BUFF RUNS OUT OF CORE                 04480000
BUFFERR  DS        0H                                                   04500000
         USING     *,R1                                                 04520000
         L         R12,=A(ASMGASM)                                      04540000
         DROP      R1                                                   04560000
         BAL       R0,ABEND            PRINT ERROR AND ABEND            04580000
         DC        C'990I',AL1(L'MESS990-1)                             04600000
MESS990  DC        C'INSUFFICIENT MEMORY TO BUFFER UTILITIES'           04620000
         EJECT                                                          04640000
*                                                                       04660000
*        ABEND ROUTINE  (ACTUALLY ONLY DOES A RETURN WITH CC=20)        04680000
*        ENTER WITH R0 POINTING AT MESSAGE IN FOLLOWING FORMAT          04700000
*        DC        C'NNNX',AL1(L'MES-1)                                 04720000
* MES    DC        C'MESSAGE'                                           04740000
*                  NNN IS ERROR NUMBER, X IS 'BLANK', 'I' OR 'A'.       04760000
*                                                                       04780000
ABEND    LR        R1,R0               R1 -> PARMS NOW                  04800000
         LA        R13,SAVE2           R13 -> OS SAVE AREA              04820000
         MVC       AB1+1(1),4(R1)      PLACE LENGTH IN MVC              04840000
         MVC       ABMESS+6(4),0(R1)   MOVE ERROR NUMBER                04860000
         MVC       ABMESS+13(132-13),ABMESS+12   BLANK LINE             04880000
AB1      MVC       ABMESS+13(*-*),5(R1) PLACE MESSAGE                   04900000
         TM        SYSPRINT+DCBOFLGS,X'10' TEST IF PRINTER IS OPEN      04920000
         BO        AB4                 BRANCH IF OPEN                   04930000
         TM        SYSTERM+DCBOFLGS,X'10'  TEST IF SYSTERM OPEN         04940000
         BO        AB6                 BRANCH IF SYSTERM OPEN           04950000
AB2      MVC       ABMESS+120(4),=X'02004020' PLACE ROUTE AND DESC CODE 04960000
         WTO       MF=(E,ABWTO)        TYPE THE MESSAGE                 04970000
         MVC       ABMESS+120(12),BLANKS+1  REMOVE ROUTE & DESC CODES   04975000
AB3      BC        *-*+15,AB5          BYPASS PRINTING                  04980000
AB4      DS        0H                                                   05000000
         MVI       ABMESS,X'03'        NUMERIC SPACE 3 LINES AND PRINT  05020000
         NI        SYSPRINT+L1DCBCC,X'7F'  KILL ASA FLAG                05040000
         OI        SYSPRINT+L1DCBCC,X'40'  SET NUMERIC FLAG             05050000
         PUT       SYSPRINT,ABMESS     PUT ABEND MESSAGE                05060000
*                                                                       05080000
         TM        SYSTERM+DCBOFLGS,X'10'  IS SYSTERM OPEN .Q           05100000
         BZ        AB5                 NO, THEN DON'T PRINT THERE       05105000
*                                                                       05110000
AB6      DS        0H                                                   05115000
         NI        SYSTERM+L1DCBCC,X'7F'  KILL ASA FLAG                 05120000
         OI        SYSTERM+L1DCBCC,X'40'  SET NUMERIC FLAG              05122000
         PUT       SYSTERM,ABMESS      PUT ABEND MESSAGE                05125000
*                                                                       05130000
AB5      DS        0H                                                   05140000
         AIF       (&DEBUG).AB1                                         05160000
         MVI       SYSINSW,X'80'       SIMULATE EOF ON SYSIN            05170000
         SR        R10,R10             ZERO R10 SO RTA MAY TERMINATE    05175000
         LA        R15,20              SET RETURN CODE TO 20            05180000
         ST        R15,SAVECC          AND PASS IT ON FOR LATER         05185000
         SVC       3                   RETURN SVC TO DELETE MODULE      05190000
         AGO       .AB2                                                 05200000
.AB1     ANOP                                                           05220000
         CLOSE     (SYSPRINT,LEAVE)    FORCE BUFFERS                    05230000
         ABEND     20,DUMP                                              05240000
.AB2     ANOP                                                           05260000
*                                                                       05280000
*./      DELETE    SEQ1=05300022,SEQ2=05360022                          05360000
         EJECT                                                          05380000
*                                                                       05400000
*        ASM PARAM LIST. ORDER-DEPENDENT. REFERENCED RELATIVE TO        05420000
*        'LIST1' BY OTHER PHASES.                                       05440000
*                                                                       05460000
*                                                                       05480000
         LIST1EQU                                                       05490000
         CNOP      4,8                 DEFDDNAM SHOULD BE ON D BOUNDARY 05500000
LIST1    EQU       *                                                    05520000
*                                                                       05540000
* LIST1+L1DCBADS                                                        05560000
*                                                                       05580000
         DC        A(SYSLIN)                                            05600000
         DC        A(SYSTERM)                                           05620000
         DC        A(SYSUP)                                             05640000
         DC        A(SYSLIB)                                            05660000
         DC        A(SYSIN)                                             05680000
         DC        A(SYSPRINT)                                          05700000
         DC        A(SYSPUNCH)                                          05720000
         DC        A(SYSUT1)                                            05740000
         DC        A(SYSUT2)                                            05760000
         DC        X'80'               MARK THE LAST DCB ADDRESS        05770000
         DC        AL3(SYSUT3)                                          05780000
*                                                                       05800000
* LIST1+L1VACFL                                                         05820000
*                                                                       05840000
         DC        A(0)                VACANT FULL WORD AREA            05860000
*                                                                       05870000
*                                                                       05880000
* LIST1+L1CTLPRM                                                        05900000
*                                                                       05920000
         DC        A(0)                ADDR OF CNTRL PROG PARM LIST     05940000
*                                                                       05960000
* LIST1+L1TIMELM                                                        05980000
*                                                                       06000000
*                  PARAMETERS FILLED BY F1 FROM EXEC CARD               06020000
         DC        F'0'          EXECUTION TIME IN SECONDS              06040000
*                                                                       06045000
* LIST1+L1LINECT                                                        06050000
*                                                                       06055000
         DC        H'0'          LINE COUNT                             06060000
*                                                                       06065000
* LIST1+L1PBYT1                                                         06070000
*                                                                       06075000
PARBYT1  DC        X'00'         BIT   MEANING     BIT   MEANING        06080000
*                                 0    FULLUPLIST   1    DOS            06100000
*                                 2    ESD          3    BATCH          06120000
*                                 4    FULLLIST     5    EXTEN          06140000
*                                 6    FULLXREF     7    ALGN           06160000
*                                                                       06165000
* LIST1+L1PBYT                                                          06170000
*                                                                       06175000
PARBYT   DC        X'00'         BIT   MEANING     BIT   MEANING        06180000
*                                 0    DECK         1    LOAD           06200000
*                                 2    RENT         3    LIST           06220000
*                                 4    RLD          5    UPLIST         06240000
*                                 6    XREF         7    TEST           06260000
*                                                                       06262000
* LIST1+L1PBYT2                                                         06264000
*                                                                       06266000
PARBYT2  DC        X'00'         BIT   MEANING     BIT   MEANING        06268000
*                                 0    LREF         1    UPDATE         06270000
*                                 2    EXECUTE      3    SPACE=MAX      06272000
*                                 4    TERM         5    NUM            06274000
*                                 6    STMT         7    SEQ      V7A43 06276028
*                                                                       06280000
* LIST1+L1PBYT3                                                         06282000
*                                                                       06284000
PARBYT3  DC        X'00'         BIT   MEANING     BIT   MEANING        06286000
*                                 0    UMAP         1    CMS      V7A44 06288028
*                                 2    XREF(SHORT)  3    PRINTER  V7A44 06290028
*                                 4    YFLAG        5    RESERVED V7A44 06292028
*                                 6    RESERVED     7    UNUSED         06294000
*                                                                       06296000
* LIST1+L1SYNERR                                                        06300000
*                                                                       06320000
*        FOLLOWING 3 ITEMS SET BY SYNAD ROUTINE AND                     06340000
*        AND MACRO TABLE BUILDER FOR ASMGFD.                            06350000
ERRORSW  DC        X'0000'             ERROR SWITCHES IN TOP BYTE       06360000
*                            BIT  ERROR       BIT  ERROR                06380000
*                             0  204 SEV 16    1  204 SEV 4             06400000
*                             2    207         3    206                 06420000
*                             4    208         5    209                 06440000
*                             6    203         7   UNUSED               06460000
*                             8    ---         9    ---                 06461000
*                            10    ---        11    ---                 06462000
*                            12    ---        13    ---                 06463000
*                            14    ---        15    115                 06464000
*                                                                       06465000
* LIST1+L1IOERR                                                         06470000
*                                                                       06475000
PCHERTOT DC        H'0'                COUNTS I/O ERRORS ON SYSPUNCH    06480000
PRTERTOT DC        H'0'                COUNTS I/O ERRS ON SYSPRINT      06500000
*                                                                       06520000
* LIST1+L1FINDCT                                                        06540000
*                                                                       06560000
         DC        F'0'                FINDS ON SYSLIB COUNT            06580000
*                                                                       06600000
* LIST1+L1CALIGN                                                        06620000
*                                                                       06630000
         DC        X'00',XL3'00'       COMMENT ALIGNMENT VALUE          06640000
*                                                                       06660000
* LIST1+L1BUFADR                                                        06680000
*                                                                       06700000
BUFRTADR DC        V(BUFFENT)          ADDR OF SUPER BUFFER AND CORE   X06720000
                             MANAGEMENT ROUTINE                         06740000
*                                                                       06760000
* LIST1+L1DDNAM                                                         06780000
*                                                                       06800000
*        TABLE OF DDNAMES. MAY BE ALTERED BY F1.                        06820000
DEFDDNAM DC        C'SYSLIN  '                                          06840000
         DC        C'SYSTERM '                                          06860000
         DC        C'SYSUP   '                                          06880000
         DC        C'SYSLIB  '                                          06900000
         DC        C'SYSIN   '                                          06920000
         DC        C'SYSPRINT'                                          06940000
         DC        C'SYSPUNCH'                                          06960000
         DC        C'SYSUT1  '                                          06980000
         DC        C'SYSUT2  '                                          07000000
         DC        C'SYSUT3  '                                          07020000
*                                                                       07040000
* LIST1+L1PRDATE                                                        07060000
*                                                                       07080000
         DC        C'DD MON YY'        SET TO DATE BY F1                07100000
*                                                                       07102000
* LIST1+L1UPCOND                                                        07104000
*                                                                       07106000
         DC        X'00'               MAX UPDATE CONDITION CODE        07108000
*./      DELETE    SEQ1=07110025,SEQ2=07116025                          07116000
*                                                                       07120000
* LIST1+L1ABEND                                                         07140000
*                                                                       07160000
         USING     LIST1,R1                                             07180000
         L         R12,=A(ASMGASM)     THIS POINT ENTERED TO TYPE/PRINT 07200000
         B         ABEND                 MESSAGE AND ABEND              07220000
         DROP      R1                                                   07240000
*                                                                       07244000
* LIST1+L1LSETC                                                         07246000
*                                                                       07248000
         DC        X'00'               DEFAULT SETC VARIABLE LENGTH     07250000
*                                                                       07252000
* LIST1+L1COLCT                                                         07254000
*                                                                       07256000
         DC        X'00'               COLUMN= COUNT FOR XREFS          07258000
*                                                                       07260000
* LIST1+L1BUFERR                                                        07280000
*                                                                       07300000
         DC        A(BUFFERR)          BUFF ERROR HANDLING ROUTINE      07320000
*                                                                       07340000
* LIST1+L1SINAD                                                         07360000
*                                                                       07380000
SYSINAD  DC        A(SYSINMON)         SYSIN MONITOR                    07400000
DCBGETSV DC        2F'0'               SAVE FOR DCBGET IN SYSIN DCB     07420000
*                                                                       07440000
* LIST1+L1FREEMN                                                        07460000
*                                                                       07480000
FREEMEM  DC        2F'0'               FREEMAIN OPERANDS  SET BY F1     07500000
*                                                                       07520000
* LIST1+L1ISADDR                                                        07540000
*                                                                       07560000
         DC        F'0'                ADDRESS OF ASMGISXX MODULE       07580000
*                                                                       07600000
* LIST1+L1ISNAME                                                        07620000
*                                                                       07640000
ISNAME   DC        C'ASMGISXX'         NAME OF THE INSTRUCTION SET MOD. 07660000
*                                                                       07661000
* LIST1+L1PRTIME                                                        07662000
*                                                                       07663000
         DC        C'HH:MM:SS'         SET TO TIME BY F1                07664000
*                                                                       07665000
* LIST1+L1BTCSUM                                                        07666000
*                                                                       07667000
BATCHSUM DC        A(0)                ADDRESS OF FIRST BATCH SUMMARY   07668000
*                                                                       07669000
* LIST1+L1ASPARM                                                        07670000
*                                                                       07671000
ASYSPARM DC        F'0'                LENGTH AND ADDRESS OF SYSPARM    07672000
*                                                                       07673000
* LIST1+L1SAVECC                                                        07674000
*                                                                       07675000
SAVECC   DC        F'0'                SAVES HIGHEST COND CODE RETURNED 07676000
*                                                                       07677000
* LIST1+L1BLDL-4                                                        07678000
*                                                                       07679000
BLDLADDR DC        H'7'                SEVEN ENTRIES TO BUILD           07680000
         DC        H'36'               EACH ONE 36 BYTES LONG           07681000
         DC        CL8'ASMGFPP'        L1BLDL                           07682000
         DC        14H'0'                                               07683000
         DC        CL8'ASMGF1'                                          07683200
         DC        14H'0'                                               07683400
         DC        CL8'ASMGF2'                                          07684000
         DC        14H'0'                                               07685000
         DC        CL8'ASMGF3'                                          07686000
         DC        14H'0'                                               07687000
         DC        CL8'ASMGF7'                                          07688000
         DC        14H'0'                                               07689000
         DC        CL8'ASMGF8'                                          07690000
         DC        14H'0'                                               07691000
         DC        CL8'ASMGRTA'                                         07692000
         DC        14H'0'                                               07693000
*                                      L1BLDL+7*L1LENBL                 07694000
* LIST1+L1SINSW                                                         07695000
*                                                                       07696000
SYSINSW  DC        X'00'               EOF AND $JOB SWITCHES            07697000
*                  X'80'               EOF                              07698000
*                  X'40'               $JOB                             07699000
*                  X'01'               CLOSE & OPEN AT CONCATENATION    07700000
*                                                                       07701000
* LIST1+L1RLSDTE                                                        07702000
*                                                                       07703000
RELSDATE DC        C'21MAR76'          ASSEMBLER RELEASE DATE     V7A01 07704028
*                                                                       07705000
* LIST1+L1ASDATE                                                        07706000
*                                                                       07707000
ASYSDATE DC        C'LYYMONDD'         LENGTH & DATE IN INTERNAL CODE   07708000
*                                                                       07709000
* LIST1+L1ASTIME                                                        07710000
*                                                                       07711000
ASYSTIME DC        C'HH:MM:SS'         TIME IN INTERNAL CODE            07712000
*                                                                       07712200
* LIST1+L1VERMOD                                                        07712400
*                                                                       07712600
         DC        CL4'0207'           ASSEMBLER VERSION AND LEVEL      07712800
*                                                                       07713000
* LIST1+L1JDATE                                                         07713200
*                                                                       07713400
         DC        CL6'YYDDDS'         TODAY'S JULIAN DATE              07713600
*                                                                       07713800
* LIST1+L1PID                                                           07714000
*                                                                       07714200
         DC        CL10'ASMG76MAR'     PROGRAM IDENTIFICATION     V7A01 07714428
*                                                                       07714600
* LIST1+L1TRSAVE                                                        07714800
*                                                                       07715000
TRSAVE   DC        F'0'                SYSTERM LINES PER PAGE           07716000
         DC        A(0)                ADDRESS OF LAST LINE IN BUFFER   07717000
*                                                                       07718000
* LIST1+L1UTLINO                                                        07719000
*                                                                       07720000
         DC        F'0'                LINE NUMBER FOR UPDATE FEATURE   07721000
*                                                                       07722000
* LIST1+L1PAGENO                                                        07723000
*                                                                       07724000
         DC        F'0'                PAGE NUMBER FOR SYSPRINT         07725000
*                                                                       07725200
* LIST1+L1LENMC                                                         07725400
*                                                                       07725600
         DC        F'0'                LENGTH OF MACRO DRCTRY D ALIGNED 07725800
*                                                                       07726000
* LIST1+L1BOTMC                                                         07726200
*                                                                       07726400
         DC        F'0'                BOTTOM OF MACRO DIRECTORY        07726600
*                                                                       07726800
* LIST1+L1TOPMC                                                         07727000
*                                                                       07727200
         DC        F'0'                TOP ENTRY IN MACRO DIRECTORY     07727400
*                                                                       07727600
*                                                                       07728000
* LIST1+L1OUTRTN                                                        07728200
*                                                                       07728400
         USING     *,R15               ENTRY ADDRESS SET BY PUT         07728600
         L         R15,=A(ASMGASM)     CHANGE BASE ADDRESSES            07728800
         USING     ASMGASM,R15         TRANSFER BASE                    07728900
         B         ASMGPUT             BRANCH TO GENERAL PUT ROUTINE    07729000
         DROP      R15                                                  07729200
*                                                                       07729400
* LIST1+L1DPTRTN                                                        07729600
*                                                                       07729800
         BR        R14                 RETURN IMMEDIATELY               07730000
*                                                                       07731000
* LIST1+L1BLANKS                                                        07732000
*                                                                       07732400
BLANKS   DC        X'00',CL133' '      ZERO FOLLOWED BY BLANKS          07732600
*                                                                 V7A42 07732728
* LIST1+L1DBLK                                                    V7A42 07732828
ADEBLOCK DC        A(0,0)              DUMMY ADDR OF DEBLOCK RTN  V7A42 07732928
*                                                                       07733000
* LIST1+L1$JOB                                                          07733200
*                                                                       07733400
$JOB     DC        CL5'$JOB '          BATCH,EXECUTE JOB SEPARATOR      07733600
*                                                                       07734000
* LIST1+L1PATCH                                                         07735000
*                                                                       07736000
         DC        19S(*)              PATCH FOR ASMGASM/ASMGBUFF V7A47 07737028
*                                      ALIGNING TO 2K MULTIPLE.         07738000
*                                                                       07740000
*                                                                       07745000
*        LIST1 ENDS HERE                                                07750000
*                                                                       07755000
         EJECT                                                          07760000
SAVE1    DC        F'0'                POINTER TO INVOKER'S SAVE AREA   07762000
*        THE FOLLOWING SAVE AREA IS USED BY ASM, RTA AND ABEND          07763000
SAVE2    DS        18F                 OS SAVE AREA                     07764000
         SPACE     2                                                    07765000
         ORG       SAVE2               OVERLAY SAVE AREA                07766000
INITIAL  STM       R14,R12,12(R13)     SAVE REGISTERS IN CALLER'S AREA  07767000
         LR        R12,R15             SET R12 AS THE BASE              07768000
         ST        R13,SAVE1           SAVE CONTROL PROGRAM SAVE AREA   07769000
         ST        R1,LIST1+L1CTLPRM   SAVE ADDR OF CTL PROG PARAM LIST 07770000
         LA        R13,SAVE2           SET SAVE AREA ADDRESS            07771000
         SR        R10,R10             TURN BATCH SWITCH OFF IN F1      07773000
         BLDL      0,BLDLADDR          DO BLDL ON LOAD MODULES          07774000
         LTR       R15,R15             WAS IT SUCCESSFUL .Q             07775000
         BZ        INITLINK            YES, INITIALIZE LINK TO ASMGF1   07776000
         L         R1,SYS806           LOAD DUMP MASK                   07777000
         ABEND     (1)                 SYSTEM ABEND 806                 07778000
         DS        0F                  ALIGNMENT                        07779000
SYS806   DC        X'80806000'         SYSTEM 806 WITH DUMP             07780000
INITLINK DS        0H                                                   07781000
         ENTRYOUT  ASM                                                  07782000
         LA        R9,LIST1            PASS LIST1 ADDRESS TO ASMGF1     07783000
         LA        R15,F1LINK          LINK ARGUMENT LIST               07790000
         B         DONEINIT            GO BACK AND LINK                 07800000
         ORG                                                            07805000
SAVE3    DS        2F                  SAVE AREA FOR I/O ERROR ROUTINE  07810000
         ORG       SAVE3               BACK UP                          07815000
F1LINK   DS        0F                  ALIGN THE LINK ARG LIST          07820000
         DC        X'80'               SET DE SWITCH BIT ON             07825000
         DC        AL3(LIST1+L1BLDL+L1LENBL)  DE PARAMETER              07830000
         DC        A(0)                DCB ADDRESS PARAMETER            07840000
         ORG                                                            07845000
         SPACE     2                                                    07850000
         LTORG                                                          07860000
         EJECT                                                          07870000
*                                                                       07880000
*        DCB'S ARE GENERATED HERE                                       07900000
*                                                                       07920000
DCBBUFNO EQU       20                  NUMBER OF BUFFERS                07930000
DCBBUFCB EQU       21                  ADDR OF BUFFER CONTROL BLOCK     07935000
DCBEODAD EQU       32                  EODAD EXIT ADDRESS               07940000
DCBRECFM EQU       36                  RECORD FORMAT                    07950000
DCBDDNAM EQU       40                  DD NAME POSITION WITHIN DCB      07960000
DCBOFLGS EQU       48                  DCB OPEN FLAGS                   07980000
DCBGET   EQU       48                  DCB GET ADDRESS                  08000000
DCBBLKSI EQU       62                  BLOCK SIZE                       08010000
DCBLRECL EQU       82                  LOGICAL RECORD LENGTH            08015000
*                                                                       08020000
*                                                                       08030000
         SPACE     2                                                    08040000
*********************************************************************** 08060000
*        EACH DCB IS FOLLOWED BY A WORK AREA FOR THAT FILE            * 08070000
*        AT DCB + L1DCBRCT  -  F'A COUNT OF RECORDS PASSED'           * 08080000
*               + L1DCBLPT  -  A(LAST RECORD POINTER IN LOCATE MODE)  * 08090000
*               + L1DCBCC   -  X'CARRIAGE CONTROL INDICATOR'          * 08095000
*                           -  X'C0'        ASA                       * 08100000
*                           -  X'40'        NUMERIC                   * 08105000
*                           -  X'00'        NONE                      * 08110000
*               + L1DCBPAD  -  X'08'    MONITOR FOR PUTS              * 08115000
*                           -  X'04'    MONITOR FOR GETS              * 08120000
*                           -  X'02'    SUMMARY OF PUT RECORDS AT END * 08122000
*                           -  X'01'    SUMMARY OF GET RECORDS AT END * 08125000
*                           -  AL3(REAL GET/PUT ADDRESS)              * 08130000
*********************************************************************** 08135000
*                                                                       08140000
*        DATA CONTROL BLOCK FOR SYSUT1                                  08160000
SYSUT1   DCB       DDNAME=SYSUT1,MACRF=(RP,WP),RECFM=U,DSORG=PS,       X08180000
               SYNAD=IOERR,EXLST=EXITLIST                               08200000
         ORG       SYSUT1+L1DCBBLK                                      08208000
         DC        H'0'                SYSUT1 BLKSIZE FROM JFCB         08210000
         DC        F'0'                RECORD COUNT FOR SYSUT1          08212000
         DC        A(0)                LAST RECORD POINTER              08214000
         DC        X'00'               CARRIAGE CONT/MONITOR IND        08216000
         DC        AL3(0)              REAL GET/PUT ADDRESS             08218000
*                                                                       08220000
*                                                                       08240000
*        DATA CONTROL BLOCK FOR SYSUT2                                  08260000
SYSUT2   DCB       DDNAME=SYSUT2,MACRF=(RP,WP),RECFM=U,DSORG=PS,       X08280000
               SYNAD=IOERR,EXLST=EXITLIST                               08300000
         ORG       SYSUT2+L1DCBBLK                                      08308000
         DC        H'0'                SYSUT2 BLKSIZE FROM JFCB         08310000
         DC        F'0'                RECORD COUNT FOR SYSUT2          08312000
         DC        A(0)                LAST RECORD POINTER              08314000
         DC        X'00'               CARRIAGE CONT/MONITOR IND        08316000
         DC        AL3(0)              REAL GET/PUT ADDRESS             08318000
*                                                                       08320000
*                                                                       08340000
*        DATA CONTROL BLOCK FOR SYSUT3                                  08360000
SYSUT3   DCB       DDNAME=SYSUT3,MACRF=(RP,WP),RECFM=U,DSORG=PS,       X08380000
               SYNAD=IOERR,EXLST=EXITLIST                               08400000
         ORG       SYSUT3+L1DCBBLK                                      08408000
         DC        H'0'                SYSUT3 BLKSIZE FROM JFCB         08410000
         DC        F'0'                RECORD COUNT FOR SYSUT3          08412000
         DC        A(0)                LAST RECORD POINTER              08414000
         DC        X'00'               CARRIAGE CONT/MONITOR IND        08416000
         DC        AL3(0)              REAL GET/PUT ADDRESS             08418000
*                                                                       08420000
*                                                                       08440000
*        DATA CONTROL BLOCK FOR SYSLIB                                  08460000
         DC    CL8'SYSLIB'         DDNAME SAVE/PASS FOR F1              08470001
SYSLIB   DCB       DDNAME=SYSLIB,MACRF=(R),RECFM=F,DSORG=PO,           X08480000
               LRECL=80,SYNAD=IOERR,EXLST=EXITLIST                      08500000
         ORG       SYSLIB+L1DCBRCT                                      08508000
         DC        F'0'                RECORD COUNT FOR SYSLIB          08510000
         DC        A(0)                LAST RECORD POINTER              08512000
*./      DELETE    SEQ1=08514026,SEQ2=08514026                          08514000
         DC        X'01'               CARRIAGE CONT/MONITOR IND        08516000
         DC        AL3(0)              REAL GET/PUT ADDRESS             08518000
*                                                                       08520000
*                                                                       08540000
*        DATA CONTROL BLOCK FOR SYSPUNCH                                08560000
SYSPUNCH DCB       DDNAME=SYSPUNCH,MACRF=(PL),RECFM=F,DSORG=PS,        X08580000
               LRECL=80,SYNAD=IOERR,EXLST=EXITLIST                      08600000
         ORG       SYSPUNCH+L1DCBRCT                                    08608000
         DC        F'0'                RECORD COUNT FOR SYSPUNCH        08610000
         DC        A(0)                LAST RECORD POINTER              08612000
*./      DELETE    SEQ1=08614026,SEQ2=08614026                          08614000
         DC        X'0A'               CARRIAGE CONT/MONITOR IND        08616000
         DC        AL3(0)              REAL GET/PUT ADDRESS             08618000
*                                                                       08620000
*                                                                       08640000
*        DATA CONTROL BLOCK FOR SYSPRINT                                08660000
SYSPRINT DCB       DDNAME=SYSPRINT,MACRF=(PL),RECFM=FM,DSORG=PS,       X08680000
               LRECL=0,EROPT=ACC,SYNAD=IOERR,EXLST=EXITLIST             08700000
         ORG       SYSPRINT+L1DCBRCT                                    08708000
         DC        F'0'                RECORD COUNT FOR SYSPRINT        08710000
         DC        A(0)                LAST RECORD POINTER              08712000
*./      DELETE    SEQ1=08714026,SEQ2=08714026                          08714000
         DC        X'0A'               CARRIAGE CONT/MONITOR IND        08716000
         DC        AL3(0)              REAL GET/PUT ADDRESS             08718000
*                                                                       08720000
*                                                                       08740000
*        DATA CONTROL BLOCK FOR SYSIN                                   08760000
SYSIN    DCB       DDNAME=SYSIN,MACRF=(GL),RECFM=F,DSORG=PS,           X08780000
               LRECL=80,SYNAD=IOERR,EXLST=EXITLIST                      08800000
         ORG       SYSIN+L1DCBRCT                                       08808000
         DC        F'0'                RECORD COUNT FOR SYSIN           08810000
         DC        A(0)                LAST RECORD POINTER              08812000
*./      DELETE    SEQ1=08814026,SEQ2=08814026                          08814000
         DC        X'05'               CARRIAGE CONT/MONITOR IND        08816000
         DC        AL3(0)              REAL GET/PUT ADDRESS             08818000
*                                                                       08820000
*                                                                       08840000
*        DATA CONTROL BLOCK FOR SYSLIN                                  08860000
SYSLIN   DCB       DDNAME=SYSLIN,MACRF=(PL),RECFM=F,DSORG=PS,          X08880000
               LRECL=80,SYNAD=IOERR,EXLST=EXITLIST                      08900000
         ORG       SYSLIN+L1DCBRCT                                      08900200
         DC        F'0'                RECORD COUNT FOR SYSLIN          08900500
         DC        A(0)                LAST RECORD POINTER              08900600
*./      DELETE    SEQ1=08900726,SEQ2=08900726                          08900700
         DC        X'0A'               CARRIAGE CONT/MONITOR IND        08900800
         DC        AL3(0)              REAL GET/PUT ADDRESS             08900900
*                                                                       08901000
*                                                                       08902000
*        DATA CONTROL BLOCK FOR SYSTERM                                 08903000
SYSTERM  DCB       DDNAME=SYSTERM,MACRF=(PL),RECFM=FM,DSORG=PS,        X08904000
               LRECL=0,SYNAD=IOERR,EXLST=EXITLIST                       08905000
         ORG       SYSTERM+L1DCBRCT                                     08905200
         DC        F'0'                RECORD COUNT FOR SYSTERM         08905500
         DC        A(0)                LAST RECORD POINTER              08905600
*./      DELETE    SEQ1=08905726,SEQ2=08905726                          08905700
         DC        X'0A'               CARRIAGE CONT/MONITOR IND        08905800
         DC        AL3(0)              REAL GET/PUT ADDRESS             08905900
*                                                                       08906000
*                                                                       08907000
*        DATA CONTROL BLOCK FOR SYSUP                                   08908000
SYSUP    DCB       DDNAME=SYSUP,MACRF=(GL),RECFM=F,DSORG=PS,           X08909000
               LRECL=80,SYNAD=IOERR,EXLST=EXITLIST                      08910000
         ORG       SYSUP+L1DCBRCT                                       08912000
         DC        F'0'                RECORD COUNT FOR SYSUP           08915000
         DC        A(0)                LAST RECORD POINTER              08916000
*./      DELETE    SEQ1=08917026,SEQ2=08917026                          08917000
         DC        X'05'               CARRIAGE CONT/MONITOR IND        08918000
         DC        AL3(0)              REAL GET/PUT ADDRESS             08919000
*                                                                       08920000
*                                                                       08940000
         END       ASMGASM                                              08960000
./ ADD NAME=ASMGWYL
AWYL     TITLE     'ASMG     MASTER ROOT SEGMENT/WYLBUR FORMAT'   V7A42 00020028
         ISEQ  73,78                                                    00040022
*TITLE-ASMGASM- PHASE 'ASM'- MASTER ROOT SEGMENT                        00060022
*FUNCTION- PERMANENT RESIDENT PHASE.                                    00080022
*   SAVES CONTROL PROGRAM (O.S. OR INVOKER) REGS.                       00100022
*   LINK'S TO ASMGF1 TO INITIATE THE ASSEMBLY.                          00120027
*   RECEIVES CONTROL FROM 'FPP' VIA 'RTA' AT THE END                    00140025
*   OF THE ASSEMBLY.  ASMGASM THEN                                      00160025
*   RETURNS TO ITS INVOKER AFTER CLOSING ALL DATASETS.                  00180025
*   DEFINES DCB'S FOR ALL 10 DATASETS.                                  00200025
*   CONTAINS SYSIN AND QSAM OUTPUT MONITORING ROUTINES, I/O ERROR       00220027
*     ROUTINE AND ABEND (NAMED FOR HISTORICAL REASON) ROUTINE.          00240027
*ENTRY POINT- ASMGASM                                                   00260022
*EXIT-   BR        R14                                                  00280022
         SPACE     2                                                    00300022
         COPY      ASMGSET                                              00320022
         EJECT                                                          00340022
ASMGASM  START                                                          00360022
*                                                                       00380022
*        REGISTER DEFINITIONS                                           00400022
*                                                                       00420022
         SETR                                                           00440022
         SPACE     2                                                    00460022
*        TO SAVE SOME CORE INITIALIZE IN A FUTURE SAVE AREA.            00480025
         USING     ASMGASM,R15         FOR A SINGLE BRANCH              00500025
         B         INITIAL             BRANCH FOR INITIALIZING          00520025
         DROP      R15                 FORGET R15                       00540025
         USING     ASMGASM,R12         NOW WE'RE USING R12              00560025
         DC        AL1(8),CL8'ASMGV2L7'                                 00570027
*./      DELETE    SEQ1=00580025,SEQ2=00640025                          00640026
*                                                                       00660026
*        LINK TO PHASE ASMGF1                                           00680027
*                                                                       00700026
DONEINIT DS        0H                                                   00720026
         SVC       6                   ISSUE LINK SVC TO ASMGF1         00740026
         EJECT                                                          00760022
*                                                                       00780022
*        RETURN AFTER ALL ASSEMBLIES                                    00800025
*                                                                       00820022
RETURN   DS        0H                                                   00830026
         BALR      R14,0               SET TEMPORARY BASE               00840022
         USING     *,R14                                                00860022
         L         R12,=A(ASMGASM)     SET UP NORMAL BASE               00880022
         DROP      R14                                                  00900022
         LA        R13,SAVE2            OS SAVE AREA                    00920025
*./      DELETE    SEQ1=00940022,SEQ2=01400022                          01400025
*                                                                       01420022
*        RETURN TO INVOKING PROGRAM                                     01440022
*                                                                       01460022
*                                                                       01480026
*        FREE THE CORE IF NECESSARY                                     01490025
         L         R1,FREEMEM          FREE GETMAIN AREA                01500022
         L         R0,FREEMEM+4                                         01520022
         LTR       R0,R0               TEST IF CORE GOTTEN YET          01530025
         BZ        CLOSE               BR IF NOT                        01535025
         FREEMAIN  R,LV=(0),A=(1)                                       01540022
*                                                                       01550025
*        CLOSE ALL DCB'S. A FEW MAY NOT HAVE BEEN OPENED - CLOSE ANYWAY 01560022
*                                                                       01570025
CLOSE    DS        0H                                                   01574027
*./      DELETE    SEQ1=01574426,SEQ2=01575226                          01575227
         LA        R2,LIST1+L1DCBADS   POINT TO 1ST DCB ADDR            01575626
CLOSLOOP DS        0H                                                   01576026
         L         R5,0(,R2)           GET DCB ADDRESS                  01576426
         L         R3,L1DCBPAD(,R5)    GET PATCHED GET/PUT ADDRESS      01576826
         LA        R3,0(,R3)           CLEAR HIGH BYTE                  01577226
         LTR       R3,R3               WAS DCB PATCHED INTO .Q          01577626
         BZ        CLOSPTCH            BRANCH IF NOT                    01578026
         MVC       DCBGET+1(3,R5),L1DCBPAD+1(R5)  RESTORE REAL ADDRESS  01578426
CLOSPTCH DS        0H                                                   01578826
         LA        R2,4(,R2)           POINT TO NEXT DCB ADDR           01579026
         LTR       R5,R5               LAST DCB .Q                      01579226
         BP        CLOSLOOP            BRANCH IF NOT                    01579626
        CLOSE (SYSTERM,LEAVE,          SYSTERM                         X01580027
               SYSUP,DISP,             SYSUP                           X01584025
               SYSLIB,DISP,            SYSLIB                          X01588025
               SYSIN,DISP,             SYSIN                           X01592025
               SYSLIN,DISP,            SYSLIN                          X01596025
               SYSPRINT,LEAVE,         SYSPRINT                        X01600025
               SYSPUNCH,LEAVE,         SYSPUNCH                        X01604025
               SYSUT1,REREAD,          SYSUT1                          X01608025
               SYSUT2,REREAD,          SYSUT2                          X01612025
               SYSUT3,REREAD)          SYSUT3                           01616025
*                                                                       01620025
*        FREE ALL QSAM BUFFERS.                                         01640022
         CLC       SYSIN+DCBBUFCB(3),SYSLIN+DCBBUFCB TEST IF SYSIN AND  01650023
         BE        FREEPRT               SYSLIN HAVE SAME BUFFER POOL   01655023
         LA        R1,SYSIN                                             01660022
         BAL       R2,FREEPOOL                                          01680022
FREEPRT  LA        R1,SYSPRINT                                          01700023
         BAL       R2,FREEPOOL                                          01720022
         LA        R1,SYSPUNCH                                          01740022
         BAL       R2,FREEPOOL                                          01760022
         LA        R1,SYSLIN                                            01780022
         BAL       R2,FREEPOOL                                          01800022
         LA        R1,SYSTERM                                           01804025
         BAL       R2,FREEPOOL                                          01808025
         LA        R1,SYSUP                                             01812025
         BAL       R2,FREEPOOL                                          01816025
*        DELETE THE ASMGISXX MODULE IN CASE BATCH                       01820022
         DELETE    EPLOC=ISNAME                                         01840022
*        DELETE THE ASMGUP ROUTINE IN CASE UPDATE                       01850025
         DELETE    EP=ASMGUP                                            01855025
*                                                                       01860022
*        RESTORE CALLER'S REGISTERS AND RETURN                          01880026
         L         R13,SAVE1            RESTORE CTL PROG SAVE ADDRESS   01900026
         LM        R14,R12,12(R13)      RESTORE CALLER'S REGISTERS      01920026
         L         R15,SAVECC-ASMGASM(,R15)  GET COMPLETION CODE        01940026
         LTR       R15,R15              IF ERR CODE IN REG,             01960022
         BCR       7,R14                RETURN IMMEDIATELY  (BNZR)      01980022
         MVI       12(R13),X'FF'        SET FOR NORMAL RETURN           02000022
         BR        R14                  RETURN                          02020022
*        FREEPOOL SUBROUTINE                                            02040022
FREEPOOL TM        23(R1),X'01'        TEST IF BUFFERS EXIST            02060022
         BCR       1,R2                BOR  BRANCH IF NOT               02080022
         FREEPOOL  (1)                 DO THE FREEPOOL                  02100022
         BR        R2                  RETURN                           02120022
         EJECT                                                          02130026
ABWTO    DC        0F'0',AL2(120+4),X'8000'  MF=E WTO INCL ROUTE CODES  02140026
ABMESS   DS        0CL133                                               02150026
         DC        C'  ASMG999A   ASSEMBLY TERMINATED. I/O ERROR. SYNAD*02160026
               AF INFO='''                                              02170026
*        THE NEXT 77 BYTES MAY BE CLOBBERED BY THE ABEND OR             02180026
*        THE I/O ERROR ROUTINES.                                        02190026
         SPACE     5                                                    02200026
*                                                                       02210026
*        THIS EXLST ROUTINE IS ENTERED DURING OPEN FOR EACH DCB         02220025
*        R8 CONTAINS ADDRESS OF EXLST ROUTINE IN F1 (LOADED BY F1)      02240022
*        IT IS ALSO ENTERED ON EACH IMPLICIT OPEN FORCED BY THE         02260022
*           CONCATENATION OF UNLIKE DEVICES                             02280022
*                                                                       02300022
         DC        0F'0'                                                02320022
EXITLIST DC        X'85'                                                02340022
         DC        AL3(EXITROUT)                                        02360022
EXITROUT DS        0H                                                   02380027
         USING     *,R15                                                02400022
         LA        R1,0(,R1)           ZERO TOP BYTE                    02420022
         C         R1,LIST1+L1DCBADS+L1SIN  IS THIS SYSIN .Q            02440026
         BE        EXIT0               YES, CONTINUE FURTHER ON         02450025
         C         R1,LIST1+L1DCBADS+L1SUP  IS THIS SYSUP .Q            02460026
         BCR       7,R8                NO, BR TO EXLST ROUTINE IN F1    02470025
EXIT0    TM        DCBOFLGS(R1),X'08'  TEST IF FIRST OPEN               02480025
         BO        EXIT1               BR IF NOT                        02500022
         OI        DCBOFLGS(R1),X'08'  TURN ON CONCAT OF UNLIKE DEVICES 02520025
         BR        R8                  GO TO EXLST ROUTINE IN F1        02540022
EXIT1    OI        SYSINSW,X'01'       SET RE-GET SWITCH                02560022
         NI        DCBRECFM(R1),X'EF'  TURN OFF BLOCKED BIT       V7A42 02560127
         TM        DCBRECFM(R1),X'C0'  RECFM=U .Q                 V7A42 02560227
         BO        EXIT2               IF SO, FORCE NEW BUFFERS   V7A42 02560327
         LH        R2,DCBBLKSI(,R1)    GET THE BLOCKSIZE                02560425
         CH        R2,DCBLRECL(,R1)    TEST IF BLOCKED                  02560625
         BE        *+8                 BR IF NOT                        02560825
         OI        DCBRECFM(R1),X'10'  SET THE  B  BIT                  02561025
         TM        DCBBUFCB+2(R1),X'01' TEST FOR MY BUFCB               02562025
         BCR       1,R14               BOR  BRANCH IF NOT               02564023
         L         R3,DCBBUFCB-1(,R1)  POINT AT BUFFER CONTROL BLOCK    02566025
         CLC       DCBBUFNO(1,R1),5(R3) TEST IF ENOUGH BUFFERS          02568025
         BH        EXIT2               BRANCH IF NOT                    02570023
*./      DELETE    SEQ1=02572023,SEQ2=02572023                          02572025
         LA        R2,4(,R2)           ADD 4 IN CASE IT GETS DUMMY BUF  02574023
         CH        R2,6(,R3)           TEST IF POOL BUFFERS LONG ENOUGH 02576025
         BCR       13,R14              BNHR  RETURN TO OPEN IF OK       02578023
EXIT2    OI        DCBBUFCB+2(R1),X'01' SET NO BUFCB IN DCB             02579025
         BR        R14                 RETURN TO OPEN                   02580022
         DROP      R15                                                  02600022
         EJECT                                                          02620022
*                                                                       02640022
*        THIS ROUTINE MONITORS SYSIN TO HANDLE EOF AND $JOB SITUATIONS  02660022
*                                                                       02680022
*        IT IS ENTERED BY DOING A NORMAL GET MOVE ON THE SYSIN DCB      02700026
*        PHASE F1 HAS ALTERED THE DCBGET ADDR IN THE DCB TO POINT HERE  02720022
*                                                                       02740022
SYSINMON DS        0H                                                   02760026
         USING     SYSINMON,R15        USE CALLER'S BRANCH REGISTER     02780026
         CLI       SYSINSW,X'00'       TEST FOR EOF OR $JOB             02800026
         BZ        SYSINMOV            NOT YET, THEN BRANCH             02820026
         L         R15,DCBEODAD(,R1)   LOAD EODAD ADDRESS               02840026
         BR        R15                 AND SIMULATE AN EOF              02860026
*                                                                       02880026
SYSINMOV DS        0H                                                   02900026
         STM       R12,R14,GETSAVE     SAVE SOME OF CALLER'S REGS       02920026
         LR        R12,R15             TRANSFER THE BASE                02940026
         DROP      R15                 DROP THE OLD                     02960026
         USING     SYSINMON,R12        AND USE THE NEW                  02980026
         LR        R14,R0              POINT TO USER'S INPUT AREA       03000026
         MVC       0(80,R14),SYSINBUF  GIVE USER LAST RECORD      V7A42 03030027
         MVC       SYSINEOD(3),DCBEODAD+1(R1)  SAVE USER'S EODAD ADDR   03060026
         MVC       DCBEODAD+1(3,R1),=AL3(SYSINEOF) SET MY EODAD         03080026
SYSINGET DS        0H                                                   03100027
         L         R15,DCBGETSV        POINT AT SYSUP, MAYBE      V7A42 03101027
         TM        PARBYT2,X'40'       UPDATE IN EFFECT .Q        V7A42 03102027
         BNZ       SYSINEG             BRANCH IF SO               V7A42 03103027
         LA        R15,EDITGET         IF NOT, DO EDIT GET        V7A42 03104027
SYSINEG  BALR      R14,R15             GO DO THE "GET"            V7A42 03105027
SYSINGOK DS        0H                                                   03200027
         TM        PARBYT1,X'10'       WAS BATCH SPECIFIED .Q           03220026
         BZ        SYSINRET            BRANCH IF NOT                    03240026
         TM        PARBYT2,X'20'       WAS EXECUTE SPECIFIED .Q         03260026
         BZ        SYSINRET            BRANCH IF NOT                    03280026
         CLC       $JOB,SYSINBUF       TEST FOR A $JOB CARD       V7A42 03301027
         BNE       SYSINRET            BRANCH IF NOT                    03310026
         MVI       SYSINSW,X'40'       SET $JOB SWITCH                  03320026
         B         SYSINRET            AND QUIT                         03340026
*                                                                       03360026
SYSINEOF DS        0H                                                   03380026
         MVI       SYSINSW,X'80'       SET EOF SWITCH                   03400026
         LA        R1,SYSINBUF         NEGATE THE MVC FOLLOWING   V7A42 03410027
*                                                                       03420026
SYSINRET DS        0H                                                   03430026
         MVC       SYSINBUF,0(R1)      SAVE THE RECORD            V7A42 03441027
         LA        R1,SYSINBUF         POINT AT IT                V7A42 03442027
         MVC       SYSIN+DCBEODAD+1(3),SYSINEOD  RESTORE USER'S EODAD   03460026
*./      DELETE    SEQ1=03480026,SEQ2=03500026                          03500027
         LM        R12,R14,GETSAVE     RESTORE CALLER'S REGISTERS       03520026
         BR        R14                 RETURN TO USER                   03540026
         USING     ASMGASM,R12         RESTORE USE OF R12               03560026
*                                                                       03580026
GETSAVE  DC        3F'0'               R12,R13,R14 GET ROUTINE SAVE     03590027
SYSINBUF DS        CL80                INPUT BUFFER               V7A42 03601027
SYSINEOD DC        AL3(0)              SAVE REAL SYSIN EODAD            03620027
         EJECT                                                          03630026
*                                                                       03631226
*        OUTPUT MONITORING ROUTINE FOR ALL OUTPUT FILES                 03631426
*                                                                       03631626
ASMGPUT  DS        0H                  THIS IS IT                       03631826
         STM       R14,R12,PUTSAVE-ASMGASM(R15)  SAVE CALLER'S REGS     03632026
         LR        R12,R15             TRANSFER BASE ADDRESS            03632126
         LR        R2,R0               TRANSFER DATA ADDRESS            03632226
         LR        R3,R1               TRANSFER DCB ADDRESS             03632426
         LM        R4,R5,L1DCBRCT(R3)  R4 IS RECORD COUNT               03632627
*                                      R5 IS PREVIOUS LINE LOCATION     03632826
*                                                                       03633027
         TM        L1DCBCC(R3),X'C0'   WHICH CARRIAGE CONTROL .Q        03633227
         BM        SYSLNUM             BRANCH IF NUMERIC                03633427
         BO        SYSLASA             BRANCH IF ASA                    03633627
         BAL       R10,SYSLPUT         AS IT IS, GET A BUFFER           03633826
         EX        R6,SYSLASIS         PUT OUT THE LINE                 03634026
         B         SYSLRET             AND RETURN                       03634226
SYSLASA  DS        0H                                                   03634426
         CLI       0(R2),C'1'          NEW PAGE .Q                      03634626
         BNE       NOTONE              BRANCH IF NOT                    03634826
         MVI       CARCONT,EJECTIM     SET CARRIAGE CONTROL             03635026
         B         FIRSTPUT            BRANCH TO 1ST PUT                03635226
NOTONE   DS        0H                                                   03635426
         CLI       0(R2),C'-'          TRIPLE SPACE .Q                  03635626
         BNE       NOTRIP              BRANCH IF NOT                    03635826
         MVI       CARCONT,SPACE3IM    SET CARRIAGE CONTROL             03636026
         B         FIRSTPUT            BRANCH TO FIRST PUT              03636226
NOTRIP   DS        0H                                                   03636426
         CLI       0(R2),C'0'          DOUBLE SPACE .Q                  03636626
         BNE       NOTDOUB             BRANCH IF NOT                    03636826
         MVI       CARCONT,SPACE2IM    DOUBLE SPACE IMMEDIATE           03637026
         B         FIRSTPUT            BRANCH TO 1ST PUT                03637226
NOTDOUB  CLI       0(R2),C'+'          NO SPACE AT ALL .Q               03637426
         BE        SECNDPUT            BRANCH IF YES TO 2ND PUT         03637626
NOTPLUS  DS        0H                                                   03637826
         MVI       CARCONT,SPACE1IM    MOVE IN SINGLE SPACE             03638026
FIRSTPUT DS        0H                                                   03638226
         BAL       R10,SYSLPUT         GET OUTPUT BUFFER                03638426
         MVC       0(1,R5),CARCONT     SET CARRIAGE CONTROL             03638626
         BCTR      R6,0                DECREMENT LRECL BY ANOTHER ONE   03638826
         EX        R6,SYSLBLNK         AND BLANK LINE                   03639026
SECNDPUT DS        0H                                                   03639226
         BAL       R10,SYSLPUT         GET A BUFFER                     03639426
         MVI       0(R5),SPACE0AP      NO SPACE AFTER PRINT             03639626
         BCTR      R6,0                DECREMENT LRECL BY ANOTHER ONE   03639826
         EX        R6,SYSLMOVE         MOVE RECORD                      03640026
         B         SYSLRET             AND RETURN                       03640226
SYSLNUM  DS        0H                                                   03640426
         CLI       0(R2),X'00'         NORMAL PRINT CODE .Q             03640626
         BE        SYSLNORM            BRANCH TO PUT IF YES             03640826
         LTR       R5,R5               HAS FILE BEEN WRITTEN BEFORE .Q  03641027
         BNZ       SYSLCC2             BRANCH IF YES                    03641127
         BAL       R10,SYSLPUT         GET AN OUTPUT BUFFER             03641227
         BCTR      R6,0                DECREMENT LRECL BY ANOTHER       03641327
         EX        R6,SYSLBLNK         AND BLANK THE LINE               03641427
SYSLCC2  DS        0H                                                   03641527
         CLI       0(R2),200           DO WE WANT AN EJECT .Q           03641627
         BL        SYSLSPCE            BRANCH LOW FOR SPACES            03641727
SYSLEJCT DS        0H                                                   03641827
         MVI       0(R5),EJECTAP       PUT IN EJECT CODE                03641927
         B         SYSLNORM            CONTINUE AS USUAL                03642027
SYSLSPCE DS        0H                                                   03642127
         SR        R7,R7               01 TO 54 FORCES THAT NUMBER      03642226
         IC        R7,0(,R2)           OF BLANK LINES (SPACES)          03642426
         CLI       0(R2),X'02'         SEE IF LESS THAN 2               03642626
         BH        SYSLTRIP            NO, SPACE 3 AT A TIME            03642826
         IC        R7,APTBL-1(R7)      01 OR 02 FORCES ONLY             03643026
         STC       R7,0(,R5)           NEW CODE IN PREVIOUS LINE        03643226
         B         SYSLNORM            CONTINUE AS NORMAL               03643426
SYSLTRIP DS        0H                                                   03643626
         MVI       0(R5),SPACE3AP      03 TO 54 GENERATES MINIMUM       03643826
         S         R7,FW002            NUMBER OF LINES WITH             03644026
SYSLSPLP DS        0H                  SPACE IMMEDIATE CODES            03644226
         BAL       R10,SYSLPUT         PUT OUT 3 BLANK LINES            03644426
         BCTR      R6,0                DECREMENT BY ANOTHER ONE         03644626
         EX        R6,SYSLBLNK         BLANK ENTIRE LINE                03644826
         C         R7,FW003            ARE WE LESS THAN 3 .Q            03645026
         BNH       SYSLDBL             YES, PUT IN NUMBER SPACES LEFT   03645226
         MVI       0(R5),SPACE3IM      NO, SPACE ANOTHER 3              03645426
         S         R7,FW003            REDUCE COUNTER BY 3              03645626
         B         SYSLSPLP            LOOP                             03645826
SYSLDBL  DS        0H                                                   03646026
         IC        R7,IMTAB-1(R7)      PUT IN CORRECT SPACING           03646226
         STC       R7,0(,R5)           SAVE NUMBER OF SPACES            03646426
SYSLNORM DS        0H                                                   03646626
         BAL       R10,SYSLPUT         PUT OUT RECORD                   03646826
         MVI       0(R5),SPACE1AP      PUT IN NORMAL SPACE              03647026
         BCTR      R6,0                DECREMENT BY ANOTHER ONE         03647226
         EX        R6,SYSLMOVE         TRANSFER LINE TO BUFFER          03647426
SYSLRET  DS        0H                                                   03647626
         STM       R4,R5,L1DCBRCT(R3)  RESTORE RECORD COUNT, POINTER    03647826
         LM        R14,R12,PUTSAVE     RESTORE CALLER'S REGISTERS       03648026
         BR        R14                 RETURN                           03648226
SYSLPUT  DS        0H                                                   03648426
         L         R15,L1DCBPAD(,R3)   GET REAL PUT ADDRESS             03648626
         LR        R1,R3               RESTORE DCB ADDRESS              03648826
         BALR      R14,R15             GO DO IT                         03649026
         LR        R5,R1               SAVE POSITION OF NEXT RECORD     03649226
         LA        R4,1(,R4)           INCREMENT LINE COUNT       V7A50 03649328
         LH        R6,DCBLRECL(,R3)    GET LRECL OF FILE          V7A50 03649428
         BCTR      R6,0                DECREMENT BY ONE           V7A50 03649528
         CLC       DCBGET+1(3,R3),PUTOURTN+1  NEW ACCESS ADDR .Q  V7A50 03649628
         BCR       8,R10               RETURN IF NOT              V7A50 03649728
         MVC       L1DCBPAD+1(3,R3),DCBGET+1(R3)  SAVE THE NEW    V7A50 03649828
         MVC       DCBGET+1(3,R3),PUTOURTN+1  RESET THE DUMMY     V7A50 03649928
         BR        R10                 RETURN                           03650026
         SPACE     2                                                    03650226
PUTSAVE  DC        15F'0'              PUT ROUTINE SAVE AREA            03650427
PUTOURTN DC        A(LIST1+L1OUTRTN)   DUMMY OUTPUT ADDRESS       V7A50 03650528
FW002    DC        F'2'                FULL WORD TWO                    03650626
FW003    DC        F'3'                FULL WORD THREE                  03650826
SYSLBLNK MVC       1(*-*,R5),BLANKS+1  MOVE BLANKS TO OUTPUT LINE       03651026
SYSLMOVE MVC       1(*-*,R5),1(R2)     TRANSFER LINE TO BUFFER          03651226
SYSLASIS MVC       0(*-*,R5),0(R2)     OUTPUT RECORD AS IS              03651426
CARCONT  DC        X'00'               WORK AREA FOR CARRIAGE CONTROL   03651627
APTBL    DC        AL1(SPACE2AP,SPACE3AP)        SPACE AFTER PRINT      03651826
IMTAB    DC        AL1(SPACE1IM,SPACE2IM,SPACE3IM)  SPACE IMMEDIATE TBL 03652026
SPACE0AP EQU       X'01'                                                03652226
SPACE1AP EQU       X'09'                                                03652426
SPACE2AP EQU       X'11'                                                03652626
SPACE3AP EQU       X'19'                                                03652826
EJECTAP  EQU       X'89'                                                03653026
SPACE0IM EQU       X'03'                                                03653226
SPACE1IM EQU       X'0B'                                                03653426
SPACE2IM EQU       X'13'                                                03653626
SPACE3IM EQU       X'1B'                                                03653826
EJECTIM  EQU       X'8B'                                                03654026
*                                                                       03654226
         EJECT                                                          03655026
*                                                                       03660022
*        THIS ROUTINE IS ENTERED BY THE SYNAD EXIT ON AN I/O ERROR      03680022
*        R1 POINTS AT THE DCB FOR WHICH THE ERROR OCCURED               03700022
*                                                                       03720022
IOERR    DS        0H                                                   03740027
         USING     *,R15                                                03760022
         STM       R11,R12,SAVE3       SAVE REGISTERS                   03780022
         L         R12,=A(ASMGASM)     LOAD REGULAR BASE VALUE          03800022
         DROP      R15                                                  03820022
         LA        R11,0(0,R1)         CLEAR TOP BYTE OF REG FOR COMPAR 03840022
         C         R11,LIST1+L1DCBADS+L1SPRINT  IS THIS SYSPRINT .Q     03860026
         BE        SYSPNTER                                             03880022
         C         R11,LIST1+L1DCBADS+L1SPUNCH  IS THIS SYSPUNCH .Q     03900026
         BE        SYSPCHER                                             03920022
         BNL       SYNADQ              SYSPUNCH & ABOVE ARE QSAM        03940022
         MVI       SYNADAF+12,2        SYNADAF ACSMETH CODE FOR BSAM    03960022
         C         R11,LIST1+L1DCBADS+L1SLIB  IS THIS SYSLIB .Q         03980026
         BNE       SYNADQ                                               04000022
         MVI       SYNADAF+12,1        SYNADAF ACSMETH CODE FOR BPAM    04020022
SYNADQ   DS        0H                                                   04040026
         CNOP      0,4                                                  04060022
SYNADAF  SYNADAF   ACSMETH=QSAM                                         04080022
         MVC         ABMESS+59(60),68(1) PICK UP PART OF MESSAGE I WANT 04100022
         MVI         ABMESS+119,C''''                                   04120022
         SYNADRLS    ,                 RELEASE SYNADAF BUFF & SAVE AREA 04130026
WTONOP   MVI       AB3+1,X'00'         NOP SW TO TYPE AND PRINT   V7A47 04140028
         B           AB2                                                04160022
*                                                                       04180022
SYSPCHER LH        R11,PCHERTOT        INCREMENT                        04200022
         LA        R11,1(0,R11)        PCHERTOT                         04220022
         STH       R11,PCHERTOT                                         04240022
         OI        ERRORSW,X'20'                                        04260022
         B         SYSPRPU             ONE MORE CHECK             V7A47 04280028
*                                                                       04300022
SYSPNTER LH        R11,PRTERTOT        INCREMENT                        04320022
         LA        R11,1(0,R11)        PRTERTOT                         04340022
         STH       R11,PRTERTOT                                         04360022
         OI        ERRORSW,X'10'                                        04380022
SYSPRPU  DS        0H                                             V7A47 04382028
         TM        PARBYT3,X'40'       UNDER CMS .Q               V7A47 04384028
         BNO       BACK1               BRANCH TO RETURN IF NOT    V7A47 04386028
         MVI       WTONOP+1,X'F0'      NOP THE NOP TO WTO ONLY    V7A47 04388028
         B         SYNADQ              AND JOIN SYNAD             V7A47 04390028
*                                                                       04400022
BACK1    LM        R11,R12,SAVE3                                        04420022
         BR        R14                 RETURN TO I/O SUPERVISOR         04440022
         EJECT                                                          04460022
*        THIS POINT IS ENTERED IF BUFF RUNS OUT OF CORE                 04480022
BUFFERR  DS        0H                                                   04500027
         USING     *,R1                                                 04520022
         L         R12,=A(ASMGASM)                                      04540022
         DROP      R1                                                   04560022
         BAL       R0,ABEND            PRINT ERROR AND ABEND            04580022
         DC        C'990I',AL1(L'MESS990-1)                             04600025
MESS990  DC        C'INSUFFICIENT MEMORY TO BUFFER UTILITIES'           04620026
         EJECT                                                          04640022
*                                                                       04660022
*        ABEND ROUTINE  (ACTUALLY ONLY DOES A RETURN WITH CC=20)        04680025
*        ENTER WITH R0 POINTING AT MESSAGE IN FOLLOWING FORMAT          04700022
*        DC        C'NNNX',AL1(L'MES-1)                                 04720022
* MES    DC        C'MESSAGE'                                           04740022
*                  NNN IS ERROR NUMBER, X IS 'BLANK', 'I' OR 'A'.       04760027
*                                                                       04780022
ABEND    LR        R1,R0               R1 -> PARMS NOW                  04800022
         LA        R13,SAVE2           R13 -> OS SAVE AREA              04820022
         MVC       AB1+1(1),4(R1)      PLACE LENGTH IN MVC              04840022
         MVC       ABMESS+6(4),0(R1)   MOVE ERROR NUMBER                04860022
         MVC       ABMESS+13(132-13),ABMESS+12   BLANK LINE             04880026
AB1      MVC       ABMESS+13(*-*),5(R1) PLACE MESSAGE                   04900022
         TM        SYSPRINT+DCBOFLGS,X'10' TEST IF PRINTER IS OPEN      04920022
         BO        AB4                 BRANCH IF OPEN                   04930025
         TM        SYSTERM+DCBOFLGS,X'10'  TEST IF SYSTERM OPEN         04940025
         BO        AB6                 BRANCH IF SYSTERM OPEN           04950025
AB2      MVC       ABMESS+120(4),=X'02004020' PLACE ROUTE AND DESC CODE 04960026
         WTO       MF=(E,ABWTO)        TYPE THE MESSAGE                 04970025
         MVC       ABMESS+120(12),BLANKS+1  REMOVE ROUTE & DESC CODES   04975026
AB3      BC        *-*+15,AB5          BYPASS PRINTING                  04980022
AB4      DS        0H                                                   05000026
         MVI       ABMESS,X'03'        NUMERIC SPACE 3 LINES AND PRINT  05020026
         NI        SYSPRINT+L1DCBCC,X'7F'  KILL ASA FLAG                05040027
         OI        SYSPRINT+L1DCBCC,X'40'  SET NUMERIC FLAG             05050027
         PUT       SYSPRINT,ABMESS     PUT ABEND MESSAGE                05060026
*                                                                       05080026
         TM        SYSTERM+DCBOFLGS,X'10'  IS SYSTERM OPEN .Q           05100025
         BZ        AB5                 NO, THEN DON'T PRINT THERE       05105025
*                                                                       05110026
AB6      DS        0H                                                   05115026
         NI        SYSTERM+L1DCBCC,X'7F'  KILL ASA FLAG                 05120027
         OI        SYSTERM+L1DCBCC,X'40'  SET NUMERIC FLAG              05122027
         PUT       SYSTERM,ABMESS      PUT ABEND MESSAGE                05125026
*                                                                       05130026
AB5      DS        0H                                                   05140026
         AIF       (&DEBUG).AB1                                         05160022
         MVI       SYSINSW,X'80'       SIMULATE EOF ON SYSIN            05170025
         CLOSE     SYSLIB              IN CASE WE'RE IN MACRO     V7A42 05171027
         SR        R10,R10             ZERO R10 SO RTA MAY TERMINATE    05175025
         LA        R15,20              SET RETURN CODE TO 20            05180025
         ST        R15,SAVECC          AND PASS IT ON FOR LATER         05185025
         SVC       3                   RETURN SVC TO DELETE MODULE      05190025
         AGO       .AB2                                                 05200022
.AB1     ANOP                                                           05220022
         CLOSE     (SYSPRINT,LEAVE)    FORCE BUFFERS                    05230025
         ABEND     20,DUMP                                              05240022
.AB2     ANOP                                                           05260022
*                                                                       05280026
*./      DELETE    SEQ1=05300022,SEQ2=05360022                          05360026
         EJECT                                                          05380022
*                                                                       05400022
*        ASM PARAM LIST. ORDER-DEPENDENT. REFERENCED RELATIVE TO        05420022
*        'LIST1' BY OTHER PHASES.                                       05440022
*                                                                       05460022
*                                                                       05480022
         LIST1EQU                                                       05490025
         CNOP      4,8                 DEFDDNAM SHOULD BE ON D BOUNDARY 05500026
LIST1    EQU       *                                                    05520022
*                                                                       05540022
* LIST1+L1DCBADS                                                        05560025
*                                                                       05580022
         DC        A(SYSLIN)                                            05600022
         DC        A(SYSTERM)                                           05620025
         DC        A(SYSUP)                                             05640025
         DC        A(SYSLIB)                                            05660026
         DC        A(SYSIN)                                             05680022
         DC        A(SYSPRINT)                                          05700026
         DC        A(SYSPUNCH)                                          05720026
         DC        A(SYSUT1)                                            05740022
         DC        A(SYSUT2)                                            05760022
         DC        X'80'               MARK THE LAST DCB ADDRESS        05770026
         DC        AL3(SYSUT3)                                          05780026
*                                                                       05800022
* LIST1+L1VACFL                                                         05820027
*                                                                       05840027
         DC        A(0)                VACANT FULL WORD AREA            05860027
*                                                                       05870027
*                                                                       05880022
* LIST1+L1CTLPRM                                                        05900026
*                                                                       05920022
         DC        A(0)                ADDR OF CNTRL PROG PARM LIST     05940022
*                                                                       05960022
* LIST1+L1TIMELM                                                        05980026
*                                                                       06000022
*                  PARAMETERS FILLED BY F1 FROM EXEC CARD               06020026
         DC        F'0'          EXECUTION TIME IN SECONDS              06040022
*                                                                       06045026
* LIST1+L1LINECT                                                        06050026
*                                                                       06055026
         DC        H'0'          LINE COUNT                             06060022
*                                                                       06065026
* LIST1+L1PBYT1                                                         06070026
*                                                                       06075026
PARBYT1  DC        X'00'         BIT   MEANING     BIT   MEANING        06080022
*                                 0    FULLUPLIST   1    DOS            06100025
*                                 2    ESD          3    BATCH          06120022
*                                 4    FULLLIST     5    EXTEN          06140023
*                                 6    FULLXREF     7    ALGN           06160023
*                                                                       06165026
* LIST1+L1PBYT                                                          06170026
*                                                                       06175026
PARBYT   DC        X'00'         BIT   MEANING     BIT   MEANING        06180022
*                                 0    DECK         1    LOAD           06200022
*                                 2    RENT         3    LIST           06220022
*                                 4    RLD          5    UPLIST         06240026
*                                 6    XREF         7    TEST           06260022
*                                                                       06262026
* LIST1+L1PBYT2                                                         06264026
*                                                                       06266026
PARBYT2  DC        X'00'         BIT   MEANING     BIT   MEANING        06268026
*                                 0    LREF         1    UPDATE         06270026
*                                 2    EXECUTE      3    SPACE=MAX      06272026
*                                 4    TERM         5    NUM            06274026
*                                 6    STMT         7    SEQ      V7A43 06276028
*                                                                       06280022
* LIST1+L1PBYT3                                                         06282026
*                                                                       06284026
PARBYT3  DC        X'00'         BIT   MEANING     BIT   MEANING        06286026
*                                 0    UMAP         1    CMS      V7A44 06288028
*                                 2    XREF(SHORT)  3    PRINTER  V7A44 06290028
*                                 4    YFLAG        5    RESERVED V7A44 06292028
*                                 6    RESERVED     7    UNUSED         06294026
*                                                                       06296026
* LIST1+L1SYNERR                                                        06300026
*                                                                       06320022
*        FOLLOWING 3 ITEMS SET BY SYNAD ROUTINE AND                     06340026
*        AND MACRO TABLE BUILDER FOR ASMGFD.                            06350026
ERRORSW  DC        X'0000'             ERROR SWITCHES IN TOP BYTE       06360022
*                            BIT  ERROR       BIT  ERROR                06380022
*                             0  204 SEV 16    1  204 SEV 4             06400022
*                             2    207         3    206                 06420022
*                             4    208         5    209                 06440026
*                             6    203         7   UNUSED               06460022
*                             8    ---         9    ---                 06461027
*                            10    ---        11    ---                 06462027
*                            12    ---        13    ---                 06463027
*                            14    ---        15    115                 06464027
*                                                                       06465026
* LIST1+L1IOERR                                                         06470026
*                                                                       06475026
PCHERTOT DC        H'0'                COUNTS I/O ERRORS ON SYSPUNCH    06480022
PRTERTOT DC        H'0'                COUNTS I/O ERRS ON SYSPRINT      06500022
*                                                                       06520022
* LIST1+L1FINDCT                                                        06540026
*                                                                       06560022
         DC        F'0'                FINDS ON SYSLIB COUNT            06580026
*                                                                       06600026
* LIST1+L1CALIGN                                                        06620027
*                                                                       06630026
         DC        X'00',XL3'00'       COMMENT ALIGNMENT VALUE          06640027
*                                                                       06660022
* LIST1+L1BUFADR                                                        06680026
*                                                                       06700022
BUFRTADR DC        V(BUFFENT)          ADDR OF SUPER BUFFER AND CORE   X06720022
                             MANAGEMENT ROUTINE                         06740022
*                                                                       06760022
* LIST1+L1DDNAM                                                         06780025
*                                                                       06800022
*        TABLE OF DDNAMES. MAY BE ALTERED BY F1.                        06820022
DEFDDNAM DC        C'SYSLIN  '                                          06840022
         DC        C'SYSTERM '                                          06860025
         DC        C'SYSUP   '                                          06880025
         DC        C'SYSLIB  '                                          06900022
         DC        C'SYSIN   '                                          06920022
         DC        C'SYSPRINT'                                          06940022
         DC        C'SYSPUNCH'                                          06960022
         DC        C'SYSUT1  '                                          06980022
         DC        C'SYSUT2  '                                          07000022
         DC        C'SYSUT3  '                                          07020022
*                                                                       07040022
* LIST1+L1PRDATE                                                        07060025
*                                                                       07080022
         DC        C'DD MON YY'        SET TO DATE BY F1                07100023
*                                                                       07102025
* LIST1+L1UPCOND                                                        07104027
*                                                                       07106025
         DC        X'00'               MAX UPDATE CONDITION CODE        07108027
*./      DELETE    SEQ1=07110025,SEQ2=07116025                          07116026
*                                                                       07120022
* LIST1+L1ABEND                                                         07140026
*                                                                       07160022
         USING     LIST1,R1                                             07180022
         L         R12,=A(ASMGASM)     THIS POINT ENTERED TO TYPE/PRINT 07200022
         B         ABEND                 MESSAGE AND ABEND              07220022
         DROP      R1                                                   07240022
*                                                                       07244025
* LIST1+L1LSETC                                                         07246025
*                                                                       07248025
         DC        X'00'               DEFAULT SETC VARIABLE LENGTH     07250025
*                                                                       07252026
* LIST1+L1COLCT                                                         07254026
*                                                                       07256026
         DC        X'00'               COLUMN= COUNT FOR XREFS          07258026
*                                                                       07260022
* LIST1+L1BUFERR                                                        07280026
*                                                                       07300022
         DC        A(BUFFERR)          BUFF ERROR HANDLING ROUTINE      07320022
*                                                                       07340022
* LIST1+L1SINAD                                                         07360026
*                                                                       07380022
SYSINAD  DC        A(SYSINMON)         SYSIN MONITOR                    07400022
DCBGETSV DC        2F'0'               SAVE FOR DCBGET IN SYSIN DCB     07420022
*                                                                       07440022
* LIST1+L1FREEMN                                                        07460026
*                                                                       07480022
FREEMEM  DC        2F'0'               FREEMAIN OPERANDS  SET BY F1     07500022
*                                                                       07520022
* LIST1+L1ISADDR                                                        07540026
*                                                                       07560022
         DC        F'0'                ADDRESS OF ASMGISXX MODULE       07580022
*                                                                       07600022
* LIST1+L1ISNAME                                                        07620025
*                                                                       07640022
ISNAME   DC        C'ASMGISXX'         NAME OF THE INSTRUCTION SET MOD. 07660022
*                                                                       07661023
* LIST1+L1PRTIME                                                        07662025
*                                                                       07663023
         DC        C'HH:MM:SS'         SET TO TIME BY F1                07664023
*                                                                       07665025
* LIST1+L1BTCSUM                                                        07666025
*                                                                       07667025
BATCHSUM DC        A(0)                ADDRESS OF FIRST BATCH SUMMARY   07668025
*                                                                       07669025
* LIST1+L1ASPARM                                                        07670025
*                                                                       07671025
ASYSPARM DC        F'0'                LENGTH AND ADDRESS OF SYSPARM    07672025
*                                                                       07673025
* LIST1+L1SAVECC                                                        07674025
*                                                                       07675025
SAVECC   DC        F'0'                SAVES HIGHEST COND CODE RETURNED 07676025
*                                                                       07677025
* LIST1+L1BLDL-4                                                        07678025
*                                                                       07679025
BLDLADDR DC        H'7'                SEVEN ENTRIES TO BUILD           07680027
         DC        H'36'               EACH ONE 36 BYTES LONG           07681025
         DC        CL8'ASMGFPP'        L1BLDL                           07682025
         DC        14H'0'                                               07683027
         DC        CL8'ASMGF1'                                          07683227
         DC        14H'0'                                               07683427
         DC        CL8'ASMGF2'                                          07684025
         DC        14H'0'                                               07685027
         DC        CL8'ASMGF3'                                          07686025
         DC        14H'0'                                               07687027
         DC        CL8'ASMGF7'                                          07688025
         DC        14H'0'                                               07689027
         DC        CL8'ASMGF8'                                          07690025
         DC        14H'0'                                               07691027
         DC        CL8'ASMGRTA'                                         07692025
         DC        14H'0'                                               07693027
*                                      L1BLDL+7*L1LENBL                 07694027
* LIST1+L1SINSW                                                         07695025
*                                                                       07696025
SYSINSW  DC        X'00'               EOF AND $JOB SWITCHES            07697025
*                  X'80'               EOF                              07698025
*                  X'40'               $JOB                             07699025
*                  X'01'               CLOSE & OPEN AT CONCATENATION    07700025
*                                                                       07701025
* LIST1+L1RLSDTE                                                        07702025
*                                                                       07703025
RELSDATE DC        C'21MAR76'          ASSEMBLER RELEASE DATE     V7A01 07704028
*                                                                       07705025
* LIST1+L1ASDATE                                                        07706025
*                                                                       07707025
ASYSDATE DC        C'LYYMONDD'         LENGTH & DATE IN INTERNAL CODE   07708025
*                                                                       07709025
* LIST1+L1ASTIME                                                        07710025
*                                                                       07711025
ASYSTIME DC        C'HH:MM:SS'         TIME IN INTERNAL CODE            07712025
*                                                                       07712226
* LIST1+L1VERMOD                                                        07712426
*                                                                       07712626
         DC        CL4'0207'           ASSEMBLER VERSION AND LEVEL      07712827
*                                                                       07713026
* LIST1+L1JDATE                                                         07713226
*                                                                       07713426
         DC        CL6'YYDDDS'         TODAY'S JULIAN DATE              07713626
*                                                                       07713826
* LIST1+L1PID                                                           07714026
*                                                                       07714226
         DC        CL10'ASMG76MAR'     PROGRAM IDENTIFICATION     V7A01 07714428
*                                                                       07714626
* LIST1+L1TRSAVE                                                        07714826
*                                                                       07715025
TRSAVE   DC        F'0'                SYSTERM LINES PER PAGE           07716027
         DC        A(0)                ADDRESS OF LAST LINE IN BUFFER   07717027
*                                                                       07718025
* LIST1+L1UTLINO                                                        07719025
*                                                                       07720025
         DC        F'0'                LINE NUMBER FOR UPDATE FEATURE   07721027
*                                                                       07722025
* LIST1+L1PAGENO                                                        07723026
*                                                                       07724025
         DC        F'0'                PAGE NUMBER FOR SYSPRINT         07725026
*                                                                       07725226
* LIST1+L1LENMC                                                         07725426
*                                                                       07725626
         DC        F'0'                LENGTH OF MACRO DRCTRY D ALIGNED 07725826
*                                                                       07726026
* LIST1+L1BOTMC                                                         07726226
*                                                                       07726426
         DC        F'0'                BOTTOM OF MACRO DIRECTORY        07726626
*                                                                       07726826
* LIST1+L1TOPMC                                                         07727026
*                                                                       07727226
         DC        F'0'                TOP ENTRY IN MACRO DIRECTORY     07727426
*                                                                       07727626
*                                                                       07728025
* LIST1+L1OUTRTN                                                        07728226
*                                                                       07728426
         USING     *,R15               ENTRY ADDRESS SET BY PUT         07728626
         L         R15,=A(ASMGASM)     CHANGE BASE ADDRESSES            07728826
         USING     ASMGASM,R15         TRANSFER BASE                    07728926
         B         ASMGPUT             BRANCH TO GENERAL PUT ROUTINE    07729026
         DROP      R15                                                  07729226
*                                                                       07729426
* LIST1+L1DPTRTN                                                        07729626
*                                                                       07729826
         BR        R14                 RETURN IMMEDIATELY               07730026
*                                                                       07731026
* LIST1+L1BLANKS                                                        07732026
*                                                                       07732426
BLANKS   DC        X'00',CL133' '      ZERO FOLLOWED BY BLANKS          07732626
*                                                                 V7A42 07732728
* LIST1+L1DBLK                                                    V7A42 07732828
ADEBLOCK DC        A(DEBLOCK,EDITGET)  ADDRESS OF DEBLOCK SUBRS   V7A42 07732927
*                                                                       07733026
* LIST1+L1$JOB                                                          07733226
*                                                                       07733426
$JOB     DC        CL5'$JOB '          BATCH,EXECUTE JOB SEPARATOR      07733626
*                                                                       07734026
* LIST1+L1PATCH                                                         07735027
*                                                                       07736027
         DC        19S(*)              PATCH FOR ASMGASM/ASMGBUFF V7A47 07737028
*                                      ALIGNING TO 2K MULTIPLE.         07738027
*                                                                       07740026
*                                                                       07745026
*        LIST1 ENDS HERE                                                07750026
*                                                                       07755026
         EJECT                                                          07760025
SAVE1    DC        F'0'                POINTER TO INVOKER'S SAVE AREA   07762025
*        THE FOLLOWING SAVE AREA IS USED BY ASM, RTA AND ABEND          07763026
SAVE2    DS        18F                 OS SAVE AREA                     07764025
         SPACE     2                                                    07765025
         ORG       SAVE2               OVERLAY SAVE AREA                07766025
INITIAL  STM       R14,R12,12(R13)     SAVE REGISTERS IN CALLER'S AREA  07767025
         LR        R12,R15             SET R12 AS THE BASE              07768025
         ST        R13,SAVE1           SAVE CONTROL PROGRAM SAVE AREA   07769025
         ST        R1,LIST1+L1CTLPRM   SAVE ADDR OF CTL PROG PARAM LIST 07770026
         LA        R13,SAVE2           SET SAVE AREA ADDRESS            07771025
         SR        R10,R10             TURN BATCH SWITCH OFF IN F1      07773025
         BLDL      0,BLDLADDR          DO BLDL ON LOAD MODULES          07774027
         LTR       R15,R15             WAS IT SUCCESSFUL .Q             07775025
         BZ        INITLINK            YES, INITIALIZE LINK TO ASMGF1   07776026
         L         R1,SYS806           LOAD DUMP MASK                   07777025
         ABEND     (1)                 SYSTEM ABEND 806                 07778025
         DS        0F                  ALIGNMENT                        07779025
SYS806   DC        X'80806000'         SYSTEM 806 WITH DUMP             07780025
INITLINK DS        0H                                                   07781026
         ENTRYOUT  ASM                                                  07782026
         LA        R9,LIST1            PASS LIST1 ADDRESS TO ASMGF1     07783026
         LA        R15,F1LINK          LINK ARGUMENT LIST               07790026
         B         DONEINIT            GO BACK AND LINK                 07800026
         ORG                                                            07805026
SAVE3    DS        2F                  SAVE AREA FOR I/O ERROR ROUTINE  07810026
         ORG       SAVE3               BACK UP                          07815026
F1LINK   DS        0F                  ALIGN THE LINK ARG LIST          07820026
         DC        X'80'               SET DE SWITCH BIT ON             07825026
         DC        AL3(LIST1+L1BLDL+L1LENBL)  DE PARAMETER              07830026
         DC        A(0)                DCB ADDRESS PARAMETER            07840026
         ORG                                                            07845026
         SPACE     2                                                    07850025
         LTORG                                                          07860025
         EJECT                                                          07870025
*                                                                       07880022
*        DCB'S ARE GENERATED HERE                                       07900022
*                                                                       07920022
DCBBUFNO EQU       20                  NUMBER OF BUFFERS                07930023
DCBBUFCB EQU       21                  ADDR OF BUFFER CONTROL BLOCK     07935023
DCBEODAD EQU       32                  EODAD EXIT ADDRESS               07940022
DCBRECFM EQU       36                  RECORD FORMAT                    07950025
DCBDDNAM EQU       40                  DD NAME POSITION WITHIN DCB      07960022
DCBOFLGS EQU       48                  DCB OPEN FLAGS                   07980022
DCBGET   EQU       48                  DCB GET ADDRESS                  08000022
DCBBLKSI EQU       62                  BLOCK SIZE                       08010023
DCBLRECL EQU       82                  LOGICAL RECORD LENGTH            08015025
*                                                                       08020022
*                                                                       08030027
         SPACE     2                                                    08040026
*********************************************************************** 08060026
*        EACH DCB IS FOLLOWED BY A WORK AREA FOR THAT FILE            * 08070026
*        AT DCB + L1DCBRCT  -  F'A COUNT OF RECORDS PASSED'           * 08080026
*               + L1DCBLPT  -  A(LAST RECORD POINTER IN LOCATE MODE)  * 08090026
*               + L1DCBCC   -  X'CARRIAGE CONTROL INDICATOR'          * 08095027
*                           -  X'C0'        ASA                       * 08100027
*                           -  X'40'        NUMERIC                   * 08105027
*                           -  X'00'        NONE                      * 08110027
*               + L1DCBPAD  -  X'08'    MONITOR FOR PUTS              * 08115027
*                           -  X'04'    MONITOR FOR GETS              * 08120027
*                           -  X'02'    SUMMARY OF PUT RECORDS AT END * 08122027
*                           -  X'01'    SUMMARY OF GET RECORDS AT END * 08125027
*                           -  AL3(REAL GET/PUT ADDRESS)              * 08130026
*********************************************************************** 08135026
*                                                                       08140022
*        DATA CONTROL BLOCK FOR SYSUT1                                  08160022
SYSUT1   DCB       DDNAME=SYSUT1,MACRF=(RP,WP),RECFM=U,DSORG=PS,       X08180022
               SYNAD=IOERR,EXLST=EXITLIST                               08200025
         ORG       SYSUT1+L1DCBBLK                                      08208027
         DC        H'0'                SYSUT1 BLKSIZE FROM JFCB         08210027
         DC        F'0'                RECORD COUNT FOR SYSUT1          08212027
         DC        A(0)                LAST RECORD POINTER              08214027
         DC        X'00'               CARRIAGE CONT/MONITOR IND        08216027
         DC        AL3(0)              REAL GET/PUT ADDRESS             08218026
*                                                                       08220022
*                                                                       08240022
*        DATA CONTROL BLOCK FOR SYSUT2                                  08260022
SYSUT2   DCB       DDNAME=SYSUT2,MACRF=(RP,WP),RECFM=U,DSORG=PS,       X08280022
               SYNAD=IOERR,EXLST=EXITLIST                               08300025
         ORG       SYSUT2+L1DCBBLK                                      08308027
         DC        H'0'                SYSUT2 BLKSIZE FROM JFCB         08310027
         DC        F'0'                RECORD COUNT FOR SYSUT2          08312027
         DC        A(0)                LAST RECORD POINTER              08314027
         DC        X'00'               CARRIAGE CONT/MONITOR IND        08316027
         DC        AL3(0)              REAL GET/PUT ADDRESS             08318026
*                                                                       08320022
*                                                                       08340022
*        DATA CONTROL BLOCK FOR SYSUT3                                  08360022
SYSUT3   DCB       DDNAME=SYSUT3,MACRF=(RP,WP),RECFM=U,DSORG=PS,       X08380022
               SYNAD=IOERR,EXLST=EXITLIST                               08400025
         ORG       SYSUT3+L1DCBBLK                                      08408027
         DC        H'0'                SYSUT3 BLKSIZE FROM JFCB         08410027
         DC        F'0'                RECORD COUNT FOR SYSUT3          08412027
         DC        A(0)                LAST RECORD POINTER              08414027
         DC        X'00'               CARRIAGE CONT/MONITOR IND        08416027
         DC        AL3(0)              REAL GET/PUT ADDRESS             08418026
*                                                                       08420022
*                                                                       08440022
*        DATA CONTROL BLOCK FOR SYSLIB                                  08460022
SYSLIB   DCB       DDNAME=SYSLIB,MACRF=(R),RECFM=F,DSORG=PO,           X08480022
               LRECL=80,SYNAD=IOERR,EXLST=EXITLIST                      08500025
         ORG       SYSLIB+L1DCBRCT                                      08508026
         DC        F'0'                RECORD COUNT FOR SYSLIB          08510026
         DC        A(0)                LAST RECORD POINTER              08512026
*./      DELETE    SEQ1=08514026,SEQ2=08514026                          08514027
         DC        X'01'               CARRIAGE CONT/MONITOR IND        08516027
         DC        AL3(0)              REAL GET/PUT ADDRESS             08518026
*                                                                       08520022
*                                                                       08540022
*        DATA CONTROL BLOCK FOR SYSPUNCH                                08560022
SYSPUNCH DCB       DDNAME=SYSPUNCH,MACRF=(PL),RECFM=F,DSORG=PS,        X08580026
               LRECL=80,SYNAD=IOERR,EXLST=EXITLIST                      08600025
         ORG       SYSPUNCH+L1DCBRCT                                    08608026
         DC        F'0'                RECORD COUNT FOR SYSPUNCH        08610026
         DC        A(0)                LAST RECORD POINTER              08612026
*./      DELETE    SEQ1=08614026,SEQ2=08614026                          08614027
         DC        X'0A'               CARRIAGE CONT/MONITOR IND        08616027
         DC        AL3(0)              REAL GET/PUT ADDRESS             08618026
*                                                                       08620022
*                                                                       08640022
*        DATA CONTROL BLOCK FOR SYSPRINT                                08660022
SYSPRINT DCB       DDNAME=SYSPRINT,MACRF=(PL),RECFM=FM,DSORG=PS,       X08680022
               LRECL=0,EROPT=ACC,SYNAD=IOERR,EXLST=EXITLIST             08700026
         ORG       SYSPRINT+L1DCBRCT                                    08708026
         DC        F'0'                RECORD COUNT FOR SYSPRINT        08710026
         DC        A(0)                LAST RECORD POINTER              08712026
*./      DELETE    SEQ1=08714026,SEQ2=08714026                          08714027
         DC        X'0A'               CARRIAGE CONT/MONITOR IND        08716027
         DC        AL3(0)              REAL GET/PUT ADDRESS             08718026
*                                                                       08720022
*                                                                       08740022
*        DATA CONTROL BLOCK FOR SYSIN                                   08760022
SYSIN    DCB       DDNAME=SYSIN,MACRF=GL,DSORG=PS,SYNAD=IOERR,    V7A42*08801027
               EXLST=EXITLIST      NEW SYSIN DCB                  V7A42 08802027
         ORG       SYSIN+L1DCBRCT                                       08808026
         DC        F'0'                RECORD COUNT FOR SYSIN           08810026
         DC        A(0)                LAST RECORD POINTER              08812026
*./      DELETE    SEQ1=08814026,SEQ2=08814026                          08814027
         DC        X'05'               CARRIAGE CONT/MONITOR IND        08816027
         DC        AL3(0)              REAL GET/PUT ADDRESS             08818026
*                                                                       08820022
*                                                                       08840022
*        DATA CONTROL BLOCK FOR SYSLIN                                  08860022
SYSLIN   DCB       DDNAME=SYSLIN,MACRF=(PL),RECFM=F,DSORG=PS,          X08880026
               LRECL=80,SYNAD=IOERR,EXLST=EXITLIST                      08900025
         ORG       SYSLIN+L1DCBRCT                                      08900226
         DC        F'0'                RECORD COUNT FOR SYSLIN          08900526
         DC        A(0)                LAST RECORD POINTER              08900626
*./      DELETE    SEQ1=08900726,SEQ2=08900726                          08900727
         DC        X'0A'               CARRIAGE CONT/MONITOR IND        08900827
         DC        AL3(0)              REAL GET/PUT ADDRESS             08900926
*                                                                       08901025
*                                                                       08902025
*        DATA CONTROL BLOCK FOR SYSTERM                                 08903025
SYSTERM  DCB       DDNAME=SYSTERM,MACRF=(PL),RECFM=FM,DSORG=PS,        X08904025
               LRECL=0,SYNAD=IOERR,EXLST=EXITLIST                       08905026
         ORG       SYSTERM+L1DCBRCT                                     08905226
         DC        F'0'                RECORD COUNT FOR SYSTERM         08905526
         DC        A(0)                LAST RECORD POINTER              08905626
*./      DELETE    SEQ1=08905726,SEQ2=08905726                          08905727
         DC        X'0A'               CARRIAGE CONT/MONITOR IND        08905827
         DC        AL3(0)              REAL GET/PUT ADDRESS             08905926
*                                                                       08906025
*                                                                       08907025
*        DATA CONTROL BLOCK FOR SYSUP                                   08908025
SYSUP    DCB       DDNAME=SYSUP,MACRF=GL,DSORG=PS,                V7A42*08910527
               SYNAD=IOERR,EXLST=EXITLIST                         V7A42 08911027
         ORG       SYSUP+L1DCBRCT                                       08912026
         DC        F'0'                RECORD COUNT FOR SYSUP           08915026
         DC        A(0)                LAST RECORD POINTER              08916026
*./      DELETE    SEQ1=08917026,SEQ2=08917026                          08917027
         DC        X'05'               CARRIAGE CONT/MONITOR IND        08918027
         DC        AL3(0)              REAL GET/PUT ADDRESS             08919026
*                                                                       08920022
*                                                                       08940022
         TITLE     'SUBROUTINE TO DEBLOCK EDIT-FORMAT RECORDS'    V7A42 10000027
*        SUBROUTINE DEBLOCK IS CALLED TO DEBLOCK A SINGLE RECORD  V7A42 10010027
*        FROM WYLBUR EDIT-FORMAT TO CARD FORMAT. AT ENTRY, IT     V7A42 10020027
*        EXPECTS THE FOLLOWING CONDITIONS:                        V7A42 10030027
*                                                                 V7A42 10040027
*        R0        ADDRESS OF AN 8-BYTE DDNAME FOR A POSSIBLE     V7A42 10050027
*                  ERROR MESSAGE.                                 V7A42 10060027
*        R1        ADDRESS OF THE INPUT RECORD TO BE DEBLOCKED    V7A42 10070027
*        R2        ADDRESS OF THE 80-CHARACTER OUTPUT BUFFER      V7A42 10080027
*        R13       ADDRESS OF A STANDARD OS SAVE AREA             V7A42 10090027
*        R14       RETURN ADDRESS                                 V7A42 10100027
*        R15       ADDRESS OF SUBROUTINE DEBLOCK                  V7A42 10110027
*                                                                 V7A42 10120027
*        AN EDIT-FORMAT RECORD CONSISTS OF A FOUR-BYTE BINARY     V7A42 10130027
*        LINE NUMBER, A ONE-BYTE COUNT, AND ZERO OR MORE BYTES    V7A42 10140027
*        OF DATA. THE COUNT GIVES THE TRUE LENGTH OF THE DATA     V7A42 10150027
*        AND DOES NOT INCLUDE EITHER ITSELF OR THE LINE NUMBER.   V7A42 10160027
*        THE DATA CONSIST OF ZERO OR MORE "FIELDS", EACH OF WHICH V7A42 10170027
*        STARTS WITH A CONTROL BYTE. THE FIRST FOUR BITS OF THE   V7A42 10180027
*        CONTROL BYTE TELL HOW MANY BLANKS ARE TO REPLACE THE     V7A42 10190027
*        CONTROL BYTE; THE LAST FOUR GIVE THE LENGTH OF THE       V7A42 10200027
*        DATA FOLLOWING. EITHER HALF OF THE CONTROL BYTE MAY      V7A42 10210027
*        BE ZERO.                                                 V7A42 10220027
*                                                                 V7A42 10230027
*        DEBLOCK PLACES THE DECOMPRESSED DATA IN THE OUTPUT       V7A42 10240027
*        BUFFER AND RETURNS VIA REGISTER 14, UNLESS THE INPUT     V7A42 10250027
*        DATA ARE INVALID IN SOME SENSE. IN THIS CASE, EXIT       V7A42 10260027
*        IS TO THE 'ABEND' ROUTINE TO PRINT AN ERROR MESSAGE      V7A42 10270027
*        AND TERMINATE. THE DDNAME ADDRESS PASSED IN REGISTER 0   V7A42 10280027
*        IS USED ONLY IN BUILDING THE ERROR MESSAGE.              V7A42 10290027
*        ON NORMAL RETURN, R1 WILL BE SET TO POINT TO THE         V7A42 10300027
*        ADDRESS OF THE NEXT RECORD IN SEQUENCE.                  V7A42 10310027
*                                                                 V7A42 10320027
*        REGISTER USAGE WITHIN THIS ROUTINE:                      V7A42 10330027
*                                                                 V7A42 10340027
*        R0        DDNAME ADDRESS FOR ERROR MESSAGE               V7A42 10350027
*        R1        POINTER TO NEXT INPUT CHARACTER                V7A42 10360027
*        R2        POINTER TO NEXT OUTPUT CHARACTER               V7A42 10370027
*        R3        WORK REGISTER                                  V7A42 10380027
*        R4        LENGTH OF CURRENT FIELD                        V7A42 10390027
*        R5        END OF INPUT RECORD, USED WITH R4 FOR BXLE     V7A42 10400027
*        R6        WORK REGISTER, USED IN OVERFLOW CHECK          V7A42 10410027
*        R7        CONSTANT X'0000000F', USED AS A MASK           V7A42 10420027
*        R8        WORK REGISTER, USED IN OVERFLOW CHECK          V7A42 10430027
*        R9        POINTER AFTER LAST OUTPUT CHARACTER            V7A42 10440027
*        R10       CONSTANT 1, USED VARIOUS PLACES                V7A42 10450027
*        R15       BASE REGISTER                                  V7A42 10460027
         EJECT     ,                                              V7A42 10470027
         USING     *,R15               INDICATE BASE              V7A42 10480027
DEBLOCK  STM       R2,R10,28(R13)      SAVE REGS WE USE           V7A42 10490027
         SH        R15,=Y(DEBLOCK-ASMGASM) NORMALIZE BASE REG     V7A42 10500027
         USING     ASMGASM,R15         TELL ASSEMBLER ABOUT IT    V7A42 10510027
         LH        R7,=H'15'           INITIALIZE R7              V7A42 10520027
         LH        R10,=H'1'           INITIALIZE R1              V7A42 10530027
         LA        R9,80(,R2)          POINT TO OUTPUT END + 1    V7A42 10540027
         LR        R5,R10              CLEAR LEFT 3 BYTES OF R5   V7A42 10550027
         IC        R5,4(,R1)           PICK UP THE RECORD LENGTH  V7A42 10560027
         MVC       DBLINE#,0(R1)       SAVE THE LINE NUMBER       V7A42 10570027
         LA        R1,5(,R1)           POINT AT FIRST CTRL BYTE   V7A42 10580027
         AR        R5,R1               LAST INPUT CHAR + 1        V7A42 10590027
         SR        R5,R10              BACK OFF FOR LAST CHAR     V7A42 10600027
         MVC       0(80,R2),BLANKS+1   BLANK THE OUTPUT BUFFER    V7A42 10610027
         CR        R1,R5               ARE WE ALREADY FINISHED .Q V7A42 10620027
         BH        DBEXIT              MAYBE JUMP OVER THE LOOP   V7A42 10630027
*                                                                 V7A42 10640027
DBLOOP   LR        R3,R10              CLEAR LEFT 3 BYTES OF R3   V7A42 10650027
         IC        R3,0(,R1)           GET CONTROL BYTE           V7A42 10660027
         LR        R4,R7               GET MASK X'000F'           V7A42 10670027
         NR        R4,R3               R4 IS NOW FIELD LENGTH     V7A42 10680027
         SRL       R3,4                R3 IS NOW BLANK COUNT      V7A42 10690027
         AR        R2,R3               BUMP OUTPUT PTR OVER BLKS  V7A42 10700027
         LCR       R3,R10              GET -1 INTO R3             V7A42 10710027
         AR        R3,R4               GET LENGTH - 1 IN R3       V7A42 10720027
         LR        R8,R4               COPY LENGTH INTO BXLE REG  V7A42 10730027
         LR        R6,R2               COPY OUTPUT ADDRESS        V7A42 10740027
         BXH       R6,R8,DBERR1        STEP R6, CHECK OVERFLOW    V7A42 10750027
         BM        DBOVER              SKIP MOVE IF LENGTH IS 0   V7A42 10760027
         EX        R3,DBMOVE           MOVE DATA TO OUTPUT BUFFER V7A42 10770027
DBOVER   LR        R2,R6               GET UPDATED OUTPUT POINTER V7A42 10780027
         AR        R4,R10              INCREMENT LENGTH BY 1      V7A42 10790027
         BXLE      R1,R4,DBLOOP        ADD LEN+1 TO INPUT PTR     V7A42 10800027
*                                                                 V7A42 10810027
DBEXIT   AR        R5,R10              RESTORE TRUE END PTR       V7A42 10820027
         CR        R1,R5               HIT THE END EXACTLY .Q     V7A42 10830027
         BNE       DBERR1              IF NOT, BAD RECORD         V7A42 10840027
*                                                                 V7A42 10850027
*        WE MAY HAVE TO CONVERT THE LINE NUMBER                   V7A42 10860027
*                                                                 V7A42 10870027
         L         R2,28(,R13)         RESTORE R2 VALUE           V7A42 10880027
         CLC       BLANKS+1(8),72(R2)  COLUMNS 73/80 BLANK .Q     V7A42 10890027
         BNE       DBNOCONV            IF NOT, NO CONVERSION      V7A42 10900027
         TM        PARBYT2,X'01'       WAS SEQUENCE SPECIFIED .Q  V7A42 10910027
         BZ        DBNOCONV            IF NOT, DON'T CONVERT      V7A42 10920027
         L         R3,DBLINE#          NOW GET THE LINE NUMBER    V7A42 10930027
         CVD       R3,DBWORK           CONVERT IT TO DECIMAL      V7A42 10940027
         UNPK      72(8,R2),DBWORK     AND THENCE TO EBCDIC       V7A42 10950027
         OI        79(R2),C'0'         GET THAT LAST DIGIT RIGHT  V7A42 10960027
*                                                                 V7A42 10970027
*        RETURN TO CALLING PROGRAM                                V7A42 10980027
*                                                                 V7A42 10990027
DBNOCONV LM        R2,R10,28(R13)      RESTORE REGS EXCEPT R1     V7A42 11000027
         BR        R14                 RETURN TO CALLING PROGRAM  V7A42 11010027
*                                                                 V7A42 11020027
*        ERROR MESSAGE ROUTINE                                    V7A42 11030027
*                                                                 V7A42 11040027
DBERR1   LR        R1,R0               MAKE DDNAME ADDRESSABLE    V7A42 11050027
         MVC       DBMSG1A,0(R1)       MOVE DDNAME INTO MESSAGE   V7A42 11060027
         LR        R12,R15             GET STANDARD BASE REG      V7A42 11070027
         BAL       R0,ABEND            GO PRINT MESSAGE AND STOP  V7A42 11080027
         DC        C'501A'             MESSAGE CODE               V7A42 11090027
         DC        AL1(DBMSG1E-*-2)    LENGTH OF MESSAGE          V7A42 11100027
         DC        C'EDIT-FORMAT RECORD INVALID OR > 80 CHARS, '  V7A42 11110027
         DC        C'DDNAME = '        MESSAGE TEXT               V7A42 11120027
DBMSG1A  DC        CL8'XXXXXXXX'       SPACE FOR DD NAME          V7A42 11130027
DBMSG1E  EQU       *                   END OF MESSAGE             V7A42 11140027
*                                                                 V7A42 11150027
DBMOVE   MVC       0(*-*,R2),1(R1)     EXECUTED INSTRUCTION       V7A42 11160027
*                                                                 V7A42 11170027
DBWORK   DS        D                   WORK AREA                  V7A42 11180027
DBLINE#  DS        F                   HOLDS THE LINE NUMBER      V7A42 11190027
         EJECT     ,                                              V7A42 11200027
*                  THIS SUBROUTINE IS USED TO PERFORM A "GET"     V7A42 11210027
*        LOCATE-MODE OPERATION ON A DCB THAT COULD POSSIBLY BE    V7A42 11220027
*        EDIT-FORMAT. IN THE CASE OF ERROR MESSAGES, THE ROUTINE  V7A42 11230027
*        ASSUMES THAT THE ONLY POSSIBLE DCB'S ARE SYSIN AND       V7A42 11240027
*        SYSUP. THE CALLING SEQUENCE IS EXACTLY THE SAME AS THAT  V7A42 11250027
*        FOR A NORMAL 'GET'.                                      V7A42 11260027
         SPACE     ,                                              V7A42 11270027
         USING     *,R15               TEMPORARY BASE REG         V7A42 11280027
EDITGET  STM       R1,R4,EGSAVE        SAVE SOME REGISTERS        V7A42 11290027
         ST        R14,EGSAVE14        STORE RETURN ADDRESS ALSO  V7A42 11300027
         LR        R3,R15              SET UP PERMANENT BASE      V7A42 11310027
         SH        R3,=Y(EDITGET-ASMGASM) NORMALIZE BASING        V7A42 11320027
         USING     ASMGASM,R3          DEFINE IT                  V7A42 11330027
         DROP      R15,R12             GET RID OF TEMPORARY BASE  V7A42 11340027
         LA        R4,EGSYSIN          POINT AT SYSIN TABLE       V7A42 11350027
         C         R1,LIST1+L1SUP      IS IT SYSUP .Q             V7A42 11360027
         BNE       EG1                 BRANCH IF IT IS NOT        V7A42 11370027
         LA        R4,EGSYSUP          IF SO, POINT AT SYSUP TAB  V7A42 11380027
         SPACE     ,                                              V7A42 11390027
*                  SAVE THE EODAD EXIT, INSERT OURS               V7A42 11400027
         SPACE     ,                                              V7A42 11410027
EG1      MVC       EGEODAD,DCBEODAD+1(R1)  SAVE EODAD             V7A42 11420027
         MVC       DCBEODAD+1(3,R1),=AL3(EGEOF)  PLUG EODAD       V7A42 11430027
         SPACE     ,                                              V7A42 11440027
*                  TEST RECFM                                     V7A42 11450027
         SPACE     ,                                              V7A42 11460027
EGRECFM  NI        SYSINSW,X'FE'       RESET SYSIN SWITCH         V7A42 11470027
         L         R1,EGSAVE           RESTORE DCB ADDRESS        V7A42 11480027
         L         R15,EGGADR(,R4)     GET GET ROUTINE POINTER    V7A42 11490027
         L         R15,0(,R15)         GET GET ROUTINE ADDR       V7A42 11500027
         TM        DCBRECFM(R1),X'80'  IS IT RECFM=V .Q           V7A42 11510027
         BNZ       EG2                 IF NOT, BRANCH             V7A42 11520027
         SPACE     ,                                              V7A42 11530027
*                  RECFM=V. ISSUE AN ERROR MESSAGE                V7A42 11540027
         SPACE     ,                                              V7A42 11550027
         L         R1,EGDDNAM(,R4)     POINT AT DDNAME            V7A42 11560027
         MVC       EGDD,0(R1)          MOVE IT INTO THE MESSAGE   V7A42 11570027
         LR        R12,R3              SET UP ABEND ROUTINE BASE  V7A42 11580027
         BAL       R0,ABEND            GO TERMINATE               V7A42 11590027
         DC        C'502A',AL1(EGEMSG-*-2)  LENGTH, ETC.          V7A42 11600027
         DC        C'V-FORMAT INPUT, DDNAME = '                   V7A42 11610027
EGDD     DC        CL8'XXXXXXXX'       SPACE FOR DDNAME           V7A42 11620027
EGEMSG   EQU       *                   END OF MESSAGE             V7A42 11630027
         SPACE     ,                                              V7A42 11640027
EG2      TM        DCBRECFM(R1),X'40'  IS IT RECFM=F .Q           V7A42 11650027
         BNZ       EG3                 IF NOT, BRANCH             V7A42 11660027
         SPACE     ,                                              V7A42 11670027
*                  HERE FOR RECFM=F                               V7A42 11680027
         SPACE     ,                                              V7A42 11690027
         BALR      R14,R15             DO THE GET                 V7A42 11700027
         BAL       R14,EGCONCAT        TEST CONCATENATION         V7A42 11710027
         MVC       EGBUFFER,0(R1)      MOVE THE DATA              V7A42 11720027
         B         EGEXIT              AND GO RETURN              V7A42 11730027
         SPACE     ,                                              V7A42 11740027
*                  HERE FOR RECFM=U                               V7A42 11750027
         SPACE     ,                                              V7A42 11760027
EG3      L         R2,EGRECAD(,R4)     POINT TO LOGICAL RECORD    V7A42 11770027
         C         R2,EGEOBAD(,R4)     COMPARE TO END OF BLOCK    V7A42 11780027
         BL        EG4                 IF LOW, NO INPUT NEEDED    V7A42 11790027
         BALR      R14,R15             DO THE GET                 V7A42 11800027
         BAL       R14,EGCONCAT        TEST CONCATENATION         V7A42 11810027
         LA        R2,2(,R1)           GET START OF BLOCK PTR     V7A42 11820027
         ST        R2,EGRECAD(,R4)     STORE IT IN BLOCK          V7A42 11830027
         AH        R1,0(,R1)           GET END OF BLOCK POINTER   V7A42 11840027
         ST        R1,EGEOBAD(,R4)     STORE IT                   V7A42 11850027
EG4      LR        R1,R2               POINT AT INPUT RECORD      V7A42 11860027
         LA        R2,EGBUFFER         POINT AT OUTPUT AREA       V7A42 11870027
         LA        R15,DEBLOCK         POINT AT DEBLOCKER         V7A42 11880027
         L         R0,EGDDNAM(,R4)     POINT TO DDNAME            V7A42 11890027
         BALR      R14,R15             OFF TO DEBLOCKER           V7A42 11900027
         ST        R1,EGRECAD(,R4)     SAVE UPDATED RECORDADDR    V7A42 11910027
         SPACE     ,                                              V7A42 11920027
*                  RETURN TO CALLING PROGRAM                      V7A42 11930027
EGEXIT   L         R2,EGSAVE           RESTORE DCB POINTER        V7A42 11940027
         MVC       DCBEODAD+1(3,R2),EGEODAD  RESTORE EODAD        V7A42 11950027
         LA        R1,EGBUFFER         POINT TO THE RECORD        V7A42 11960027
         L         R14,EGSAVE14        RESTORE REGISTER 14        V7A42 11970027
         LM        R2,R4,EGSAVE+4      RESTORE REGISTERS          V7A42 11980027
         BR        R14                 RETURN                     V7A42 11990027
         SPACE     ,                                              V7A42 12000027
*                  HERE FOR END OF FILE                           V7A42 12010027
         SPACE     ,                                              V7A42 12020027
EGEOF    L         R2,EGSAVE           RESTORE DCB POINTER        V7A42 12030027
         MVC       DCBEODAD+1(3,R2),EGEODAD  RESTORE EODAD        V7A42 12040027
         L         R14,EGSAVE14        RESTORE REGISTER 14        V7A42 12050027
         LM        R1,R4,EGSAVE        RESTORE REGISTERS          V7A42 12060027
         L         R15,DCBEODAD(,R1)   POINT AT REAL EOF ADDR     V7A42 12070027
         BR        R15                 OFF TO IT                  V7A42 12080027
         SPACE     ,                                              V7A42 12090027
*                  CONCATENATION TESTER                           V7A42 12100027
         SPACE     ,                                              V7A42 12110027
EGCONCAT TM        SYSINSW,X'01'       CONCATENATION .Q           V7A42 12120027
         BCR       8,R14               IF NOT, RETURN IMMEDIATELY V7A42 12130027
         C         R4,=A(EGSYSIN)      IS THIS SYSIN .Q           V7A42 12140027
         BNE       EGRECFM             RETRY IF SYSUP             V7A42 12150027
         TM        PARBYT2,X'40'       IS THIS UPDATE .Q          V7A42 12160027
         BO        EGCONC1             IF SO, SKIP NEXT INSN      V7A42 12170027
         MVC       DCBGETSV+1(3),SYSIN+DCBGET+1 SAVE GET ADDR AGN V7A42 12180027
EGCONC1  MVC       SYSIN+L1DCBPAD+1(3),SYSIN+DCBGET+1 FOR CLOSE   V7A42 12190027
         MVC       SYSIN+DCBGET+1(3),SYSINAD+1   RESET FAKE ADDR  V7A42 12200027
         B         EGRECFM             GO RETRY THE OPERATION     V7A42 12210027
         SPACE     ,                                              V7A42 12220027
*                  DCB DESCRIPTION BLOCKS                         V7A42 12230027
         SPACE     ,                                              V7A42 12240027
*                  FIRST, THE FORMAT                              V7A42 12250027
         SPACE     ,                                              V7A42 12260027
EGDDNAM  EQU       0                   POINTER TO DDNAME          V7A42 12270027
EGRECAD  EQU       4                   LOGICAL RECORD ADDRESS     V7A42 12280027
EGEOBAD  EQU       8                   END OF BLOCK ADDRESS       V7A42 12290027
EGGADR   EQU       12                  PTR TO GET ROUTINE ADDR    V7A42 12300027
         SPACE     ,                                              V7A42 12310027
*                  NOW THE BLOCK FOR SYSIN                        V7A42 12320027
         SPACE     ,                                              V7A42 12330027
EGSYSIN  DC        A(LIST1+L1DDNAM+L1SIN*2) SYSIN DDNAME          V7A42 12340027
         DC        2A(*-*)             RECORD, END OF BLOCK ADDR  V7A42 12350027
         DC        A(SYSIN+L1DCBPAD)   GET ROUTINE POINTER ADDR   V7A42 12360027
         SPACE     ,                                              V7A42 12370027
*                  THE BLOCK FOR SYSUP                            V7A42 12380027
         SPACE     ,                                              V7A42 12390027
EGSYSUP  DC        A(LIST1+L1DDNAM+L1SUP*2) SYSUP DDNAME          V7A42 12400027
         DC        2A(*-*)             RECORD, END OF BLOCK ADDR  V7A42 12410027
         DC        A(SYSUP+DCBGET)     GET ROUTINE POINTER ADDR   V7A42 12420027
         SPACE     ,                                              V7A42 12430027
*                  OTHER CONSTANTS, WORK AREAS, ETC.              V7A42 12440027
         SPACE     ,                                              V7A42 12450027
EGSAVE   DS        4F                  REGISTER SAVE AREA         V7A42 12460027
EGSAVE14 DS        F                   SAVE AREA FOR REGISTER 14  V7A42 12470027
EGBUFFER DS        CL80                BUFFER FOR UNSQUISHING     V7A42 12480027
EGEODAD  DS        AL3                 SAVE AREA FOR DCBEODAD     V7A42 12490027
         SPACE     3                                              V7A42 12500027
         END       ASMGASM                                        V7A42 12510027
./ ADD NAME=ASMGBUFF
         ICTL      1,71,20                                              00020020
         ISEQ      73,78                                                00040021
         PRINT     ON,GEN,NODATA                                        00060020
BUFF     TITLE     ' '                                                  00080020
*********************************************************************** 00100020
*                                                                       00120020
*        THIS DECK CONTAINS THE BUFFERING ROUTINES FOR ASMG.            00140020
*                                                                       00160020
*                  WRITTEN AUG. 67 BY RENNIE PETERSEN                   00180020
*                                                                       00200020
*********************************************************************** 00220020
*                                                                       00240020
*        GENERAL COMMENTS                                               00260020
*                                                                       00280020
*                  THESE ROUTINES ARE DESIGNED TO BUFFER THE UTILITIES  00300020
*        IN CORE TO AS LARGE AN EXTENT AS POSSIBLE.                     00320020
*                  WHEN A CALL TO THE WRITE ROUTINE IS EXECUTED, IT     00340020
*        MOVES THE DATA INTO A CORE BUFFER INSTEAD OF WRITING THE DATA  00360020
*        ON THE DISK.                                                   00380020
*                  ALL DATA IS WRITTEN INTO AND READ FROM CORE AS LONG  00400020
*        AS THERE IS ENOUGH CORE AVAILABLE.                             00420020
*                  WHEN THE SUPPLY OF MEMORY RUNS OUT, THE ROUTINES     00440020
*        BEGIN TO SPILL SOME OF THE RECORDS OUT ONTO THE DISK.          00460020
*                  AT WORST THE UTILITIES WILL STILL BE DOUBLE BUFFERED 00480020
*                  THE NUMBER OF UTILITIES THAT THIS PROGRAM TRIES TO   00500020
*        BUFFER IS VARIABLE FROM ALL TO NONE.                           00520020
*                  THIS IS BECAUSE FOR A LARGE FILE A LOT OF MEMORY IS  00540020
*        USED UP FOR A TABLE EVEN IF ALL THE RECORDS HAVE BEEN SPILLED  00560020
*        ONTO THE DISK.                                                 00580020
*                  ALTHOUGH WRITTEN SPECIFICALLY FOR ASMG THE ROUTINES  00600020
*        ARE DESIGNED TO BE AS GENERAL AS POSSIBLE.                     00620020
*                  THIS PROGRAM IS NOT REENTRANT. IT IS SERIALLY        00630021
*        REUSEABLE IF &SERUSE IS SET TO 1 .                             00635021
*                                                                       00640020
*********************************************************************** 00660020
*                                                                       00680020
*        ROUTINES AVAILABLE                                             00700020
*                                                                       00720020
* NO.    LABEL     NAME            PURPOSE                              00740020
* ---    -----     ----            -------                              00760020
*  0     READK     READ & KEEP     READ A RECORD WHICH MAY BE REREAD    00780020
*  4     READP     READ & PURGE    READ A RECORD AND FREE BUFFER SPACE  00800020
*  8     WRITE     WRITE           WRITE A RECORD                       00820020
* 12     POINTR    POINT TO READ   POINT TO READ A NOTED RECORD         00840020
* 16     POINTW    POINT TO WRITE  POINT TO WRITE A NOTED RECORD.       00860020
* 20     NOTE      NOTE            NOTE POSITION FOR FUTURE POINTS      00880020
* 24     TCLOSE    CLOSE TYPE=T    REWIND AND SWITCH FROM WRITE TO READ 00900020
*                                     OR READ TO WRITE                  00920020
* 28     CHECK     CHECK           CHECK READ OR WRITE COMPLETED        00940020
* 32     GROW      GROW            ADD CORE TO BUFFER SPACE             00960020
* 36     SHRINK    SHRINK          DELETE CORE FROM BUFFER SPACE        00980020
* 40     INIT      INITIALIZE      INITIALIZE TABLES                    01000020
*                                                                       01020020
*********************************************************************** 01040020
*                                                                       01060020
*        LINKAGE CONVENTIONS                                            01080020
*                                                                       01100020
*        ALL ROUTINES ARE CALLED IN THE SAME WAY.                       01120020
*        REGISTER 0 POINTS TO A PARAMETER LIST WHICH IS IN-LINE.        01140020
*        THE PARAMETER LIST CONSISTS OF ONE OR MORE FULL WORDS.         01160020
*        THE PARAMETER LIST CONTENTS IS DEFINED FOR EACH ROUTINE.       01180020
*        THE FIRST PARAMETER WORD SELECTS THE ROUTINE BEING CALLED.     01200020
*        THE ENTRY ADDRESS IS 'BUFFENT'.                                01220020
*        REGISTER 1 MUST CONTAIN THIS ADDRESS.                          01240020
*        ONLY R0 AND R1 ARE ALTERED.                                    01260020
*        R13 NEED NOT POINT AT A SAVE AREA.                             01280020
*        RETURN IS TO THE INSTRUCTION FOLLOWING THE PARAMETER LIST.     01300020
*        EXAMPLE                                                        01320020
*                  L       1,ADDRESS OF BUFFENT                         01340020
*                  CNOP    2,4                                          01360020
*                  BALR    0,1                                          01380020
*                  DC      F           1ST PARAMETER                    01400020
*                  DC      F           2ND PARAMETER                    01420020
*                  INSTRUCTION     RETURN POINT                         01440020
*                                                                       01460020
*********************************************************************** 01480020
*                                                                       01500020
*        REGISTER USAGE                                                 01520020
*                                                                       01540020
*        R2 TO R15 ARE SAVED ON ENTRY AND RESTORED ON EXIT.             01560020
*        R0 TO R7 & R14,R15 ARE WORK REGISTERS.                         01580020
*        R8        IS RETURN FROM SUBROUTINES.                          01600020
*        R9        POINTS TO UCT FOR MOST I/O ROUTINES.                 01620020
*        R10       ALWAYS POINTS TO THE PARAMETER LIST.                 01640020
*        R11       BASE REGISTER.                                       01660020
*        R12       BASE REGISTER.                                       01680020
*        R13       ALWAYS POINTS AT SAVE AREA. DOUBLES AS BASE REGISTER 01700020
*        FR0       IS SAVED ON ENTRY AND RESTORED ON EXIT. USED IN MOVE 01720020
*                                                                       01740020
*********************************************************************** 01760020
*                                                                       01780020
*        ABBREVIATIONS AND DEFINITIONS                                  01800020
*                                                                       01820020
*        UCT       UTILITY CONTROL TABLE                                01840020
*        UUCT      UNBUFFERED UTILITY CONTROL TABLE                     01860020
*        CML       CORE MANAGEMENT LIST                                 01880020
*        RCL       RECORD CONTROL LIST                                  01900020
*        RCP       RECORD CONTROL PREFIX                                01920020
*        FCP       FREE CORE PREFIX                                     01940020
*        READ      DATA MOVEMENT FROM THIS PROGRAM TO USER              01960020
*        WRITE     DATA MOVEMENT FROM USER TO THIS PROGRAM              01980020
*        SPILLOUT  DATA MOVEMENT FROM THIS PROGRAM TO THE DISK          02000020
*        SPILLIN   DATA MOVEMENT FROM THE DISK TO THIS PROGRAM          02020020
*        USER      THE PROGRAMS WHICH CALL THIS ONE                     02040020
*        DISK      DIRECT ACCESS STORAGE DEVICE                         02060020
*        RECORD    A BLOCK OF DATA                                      02080020
*                                                                       02100020
*********************************************************************** 02120020
*                                                                       02140020
*        ASSUMPTIONS AND RESTRICTIONS                                   02160020
*                                                                       02180020
*                  A READ MAY ONLY FOLLOW A POINTR, A TCLOSE PRECEEDED  02200020
*        BY A WRITE, OR ANOTHER READ. SIMILARLY A WRITE MAY ONLY        02220020
*        FOLLOW A POINTW, A TCLOSE PRECEEDED BY A READ, OR ANOTHER      02240020
*        WRITE.                                                         02260020
*                                                                       02280020
*                  THE MOVE SUBROUTINE IS OPTIMIZED FOR A MODEL 75.     02300020
*                                                                       02320020
*                  THE ROUTINES ARE WRITTEN FOR BSAM WITH NOTE, POINT,  02340020
*        AND TCLOSE. THE DCB MUST SPECIFY RECFM=U,NCP=1, NO EODAD.      02360020
*                                                                       02380020
*                  THE USERS I/O AREA MUST BEGIN ON A DOUBLE WORD       02400020
*        BOUNDRY. (THIS RESTRICTION IS FOR MOD 75 PERFORMANCE PURPOSES  02420020
*        ONLY. SEE MOVE SUBROUTINE.)                                    02440020
*                                                                       02460020
*                  THE DCB'S MUST BE OPENED BY THE USER BEFORE THE      02480020
*        FIRST CALL TO THE BUFFERING ROUTINES AND CLOSED BY THE USER    02500020
*        AFTER THE LAST CALL.                                           02520020
*                                                                       02540020
*                  THE USER MUST NOT EXECUTE ANY MACROS ON THE DCB      02560020
*        ONCE HE HAS STARTED USING BUFF'S I/O FACILITIES.               02580022
*                                                                       02600020
*                  THE INITIALIZATION CALL SETS THINGS UP AS IF A       02620020
*        POINTW 1 HAD BEEN DONE ON EACH UTILITY.                        02640020
*                                                                       02660020
*                  IF SIX OR MORE UTILITIES ARE BEING BUFFERED THE      02680020
*        FOLLOWING MINIMUM RECORD LENGTH RESTRICTION APPLIES. THE       02700020
*        RECORD LENGTH MUST NOT BE LESS THAN 4*NUMBER OF BUFFERED       02720020
*        UTILITIES - 16 REDUCED TO THE NEAREST MULTIPLE OF 8.           02740020
*                                                                       02760020
*                  UTILITIES THAT ARE BEING BUFFERED MUST BE ON DIRECT  02780020
*        ACCESS STORAGE. UTILITIES THAT ARE NOT BEING BUFFERED MAY BE   02800020
*        ON DIRECT ACCESS OR TAPE.                                      02820020
*                                                                       02840020
*                  ONE AND ONLY ONE CHECK CALL MUST FOLLOW EVERY        02860020
*        READ OR WRITE CALL.                                            02880020
*                                                                       02900020
*                  THE READ ROUTINE CANNOT READ PARTIAL RECORDS.        02920020
*        IT ALWAYS READS THE WHOLE RECORD.                              02940020
*                                                                       02960020
*********************************************************************** 02980020
         TITLE     ' '                                                  09620020
*********************************************************************** 09640020
*                                                                       09660020
*        SET SYMBOL DEFINITIONS                                         09680020
*                                                                       09700020
*./      DELETE    SEQ1=09720020,SEQ2=09800020                          09800026
         COPY      ASMGSET                                              09820020
*./      DELETE    SEQ1=09840020,SEQ2=09900020                          09900026
         EJECT                                                          09910026
*********************************************************************** 09920020
*                                                                       09940020
*        ASSORTED PARAMETERS AND INITIAL SYMBOL SETTING                 09960020
*                                                                       09980020
ASMGBUFF START                                                          10000020
         ENTRY     BUFFENT                                              10020020
RCLINITL EQU       4*100           NUMBER OF BYTES INITIALLY ASSIGNED  X10040020
                   TO RCL PER UTILITY. MUST BE MULTIPLE OF 8.           10060020
FR0      EQU       0               FLOATING REGISTER 0                  10080020
         SETR                                                           10100020
         SETX                                                           10120020
         PRINT     NOGEN                                                10130027
         SETM                                                           10140020
         SETN                                                           10160020
         PRINT     GEN                                                  10170027
         EJECT                                                          10180020
*********************************************************************** 10200020
*                                                                       10220020
*        ENTRY AND EXIT ROUTINES                                        10240020
*                                                                       10260020
*                  ENTRY ROUTINE                                        10280020
         USING     BUFFENT,R1      FROM CALL LINKAGE                    10300020
BUFFENT  STM       R2,R15,SAVE1    SAVE USERS REGISTERS                 10320020
         LM        R11,R13,ADCON1  LOAD BASE AND SAVE POINTER           10340020
         DROPRUSE  R1,BUFFENT,R12                                       10360020
         USING     SAVE2,R13,R11                                        10380020
         LINKCHK                                                        10390021
         STD       FR0,FSAVE       SAVE FR0                             10400020
         LR        R10,R0          R10 IS PARAMETER LIST POINTER        10420020
         L         R1,XR10         PICK UP 1ST PARAMETER                10440020
         CBH       R1,=F'28',NOTIO CHECK FOR I/O CALL                   10460020
         L         R2,XR10+4       PICK UP UTILITY NO. (0,4,...)        10480020
         LTBP      R9,UCTADDR(R2),NOTIO CHECK WHETHER UCT OR UUCT       10500020
         LA        R1,2(0,R1)      PT AT UNBUFF ADDRESSES IN BRANCH TAB 10520022
NOTIO    LH        R1,BRTAB1(R1)   BRANCH TO ROUTINE                    10540022
         B         BUFFENT(R1)                                          10560022
*                                                                       10580020
*                  EXIT ROUTINE                                         10600020
*                                                                       10620020
*        R10 MUST POINT AT LAST PARAMETER                               10640020
BUFFEXIT LD        FR0,FSAVE       RESTORE FR0                          10660020
         LA        R1,XR10+4       COMPUTE RETURN ADDRESS               10680020
         LINKCHK                                                        10690021
         LM        R2,R15,SAVE1    RESTORE GENERAL REGISTERS            10700020
         BR        R1              RETURN                               10720020
         TITLE     'INIT'                                               10740020
*********************************************************************** 10760020
*        USER CALLABLE CORE MANAGEMENT ROUTINES                         10780020
*                                                                       10800020
*        INITIALIZATION ROUTINE                                         10820020
*                                                                       10840020
*        PARAMETER LIST                                                 10860020
*        DC        A(40)                                                10880020
*        DC        A(LENGTH OF AVAILABLE MEMORY. MUST BE MULTIPLE OF 8) 10900020
*        DC        A(ADDRESS OF AVAILABLE MEMORY. MUST BE ON DOUBLE    X10920020
                   WORD BOUNDRY.)                                       10940020
*        DC        A(NUMBER OF UTILITIES)                               10960020
*        DC        A(NUMBER OF UTILITIES WHICH ARE TO BE BUFFERED)      10980020
*        DC        A(1ST UTILITY DCB ADDRESS)                           11000020
*        DC        A(2ND UTILITY DCB ADDRESS)                           11020020
*        ETC                                                            11040020
*        DC        A(ADDRESS OF ERROR EXIT TO TAKE WHEN CORE EXHAUSTED) 11060020
*                                                                       11080020
*        THIS ROUTINE MUST BE CALLED ONCE AFTER PROGRAM IS LOADED.      11100020
*        THE I/O TABLES ARE INITIALIZED AND THE CORE MANAGEMENT LISTS   11120020
*        ARE CREATED.                                                   11140020
*        IT IS ASSUMED THAT THE CORE GIVEN ON THE INITIALIZATION CALL   11160020
*        IS SUFFICENT TO ACCOMADATE THESE TABLES.                       11180020
*        THE MINIMUM AMOUNT IS RCLINITL*NUMBUFUT+24                     11200020
*                                                                       11220020
INIT     LM        R1,R4,XR10+4    PICK UP SOME PARAMETERS              11240020
         SNAPOUT   'BUFFINIT','MEMORY LENGTH=',(R1),                   X11260020
                   'MEMORY ADDRESS=',(R2),                             X11280020
                   'NUMBER UTILITIES=',(R3),                           X11300020
                   'NUMBER BUFFERED=',(R4)                              11320020
         AIF       (&NOTBUG).GOGO3                                      11340020
*        CLEAR MEMORY SO DUMPS ARE SMALLER                              11360020
         SDR       FR0,FR0             CLEAR FR0                        11380020
         LR        R5,R2               STARTING ADDRESS                 11400020
         LA        R7,XR5(R1)          STOPPING ADDRESS                 11420020
         BCTR0     R7                  SO BXLE WORKS LIKE BXL           11440020
         L         R6,=F'8'            INCREMENT                        11460020
         STD       FR0,XR5             ZERO A DOUBLE WORD               11480020
         BXLE      R5,R6,*-4           ZAP ALL OF MEMORY                11500020
.GOGO3   ANOP                                                           11520020
         ST        R4,NUMBUFUT     STORE NUMBER BUFFERED UTILITIES      11540020
         LA        R10,XR10+5*4    POINT AT FIRST DCB ADDRESS           11560020
         LA        R7,XR1(R2)      POINT AT TOP OF CORE                 11580020
         ST        R7,TOPCORE       KEEP IT                             11600020
         SR        R3,R4           NUMBER OF UNBUFFERED UTILITIES       11620020
         LA        R3,XR3+1        ADD 1 FOR BCT                        11640020
         LA        R9,UCTADDR      POINT AT UCTADDR                     11660020
         LTRBZ     R4,IN3              THERE ANY BUFFERED UTILITIES     11680020
         LR        R8,R7           TOP OF RCL                           11700020
         SR        R6,R6           LENGTH OF RCL                        11720020
*        LOOP TO CREATE UCTS                                            11740020
IN1      L         R5,XR9          LOAD ADDRESS OF UCT                  11760020
         L         R15,=A(UCT)     FROM ADDRESS FOR MOVE                11780020
*./      DELETE    SEQ1=11800020,SEQ2=11800020                          11800021
         MVC       XR5(UCTLNGTH),XR15 PLACE UCT                         11820020
         USING     UCT,R5                                               11840020
         L         R0,XR10         PICK UP DCB ADDRESS                  11860020
         ST        R0,UCTDCB       PLACE IT IN UCT                      11880020
         S         R8,=F'4'        POINT AT NEXT RCL ENTRY              11900020
         ST        R8,UCTRCLN1     POINTER TO TOP OF RCL                11920020
         ST        R8,UCTRLAST     POINTER TO LAST RECORD+1             11940020
         ST        R8,UCTRNEXT     POINTER TO NEXT ACTIVE RECORD        11960020
         ST        R8,UCTNEXTO     POINTER TO NEXT SPILLOUT RECORD      11980020
         LA        R10,XR10+4      POINT AT NEXT DCB IN PARAMETER LIST  12000020
         DROPR     R5                                                   12020020
         LA        R9,XR9+4        POINT AT NEXT SLOT IN UCTADDR        12040020
         A         R6,=A(RCLINITL) INCREMENT LENGTH OF RCL              12060020
         BCT       R4,IN1          LOOP FOR EACH BUFFERED UTILITY       12080020
         SR        R8,R7           CALCULATE RCLINC                     12100020
         ST        R8,RCLINC       STORE IT                             12120020
*        SET BOTTOM OF RCL POINTER                                      12140020
         SR        R7,R6           CALCULATE BOTTOM OF RCL              12160020
         ALIGN     R7,D            PUT TO DOUBLE WORD BOUNDRY           12180020
         ST        R7,RCLEND       SET BOTTOM OF RCL POINTER            12200020
         B         IN3                                                  12220020
*        PICK UP DCBS FOR UNBUFFERED UTILITIES                          12240020
IN4      L         R0,XR10         PICK UP DCB ADDRESS                  12260020
         L         R5,XR9          LOAD ADDRESS OF UUCT                 12280020
         MVI       XR9,M0          STORE FLAG BIT                       12300020
         L         R15,=A(UUCT)    LOAD FROM ADDRESS FOR MOVE           12320020
         MVC       XR5(UUCTLTH),XR15 CREATE UUCT                        12340020
         USING     UUCT,R5                                              12360020
         ST        R0,UUCTDCB      PLACE DCB ADDRESS                    12380020
         DROPR     R5                                                   12400020
         LA        R10,XR10+4      POINT AT NEXT DCB                    12420020
         LA        R9,XR9+4        POINT AT NEXT UCTADDR ENTRY          12440020
IN3      BCT       R3,IN4          LOOP FOR UNBUFFERED UTILITIES        12460020
*        CREATE CML LISTS                                               12480020
         S         R7,=F'8'        SPACE FOR CML ENTRY                  12500020
         USING     CML,R7                                               12520020
         ST        R2,CMLPTDWN     SET DOWN POINTER                     12540020
         LA        R1,CORELIST     POINT AT CML POINTERS                12560020
         ST        R1,CMLPTUP      SET UP POINTER                       12580020
         MVI       CMLFLAG,M1      SET FLAG                             12600020
         DROPRUSE  R7,CML,R2       INITIALIZE BOTTOM CML                12620020
         ST        R1,CMLPTDWN     SET DOWN POINTER                     12640020
         ST        R7,CMLPTUP      SET UP POINTER                       12660020
         MVI       CMLFLAG,M0      SET FLAG                             12680020
         USING     FCP,R2          INITIALIZE 1ST FCP                   12700020
         ST        R1,FCPPTDWN     SET DOWN POINTER                     12720020
         ST        R1,FCPPTUP      SET UP POINTER                       12740020
         DROPRUSE  R2,CML,R1       INITIALIZE CORELIST                  12760020
         ST        R7,CMLPTDWN     SET DOWN POINTER                     12780020
         ST        R2,CMLPTUP      SET UP POINTER                       12800020
         MVI       CMLFLAG,N       SET FLAG                             12820020
         USING     FCP,R1                                               12840020
         ST        R2,FCPPTDWN     SET DOWN POINTER                     12860020
         ST        R2,FCPPTUP      SET UP POINTER                       12880020
         DROPR     R1                                                   12900020
*        RESET SOME CONTROL WORDS                                       12920020
         AIF       (NOT &SERUSE).NOSER1                                 12930021
         SR        R0,R0           CREATE 0                             12940020
         ST        R0,MAXBLOCK     SET MAXBLOCK                         12960020
.NOSER1  ANOP                                                           12970021
*        PICK UP ERROR EXIT ADDRESS                                     12980020
         L         R0,XR10         PICK UP ERROR EXIT ADDRESS           13000020
         ST        R0,NOGOEXIT     STORE IT                             13020020
         B         BUFFEXIT                                             13040020
         TITLE     'GROW'                                               13060020
*        GROW ROUTINE                                                   13080020
*                                                                       13100020
*        DC        A(32)                                                13120020
*        DC        A(LENGTH OF AVAILABLE AREA)                          13140020
*        DC        A(ADDRESS OF AVAILABLE AREA)                         13160020
*        BOTH THE ABOVE NUMBERS MUST BE MULTIPLES OF 8                  13180020
*        LENGTH MUST BE GREATER THAN 16                                 13200020
*                                                                       13220020
*        THIS ROUTINE ENLARGES THE BUFFER AREA                          13240020
*        THE AVAILABLE AREA MUST BE CONTIGUOUS WITH THE CORE PRESENTLY X13260020
                   BEING USED                                           13280020
*        IT MAY BE EITHER AT THE TOP OR THE BOTTOM                      13300020
*        IF IT IS AT THE BOTTOM IT IS SIMPLY LINKED INTO THE FREE CORE X13320020
                   LIST                                                 13340020
*        IF IT IS AT THE TOP THEN THE RCL IS MOVED UP AND THE VACATED  X13360020
                   AREA IS LINKED INTO THE FREE CORE LIST               13380020
*                                                                       13400020
GROW     LM        R14,R15,XR10+4  LOAD LENGTH AND ADDRESS              13420027
         SNAPOUT   'GROW','LENGTH=',(R14),'ADDRESS=',(R15)              13440020
         LA        R10,XR10+8      POINT AT LAST PARAMETER              13460020
         CBNE      R15,TOPCORE,GR6 TEST IF CONTIGUOUS WITH TOP          13480020
*        GROW UP                                                        13500020
*        MOVE RCL                                                       13520020
         L         R7,TOPCORE      CALCULATE LENGTH OF RCL              13540020
         LA        R3,CORELIST     POINT AT CML POINTERS                13560020
         USING     CML,R3                                               13580020
         L         R5,CMLPTDWN     POINT AT BOTTOM OF RCL               13600020
         LA        R5,XR5          CLEAR TOP BYTE                       13620020
         SR        R7,R5           LENGTH OF RCL                        13640020
         LA        R6,XR5(R14)     TO ADDRESS FOR MOVE                  13660020
         BAL       R8,MOVE         MOVE RCL                             13680020
*        FIX UP CML CHAIN                                               13700020
         ST        R6,CMLPTDWN     RESET RCL POINTER IN CORELIST        13720020
         MVI       CMLFLAG,N       RESET FLAG                           13740020
         DROPRUSE  R3,CML,R6       FIX NEW RCL CML                      13760020
         ST        R5,CMLPTDWN     POINT IT DOWN TO ITS OLD SELF        13780020
         MVI       CMLFLAG,M1      RESET FLAG                           13800020
         DROPRUSE  R6,CML,R5        FIX OLD RCL CML                     13820020
         ST        R6,CMLPTUP      POINT IT UP AT NEW RCL CML           13840020
*        FREE THE EXTRA CORE                                            13860020
         LR        R3,R5           SET UP POINTERS FOR FREECORE         13880020
         LR        R4,R6                                                13900020
         L         R2,CMLPTDWN                                          13920020
         BAL       R8,FREECORE                                          13940020
         DROPR     R5                                                   13960020
*        FIX POINTERS IN DATA AREA                                      13980020
         L         R0,TOPCORE      FIX TOPCORE                          14000020
         AR        R0,R14                                               14020020
         ST        R0,TOPCORE                                           14040020
         L         R0,RCLEND       FIX RCLEND                           14060020
         ALR       R0,R14                                               14080020
         ST        R0,RCLEND                                            14100020
*        FOR EACH BUFFERED UTILITY FIX UCT                              14120020
         L         R1,NUMBUFUT     NUMBER OF BUFFERED UTILITIES         14140020
         LA        R1,XR1+1        ADD 1 FOR BCT                        14160020
         LA        R2,UCTADDR      POINT AT UCT ADDRESSES               14180020
         L         R4,RCLINC       FOR BXH                              14200020
         B         GR5                                                  14220020
GR1      L         R3,XR2          POINT AT UCT                         14240020
         USING     UCT,R3                                               14260020
         L         R6,UCTRCLN1     FIX UCTRCLN1                         14280020
         AR        R6,R14                                               14300020
         ST        R6,UCTRCLN1                                          14320020
         L         R0,UCTRNEXT     FIX UCTRNEXT                         14340020
         AR        R0,R14                                               14360020
         ST        R0,UCTRNEXT                                          14380020
         L         R5,UCTRLAST     FIX UCTRLAST                         14400020
         AR        R5,R14                                               14420020
         ST        R5,UCTRLAST                                          14440020
         L         R0,UCTNEXTO     FIX UCTNEXTO                         14460020
         AR        R0,R14                                               14480020
         ST        R0,UCTNEXTO                                          14500020
         LTBZ      R0,UCTSPLI,GR21 TEST IF SPILLIN GOING                14520020
         AR        R0,R14          FIX UCTSPLI                          14540020
         ST        R0,UCTSPLI                                           14560020
GR21     LTBZ      R0,UCTSPLO,GR22 TEST IF SPILLOUT GOING               14580020
         AR        R0,R14                                               14600020
         ST        R0,UCTSPLO                                           14620020
GR22     SR        R6,R4           FOR BXH                              14640020
         B         GR4                                                  14660020
*        FIX RCP POINTERS TO RCL                                        14680020
         USING     RCL,R6                                               14700020
GR3      TMBNZ     RCLFLAG,M7,GR4  TEST IF IN CORE                      14720020
         L         R7,RCLPT        POINT AT RCP                         14740020
         USING     RCP,R7                                               14760020
         L         R0,RCPPT        FIX RCPPT                            14780020
         AR        R0,R14                                               14800020
         ST        R0,RCPPT                                             14820020
GR4      BXH       R6,R4,GR3       LOOP FOR EACH RCL                    14840020
         LA        R2,XR2+4        POINT AT NEXT UCTADDR ENTRY          14860020
GR5      BCT       R1,GR1          LOOP FOR EACH UCT                    14880020
         B         BUFFEXIT        END OF GROW UP                       14900020
         DROPR     R3,R6,R7                                             14920020
*        GROW DOWN                                                      14940020
GR6      LA        R2,CORELIST     POINT AT CORELIST                    14960020
         USING     CML,R2                                               14980020
         L         R4,CMLPTUP      POINT AT BOTTOM CORE ENTRY           15000020
         ST        R15,CMLPTUP     SET CORELIST                         15020020
         DROPRUSE  R2,CML,R15                                           15040020
         ST        R2,CMLPTDWN     SET NEW ENTRY DOWN POINTER           15060020
         ST        R4,CMLPTUP      SET NEW ENTRY UP POINTER             15080020
         DROPRUSE  R15,CML,R4                                           15100020
         IC        R0,CMLFLAG      SAVE FLAG                            15120020
         ST        R15,CMLPTDWN    SET DOWN POINTER IN BOTTOM ENTRY     15140020
         STC       R0,CMLFLAG      RESTORE FLAG                         15160020
         LR        R3,R15          FOR FREECORE                         15180020
         BAL       R8,FREECORE     FREE NEW ENTRY                       15200020
         B         BUFFEXIT        RETURN                               15220020
         DROPR     R4                                                   15240020
         TITLE     'SHRINK'                                             15260020
*        SHRINK ROUTINE                                                 15280020
*                                                                       15300020
*        PARAMETER LIST                                                 15320020
*        DC        A(36)                                                15340020
*        DC        A(LENGTH DESIRED (MULTIPLE OF 8))                    15360020
*        DS        F   WILL BE SET TO ADDRESS (DOUBLE ALIGNED) OF      X15380020
                   CORE, OR -1 IF NOT ENOUGH AVAILABLE                  15400020
*                                                                       15420020
*        A GETCORE IS DONE TO ASSURE THAT ENOUGH FREE AREA EXISTS       15440020
*        THE GOTTEN CORE IS THEN FREEED AND A SQUISH DONE TO MOVE IT   X15460020
                   TO THE BOTTOM OF MEMORY                              15480020
*        THE BOTTOM FCP IS THEN PLACED ABOVE THE CORE RETURNED TO      X15500020
                   THE USER                                             15520020
*                                                                       15540020
SHRINK   L         R9,XR10+4       LOAD LENGTH                          15560020
         SNAPOUT   'SHRINK','LENGTH=',(R9)                              15580020
         LA        R10,XR10+8      POINT AT LAST PARAMETER              15600020
*        DO GETCORE                                                     15620020
         MVI       SHRINKSW+1,M    NOP THE SWITCH                       15640020
         LR        R7,R9           DO A GETCORE FOR AMOUNT              15660020
         BAL       R8,GC0          DO A GETCORE                         15680020
         REF       GETCORE                                              15700020
         MVI       SHRINKSW+1,M0123 RESET THE SWITCH                    15720020
*        TEST FOR NOT ENOUGH                                            15740020
         LTRBNL    R5,SH1          TEST FOR ERROR                       15760020
         ST        R5,XR10         PASS THE BAD NEWS BACK               15780020
         B         BUFFEXIT        EXIT, WEEPING                        15800020
*        DO FREECORE                                                    15820020
         USING     CML,R5                                               15840020
SH1      L         R4,CMLPTUP      SET THINGS UP FOR FREECORE           15860020
         L         R2,CMLPTDWN                                          15880020
         DROPR     R5                                                   15900020
         LR        R3,R5                                                15920020
         BAL       R8,FREECORE                                          15940020
*        DO SQUISH                                                      15960020
         BAL       R8,SQUISH                                            15980020
*        TAKE CORE OFF BOTTOM AND FIX UP CML AND FCP CHAINS             16000020
         LA        R1,CORELIST     POINT AT CORELIST                    16020020
         USING     CML,R1                                               16040020
         L         R2,CMLPTUP      POINT AT BOTTOM FCP                  16060020
         ST        R2,XR10         GIVE USER HIS ADDRESS                16080020
         LA        R3,XR2(R9)      CALCULATE TOP OF HIS AREA            16100020
         ST        R3,CMLPTUP      RESET CORELIST                       16120020
         USING     FCP,R1                                               16140020
         ST        R3,FCPPTUP                                           16160020
         ST        R3,FCPPTDWN                                          16180020
         DROPRUSE  R1,CML,R2       POINT AT OLD BOTTOM                  16200020
         L         R4,CMLPTUP      FIND UPPER ENTRY                     16220020
         DROPRUSE  R2,CML,R3       CREATE NEW ENTRY                     16240020
         ST        R1,CMLPTDWN                                          16260020
         MVI       CMLPTDWN,M0                                          16280020
         ST        R4,CMLPTUP                                           16300020
         USING     FCP,R3                                               16320020
         ST        R1,FCPPTUP                                           16340020
         ST        R1,FCPPTDWN                                          16360020
         DROPRUSE  R3,CML,R4       ALTER UPPER ENTRY                    16380020
         IC        R0,CMLFLAG                                           16400020
         ST        R3,CMLPTDWN                                          16420020
         STC       R0,CMLFLAG                                           16440020
         B          BUFFEXIT       RETURN                               16460020
         DROPR     R4                                                   16480020
         TITLE     'READ'                                               16500020
*********************************************************************** 16520020
*        USER CALLABLE BUFFERED I/O ROUTINES                            16540020
*                                                                       16560020
*        READ ROUTINE                                                   16580020
*                                                                       16600020
*        PARAMETER LIST                                                 16620020
*        DC        A(0) IF DATA MAY BE RE-READ                          16640020
*                           OR                                          16660020
*                  A(4) IF DATA MAY BE PURGED AFTER READING             16680020
*        DC        A(UTILITY NUMBER)                                    16700020
*        DC        A(ADDRESS OF READ AREA)                              16720020
*                                                                       16740020
*        THE READ ROUTINE MOVES THE DATA TO THE USER                    16760020
*        IT THEN CHECKES THAT THE NEXT RECORD IS IN CORE                16780020
*        IF NOT IT PERFORMS A SPILLIN TO GET THE NEXT RECORD            16800020
*                                                                       16820020
         USING     UCT,R9                                               16840020
*        READ AND PURGE ENTRY                                           16860020
READP    MVI       READSW+1,M      NOP THE SWITCH                       16880020
*        READ AND KEEP ENTRY                                            16900020
READK    L         R6,XR10+8       LOAD DATA ADDRESS                    16920020
         SNAPOUT   'READ','UTILITY=',XR10+4,'ADDRESS=',(R6)             16940020
         LA        R10,XR10+8      POINT AT LAST PARAMETER              16960020
         ACCUM     UCTRDCNT        INCREMENT COUNTER                    16980020
         L         R7,UCTRNEXT     POINT AT RCL OF NEXT RECORD          17000020
         USING     RCL,R7                                               17020020
*        IF EODAD EXIT NEEDED COMPARE R1 WITH UCTRLAST HERE             17040020
*        IF EQUAL SET A SWITCH TO BE INTEROGATED BY CHECK ROUTINE       17060020
*        THEN EXIT TO BUFFEXIT                                          17080020
         AIF       (&NOTBUG).RDOK                                       17083021
         CBNE      R1,UCTRLAST,RDOK                                     17086021
         SNAPOUT   'READ OF EOF'                                        17089021
         ABEND     20,DUMP                                              17092021
RDOK     DS        0H                                                   17095021
.RDOK    CBNE      R7,UCTSPLI,RD1  IS RECORD BEING SPILLED IN           17100021
         BAL       R8,CHECKIN      CHECK IT                             17120020
RD1      L         R3,RCLPT        POINT AT RCP                         17140020
         USING     RCP,R3                                               17160020
         LH        R7,RCPRL        PICK UP RECORD LENGTH                17180020
         DROPR     R7                                                   17200020
         ST        R7,UCTRRL       STORE IT FOR CHECK                   17220021
         LA        R5,RCPDATA      POINT AT DATA                        17240020
         SNAPDATA  ADDR=(R5),LENGTH=(R7)                                17250026
         BAL       R8,MOVE         MOVE IT TO USER                      17260020
         L         R7,UCTRNEXT     POINT AT RCL AGAIN                   17280020
         USING     RCL,R7                                               17300020
READSW   BC        *-*+15,RD0(*-*) PURGE SWITCH                         17320020
         MVI       READSW+1,M0123  RESET SWITCH                         17340020
*        FREE THE RECORDS CORE                                          17360020
         OI        RCLFLAG,M7      SHOW NOT IN CORE                     17380020
         MVC       RCLNOTE(3),RCPNOTE SAVE THE NOTE IF ANY              17400020
         USING     CML,R3                                               17420020
         L         R4,CMLPTUP      LOAD STUFF FOR FREECORE              17440020
         L         R2,CMLPTDWN                                          17460020
         BAL       R8,FREECORE     FREE THE CORE                        17480020
         B         RD2                                                  17500020
         DROPR     R3                                                   17520020
*./      DELETE    SEQ1=17540020,SEQ2=17640020                          17640025
RD0      OI        UCTSW,M1        SHOW SOMETHING SPILLOUTABLE          17660025
         CLBNL     R0,UCTFLAG,RD2  IS THIS LOWER PRIORITY               17680020
         ST        R0,UCTFLAG      SHOW THIS LOWEST PRIORITY            17700020
         ST        R7,UCTNEXTO     SET NEXT SPILLOUT POINTER            17720020
*        ADVANCE NEXT RECORD POINTER TO NEXT RECORD                     17740020
RD2      A         R7,RCLINC       POINT AT NEXT RCL ENTRY              17760020
*./      DELETE    SEQ1=17780020,SEQ2=17820020                          17820025
*        DROP INTO SPILLIN ROUTINE TO GET NEXT RECORD INTO CORE         17840025
         DROPR     R7,R9                                                17860020
         TITLE     'SPILLIN'                                            17880020
*        SPILLIN CODE   (PART OF READ ROUTINE)                          17900020
*        ALSO USED BY POINTR                                            17920020
*                                                                       17940020
         USING     UCT,R9                                               17960020
         USING     RCL,R7                                               17961025
*        SET THE NEXT RECORD POINTER                                    17962025
SPILLIN  ST        R7,UCTRNEXT         STORE NEXT RECORD POINTER        17963025
*        ADD 1 TO THE PRIORITY COUNTER IN THE RCL                       17964025
         L         R0,RCLFLAG      PICK UP THE FLAG                     17965025
         AL        R0,=X'04000000' ADD 1 TO BIT 5                       17966025
         BNLC      SI0             TEST FOR OVERFLOW                    17967025
         O         R0,=X'FC000000' INSERT MAX COUNT                     17968025
SI0      ST        R0,RCLFLAG      STORE UPDATED COUNT                  17969025
*        TEST IF NEXT RECORD IS ALREADY IN CORE                         17970025
         CBE       R7,UCTRLAST,BUFFEXIT EXIT IF THIS LAST RECORD        17971025
         TMBZ      RCLFLAG,M7,BUFFEXIT  RETURN IF IN CORE               17972025
         DROPR     R7                                                   17973025
         SNAPOUT   'SPILLIN'                                            17980025
         ACCUM     UCTSICNT        ADD 1 TO STATISTICS COUNTER          18000020
*        CHECK IF SPILLIN IN PROGRESS                                   18006021
         LTBZ      R7,UCTSPLI,SI1  IS SPILLIN IN PROGRESS               18012021
         BAL       R8,CHECKIN                                           18018021
*        GET CORE TO READ INTO                                          18020020
SI1      L         R7,UCTMAXRL     PICK UP MAX RECORD LENGTH            18040021
         ST        R7,SILRECL      SAVE MAX RECORD LENGTH               18050027
         ALIGN     R7,D,INC=16     ADD 16 FOR RCP AND DOUBLE ALIGN IT   18060020
         BAL       R8,GETCORE                                           18080020
         USING     RCP,R5                                               18100020
*        CHECK IF SPILLOUT IN PROGRESS                                  18120021
*./      DELETE    SEQ1=18140020,SEQ2=18160020                          18160021
         LTBZ      R7,UCTSPLO,SI2  IS SPILLOUT IN PROGRESS              18180021
         BAL       R8,CHECKOUT                                          18200020
*        DO A POINT ON UTILITY                                          18220020
SI2      L         R1,UCTDCB       POINT AT DCB                         18240020
         L         R7,UCTRNEXT     RESET RCL POINTER                    18260020
         USING     RCL,R7                                               18280020
         L         R0,RCLFLAG      PICK UP FTTR                         18300020
*./      DELETE    SEQ1=18320020,SEQ2=18420020                          18420025
         SLL       R0,8            MAKE TTR0                            18440020
         ST        R0,SIWORK                                            18460020
         POINT     (1),SIWORK                                           18480020
         REF       R1                                                   18500020
         OI        UCTSW,M2        TURN ON POINT BEFORE WRITE SW        18520020
*        DO THE READ                                                    18540020
         L         R2,UCTDCB       POINT AT THE DCB                     18560020
         LA        R3,RCPDATA      POINT AT DATA ADDRESS                18580020
         L         R4,SILRECL      LOAD MAX RECORD LENGTH               18600027
         READ      UCTIDECB,SF,(R2),(R3),(R4),MF=E                      18620020
*        FIX UP MISC POINTERS AND THINGS                                18640020
         ST        R7,UCTSPLI      SET SPILLIN POINTER                  18660020
         ST        R4,UCTIRL       STORE RECORD LENGTH                  18680020
         ST        R7,RCPPT        SET RCP POINTER                      18700020
         MVC       RCPNOTE(3),RCLNOTE MOVE NOTE INFO TO RCP             18720020
         IC        R0,RCLFLAG      SAVE FLAG                            18740020
         ST        R5,RCLPT        SET RCL POINTER                      18760020
         N         R0,=A(N7)       TURN ON IN CORE SWITCH               18780020
         STC       R0,RCLFLAG      RESTORE FLAG                         18800020
         SNAPOUT   'SPILLIN EXIT','ADDRESS=',(R5)                       18820020
         B         BUFFEXIT        RETURN                               18840020
         DROPR     R5,R7,R9                                             18860020
SIWORK   DC        F'0'                                                 18880027
SILRECL  DC        F'0'                                                 18890027
         TITLE     'WRITE'                                              18900020
*        WRITE ROUTINE                                                  18920020
*                                                                       18940020
*        PARAMETER LIST                                                 18960020
*        DC        A(8)                                                 18980020
*        DC        A(UTILITY NUMBER)                                    19000020
*        DC        A(ADDRESS OF DATA)                                   19020020
*        DC        A(LENGTH OF DATA)                                    19040020
*                                                                       19060020
*        THE WRITE ROUTINE ONLY STORES THE ADDRESS AND LENGTH OF THE   X19080020
                   DATA                                                 19100020
*        THE DATA IS MOVED BY THE CHECK ROUTINE WHEN THE CHECK IS DONE  19120020
*                                                                       19140020
         USING     UCT,R9                                               19160020
WRITE    LM        R1,R2,XR10+8    LOAD ADDRESS AND LENGTH              19180027
         SNAPOUT   'WRITE','UTILITY=',XR10+4,'ADDRESS=',(R1),          X19200020
                   'LENGTH=',(R2)                                       19220020
         SNAPDATA  ADDR=(R1),LENGTH=(R2)                                19230026
         LA        R10,XR10+12     POINT AT LAST PARAMETER              19240020
         ACCUM     UCTWRCNT        INCREMENT COUNTER                    19260020
         STM       R1,R2,UCTWRADD  STORE ADDRESS AND LENGTH             19280020
         REF       UCTWRLTH                                             19300020
         B         BUFFEXIT        RETURN                               19320020
         DROPR     R9                                                   19340020
         TITLE     'CHECK'                                              19360020
*        CHECK ROUTINE                                                  19380020
*                                                                       19400020
*        PARAMETER LIST IF CHECKING A WRITE                             19420020
*        DC        A(28)                                                19440020
*        DC        A(UTILITY NUMBER)                                    19460020
*        IF CHECKING A READ ADD ONE MORE PARAMETER                      19480020
*        DS        F   FILLED WITH RECORD LENGTH OF READ BY CHECK ROUTN 19500020
*                                                                       19520020
*        IF FILE BEING READ THE CHECK ROUTINE SIMPLY SETS RECORD       X19540020
                   LENGTH IN PARAMETER LIST AND RETURNS                 19560020
*        IF FILE BEING WRITTEN THE NECESSARY BUFFER SPACE IS OBTAINED  X19580020
                   AND THE DATA MOVED FROM THE USERS AREA               19600020
*                                                                       19620020
         USING     UCT,R9                                               19640020
CHECK    SNAPOUT   'CHECK','UTILITY=',XR10+4                            19660020
         CLI       UCTSW,M0        CHECK MODE OF FILE                   19680020
         BL        CKW             BRANCH IF WRITE                      19700020
         L         R0,UCTRRL       LOAD RECORD LENGTH                   19720020
         ST        R0,XR10+8       GIVE TO USER                         19740020
         LA        R10,XR10+8      POINT AT LAST PARAMETER              19760020
         B         BUFFEXIT        RETURN                               19780020
*        CHECK FOLLOWS WRITE                                            19800020
CKW      LA        R10,XR10+4      POINT AT LAST PARAMETER              19820020
         L         R7,UCTWRLTH     GET DATA LENGTH                      19840020
         ALIGN     R7,D,INC=16     ADD 16 FOR RCP AND DBL ALIGN         19860020
         BAL       R8,GETCORE      GET SOME MEMORY MAN                  19880020
         USING     RCP,R5          LIKE R5 IS THE SWINGING ADDRESS      19900020
         L         R4,UCTRNEXT     POINT AT RCL                         19920020
         USING     RCL,R4                                               19940020
         ST        R5,RCLPT        POINT RCL AT RCP AND SET SWITCHES    19960020
         L         R7,UCTWRLTH     LENGTH OF RECORD                     19980020
         STH       R7,RCPRL        STORE IN RCP                         20000020
         ST        R4,RCPPT        POINT RCP AT RCL                     20020020
         LA        R6,RCPDATA      SET TO ADDRESS                       20040020
         L         R5,UCTWRADD     SET FROM ADDRESS                     20060020
         DROPR     R5                                                   20080020
         BAL       R8,MOVE         DO MOVE                              20100020
CKW1     LM        R0,R1,RCLINC    LOAD RLCINC AND RCLEND               20120027
         REF       RCLEND                                               20140020
         BXLE      R4,R0,RCLGROW   MOVE POINTER DOWN ONE ENTRY          20160020
         DROPR     R4                                                   20180020
         ST        R4,UCTRNEXT     SET POINTER TO NEXT RCL              20200020
         ST        R4,UCTRLAST         SET LAST RECORD + 1 POINTER      20220020
         B         BUFFEXIT        RETURN                               20240020
         TITLE     'RCLGROW'                                            20260020
*        RCLGROW CODE (PART OF CHECK ROUTINE)                           20280020
*                                                                       20300020
*        A GETCORE IS DONE TO ASSURE THAT ENOUGH FREE AREA EXISTS       20320021
*        THE GOTTEN CORE IS THEN FREEED AND A SQUISH DONE TO MOVE IT   X20340021
                   TO THE BOTTOM OF MEMORY                              20350021
*        ALL OF MEMORY IS THEN SHIFTED DOWN AND THE RCL EXTENDED DOWN   20360021
*                                                                       20380020
RCLGROW  SNAPOUT   'RCLGROW'                                            20400020
*        DO A GETCORE FOR 256 + 16                                      20420021
         LA        R7,256+16                                            20440021
         BAL       R8,GETCORE                                           20460021
         USING     CML,R5                                               20480021
*        DO THE FREECORE                                                20500021
         L         R4,CMLPTUP                                           20520021
         L         R2,CMLPTDWN                                          20540021
         DROPR     R5                                                   20560021
         LR        R3,R5                                                20580021
         BAL       R8,FREECORE                                          20600021
*        DO THE SQUISH                                                  20620021
         BAL       R8,SQUISH                                            20640021
*        MOVE EVERYTHING DOWN                                           20660021
         LA        R1,CORELIST         R1 -> CORELIST                   20680021
         USING     CML,R1                                               20700021
         L         R5,CMLPTDWN         R5 -> RCL CML ENTRY              20720021
         LA        R5,XR5              ZERO TOP BYTE                    20740021
         L         R2,CMLPTUP          R2 -> FREE CML ENTRY             20760021
         DROPRUSE  R1,CML,R2                                            20780021
         L         R6,CMLPTUP          BOTTOM BYTE TO BE MOVED          20800021
         LA        R4,256              DISTANCE TO MOVE MEMORY          20820021
         LR        R7,R6               TO ADDRESS = BOTTOM - DISTANCE   20840021
         SR        R7,R4                                                20860021
RC2      MVC       XR7(256),XR6        MOVE 256 BYTES                   20880021
         AR        R7,R4               INC TO ADDRESS                   20890021
         BXLE      R6,R4,RC2           INC FROM ADDRESS AND LOOP        20900021
*        SET RCL END POINTER                                            20920021
         SR        R5,R4               NEW RCL CML ENTRY                20940021
         LA        R6,XR5+8            + 8 = NEW RCLEND                 20960021
         ST        R6,RCLEND                                            20980021
*        RELOCATE THE POINTER IN CORELIST                               21000021
         DROPRUSE  R2,CML,R1           POINT AT CORELIST                21020021
         ST        R5,CMLPTDWN         POINT IT AT TOP CML ENTRY        21040021
         MVI       CMLFLAG,N           RESET CORELIST FLAG              21060021
*        RELOCATE ALL THE REST OF THE CML AND RCL POINTERS              21080021
         DROPRUSE  R1,CML,R5           POINT AT NEW TOP CML ENTRY       21100021
RC0      L         R6,CMLPTDWN         GO DOWN ONE ENTRY                21120021
         LA        R6,XR6              ZERO TOP BYTE                    21130021
         CRBE      R6,R2,RC1           ARE WE AT FREE ENTRY             21140021
         SR        R6,R4               GO DOWN TO NEW LOCATION          21150021
         DROPRUSE  R5,CML,R6           FIX THIS UP POINTER              21160021
         ST        R5,CMLPTUP                                           21170021
         USING     RCP,R6              FIX RCL POINTER                  21180021
         L         R1,RCPPT            POINT AT RCL                     21190021
         USING     RCL,R1                                               21195021
         IC        R0,RCLFLAG          SAVE FLAG                        21200021
         ST        R6,RCLPT            SET RCLPT                        21210021
         STC       R0,RCLFLAG          RESET FLAG                       21220021
         DROPRUSE  R6,CML,R5           FIX ABOVE DOWN POINTER           21230021
         IC        R0,CMLFLAG          SAVE FLAG                        21240021
         ST        R6,CMLPTDWN         SET DOWN POINTER                 21250021
         STC       R0,CMLFLAG          RESET FLAG                       21260021
         LR        R5,R6               MAKE PRESENT ENTRY ABOVE ENTRY   21270021
         B         RC0                 LOOP DOWN ONE ENTRY              21280021
*        FIX BOTTOM UP POINTER                                          21290021
         DROPRUSE  R5,CML,R6                                            21300021
RC1      ST        R5,CMLPTUP          SET UP POINTER                   21310021
*        RESET R4 TO UCTRNEXT AND RETURN                                21320021
         L         R4,UCTRNEXT                                          21330021
         LINKCHK                                                        21340021
         B         CKW1            RETURN                               21350021
         DROPR     R1,R6,R9                                             21360021
         TITLE     'NOTE'                                               21380020
*        NOTE ROUTINE                                                   21400020
*                                                                       21420020
*        PARAMETER LIST                                                 21440020
*        DC        A(20)                                                21460020
*        DC        A(UTILITY NUMBER)                                    21480020
*        DS        F   NOTE INFORMATION IS RETURNED IN TOP 3 BYTES,    X21500020
                         BOTTOM BYTE SET TO 0                           21520020
*                                                                       21540020
*        THE NOTE INFORMATION IS THE RELATIVE POSITION OF THE RCL      X21560020
                   NEXT RECORD POINTER                                  21580020
*        THIS INFORMATION MUST NOT BE ALTERED IF TO BE USED IN POINTR  X21600020
                   OR POINTW                                            21620020
*                                                                       21640020
         USING     UCT,R9                                               21660020
NOTE     SNAPOUT   'NOTE','UTILITY=',XR10+4                             21680020
         ACCUM     UCTNTCNT                                             21700020
         L         R1,UCTRCLN1     TOP OF RCL                           21720020
         S         R1,UCTRNEXT     RELATIVE POSITION                    21740020
*        THUS A NOTE OF AN EMPTY FILE RETURNS 0                         21760020
         SLL       R1,8            PLACE IN TOP 3 BYTES                 21780020
         ST        R1,XR10+8       GIVE TO USER                         21800020
         LA        R10,XR10+8      POINT AT LAST PARAMETER              21820020
         SNAPOUT   'NOTE EXIT','NOTE=',(R1)                             21830021
         B         BUFFEXIT        RETURN                               21840020
         DROPR     R9                                                   21860020
         TITLE     'POINTR'                                             21880020
*        POINTR ROUTINE                                                 21900020
*                                                                       21920020
*        PARAMETER LIST                                                 21940020
*        DC        A(12)                                                21960020
*        DC        A(UTILITY NUMBER)                                    21980020
*        DC        AL3(NOTE INFORMATION)                                22000020
*        DC        AL1(0)   IF POINTING TO NOTED RECORD                 22020020
*                           OR                                          22040020
*                  AL1(1)   IF POINTING 1 RECORD PAST NOTED RECORD      22060020
*                                                                       22080020
*        THE NOTE INFORMATION MUST BE THE UNALTERED DATA RETURNED      X22100020
                   BY THE NOTE ROUTINE                                  22120020
*        TO POINT AT THE 1ST RECORD THE NOTE INFORMATION IS 0 AND THE  X22140020
                   LOW ORDER BYTE IS 1                                  22160020
*        THE FILE MODE IS SET TO READ                                   22180020
*                                                                       22200020
         USING     UCT,R9                                               22220020
POINTR   L         R1,XR10+8       PICK UP NOTE INFO                    22240020
         SNAPOUT   'POINTR','UTILITY=',XR10+4,'NOTE=',(R1)              22260020
         ACCUM     UCTPRCNT                                             22280020
*        SET NEXT RECORD POINTER                                        22300020
         SRL       R1,8            RESTORE NUMBER TO RELATIVE ADDRESS   22320020
         L         R7,UCTRCLN1     TOP OF RCL                           22340020
         SR        R7,R1           POINT TO ONE RECORD BEYOND NOTED REC 22360020
         CLI       XR10+11,M7      SEE IF LOW BYTE SET TO 1             22380020
         BE        PR1             BRANCH IF POINT TO NEXT RECORD       22400020
         S         R7,RCLINC       GO BACK ONE ENTRY                    22420020
         USING     RCL,R7                                               22440020
PR1      DC        0H'0'                                                22460025
         AIF       (&NOTBUG).PROK                                       22463021
         CBNL      R7,UCTRLAST,PROK                                     22466021
         SNAPOUT   'POINTR BEYOND EOF'                                  22469021
         ABEND     20,DUMP                                              22472021
PROK     DS        0H                                                   22475021
.PROK    ANOP                                                           22478021
*        IF SWITCHING FROM WRITE TO READ MUST INITIALIZE SPILLOUT FIELD 22480020
         CLI       UCTSW,M0        TEST MODE OF FILE                    22500020
         BNL       PR2             BRANCH IF READ                       22520020
         OI        UCTSW,M01       TURN ON READ MODE AND SPILLOUTABLE   22540020
         SR        R0,R0           SET UCTFLAG TO ZERO                  22560020
         ST        R0,UCTFLAG                                           22580020
         CBL       R7,UCTNEXTO,PR2 IS SPILLOUT POINTER ABOVE OR BELOW  X22600020
                                   READ POINT                           22620020
         L         R0,UCTRLAST     BELOW. FORCE SPILLOUT TO END OF FILE 22640020
         S         R0,RCLINC                                            22660020
         ST        R0,UCTNEXTO                                          22680020
*        SEE IF NEXT RECORD IN CORE BY GOING TO SPILLIN ROUTINE         22700025
PR2      LA        R10,XR10+8      POINT AT LAST PARAMETER              22720020
         B         SPILLIN                                              22740025
         DROPR     R7,R9                                                22760020
         TITLE     'POINTW'                                             22780020
*        POINTW ROUTINE                                                 22800020
*                                                                       22820020
*        PARAMETER LIST SAME AS FOR POINTR EXCEPT 1ST IS                22840020
*        DC        A(16)                                                22860020
*                                                                       22880020
*        SEE COMMENTS ON POINTR                                         22900020
*        SWITCHES MODE TO WRITE                                         22920020
*                                                                       22940020
         USING     UCT,R9                                               22960020
POINTW   L         R1,XR10+8       PICK UP NOTE INFO                    22980020
         SNAPOUT   'POINTW','UTILITY=',XR10+4,'NOTE=',(R1)              23000020
         ACCUM     UCTPWCNT        ADD TO ACCUMULATOR                   23020020
*        SET NEXT RECORD POINTER                                        23040020
         SRL       R1,8            RESTORE NUMBER TO RELATIVE ADDRESS   23060020
         L         R6,UCTRCLN1     TOP OF RCL                           23080020
         SR        R6,R1           POINT ONE RECORD BEYOND NOTED RECORD 23100020
         CLI       XR10+11,M7      SEE IF LOW BYTE SET TO 1             23120020
         BE        PW1             BRANCH IF POINT TO NEXT RECORD       23140020
         S         R6,RCLINC       GO BACK ONE ENTRY                    23160020
         USING     RCL,R6                                               23180020
PW1      ST        R6,UCTRNEXT     SET NEXT RECORD POINTER              23200020
*        CHECK ALL SPILLS BELOW POINT                                   23220020
         LTBZ      R7,UCTSPLI,PW2  TEST SPILLIN IN PROGRESS             23240020
         CRBH      R7,R6,PW2       IS IT BELOW NEW POINT                23260020
         BAL       R8,CHECKIN                                           23280020
PW2      LTBZ      R7,UCTSPLO,PW3  TEST SPILLOUT IN PROGRESS            23300020
         CRBH      R7,R6,PW3       IS IT BELOW NEW POINT                23320020
         BAL       R8,CHECKOUT                                          23340020
*        FREE ALL BUFFERS BELOW NEW POINT                               23360020
PW3      L         R14,RCLINC      LOAD BXH OPERANDS                    23380020
         L         R15,UCTRLAST                                         23400020
         ST        R6,UCTRLAST     SET LAST+1 = THIS POINT              23420020
         CRBE      R15,R6,PW6      TEST FOR ALREADY AT END OF FILE      23440020
PW4      TMBNZ     RCLFLAG,M7,PW5  TEST IF RECORD IN CORE               23460020
         L         R3,RCLPT        LOAD FREECORE POINTERS               23480020
         USING     CML,R3                                               23500020
         L         R2,CMLPTDWN                                          23520020
         L         R4,CMLPTUP                                           23540020
         BAL       R8,FREECORE     FREE RECORD                          23560020
PW5      BXH       R6,R14,PW4      GO DOWN TILL END OF FILE             23580020
*        SET A COUPLE OF THINGS                                         23600020
PW6      NI        UCTSW,N01       SET WRITE MODE                       23620020
         L         R0,UCTRCLN1     SET SPILLOUT POINTER                 23640020
         ST        R0,UCTNEXTO                                          23660020
         LA        R10,XR10+8      POINT AT LAST PARAMETER              23680020
         CBNE      R0,UCTRNEXT,BUFFEXIT TEST FOR POINTW 1               23683021
         SR        R0,R0           CREATE 0                             23686021
         ST        R0,UCTMAXRL     RESET MAX RECORD LENGTH              23689021
         ST        R0,UCTONOTE     RESET SPILLOUT NOTE ADDRESS          23692021
         OI        UCTSW,M2        CAUSE A POINT BEFORE 1ST SPILLOUT    23695021
         MVI       UCTTRBAL,X'FF'      SHOW TRACK BALANCE INVALID       23697025
         B         BUFFEXIT        RETURN                               23700020
         DROPR     R3,R6,R9                                             23720020
*./      DELETE    SEQ1=23740020,SEQ2=24400020                          24400026
         TITLE     'CONSTANT AND DATA AREA'                             24420020
*********************************************************************** 24440020
*        CONSTANT AND DATA AREA                                         24460020
*                                                                       24480020
*        USER SAVE AREA                                                 24500020
*                                                                       24520020
SAVE1    DC        14F'0'          USER REGISTER SAVE                   24540027
FSAVE    DC        D'0'            FR0 SAVE                             24560027
*                                                                       24580020
*         BASE VALUES                                                   24600020
*                                                                       24620020
ADCON1   DC        A(SAVE2+4096,BUFFENT,SAVE2)                          24640020
*                                                                       24660020
*        O.S. SAVE AREA                                                 24680020
*                                                                       24700020
SAVE2    DC        18F'0'                                               24720027
*                                                                       24740020
*        ROUTINE BRANCH TABLE USED BY ENTRY ROUTINE                     24760020
*                                                                       24780020
BRTAB1   DC        AL2(READK-BUFFENT,UREAD-BUFFENT)          0          24800022
         DC        AL2(READP-BUFFENT,UREAD-BUFFENT)          4          24805022
         DC        AL2(WRITE-BUFFENT,UWRITE-BUFFENT)         8          24810022
         DC        AL2(POINTR-BUFFENT,UPOINTR-BUFFENT)      12          24815022
         DC        AL2(POINTW-BUFFENT,UPOINTW-BUFFENT)      16          24820022
         DC        AL2(NOTE-BUFFENT,UNOTE-BUFFENT)          20          24825022
         DC        AL2(TCLOSE-BUFFENT,UTCLOSE-BUFFENT)      24          24830022
         DC        AL2(CHECK-BUFFENT,UCHECK-BUFFENT)        28          24835022
         DC        AL2(GROW-BUFFENT,0)                      32          24840022
         DC        AL2(SHRINK-BUFFENT,0)                    36          24850022
         DC        AL2(INIT-BUFFENT,0)                      40          24860022
*                                                                       24880020
*        MISC CONTROL WORDS                                             24900020
*                                                                       24920020
TOPCORE  DC        F'0'            POINTS AT TOP OF MY CORE             24940027
RCLINC   DC        F'0'            - 4 * NUMBER OF BUFFERED UTILITIES   24960027
RCLEND   DC        F'0'            POINTS AT BOTTOM OF RCL              24980027
NUMBUFUT DC        F'0'            NUMBER OF BUFFERED UTILITIES         25000027
MAXBLOCK DC        F'0'            MAX BLOCKSIZE POSSIBLE IN MEMORY     25020021
*                                                                       25040020
*        POINTERS TO ENDS OF CORE MANAGEMENT LISTS                      25060020
*                                                                       25080020
*        THE FOLLOWING TABLE MUST BE SAME FORMAT AS FCP                 25100020
CORELIST DC        X'FF'           CML END OF LIST FLAG                 25120020
         DC        AL3(CORELIST)   POINTS TO RCL CML ENTRY              25140021
         DC        A(CORELIST)     POINTS TO BOTTOM CML ENTRY           25160021
         DC        A(CORELIST)     POINTS TO TOP FREE CORE CML ENTRY    25180021
         DC        A(CORELIST)     POINTS TO BOTTOM FREE CORE CML ENTRY 25200021
*                                                                       25220020
*        UCT ADDRESS TABLE                                              25240020
*                                                                       25260020
*        THIS TABLE CONTAINS ONE FULL WORD FOR EACH UTILITY             25280020
*        IT CONTAINS THE ADDRESS OF THE UCT OR UUCT FOR THAT UTILITY    25300020
*        1ST BIT IN WORD IS TURNED ON IF UNBUFFERED UTILITY             25320020
UCTADDR  DS        0F                                                   25340020
&WORK    SETA      0                                                    25360021
.UTAB    DC        A(UCT+UCTLNGTH*(&WORK+&SERUSE))                      25380021
&WORK    SETA      &WORK+1                                              25400020
         AIF       (&WORK LT &MAXUT).UTAB                               25420021
*                                                                       25440020
*        RUN OUT CORE ERROR EXIT                                        25460020
*                                                                       25480020
NOGOEXIT DC        F'0'            ADDRESS OF EXTERNAL ERROR ROUTINE    25500027
*                                                                       25503023
         AIF       (&NOTSTAT).NOUNCNT                                   25506023
*        UNIVERSAL COUNTERS                                             25509023
UNSQCNT  DC        PL5'0'              SQUISH COUNTER                   25512023
UNMOCNT  DC        PL5'0'              MOVE COUNTER                     25515023
.NOUNCNT ANOP                                                           25518023
         TITLE     'TCLOSE'                                             25520026
*        TCLOSE ROUTINE                                                 25520526
*                                                                       25521026
*        PARAMETER LIST                                                 25521526
*        DC        A(24)                                                25522026
*        DC        A(UTILITY NUMBER)                                    25522526
*        DC        A(1)                                                 25523026
*                                                                       25523526
*        IF FILE IN WRITE MODE A POINTR 1 IS DONE                       25524026
*        ELSE A POINTW 1 IS DONE                                        25524526
*                                                                       25525026
         USING     UCT,R9                                               25525526
TCLOSE    SNAPOUT  'TCLOSE'                                             25526026
          SNAPOUT  ' UTILITY=',XR10+4,'  POINTR=',UCTPRCNT,            X25526526
                   '  POINTW=',UCTPWCNT,'   NOTES=',UCTNTCNT,TYPE=STAT  25527026
         SNAPOUT   '   READS=',UCTRDCNT,'  WRITES=',UCTWRCNT,          X25527526
                   ' SPILLIN=',UCTSICNT,'SPILLOUT=',UCTSOCNT,TYPE=STAT  25528026
         AIF       (&NOTSTAT).NOS1                                      25528526
         CLI       XR10+7,8            TEST FOR UT3                     25529026
         BNE       TCNOTUT3                                             25529526
         SNAPOUT   'SQUISHES=',UNSQCNT,'   MOVES=',UNMOCNT,TYPE=STAT    25530026
         MVC       UNSQCNT(5),=PL5'0'                                   25530526
         MVC       UNMOCNT(5),=PL5'0'                                   25531026
TCNOTUT3 DC        0H'0'                                                25531526
         MVC       UCTRDCNT(5),=PL5'0'                                  25532026
         MVC       UCTWRCNT(5),=PL5'0'                                  25532526
         MVC       UCTSICNT(5),=PL5'0'                                  25533026
         MVC       UCTSOCNT(5),=PL5'0'                                  25533526
         MVC       UCTPRCNT(5),=PL5'0'                                  25534026
         MVC       UCTPWCNT(5),=PL5'0'                                  25534526
         MVC       UCTNTCNT(5),=PL5'0'                                  25535026
.NOS1    ANOP                                                           25535526
         CLI       UCTSW,M0        IS FILE IN READ MODE                 25536026
         BL        POINTR          DO POINTR 1 IF NOT                   25536526
         B         POINTW          DO POINTW 1                          25537026
         DROPR     R9                                                   25537526
         TITLE     'UREAD'                                              25539026
*********************************************************************** 25540020
*        USER CALLABLE UNBUFFERED I/O ROUTINES                          25560020
*        FOR PARAMETER LISTS SEE CORRESPONDING BUFFERED ROUTINE         25580020
*                                                                       25600020
*        UREAD ROUTINE                                                  25620020
*                                                                       25640020
         USING     UUCT,R9                                              25660020
UREAD    L         R6,XR10+8       LOAD DATA ADDRESS                    25680020
         SNAPOUT   'UREAD','UTILITY=',XR10+4,'ADDRESS=',(R6)            25700020
         ACCUM     UUCTRDNO                                             25720020
         LA        R10,XR10+8      POINT AT LAST PARAMETER              25740020
         L         R2,UUCTDCB      POINT AT DCB                         25760020
         L         R3,UUCTMAXR     LOAD MAX RECORD LENGTH               25780020
         READ      UUCTRDEB,SF,(R2),(R6),(R3),MF=E                      25800020
         B         BUFFEXIT        RETURN                               25820020
         DROPR     R9                                                   25840020
         TITLE     'UWRITE'                                             25860020
*        UWRITE ROUTINE                                                 25880020
*                                                                       25900020
         USING     UUCT,R9                                              25920020
UWRITE   LM        R2,R3,XR10+8    LOAD DATA ADDRESS AND LENGTH         25940027
         SNAPOUT   'UWRITE','UTILITY=',XR10+4,'ADDRESS=',(R2),         X25960020
                   'LENGTH=',(R3)                                       25980020
         SNAPDATA  ADDR=(R2),LENGTH=(R3)                                25990026
         ACCUM     UUCTWRNO                                             26000020
         LA        R10,XR10+12     POINT AT LAST PARAMETER              26020020
         L         R4,UUCTDCB      POINT AT DCB                         26040020
         WRITE     UUCTWDEB,SF,(R4),(R2),(R3),MF=E                      26060020
         CBNH      R3,UUCTMAXR,BUFFEXIT TEST FOR NEW MAX RECORD         26080020
         ST        R3,UUCTMAXR     SET NEW MAX RECORD LENGTH            26100020
         B         BUFFEXIT        RETURN                               26120020
         DROPR     R9                                                   26140020
         AIF       (&NOTBUG).NOSNPDT                                    26140126
         TITLE     'SNAPDATA'                                           26140226
*                                                                       26140326
*        INPUT:  R8 ->  ADDRESS OF AREA TO BE OUTPUT                    26140426
*               R8+4->  LENGTH OF AREA TO BE OUTPUT                     26140526
*               R8+8->  RETURN ADDRESS                                  26140626
*                                                                       26140726
SNAPDATA DS        0H                                                   26140826
         STM       R13,R7,SNAPSAVE     SAVE SOME REGISTERS              26140926
         L         R3,XR8              START OF AREA TO BE DUMPED       26141026
         LR        R4,R3               TRANSFER FOR CALCULATION         26141126
         A         R4,XR8+4            ADD LENGTH                       26141226
         BCTR      R4,0                POINT TO LAST USED BYTE          26141326
         ST        R4,XR8+4            REMEMBER THAT INSTEAD            26141426
         MVI       SNAPAREA+86,C'*'    BEFORE AND                       26141526
         MVI       SNAPAREA+119,C'*'   AFTER CHARACTER EQUIV            26141626
SNAPLOOP DS        0H                                                   26141726
         C         R3,XR8+4            ARE WE DONE .Q                   26141826
         BH        SNAPDONE            BRANCH TO EXIT IF SO             26141926
         ST        R3,SNAPWORK         STORE ADDRESS                    26142026
         UNPK      SNAPAREA(7),SNAPWORK+1(4) MAKE IT PRINTABLE          26142126
         MVI       SNAPAREA+6,C' '     KNOCK OFF LAST DIGIT             26142226
         MVC       SNAPAREA+7(77),SNAPAREA+6  BLANK HEX DUMP AREA       26142326
         TR        SNAPAREA(6),SNAPHEX RENDER INTO ENGLISH              26142426
         MVC       SNAPAREA+87(32),XR3 PUT IN CHARACTERS                26142526
         TR        SNAPAREA+87(32),SNAPTRAN  TRANS INTO ANGLAIS         26142626
         LA        R2,SNAPAREA+9       POINT TO 1ST BUFFER POS'N        26142726
         LA        R6,2                2 TIMES THRU, 16 BYTES EACH      26142826
SNAPHALF DS        0H                                                   26142926
         LA        R7,4                4 WORDS PER HALF LINE            26143026
SNAPWORD DS        0H                                                   26143126
         C         R3,XR8+4            ARE WE DONE.Q                    26143226
         BH        SNAPOUT             GET OUT IF SO                    26143326
         L         R4,XR3              GET NEXT WORD FOR OUTPUT         26143426
         ST        R4,SNAPWORK         PUT IN UNPACK AREA               26143526
         UNPK      XR2(9),SNAPWORK(5)  UNPACK INTO BUFFER               26143626
         MVI       XR2+8,C' '          BLANK DUMMY DIGIT                26143726
         TR        XR2(8),SNAPHEX      MAKE IT PRINTABLE                26143826
         LA        R2,XR2+9            BUMP TO NEXT OUTPUT AREA         26143926
         LA        R3,XR3+4            POINT TO NEXT WORD               26144026
         BCT       R7,SNAPWORD         GO BACK UNLESS FINISHED HALF     26144126
         LA        R2,XR2+3            SKIP 3 PRINT POS'NS              26144226
         BCT       R6,SNAPHALF         GO BACK IF ONLY HALF DONE        26144326
SNAPOUT  DS        0H                                                   26144426
         STM       R13,R1,SNAP$4       SAVE REGS TO BE ZONKED           26144526
         LA        R13,SNAPAREA        POINT TO OUTPUT AREA             26144626
         LA        R14,119             LENGTH-1 TO OUTPUT               26144726
         BAL       R1,SNAP$0           GO PRINT IT                      26144826
         LM        R13,R1,SNAP$4       RESTORE ZONKED REGS              26144926
         B         SNAPLOOP            GO CHECK NEXT LINE               26145026
SNAPDONE DS        0H                                                   26145126
         LM        R13,R7,SNAPSAVE     RESTORE REGISTERS                26145226
         B         XR8+8               RETURN                           26145326
         EJECT                                                          26145426
*                                                                       26145526
*        WORK AND DATA AREA                                             26145626
*                                                                       26145726
SNAPWORK DC        D'0'                                                 26145827
SNAPSAVE DC        11F'0'              SAVE AREA FOR SNAPDATA           26145927
SNAPAREA DC        CL120' '            FORMAT DATA HERE                 26146026
SNAPHEX  EQU       *-240               START OF TRANSLATE DOESN'T HURT  26146126
SNAPTRAN DC        X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                  26146226
         DC        X'C7C8C9D1D2D3D4D5D6D7D8D9E2E3E4E5'                  26146326
         DC        X'E6E7E8E95B7B7C4E605C616B7E504B4D'                  26146426
         DC        X'5D7D404B4B4B4B4B4B4B4B4B4B4B4B4B'                  26146526
         DC        192XL1'4B'                                           26146626
*                                                                       26146726
.NOSNPDT ANOP                                                           26146826
         TITLE     'UCHECK'                                             26160020
*        UCHECK ROUTINE                                                 26180020
*                                                                       26200020
*        FOR CHECK AFTER WRITE SIMPLY DOES A CHECK                      26220020
*        IF AFTER A READ ALSO COMPUTES AND RETURNS RECORD LENGTH        26240020
         USING     UUCT,R9                                              26260020
UCHECK   SNAPOUT   'UCHECK','UTILITY=',XR10+4                           26280020
         CLI       UUCTSW,M0       TEST WHETHER READ OR WRITE           26300020
         BL        UCW             BRANCH FOR WRITE                     26320020
         CHECK     UUCTRDEB                                             26340020
         L         R1,UUCTRDEB+16  POINT AT STATUS STUFF                26360020
         L         R2,UUCTMAXR     PICK UP RECORD LENGTH USED IN READ   26380020
         SH        R2,XR1+14       CALCULATE ACTUAL RECORD LENGTH       26400020
         ST        R2,XR10+8       GIVE TO USER                         26420020
         LA        R10,XR10+8      POINT AT LAST PARAMETER              26440020
         B         BUFFEXIT        RETURN                               26460020
*        CHECK AFTER WRITE                                              26480020
UCW      CHECK     UUCTWDEB                                             26500020
         LA        R10,XR10+4      POINT AT LAST PARAMETER              26520020
         B         BUFFEXIT        RETURN                               26540020
         DROPR     R9                                                   26560020
         TITLE     'UNOTE'                                              26580020
*        UNOTE ROUTINE                                                  26600020
*                                                                       26620020
*        FOR D.A. DEVICES THE THREE BYTES RETURNED ARE TTR              26640020
*        FOR TAPE THE RECORD NUMBER IS RETURNED, AFTER SHIFTING IT     X26660020
                   INTO THE TOP 3 BYTES                                 26680020
*                                                                       26700020
         USING     UUCT,R9                                              26720020
UNOTE    SNAPOUT   'UNOTE','UTILITY=',XR10+4                            26740020
         ACCUM     UUCTNTNO                                             26760020
         L          R2,UUCTDCB     POINT AT DCB                         26780020
         USING     DCB,R2                                               26800020
         NOTE      (R2)                                                 26820020
         TMBNZ     DCBDEVT,M2,UN1  TEST FOR D.A. DEVICE                 26840020
         SLL       R1,8            LEFT SHIFT TAPE COUNT                26860020
UN1      ST        R1,XR10+8       GIVE NOTE TO USER                    26880020
         LA        R10,XR10+8      POINT AT LAST PARAMETER              26900020
         B         BUFFEXIT        RETURN                               26920020
         DROPR     R2,R9                                                26940020
         TITLE     'UPOINT'                                             26960020
*        UPOINT ROUTINE                                                 26980020
*                                                                       27000020
*        IF D.A. DEVICE SIMPLY DOES A POINT                             27020020
*        IF TAPE LOW BYTE IS ADDED TO TOP 3 BYTES SHIFTED RIGHT 1 BYTE X27040020
                   BEFORE DOING POINT                                   27060020
*                                                                       27080020
         USING     UUCT,R9                                              27100020
*        UNBUFFERED POINT TO READ                                       27120020
UPOINTR  MVI       UUCTSW,M0       TURN ON READ SWITCH                  27140020
         ACCUM     UUCTPRNO                                             27160020
         B         UP1                                                  27180020
*        UNBUFFERED POINT TO WRITE                                      27200020
UPOINTW  MVI       UUCTSW,M        TURN OFF READ SWITCH                 27220020
         ACCUM     UUCTPWNO                                             27240020
UP1      L         R2,XR10+8       PICK UP NOTE INFO                    27260020
         SNAPOUT   'UPOINT','UTILITY=',XR10+4,'NOTE=',(R2)              27280020
         L         R1,UUCTDCB      POINT AT DCB                         27300020
         USING     DCB,R1                                               27320020
         TMBNZ     DCBDEVT,M2,UP2  TEST FOR D.A. DEVICE                 27340020
         SRL       R2,8            SHIFT TAPE COUNT RIGHT               27360020
         CLI       XR10+11,M7      SEE IF 1 SHOULD BE ADDED             27380020
         BNE       UP2             BRANCH IF NOT                        27400020
         LA        R2,XR2+1        ADD 1 CAUSE LOW BYTE WAS 1           27420020
UP2      ST        R2,UPWORK       PLACE IT IN MEMORY                   27440020
         LA        R0,UPWORK       SET POINTER TO IT                    27460020
         POINT     (1),(0)         DO POINT                             27480020
         REF       R1,R0                                                27500020
         LA        R10,XR10+8      POINT AT LAST PARAMETER              27520020
         B         BUFFEXIT        RETURN                               27540020
         DROPR     R1,R9                                                27560020
UPWORK   DC        F'0'                                                 27580027
         TITLE     'UTCLOSE'                                            27600020
*        UTCLOSE ROUTINE                                                27620020
*                                                                       27640020
*        THE FILE MODE IS SWITCHED AND A TCLOSE DONE                    27660020
*                                                                       27680020
         USING     UUCT,R9                                              27700020
UTCLOSE  SNAPOUT   'UTCLOSE'                                            27720020
         SNAPOUT   ' UTILITY=',XR10+4,'  POINTR=',UUCTPRNO,            X27740020
                   '  POINTW=',UUCTPWNO,'   NOTES=',UUCTNTNO,TYPE=STAT  27760020
         SNAPOUT   '   READS=',UUCTRDNO,'  WRITES=',UUCTWRNO,TYPE=STAT  27780020
         AIF       (&NOTSTAT).NOS2                                      27800020
         MVC       UUCTPRNO(5),=PL5'0'                                  27820020
         MVC       UUCTPWNO(5),=PL5'0'                                  27840020
         MVC       UUCTNTNO(5),=PL5'0'                                  27860020
         MVC       UUCTRDNO(5),=PL5'0'                                  27880020
         MVC       UUCTWRNO(5),=PL5'0'                                  27900020
.NOS2    ANOP                                                           27920020
         XI        UUCTSW,M0       FLIP MODE SWITCH                     27940020
         L         R2,UUCTDCB      POINT AT DCB                         27960020
         CLOSE     ((R2),REREAD),TYPE=T                                 27980020
         LA        R10,XR10+8      POINT AT LAST PARAMETER              28000020
         B         BUFFEXIT        RETURN                               28020020
         DROPR     R9                                                   28040020
         TITLE     'GETCORE'                                            28060020
*********************************************************************** 28080020
*        SUBROUTINES CALLED BY ROUTINES AND OTHER SUBROUTINES           28100020
*                                                                       28120020
*        GETCORE SUBROUTINE                                             28140020
*                                                                       28160020
*        R7 IS AMOUNT (MULTIPLE OF 8)                                   28180020
*        R8 IS RETURN                                                   28200020
*        R5 WILL CONTAIN ADDRESS OF CML OF AVAILABLE CORE               28220020
*        CLOBBERS R0,R1,R2,R3,R4,R5,R6,R14,R15                          28240020
*                                                                       28260020
*        CML WILL BE SET UP FOR USER                                    28280020
*        IF NO CORE IS AVAILABLE NOGOEXIT IS TAKEN UNLESS SHRINKSW     X28300020
                   IS ON IN WHICH CASE RETURN IS MADE WITH R5 = -1      28320020
*                                                                       28340020
*        UP MAX BLOCKSIZE IF NECESSARY                                  28360020
GETCORE  CBNH      R7,MAXBLOCK,GC0 IS THIS REQUEST BIGGEST YET          28380020
         ST        R7,MAXBLOCK     NEW MAX                              28400020
*        FIND ENOUGH FREE CORE FOR USER                                 28420020
*        INITIALIZE SEARCH                                              28440020
GC0      SNAPOUT   'GETCORE','AMOUNT=',(R7)                             28460020
         LINKCHK                                                        28470021
         MVI       GCRESW,M            INITIALIZE SWITCH                28480021
GC00     SR        R0,R0           INITIALIZE ACCUMULATOR               28490021
         LA        R1,CORELIST     START SCAN OF FCPS                   28500020
         USING     FCP,R1                                               28520020
GC1      L         R1,FCPPTDWN     POINT AT NEXT ENTRY                  28540020
         USING     CML,R1                                               28560020
         CLI       CMLFLAG,M0      TEST TYPE OF ENTRY                   28580020
         BH        GC2             BRANCH IF END OF LIST                28600020
         L         R2,CMLPTUP          CALCULATE LENGTH OF ENTRY        28620020
         SR        R2,R1                                                28640020
         AR        R0,R2               ADD TO ACCUMULATOR               28660020
         CRBL      R2,R7,GC1       SEE IF BIG ENOUGH FOR USER           28680020
         SR        R0,R7           REMOVE USER SPACE FROM ACCUMULATOR   28700020
         CBNL      R0,MAXBLOCK,GC5 TEST IF ENOUGH FREE CORE IN RESERVE  28720020
*        SEE IF ENOUGH FREE CORE TO SATISFY RESERVE REQUIREMENT         28740021
*        THERE SHOULD USUALLY BE MAXBLOCK CORES AVAILABLE IN RESERVE    28750021
*        THE PURPOSE OF THE RESERVE IS TO FORCE SPILLOUTS WHEN THE     X28760021
                    BUFFER SPACE BECOMES NEARLY FULL                    28770021
         LR        R2,R1           LEAVE R1 POINTING AT GOOD ENTRY      28780020
         DROPRUSE  R1,FCP,R2                                            28800020
GC3      L         R2,FCPPTDWN     GO DOWN ONE ENTRY                    28820020
         USING     CML,R2                                               28840020
         CLI       CMLFLAG,M0      TEST TYPE OF ENTRY                   28860020
         BH        GC4             BRANCH IF END OF LIST                28880020
         SR        R0,R2           ADD LENGTH OF ENTRY                  28900020
         A         R0,CMLPTUP       TO ACCUMULATOR                      28920020
         CBL       R0,MAXBLOCK,GC3 TEST IF ENOUGH FOUND                 28940020
*        ENOUGH CORE FOUND                                              28960020
*        CREATE CML ENTRY FOR USER                                      28980020
         DROPRUSE  R2,CML,R1                                            29000020
GC5      L         R3,CMLPTUP      CALCULATE LENGTH OF ENTRY            29020020
         SR        R3,R1                                                29040020
         SR        R3,R7           SEE IF MORE CORE THAN NEEDED IN CML  29060020
         CBL       R3,=F'16',GC6   IF ONLY 16 EXTRA CANNOT MAKE FCP     29080020
*        MUST RETAIN PRESENT FCP AND CREATE NEW CML                     29100020
         L         R2,CMLPTUP      POINT AT UPPER ENTRY                 29120020
         LR        R5,R2           CALCULATE ADDRESS OF NEW CML         29140020
         SR        R5,R7           POINT AT NEW CML                     29160020
         ST        R5,CMLPTUP      ALTER UP POINTER IN LOWER CML        29180020
         DROPRUSE  R1,CML,R5                                            29200020
         ST        R1,CMLPTDWN     SET DOWN POINTER IN NEW CML          29220020
         ST        R2,CMLPTUP      SET UP POINTER IN NEW CML            29240020
         DROPRUSE  R5,CML,R2                                            29260020
         IC        R0,CMLFLAG      SAVE FLAG                            29280020
         ST        R5,CMLPTDWN     ALTER DOWN POINTER IN UPPER CML      29300020
         STC       R0,CMLFLAG      RESTORE FLAG                         29320020
         SNAPOUT   'GETCORE EXIT1','ADDRESS=',(R5)                      29340020
         LINKCHK                                                        29350021
         BR        R8              RETURN                               29360020
*        FREE CORE ENTRY LESS THAN 16 BYTES LARGER THAN USER REQUEST    29380020
*        CHANGE FREE CORE ENTRY TO I/O ENTRY                            29400020
         DROPRUSE  R2,FCP,R1       REMOVE FCP                           29420020
GC6      L         R2,FCPPTUP      POINT AT UPPER FCP                   29440020
         L         R3,FCPPTDWN     POINT AT LOWER FCP                   29460020
         USING     CML,R1                                               29480021
         MVI       CMLFLAG,M       SHOW I/O ENTRY NOW                   29500020
         DROPRUSE  R1,FCP,R2       ALTER UPPER FCP                      29520020
         ST        R3,FCPPTDWN     SET DOWN POINTER                     29540020
         DROPRUSE  R2,FCP,R3       ALTER LOWER FCP                      29560020
         ST        R2,FCPPTUP      SET UP POINTER                       29580020
         LR        R5,R1           MOVE ANSWER                          29600020
         SNAPOUT   'GETCORE EXIT2','ADDRESS=',(R5)                      29620020
         LINKCHK                                                        29630021
         BR        R8              RETURN                               29640020
         DROPR     R3                                                   29660020
*        DECIDE WHETHER TO SQUISH OR SPILLOUT                           29680020
GC2      CRBL      R0,R7,GC20      MUST SPILLOUT IF NOT ENOUGH         X29700020
                   NONCONTIGUOUS CORE TO SATISFY USER                   29720020
         STM       R7,R8,GCSV      SAVE LENGTH AND RETURN ADDRESS       29740020
         BAL       R8,SQUISH       SQUISH MEMORY                        29760020
         LM        R7,R8,GCSV      RESTORE REGISTERS                    29780027
         B         GC00            TRY AGAIN                            29800020
*        IF SPILLOUTS ARE IN PROGRESS SEE IF THEIR CORE WILL MEET      X29820020
                   RESERVE REQUIREMENT                                  29840020
GC4      LTBZ      R4,NUMBUFUT,GC5 FORGET IT IF NOTHING TO SPILLOUT     29860021
         LA        R2,UCTADDR                                           29880020
GC11     L         R5,XR2          POINT AT UCT                         29900020
         USING     UCT,R5                                               29920020
         LTBZ      R5,UCTSPLO,GC10 TEST IF SPILLOUT IN PROGRESS         29940020
         USING     RCL,R5                                               29960020
         L         R5,RCLPT        POINT AT CML OF RECORD               29980020
         USING     CML,R5                                               30000020
         LA        R5,0(0,R5)          CLEAR TOP BYTE                   30020020
         SR        R0,R5           ADD LENGTH OF ENTRY TO ACCUMULATOR   30040020
         A         R0,CMLPTUP                                           30060020
         CBNL      R0,MAXBLOCK,GC5 SEE IF ENOUGH                        30080020
GC10     LA        R2,XR2+4        POINT AT NEXT UCT ADDRESS            30100020
         BCT       R4,GC11         TRY NEXT UTILITY                     30120020
         DROPR     R5                                                   30140020
         MVI       GCRESW,N            SET SWITCH                       30150021
         ST        R1,GCSV1            SAVE R1                          30160021
*        TRY TO DO A SPILLOUT TO GET MORE MEMORY                        30170021
GC20     L         R1,NUMBUFUT         ERROR IF NOTHING TO SPILL        30180020
         LTR       R2,R1           NUMBER OF BUFFERED UTILITIES         30200020
         BZ        GCERROR                                              30220020
         SLL       R2,2            TIMES 4                              30240020
         LA        R2,UCTADDR-4(R2) POINT AT ADDRESS OF LAST UCT        30260020
         LR        R5,R2           SAVE POINTR                          30280020
*        SEE IF UTILITY IS BEING WRITTEN ON                             30300020
GC21     L         R3,XR2          POINT AT UCT                         30320020
         USING     UCT,R3                                               30340020
         CLI       UCTSW,M0        TEST FOR WRITE                       30360020
         BNL       GC221           BRANCH IF NOT                        30380020
         L         R4,UCTNEXTO     CHECK FOR SPILLOUT AT END OF FILE    30400020
GC211    CBE       R4,UCTRLAST,GC22                                     30420020
         USING     RCL,R4                                               30440020
         TMBZ      RCLFLAG,M7,SPILLOUT SPILLOUT IF RECORD IN CORE       30460020
         A         R4,RCLINC       POINT AT NEXT ENTRY                  30480020
         B         GC211                                                30500020
GC22     ST        R4,UCTNEXTO     SAVE POINTER                         30520020
GC221    S         R2,=F'4'        FIND NEXT UCT                        30540020
         BCT       R1,GC21         ARE THERE MORE BUFFERED UTILITIES    30560020
*        UNABLE TO FIND SPILLOUTABLE WRITE FILE                         30580020
*        TRY THE READ FILES                                             30600020
         L         R1,NUMBUFUT     NUMBER OF UTILITIES                  30620020
GC23     L         R3,XR5          POINT AT UCT                         30640020
         CLI       UCTSW,M01       TEST FOR READ AND SPILLOUTABLE       30660020
         BL        GC25            BRANCH IF NOT                        30680020
         L         R2,=X'FFFFFFFF' INITIALIZE MINIMUM FLAG REGISTER     30700020
         LA        R14,GC244       SET RECORD IN CORE SW OFF            30720020
         LA        R15,GC240       SET FULL SEARCH SW OFF               30740020
         L         R0,UCTFLAG      PICK UP COMPARE FLAG                 30760020
         O         R0,=X'03FFFFFF' CLEAR JUNK                           30780020
         L         R4,UCTNEXTO     POINT AT RCL                         30800020
         CBE       R4,UCTRLAST,GC234 SEE IF AT END OF FILE              30820021
         CBNH      R4,UCTRNEXT,GC235 SEE IF NOT IN FIRST PART OF FILE   30840021
*        IN FIRST SECTION OF FILE                                       30860020
GC233    TMBNZ     RCLFLAG,M7,GC232 TEST IF IN CORE                     30880020
         CLBNL     R0,RCLFLAG,SPILLOUT SPILLOUT IF FLAG LOW ENOUGH      30900020
         LA        R14,GC243       SET RECORD IN CORE SW                30920020
         CLBL      R2,RCLFLAG,GC232 SEE IF NEW MIN FLAG                 30940020
         L         R2,RCLFLAG      NEW LOW FLAG                         30960020
GC232    A         R4,RCLINC       GO DOWN ONE ENTRY                    30980020
GC236    CBH       R4,UCTRNEXT,GC233 TEST FOR DONE FIRST SECTION        31000020
         L         R4,UCTRLAST     PREPARE TO DO LAST SECTION           31020020
         B         GC234           GO CHECK IF LAST SECTION EXISTS      31040021
*./      DELETE    SEQ1=31060020,SEQ2=31060020                          31060021
*        IN LAST SECTION OF FILE                                        31080020
GC231    TMBNZ     RCLFLAG,M7,GC234 TEST IF IN CORE                     31100020
         CLBNL     R0,RCLFLAG,SO1  SPILLOUT IF FLAG LOW ENOUGH          31120020
         LA        R14,GC243       SET RECORD IN CORE SW                31140020
         CLBL      R2,RCLFLAG,GC234 SEE IF NEW MIN FLAG                 31160020
         L         R2,RCLFLAG      NEW LOW FLAG                         31180020
GC234    S         R4,RCLINC       GO UP ONE ENTRY                      31200020
GC235    CBL       R4,UCTRNEXT,GC231 SEE IF STILL IN LAST SECTION       31220021
         BR        R15             END OF SCAN                          31225021
*        FIRST EXIT. PARTIAL SCAN                                       31240020
GC240    LA        R15,GC242       TURN ON FULL SCAN SW.                31260020
GC241    L         R4,UCTRCLN1     START FULL SCAN                      31280020
         B         GC236                                                31300020
*        SECOND EXIT. FULL SCAN COMPLETED                               31320020
GC242    BR        R14             TEST IN CORE SWITCH                  31340020
*        RECORDS IN CORE. ADJUST UCTFLAG AND TRY AGAIN                  31360020
GC243    ST        R2,UCTFLAG      STORE MIN FLAG ACCEPTABLE            31380020
         LR        R0,R2           USE IT IN FINAL SCAN                 31400020
         B         GC241                                                31420020
*        NO RECORDS IN CORE. TURN OFF POSSIBLE SPILLOUT SWITCH          31440020
GC244    NI        UCTSW,N1        TURN OFF SWITCH                      31460020
GC25     S         R5,=F'4'        FIND NEXT UCT                        31480020
         BCT       R1,GC23         TRY NEXT UTILITY                     31500020
         DROPR     R3,R4                                                31520020
         L         R1,GCSV1            RESTORE R1                       31525021
         CLI       GCRESW,M            TEST SWITCH                      31530021
         BNE       GC5                 BR IF ONLY TRYING TO GET RESERVE 31535021
*        ONE LAST CHANCE. TRY CHECKING A SPILLOUT IF ANY.               31540020
*        THIS WILL KILL DOUBLE BUFFERING OF OUTPUT.                     31560020
         L         R4,NUMBUFUT         NUMBER OF BUFFERED UTILITIES     31580020
         LA        R2,UCTADDR          UCT'S ADDRESS TABLE              31600020
         STM       R7,R9,GCSV          SAVE R7, R8, AND R9              31620020
GC7      L         R9,XR2              POINT AT UCT                     31640020
         USING     UCT,R9                                               31660020
         LTBNZ     R7,UCTSPLO,GC8      TEST IF SPILLOUT IN PROGRESS     31680020
         DROPR     R9                                                   31700020
         LA        R2,XR2+4            POINT AT NEXT UCT ADDRESS        31720020
         BCT       R4,GC7              BRANCH IF MORE BUFFERED UT'S     31740020
*        UNABLE TO SPILLOUT ANYWHERE. ABORT CONDITION                   31760020
GCERROR  L         R1,NOGOEXIT     PREPARE TO DIE                       31780020
SHRINKSW BC        *-*+15,XR1(*-*) EXIT UNLESS SHRINKSW ON              31800020
         L         R5,=X'FFFFFFFF' PLACE THE BAD NEWS                   31820026
         BR        R8              RETURN                               31840020
*        CHECK A SPILLOUT TO FREE UP A BIT MORE CORE                    31860020
GC8      LA        R8,SO9              SET CHECKOUT RETURN ADDRESS      31880020
         B         CHECKOUT                                             31900020
*        GETCORE SAVE AREA                                              31920020
GCSV     DC        3F'0'           R7, R8, AND R9 SAVE AREA             31940027
GCSV1    DC        F'0'                R1 SAVE AREA                     31945027
GCRESW   DC        X'00'               M IF TRYING TO MEET REQUEST,    X31950027
                                       N IF TRYING TO MEET RESERVE      31955021
         TITLE     'SPILLOUT'                                           31960020
*        SPILLOUT CODE (PART OF GETCORE SUBROUTINE)                     31980020
*                                                                       32000020
SPILLOUT LR        R5,R4           ENTRY TO MOVE UCTNEXTO DOWN          32020020
         USING     RCL,R5                                               32040020
         USING     UCT,R3                                               32060020
         A         R4,RCLINC                                            32080020
         B         SO2                                                  32100020
SO1      LR        R5,R4           ENTRY TO MOVE UCTNEXTO UP            32120020
         S         R4,RCLINC                                            32140020
SO2      ST        R4,UCTNEXTO     STORE NEW UCTNEXTO                   32160020
         STM       R7,R9,GCSV                                           32180020
*        IF RECORD HAS ALREADY BEEN SPILLED ONCE DO NOT SPILL AGAIN     32200020
         TMBZ      RCLFLAG,M6,SO0  TEST ON DISK SWITCH                  32220020
*        IF RECORD BEING SPILLED IN MUST CHECK IT                       32240020
         CBNE      R5,UCTSPLI,SO00 CHECK IF BEING SPILLED IN            32260020
         LR        R9,R3               SET UP THINGS FOR CHECKIN        32280020
         LR        R7,R5                                                32300020
         BAL       R8,CHECKIN                                           32320020
SO00     L         R3,RCLPT        POINT AT RCP                         32340020
         USING     RCP,R3                                               32360020
         MVC       RCLNOTE(3),RCPNOTE MOVE TTR INTO RCL                 32380020
         USING     CML,R3                                               32400020
         L         R2,CMLPTDWN     PICK UP POINTERS FOR FREECORE        32420020
         L         R4,CMLPTUP                                           32440020
         BAL       R8,FREECORE     FREE THE RECORD                      32460020
         B         SO6                                                  32480020
         USING     UCT,R3                                               32500020
SO0      SNAPOUT   'SPILLOUT'                                           32520020
         ACCUM     UCTSOCNT        ADD 1 TO STATISTICS COUNTER          32540020
         LR        R9,R3           FOR CHECK SUBROUTINES                32560020
         DROPRUSE  R3,UCT,R9                                            32580020
*        CHECK IF SPILLOUT OR SPILLIN IN PROGRESS                       32600020
         LTBZ      R7,UCTSPLI,SO3  IS SPILLIN IN PROGRESS               32620020
         BAL       R8,CHECKIN                                           32640020
SO3      LTBZ      R7,UCTSPLO,SO4  IS SPILLOUT IN PROGRESS              32660020
         BAL       R8,CHECKOUT                                          32680020
*        TEST IF A POINT IS NECESSARY                                   32700020
SO4      TM        UCTSW,M2                                             32720020
         BZ        SO41                                                 32740020
*        DO POINT TO WRITE ON UTILITY                                   32760020
         L         R1,UCTDCB       POINT AT DCB                         32780020
         MVI       UCTONOTE+3,1    SET 1 TO WRITE BEYOND LAST RECORD    32800020
         POINT     (1),UCTONOTE                                         32820020
         REF       R1                                                   32840020
         NI        UCTSW,N2        TURN OFF POINT SW                    32860020
*        RESTORE THE TRACK BALANCE IN THE DCB TO AVOID SVC 25 USAGE     32862025
         CLI       UCTTRBAL,X'FF'      TEST IF TRACK BALANCE IS VALID   32864025
         BE        SO41                BR IF NOT                        32866025
         L         R1,UCTDCB           POINT AT THE DCB                 32868025
         USING     DCB,R1                                               32870025
         MVC       DCBTRBAL(2),UCTTRBAL RESTORE SAVED TRACK BALANCE     32872025
         OI        DCBOFLGS,X'80'      PRETEND LAST OPERATION WAS WRITE 32874025
         DROPR     R1                                                   32876025
*        DO WRITE ON UTILITY                                            32880020
SO41     L         R2,UCTDCB       POINT AT DCB                         32900020
         L         R4,RCLPT        POINT AT RCP                         32920020
         USING     RCP,R4                                               32940020
         LA        R3,RCPDATA      POINT AT DATA RECORD                 32960020
         LH        R7,RCPRL        PICK UP RECORD LENGTH                32980020
         WRITE     UCTODECB,SF,(R2),(R3),(R7),MF=E                      33000020
*        CLEANUP MISC THINGS                                            33020020
         CBNH      R7,UCTMAXRL,SO5 SEE IF NEW MAX RECORD LENGTH         33040020
         ST        R7,UCTMAXRL     NEW RECORD LENGTH BIGGER             33060020
SO5      ST        R5,UCTSPLO      SET SPILLOUT RECORD POINTER          33080020
         DROPR     R4,R9                                                33100021
         SNAPOUT   'SPILLOUT EXIT','ADDRESS=',(R4),                    X33120021
                   'DATA=',XR4+16,XR4+20,XR4+24,XR4+28,XR4+32           33130021
SO6      OI        RCLFLAG,M7      TURN OFF IN CORE SWITCH              33140020
SO9      LM        R7,R9,GCSV      RESTORE REGISTERS                    33160020
         B         GC00            TRY AGAIN TO FIND CORE FOR USER      33180020
         DROPR     R5                                                   33200021
         TITLE     'FREECORE'                                           33220020
*        FREECORE SUBROUTINE                                            33240020
*                                                                       33260020
*        R3 MUST POINT TO CML BEING FREEED                              33280020
*        R4 MUST POINT TO NEXT UPPER CML                                33300020
*        R2 MUST POINT TO NEXT LOWER CML                                33320020
*        R8 IS RETURN                                                   33340020
*        CLOBBERS R0,R1,R2,R3                                           33360020
*                                                                       33380020
*        RESTORES CORE TO AVAILABLE STATUS                              33400020
         USING     CML,R3                                               33420020
FREECORE SNAPOUT   'FREECORE','FROM=',(R3),'TO=',CMLPTUP                33440020
         LINKCHK                                                        33450021
         MVI       CMLFLAG,M0      SET FREE CORE FLAG                   33460020
         DROPRUSE  R3,CML,R2                                            33480020
         LA        R3,XR3            CLEAR TOP BYTE                     33500020
         CLI       CMLFLAG,M0      TEST FOR FREE CORE OR END OF LIST    33520020
         BH        FC3             BRANCH END OF LIST                   33540020
         BE        FC1             BRANCH FREE CORE                     33560020
*        SEARCH DOWN LIST FOR NEXT LOWEST FREE CORE                     33580020
FC2      L         R2,CMLPTDWN     GO DOWN ONE ENTRY                    33600020
         CLI       CMLFLAG,M0      TEST FOR FREE CORE OR END OF LIST    33620020
         BL        FC2                                                  33640020
         USING     FCP,R2                                               33660020
FC3      L         R1,FCPPTUP      SAVE ADDRESS OF HIGHER FREE CORE     33680020
         ST        R3,FCPPTUP      SET POINTER TO NEW ENTRY             33700020
         DROPRUSE  R2,FCP,R3                                            33720020
         LA        R2,XR2            CLEAR TOP BYTE                     33740020
         ST        R2,FCPPTDWN     SET DOWN POINTER IN NEW ENTRY        33760020
         ST        R1,FCPPTUP      SET UP POINTER IN NEW ENTRY          33780020
         B         FC4                                                  33800020
         DROPRUSE  R3,CML,R2                                            33820020
*        LOWER ENTRY IS FREE CORE. REMOVE NEW ENTRY                     33840020
FC1      ST        R4,CMLPTUP      SET UP POINTER IN LOWER ENTRY        33860020
         USING     FCP,R2                                               33880020
         L         R1,FCPPTUP      SAVE POINTER TO NEXT ABOVE FREE CORE 33900020
         DROPRUSE  R2,CML,R4       CHANGE UPPER ENTRY                   33920020
         IC        R0,CMLFLAG      SAVE FLAG                            33940020
         LA        R2,XR2            CLEAR TOP BYTE                     33960020
         ST        R2,CMLPTDWN     SET DOWN POINTER                     33980020
         STC       R0,CMLFLAG      RESTORE FLAG                         34000020
         LR        R3,R2           MAKE LOWER ENTRY NEW ENTRY           34020020
*        SET DOWN POINTER IN NEXT ABOVE FCP                             34040020
         DROPRUSE  R4,FCP,R1                                            34060020
FC4      ST        R3,FCPPTDWN     SET DOWN POINTER                     34080020
         LINKCHK                                                        34090021
*        CHECK IF NEXT ABOVE ENTRY IS FREE CORE AND IF SO MERGE WITH   X34100020
                   NEW ENTRY                                            34120020
         DROPRUSE  R1,CML,R4                                            34140020
         CLI       CMLFLAG,M0      TEST FOR FREE CORE                   34160020
         BNER      R8              RETURN IF NOT                        34180020
         L         R2,CMLPTUP      LOCATE ENTRY ABOVE THIS ONE          34200020
         DROPRUSE  R4,CML,R2       ALTER THIS UPPER UPPER ENTRY         34220020
         IC        R0,CMLFLAG      SAVE FLAG                            34240020
         ST        R3,CMLPTDWN     SET DOWN POINTER                     34260020
         STC       R0,CMLFLAG      RESTORE FLAG                         34280020
         DROPRUSE  R2,FCP,R4                                            34300020
         L         R1,FCPPTUP      SAVE UP POINTER                      34320020
         DROPRUSE  R4,CML,R3       ALTER NEW ENTRY                      34340020
         ST        R2,CMLPTUP      SET UP POINTER                       34360020
         USING     FCP,R3                                               34380020
         ST        R1,FCPPTUP      SET UP POINTER IN NEW ENTRY          34400020
         DROPRUSE  R3,FCP,R1                                            34420020
         ST        R3,FCPPTDWN     SET DOWN POINTER IN UPPER UPPER FCP  34440020
         LINKCHK                                                        34450021
         BR        R8              RETURN                               34460020
         DROPR     R1                                                   34480020
         TITLE     'MOVE'                                               34500020
*        MOVE SUBROUTINE                                                34520020
*                                                                       34540020
*        R5 IS FROM ADDRESS                                             34560020
*        R6 IS TO ADDRESS                                               34580020
*        R7 IS LENGTH                                                   34600020
*        R8 IS RETURN                                                   34620020
*        CLOBBERS NONE                                                  34640020
*                                                                       34660020
*        MOVE IS DONE FROM RIGHT TO LEFT SO SQUISH OR GROW UP OF       X34680020
                   OVERLAPPING AREAS WILL WORK                          34700020
*        THE MOVE INVOLVES LD STD SEQUENCES, THUS REQUIRING THAT THE   X34720020
                   AREAS MUST BE ON DOUBLE WORD BOUNDRIES               34740020
*                                                                       34760020
MOVE     SNAPOUT   'MOVE','FROM=',(R5),'TO=',(R6),'LENGTH=',(R7)        34780020
         SNAPOUT   'MOVE','DATA=',XR5,XR5+4,XR5+8,XR5+12,XR5+16         34790021
         ACCUM     UNMOCNT             COUNT THE MOVES                  34795023
         AIF       (&NOTBUG).MOVE                                       34800020
*        CHECK OPERANDS ON DOUBLE WORD BOUNDRY                          34820020
         TMRBZ     R5,M567,MV1                                          34840020
MV2      SNAPOUT   'MOVE NOT ON DOUBLE WORD BOUNDRY'                    34860020
         ABEND     20,DUMP                                              34880021
MV1      TMRBNZ    R6,M567,MV2                                          34900020
.MOVE    STM       R0,R15,MSV1     STORE EVERYTHING                     34920020
         LA        R14,XR5(R7)     ADD LENGTH TO FROM ADDRESS           34940020
         LA        R15,XR6(R7)     ADD LENGTH TO TO ADDRESS             34960020
         N         R7,=A(M567)     TEST LENGTH MULTIPLE OF 8            34980020
*        IF LENGTH IS NOT A MULTIPLE OF 8 THE LAST BYTES ARE MOVED BY  X35000020
                   AN MVC TO YIELD A LENGTH THAT IS A MULTIPLE OF 8     35020020
         BZ        MV3             BRANCH IF LENGTH IS A MULTIPLE OF 8  35040020
         SR        R14,R7          ADJUST TO ADDRESS                    35060020
         SR        R15,R7          ADJUST FROM ADDRESS                  35080020
         BCTR0     R7              SUBTRACT 1 FOR MVC LENGTH            35100020
         EX        R7,MVMVC        MOVE 1 TO 8 BYTES                    35120027
         B         MV3             AND CONTINUE                         35140027
MVMVC    MVC       XR15(*-*),XR14  EXECUTED MOVE 1 TO 8 BYTES           35160027
         DROPR     R11,R12,R13     BASES ABOUT TO BE CLOBBERED          35180020
MV4      DS        0D              DOUBLE ALIGN THE INSTRUCTIONS FOR   X35200020
                   MODEL 75 PERFORMANCE                                 35220020
*        THE FOLLOWING BLOCK OF CODING IS A FAST MOVE METHOD            35240020
*        EACH LM STM PAIR OF INSTRUCTIONS MOVES 14*4 BYTES              35260020
&WORK    SETA      &MOVENUM/14/4-1                                      35280020
.MOVE1   LM        R0,R13,XR14+&WORK*14*4 LOAD 56 BYTES                 35300020
         STM       R0,R13,XR15+&WORK*14*4 STORE 56 BYTES                35320020
&WORK    SETA      &WORK-1                                              35340020
         AIF       (&WORK GE 0).MOVE1                                   35360020
         LR        R0,R0           FAST HALF-WORD NOP TO ALIGN MVSW     35380020
MV3      BALR0     R13             LOAD ME A BASE                       35400020
         USING     MVSW,R13                                             35420020
MVSW     EQU       *               WILL BE ONE OF THE FOLLOWING LINES   35440020
*        B         MOVEXIT         RETURN TO USER. MVSW INST NO. 1      35460020
*                    OR                                                 35480020
         S         R14,=A(&MOVENUM) PREPARE FOR NEXT MOVE. MVSW INST 2  35500020
         S         R15,=A(&MOVENUM)                                     35520020
*        IF THE REMAINING NUMBER OF BYTES TO BE MOVED IS .GE. THE      X35540020
                   NUMBER THAT THE MOVE BLOCK MOVES DO THE MOVE BLOCK   35560020
         L         R1,=A(MV4)      PREPARE TO BRANCH INTO MOVE BLOCK    35580020
         CBNLR     R14,MSV1+4*R5,R1  DO MOVE BLOCK UNLESS TOO MUCH      35600020
         L         R0,MVSW1        SET MVSW TO EXIT INSTRUCTION         35620020
         ST        R0,MVSW                                              35640020
         LA        R12,XR14+&MOVENUM COMPUTE NUMBER OF CHARACTERS LEFT  35660020
         L         R14,MSV1+4*R5   SET ORIGINAL TO ADDRESS              35680020
         L         R15,MSV1+4*R6   SET ORIGINAL FROM ADDRESS            35700020
         SR        R12,R14         NUMBER OF CHARACTERS LEFT            35720020
         L         R10,MVTAB(R12)  ADDRESS OF PRIMARY ROUTINE           35740020
         L         R11,MVTAB+4(R12) ADDRESS OF SECONDARY ROUTINE        35760020
         BR        R10             GO DO PRIMARY                        35780020
MSV1     DC        16F'0'          REGISTER SAVE AREA                   35800027
MVSW1    B         MOVEXIT         MOVED TO MVSW                        35820020
MVSW2    S         R14,=A(&MOVENUM) MOVED TO MVSW                       35840020
MVTAB    DS        0F                                                   35860020
*        THE PRIMARY ADDRESS IS THE ADDRESS OF A ROUTINE TO MOVE       X35880020
                   0, 8, 16, 24, 32, 40, OR 48 BYTES                    35900020
*        THE SECONDARY ADDRESS IS AN ADDRESS WITHIN THE MOVE BLOCK TO  X35920020
                   MOVE A MULTIPLE OF 56 BYTES                          35940020
         DC        A(MVP0)             PRIMARY ADDRESS                  35960020
         DC        A(MOVEXIT)          SECONDARY ADDRESS                35980021
         DC        A(MVP8)             PRIMARY ADDRESS                  36000020
         DC        A(MOVEXIT)          SECONDARY ADDRESS                36020021
         DC        A(MVP16)            PRIMARY ADDRESS                  36040020
         DC        A(MOVEXIT)          SECONDARY ADDRESS                36060021
         DC        A(MVP24)            PRIMARY ADDRESS                  36080020
         DC        A(MOVEXIT)          SECONDARY ADDRESS                36100021
         DC        A(MVP32)            PRIMARY ADDRESS                  36120020
         DC        A(MOVEXIT)          SECONDARY ADDRESS                36140021
         DC        A(MVP40)            PRIMARY ADDRESS                  36160020
         DC        A(MOVEXIT)          SECONDARY ADDRESS                36180021
         DC        A(MVP48)            PRIMARY ADDRESS                  36200020
         DC        A(MOVEXIT)          SECONDARY ADDRESS                36220021
&MOVENUM SETA      &MOVENUM/14/4-1                                      36240020
.MOVE4   DC        A(MVP0)             PRIMARY ADDRESS                  36260020
         DC        A(MV4+8*&MOVENUM)   SECONDARY ADDRESS                36280021
         DC        A(MVP8)             PRIMARY ADDRESS                  36300020
         DC        A(MV4+8*&MOVENUM)   SECONDARY ADDRESS                36320021
         DC        A(MVP16)            PRIMARY ADDRESS                  36340020
         DC        A(MV4+8*&MOVENUM)   SECONDARY ADDRESS                36360021
         DC        A(MVP24)            PRIMARY ADDRESS                  36380020
         DC        A(MV4+8*&MOVENUM)   SECONDARY ADDRESS                36400021
         DC        A(MVP32)            PRIMARY ADDRESS                  36420020
         DC        A(MV4+8*&MOVENUM)   SECONDARY ADDRESS                36440021
         DC        A(MVP40)            PRIMARY ADDRESS                  36460020
         DC        A(MV4+8*&MOVENUM)   SECONDARY ADDRESS                36480021
         DC        A(MVP48)            PRIMARY ADDRESS                  36500020
         DC        A(MV4+8*&MOVENUM)   SECONDARY ADDRESS                36520021
&MOVENUM SETA      &MOVENUM-1                                           36540020
         AIF       (&MOVENUM GE 1).MOVE4                                36560020
*        THE PRIMARY ROUTINES FOLLOW                                    36580020
MVP0     BR        R11             GO TO SECONDARY                      36600020
MVP8     S         R12,=F'8'       REDUCE LENGTH BY 8                   36620020
         LD        FR0,XR14(R12)   PICK UP 8 BYTES                      36640020
         STD       FR0,XR15(R12)   STORE 8 BYTES                        36660020
         BR        R11             GO TO SECONDARY                      36680020
MVP16    S         R12,=F'16'      REDUCE LENGTH BY 16                  36700020
         LD        FR0,XR14+8(R12) MOVE TOP 8 BYTES                     36720020
         STD       FR0,XR15+8(R12)                                      36740020
         LD        FR0,XR14(R12)   MOVE LOWER 8 BYTES                   36760020
         STD       FR0,XR15(R12)                                        36780020
         BR        R11             GO TO SECONDARY                      36800020
MVP24    S         R12,=F'24'      REDUCE LENGTH BY 24                  36820020
         LD        FR0,XR14+16(R12) MOVE TOP 8 BYTES                    36840020
         STD       FR0,XR15+16(R12)                                     36860020
         LD        FR0,XR14+8(R12) ANOTHER 8 BYTES                      36880020
         STD       FR0,XR15+8(R12)                                      36900020
         LD        FR0,XR14(R12)   LAST 8 BYTES                         36920020
         STD       FR0,XR15(R12)                                        36940020
         BR        R11             GO TO SECONDARY                      36960020
MVP32    S         R12,=F'32'      REDUCE LENGTH BY 32                  36980020
         LD        FR0,XR14+24(R12) MOVE 8 BYTES                        37000020
         STD       FR0,XR15+24(R12)                                     37020020
         LD        FR0,XR14+16(R12) MOVE 8 BYTES                        37040020
         STD       FR0,XR15+16(R12)                                     37060020
         LD        FR0,XR14+8(R12) MOVE 8 BYTES                         37080020
         STD       FR0,XR15+8(R12)                                      37100020
         LD        FR0,XR14(R12)   LAST 8 BYTES (THANK HEAVEN)          37120020
         STD       FR0,XR15(R12)                                        37140020
         BR        R11             GO TO SECONDARY                      37160020
MVP40    S         R12,=F'40'      REDUCE LENGTH BY 40                  37180020
         LA        R10,XR15(R12)   TO ADDRESS                           37200020
         LA        R12,XR14(R12)   FROM ADDRESS                         37220020
         LM        R0,R9,XR12      PICK UP 40 BYTES                     37240020
         STM       R0,R9,XR10      PLUNK EM DOWN                        37260020
         BR        R11             GO TO SECONDARY                      37280020
MVP48    S         R12,=F'48'      REDUCE LENGTH BY 48                  37300020
         LD        FR0,XR14+40(R12) MOVE TOP 8 BYTES                    37320020
         STD       FR0,XR15+40(R12)                                     37340020
         LA        R10,XR15(R12)   TO ADDRESS                           37360020
         LA        R12,XR14(R12)   FROM ADDRESS                         37380020
         LM        R0,R9,XR12      MOVE 40 BYTES                        37400020
         STM       R0,R9,XR10                                           37420020
         BR        R11             GO TO SECONDARY                      37440020
*        EXIT ROUTINE FOR MOVE                                          37460020
MOVEXIT  L         R0,MVSW2        RESET SWITCH                         37480020
         ST        R0,MVSW                                              37500020
         LM        R0,R15,MSV1     RESTORE EVERYTHING                   37520020
         USING     BUFFENT,R12                                          37540020
         USING     SAVE2,R13,R11                                        37560020
         BR        R8              RETURN                               37580020
         TITLE     'SQUISH'                                             37600020
*        CORE SQUISH SUBROUTINE                                         37620020
*                                                                       37640020
*        R8 IS RETURN                                                   37660020
*        CLOBBERS R0,R1,R2,R3,R4,R5,R6,R7,R14,R15                       37680020
*                                                                       37700020
*        THIS SUBROUTINE DE-FRAGMENTS CORE                              37720020
*        THIS IS DONE BY MOVING ALL THE USED CORE UP TO THE TOP OF     X37740020
                   THE AVAILABLE CORE                                   37760020
*        THE SUBROUTINE ASSUMES THERE IS ALWAYS SOME FREE CORE          37780020
*                                                                       37800020
SQUISH   SNAPOUT   'SQUISH'                                             37820020
         ACCUM     UNSQCNT             COUNT THE SQUISHES               37825023
         LINKCHK                                                        37830021
*        CHECK ALL I/O IN PROGRESS                                      37840020
         LTBZR     R6,NUMBUFUT,R8  LOAD NUMBER OF BUFFERED UTILITIES,  X37860020
                   RETURN IF NONE                                       37880020
         LA        R5,UCTADDR      POINT AT UCT ADDRESS                 37900020
         STM       R8,R9,SQSV1     SAVE RETURN AND UCT BASE             37920020
SQ1      L         R9,XR5          POINT AT UCT                         37940020
         USING     UCT,R9                                               37960020
         LTBZ      R7,UCTSPLI,SQ2  TEST FOR SPILLIN IN PROGRESS         37980020
         BAL       R8,CHECKIN      CHECK SPILLIN                        38000020
SQ2      LTBZ      R7,UCTSPLO,SQ3  TEST FOR SPILLOUT IN PROGRESS        38020020
         BAL       R8,CHECKOUT     CHECK SPILLOUT                       38040020
         DROPR     R9                                                   38060020
SQ3      LA        R5,XR5+4        POINT AT NEXT UCT ADDRESS            38080020
         BCT       R6,SQ1          DO NEXT BUFFERED UTILITY             38100020
*        SHIFT ALL USED CORE UP INTO FREE AREAS                         38120020
*        INITIALIZATION                                                 38140020
         LA        R3,CORELIST     START DOWN CHAIN                     38160020
         USING     FCP,R3                                               38180020
         L         R3,FCPPTDWN     POINT AT FIRST FREE AREA             38200020
         USING     CML,R3                                               38220020
         L         R3,CMLPTUP      POINT AT ENTRY ABOVE                 38240020
         SR        R7,R7           ZERO MOVE LENGTH                     38260020
         LR        R4,R7           ZERO MOVE DISTANCE                   38280020
         LR        R6,R3           INITIALIZE NEW UPPER ENTRY POINTER   38300020
*        GO DOWN ONE ENTRY AND EXAMIN TYPE                              38320020
SQLOOP   LR        R5,R3           R5 POINTS AT UPPER ENTRY             38340020
SQLOOP2  L         R3,CMLPTDWN     POINT AT NEXT ENTRY                  38360020
         LA        R3,0(0,R3)      ZERO TOP BYTE                        38380020
         CLI       CMLFLAG,M       TEST FOR I/O RECORD                  38400020
         BE        SQIO                                                 38420020
*        FREE CORE OR END OF LIST ENTRY FOUND.                          38440020
*        MOVE ALL I/O RECORDS SINCE LAST FREE CORE ENTRY UPWARDS        38460020
         LTRBZ     R7,SQFR2        TEST FIRST FREE OR FREE NEXT TO END  38480020
         BAL       R8,MOVE         MOVE THE RECORDS UP                  38500020
*        RESET THINGS TO PREPARE FOR NEXT MOVE                          38520020
         SR        R7,R7           ZERO MOVE LENGTH                     38540020
SQFR2    AR        R4,R5           ADD LENGTH OF FREE BLOCK TO MOVE     38560020
         SR        R4,R3            DISTANCE                            38580020
         LR        R5,R6           POINT R5 AT NEW UPPER ENTRY          38600020
         CLI       CMLFLAG,N       TEST END OF LIST                     38620020
         BNE       SQLOOP2                                              38640020
*        END OF LIST FOUND. CREATE A FREE CORE CML AND EXIT             38660020
         L         R2,CMLPTUP      POINT AT BOTTOM OF MY CORE           38680020
         USING     FCP,R3                                               38700020
         ST        R2,FCPPTUP      SET UP POINTER IN CORELIST           38720020
         ST        R2,FCPPTDWN     SET DOWN POINTER IN CORELIST         38740020
         DROPRUSE  R3,CML,R2       ALTER CML AT BOTTOM OF MY CORE       38760020
         ST        R5,CMLPTUP      SET UP POINTER                       38780020
         MVI       CMLFLAG,M0      SHOW FREE CORE                       38800020
         USING     FCP,R2          CREATE FCP AT BOTTOM OF MY CORE      38820020
         ST        R3,FCPPTUP      SET UP POINTER                       38840020
         ST        R3,FCPPTDWN     SET DOWN POINTER                     38860020
         DROPRUSE  R2,CML,R5                                            38864021
         IC        R0,CMLFLAG      SAVE FLAG                            38868021
         ST        R2,CMLPTDWN     SET DWN PTR IN 2ND FROM BOTTOM ENTRY 38872021
         STC       R0,CMLFLAG                                           38876021
         LM        R8,R9,SQSV1     RESTORE REGISTERS                    38880027
         LINKCHK                                                        38890021
         BR        R8              RETURN                               38900020
         DROPRUSE  R5,CML,R3                                            38920021
*        I/O RECORD FOUND. RELOCATE POINTERS IN PREPARATION FOR MOVE.   38940020
SQIO     A         R7,CMLPTUP      ADD LENGTH OF ENTRY TO MOVE LENGTH   38960020
         SR        R7,R3                                                38980020
         ST        R6,CMLPTUP      INCREMENT UP POINTER                 39000020
         LR        R6,R3           CALCULATE NEW POSITION FOR ENTRY     39020020
         AR        R6,R4                                                39040020
         USING     RCP,R3                                               39060020
         L         R2,RCPPT        POINT AT RCL FOR THIS ENTRY          39080020
         DROPRUSE  R3,RCL,R2                                            39100020
         IC        R0,RCLFLAG      SAVE FLAG                            39120020
         ST        R6,RCLPT        PLACE POINTER TO NEW POSITION        39140020
         STC       R0,RCLFLAG      RESET FLAG                           39160020
         DROPRUSE  R2,CML,R5       POINT AT UPPER ENTRY                 39180020
         IC        R0,CMLFLAG      SAVE FLAG                            39200020
         ST        R6,CMLPTDWN     SET NEW DOWN POINTER                 39220020
         STC       R0,CMLFLAG                                           39240020
         B         SQLOOP          GO EXAMIN NEXT ENTRY                 39260020
         DROPR     R5                                                   39280020
SQSV1    DC        2F'0'           SAVE AREA FOR R8 AND R9              39300027
         TITLE     'CHECKIN'                                            39320020
*        CHECKIN SUBROUTINE                                             39340020
*                                                                       39360020
*        R7 SHOULD CONTAIN UCTSPLI                                      39380020
*        R8 IS RETURN                                                   39400020
*        CLOBBERS R0,R1,R2,R3,R4,R14,R15                                39420020
*                                                                       39440020
*        THIS SUBROUTINE CHECKS COMPLETION OF A SPILLIN                 39460020
*        DO NOT CALL UNLESS SPILLIN IN PROGRESS                         39480020
         USING     UCT,R9                                               39500020
         USING     RCL,R7                                               39520020
CHECKIN  SNAPOUT   'CHECKIN'                                            39540020
         CHECK     UCTIDECB        WAIT FOR END OF SPILLIN              39560020
         SR        R0,R0           CREATE 0                             39580020
         ST        R0,UCTSPLI      ZERO POINTER                         39600020
         L         R1,UCTIDECB+16  POINT AT STATUS STUFF                39620020
         L         R3,UCTIRL       LOAD BLOCKSIZE USED IN READ          39640020
         L         R2,RCLPT        POINT AT RCP OF RECORD               39660020
         CBE       R7,UCTRNEXT,CI1 TEST IF THIS IS SPILLOUTABLE         39680020
         OI        UCTSW,M1        TURN ON SPILLOUTABLE SWITCH          39700020
         CLBNL     R2,UCTFLAG,CI1  TEST IF THIS NEW LOW FLAG            39720020
         ST        R2,UCTFLAG      STORE IT                             39740020
*./      DELETE    SEQ1=39760020,SEQ2=39760020                          39760021
CI1      SH        R3,XR1+14       SUBTRACT CSW COUNT FIELD             39780020
         SNAPOUT   'CHECKIN EXIT','LENGTH=',(R3),                      X39786021
                   'DATA=',XR2+16,XR2+20,XR2+24,XR2+28,XR2+32           39792021
         USING     RCP,R2                                               39798021
         STH       R3,RCPRL                                             39800020
         ALIGN     R3,D,INC=16     ADD 16 FOR RCP AND DOUBLE ALIGN      39820020
         LA        R2,0(0,R2)        CLEAR FLAG BYTE                    39840020
         USING     CML,R2                                               39860020
         L         R1,CMLPTUP      COMPUTE UNUSED SPACE                 39880020
         SR        R1,R2           PRESENT BLOCK SIZE                   39900020
         SR        R1,R3           DIFFERENCE                           39920020
         CBLR      R1,=F'16',R8    RETURN IF NOT ENOUGH CORE TO FREE    39940020
*        CREATE A NEW CML ENTRY                                         39960020
         L         R4,CMLPTUP      POINT AT TOP ENTRY                   39980020
         AR        R3,R2           POINT AT NEW ENTRY                   40000020
         ST        R3,CMLPTUP      CHANGE UP POINTER                    40020020
         DROPRUSE  R2,CML,R3       SET NEW ENTRY                        40040020
         ST        R2,CMLPTDWN     SET DOWN POINTER                     40060020
         ST        R4,CMLPTUP      SET UP POINTER                       40080020
         DROPRUSE  R3,CML,R4       CHANGE TOP ENTRY                     40100020
         IC        R0,CMLFLAG      SAVE FLAG                            40120020
         ST        R3,CMLPTDWN     SET DOWN POINTER                     40140020
         STC       R0,CMLFLAG      RESTORE FLAG                         40160020
*        GO TO FREECORE TO SET FLAG AND CREATE FCP IN NEW ENTRY         40180020
         B         FREECORE                                             40200020
         DROPR     R4,R7,R9                                             40220020
         TITLE     'CHECKOUT'                                           40240020
*        CHECKOUT SUBROUTINE                                            40260020
*                                                                       40280020
*        R7 SHOULD CONTAIN UCTSPLO                                      40300020
*        R8 IS RETURN                                                   40320020
*        CLOBBERS R0,R1,R2,R3,R4,R14,R15                                40340020
*                                                                       40360020
*        THIS SUBROUTINE CHECKS COMPLETION OF A SPILLOUT                40380020
*        DO NOT CALL UNLESS A SPILLOUT IS IN PROGRESS                   40400020
         USING     UCT,R9                                               40420020
         USING     RCL,R7                                               40440020
CHECKOUT SNAPOUT   'CHECKOUT'                                           40460020
         CHECK     UCTODECB        WAIT FOR END OF SPILLOUT             40480020
         L         R1,UCTDCB       LOAD DCB ADDRESS                     40500020
         USING     DCB,R1                                               40505025
         MVC       UCTTRBAL(2),DCBTRBAL SAVE THE TRACK BALANCE          40510025
         DROPR     R1                                                   40515025
         NOTE      (1)             FIND PRESENT LOCATION                40520020
         REF       R1                                                   40540020
         ST        R1,UCTONOTE     SAVE FOR NEXT SPILLOUT               40560020
         L         R3,RCLPT        POINT AT RECORD IN CORE              40580020
         IC        R0,RCLFLAG      PICK UP FLAG BYTE                    40600020
         SRDL      R0,8            RIGHT JUSTIFY FTTR                   40620020
         O         R1,=X'02000000' TURN ON DISK SW.                     40640020
         ST        R1,RCLFLAG      PLACE IN RCL                         40660020
         SR        R0,R0           CREATE 0                             40680020
         ST        R0,UCTSPLO      ZERO SPILLOUT POINTER                40700020
         USING     CML,R3                                               40720020
         L         R2,CMLPTDWN     PICK UP POINTERS FOR FREECORE        40740020
         L         R4,CMLPTUP                                           40760020
         B         FREECORE        FREE THE RECORD                      40780020
         DROPR     R3,R7,R9                                             40800020
         TITLE     ' '                                                  40820020
*********************************************************************** 40840020
*        LITERALS                                                       40860020
*                                                                       40880020
         LTORG                                                          40900020
         EJECT                                                          40920020
*********************************************************************** 40940020
*        THIS AREA IS WHERE THE UCTS AND UUCTS ARE PLACED AT INIT TIME  40960021
*                                                                       40980020
UCTS     CSECT                                                          41000021
*./      DELETE    SEQ1=41020020,SEQ2=41400020                          41400021
         EJECT                                                          41420020
*        THIS CODE DESCRIBES THE UTILITY CONTROL TABLE                  41440021
*        IT IS ALSO THE INITIALIZATION OF THE UCTS                      41460020
*                                                                       41480020
UCT      EQU       *                   PLACE INIT AS FIRST UCT          41500021
*        POINTERS TO RCL ENTRIES                                        41520020
UCTRCLN1 DC        F'0'            POINTER TO 1ST ENTRY ON RCL          41540027
UCTRNEXT DC        F'0'            POINTER TO RCL ENTRY OF NEXT RECORD X41560027
                                   TO BE READ OR WRITTEN                41580020
UCTRLAST DC        F'0'            POINTER TO RCL ENTRY OF LAST RECORD X41600027
                                   WRITTEN ON FILE + 1                  41620020
UCTNEXTO DC        F'0'            POINTER TO RCL ENTRY OF NEXT RECORD X41640027
                                   TO BE SPILLED OUT                    41660020
UCTSPLI  DC        F'0'            POINTER TO RCL ENTRY OF RECORD      X41680020
                                   BEING SPILLED IN                     41700020
UCTSPLO  DC        F'0'            POINTER TO RCL ENTRY OF RECORD      X41720020
                                   BEING SPILLED OUT                    41740020
*        STATISTICS GATHERING ACCUMULATORS                              41760020
          AIF      (&NOTSTAT).UCT1 ARE WE GATHERING STATISTICS          41780020
UCTRDCNT DC        PL5'0'          READ COUNTER                         41800020
UCTWRCNT DC        PL5'0'          WRITE COUNTER                        41820020
UCTSICNT DC        PL5'0'          SPILLIN COUNTER                      41840020
UCTSOCNT DC        PL5'0'          SPILLOUT COUNTER                     41860020
UCTPRCNT DC        PL5'0'          POINTR COUNTER                       41880020
UCTPWCNT DC        PL5'0'          POINTW COUNTER                       41900020
UCTNTCNT DC        PL5'0'          NOTE COUNTER                         41920020
.UCT1    ANOP                                                           41940020
*        MISC STUFF                                                     41960020
         READ      UCTIDECB,SF,MF=L SPILLIN DECB DEFINITION             41980020
UCTIRL   DC        F'0'            SPILLIN RECORD LENGTH                42000027
UCTRRL   DC        F'0'            RECORD LENGTH OF LAST THING READ     42020027
UCTWRADD DC        F'0'            ADDRESS OF LAST WRITE                42040027
UCTWRLTH DC        F'0'            LENGTH OF LAST WRITE                 42060027
         WRITE     UCTODECB,SF,MF=L SPILLOUT DECB DEFINITION            42080020
UCTONOTE DC        F'0'            NOTE OF LAST SPILLOUT                42100020
UCTMAXRL DC        F'0'            MAXIMUM RECORD LENGTH SPILLED OUT    42120020
UCTFLAG  DC        F'0'            COMPARISON FLAG FOR SPILLOUT OF READ 42140020
UCTTRBAL DC        X'FF00'             SAVED TRACK BALANCE AFTER WRITE  42150025
UCTSW    DC        X'00'                                                42160020
*        BIT       PURPOSE                                              42180020
*        0         ON FOR READ, OFF FOR WRITE                           42200020
*        1         ON IF SPILLOUT MAY BE POSSIBLE AT READ TIME          42220020
*        2         ON IF POINT NECESSARY BEFORE SPILLOUT                42240021
UCTDCB   DC        F'0'            ADDRESS OF DCB FOR THIS UTILITY      42260027
         DS        0D              UCT MUST BE DOUBLE WORDS LONG        42280020
UCTLNGTH EQU       *-UCT                                                42300020
         SPACE     3                                                    42300221
         DC        ((&MAXUT-1+&SERUSE)*UCTLNGTH)X'00'  SP FOR MORE UCTS 42300427
         EJECT                                                          42300621
*        THIS CODE DESCRIBES THE UNBUFFERED UTILITY CONTROL TABLE       42301221
*        INITIALIZATION OF A UUCT IS THE SAME AS FOR A UCT              42301821
*                                                                       42302421
UUCT     EQU       UCT                                                  42303021
UUCTRDEB EQU       UCTIDECB         READ DECB DEFINITION                42303621
UUCTMAXR EQU       UCTMAXRL        MAX RECORD LENGTH WRITTEN            42304221
UUCTWDEB EQU       UCTODECB         WRITE DECB DEFINITION               42304821
*        STATISTICS GATHERING ACCUMULATORS                              42305421
         AIF       (&NOTSTAT).UUCT                                      42306021
UUCTRDNO EQU       UCTRDCNT                                             42306621
UUCTWRNO EQU       UCTWRCNT                                             42307221
UUCTPRNO EQU       UCTPRCNT                                             42307821
UUCTPWNO EQU       UCTPWCNT                                             42308421
UUCTNTNO EQU       UCTNTCNT                                             42309021
.UUCT    ANOP                                                           42309621
UUCTSW   EQU       UCTSW                                                42310221
*        BIT       PURPOSE                                              42310821
*        0         ON FOR READING, OFF FOR WRITTING                     42311421
UUCTDCB  EQU       UCTDCB          ADDRESS OF DCB FOR THIS UTILITY      42312021
UUCTLTH  EQU       UCTLNGTH                                             42312621
         EJECT                                                          42320020
*********************************************************************** 42325021
*        DSECT DESCRIPTIONS OF TABLES                                   42330021
*                                                                       42335021
*        THIS DSECT DESCRIBES A RECORD CONTROL LIST ENTRY               42340020
*                                                                       42360020
RCL      DSECT                                                          42380020
RCLFLAG  DC        X'00'                                                42400027
*        BITS 0 TO 5 ARE COUNT OF NUMBER OF TIMES RECORD IS READ OR    X42420020
                   SPILLED IN.                                          42440020
*        BIT 6     ON IF RECORD ON DISK                                 42460020
*        BIT 7      ON IF RECORD NOT IN CORE                            42480020
RCLNOTE  DC        AL3(0)          IF RECORD IN CORE THIS CONTAINS     X42500027
                                   POINTER TO RCP, OTHERWISE IS TTR     42520020
RCLPT    EQU       RCL             USED FOR FULL WORD OPERATIONS ON    X42540020
                                   RCLFLAG AND RCLNOTE                  42560020
*        THE RCL GROWS DOWNWARDS IN CORE                                42580020
*        THE BOTTOM CAN GROW DOWNWARDS (SEE RCLGROW) BUT THE LIST CAN  X42600020
                   NEVER BECOME SHORTER AGAIN                           42620020
*        THE WHOLE LIST CAN BE RELOCATED UPWARDS IF A GROW UP IS DONE   42640020
*        THE RCL ENTRIES FOR THE DIFFERENT UTILITIES ALTERNATE          42660020
*        I.E.      UT1 R1                                               42680020
*                  UT2 R1                                               42700020
*                  UT3 R1                                               42720020
*                  UT1 R2                                               42740020
*                  UT2 R2                                               42760020
*                  UT3 R2                                               42780020
*                   ETC                                                 42800020
*                                                                       42820020
*        TOTAL LENGTH OF RCL ENTRY = 1F = 4 BYTES                       42840020
         EJECT                                                          42860020
*        THIS DSECT DESCRIBES THE CORE MANAGEMENT LIST ENTRIES          42880020
*                                                                       42900020
CML      DSECT                                                          42920020
CMLFLAG  DC        X'00'                                                42940027
*        =M        I/O RECORD                                           42960020
*        =M0       FREE CORE                                            42980020
*        =M1       RCL SPACE OR TOP OF MY MEMORY IF NO RCL              43000020
*        =N        END OF LIST (CORELIST)                               43020020
         DC        AL3(0)          CHAIN DOWN TO NEXT CML               43040027
CMLPTDWN EQU       CML             USED FOR FULL WORD OPERATIONS ON    X43060020
                                   CMLFLAG AND DOWN CHAIN POINTER       43080020
CMLPTUP  DC        F'0'            CHAIN UP TO NEXT CML                 43100027
*                                                                       43120020
*        TOTAL LENGTH OF CML = 1D = 8 BYTES                             43140020
         EJECT                                                          43160020
*        THIS DSECT DESCRIBES THE RECORD CONTROL PREFIX                 43180020
*                                                                       43200020
RCP      DSECT                                                          43220020
         DC        D'0'            CML ENTRY                            43240027
RCPRL    DC        H'0'            LENGTH OF RECORD                     43260027
RCPNOTE  DC        3X'00'          TTR OF NOTE                          43280027
         DC        AL3(0)          POINTER BACK TO RCL                  43300027
RCPPT    EQU       *-4             FULL WORD ADDRESSING OF ABOVE        43320020
RCPDATA  DC        0D'0'           DATA RECORD FOLLOWS                  43340027
*                                                                       43360020
*        TOTAL LENGTH OF RCP = 2D = 16 BYTES                            43380020
         EJECT                                                          43400020
*        THIS DSECT DESCRIBES THE FREE CORE PREFIX                      43420020
*                                                                       43440020
FCP      DSECT                                                          43460020
         DC        D'0'            CML ENTRY                            43480027
FCPPTDWN DC        F'0'            CHAIN DOWN TO NEXT FCP               43500027
FCPPTUP  DC        F'0'            CHAIN UP TO NEXT FCP                 43520027
*                                                                       43540020
*        TOTAL LENGTH OF FCP = 2D = 16 BYTES                            43560020
         EJECT                                                          43580020
*        THIS DSECT DESCRIBES THE DCB                                   43600020
*                                                                       43620020
DCB      DSECT                                                          43640020
DCBDEVT  EQU       DCB+17          DEVICE TYPE                          43660020
DCBTRBAL EQU       DCB+18              TRACK BALANCE AFTER WRITE        43670025
DCBOFLGS EQU       DCB+48              OPEN FLAGS                       43675025
*./      DELETE    SEQ1=43680020,SEQ2=43880020                          43880021
         EJECT                                                          43900020
*********************************************************************** 43920020
*        AND NOW FOR MY LAST ACT...                                     43940020
*                                                                       43960020
*                                                                       43970026
*                                                                       43972026
         END       ASMGBUFF                                             43980020
./ ADD NAME=ASMGFD
FD       TITLE     'ASMG     DIAGNOSTIC PROCESSOR'                      00020021
         ISEQ  73,78                                                    00040021
         SPACE 3                                                        00060020
*./      DELETE    SEQ1=00080020,SEQ2=00760020                          00760027
         COPY      ASMGSET                                              00780020
ASMGFD   START                                                          00800020
         PRINT      NOGEN                                               00820020
         FDIMEN                                                         00840020
         PRINT GEN                                                      00860020
         SPACE 2                                                        00880020
*TITLE 'ASMGFD' ...  DIAGNOSTIC PROCESSOR                             * 00900020
*FUNCTION/OPERATION-                                                  * 00920020
*  ASMGFD LISTS ALL THE ERROR NUMBERS AND THEIR ASSOCIATED ERROR      * 00940020
*   MESSAGE. IT PRINTS OUT THE NUMBER OF STATEMENTS FLAGGED,          * 00960020
*   AND HIGHEST SEVERITY CODE.                                        * 00980020
*ENTRY POINTS- ASMGFD  CALLED VIA-                                    * 01000020
*        L     GR15,=V(ASMGFD)                                        * 01020020
*        BR    GR15                                                   * 01040020
*INPUT- ERROR RECORDS TYPE 0, THE FORMAT IS-                          * 01060020
*        BYTE       CONTENTS                                          * 01080020
*         0-1       LENGTH OF RECORD                                  * 01100020
*          2        TYPE RECORD  (ALWAYS 0)                           * 01120020
*          3        NUMBER OF ERRORS (MAXIMUM OF 16)                  * 01140020
*         4-5       STATEMENT NUMBER                                  * 01160020
*         6-7       ERROR                                             * 01180020
*               6        ERROR NUMBER                                 * 01200020
*               7        COLUMN POINTER (ZERO IF NO POINTER)          * 01220020
*         8-37      REST OF THE ERRORS                                * 01240020
*OUTPUT- ERROR MESSAGE, NUMBER OF STATEMENTS FLAGGED MESSAGE, HIGHEST * 01260020
*        SEVERITY MESSAGE, CARDS READ AND LINES PRINTED MESSAGES.       01280026
*EXTERNAL ROUTINES- NONE                                              * 01300020
*EXITS- RETURNS TO ASMGRTA VIA-                                       * 01320020
*        L     GR14,CTMRSRTN(,ACT)                                      01340026
*        BR    GR14                                                   * 01360020
*TABLES/WORKAREAS-                                                    * 01380020
*   PRSAVE     SAVE AREA FOR REGISTERS FOR SYSLSTD                    * 01400020
*   HEDN       FIRST HEADING LINE                                     * 01420020
*   HEDR       SECOND HEADING LINE                                    * 01440020
*   SVMES      HIGHEST SEVERITY MESSAGE                               * 01460020
*   PCMSG      LINES PRINTED MESSAGE                                  * 01480020
*   ERCTM      STATEMENT FLAGGED MESSAGE                              * 01500020
*   BUFR       DETAIL OUTPUT BUFFER                                   * 01520020
*   ERRBUF     INPUT BUFFER AREA                                      * 01540020
*   ERRTAB     I/O CONTROL TABLE                                      * 01560020
*   IOSAVE     O/S SAVE AREA                                          * 01580020
*   PTRTBL     HALF WORDS OF RELATIVE POINTERS TO ERROR MESSAGES      * 01600020
*   E0001-E0117     ERROR MESSAGES                                    * 01620027
*              BYTE 0   LENGTH OF ERROR MESSAGE                       * 01640020
*              BYTE 1   SEVERITY CODE                                 * 01660020
*              BYTE 2   BEGINNING OF ERROR MESSAGE                    * 01680020
*                                                                     * 01700020
         EJECT                                                          01720020
STMT     EQU   X'02'                    STATEMENT NUMBER OPTION         01722025
NUM      EQU   X'04'                    LINE NUMBER OPTION              01724025
TERM     EQU   X'08'                    TERM OPTION                     01726025
ON       EQU   X'FF'                    NORMAL SWITCH SETTING           01728025
OFF      EQU   X'00'                    NORMAL SWITCH SETTING           01730025
GEN      EQU   C'+'                     A GENERATED LINE MARKER         01732025
L1F      EQU   1                        NUMBER OF BYTES TO MOVE         01734025
L2D      EQU   2                        NUMBER OF BYTES TO MOVE         01736025
L8C      EQU   8                        NUMBER OF BYTES TO MOVE         01738025
L3B      EQU   3                        NUMBER OF BYTES TO MOVE         01740025
MLG      EQU   120-1                    LENGTH OF BLANKING              01742025
MKF      EQU   X'10'                    MASK FOR SYSPRINT               01744025
L4C      EQU   4                        NUMBER OF BYTES TO COMPARE      01746025
L4D      EQU   4                        OFFSET IN AN AREA               01748025
L2E      EQU   2                        NUMBER OF BYTES TO COMPARE      01750025
L3H      EQU   3                        NUMBER OF BYTES TO MOVE         01752025
L16      EQU   16                       NUMBER OF BYTES TO MOVE         01760025
L7A      EQU   7                        OFFSET IN AN AREA               01762025
L102     EQU   102                      NUMBER OF BYTES TO MOVE         01764025
L111     EQU   111                      NUMBER OF BYTES TO MOVE         01766025
MKI      EQU   X'80'                    LAST RECORD MASK                01768025
L2F      EQU   2                        OFFSET IN AN AREA               01770025
L2G      EQU   2                        NUMBER OF BYTES TO MOVE         01772025
L1G      EQU   1                        OFFSET IN AN AREA               01774025
L119     EQU   119                      NUMBER OF BYTES TO MOVE         01776025
L120     EQU   120                      NUMBER OF BYTES TO MOVE         01778025
L121     EQU   121                      NUMBER OF BYTES TO MOVE         01780025
L2H      EQU   2                        OFFSET IN AN AREA               01782025
L5       EQU   5                        NUMBER OF BYTES TO MOVE         01784025
L81      EQU   81                       NUMBER OF BYTES TO MOVE         01786025
L8D      EQU   8                        NUMBER OF BYTES TO MOVE         01788025
L73      EQU   73                       NUMBER OF BYTES TO MOVE         01790025
*                                                                       01792025
GRH      EQU   13                       OS SAVE AREA POINTER            01794025
GR14     EQU   14                       GENERAL REGISTER 14             01796025
GR15     EQU   15                       GENERAL REGISTER 15             01800020
         SPACE 3                                                        01820020
         LR    FRB,GRY                  TRANSFER ENTRY REG AS THE BASE  01840026
         USING ASMGFD,FRB               TELL THE ASSEMBLER WHICH BASE   01860026
         ENTRYOUT  FD,CSECT=GGECT                                       01880020
         MVC       HDECKID(8),CTITLE(ACT) MOVE DECK I.D. TO HEADER      01900027
         MVC       HDATE(9),CTDATE(ACT)   MOVE DATE INTO HEADER         01904025
         LA        GRA,1               LOAD ONE IN A REGISTER           01908025
         ST        GRA,YLCNT           INITIALIZE LINES FOR NEW PAGE    01912025
*                                                                       01920026
         L         GRA,ADLIST1(,ACT)   POINT TO LIST1 IN ASMGASM        01930025
         TM        CTTRMI(ACT),TERM    IS TERM OPTION SPECIFIED .Q      01932025
         BZ        NODNEMES            NO, DON'T PRINT FINAL MESSAGE    01934025
MNO      DS        0H                                                   01936025
         MVC       BUFR+1(L'TMSG),TMSG BUFFER AREA                      01938025
         MVC       BUFR+L'TMSG+2(8),CTITLE(ACT)  ADD PROGRAM I.D.       01940027
         MVC       BUFR+30(8),L1PRTIME(GRA)  MOVE TIME TO HEADING LINE  01942027
         MVC       BUFR+41(9),L1PRDATE(GRA)  MOVE DATE TO HEADING LINE  01944027
         LA        SP1,BUFR            ADDR TO PUT                      01946025
         BAL       SRR,SYSTRMD         ASSEMBLER (G) DONE MSG           01948025
*./      DELETE    SEQ1=01950025,SEQ2=01952025                          01952027
         MVC       BUFR,L1BLANKS(GRA)  BLANK PRINT AREA                 01954027
NODNEMES DS        0H                  GRA POINTS TO LIST1 IN ASMGASM   01956025
         LA        GRB,ESTART          POINT TO START OF ERRORS         01958027
         MVC       E0115-ESTART+1(1,GRB),L1UPCOND(GRA)  SET UPCOND SEV  01959027
         CLI       L1SYNERR(GRA),X'00' ANY ERROR SWITCHES ON .Q         01960026
         BZ        NOERSW              NO, BRANCH AROUND                01980025
         LA        GRB,X'80'           SET TO CHECK FIRST SWITCH        02000022
         LA        GRC,BRANCHES        ROUTINES FOR VARIOUS SWITCHES    02020020
TST      DS        0H                                                   02040026
         TM        L1SYNERR(GRA),X'80'+*-*  TEST A SWITCH               02060026
         BCR       1,GRC        BOR    GO TO APPROPRIATE ROUTINE        02080026
         CLC       CTSEVCOD(1,ACT),SVCODE  HIGHEST SO FAR .Q            02082026
         BNL       BFBR                NO THEN SKIP IT                  02084026
         MVC       CTSEVCOD(1,ACT),SVCODE  YES THEN REPLACE IT          02086026
         MVI       SVCODE,X'00'        RESET THE TEMP CODE              02088026
BFBR     DS        0H                                                   02100026
         LA        GRC,4(,GRC)         SET TO NEXT ROUTINE              02120026
         SRA       GRB,1               NEXT SWITCH TO TEST              02140026
         STC       GRB,TST+1           IS PUT INTO CODING               02160026
         BNZ       TST                 BRANCH IF NOT LAST SWITCH TO TST 02180026
*                                                                       02200026
         MVI       TST+1,X'01'         RESTORE CODING                   02220026
         LH        GRB,L1SYNERR(,GRA)  GET ERROR SWITCHES               02240027
         N         GRB,=X'00000801'    KEEP SOME, FORGET SOME           02250027
         XC        L1SYNERR(10,GRA),L1SYNERR(GRA)  ZERO SW AND COUNTERS 02260027
         STH       GRB,L1SYNERR(,GRA)  RESTORE AS REQUIRED              02270027
*./      DELETE    SEQ1=02280026,SEQ2=02300026                          02300027
*./      DELETE    SEQ1=02320020,SEQ2=02400020                          02400025
NOERSW   DS    0H                                                 V7A44 02420028
         TM    CTYFLGI(ACT),X'08'       YFLAG OPTION IN EFFECT    V7A44 02422028
         BNO   ML00                     BRANCH IF NOT             V7A44 02424028
         TM    F8YDC(ACT),X'FF'         REL Y-CONS ENCOUNTERED .Q V7A44 02426028
         BZ    ML00                     NO                              02440020
         MVI   MLSW,X'FF'               YES, SET ERROR 58 OR 46         02460020
         LA    SP1,=AL1(0,0,0,1,0,0,46,0)    MESSAGE 46                 02480020
         BAL   SP2,ML01S                PUT OUT MESSAGE 46              02500020
ML00     DS    0H                                                       02520026
         LH    SP1,CTCERR(,ACT)         GET NUMBER OF ERROR RECORDS     02540026
         LTR   SP1,SP1                  WERE THERE ANY .Q               02560026
         BNZ   ML00A                    YES, THEN PROCESS               02580026
         L     SP1,CTLINECT(,ACT)       GET LINES LEFT ON THIS PAGE     02600026
         ST    SP1,YLCNT                AND SET IF FOR DIAGNOSTICS      02620026
         B     ML102                    GO ENDUP ASMGFD WITH STATS      02640026
*                                                                       02660026
ML00A    DS    0H                                                       02680026
         L         GR1,BUFFPT(,ACT)    POINT AT FIRST ERROR RECORD      02700026
         MVC       ERRPT,CTRERR(ACT)   POINT ADDRESS                    02720020
         CNOP      2,4                                                  02740020
         BALR      GR0,GR1                                              02760020
         DC        A(12,0)                                              02780020
ERRPT    DC        F'0'                                                 02800027
ML00B    BAL   SP2,RDERR                GET OVERFLOW ERROR RECORD       02810025
ML01     L     SP2,ERRPTR               NEXT LOGICAL RECORD POINTER     02820025
         CLC   0(L4C,SP2),EOF           END OF DATA SET .Q              02822025
         BE    ML102                    YES, GO TERMINATE WITH STATS    02824026
         TM    CTTRMI(ACT),TERM         IS TERM OPTION ON .Q            02826025
         BZ    ML00E                    NO                              02828025
         L     GR1,=V(ERRCDL)                                           02830025
         CLC   LSTMTN(L2E),L4D(GR1)     HAS STMT NUMBER CHANGED         02832025
         BE    ML00G                    NO, STILL SAME STATEMENT        02834025
         BAL   SP2,TREDIT               YES, PUT SOURCE STATEMENT       02836025
         B     ML00F                    CONTINUE                        02838025
ML00G    BAL   SP2,TREDT                EDIT WITHOUT EXTRA SPACE        02840025
ML00F    L     GR1,=V(ERRCDL)           ERROR MESSAGE BUFFER ADDR       02842025
         ST    GR1,ERRPTR               REMEMBER IT                     02844025
ML00E    BAL   SRR,GETERR               RETRIEVE AN ERROR RECORD        02860025
*                                                                       02880020
ML01A    MVC   SAVWD+2(2),4(SP1)        GET STATEMENT NUMBER            02900025
         CLC   LSTMTN(2),SAVWD+2        HAS STATEMENT NO. CHANGED       02920020
         BE    ML01B                    NO, GO PROCESS                  02940020
         MVC   LSTMTN(2),SAVWD+2        SAVE NEW STATEMENT NUMBER       02960020
         L     GRX,ERCTR                STEP STATEMENTS IN ERROR        02980020
         LA    GRX,1(GRX)                COUNTER BY 1 AND SAVE FOR      03000020
         ST    GRX,ERCTR                LISTING                         03020020
ML01B    LTR   GR1,GR1                  ERROR RECORD (ERLI=0) .Q        03030025
         BZ    ML07                     NO, GET NEXT BLOCK              03040027
         L         GRX,SAVWD           GET STATEMENT NUMBER             03045025
         LTR       GRX,GRX             IS STMT NO 0                     03050023
         BZ        ML01S               DO NOT PRINT STMT NO IF SO       03055023
         BAL   SRR,CVTBTC               GO CONVERT NUMBER FOR LISTING   03060020
         MVC   STMNO(L5),WORD-1         MOVE STATEMENT NUMBER FOR PRINT 03080025
ML01S    EQU   *                        PRINT WITHOUT STNO              03100020
         MVC       ERCD(10),PRGTYP     MOVE PROGRAM TYPE TO MESSAGE     03120020
         SR    GRA,GRA                  ZERO REGISTER                   03140020
         LA    GRB,ERM(SP1)             SET POINTER TO ERROR CODES      03160020
         IC    GRA,ERCT(SP1)            GET ERROR COUNT                 03180020
         LTR   GRA,GRA                  IS COUNT ZERO                   03200020
         BNZ   ML02                     NO, GO OUTPUT ERROR MESSAGES    03220020
         LA    GRA,1                    YES, SET ERROR COUNT TO 1       03240020
         LA    GRC,6                    SET ERROR CODE TO PROCEDURE ERR 03260020
         B     ML03                     SKIP GETTING ERROR CODE         03280020
ML02     SR    GRC,GRC                                                  03300020
         IC    GRC,0(GRB)               GET ERROR CODE                  03320020
ML03     MVC   MSGBG(112),MSGBG-1       BLANK PRINT BUFFER              03340027
         LR    GRX,GRC                                                  03360020
         BAL   SRR,CVTBTC               GO CONVERT ERROR MESSAGE FOR    03380020
         OC    WORD(4),MASK             CHANGE BLANKS TO ZEROS          03400020
         MVC   ERNO(3),WORD+1           MOVE ERROR NUMBER TO PRINT      03420020
         LTR   GRC,GRC                  IS ERROR CODE ZERO              03440020
         BZ    ML031                    YES, BAD ERROR CODE             03460020
         BCTR  GRC,0                    REDUCE ERROR NUMBER BY 1        03480020
         AR        GRC,GRC             MULTIPLY BY 2                    03500020
         LA    GRY,PTRTBL(GRC)          POINT TO TABLE                  03520020
         LA    GRZ,ENDTBL               GET END OF TABLE LOCATION       03540020
         CR    GRY,GRZ                  IS NUMBER IN TABLE              03560020
         BL    ML04                     YES GO PUT MESSAGE              03580020
*                                                                       03600020
ML031    LH    GRD,ENDTBL               ERROR NUMBER NOT KNOWN          03620020
         LA    GRD,ESTART(GRD)          ERROR CODE                      03640027
         LA    GRY,MSGBG                SET POINTER FOR MESSAGE MOVE    03660020
         B     ML05                     CONTINUE                        03680020
ML04     LH    GRY,PTRTBL(GRC)          GET POINTER TO MESSAGE          03700020
         LA    GRD,ESTART(GRY)          SET POINTER TO MESSAGE          03720027
         LA    GRY,MSGBG                SET POINTER FOR MESSAGE MOVE    03740020
         CLI   1(GRB),0                 IS COLUMN POINTER ZERO          03760020
         BE    ML05                     YES, GO PUT MESSAGE             03780020
*                                                                       03800020
         SR    GRX,GRX                  NO, PUT OUT COLUMN POINTER      03820020
         IC    GRX,1(,GRB)              GET POINTER                     03840027
         BAL   SRR,CVTBTC               GO CONVERT FOR LISTING          03860027
         MVC   MSGBG(25),PTRMSG         MOVE COLUMN POINTER MESSAGE     03880027
         MVC   MSGBG+20(3),WORD+1       MOVE COLUMN POINTER             03900027
         LA    GRY,25(,GRY)             STEP POINTER TO WHERE TO PUT    03920027
*                                       MESSAGE BY 20 BYTES             03940027
ML05     DS    0H                                                       03960027
         IC    GRX,0(,GRD)              GET MOVE LENGTH-1 OF MESSAGE    03980027
         EX    GRX,MVMSG                MOVE MESSAGE TO BUFR            04000027
         SR    GRX,GRX                  PROCESS SEVERITY CODE.          04020027
         CLC   CTSEVCOD(1,ACT),1(GRD)   COMPARE SEVCODE OF CURRENT      04040027
         BNL   ML051                    MESSAGE TO HIGHEST CODE SO FAR  04060027
         MVC   CTSEVCOD(1,ACT),1(GRD)   ENCOUNTERED(INCLUDING MNOTE)    04080027
ML051    DS    0H                                                       04100027
         LA    SP1,BUFR                 SET POINTER TO PRINT BUFFER     04120027
         BAL   SRR,WRLST                GO LIST MESSAGE                 04140027
         MVC   DIAGSAVE,STMNO           SAVE STMTNO/ERR TYPE            04160027
         MVI   BUFR+1,C' '              CLEAR FIRST CHARACTER     V7A33 04170028
         MVC   BUFR+2(9),ERCD           MOVE OVER ERROR NUMBER          04180027
         MVC   BUFR+11(112),MSGBG       AND ERROR TEXT                  04182027
*                                       BECAUSE TERMINALS ARE SLOW      04184027
ML06     DS    0H                                                       04186027
         BAL   SRR,SYSTRMD              GO LIST SYSTERM ERROR MSG       04188027
         MVC   STMNO(L'DIAGSAVE),DIAGSAVE  RESTORE STMTNO/ERR TYPE      04190027
         MVI   BUFR,X'00'               SET SINGLE SPACE                04200020
         TM    MLSW,X'FF'               IS THIS ERROR 58 OR 46          04220020
         BC    7,MLWW                   YES, BRANCH                     04240020
         LA    GRB,2(GRB)               STEP POINTER TO NEXT ERROR CODE 04260020
         BCT   GRA,ML02                 BRANCH BACK IF MORE MESSAGES    04280025
         L     SP2,ACTERRPT                                             04290025
         TM    L2F(SP2),MKI             LAST RECORD BIT .Q              04292025
         BZ    ML01                     NO, RETRIEVE NEXT ERR RCD       04294025
ML07     DS    0H                                                 V7A30 04295028
         L     SP2,=V(TERLI)            YES, READ NEXT ERROR RCD        04296025
         ST    SP2,ERRPTR               AND SET NEW RECORD POINTER      04298025
         B     ML00B                    GO AND DO THE READ              04300025
MLWW     MVI   MLSW,X'0'                SET NOT ERROR 58 OR 46          04320020
         BR    SP2                      RETURN TO CALLER                04340026
ML102    DS    0H                                                       04345026
         L     SP1,YLCNT                GET NUMBER OF LINES LEFT        04350026
         S     SP1,=F'11'               DECREMENT BY TRAILER LENGTH     04355026
         BP    ML103                    BRANCH IF STILL ROOM            04360026
         LA    SP1,1                    GET ONE IN A REGISTER           04365026
         ST    SP1,YLCNT                SET UP FOR A NEW PAGE           04370026
         MVC   HEAD2+2(50),HEAD2+1      BLANK SECOND HEADER INFO        04375026
ML103    DS    0H                                                       04380026
*                                                                       04385026
*                                                                       04390026
*        PRINT ERROR SUMMARY RECORDS                                    04395026
*                                                                       04400026
ML10     DS        0H                                                   04405026
         L         GR2,ADLIST1(,ACT)   POINT TO LIST1 IN ASMGASM        04410026
         MVC       BUFR,L1BLANKS(GR2)  BLANK SYSPRINT BUFFER            04415026
         L         GRX,ERCTR           GET NUMBER OF ERROR RECORDS      04420026
         LTR       GRX,GRX             WERE THERE ANY ERRORS            04425026
         BNZ       ML101               BRANCH IF YES                    04430026
         MVC       BUFR(39),ERCTM+2    'NO STATEMENTS FLAGGED'          04435026
         MVC       BUFR(3),CAC         'NO'                             04440026
         B         ML112               GO AND PRINT IT                  04445026
ML101    DS        0H                                                   04450026
         MVC       BUFR(42),ERCTM-1    ENTER STMTS FLAGGED MESSAGE      04455026
         BCT       GRX,ML101A          TEST FOR ONLY 1 ERROR RECORD     04460026
         MVC       BUFR+16(27),BUFR+17 BLANK 'S' ON 'STATEMENTS'        04465026
ML101A   DS        0H                                                   04470026
         LA        GRX,1(,GRX)         RESTORE STMTS FLAGGED            04475027
         BAL       SRR,CVTBTC          CONVERT ERROR COUNT              04480026
         MVC       BUFR+2(4),WORD      FOR LISTING MESSAGE              04485026
ML112    DS        0H                                                   04490026
         LA        SP1,BUFR            GET MESSAGE LOCATION             04495026
         BAL       SRR,WRLST           PRINT NUMBER OF ERRORS           04500026
         BAL       SRR,TBLANK          LEAVE A LINE ON SYSTERM          04505026
         BAL       SRR,SYSTRMD         SYSTERM NUMBER OF ERRORS         04510026
*                                                                       04515026
ML100    DS        0H                                                   04520026
         SR        GRX,GRX             CLEAR WORK REGISTER        V7A18 04522028
         IC        GRX,CTSEVCOD(,ACT)  GET SEVERITY CODE                04525026
         LTR       GRX,GRX             IS IT ZERO .Q                    04530026
         BZ        ZSVCD               IF SO, DON'T PRINT SEV CODE      04535026
         BAL       SRR,CVTBTC          CONVERT TO DECIMAL               04540026
         MVC       BUFR(42),SVMES      MOVE SEVERITY MESSAGE            04545026
         MVC       BUFR+32(10),L1BLANKS+1(GR2)  BLANK PART OF RECORD    04550026
         MVC       BUFR+2(4),WORD      PUT IN SEVERITY CODE       V7A18 04555028
         LA        SP1,BUFR            POINT TO MESSAGE                 04560026
         BAL       SRR,WRLST           PRINT SEVERITY MESSAGE           04565026
         BAL       SRR,SYSTRMD         SYSTERM SEVERITY MESSAGE         04570026
ZSVCD    DS        0H                                                   04575026
*                                                                       04580026
*        PRINT OUT CARDS READ/LINES OUTPUT STATISTICS                   04585026
*                                                                       04590026
         MVI       BUFR,X'03'          LEAVE THREE LINES AGAIN          04595026
STATLOP1 DS        0H                                                   04600026
         SR        GRA,GRA             ZERO OFFSET IN DCB ADDR LIST     04605026
         MVC       BUFR+1(L'BUFR-1),L1BLANKS+1(GR2)  BLANK OUTPUT LINE  04610026
         LA        SP1,BUFR            POINT TO OUTPUT LINE             04615026
STATLOP2 DS        0H                                                   04620026
         L         GR1,L1DCBADS(GRA,GR2)  GET ADDRESS OF NEXT DCB       04625026
TYPESW   TM        L1DCBPAD(GR1),X'01'+*-*  IS IT TYPE WE WANT .Q       04630026
         BZ        STATLOP3            BRANCH IF NOT                    04635026
         L         GRX,L1DCBRCT(,GR1)  GET NUMBER OF RECORDS            04640026
         LTR       GRX,GRX             IS IT ZERO .Q                    04645026
         BZ        STATLOP3            BRANCH IF SO                     04650026
         BAL       SRR,CVTBTC          CONVERT TO CHARACTER             04655026
         SR        GRX,GRX             ZERO A REGISTER                  04660026
         ST        GRX,L1DCBRCT(,GR1)  ZERO RECORD COUNT                04665026
         MVC       1(5,SP1),WORD-1     MOVE IN COUNT                    04670026
         LA        GRB,L1DDNAM(GRA,GRA)  GET DDNAME OFFSET IN LIST1     04675026
         AR        GRB,GR2             POINT TO DDNAME                  04680026
         MVC       7(8,SP1),0(GRB)     ADD DDNAME                       04685026
         LA        SP1,14(SP1)         BUMP TO END OF DDNAME            04690026
DDNAMLOP DS        0H                                                   04695026
         CLI       0(SP1),BLANK        IS THIS THE END .Q               04700026
         BNE       DDNAMOUT            BRANCH IF YES                    04705026
         BCT       SP1,DDNAMLOP        DECREMENT AND BRANCH             04710026
DDNAMOUT DS        0H                                                   04715026
         MVC       2(L'RECMESS,SP1),RECMESS  ADD TEXT                   04720026
         LA        SP1,L'RECMESS+2(,SP1)  NEW END OF STRING             04725026
         MVI       0(SP1),C','         FOLLOWED BY A COMMA              04730026
STATLOP3 DS        0H                                                   04735026
         LA        GRA,4(,GRA)         POINT TO NEXT DCB IN LIST        04740026
         LTR       GR1,GR1             AT END OF DCB LIST .Q            04745026
         BP        STATLOP2            BRANCH IF NOT                    04750026
         MVI       0(SP1),C' '         BLANK LAST COMMA                 04755026
         LA        SP1,BUFR            LINE TO PRINT                    04760026
         BAL       SRR,WRLST           GO PRINT IT                      04765026
         TM        TYPESW+1,X'02'      HAVE WE DONE OUTPUT .Q           04770026
         BO        STATEND             BRANCH IF YES                    04775026
         MVI       TYPESW+1,X'02'      DO OUTPUT RECORDS NOW            04780026
         MVC       RECMESS(6),=C'OUTPUT'  CHANGE MESSAGE TEXT           04785026
         MVI       BUFR,X'00'          SINGLE SPACE                     04790026
         B         STATLOP1            DO IT AGAIN                      04795026
STATEND  DS        0H                                                   04800026
*                                                                       04805026
*        DO WE GO TO ASMGFEX .Q                                         04810026
*                                                                       04815026
TESTFEX  DS        0H                                                   04820026
         TM        L1PBYT2(GR2),X'20'  EXECUTE OPTION SPECIFIED .Q      04825026
         BZ        RETFEX              NO, GO AROUND BRANCH TO FEX      04830026
         L         GR1,LSTDCB(,ACT)    POINT TO SYSPRINT DCB            04835026
         OI        L1DCBCC(GR1),X'C0'  SET ASA CARRIAGE CONTROL FOR FEX 04840027
         ST        FRB,PRSAVE          SAVE BASE REGISTER               04860020
         L         GR2,=V(ASMGFEX)     ENTRY TO FEX                     04880026
         BALR      GR14,GR2            BRANCH TO FEX WITH RETURN        04900026
         SPACE     2                                                    04920026
*                                                                       04940026
         USING     *,GR14              GR14 LOADED WITH * BY FEX        04960020
         L         FRB,PRSAVE          RESTORE BASE REGISTER            04980020
         DROP      GR14                                                 05000020
RETFEX   DS    0H                                                       05010026
         LA    GRH,IOSAVE               SET UP OS SAVE AREA             05020020
         L     GR1,LSTDCB(,ACT)         POINT TO SYSPRINT DCB           05025027
         NI    L1DCBCC(GR1),X'7F'       TURN OF ASA INDICATION          05030027
         OI    L1DCBCC(GR1),X'40'       TURN ON NUMERIC INDICATOR       05032027
         SR    GR0,GR0                  ZERO A WORK REGISTER            05035026
         ST    GR0,L1DCBRCT(,GR1)       ZERO SYSPRINT RECORD COUNT      05038026
         B     ARND                     CLOSE PHASE                     05040020
CVTBTC   DS    0H                                                       05060027
         CVD   GRX,CVDA                 CONVERT BINARY TO DECIMAL       05080027
         MVC   WORD-2(6),=X'402020202120'  EDIT MASK WITH BLANKS        05100027
         ED    WORD-2(6),CVDA+5         EDIT IN THE NUMBER              05120027
         BR    SRR                      AND RETURN                      05140027
*./      DELETE    SEQ1=05160020,SEQ2=05260020                          05260027
*                                                                       05280020
GETERR   L     SP2,ERRPTR               LOGICAL RECORD PTR              05300020
         ST    SP2,ACTERRPT             SAVE LOGICAL RECORD POINTER     05320025
         MVC   ERLI(L2G),0(SP2)         RETRIEVE RLI                    05340025
*./      DELETE    SEQ1=05360020,SEQ2=05500020                          05500025
         LH    GR1,ERLI                                                 05520020
         LR    GR2,SP2                  SAVE REC PTR                    05540020
       AR      GR2,GR1                  ADVANCE TO NEXT RECORD          05560020
         ST    GR2,ERRPTR               RESTORE PTR                     05580020
         LR    SP1,SP2                  SET POINTER TO ERROR RECORD     05600020
         BR    SRR                      EXIT                            05620020
*./      DELETE    SEQ1=05640020,SEQ2=05720020                          05720025
ERRPTR   DC    V(TERLI)                 LOGICAL RECORD POINTER          05740025
ACTERRPT DC    F'0'                     ACTUAL LOGICAL RECORD POINTER   05750027
EOF      DC    4X'7F'                   EOF INDICATOR                   05760020
ERLI     DC    H'0'                     LENGTH OF RECORD                05780020
DIAGSAVE DC    CL20' '                  STMT NUMBER SAVE AREA           05800027
         SPACE     3                                                    05820020
ARND     L         GR1,BUFFPT(0,ACT)   TCLOSE SYSUT1                    05840020
         CNOP      2,4                                                  05860020
         BALR      GR0,GR1                                              05880020
         DC        A(24,0,1)                                            05900020
         SR        GR15,GR15                                            05920020
         IC        GR15,CTSEVCOD(ACT)  RC  =  HIGHEST SEVCODE           05940020
         L         GR2,ADLIST1(,ACT)   GET ADDRESS OF LIST1 IN ASM      05941025
         C         GR15,L1SAVECC(,GR2) IS THIS HIGHEST CC SO FAR        05941525
         BNH       *+8                 NO, PROCEED                      05942025
         ST        GR15,L1SAVECC(,GR2) YES, SAVE HIGHEST SO FAR         05942525
         TM        L1PBYT1(GR2),X'10'  IS BATCH ON .Q                   05943025
         BO        CHECKEX             YES, CHECK FOR EXECUTE           05943525
         TM        L1SINSW(GR2),X'80'  HAVE WE HIT END OF FILE .Q       05944025
         BO        RETURN              YES, THEN WE'RE DONE             05944525
         MVI       BUFR+1,BLANK        INSERT A BLANK                   05944626
         MVC       BUFR+2(L'BUFR-2),BUFR+1  AND MOVE IT ACROSS          05944826
         MVC       BUFF+1(L'MSUNPROC),MSUNPROC  TEXT OF ERROR MESSAGE   05945027
         MVC       BUFF+23(8),L1DDNAM+2*L1SIN(GR2)   PLACE SYSIN DDNAME 05945227
         MVC       BUFF+39(8),L1DDNAM+2*L1SUP(GR2)   AND SYSUP DDNAME   05945427
         TM        L1PBYT2(GR2),X'40'  WAS UPDATE SPECIFIED .Q          05945527
         BO        TWOFILES            BRANCH IF YES                    05945627
         MVI       BUFF+7,C'5'         CHANGE TO ASMG205                05945827
         MVC       BUFF+32(30),BUFF+48 BLANK SYSUP INFORMATION          05946027
TWOFILES DS        0H                                                   05946227
         MVC       HEAD2+1(30),HEAD2+31        BLANK SECOND HEADER      05946525
         MVI       BUFF,X'03'          TRIPLE SPACE                     05947025
         LA        SP1,BUFF            POINT TO OUTPUT LINE             05947525
         BAL       SRR,WRLST           GO LIST FINAL MESSAGE            05948025
         MVI       BUFF,X'00'          PREPARE FOR SYSTERM              05948526
         BAL       SRR,TBLANK          LEAVE A LINE                     05949025
         BAL       SRR,SYSTRMD         AND PRINT THE UNPROCESSED ERROR  05949525
         B         RETURN              THAT'S ALL                       05950025
CHECKEX  TM        L1PBYT2(GR2),X'20'  IS EXECUTE ON .Q                 05950526
         BNO       SAVESUM             NO, SAVE SUMMARY OF ASSEMBLY     05951025
         L         SRR,L1DCBADS+L1SIN(,GR2)  ADDRESS OF SYSIN DCB       05951526
         MVC       DCBEODAD+1(3,SRR),=AL3(EOFTEST) SET EODAD EXIT       05952025
         MVC       DCBGET+1(3,SRR),L1SINAD+1(GR2)  RE-FAKE GET ADDRESS  05952525
         LA        SP1,BUFF+1          GET CARD IN BUFFER AREA          05953025
FLUSH    GET       (SRR),(SP1)         READ A CARD                      05953525
         B         FLUSH               READ UNTIL EODAD IS TAKEN        05954025
EOFTEST  CLI       L1SINSW(GR2),X'80'  TEST REAL EOF SWITCH             05954525
         BE        RETURN              THAT'S ALL                       05955025
GOAGAIN  DS        0H                                                   05955526
         LA        SP1,X'FF'           SET BATCH SWITCH FOR RTA         05956025
         LR        SRR,GR2             ADDRESS OF LIST1 IN R9           05956525
         LA        GR2,L1BLDL+1*L1LENBL(,GR2)  ADDR OF F1 IN BLDL TABLE 05957027
         B         RETURN1             GO AND TERMINATE                 05957525
*                                                                       05958025
*        SAVE BATCH SUMMARY INFORMATION                                 05958525
SAVESUM  L         GR1,BUFFPT(,ACT)    ADDRESS OF ASMGBUFF              05959025
         CNOP      2,4                 ALIGN PARAMETERS                 05959525
         BALR      GR0,GR1             BRANCH TO SHRINK                 05960025
         DC        F'36'               MEANS A SHRINK OF BUFF SPACE     05960525
         DC        F'16'               I NEED BATCH WORK BUFFER         05961027
SHADR    DC        F'0'                BUFF WILL FILL THIS IN           05961527
*        MUST BE 8 BYTES SINCE FPP DID A GROW ON SYMBOL TABLE           05962025
*                                                                       05962525
         L         GR1,SHADR           ADDRESS OF CORE WE GOT           05963025
         L         GRA,L1BTCSUM(,GR2)  GET FIRST BATCH SUMMARY ADDRESS  05963525
         LTR       GRA,GRA             FIRST PROGRAM IN BATCH .Q        05964025
         BNZ       *+8                 NO, THEN BRANCH AROUND           05964525
         ST        GR1,L1BTCSUM(,GR2)  REMEMBER 1ST 8 BYTES IN CHAIN    05965025
         MVI       0(GR1),X'00'        THIS MAY NOT BE LAST ASSEMBLY    05965525
         STC       GR15,1(,GR1)        SEVERITY CODE OF THIS PROGRAM    05966025
         MVC       2(2,GR1),ERCTR+2    NUMBER OF STMTS FLAGGED          05966525
         MVC       8(8,GR1),CTITLE(ACT)  PROGRAM I.D.                   05967027
         TM        L1SINSW(GR2),X'80'  ARE WE AT EOF .Q                 05967525
         BNO       GOAGAIN             NO, SET XCTL FOR RTA             05968025
*                                                                       05968525
*        NOW PRINT THE BATCH SUMMARY                                    05969025
         MVI       0(GR1),X'FF'        MARKS THE LAST ASSEMBLY          05969525
         L         GRB,L1BTCSUM(,GR2)  ADDRESS OF FIRST BATCH ENTRY     05970025
         CLI       0(GRB),X'FF'        IS FIRST THE LAST .Q             05970525
         BE        RETURN              YES, SUMMARY IS THEN USELESS     05971025
         SR        GRA,GRA             ZERO A REGISTER                  05971525
         ST        GRA,L1PAGENO(,GR2)  ZERO PAGE COUNT                  05972026
         LA        GRA,1               ONE IN A REGISTER                05972525
         ST        GRA,YLCNT           INITIALIZE LINES FOR NEW PAGE    05973025
         MVI       HEAD1+1,BLANK       INSERT A BLANK INTO HEADER       05973525
         MVC       HEAD1+2(100),HEAD1+1  AND MOVE IT THROUGH            05974025
         MVC       HEAD1+23(14),BSUMMARY SET UP 1ST HEADING             05974525
         MVC       HEAD2+1(59),=C'DECK NUMBER  DECK I.D.  SEVERITY CODEX05975025
                 NUMBER STMTS FLAGGED'                                  05975525
         MVI       BUFF+1,BLANK        INSERT A BLANK                   05976025
         MVC       BUFF+2(119),BUFF+1  AND PROPAGATE IT                 05976525
         SR        GRD,GRD             ZERO TOTAL ERROR COUNT           05977025
         SR        GRC,GRC             ZERO FOR DECK NUMBER             05977525
NEXTPGM  LA        GRC,1(,GRC)         INCREMENT DECK NUMBER            05978025
         LR        GRX,GRC             TRANSFER DECK NUMBER             05978525
         BAL       SRR,CVTBTC          CONVERT TO CHARACTER             05979025
         MVC       BUFF+3(4),WORD      MOVE INTO PRINT LINE             05979525
         MVC       BUFF+15(8),8(GRB)   MOVE IN PROGRAM I.D.             05980027
         IC        GRX,1(GRB)          INSERT SEVERITY CODE             05980525
         BAL       SRR,CVTBTC          CONVERT TO CHARACTER             05981025
         MVC       BUFF+30(4),WORD     MOVE INTO PRINT LINE             05981525
         LH        GRX,2(GRB)          GET NUMBER OF STMTS FLAGGED      05982025
         AR        GRD,GRX             INCREASE TOTAL ERROR COUNT       05982525
         BAL       SRR,CVTBTC          CONVERT TO CHARACTER             05983025
         MVC       BUFF+46(4),WORD     MOVE INTO PRINT LINE             05983525
         LA        SP1,BUFF            POINT TO PRINT LINE              05984025
         BAL       SRR,WRLST           PRINT INFORMATION LINE           05984525
         CLI       0(GRB),X'FF'        IS THIS THE END .Q               05985025
         BE        TESTMESS            YES, MAKE UP FIRST MESSAGE       05985525
         LA        GRB,16(,GRB)        POINT TO NEXT SUMMARY            05986027
         B         NEXTPGM             DO NEXT PROGRAM IN BATCH         05986525
*                                                                       05987025
*        OUTPUT NO STATEMENTS FLAGGED MESSAGE                           05987525
TESTMESS MVI       BUFF,X'02'          LEAVE 2 LINES                    05988025
         LTR       GRD,GRD             WERE NO STATEMENTS FLAGGED .Q    05988525
         BNZ       TWOMESS             NO, MAKE UP TWO MESSAGES         05989025
         MVC       BUFF+1(38),ERCTM+3  MOVE IN MESSAGE                  05989525
         MVC       BUFF+1(2),CAC+1     MOVE IN 'NO'                     05990025
         MVC       BUFF+31(6),BSUMMARY CHANGE MESSAGE                   05990525
         MVC       BUFF+37(20),BUFF+36 BLANK THE REST OF THE LINE       05991025
         B         LASTMESS            THAT'S ALL HERE                  05991525
*                                                                       05992025
*        NUMBER FLAGGED AND SEVERITY CODE                               05992525
TWOMESS  LR        GRX,GRD             NUMBER OF STATEMENTS FLAGGED     05993025
         BAL       SRR,CVTBTC          CONVERT TO CHARACTER             05993525
         MVC       BUFF+1(41),ERCTM    MOVE IN MESSAGE                  05994025
         MVC       BUFF+34(6),BSUMMARY CHANGE MESSAGE                   05994525
         MVC       BUFF+40(20),BUFF+39 BLANK REST OF LINE               05995025
         BCT       GRD,*+8             ONLY ONE ERROR .Q                05995525
         MVI       BUFF+16,X'40'       REMOVE 'S'                       05996025
         MVC       BUFF+2(4),WORD      MOVE IN NUMBER                   05996525
         LA        SP1,BUFF            POINT TO OUTPUT LINE             05997025
         BAL       SRR,WRLST           AND PRINT IT                     05997525
         MVI       BUFF,X'00'          DON'T SKIP LINE                  05998025
         MVC       BUFF+1(40),SVMES+1  MOVE IN SEVERITY MESSAGE         05998525
         L         GRX,L1SAVECC(,GR2)  GET HIGHEST SEVERITY CODE        05999025
         BAL       SRR,CVTBTC          CONVERT TO CHARACTER             05999525
         MVC       BUFF+2(4),WORD      MOVE IN NUMBER                   06000025
LASTMESS DS        0H                                                   06000527
         LA        SP1,BUFF            POINT TO MESSAGE                 06001027
         BAL       SRR,WRLST           AND PRINT IT                     06001527
RETURN   DS        0H                                                   06002027
         SR        SP1,SP1             RETURN TO ASMGASM VIA RTA        06002527
RETURN1  DS        0H                                                   06003027
         L         GR14,CTMRSRTN(,ACT) GET RETURN ADDRESS               06003527
         BR        GR14                RETURN TO RTA                    06004027
*                                                                       06004527
BRANCHES EQU       *                   ROUTINES                         06010025
         B         AE20416   0                                          06020022
         B         AE204     1                                          06040022
         B         AE207     2                                          06060022
         B         AE206     3                                          06080022
         B         AE208     4         IN CORE MACRO DIR EXCEEDED       06100026
         B         AE209     5         THIS MANY FINDS RESULTED         06120026
         B         AE203     6                                          06140022
         B         BFBR      7                                          06160022
         SPACE     2                                                    06180026
AE203    DS        0H                                                   06200026
         MVI       SVCODE,X'04'        SEVERITY FOUR                    06220026
         MVC       BUFR+20(21),=C'ILLEGAL DCB OPERANDS.'                06240026
         MVC       BUFR+42(15),=C'SEE FIRST PAGE.'                      06260026
         LA        GRD,C'3'            ASMG203                          06280026
         B         ASMGDDDI                                             06300020
AE204    DS        0H                                                   06310026
         MVI       SVCODE,X'04'        SEVERITY FOUR                    06320026
AE204B   MVC       BUFR+20(21),=C'UNOPENABLE DATA SETS.'                06330026
         MVC       BUFR+42(15),=C'SEE FIRST PAGE.'                      06340026
         LA        GRD,C'4'            ASMG204                          06360026
         B         ASMGDDDI                                             06380020
AE20416  MVI       SVCODE,X'10'        SEVERITY CODE OF 16              06400020
         NI        L1SYNERR(GRA),X'FF'-X'40'  SKIP 204 SEV 4 TEST       06410026
         B         AE204B              OTHERWISE SAME AS OTHER 204      06420026
AE206    DS        0H                                                   06430026
         MVI       SVCODE,X'04'        SEVERITY FOUR                    06440026
         LA        GRD,C'6'            ASMG206                          06450026
         MVC       BUFR+39(8),L1DDNAM+2*L1SPRINT(GRA)  SYSPRINT DDNAME  06460026
         LH        GRH,L1IOERR+2(,GRA) GET NUMBER OF SYSPRINT ERRORS    06480026
         B         MSG67                                                06500020
AE207    DS        0H                                                   06510026
         MVI       SVCODE,X'04'        SEVERITY FOUR                    06520026
         LA        GRD,C'7'            ASMG207                          06530026
         MVC       BUFR+39(8),L1DDNAM+2*L1SPUNCH(GRA)  SYSPUNCH DDNAME  06540026
         LH        GRH,L1IOERR(,GRA)   GET NUMBER OF SYSPUNCH ERRORS    06560026
         B         MSG67                                                06560426
AE208    DS        0H                                                   06560826
         MVC       BUFR+20(34),=C'MORE THAN****** MACROS ON LIBRARY.'   06561226
         L         SP1,L1TOPMC(,GRA)   GET ADDR OF TOP OF MACRO TABLE   06561626
         S         SP1,L1BOTMC(,GRA)   LESS THE BOTTOM                  06562026
         SRDA      SP1,32              SET FOR A DIVIDE                 06562426
         D         SP1,=F'11'          DIVIDE BY EACH ENTRY LENGTH      06562826
         BCTR      SP2,0               LESS THE END DUMMY ENTRY         06563026
         CVD       SP2,CVDA            CONVERT TO DECIMAL               06563226
         MVC       BUFR+29(6),=X'402020202020'  ADD MASK                06563626
         ED        BUFR+29(6),CVDA+5   EDIT IN NUMBER OF MACROS         06564026
         LA        GRD,C'8'            ASMG208                          06564426
         B         ASMGDDDI            GO DO IT                         06564826
AE209    DS        0H                                                   06565226
         MVC       BUFR+25(40),=C'LIBRARY FINDS DONE TO COMPLETE ASSEMB*06565626
               LY.'                                                     06566026
         L         GRH,L1FINDCT(,GRA)  GET NUMBER OF FINDS DONE         06566426
         CVD       GRH,CVDA            CONVERT TO DECIMAL               06566826
         BCT       GRH,*+8             ONLY 1 FIND .Q                   06567226
         MVI       BUFR+37,BLANK       BLANK THE 'S'                    06567626
         MVC       BUFR+18(6),=X'402020202020'  ADD MASK                06568026
         ED        BUFR+18(6),CVDA+5   EDIT IN THE COUNT                06568426
         LA        GRD,C'9'            ASMG209                          06568826
         B         ASMGDDDI            GO DO IT                         06569226
MSG67    MVC       BUFR+25(13),=C'I/O ERRORS ON'                        06580026
         CVD       GRH,CVDA            CONVERT NUMBER TO DECIMAL        06600025
         BCT       GRH,*+8             ONLY 1 ERROR .Q                  06620025
         MVI       BUFR+34,BLANK       YES, BLANK 'S' ON 'ERRORS'       06640025
*./      DELETE    SEQ1=06660020,SEQ2=06660020                          06660025
         MVC       BUFR+18(6),=X'402020202020'                          06680020
         ED        BUFR+18(6),CVDA+5                                    06700020
         LA        GRH,BUFR+39         POINT TO DDNAME                  06720020
BLKSAD   LA        GRH,1(GRH)          ADVANCE 1 CHARACTER              06740020
         CLI       0(GRH),C' '         END OF DDNAME?                   06760020
         BNE       BLKSAD              NO, CONTINUE LOOKING             06780020
         MVI       0(GRH),C'.'         YES, PUT IN PERIOD               06800020
ASMGDDDI DS        0H                                                   06820026
         MVC       BUFR+9(10),PRGTYP                                    06840020
         STC       GRD,BUFR+15         PUT IN LAST DIGIT                06860020
         LA        SP1,BUFR                                             06880020
         BAL       SRR,WRLST           GO LIST ERROR                    06900025
         MVC       CTLINECT(4,ACT),YLCNT  UPDATE LINES LEFT ON PAGE     06905026
         MVI       BUFR,X'00'          SET UP FOR SYSTERM               06910026
         BAL       SRR,SYSTRMD         GO PRINT ERROR ON SYSTERM        06915026
         BAL       SRR,TBLANK          AND LEAVE A BLANK LINE           06920026
         MVC       BUFR(L'BUFR),L1BLANKS(GRA)  RESET CARR CONT AND LINE 06925026
         B         BFBR                TEST NEXT SWITCH                 06940025
*********************************************************************** 06960025
*        WRITE RECORDS ON SYSLST                                        06980025
*********************************************************************** 07000025
WRLST    STM       GR0,GR15,PRSAVE     SAVE ALL REGISTERS               07020025
         L         GR2,YLCNT           CURRENT LINE COUNT               07040025
         BCT       GR2,WRLINE          AT BOTTOM OF PAGE .Q             07060025
         L         SRR,ADLIST1(,ACT)   YES, POINT TO LIST1 IN ASMGASM   07070026
         L         GRX,L1PAGENO(,SRR)  GET CURRENT PAGE NUMBER          07080026
         LA        GRX,1(,GRX)         INCREMENT BY ONE                 07100025
         ST        GRX,L1PAGENO(,SRR)  UPDATE CURRENT PAGE NUMBER       07110026
         BAL       SRR,CVTBTC          CONVERT TO CHARACTER             07120025
         MVC       HPAGENO(4),WORD     MOVE TO HEADER LINE              07140025
         LA        GR2,HEAD1           POINT TO FIRST HEADER            07160025
         BAL       SRR,SYSL            PRINT IT                         07180025
         LA        GR2,HEAD2           POINT TO SECOND HEADER           07200025
         BAL       SRR,SYSL            PRINT IT                         07220025
         MVI       BUFF,X'01'          LEAVE A LINE NEXT TIME           07240025
         SR        GR2,GR2             ZERO A REGISTER                  07260025
         IC        GR2,CTPGLNCT(,ACT)  RESTORE LINE COUNT PER PAGE      07280025
WRLINE   ST        GR2,YLCNT           SAVE NEW LINES LEFT              07300025
         LR        GR2,SP1             POINT TO LINE TO BE OUTPUT       07320025
         BAL       SRR,SYSL            PRINT IT                         07340025
         MVI       BUFF,X'00'          RESET SPACE OPERAND              07360025
         LM        GR0,GR15,PRSAVE     RESTORE ALL REGISTERS            07380025
         BR        SRR                 RETURN                           07400025
*********************************************************************** 07420025
*        SYSTEM LIST SUBROUTINE                                         07440025
*********************************************************************** 07460025
SYSL     DS        0H                                                   07480026
         LA        GRZ,IOSAVE          O/S SAVE AREA                    07500026
         L         GR1,LSTDCB(,ACT)    GET SYSPRINT DCB ADDRESS         07520026
         PUT       (1),(GR2)           PRINT THE LINE                   07540026
         BR        SRR                 AND RETURN                       07560026
*./      DELETE    SEQ1=07580025,SEQ2=08200025                          08200026
         EJECT                                                          08210025
*                                                                       08220025
*                                                                       08240025
*        SYSTERM OUTPUT LISTING VIA SYSTERM                             08260025
*                                                                       08280025
SYSTRMD  TM    CTTRMI(ACT),TERM         IS TERM OPTION ON .Q            08300025
         BCR   8,SRR                    NO, THEN EXIT                   08320025
         STM   GR0,GR15,PRSAVE          SAVE ALL REGISTERS              08340025
SYSTRMD1 L     GR2,ADLIST1(,ACT)        POINT TO LIST1 IN ASMGASM       08341025
         LA    GRH,IOSAVE               OS SAVE AREA POINTER            08342025
         L     GRA,L1TRSAVE(,GR2)       RESTORE PAST LINE DATA          08343026
         BCT   GRA,SYSTRA               TEST FOR NO EJECT               08344025
         MVI   0(SP1),X'FF'             SKIP TO A NEW PAGE              08345026
         SR    GRA,GRA                  ZERO A REGISTER                 08346025
         IC    GRA,CTPGLNCT(,ACT)       GET LINE COUNT PER PAGE         08347025
SYSTRA   L     GR1,L1DCBADS+L1STERM(,GR2)  SYSTERM DCB ADDRESS          08348026
         ST    GRA,L1TRSAVE(,GR2)       RESTORE LINES LEFT              08348527
         PUT   (1),(SP1)                PUT A LINE                      08349026
         MVI   0(SP1),X'00'             RESET CARRIAGE CONTROL          08350026
*./      DELETE    SEQ1=08351025,SEQ2=08359025                          08359026
         LM    GR0,GR15,PRSAVE          RESTORE REGISTERS               08360025
         BR    SRR                      AND RETURN                      08361025
         SPACE 2                                                        08362025
*                                                                       08363025
*        BLANK LINE ON SYSTERM                                          08364025
*                                                                       08365025
TBLANK   TM    CTTRMI(ACT),TERM         IS TERM OPTION ON .Q            08366025
         BCR   8,SRR                    NO, THEN EXIT IMMEDIATELY       08367025
         STM   GR0,GR15,PRSAVE          SAVE REGISTERS                  08368025
         L     GR2,ADLIST1(,ACT)        POINT TO LIST1 IN ASMGASM       08369026
         LA    SP1,L1BLANKS(,GR2)       POINT TO X'00'.BLANKS           08369526
         B     SYSTRMD1                 GO AND PRINT IT                 08370025
         SPACE 2                                                        08371025
*                                                                       08372025
*        THIS ROUTINE REARRANGES SOURCE DATA FOR SYSTERM, IF TERM       08373025
*                                                                       08374025
ZERX     EQU   X'F0'                                                    08375025
BLANK    EQU   X'40'                                                    08376025
         SPACE 1                                                        08377025
TREDIT   BAL   SRR,TBLANK               MAKE A BLANK LINE               08378025
TREDT    L     GR2,VERRBUF              GET UT1 BUFFER ADDRESS          08379025
         CLC   L1G(L4C,GR2),EOF         IS IT END OF DATA SET .Q        08380025
         BNE   TREDE                    NO, GO ON                       08381025
         SR    SP1,SP1                  NO MORE DATA TO PROCESS         08382025
         B     ML102                    AND QUIT                        08383027
TREDE    MVI   LINENO,BLANK             INSERT A BLANK IN OUTPUT AREA   08384025
         MVC   LINENO+1(L'BUFR-2),LINENO  AND PUSH IT THROUGH           08385026
         USING TYPE,GR2                                                 08386025
         SR    GR1,GR1                  ZERO A REGISTER                 08387025
         IC    GR1,TRLI                 GET ONE BYTE OF LENGTH          08388025
         SLL   GR1,8                    SHIFT ONE BYTE LEFT             08389025
         IC    GR1,TRLI+1               GET REST OF LENGTH              08390025
         LTR   GR1,GR1                  RECORD WITH ONLY ERROR MSGS     08391025
         BCR   8,SP2                    YES, EXIT (TRLI EQ ZERO)        08392025
         LA    GR2,3(,GR2)              POINT TO FIRST SOURCE STMT      08393025
         USING INPUT,GR2                                                08394025
TREDA    TM    CTNUMI(ACT),NUM          IS NUM OPTION REQUIRED .Q       08395025
         BO    TREDB                    YES, MOVE LINENO                08396025
         TM    CTSTMI(ACT),STMT         IS STMT OPTION REQUIRED .Q      08397025
         BZ    TREDAA                   NO, SKIP STATEMENT NUMBER       08398025
         MVC   OUTPUT+1(L5),ISTMT       STATEMENT NUMBER                08399025
         MVC   OUTPUT+8(L81),IGEN       GEN / SOURCE RECORD             08400025
         B     TREDD                                                    08402025
TREDAA   MVC   OUTPUT+1(L81),IGEN       GEN / SOURCE RECORD             08404025
         B     TREDD                                                    08406025
*                                                                       08408026
TREDB    DS    0H                                                       08410026
         MVC   OUTPUT+1(L8D),ILINE      LINE NUMBER                     08412025
TREDF    TM    CTSTMI(ACT),STMT         IS STMT OPTION REQUIRED .Q      08414025
         BO    TREDH                    YES, STMT TO OUTPUT             08416025
*./      DELETE    SEQ1=08418025,SEQ2=08424025                          08424026
TREDG    MVC   OUTPUT+10(L73),IGEN      GEN / SOURCE RECORD             08426025
         B     TREDD                                                    08428025
TREDH    MVC   OUTPUT+11(L5),ISTMT      STATEMENT NUMBER                08430025
*./      DELETE    SEQ1=08432025,SEQ2=08438025                          08438026
TREDK    MVC   OUTPUT+17(L73),IGEN      GEN / SOURCE RECORD             08440025
         SPACE 1                                                        08442025
TREDD    LA    SP1,OUTPUT               ADDRESS OF OUTPUT AREA          08444025
         BAL   SRR,SYSTRMD              PUT A LINE                      08446025
         MVI   LINENO,BLANK             BLANK OUTPUT AREA               08448025
         MVC   LINENO+1(L'BUFR-2),LINENO  ALL OF IT                     08450026
         LA    GR2,NEXTENT              GET NEXT INPUT RECORD           08452025
         SH    GR1,LENGTH               ALL RECORDS TO SYSTERM          08454025
         BP    TREDA                    NO MORE RECORDS LEFT .Q         08456025
         BR    SP2                      RETURN                          08458025
         DROP  GR2                                                      08460025
PRSAVE   DC    16F'0'                   SAVE AREA FOR SYSTEM LIST       08480020
PATCH    DC    10S(*)                   ASMGFD PATCH AREA               08500026
         SPACE 2                                                        08520026
YLCNT    DC    F'0'                     LINE COUNTER                    08540020
ERCTR    DC    F'0'                     NUMBER OF ERRORS                08560026
MLSW     DC    X'00'                    FF= ERROR 58 OR 46, 00= NOT     08580020
*                                                                       08600026
LSTMTN   DC    H'0'                     LAST STATEMENT WITH ERROR       08620020
*./      DELETE    SEQ1=08640020,SEQ2=08660020                          08660026
PTRMSG   DC    C'NEAR OPERAND COLUMN 000--'                             08680020
PRGTYP   DC        C'ASMG200   '                                        08700027
*                                                                       08720026
CVDA     DC        D'0'                                                 08740027
SVCODE   DC        X'00'               SEVERITY CODE FOR L1SYNERR'S     08760026
MASK     DC    4X'F0'                   MASK TO SET BLANKS ZERO         08780020
BUFR     DS    0CL133                   DETAIL OUTPUT BUFFER            08790026
         DC        X'01'                NUMERIC CARRIAGE CONTROL        08800026
         DC    120C' '                                                  08820020
         DC        CL12' '              USED FOR A MOVE INSTRUCTION     08830026
BUFF     EQU       BUFR                                                 08840026
ERNO     EQU       BUFR+13             ERROR NUMBER                     08860020
MSGBG    EQU   BUFR+20                  BEGINNING OF ERROR MESSAGE      08880020
ERCD     EQU   BUFR+9                   ERROR CODE                      08900020
STMNO    EQU   BUFR+1                   STATEMENT NUMBER                08920020
OUTPUT   EQU   BUFR                     ALSO FOR SOURCE RECORD, TERM    08922025
LINENO   EQU   OUTPUT+1                                                 08924025
*                                                                       08925025
HEAD1    DS        0CL133              HEADER LINE ONE                  08926026
         DC        X'FF'               SKIP TO NEW PAGE                 08927025
HDECKID  DC        CL8' '              PROGRAM I.D.                     08928027
         DC        CL46' '                                              08929027
         DC        CL11'DIAGNOSTICS'                                    08930025
         DC        CL46' '                                              08931025
         DC        CL4'PAGE'                                            08932025
         DC        C' '                                                 08933025
HPAGENO  DC        CL4' '              PAGE NUMBER                      08934025
         DC        CL12' '                                              08934526
*                                                                       08935025
HEAD2    DS        0CL133              HEADER LINE TWO                  08936026
         DC        X'02'               LEAVE TWO LINES BEFORE           08937025
         DC        CL111' STMT  ERROR CODE  MESSAGE'                    08938025
HDATE    DC        CL9' '                                               08939025
         DC        CL12' '                                              08939526
*                                                                       08940025
BSUMMARY DC        CL14'BATCH  SUMMARY'                                 08941025
DCBEODAD EQU       32                  EODAD EXIT ADDRESS               08942025
DCBGET   EQU       48                  DCB GET ADDRESS                  08943025
ERM      EQU   6                        POSITION OF ERROR CODE          08950025
ERCT     EQU   3                        POSITION OF ERROR COUNT         08960020
SVMES    DC        X'00',C'  000 WAS HIGHEST SEVERITY CODE'             08980020
         DC        10C' '                                               09000020
MSUNPROC DC        C'ASMG202   UNPROCESSED ******** AND/OR ******** RECX09005027
               ORDS EXIST.'                                             09007027
TMSG     DC    C'ASSEMBLER (G) DONE'                                    09010025
MVMSG    MVC   0(0,GRY),2(GRD)          EXECUTED MOVE MESSAGE TO BUFFER 09020020
         CNOP  2,4                      FOR PRELUDE ALIGNMENT           09030027
         DC    H'0'                     PRELUDE TO WORD                 09040020
WORD     DC    F'0'                     DECIMAL RESULTS OF CVTBTC       09060020
*                                                                       09080027
SAVWD    DC    F'0'                     STATEMENT NUMBER                09100020
SAVE     DC    F'0'                     SAVE AREA FOR ONE WORD          09120020
SP1SAV   DC    F'0'                     SAVE AREA FOR GRY               09140020
         DC    X'03'                    BEGIN MESSAGE ERCTM             09160020
ERCTM    DC    C' '                     ERROR COUNT                     09180020
         DC    C'     STATEMENTS FLAGGED IN THIS ASSEMBLY'              09200020
NOERM    EQU   ERCTM+2                  NO ERROR MESSAGES POINTER       09220020
CAC      DC    X'03D5D6'                NUMERIC TRIPLE SPACE 'NO'       09230026
RECMESS  DC    C'SOURCE RECORDS'                                        09240026
ZERO     DC    F'0'                     FULL WORD OF ZERO               09260020
         DC    H'0'                                                     09280020
LENGTH   DC    H'86'                    STMTNO/GEN/SOURCE LENGTH        09300025
         EJECT                                                          09320020
*READ ERROR RECORD FROM OVERFLOW FILE                                   09340020
*                                                                       09360020
* READ OVERFLOW FILE INTERFACE WITH BUFF ROUTINE                        09380020
*                                                                       09400020
*                                                                       09420020
RDERR    STM   GR0,GR1,IOSAVE           SAVE REGISTERS                  09440020
RDF1     L         GR1,BUFFPT(0,ACT)   DO THE READ                      09460020
         CNOP      2,4                                                  09480020
         BALR      GR0,GR1                                              09500020
         DC        A(4,0)                                               09520025
VERRBUF  DC        V(ERRBUF)            EXTERNAL BUFFER ADDRESS         09530025
         L         GR1,BUFFPT(0,ACT)   DO A CHECK                       09540020
         CNOP      2,4                                                  09560020
         BALR      GR0,GR1                                              09580020
         DC        A(28,0,0)                                            09600020
         L         GR1,VERRBUF          POINT TO THE RECORD             09610025
         CLI       0(GR1),X'00'         CORRECT TYPE .Q                 09620025
         BNE   RDF1                     NO,READ NEXT BLOCK              09640020
         LM    GR0,GR1,IOSAVE           RESTORE SAVED REGISTERS         09660020
         BR    SP2                      EXIT RDOF                       09680020
*                                                                       09700020
IOSAVE   DC        18F'0'               IO REGISTER SAVE AREA           09720027
         LTORG                                                          09740020
*                                                                       09760027
         EJECT                                                          09780020
         DS        0H                   START ALIGNMENT                 09800027
         DC    AL2(E0017-ESTART)        FOR A ZERO                      09820027
PTRTBL   EQU   *                        POINTER TABLE                   09840020
         EPTR  117,ERROR=(36,53,54,113,117)  ERROR POINTERS       V7A35 09860028
ENDTBL   DC    AL2(EFM-ESTART)          MESSAGE NOT DEFINED POINTER     09880027
         EJECT                                                          09900020
         PRINT NODATA                                                   09920020
ESTART   DS    0H                                                       09930027
         EMSG  001,12,'DUPLICATION FACTOR ERROR'                        09940020
         EMSG  002,12,'RELOCATABLE DUPLICATION FACTOR'                  09960020
         EMSG  003,12,'LENGTH ERROR'                                    09980020
         EMSG  004,12,'RELOCATABLE LENGTH'                              10000020
         EMSG  005,08,'S-TYPE CONSTANT IN LITERAL'                      10020020
         EMSG  006,12,'INVALID ORIGIN'                                  10040020
         EMSG  007,12,'LOCATION COUNTER ERROR'                          10060020
         EMSG  008,08,'INVALID DISPLACEMENT'                            10080020
         EMSG  009,12,'MISSING OPERAND'                                 10100020
         EMSG  010,08,'INCORRECT SPECIFICATION OF REGISTER OR MASK'     10120025
         EMSG  011,08,'SCALE MODIFIER ERROR'                            10140020
         EMSG  012,08,'RELOCATABLE SCALE MODIFIER'                      10160020
         EMSG  013,08,'EXPONENT MODIFIER ERROR'                         10180020
         EMSG  014,08,'RELOCATABLE EXPONENT MODIFIER'                   10200020
         EMSG  015,08,'INVALID LITERAL USAGE'                           10220020
         EMSG  016,08,'INVALID NAME'                                    10240020
         EMSG  017,08,'DATA ITEM TOO LARGE'                             10260020
         EMSG  018,08,'INVALID SYMBOL'                                  10280020
         EMSG  019,08,'EXTERNAL SYMBOL ERROR'                           10300025
         EMSG  020,08,'INVALID IMMEDIATE FIELD'                         10320020
         EMSG  021,08,'SYMBOL NOT PREVIOUSLY DEFINED'                   10340020
         EMSG  022,12,'ESD TABLE OVERFLOW'                              10360020
         EMSG  023,08,'PREVIOUSLY DEFINED NAME'                         10380020
         EMSG  024,08,'UNDEFINED SYMBOL'                                10400020
         EMSG  025,08,'RELOCATABILITY ERROR'                            10420020
         EMSG  026,12,'TOO MANY LEVELS OF PARENTHESES'                  10440020
         EMSG  027,12,'TOO MANY TERMS'                                  10460020
         EMSG  028,04,'REGISTER NOT USED'                               10480020
         EMSG  029,08,'CCW ERROR'                                       10500020
         EMSG  030,12,'INVALID CNOP'                                    10520020
         EMSG  031,08,'UNKNOWN TYPE'                                    10540020
         EMSG  032,08,'OP-CODE NOT ALLOWED TO BE GENERATED'             10560020
         EMSG  033,04,'ALIGNMENT ERROR'                                 10580020
         EMSG  034,08,'INVALID OP-CODE'                                 10600020
         EMSG  035,08,'ADDRESSABILITY ERROR'                            10620020
         EMSG  036,16,'ASSEMBLER ERROR'                                 10640020
         EMSG  037,00,'MNOTE STATEMENT'                                 10660020
         EMSG  038,08,'ENTRY ERROR'                                     10680020
         EMSG  039,12,'INVALID DELIMITER'                               10700020
         EMSG  040,12,'STATEMENT IS TOO LONG'                           10720020
         EMSG  041,08,'UNDECLARED VARIABLE SYMBOL'                      10740020
         EMSG  042,08,'SINGLE TERM LOGICAL EXPRESSION IS NOT A SETB SYM-10760020
               BOL'                                                     10780020
         EMSG  043,08,'SET SYMBOL PREVIOUSLY DEFINED'                   10800020
         EMSG  044,08,'SET SYMBOL USAGE INCONSISTENT WITH DECLARATION'  10820020
         EMSG  045,08,'ILLEGAL SYMBOLIC PARAMETER'                      10840020
         EMSG  046,04,'AT LEAST ONE RELOCATABLE Y-TYPE CONSTANT IN ASSE-10860020
               MBLY'                                                    10880020
         EMSG  047,12,'SEQUENCE SYMBOL PREVIOUSLY DEFINED'              10900020
         EMSG  048,12,'SYMBOLIC PARAMETER PREVIOUSLY DEFINED OR SYSTEM *10920020
               VARIABLE SYMBOL DECLARED AS SYMBOLIC PARAMETER'          10940020
         EMSG  049,12,'VARIABLE SYMBOL MATCHES A PARAMETER'             10960020
         EMSG  050,08,'INCONSISTENT GLOBAL DECLARATIONS'                10980020
         EMSG  051,12,'MACRO DEFINITION PREVIOUSLY DEFINED'             11000020
         EMSG  052,08,'NAME FIELD CONTAINS ILLEGAL SET SYMBOL'          11020020
         EMSG  053,16,'ASSEMBLER ERROR'                                 11040020
         EMSG  054,16,'ASSEMBLER ERROR'                                 11060020
         EMSG  055,08,'INVALID EXECUTE CARD PARAMETER(S)'               11080020
         EMSG  056,08,'ARITHMETIC OVERFLOW'                             11100020
         EMSG  057,08,'SUBSCRIPT NOT WITHIN DIMENSIONS'                 11120024
         EMSG  058,04,'RE-ENTRANCY VIOLATION'                           11140023
         EMSG  059,12,'UNDEFINED SEQUENCE SYMBOL'                       11160020
         EMSG  060,08,'ILLEGAL ATTRIBUTE NOTATION'                      11180020
         EMSG  061,12,'ACTR COUNTER EXCEEDED'                           11200020
         EMSG  062,08,'GENERATED STRING GREATER THAN 255 CHARACTERS'    11220020
         EMSG  063,08,'EXPRESSION 1 OF SUBSTRING IS ZERO OR MINUS'      11240020
         EMSG  064,08,'EXPRESSION 2 OF SUBSTRING IS ZERO OR MINUS'      11260020
         EMSG 065,08,'INVALID OR ILLEGAL TERM IN ARITHMETIC EXPRESSION' 11280020
         EMSG  066,12,'UNDEFINED OR DUPLICATE KEYWORD OPERAND'          11300025
*./      DELETE    SEQ1=11320020,SEQ2=11320020                          11320025
         EMSG  067,08,'EXPRESSION 1 OF SUBSTRING GREATER THAN LENGTH OF*11340020
                CHARACTER EXPRESSION'                                   11360020
         EMSG  068,8,'ILLEGAL LENGTH SPECIFICATION IN GBL OR LCL STATEMX11380025
               ENT'                                                     11390025
         EMSG  069,08,'VALUE OF EXPRESSION 2 OF SUBSTRING TOO LARGE'    11400025
         EMSG  070,12,'FLOATING POINT CHARACTERISTIC OUT OF RANGE'      11420020
         EMSG  071,08,'ILLEGAL OCCURRENCE OF LCL, GBL, OR ACTR STATEMEN-11440025
               T'                                                       11460020
         EMSG  072,04,'ILLEGAL RANGE ON ISEQ STATEMENT'                 11480020
         EMSG  073,08,'ILLEGAL NAME FIELD'                              11500020
         EMSG  074,08,'ILLEGAL STATEMENT IN COPY CODE OR SYSTEM MACRO'  11520020
         EMSG  075,08,'ILLEGAL STATEMENT OUTSIDE OF A MACRO DEFINITION' 11540020
         EMSG  076,12,'SEQUENCE ERROR'                                  11560020
         EMSG  077,08,'ILLEGAL CONTINUATION CARD'                       11580020
         EMSG  078,00,'FOLLOWING ERRORS OCCURED WHILE EDITING LIBRARY MX11600023
               ACROS'                                                   11610023
         EMSG  079,08,'ILLEGAL STATEMENT IN MACRO DEFINITION'           11620020
         EMSG  080,08,'ILLEGAL START CARD'                              11640020
         EMSG  081,08,'ILLEGAL FORMAT IN GBL OR LCL STATEMENTS'         11660020
         EMSG  082,08,'ILLEGAL DIMENSION SPECIFICATION IN GBL OR LCL ST-11680020
               ATEMENT'                                                 11700020
         EMSG  083,08,'SET STATEMENT NAME FIELD NOT A VARIABLE SYMBOL'  11720020
         EMSG  084,08,'ILLEGAL OPERAND FIELD FORMAT'                    11740020
         EMSG  085,08,'INVALID SYNTAX IN EXPRESSION'                    11760020
         EMSG  086,08,'ILLEGAL USAGE OF SYSTEM VARIABLE SYMBOL'         11780020
         EMSG  087,08,'NO ENDING APOSTROPHE'                            11800020
         EMSG  088,12,'UNDEFINED OPERATION CODE'                        11820020
         EMSG  089,08,'INVALID ATTRIBUTE NOTATION'                      11840020
         EMSG  090,08,'INVALID SUBSCRIPT'                               11860020
         EMSG  091,08,'INVALID SELF-DEFINING TERM'                      11880020
         EMSG  092,08,'INVALID FORMAT FOR VARIABLE SYMBOL'              11900020
         EMSG  093,08,'UNBALANCED PARENTHESES OR EXCESSIVE LEFT PARENTH-11920020
               ESES'                                                    11940020
         EMSG  094,12,'INVALID OR ILLEGAL NAME OR OPERATION IN PROTOTYP-11960020
               E STATEMENT'                                             11980020
         EMSG  095,08,'ENTRY TABLE OVERFLOW'                            12000020
         EMSG  096,12,'MACRO INSTRUCTION OR PROTOTYPE OPERAND EXCEEDS 2-12020028
               55 CHARACTERS IN LENGTH'                           V7A36 12040028
         EMSG  097,12,'INVALID FORMAT IN MACRO INSTRUCTION OPERAND OR P-12060020
               ROTOTYPE PARAMETER'                                      12080020
         EMSG  098,12,'EXCESSIVE NUMBER OF OPERANDS OR PARAMETERS'      12100020
         EMSG  099,12,'POSITIONAL MACRO INSTRUCTION OPERAND, PROTOTYPE *12120020
               PARAMETER OR EXTRA COMMA FOLLOWS KEYWORD'                12140020
         EMSG  100,08,'STATEMENT COMPLEXITY EXCEEDED'                   12160020
         EMSG  101,12,'EOD ON SYSIN'                                    12180020
         EMSG  102,16,'INVALID OR ILLEGAL ICTL'                         12200020
         EMSG  103,12,'ILLEGAL NAME IN OPERAND FIELD OF COPY CARD'      12220020
         EMSG  104,12,'COPY CODE NOT FOUND'                             12240020
         EMSG  105,12,'EOD ON SYSTEM MACRO LIBRARY'                     12260020
         EMSG  106,08,'NOT NAME OF DSECT OR DXD'                        12280020
         EMSG  107,08,'INVALID OPERAND'                                 12300025
         EMSG  108,08,'INVALID EQU ARGUMENTS'                           12320027
         EMSG  109,08,'PRECISION LOST'                                  12340020
         EMSG  110,08,'EXPRESSION VALUE TOO LARGE'                      12360020
         EMSG  111,08,'INVALID PRINT, PUSH OR POP OPERAND'              12362027
         EMSG  112,08,'INVALID PUSH/POP REQUEST'                        12364027
         EMSG  113,16,'ASSEMBLER ERROR'                                 12366023
         EMSG  114,04,'INSUFFICIENT MEMORY FOR USING MAP'         V7A35 12368028
         EMSG  115,*-*,'UPDATE CONDITION CODE EXCEEDED'                 12372027
         EMSG  116,08,'ILLEGAL OPSYN'                                   12374023
         EMSG  117,16,'ASSEMBLER ERROR'                                 12376023
EFM      DC    AL1(39,16),C'MESSAGE NOT DEFINED FOR THIS ERROR CODE'    12380027
ENDM     DC    AL1(0)                                                   12400020
         SPACE 2                                                        12401025
*                                                                       12402025
*        INPUT AREA DESCRIPTION IF TERM OPTION                          12403025
INP      DSECT                                                          12404025
TYPE     DS    X                        RECORD TYPE                     12405025
TRLI     DS    2C                       UNALIGNED HALF-WORD REC LEN     12406025
INPUT    DS    CL86                     PREFIX AND SOURCE RECORD        12407025
ISTMT    EQU   INPUT                    FIVE DIGIT STATEMENT NUMBER     12408025
IGEN     EQU   INPUT+5                  (+) GENERATED OR (BLANK) NOT    12409025
ISRC     EQU   INPUT+6                  SOURCE RECORD                   12410025
ILINE    EQU   INPUT+78                 EIGHT DIGIT LINE NUMBER         12412025
NEXTENT  EQU   *                                                        12414025
*                                                                       12416025
         SPACE 3                                                        12418025
         END       ASMGFD                                               12420020
./ ADD NAME=ASMGFEX
FEX      TITLE     'ASMG     LOAD AND EXECUTE PHASE'                    00020021
         ISEQ      73,78                                                00040021
         COPY      ASMGSET                                              00060020
ASMGFEX  CSECT                                                          00070026
         PRINT     NOGEN                                                00080020
         FDIMEN                                                         00100020
         PRINT     GEN                                                  00120020
*                                                                       00140026
R0       EQU       0                                                    00160020
R1       EQU       1                                                    00180020
R2       EQU       2                                                    00200020
R3       EQU       3                                                    00220020
R4       EQU       4                                                    00240020
R5       EQU       5                                                    00260020
R6       EQU       6                                                    00280020
R7       EQU       7                                                    00300020
R8       EQU       8                                                    00320020
R9       EQU       9                                                    00340020
R10      EQU       10                                                   00360020
R11      EQU       11                                                   00380020
R12      EQU       12                                                   00400020
R13      EQU       13                                                   00420020
R14      EQU       14                                                   00440020
R15      EQU       15                                                   00460020
**       FD MUST SAVE ANY NECESSARY REGISTERS EXCEPT ACT.  IT MUST ALSO 00480020
**       TEST FOR EXECUTE OPTION BEFORE BRANCHING TO FEX. THE RETURN    00500020
**       ADDRESS IS IN R14.                                             00520026
**       BASE REGISTER (R2) IS ENTRY REGISTER FROM ASMGFD               00540026
         USING     ASMGFEX,R2          TELL THE ASSEMBLER               00560026
         L         R13,=A(SARA)        OS SAVE AREA                     00580020
         USING     SARA,R13                                             00600020
         ST        R14,FDRETURN                                         00610026
         LR        R9,ACT              SAVE BASE REGISTER FOR REF. FDIM 00620020
         MVC       COUNT+3(1),CTPGLNCT(R9)  LINES PER PAGE              00640020
*********************************************************************** 00660020
*        CALL SHRINK TO GET 6000 BYTES FOR ESD PROCESSING.              00680020
*        IF -1 IS RETURNED IN ADDRESS FIELD, ABEND BATCH.               00700020
         L         R1,ADLIST1(0,R9)                                     00720022
         L         R1,L1BUFADR(,R1)    GET BUFF ROUTINE ADDRESS         00740026
         ST        R1,RENNIE                                            00760020
         CNOP      2,4                                                  00780020
         BALR      R0,R1                                                00800020
         DC        F'36'               ROUTINE NUMBER                   00820020
         DC        F'6144'             BYTES DESIRED                    00840020
BEGADD   DS        F                   ADDRESS OF 1ST BYTE              00860020
         CLI       *-4,X'FF'           REQUEST GRANTED ?                00880020
         BE        ABEND               NO, QUIT                         00900020
         MVI       BEGADD,X'00'        ZERO 1ST BYTE (AVOID OVERFLOWS)  00920020
*********************************************************************** 00940020
         L         R6,BEGADD           POINT TO AREA FOR TABLES         00960020
         A         R6,BEGADD-4         FIND END OF CORE                 00980020
         ST        R6,ENDCORE          AND STORE IT                     01000020
         S         R6,BEGADD-4         RESTORE R6                       01020020
         LR        R7,R6                                                01040020
         A         R7,=F'3072'                                          01060020
         ST        R7,BEGADD-4         SAVE ADDRESS OF DEFTBL           01080020
         LR        R12,R6              TABLES WILL BE OVERLAID BY TEXT  01100020
         LR        R10,R6              AFTER THEY ARE PROCESSED         01120020
         MVC       OB+56(8),=C'LOAD MAP'                                01140020
         MVI       OB-1,C'1'           SET TO BEGIN NEW PAGE            01160020
         BAL       R8,PUT              PUT OUT HEADING                  01180020
         MVC       OB+56(8),OB+55      ERASE BUFFER                     01200020
         MVC       OB-1(29),=C'-CSECT NAME  LOCATION  LENGTH'           01220020
         MVC       OB+111(9),CTDATE(R9) MOVE IN DATE                    01240020
         BAL       R8,PUT              PUT OUT SUBHEADING               01260020
         MVC       OB(20),OB+47        BLANK HEADINGS                   01280020
         MVI       OB-1,C'0'           SET TO SKIP SPACE                01300020
         MVC       OB+111(9),OB+110    BLANK OUT DATE                   01320020
*********************************************************************** 01340020
*        CALL READP TO GET NEXT OBJECT CARD INTO C.                     01360020
NEWCARD  EQU       *                                                    01380020
         L         R1,RENNIE                                            01400020
         CNOP      2,4                                                  01420020
         BALR      R0,R1                                                01440020
         DC        F'4'                                                 01460020
         DC        F'4'                                                 01480020
         DC        A(C)                                                 01500020
*********************************************************************** 01520020
*********************************************************************** 01540020
*        CALL CHECK.                                                    01560020
         L         R1,RENNIE                                            01580020
         CNOP      2,4                                                  01600020
         BALR      R0,R1                                                01620020
         DC        F'28'                                                01640020
         DC        F'4'                                                 01660020
         DS        F                                                    01680020
*********************************************************************** 01700020
         CLC       C+1(3),=C'ESD'      IS IT ESD?                       01720020
         BE        ESD                                                  01740020
         CLC       C+1(3),=C'TXT'      IS IT TXT?                       01760020
         BE        TXT                                                  01780020
         CLC       C+1(3),=C'RLD'      IS IT RLD?                       01800020
         BE        RLD                                                  01820020
         CLC       C+1(3),=C'END'      IS IT LAST CARD?                 01840020
         BE        END                                                  01860020
         CLC       C+1(3),=C'EOF'      IS IT SIMULATED END-OF-FILE?     01880020
         BNE       EXFET                                                01900020
         MVC       OB-1(10),=C'0ASMG307I '                              01920020
         MVC       OB+20(53),=C'OBJECT FILE MISSING OR INCOMPLETE. EXEC101940020
               UTION DELETED.'                                          01960020
         BAL       R8,PUT                                               01980020
         B         THATSIT                                              02000020
EXFET    MVC       OB-1(10),=C'0ASMG300I '                              02020020
         MVC       OB+20(47),=C'FEATURES INCOMPATIBLE WITH EXECUTE OPTIX02040020
               ON USED '                                                02060020
         MVC       OB+67(53),OB+66     BLANK REST                       02080020
         BAL       R8,PUT              GIVE MESSAGE                     02100020
         B         THATSIT             QUIT                             02120020
ESD      NOP       EXFET               BECOMES BRANCH TO ERROR          02140020
         LA        R3,C+16                                              02160020
         LR        R4,R3                BEGINNING OF DATA FIELD         02180020
         AH        R4,C+10             POINT R4 TO END OF DATA FIELD    02200020
         LH        R5,C+14             IDENTIFY FIRST NON-LD ID VALUE   02220020
ESD1     CLI       8(R3),X'03'         IS IT LR?                        02240020
         BE        LD                  TES, TREAT AS LD                 02260020
         BH        G03                 IS IT SD,PC?                     02280020
         CLI       8(R3),X'01'         IS IT LD?                        02300020
         BE        LD                                                   02320020
         BL        SD                                                   02340020
         LM        R14,R15,0(R3)       GET AND STORE ENTRY'S NAME IN    02360020
         STM       R14,R15,0(R6)       REFERENCES TO BE SATISFIED TABLE 02380020
         ST        R5,8(R6)            STORE ID #                       02400020
         LA        R6,12(R6)           POINT TO NEXT SPOT IN TABLE      02420020
GOA      A         R5,=F'1'            COMPUTE NEXT ID #                02440020
         LA        R3,16(R3)           POINT TO NEXT ESD MEMBER         02460020
         CR        R3,R4               AT END OF DATA FIELD?            02480020
         BL        ESD1                NO, CONTINUE                     02500020
         B         NEWCARD             YES, GO GET NEW CARD             02520020
ABEND    EQU       *                   MINIMUM MEMORY REQUIREMENTS NOT  02540020
         BAL       R0,ABEND20                    MET                    02560022
         DC        C'306 ',AL1(L'MES306-1)                              02580027
MES306   DC        C'INSUFFICIENT MEMORY FOR USE OF EXECUTE OPTION WITHX02600027
                ANY PROGRAM'                                            02620027
ABEND20  L         R1,ADLIST1(0,R9)    BRANCH TO ABEND ROUTINE IN ASM   02640022
         B         L1ABEND(,R1)                                         02660026
*./      DELETE    SEQ1=02680020,SEQ2=02780020                          02780022
*./      DELETE    SEQ1=02800020,SEQ2=02840020                          02840021
*********************************************************************** 02860020
*                                                                     * 02880026
*        INPUT CARRIAGE CONTROL IS A RESTRICTED VERSION OF ASA.       * 02900026
*        THIS ROUTINE MONITORS THAT CARRIAGE CONTROL CHARACTER        * 02920026
*        IN ORDER TO COUNT LINES AND DO PAGE EJECTS AS REQUIRED.      * 02940026
*        THE SYSPRINT DCB TRAILER HAS BEEN ALTERED BY ASMGFD          * 02960026
*        TO ACCEPT ASA CARRIAGE CONTROL DIRECTLY FOR MODIFICATION     * 02980026
*        TO THE ACTUAL CHARACTERISTICS OF SYSPRINT.                   * 03000026
*                                                                     * 03020026
         SPACE     2                                                    03040026
PUT      DS        0H                                                   03060026
         L         R11,COUNT           LINES LEFT BEFORE PAGE SKIP      03080026
         MVC       CCC(1),OBM1         SAVE ASA CARRIAGE CONTROL        03100026
         CLI       OBM1,C'1'           NEW PAGE .Q                      03120026
         BE        NPAGE               BRANCH IF YES                    03140026
         CLI       OBM1,C' '           SKIP TO NEXT LINE .Q             03160026
         BE        DEC                 YES, DO SO                       03180026
         BCT       R11,DOUBLE          BEYOND LINE LIMIT .Q             03200026
         B         NPAGE               YES, THEN NEW PAGE               03220026
DOUBLE   DS        0H                                                   03240026
         CLI       OBM1,C'0'           ONLY ONE EXTRA SKIP .Q           03260026
         BE        DEC                 YES, ALL SET                     03280026
         BCT       R11,DEC             BEYOND LINE LIMIT .Q             03300026
         B         NPAGE               YES, NEW PAGE                    03320026
DEC      DS        0H                                                   03330026
         BCT       R11,ACTPUT          PRESENT LINE, CHECK LINE LIMIT   03340026
NPAGE    DS        0H                                                   03360026
         IC        R11,CTPGLNCT(,R9)   RESET LINE COUNTER               03380026
         MVI       OBM1,C'1'           SET TO SKIP PAGE                 03400026
ACTPUT   DS        0H                                                   03420026
         MVI       ACTPMVC,X'D2'       MAKE SURE OF OPCODE              03430027
         L         R1,LSTDCB(,R9)      GET SYSPRINT DCB ADDRESS         03440026
         PUT       (1),OBM1            DO THE PUT                       03460026
ACTPMVC  MVC       OBM1(1),CCC         RESTORE CARRIAGE CONTROL         03480027
         MVI       ACTPMVC,X'00'       PREVENT UNEXPECTED RETURNS       03490027
         ST        R11,COUNT           STORE LINES-TO-GO                03500026
         BR        R8                  RETURN TO CALLER                 03520026
         SPACE     2                                                    03540026
*********************************************************************** 03560020
G03      CLI       8(R3),X'05'         IS IT CM?                        03580020
         BL        PC                  NO, ITS PC                       03600020
         BH        EXFET               OR PR AND UNUSABLE WITH FEX      03620020
         CLI       0(R3),C' '          TEST IF NAMED                    03630023
         BNE       SD                  TREAT LIKE CSECT IF SO           03635023
         MVC       OB+1(8),=C'/COMMON/' INDICATE CM ON LOAD MAP         03640020
         B         SDPCCM              GO FIND ADDRESS, LENGTH          03660020
PC       MVC       OB+1(8),=C'/NONAME/' INDICATE UNNAMED CSECT          03680020
         B         SDPCCM                                               03700020
SD       EQU       *                   NAMED CSECT                      03720020
         LM        R14,R0,0(R3)        MOVE NAME TO DEFINITION TABLE    03740020
         STM       R14,R0,0(R7)        ALONG WITH VALUE                 03760020
         MVC       OB+1(8),0(R3)       MOVE NAME TO BUFFER              03780020
         LA        R7,12(R7)           POINT TO NEXT TABLE VACANCY      03800020
SDPCCM   LA        R12,7(,R12)         DOUBLE ALIGN ADDRESS COUNTER     03810023
         N         R12,=X'FFFFFFF8'                                     03815023
         ST        R12,FA              STORE ADDRESS OF CSECT           03820023
         CLI       FLAG,X'FF'          ARE WE LOADING, OR JUST CHECKING 03840020
         BE        GOA                 FOR ERRORS? NO, NEXT ENTRY       03860020
         UNPK      OB+13(7),FA+1(4)    YES, PREPARE ADDRESS FOR PRINTIN 03880020
         MVI       OB+19,C' '                                           03900020
         MVI       12(R3),X'00'        WIPE OUT POSSIBLE HIGH-ORDER     03920020
         A         R12,12(R3)          BYTE ON LENGTH BEFORE ADDING TO  03940020
*                                      GET ADDRESS OF NEXT CSECT        03960020
         MVC       FA(4),12(R3)        PREPARE LENGTH FOR PRINTING      03980020
         UNPK      OB+22(7),FA+1(4)                                     04000020
         MVI       OB+28,C' '                                           04020020
         TR        OB+13(6),TRTBLH     MAKE PROGRAM LOCATION PRINTABLE  04040026
         TR        OB+22(6),TRTBLH     MAKE PROGRAM LENGTH PRINTABLE    04050026
         BAL       R8,PUT              PUT NAME ADDRESS AND LENGTH      04060020
         MVC       OB-1(21),OB+50      BLANK BUFFER                     04080020
         LA        R8,THATSIT          THIS HAS SOME FORGOTTEN USE      04100020
         C         R12,ENDCORE         HAS CSECT OUTRUN CORE SPACE?     04120020
         BL        GOA                 NO, KEEP GOING                   04140020
*********************************************************************** 04160020
*        CALL SHRINK TO GET ENOUGH CORE TO LOAD CSECT NAMED BY          04180020
*        RLD CARD.  ACTUAL LOADING DOES NOT TAKE PLACE UNTIL            04200020
*        ENTIRE ESD HAS BEEN PROCESSED AND REPROCESSED.  IF -1          04220020
*        IS RETURNED IN ADDRESS FIELD, GIVE ERROR MESSAGE, AND THEN     04240020
*        ABEND THE ENTIRE TASK.                                         04260020
         LR        R1,R12              TAKE ADDRESS OF NEXT CSECT,      04280020
         LA        R1,7(R1)            AND TAKE LEAST MULTIPLE OF 8 >   04300020
         SRA       R1,3                OR = TO IT (SINCE SHRINK DEALS   04320020
         SLA       R1,3                ONLY IN DOUBLE WORDS)            04340020
         LR        R0,R1               SAVE THIS VALUE TO DEFINE FUTURE 04360020
         S         R1,ENDCORE          END OF CORE. ALSO SUBTRACT FORMR 04380020
         ST        R0,ENDCORE          END OF CORE TO FIND AMOUNT NEEDD 04400020
         ST        R1,ASK              STORE THIS AS REQUIRED BY SHRINK 04420020
         L         R1,RENNIE                                            04440020
         CNOP      2,4                                                  04460020
         BALR      R0,R1                                                04480020
         DC        F'36'               36 IDENTIFIES SHRINK             04500020
ASK      DS        F                   AMOUNT WANTED                    04520020
         DS        F                   -1 OR ADDRESS OF ALLOTTED CORE   04540020
         CLI       *-4,X'FF'           WAS CORE GIVEN?                  04560020
         BNE       GOA                 YES, AWAY WE GO AGAIN            04580020
         BAL       R0,ABEND20          NO, GIVE MESSAGE AND ABEND       04600022
         DC        C'302 ',AL1(L'MES302-1)                              04620027
MES302   DC        C'INSUFFICIENT MEMORY TO LOAD ABOVE CSECT'           04630027
*********************************************************************** 04640020
LD       DC        0H'0'                                                04660022
         LM        R14,R0,0(R3)        MOVE NAME AND VALUE TO           04680020
         STM       R14,R0,0(R7)        DEFINITION TABLE                 04700020
         LA        R7,12(R7)           POINT TO NEXT POSITION IN TABLE  04720020
         B         GOA+4               AVOID INCREMENTING ID #          04740020
PESD     EQU       *                   ENTERED ON FIRST TXT ENCOUNTER   04760020
         LR        R3,R10              POINT TO BEGINNING OF ERTBL      04780020
         LA        R5,ESDTBL           POINT TO PROCESSED TABLE         04800020
         B         NEXT+4                                               04820020
         L         R4,BEGADD-4         POINT TO BEGINNING OF DEFTBL     04840020
TRY      CLC       0(8,R3),0(R4)       COMPARE NAMES                    04860020
         BE        GOOD                SAME, GOOD                       04880020
         LA        R4,12(R4)           DIFFERENT, POINT TO NEXT DEFTBL  04900020
         CR        R4,R7                BEYOND DEF. TBL?                04920020
         BNH       TRY                 NO, CHECK NEXT NAME              04940020
         MVC       OB-1(9),=C'0ASMG303I'                                04960020
         MVC       OB+20(30),=C'UNRESOLVED EXTERNAL REFERENCE.'         04980020
         MVC       OB+50(9),OB+100     BLANKS                           05000020
         MVC       OB+60(8),0(R3)      GIVE NAME                        05020020
         BAL       R8,PUT                                               05040020
         MVI       FLAG,X'FF'          FLAG ERROR                       05060020
         B         NEXT                                                 05080020
GOOD     EQU       *                   COMPACT PROCESSED TABLE IS BUILT 05100020
*        AND STORED IN FEX'S PRIVATE CORE. IT CONSISTS OF 1-WORD ENTRYS 05120020
         L         R11,8(R4)           -- 3 LOW-ORDER BYTES OF VALUE    05140020
         ST        R11,0(R5)           FROM THE DEFTBL                  05160020
         L         R11,8(R3)           AND 1 HIGH-ORDER BYTE OF ID #    05180020
         STC       R11,0(R5)           FROM ERTBL                       05200020
         LA        R5,4(R5)            POINT TO NEXT ENTRY              05220020
NEXT     EQU       *                                                    05240020
         LA        R3,12(R3)           ADVANCE TO NEXT ER ENTRY         05260020
         CR        R3,R6               CHECK IF END OF ER TABLE         05280020
         BL        TRY-4               NO, GO LOOK FOR A DEFINITION     05300020
         CLI       FLAG,X'FF'          CHECK FOR ERROR CONDITION        05320020
         BE        THATSIT             INHIBIT LOADING                  05340020
         OI        ESD+1,X'F0'         NEXT ESD CARD WILL CAUSE ERROR   05360020
         NI        TXT+1,X'0F'         DO NOT RETURN TO THIS SECTION    05380020
TXT      B         PESD                ONCE ONLY - THEN NOP             05400020
         NOP       EXFET               BECOMES BRANCH TO ERROR AFTER LG 05420020
         L         R3,BEGADD           POINT TO BEGINNING OF LOAD AREA  05440020
         MVI       C+4,X'00'           WIPE OUT ANY HIGH ORDER BIT ON   05460020
         A         R3,C+4              ADDRESS & ADD TO GET ABSOLUTE AD 05480020
         IC        R0,C+11             MOVE LENGTH FACTOR IN            05500023
         BCTR      R0,0                AFTER DECREMENTING BY ONE        05505023
         STC       R0,*+5                                               05510023
         MVC       0(*-*,R3),C+16      MOVE IN CODE                     05520020
         B         NEWCARD             GET ANOTHER CARD                 05540020
PTXT     OI        TXT+5,X'F0'       NEXT TXT CARD GIVES ERROR MESSAGE  05560020
         NI        RLD+1,X'0F'         DO NOT RETURN TO THIS SECTION    05580020
         L         R3,BEGADD           POINT TO BEGINNING OF LOAD AREA  05600020
         LR        R10,R3                                               05620020
RLD      B         PTXT                ONCE ONLY, THEN NOP              05640020
         LA        R4,C+16                                              05660020
         LR        R6,R4                                                05680020
         AH        R6,C+10             POINT TO DATA BOUNDARIES         05700020
NEXTADD  EQU       *                                                    05720020
         IC        R0,4(R4)            GET AND ISOLATE LENGTH FACTOR    05740020
         N         R0,=F'12'           AND SHIFT IT 2 BITS. TO SEE WHY  05760020
         SRA       R0,2                LOOK AT ENDUP                    05780020
         STC       R0,FLAG             STORE LENGTH                     05800020
         A         R3,4(R4)            FIND ACTUAL ADDRESS OF CONSTANT  05820020
         TM        4(R4),X'30'         CHECK TYPE OF RLD ENTRY          05840020
         BZ        NBR                                                  05860020
         BO        EXFET               PSEUDO-REGISTERS NOT HANDLED     05880020
         LA        R7,ESDTBL-4         ADD. OF WORD BEFORE TABLE        05900020
WEINMAL  EQU       *                                                    05920020
**       IF IT BOMBS IN THIS LOOP IT COULD BE THAT ASMG HAS ASKED FOR   05940020
**       AN ER ENTRY IT DIDNT SUPPLY, CAUSING A SEARCH BEYOND CORESEND  05960020
         LA        R7,4(R7)            POINT TO NEXT ENTRY              05980020
         CLC       0(1,R7),1(R4)       IS IT 1 WE LOOK FOR?             06000020
         BNE       WEINMAL             NO, KEEP LOOKING                 06020020
**       IF IT BOMBS IN THIS LOOP IT COULD BE THAT ASMG HAS ASKED FOR   06040020
**       AN ER ENTRY IT DIDNT SUPPLY, CAUSING A SEARCH BEYOND CORESEND  06060020
FOUND    EQU       *                                                    06080020
         A         R10,0(R7)           ADD VALUE OF CONSTANT TO BASE    06100020
         LA        R10,0(R10)          BLANK TOP BYTE                   06120020
         ST        R10,FA              STORE ADD. CONSTANT, POINT TO    06140020
         LA        R7,FA+3             LAST BYTE, SHIFT BACK 1 PER BYTE 06160020
*        DESIRED. ACTUALLY,IF THE LENGTH IS N, BOTH THE LENGTH GIVEN BY 06180020
*        THE RLD CARD AND THE LENGTH REQUIRED BY THE MVC INSTRUCTION    06200020
*        ARE N-1. THE SH SHIFTS R7 BACK REQUIRED AMOUNT.                06220020
         SH        R7,HALF              FLAG FOLLOWS HALF (X'00')       06240020
ENDUP    EQU       *                                                    06260020
         STC       R0,*+5              MOVE IN LENGTH FACTOR            06280020
         MVC       0(*-*,R3),0(R7)     MOVE IN CONSTANT                 06300020
         L         R3,BEGADD           RESTORE R3 TO BASE ADDRESS       06320020
         LR        R10,R3                                               06340020
         TM        4(R4),X'01'         CHECK FOR DUPLICATE ID'S         06360020
         BZ        *+16                                                 06380020
         L         R11,0(R4)           IF SAME, SHIFT                   06400020
         ST        R11,4(R4)                                            06420020
         S         R4,=F'4'                                             06440020
         LA        R4,8(R4)            POINT TO NEXT RLD ITEM           06460020
         CR        R4,R6                & IF NOT PAST END OF CARD,      06480020
         BL        NEXTADD             MOVE IN THIS CONSTANT            06500020
         B         NEWCARD             OTHERWISE, GET A NEW CARD        06520020
NBR      EQU       *                                                    06540020
         SR        R1,R1               USE R1 TO SET FA TO ZEROS        06560020
         ST        R1,FA                                                06580020
         LA        R7,FA+3             POINT TO END OF SPACE            06600020
         SH        R7,HALF             BACK UP TO DESIRED ADDRESS       06620020
         STC       R0,*+5              PUT IN LENGTH FACTOR             06640020
         MVC       0(*-*,R7),0(R3)      MOVE REL. ADDRESS TO FULL WORD  06660020
         TM        4(R4),X'02'         SUBTRACT BASE?                   06680020
         BZ        *+8                 NO, BRANCH AROUND                06700020
         MVI       *+4,X'5B'            CHANGE OPCODE TO SUBTRACT       06720020
         A         R10,FA               ADD BASE TO GET CONSTANT        06740020
         MVI       *-4,X'5A'            RESTORE OPCODE TO AD IF NECESS. 06760020
         ST        R10,FA              AND PREPARE TO MOVE IT           06780020
         B         ENDUP                                                06800020
*./      DELETE    SEQ1=06820020,SEQ2=06820020                          06820023
END      EQU       *                                                    06840020
         TM        CTLSTI(R9),X'10'    WAS NOLIST SPECIFIED .Q          06860026
         BC        8,SPIE              NO, FORGET IT                    06880020
         MVC       OB-1(18),=C'1EXECUTION BEGINS '                      06900020
         MVC       OB+17(11),OB+80                                      06920020
         BAL       R8,PUT                                               06940020
         MVC       OB-1(18),OB+80      BLANK THE ENTIRE LINE            06960026
         BAL       R8,PUT              AND LEAVE A LINE                 06980026
         MVI       EOFLAG,X'01'                                         07000020
SPIE     SPIE      EXER,((1,15))       RETAIN CONTROL IF ERROR BY USER  07020020
         ST        R1,SAVEPICA         PREVIOUS SPIE MAY BE RESTORED    07025024
         SR        R1,R1               ZERO A REGISTER                  07030024
         SPM       R1                  AND SET ZERO PROGRAM MASK        07035024
         L         R5,ADLIST1(0,R9)    GET ADDRESS OF TIME ALLOWED      07040022
         L         R5,L1TIMELM(,R5)    GET EXECUTE TIME (IN SECONDS)    07060026
         MH        R5,=H'100'          CONVERT TO HUNDREDTHS            07080020
         ST        R5,FULL             STORE IT                         07100020
         MH        R5,=H'10'           CONVERT TO THOUSANDTHS           07120020
         ST        R5,FA                                                07140020
         STIMER    TASK,TIMERR,BINTVL=FULL  START TIMING                07160020
         L         R15,BEGADD          LOAD BASE ADDRESS                07180020
         USING     SARA,R13                                             07200020
         ST        R9,ESDTBL+64         SAVE LIFE-LINE TO ASM           07220020
         L         R1,ADLIST1(,R9)     POINT TO LIST1 IN ASM            07240026
         L         R6,L1DCBADS+L1SIN(,R1)  GET SYSIN DCB ADDRESS        07260026
         MVC       33(3,R6),=AL3(FEXEOF) SET MY OWN EOF ADDRESS         07280026
         LA        R1,L1DCBADS(,R1)    POINT TO ASMG'S DCB ADDR LIST    07300026
         ST        R12,BEGADD-4        STORE VARIOUS REGISTERS          07320020
         ST        R2,BASE                                              07340020
         CLC       C+5(3),=C'   '      ENTRY SPECIFIED?                 07360020
         BE        TOP                 NO, ASSUME FIRST BYTE. BRANCH.   07380020
         AH        R15,C+6             YES, SET TO SPECIFIED ADDR.      07400020
TOP      BALR      R14,R15             RELUCTANTLY RELINQUISH CONTROL   07420020
         DROP      R13                                                  07430023
         SPACE     3                                                    07435025
         TTIMER    CANCEL              STOP TIMER AND GET TIME          07440020
         LR        R7,R0               TIME IN TIMER UNITS              07460020
         BALR      R15,0                                                07480020
         USING     *,R15                                                07500020
         L         R2,BASE                                              07520020
         L         R13,=A(SARA)        OS SAVE AREA                     07540020
         DROP      R15                                                  07560020
         USING     SARA,R13                                             07580020
*./      DELETE    SEQ1=07600020,SEQ2=07600020                          07600024
         L         R9,ESDTBL+64        RESTORE ASM POINTER              07620020
         SR        R6,R6               ZERO R6                          07640020
         M         R6,=F'26'           CONVERT TIME NOT USED FROM       07660020
         D         R6,=F'1000'         TIMER UNITS TO MILLISECONDS AND  07680020
         L         R6,FA               SUBTRACT FROM TIME ALLOWED TO    07700020
         SR        R6,R7               GET TIME USED                    07720020
         CVD       R6,TIMAREA          AND IN DECIMAL FORM              07740020
         SR        R11,R11                                              07760020
         IC        R11,CTPGLNCT(R9)    PRETEND AT TOP OF A PAGE         07780020
         CLI       EOFLAG,X'00'        IF END OF FILE, SAY SO           07800020
         BNE       TIMEOUT                                              07820020
         MVI       OBM1,C' '           SPACE 1 LINE                     07840026
         BAL       R8,PUT              PRINT THE LINE                   07860026
         MVC       OB-1(10),=C'0ASMG308I '                              07880020
         MVC       OB+10(10),OB+9                                       07900020
         MVC    OB+20(41),=C'END OF FILE ON INPUT DCB. JOB TERMINATED.' 07920020
         BAL       R8,PUT              PRINT THE MESSAGE                07940026
         MVI       OB,C' '             BLANK START OF LINE              07960026
         MVC       OB+1(L'OBM1-2),OB   AND PUSH IT THRU                 07980026
*                                                                       08000026
TIMEOUT  DS        0H                                                   08020026
         MVI       OBM1,C' '           SPACE 1 LINE                     08040026
         BAL       R8,PUT              PRINT THE LINE                   08060026
         MVC       OB-1(42),MASK1                                       08080020
         ED        OB+14(9),TIMAREA+4                                   08100020
         LA        R8,NEARLYIT         RETURN AND RESTORE PREVIOUS SPIE 08120025
         B         PUT                 PUT OUT EXECUTION TIME.          08140026
MASK1    DC        C'0EXECUTION TIME ',X'20202021',C'.',X'202020',CL18'X08160020
                SEC.'                                                   08180020
         DROP      R13                                                  08190023
FEXEOF   BALR      R15,R0              END OF INPUT FILE                08200020
         USING     *,R15                                                08220020
         MVI       EOFLAG,X'00'        SET FLAG                         08240020
         L         R15,=A(TOP+2)                                        08260020
         BR        R15                                                  08280020
EXER     EQU       *                   ERROR DURING EXECUTION           08300020
         USING     *,R15                                                08320020
         L         R2,BASE                                              08340020
         ST        R13,ESDTBL+52                                        08360020
         L         R13,=A(SARA)        OS SAVE AREA                     08380020
         DROP      R15                                                  08400020
         USING     SARA,R13                                             08410023
         ST        R1,SAVEPIE                                           08420020
*./      DELETE    SEQ1=08440020,SEQ2=08440020                          08440021
         MVI       0(R1),X'00'         FOOL SYSTEM INTO THINKING IT HAS 08460020
*        HAD CONTROL RETURNED TO IT SO THAT IT COULD RETURN TO BUNGLER  08480020
         MVC       EXERPSW,4(R1)       SAVE BUNGLER'S PSW         V7A45 08500028
         MVC       ESDTBL+56(8),12(R1) SAVE BUNGLER'S R14-R15     V7A45 08502028
         MVC       ESDTBL(12),20(R1)   SAVE BUNGLER'S R0-R2       V7A45 08504028
         STM       R3,R12,ESDTBL+12    SAVE BUNGLER'S REGISTERS         08520020
         L         R9,ESDTBL+64                                         08540020
         TTIMER CANCEL                                                  08560020
         L         R1,SAVEPICA         RESTORE CALLER'S PICA            08564027
         SPIE      MF=(E,(1))          RESET TO ORIGINAL SPIE FOR TERM  08568027
*./      DELETE    SEQ1=08580020,SEQ2=08620020                    V7A45 08580028
         MVC       OB-1(9),=C'1ASMG304I'                                08640020
         MVC       OB+20(16),=C'EXECUTION ERROR.'                       08660020
         MVC       OB+8(12),OB+90      BLANKS TO BUFFER                 08680020
         LA        R3,EXERPSW          ADDRESS OF USER'S PSW      V7A45 08700028
         BAL       R8,PUT                                               08720020
         MVC       OB(9),OB+9           BLANKS                          08740020
EXER1    DS        0H                   ENTER HERE ON TIMER DUMPS       08750024
         MVC       OB+20(27),=C'ADDRESS OF NEXT INSTRUCTION'            08760020
         MVC       FA+1(3),5(R3)        MOVE NEXT ADDRESS TO UNPACK ARE 08780020
         UNPK      OB+50(7),FA+1(4)     UNPACK IT                       08800020
         TR        OB+50(6),TRTBLH      MAKE IT READABLE                08820020
         MVI       OB+56,C' '           BLANK DUMMY DIGIT               08840020
         MVI       OB-1,C'-'                                            08860020
         BAL       R8,PUT                                               08880020
         MVI       OB-1,C' '            SET TO SINGLE SPACE ONLY        08900020
         MVC       OB+20(18),=C'INSTRUCTION LENGTH'                     08920020
         SR        R1,R1                                                08940020
         SPM       R1                  SO ASMG WON'T CATCH ITSELF       08950025
         IC        R1,4(R3)            FIND INSTRUCTION LENGTH,         08960025
         SRA       R1,5                CONDITION CODE AND COMPLETION    08980020
         STC       R1,OB+50            CODE FROM PSW                    09000020
         NI        OB+50,X'F6'                                          09020020
         MVC       OB+51(6),=C' BYTES'                                  09040020
         MVC       OB+38(9),OB+60                                       09060020
         OI        OB+50,X'F0'                                          09080020
         BAL       R8,PUT                                               09100020
         CLI       TIMESW,X'01'        IS THIS A TIMER OVERFLOW DUMP    09110024
         BE        PUTCC               YES, THEN NO INTERRUPTION CODE   09115024
         MVC       OB+20(18),=C'INTERRUPTION CODE '                     09120020
         MVC       FA+2(2),2(R3)                                        09140020
         UNPK      OB+50(5),FA+2(3)                                     09160023
         MVC       OB+54(3),OB+57                                       09180023
         TR        OB+50(4),TRTBLH                                      09200020
         LH        R4,2(R3)                                             09220020
         N         R4,=X'0000000F'     IN CASE MOD 91 OR 195            09230023
         SLA       R4,5                                                 09240020
         LA        R4,ERAR(R4)        POINT AT ERROR TEXT               09260023
         MVC       OB+60(32),0(R4)                                      09280020
         BAL       R8,PUT                                               09300020
*        FOLLOWING CODE OUTPUTS ERROR TEXT FOR IMPRECISE BITS           09301023
         TM        3(R3),X'0F'         TEST FOR 0 INTERRUPT CODE        09302023
         BNZ       PUTCC                                                09303023
         MVC       OB+20(40),OB+19     BLANK LINE                       09304023
         LH        R4,2(,R3)           LOAD IMPRECISE BITS              09305023
         SLL       R4,16               SHIFT TO TOP OF REG              09306023
         LA        R5,12               NUMBER OF BITS                   09307023
IMPLOOP  LTR       R4,R4               TEST SIGN BIT                    09308023
         BNM       IMPEND                                               09309023
         SR        R8,R8               GET THE CORRESPONDING PRECISE    09310023
         IC        R8,IMPTAB-1(R5)         CODE FROM TABLE              09311023
         SLL       R8,5                POINT AT THE INTERRUPT           09312023
         LA        R8,ERAR(R8)          MESSAGE TEXT                    09313023
         MVC       OB+60(32),0(R8)     MOVE IN MESSAGE                  09314023
         BAL       R8,PUT              WRITE THE LINE                   09315023
IMPEND   SLL       R4,1                TRY NEXT BIT                     09316023
         BCT       R5,IMPLOOP          TEST IF ALL BITS DONE            09317023
PUTCC    MVC       OB+20(15),=C'CONDITION CODE '                        09320023
         MVC       OB+35(57),OB+34                                      09340020
         SR        R5,R5                CLEAR R5                        09360020
         IC        R5,4(R3)                                             09380020
         SRA       R5,4                 SHIFT CODE BITS OVER            09400020
         STC       R5,OB+50             TO STORE ON BYTE BOUNDARY       09420020
         NI        OB+50,X'F3'                                          09440020
         OI        OB+50,X'F0'          MAKE PRINTABLE                  09460020
         MVC       OB+51(13),OB+65      BLANKS                          09480020
         BAL       R8,PUT                                               09500020
         MVI       OB-1,C'-'            SET TO TRIPLE SPACE             09520020
         MVC       OB+20(18),OB         BLANKS                          09540020
         MVC       OB+46(26),=C'REGISTERS AT TIME OF ERROR'             09560020
         BAL       R8,PUT                                               09580020
         MVI       OB-1,C'0'            SET TO DOUBLE SPACE             09600020
         MVC       OB(9),=C'R     HEX' HEADING                          09620020
         MVC       OB+16(7),=C'DECIMAL'                                 09640020
         MVC       OB+31(87),OB         REPEAT 3 MORE TIMES             09660020
         BAL       R8,PUT              BY PROPAGATING ACROSS            09680020
         LA        R5,C'0'             NAME OF FIRST REGISTER LISTED    09700027
         LA        R7,ESDTBL            POINT TO SAVE AREA              09720020
NEXTLINE EQU       *                                                    09740020
         LR        R4,R7                R4 WILL INCREMENT DURING LINES  09760020
         LR        R10,R5               R7 WILL INCREMENT AFTER EACH LN 09780020
         LA        R14,4                COUNTS REGISTERS PER LINE       09800025
         LA        R3,OB                POINTS TO NEXT BUFFER SECTION   09820020
BACK     STC       R10,0(R3)            REGISTER # TO BUFFER            09840020
         TR        0(1,R3),TRTBLH       MAKE PRINTABLE                  09860020
         MVC       FA(4),0(R4)          MOVE CONTENTS TO UNPACK AREA    09880020
         UNPK      4(9,R3),FA(5)                                        09900020
         TR        4(8,R3),TRTBLH       MAKE PRINTABLE                  09920020
         MVI       12(R3),C' '          BLANK DUMMY DIGIT               09940020
         L         R6,0(R4)             LOAD CONTENTS FOR CVD           09960020
         MVI       14(R3),C' '         SET + SIGN                       09980020
         LTR       R6,R6               SEE IF PLUS                      10000020
         BNM       *+8                                                  10020020
         MVI       14(R3),C'-'         SET - SIGN                       10040020
         CVD       R6,TIMAREA                                           10060020
         UNPK      15(10,R3),TIMAREA                                    10080020
         OI        24(R3),X'F0'                                         10100020
         LA        R4,4(R4)                                             10120020
         LA        R10,1(R10)                                           10140020
         LA        R3,31(R3)            POINT TO NEXT BUFFER SECTION    10160020
         BCT       R14,BACK             UNLESS ALREADY 4 REG'S, GET 1   10180020
         BAL       R8,PUT               PUT LINE                        10200020
         MVI       OB-1,C' '            SET SINGLE SPACE                10220020
         LA        R7,16(R7)                                            10240020
         LA        R5,4(R5)                                             10260020
         CH        R5,=H'256'          RF DONE?                         10280020
         BL        NEXTLINE             SO DONT DO IT AGAIN             10300020
         SR        R5,R5                                                10320020
         LA        R5,C'0'             NUMBER OF FIRST FLOATING REG     10340027
         MVI       OB-1,C'0'           SET TO DOUBLE SPACE              10360020
         STD       R0,ESDTBL                                            10380020
         STD       R2,ESDTBL+8                                          10400020
         STD       R4,ESDTBL+16                                         10420020
         STD       R6,ESDTBL+24                                         10440020
         LA        R3,ESDTBL                                            10460020
         LA        R4,OB                                                10480020
         MVI       ESDTBL+99,C' '                                       10500020
         MVC       ESDTBL+100(120),ESDTBL+99 BLANK BUFFER               10520020
         LA        R6,ESDTBL+100       POINT TO SECOND BUFFER           10540020
NEXTREG  EQU       *                                                    10560020
         MVC       EXP(2),=P'00'                                        10580020
         MVI       6(R4),C'+'                                           10600020
         TM        0(R3),X'80'                                          10620020
         BZ        *+8                                                  10640020
         MVI       6(R4),C'-'          NO, MOVE IN - SIGN               10660020
         MVC       0(6,R4),=C'FPR   '                                   10680020
         STC       R5,3(R4)            MOVE IN REGISTER NUMBER          10700020
         NI        0(R3),X'7F'         THROW OUT SIGN BIT               10720020
         MVC       FA,0(R3)            MOVE FIRST HALF TO UNPACK AREA   10740020
         UNPK      8(9,R4),FA(5)                                        10760020
         MVC       FA,4(R3)                                             10780020
         UNPK      17(9,R4),FA(5)                                       10800020
         TR        8(17,R4),TRTBLH     RENDER PRINTABLE                 10820020
         MVC       7(2,R4),8(R4)       SHIFT CHARACTERISTIC OVER 1 BYTE 10840020
         MVI       9(R4),C'.'          TO MAKE ROOM FOR DECIMAL POINT   10860020
         MVI       16(R4),C' '         BLANK 1ST DUMMY DIGIT            10880020
         MVI       25(R4),C' '         BLANK 2ND DUMMY DIGIT            10900020
         MVC       1(1,R6),6(R4)       MOVE SIGN INTO 2ND BUFFER        10920020
         LD        R0,0(R3)                                             10940020
RECHECK  EQU       *                   CONVERT TO DECIMAL               10960020
         LTDR      R0,R0                                                10980020
         BZ        ZERO                                                 11000020
         CD        R0,ONE                                               11020020
         BNL       DIV                                                  11040020
         CD        R0,TENTH                                             11060020
         BL        MULT                                                 11080020
         DD        R0,FUDGE1                                            11100020
         STD       R0,0(R3)                                             11120020
         MVI       0(R3),X'00'                                          11140020
         LM        R10,R11,0(R3)                                        11160020
         CD        R0,ONE              TEST FOR RIGHT SHIFT             11180020
         BL        *+8                                                  11200020
         SLDL      R10,4               NULLIFY IT                       11220020
         D         R10,FUDGE2          SPLIT INTO 2 DEC NUMBERS         11240020
         CVD       R11,TIMAREA                                          11260020
         UNPK      3(9,R6),TIMAREA                                      11280020
         OI        11(R6),X'F0'        RENDER PRINTABLE                 11300020
         CVD       R10,TIMAREA                                          11320020
         UNPK      12(8,R6),TIMAREA                                     11340020
         OI        19(R6),X'F0'                                         11360020
         MVI       2(R6),C'.'              DECIMAL POINT                11380020
         MVC       21(2,R6),=C'E+'                                      11400020
         ZAP       EXP,EXP                                              11420020
         BNM       *+8                                                  11440020
         MVI       22(R6),C'-'                                          11460020
         UNPK      23(2,R6),EXP                                         11480020
         OI        24(R6),X'F0'                                         11500020
RESET    EQU       *                                                    11520020
         LA        R6,31(R6)           POINT TO NEXT BUFFER SECTION     11540020
         LA        R5,2(,R5)           POINT TO NEXT REG. NAME          11560025
         LA        R3,8(R3)            POINT TO NEXT REG. CONTENTS      11580020
         LA        R4,31(R4)           POINT TO NEXT BUFFER SECTION     11600020
         CH        R5,=H'248'  X'00',C'8'  ARE WE UP TO R8 YET?         11620020
         BL        NEXTREG             NO, BRANCH BACK                  11640020
         BAL       R8,PUT                                               11660020
         MVC       OB-1(121),ESDTBL+99                                  11680020
         BAL       R8,PUT                                               11700020
DUMP     MVC       OB-1(26),=C'-STORAGE AT TIME OF ERROR '              11720020
         MVC       OB+25(95),OB+24                                      11740020
         L         R12,BEGADD-4                                         11760020
*        R12 POINTS TO END OF USERS CORE +2                             11780020
         BCTR      R12,0               POINT TO LAST USED BYTE          11800025
         SRA       R12,5               GET FIRST BYTE OF LAST LINE TO   11820020
         SLA       R12,5               BE DUMPED                        11840020
         ST        R12,ROUNDEND        SAVE END OF AREA TO BE DUMPED    11860027
         L         R3,BEGADD           POINT TO FIRST BYTE OF USERS COR 11880020
         SRA       R3,5                                                 11900020
         SLA       R3,5                                                 11920020
         BAL       R8,PUT              PRINT STORAGE HEADER             11940026
         MVC       OB-1(26),OB+25      BLANK ENTIRE LINE                11960026
         L         R11,COUNT                                            11980020
         BAL       R8,NPAGE-4                                           12000020
         MVI       OB-1,C' '           SET TO SINGLE SPACE              12020020
         B         *+8                 AVOID PUT                        12040020
DUPLINES BAL       R8,PUT              PUT OUT LINE                     12060020
         MVI       OB+8,C' '           PREPARE FOR DUMP FORMAT          12080020
         MVI       OB+86,C'*'                                           12100020
         MVI       OB+119,C'*'                                          12120020
OUTLINE  BAL       R8,OU               OU SAVES R3 (ADDRESS OF 32 BYTES 12140020
*        TO BE DUMPED IN R7, INCREMENTS R3 BY 32, AND DUMPS THE LINE    12160020
         CLC       0(64,R3),0(R7)      NEXT 2 LINES SAME AS LAST?       12180020
         BNE       OUTLINE             NO, PUT OUT FIRST                12200020
*        IF ONLY 2 LINES IN A ROW MATCH, THEY WILL BOTH BE PRINTED.     12220020
         LR        R5,R3                                                12240020
RUNROUND LA        R5,32(R5)           POINT TO LINE BEFORE LINE TO BE  12260020
         C         R5,BEGADD-4         CHECKED. HAS LAST LINE BEEN DUN? 12280020
         BE        *+14                YES, COMPARE NO MORE             12300020
         CLC       32(32,R5),0(R7)     NO, CHECK NEXT LINE              12320020
         BE        RUNROUND            SAME, KEEP CHECKING              12340020
         MVC       OB(6),=C' LINES'    INFORM USER OF DUPLICATE LINES   12360020
         MVI       OB+9,C' '                                            12380020
         MVC       OB+10(110),OB+9     BLANK BUFFER                     12400020
         MVC       OB+27(13),=C'SAME AS ABOVE'                          12420020
         ST        R3,FA               ADDRESS OF FIRST DUPLICATE LINE  12440020
         UNPK      OB+11(7),FA+1(4)    UNPACK INTO BUFFER               12460020
         TR        OB+11(6),TRTBLH                                      12480020
         MVI       OB+17,C'-'                                           12500020
         ST        R5,FA               LAST DUPLICATE LINE'S ADDRESS    12520020
         UNPK      OB+18(7),FA+1(4)    UNPACK INTO BUFFER               12540020
         TR        OB+18(6),TRTBLH                                      12560020
         MVI       OB+24,C' '          BLANK OUT DUMMY DIGIT            12580020
         LA        R3,32(R5)           POINT TO 1ST NON-DUPLICATE LINE  12600020
         B         DUPLINES            PUT MESSAGE, NEXT LINE & GO AGAN 12620020
OU       EQU       *                                                    12640020
         C         R3,ROUNDEND         EXTRA WORK .Q                    12660027
         BH        ISTHATIT            YES, REFUSE                      12680024
         ST        R3,FA                                                12700020
         LR        R7,R3                                                12720020
         UNPK      OB(7),FA+1(4)       UNPACK ADDRESS INTO BUFFER       12740020
         MVI       OB+6,C' '           BLANK DUMMY DIGIT                12760020
         LA        R15,OB+9            POINT TO FIRST BUFFER POSITION   12780020
         LA        R10,2               2 TIMES THROUGH, 16 BYTES EACH   12800025
HALFB    LA        R14,4               4 WORDS PER HALF LINE            12820025
WORD     EQU       *                                                    12840020
         L         R4,0(R3)                                             12860020
         ST        R4,FA               MOVE NEXT WORD TO UNPACK AREA    12880020
         LA        R3,4(R3)            POINT TO NEXT WORD               12900020
         UNPK      0(9,R15),FA(5)      UNPACK INTO BUFFER               12920020
         MVI       8(R15),C' '         BLANK DUMMY DIGIT                12940020
         LA        R15,9(R15)          POINT TO NEXT BUFFER POSITION    12960020
         BCT       R14,WORD             GO BACK UNLESS FINISHED HALF    12980020
         LA        R15,3(R15)          SKIP 3 PRINT POSITIONS           13000020
         BCT       R10,HALFB            GO BACK IF ONLY HALF DONE       13020020
         LR        R6,R9                                                13040020
         USING     SARA,R4                                              13060020
         DROP      R13                                                  13080020
         LR        R4,R13                                               13100020
         LM        R8,R15,0(R7)        MOVE CHARACTERS TO BUFFER        13120020
         STM       R8,R15,OB+87                                         13140020
         LR        R9,R6                                                13160020
         LR        R13,R4                                               13180020
         USING     SARA,R13                                             13200020
         DROP      R4                                                   13220020
         TR        OB+87(32),TRTBL     ACTUAL CHARACTERS OR . FOR I(VAL 13240020
         TR        OB(85),TRTBLH                                        13260020
         LA        R8,OUTLINE+4        NEVER CALLED FROM ANYWHERE ELSE  13280020
         B         PUT                 PUT LINE & RETURN (R8)           13300020
DIV      DD        R0,TEN                                               13320020
         AP        EXP,PONE                                             13340020
         B         RECHECK                                              13360020
MULT     MD        R0,TEN                                               13380020
         SP        EXP,PONE                                             13400020
         B         RECHECK                                              13420020
ZERO     MVC       1(24,R6),=C'+.00000000000000000 E+00'                13440020
         B         RESET                                                13460020
         DROP      R13                 RESTORE R13 BEFORE USING         13480024
         EJECT                                                          13500024
TIMERR   EQU   *                       USER'S JOB EXCEEDED TIME LIMIT   13520024
*        OS EXPECTS A RETURN SO THAT IT CAN RESTORE CONTROL TO USER'S   13540024
*        PROGRAM.  TO AVOID THIS, WE DUMP THE USER'S CORE AND THEN      13560024
*        ZERO HIS PROGRAM AREA, ISSUE A SPIE AND RETURN TO THE USER.    13580024
*        THE RESULTING ERROR (HOPEFULLY) GIVES US BACK CONTROL AT       13600024
*        TIMER1 WHERE A NORMAL RETURN TO ASMGASM TAKES PLACE.  SPIE     13620024
*        ALSO EXPECTS A RETURN BUT THIS CAN BE SIMULATED BY TURNING     13640024
*        OFF A BIT.                                                     13660024
*                                                                       13680024
         USING TIMERR,R15              R15 IS OUR FIRST BASE            13700024
         L     R13,=A(SARA)            NOW WE CAN USE R13               13720025
         USING SARA,R13                AS A DATA BASE                   13740025
         DROP  R15                                                      13760024
         STM   R14,R2,TIMESAVE         SAVE RETURN AND WORK REGISTERS   13780024
         L     R2,BASE                                                  13800024
         L     R9,ESDTBL+64            RESTORE ASM POINTER        V7A57 13810028
         MVI   TIMESW,X'01'            SET TIMER OVERFLOW SWITCH        13820024
         L     R1,16(0,0)              POINT AT CVT                     13840024
         L     R1,0(0,R1)              POINT AT TCB ADDRESS PAIR        13860024
         L     R1,4(0,R1)              POINT AT CURRENT TCB             13880024
         L     R1,0(0,R1)              POINT AT TIMER RB                13900024
         MVC   ESDTBL(64),32(R1)       SAVE USER'S REGISTERS FOR DUMP   13920024
         L     R1,28(0,R1)             POINT AT PROGRAM RB              13940024
         MVC   TIMESAVE+4(4),20(R1)    SAVE OLD APSW FOR DUMP           13960024
         MVC   OB-1(9),=C'1ASMG304I'   MOVE IN ERROR NUMBER FOR PRINT   13980024
         MVI   OB+6,C'5'               MAKE IT 'ASMG305I'               14000024
         MVC   OB+20(57),MASK2         SET UP ERROR MESSAGE             14020024
         MVC   OB+8(12),OB+80          BLANKS                           14040024
         L     R7,FULL                 LOAD TIME ALLOWED                14060024
         CVD   R7,TIMAREA              MAKE IT PACKED                   14080024
         ED    OB+62(9),TIMAREA+4      ENTER TIME IN MESSAGE            14100024
         BAL   R8,PUT                  PRINT ERROR MESSAGE              14120024
         LA    3,TIMESAVE              MAKE R3 POINT TO OLD APSW-4      14140024
         MVI   OB,C' '                 BLANK START OF PRINT LINE        14160024
         MVC   OB+1(119),OB            BLANK ALL OF PRINT LINE          14180024
         B     EXER1                   RETURN FOR A DUMP                14200024
*        ZAP ABOVE BRANCH TO NOP IF NO DUMP DESIRED FOR TIMER OVERFLOWS 14220024
ISTHATIT CLI   TIMESW,X'01'            HAS A TIMER OVERFLOW OCCURRED .Q 14240024
         BNE   THATSIT                 NO, WE'RE THROUGH                14260027
         SPIE  TIMER1,((1,15))         COME BACK TO TIMER1              14280024
         L     R3,BEGADD               LOAD BEGINNING OF USER'S AREA    14300024
         MVI   0(R3),X'00'             ZERO FIRST BYTE                  14310024
         LA    R0,256                  PICK UP BXH INCREMENT            14320027
         SR    R3,R0                   BACK OFF USER ADDR FOR 1ST BXH   14322026
         L     R1,ENDCORE              GET END OF USER AREA             14324027
         SR    R1,R0                   BACK OFF TO                      14326026
         BCTR  R1,0                    INCR+1 BYTES BEFORE END          14328027
ENCORE   DS    0H                                                       14330026
         BXH   R3,R0,FINCORE           BUMP UP INCR BYTES               14332027
         MVC   1(256,R3),0(R3)         ZERO SOME BYTES                  14334027
         B     ENCORE                  GO DO SOME MORE                  14336026
FINCORE  DS    0H                                                       14338026
         LR    R4,R3                   COPY CURRENT ADDRESS             14340026
         SR    R4,R1                   WHAT'S DONE - (END-INCR)         14342027
         SR    R0,R4                   INCR MINUS ABOVE DIFFERENCE      14344027
         BNP   FINLM                   BRANCH IF NOTHING TO DO          14345027
         BCTR  R0,0                    LESS 1 FOR MVC                   14346026
         LR    R1,R0                   TRANSFER LENGTH                  14348027
         EX    R1,FINMVC               ZERO WHAT'S LEFT                 14350027
FINLM    DS        0H                                                   14355027
         LM    R14,R2,TIMESAVE         RESTORE RETURN AND WORK REGS     14360024
         BR    R14                     RETURN TO USER'S OR OTHER AREA   14370024
FINMVC   MVC   1(*-*,R3),0(R3)         EXECUTED ZERO REMAINING AREA     14375027
         DROP  R13                                                      14380024
*        NOW STIMER IRB SHOULD BE GONE                                  14390024
         USING *,R15                   TEMPORARY BASE                   14400024
TIMER1   L     R13,=A(SARA)            GET R13 BASE                     14410024
         USING SARA,R13                                                 14420024
         DROP  R15                     DON'T NEED IT ANY MORE           14430024
         L     R2,BASE                 RESTORE R2 BASE                  14440024
         MVI   0(R1),X'00'             SIMULATE RETURN FROM SPIE        14450024
         L     R9,ESDTBL+64            RESTORE LINK TO ASMGASM          14460024
*********************************************************************** 14462025
*        RESTORE PREVIOUS SPIE, IF ANY                                  14464025
NEARLYIT L         R1,SAVEPICA         GET OLD PICA ADDRESS             14466025
         SPIE      MF=(E,(R1))         DO THE SPIE                      14468025
*                                                                       14470024
THATSIT  MVI       OB+11,C' '                                           14480020
         MVC       OB+12(108),OB+11                                     14500020
         MVC       OB-1(12),=C'0END OF TASK'                            14520020
         BAL       R8,PUT                                               14540020
         MVC       OB-1(12),OB+11      CLEAR BUFFER TO BLANKS           14560020
         MVI       TIMESW,X'00'        RESET TIMER OVERFLOW SWITCH      14570024
         NI        ESD+1,X'0F'         RECONSTITUTE PROGRAM             14580020
         OI        TXT+1,X'F0'                                          14600020
         NI        TXT+5,X'0F'                                          14620020
         OI        RLD+1,X'F0'                                          14640020
         NI        FA,X'00'                                             14660020
         NI        FLAG,X'00'                                           14680020
*./      DELETE    SEQ1=14690024,SEQ2=14699024                          14699025
*********************************************************************** 14700020
*        CALL TCLOSE TO RESET SYSUT2 TO WRITE IN CASE WE ARE IN BATCH   14720020
         L         R1,RENNIE                                            14740020
         CNOP      2,4                                                  14760020
         BALR      R0,R1                                                14780020
         DC        F'24'                                                14800020
         DC        F'4'                                                 14820020
         DC        F'1'                                                 14840020
*********************************************************************** 14860020
*********************************************************************** 14880020
*        CALL GROW TO RETURN ALL CORE OBTAINED BY VARIOUS SHRINKS.      14900020
         L         R1,ENDCORE                                           14920020
         S         R1,BEGADD                                            14940020
         ST        R1,GIVE                                              14960020
         L         R12,BEGADD                                           14980020
         ST        R12,GIVE+4                                           15000020
         L         R1,RENNIE                                            15020020
         CNOP      2,4                                                  15040020
         BALR      R0,R1                                                15060020
         DC        F'32'                                                15080020
GIVE     DS        F                                                    15100020
         DS        F                                                    15120020
*********************************************************************** 15140020
RETURN   EQU       *                                                    15160020
         LR        ACT,R9                                               15180020
         L         R14,FDRETURN        GET RETURN ADDR TO ASMGFD        15200026
         BR        R14                                                  15220020
         LTORG                                                          15240020
         DS        0D                  ALIGN START OF SAVE AREA         15245026
SARA     DS        18F                 OS SAVE AREA                     15250023
PATCH    DC        8S(*)               ASMGFEX PATCH AREA               15255026
TRTBL    DC        64C'.',C' ',12C'.',C'(+',C'.',C'&&',10C'.',C'$*)',2CX15260020
               '.',C'-',10C'.',C',',17C'.',C'''=',66C'.',C'ABCDEFGHI',7X15280020
               C'.',C'JKLMNOPQR',8C'.',C'STUVWXYZ',6C'.',C'0123456789'  15300020
         DC        6C'.'               THIS CARD MUST FOLLOW TRTBL      15320020
EOFLAG   DS        CL1                                                  15340020
TIMESW   DC        X'00'               TIMER OVERFLOW SWITCH            15350024
SAVEPICA DC        A(0)                SAVE OLD PICA ADDRESS            15355025
SAVEPIE  DS        F                                                    15360020
ENDCORE  DS        F                                                    15380020
ROUNDEND DS        F                   ROUNDED END OF USER'S AREA       15400027
RENNIE   DS        F                                                    15420020
FULL     DS        F                                                    15440020
TIMESAVE DS        5F                  SAVE FOR R14,APSW,R0,R1,R2       15450024
FUDGE1   DC        D'.72057594037927936'                                15460020
FUDGE2   DC        F'100000000'                                         15480020
P16      DC        P'16'                                                15500020
         DS        0D                                                   15520020
C        DS        CL80                                                 15540020
MASK2    DC        C'EXCESSIVE EXECUTION TIME. TIME ALLOWED WAS ',X'202X15560020
               0202021',C'.',X'2020',C'0 SEC.'                          15580020
         DS        0D                  DO NOT ADD DATA AFTER THIS POINT 15600020
*        STORAGE IS DELICATELY ARRANGED TO WORK. SEE NEXT COMMENTS.     15620020
         DC        C' '                                                 15640020
*        THERE MUST BE EXACTLY 175 BYTES BETWEEN ABOVE CARD & TRTBL     15660020
*        ALSO OBM1 MUST BE ALIGNED TO A FULL WORD BOUNDARY              15680020
*        IN ADDITION, C MUST BE ALIGNED TO A DOUBLE WORD BOUNDARY       15700020
ANY      DC        X'00'               *********  NOT USED              15720020
         DS        6C                  UNUSED                           15740020
FA       DC        F'0',X'CC'                                           15760020
EXP      DS        CL2                                                  15780020
PONE     DC        P'1'                                                 15800020
OBM1     DC        CL133' '                                             15820026
OB       EQU       OBM1+1                                               15840020
CCC      DS        CL1                                                  15860020
HALF     DC        H'0'                                                 15880020
FLAG     EQU       HALF+1                                               15900020
COUNT    DC        F'0'                                                 15920020
TEN      DC        D'10'                                                15940020
ONE       DC       D'1'                                                 15960020
TENTH    DC        D'0.1'                                               15980020
TIMAREA  DS        D                                                    16000020
EXERPSW  DC        D'0'                SPIE SAVE FOR USER PSW     V7A45 16010028
TRTBLH   EQU       *-240                FIRST 240 BYTES OF TRANSLATE    16020020
         DC        C'0123456789ABCDEF'  TABLE UNNECESSARY (NEVER USED)  16040020
ESDTBL   DS        128D                                                 16060020
BASE     EQU       ESDTBL+68                                            16080020
FDRETURN DS        F                   RETURN ADDRESS TO ASMGFD         16090026
ERAR     EQU       *                                                    16100020
         DC        C'IMPRECISE AS FOLLOWS            '                  16110023
         DC          C'INVALID OP-CODE                 '                16120020
         DC          C'PRIVILEGED OP-CODE              '                16140020
         DC          C'EXECUTE OF EXECUTE              '                16160020
         DC          C'INVALID ADDRESS (PROTECTION)    '                16180020
         DC          C'INVALID ADDRESS (UNAVAILABLE)   '                16200020
         DC          C'INVALID INSTRUCTION OPERAND     '                16220020
         DC          C'INVALID DATA                    '                16240020
         DC          C'FIXED OVERFLOW                  '                16260020
         DC          C'FIXED DIVIDE OR CVB OVERFLOW    '                16280020
         DC          C'DECIMAL OVERFLOW                '                16300020
         DC          C'DECIMAL DIVIDE OVERFLOW         '                16320020
         DC          C'EXPONENT OVERFLOW               '                16340020
         DC          C'EXPONENT UNDERFLOW              '                16360020
         DC          C'SIGNIFICANCE EXCEPTION          '                16380020
         DC          C'FLOATING DIVIDE OVERFLOW        '                16400020
IMPTAB   DC        AL1(11,10,15,14,13,12,9,8,7,6,5,4)                   16410023
*******  WARNING  *******    CONSTANTS ARE CAREFULLY ARRANGED           16420020
*                            TAMPERING WITH THEIR ORDER IS DANGEROUS    16440020
*        WRITTEN BY DAVE POTTER, AUGUST 1967                            16460020
         END                                                            16480020
./ ADD NAME=ASMGFI
FI       TITLE     'ASMG     INTERLUDE, ESD OUTPUT PHASE'               00020021
         ISEQ  73,78                                                    00040021
         COPY      ASMGSET                                              00060020
ASMGFI   CSECT                                                          00080020
*                                                                     * 00100020
*                                                                     * 00120020
*TITLE 'ASMGFI      G ASSEMBLER INTERLUDE PHASE                       * 00140021
*FUNCTION/OPERATION-                                                  * 00160020
*   TO WRITE THE EXTERNAL SYMBOL DICTIONARY ON SYSPRINT, SYSPUNCH,    * 00180020
*   AND/OR SYSGO DATA SETS. THE EXTERNAL SYMBOL TABLE SEGMENTS AND    * 00200020
*   LITERAL POOL BASES ARE LOCATED IN CORE. IF EXECUTE WAS REQUESTED  * 00220020
*   THEN THE ESD IS ALSO WRITTEN ON SYSUT2 FOR FEX.                   * 00240020
*ENTRY POINT- ASMGFI                                                  * 00260020
*   CALLING SEQUENCE                                                  * 00280020
*        L         SRB,=A(ASMGFI)                                     * 00300020
*        BR        SRB                  TRANSFER CONTROL TO ASMGFI    * 00320020
*INPUT-                                                               * 00340020
*   REGISTER- ACT CONTAINS CONTROL TABLE POINTER                      * 00360020
*   PARAMETERS- LITERAL BASE TABLE AND EXTERNAL SYMBOL DICTIONARY.    * 00380020
*OUTPUT-                                                              * 00400020
*   REGISTER- ACT CONTAINS CONTROL TABLE POINTER                      * 00420020
*   PARAMETERS- ADJUSTMENT TABLE AND LITERAL ADDRESS TABLE.           * 00440020
*EXTERNAL REFERENCES- NONE                                            * 00460020
*EXITS-                                                               * 00480020
*   NORMAL- TRANSFERS CONTROL TO PHASE 8 VIA                          * 00500025
*        XCTL  ,DE=(SRR)     I.E. EP=ASMGF8                           * 00520025
*   ERROR- NONE                                                       * 00540020
*TABLES/WORK AREAS-                                                   * 00560020
*   ADJUSTMENT TABLE- (1092 BYTES) CONTAINS THE EXTERNAL TABLE SEGMENT* 00580020
*                                  AND LITERAL POOL BASES             * 00600020
*./      DELETE    SEQ1=00620020,SEQ2=00620020                          00620025
*   CARD- (81 BYTES) PUNCH CARD AREA FOR ESD OUTPUT                   * 00640020
*   ESDSTG- (6240 BYTES) BUFFER FOR ESD ENTRIES                       * 00660020
*   HD1-  PRINT LINE FOR FIRST LINE OF HEADING                        * 00680026
*   HD2-  PRINT LINE FOR SECOND LINE OF HEADING                       * 00700026
*   LBUFR-  PRINT LINE AREA FOR ESD OUTPUT                            * 00720026
*                                                                     * 00740020
         EJECT                                                          00760020
         PRINT     NOGEN                                                00780020
         FDIMEN                                                         00800020
         PRINT GEN                                                      00820020
CTRTBL   EQU   CTRTBP                   TRANSLATE TABLE                 00840020
GR14     EQU   14                       GENERAL REGISTER 14             00860020
GR15     EQU   15                       GENERAL REGISTER 15             00880020
*                        TYPES OF ESD ENTRIES                           00900020
SDCON    EQU   0                        SECTION DEF NAME (CSECT,START)  00920020
LDCON    EQU   1                        NAME IN ENTRY                   00940020
ERCON    EQU   2                        EXTERNAL REFERENCE              00960020
PCCON    EQU   4                        UNNAMED CONTROL SECTION         00980020
CMCON    EQU   5                        COMMON CONTROL SECTION          01000020
VCCON    EQU   8                        V-TYPE ADDRESS CONSTANT         01020020
DXCON    EQU   6                        DUMMY EXTERNAL SECTION          01040020
WXCONA   EQU   10                       WEAK EXTERNAL REFERENCE         01050025
*                        ENTRY AND EXTERN POINTS                        01060020
         ENTRY     F7ABEND             NO CORE FOR SYMBOL TABLE ABEND   01080020
         ENTRY     SYSO1               OBJECT OUTPUT ROUTINE            01100020
         EXTRN     STGETR              SYMBOL TABLE LOOKUP IN ASMGF7S   01120020
         EJECT                                                          01140020
         LR    FRB,SRB                  TRANSFER ENTRY ADDRESS          01160027
         USING ASMGFI,FRB               AND TELL THE ASSEMBLER          01170027
         ENTRYOUT FI,CSECT=GAECT                                        01180027
         BAL   SRR,FII                  CALL INTERLUDE INITIATOR        01190027
         L     ACC,CCRDCT(,ACT)         PASSED FROM F7 (SYMCARDS)       01200027
         CVD   ACC,CRDCNT               CONVERT TO PACKED               01210027
         UNPK  CDCTFD(4),CRDCNT         PUT IN CARD NUMBER              01220027
         L     ADJPTR,CADJBS(,ACT)      ADDRESS OF ADJUSTMENT TABLE     01230027
         LH    NOESD,CNOESD(,ACT)       GET NUMBER OF ESD ENTRIES       01240027
         LTR   NOESD,NOESD              IS NUMBER ZERO .Q               01250027
         BZ    CALLF8                   NOESD, CALL ASMGF8I             01260027
         SPACE                                                          01270027
         L     GRZ,=V(ASMGF7D)          GET FINISHED ROUTINE ADDR       01280027
         USING PRINTBUF,GRZ             USE IT FOR A PRINT BUFFER       01290027
         MVC   LBUFR,L1BLANKS(GR1)      BLANK PRINT BUFFER              01300027
         MVC   HD1,L1BLANKS(GR1)        BLANK HEADER ONE                01310027
         MVI   HD1,X'FF'                PAGE EJECT                      01320027
         MVC   HD1+1(8),CTITLE(ACT)     PROGRAM I.D. TO HEADING LINE    01330027
         MVC   HD1ESD(L'SD1ESD),SD1ESD  SET TITLE                       01340027
         MVC   HD1PAGE(L'SD1PAGE),SD1PAGE  AND 'PAGE'                   01350027
         MVC   HD2,L1BLANKS(GR1)        BLANK HEADER TWO                01360027
         MVI   HD2,X'02'                DOUBLE SPACE                    01370027
         MVC   HD2SYMT(L'SD2SYMT),SD2SYMT  SECONDARY TITLE              01380027
         MVC   HD2+112(9),CTDATE(ACT)   DATE TO SECOND HEADER           01400027
         SPACE                                                          01420027
         L     VARFLD,CRD17             POSITION IN ESD FOR ESD TEXT    01440020
*        INITIALIZE LINE COUNT TO 1 SO FIRST LINE WILL INCLUDE HEADING  01460025
         LA    ACC,1                    INITIALIZE LINES LEFT TO ONE    01480025
         STH   ACC,LINECT               STORE                           01500020
         LH    NOESD,CNOESD(ACT)        NUMBER OF ESD ENTRIES           01520020
         LA        NOESD,1(0,NOESD)    ADD 1 FOR BCT                    01540020
         L         ACC,CTESRB(0,ACT)   RESET CTESRP                     01560020
         ST        ACC,CTESRP(0,ACT)                                    01580020
         L         ESDPTR,0(0,ACC)     POINT AT FIRST ESD SEGMENT       01600020
         B         FI8A                BEGIN BY JUMPING DUMMY 00 ENTRY  01620020
         EJECT                                                          01640020
*                        BUILD THE ADJUSTMENT TABLE                     01660020
*                  FIRST PASS ON ESD                                    01680020
FI3      CLI   TTYPE(ESDPTR),SDCON      IF TYPE = SD OR PC              01700020
         BE    FI30                     YES,BUILD ADJUSTMENT TABLE ENTR 01720020
         CLI   TTYPE(ESDPTR),PCCON                                      01740020
         BNE   FI8A                     NOT, DONT BUILD ADJUSTMENT TABL 01760020
 SPACE                                                                  01780020
FI30     L     ACC,CSTVAL(ACT)          GET RELATIVE LOC FROM START CD  01800020
         ST    ACC,AID(ADJPTR)          PUT IN ADJUSTMENT TABLE         01820020
         MVC   AID(1,ADJPTR),TID(ESDPTR)     MOVE IN ESD/ID             01840020
         MVC   TADDR(3,ESDPTR),ADDR(ADJPTR)     SET LOCATION IN ESD     01860020
         LA    ADJPTR,4(ADJPTR)         SET ADJPTR FOR NEXT ENTRY       01880020
         A     ACC,TLTH-1(ESDPTR)       ADD LENGTH                      01900020
         LA    ACC,7(ACC)               ADJUST START VALUE              01920020
         ST    ACC,CSTVAL(ACT)          TO NEXT DOUBLE WORD             01940020
         NI    CSTVAL+3(ACT),X'F8'                                      01960020
 SPACE                                                                  01980020
FI8A     LA        ESDPTR,16(0,ESDPTR)  POSITION TO NEXT ESD            02000020
         LH    ACC,ITEMCT               NUMBER LEFT IN THIS BLOCK       02020020
         BCT   ACC,STARP2               BRANCH IF MORE LEFT             02040020
 SPACE                                                                  02060020
         L         ACC,CTESRP(0,ACT)   POINT AT NEXT SEGMENT            02080020
         LA        ACC,4(0,ACC)                                         02100020
         ST        ACC,CTESRP(0,ACT)                                    02120020
         L         ESDPTR,0(0,ACC)     SET ESD POINTER                  02140020
         LA    ACC,16                  RESET ENTRIES/SEGMENT COUNTER    02160020
 SPACE                                                                  02180020
STARP2   STH   ACC,ITEMCT               SAVE NO. LEFT IN BLOCK          02200020
         BCT   NOESD,FI3                LOOP FOR ALL ESD ENTRIES        02220020
         ST        ADJPTR,CTADJEND(0,ACT)  END OF ADJ TABLE POINTER     02240020
 EJECT                                                                  02260020
*                             OUTPUT THE ESD                            02280020
*                  SECOND PASS ON ESD                                   02300020
         L         ACC,CTESRB(0,ACT)   RESET SEGMENT POINTER            02320020
         ST        ACC,CTESRP(0,ACT)                                    02340020
         L     ESDPTR,0(0,ACC)          SET ESD POINTER                 02360020
         LH    NOESD,CNOESD(ACT)           NUMBER OF ESD ENTRIES        02380020
         LA    NOESD,1(0,NOESD)        ADD 1 FOR BCT                    02400020
         MVI       ITEMCT+1,16          NUMBER OF ESD S PER BLOCK       02420020
         B         FI8B                JUMP DUMMY ENTRY AGAIN           02440020
         SPACE 2                                                        02460020
FI4      CLI   TTYPE(ESDPTR),LDCON      SEE IF AN ENTRY                 02480020
         BE    FI4LD                    YES, GO COMPLETE ENTRY          02500020
TABLOOK  SR    GR2,GR2                                                  02520020
         TRT   TTYPE(1,ESDPTR),BTBL     FIND WHERE TO BRANCH TO         02540020
         B     TYPBR(GR2)               COMPUTED BRANCH                 02560020
*                        BRANCH TABLE                                   02580020
BTBL     DC    12AL1(FIONA-TYPBR)       IF NOT DEFINED BELOW,           02600025
*                                          THEN GO TO FIONA             02610025
 SPACE                                                                  02620020
         ORG   BTBL+SDCON               IF START OR CSECT               02640020
         DC    AL1(FI7-TYPBR)           GO TO FI7                       02660020
         ORG   BTBL+ERCON               IF EXTERNAL REFERENCE           02680020
         DC    AL1(FI7-TYPBR)           GO TO FI7                       02700020
         ORG   BTBL+PCCON               IF PRIVATE CODE                 02720020
         DC    AL1(FI7-TYPBR)           GO TO FI7                       02740020
         ORG   BTBL+CMCON               IF COMMON SECTION               02760020
         DC    AL1(FI7CM-TYPBR)         GO TO FI7CM                     02780020
         ORG   BTBL+VCCON               IF V-TYPE CONSTANT              02800020
         DC    AL1(FI7VC-TYPBR)         GO TO FI7VC                     02820020
         ORG   BTBL+DXCON               IF EXTERNAL DUMMY SECTION       02840020
         DC    AL1(DXD-TYPBR)           GO TO DXD                       02860020
         ORG   BTBL+WXCONA              IF WEAK EXTERNAL REFERENCE      02870025
         DC    AL1(FI7WX-TYPBR)         GO TO FI7WX                     02875025
         ORG                                                            02880020
TYPBR    EQU   *-2                                                      02900020
FIONA    B     FI8B                     SKIP AND GO TO NEXT ESD         02920020
 EJECT                                                                  02940020
*                        PROCESS ENTRY                                  02960020
FI4LD    CLI   TID(ESDPTR),1            HAS THIS ENTRY BEEN COMPLETED   02980020
         BE    LDCOM                    YES                             03000020
 SPACE                                                                  03020020
         LA    SP1,TNAME(ESDPTR)        NO, GET ADDRESS OF NAME         03040020
         LA        SP2,8               SET SYMBOL LENGTH                03060020
         L         SRB,=A(STGETR)      DO SYMBOL TABLE LOOKUP           03080020
         BALR      SRR,SRB                                              03100020
         LTR   SP1,SP1                  NOT FOUND - ERROR               03120020
         BZ    FI8B                                                     03140020
 SPACE                                                                  03160020
         CLI   ESDDD(SP1),0             ABSOLUTE - ERROR                03180020
         BZ    FI8B                                                     03200020
 SPACE                                                                  03220020
         TM    ADJCD(SP1),4             DEFINED IN DSECT OR COM - ERROR 03240020
         BO    FI8B                     ERROR                           03260020
 SPACE                                                                  03280020
         TM    ADJCD(SP1),ENTCMBS       IF XD OR LD COMPLETE            03300020
         BNZ   FI8B                     ERROR                           03320020
         OI    ADJCD(SP1),ENTCMBI       SET XD COMPLETE                 03340020
         TM    ADJCD(SP1),SDBIT         IS THIS A CSECT,DSECT OR EXTRN  03360020
         BC    14,FI8B                   YES,IGNORE                     03380020
 SPACE                                                                  03400020
         MVC   TADDR(3,ESDPTR),VALUE(SP1)  SET ADDRESS AND LENGTH IN    03420020
         MVC   TLTH+2(1,ESDPTR),ESDDD(SP1)   ESD FROM ST                03440020
         B     ADJSCH                   CONTINUE                        03460020
 SPACE                                                                  03480020
LDCOM    MVI   TID(ESDPTR),0                                            03500020
         SPACE 1                                                        03520020
ADJSCH   L     ACC,CADJBS(ACT)          SET ACC TO ADJUSTMENT TABLE     03540020
ADJLP    CLC   TLTH+2(1,ESDPTR),0(ACC)  IS THIS THE RIGHT CONTROL SECT  03560020
         BE    ADJFND                     YES                           03580020
 SPACE                                                                  03600020
         LA    ACC,4(ACC)               SET FOR NEXT                    03620020
         B     ADJLP                    LOOP                            03640020
 SPACE                                                                  03660020
ADJFND   L     ACC,0(ACC)               SET ACC WITH                    03680020
         LA    ACC,0(ACC)                 ADJUSTMENT VALUE              03700020
         A     ACC,TTYPE(ESDPTR)        ADD DISPLACEMENT VALUE          03720020
         ST    ACC,TTYPE(ESDPTR)        SET TADDR                       03740020
ELLDID   UNPK  TEMPAR(3),TLTH+2(2,ESDPTR)         CONVERT LLDID         03760020
         TR    TEMPAR(2),HEXTBL                   TO HEX                03780020
         MVC   LLDID(2),TEMPAR          PUT IN OUTPUT AREA              03800020
         B     RETLLD                        SET LLDID WHEN TYPE = LD   03820020
 EJECT                                                                  03840020
*                        PROCESS EXTERNAL DUMMY SECTION                 03860020
DXD      MVC   ESDNO,TADDR(ESDPTR)      GET ESD NUMBER                  03880020
         LH    SP1,ESDNO                                                03900020
         LTR   SP1,SP1                  TEST FOR ZERO                   03920020
         BZ    CALN                     ZERO-GENERATE FROM DXD          03940020
         LA    SP2,15                   NON-ZERO-GENERATE FROM V-TYPE   03960020
         NR    SP2,SP1                  GET LOW ORDER BYTE              03980020
         SR        SP1,SP2             SP1 = SEGMENT NUMBER             04000020
         SLL   SP2,4                    FIND THE DSECT IN THE           04020020
         SRL   SP1,2                    ESD TABLE THAT THIS             04040020
         A         SP1,CTESRB(0,ACT)    Q-TYPE REFERENCES               04060020
         L     SP1,0(0,SP1)                                             04080020
         AR    SP1,SP2                                                  04100020
         MVC   TLTH(3,ESDPTR),TLTH(SP1)           MOVE IN DSECT LENGTH  04120020
CALN     MVC   CALIGN(1,VARFLD),TALIGN(ESDPTR)    PUT IN ALIGNMENT      04140020
FI7CM    XC    TADDR(3,ESDPTR),TADDR(ESDPTR)  SET COM TO ZERO           04160026
         B     FI7                      CONTINUE                        04180020
*                        V-TYPE CONSTANTS                               04200020
FI7VC    MVI   TTYPE(ESDPTR),ERCON      SET V-TYPE SAME AS EXTERNAL     04220020
         B     FI7                      CONTINUE                        04230025
 SPACE                                                                  04240020
*                        WEAK EXTERNAL REFERENCE                        04245025
FI7WX    MVI   TTYPE(ESDPTR),WXCONA     SET WXTRN SAME AS V-TYPE        04250025
         SPACE 1                                                        04255025
*                        START, CSECT, PRIVATE CODE, OR EXTERNAL        04260020
FI7      UNPK  TEMPAR(3),TID(2,ESDPTR)  CONVERT TID TO HEX              04280020
         TR    TEMPAR(2),HEXTBL                                         04300020
         MVC   LID(2),TEMPAR                 SET LID                    04320020
         CLI   COL15,C' '               SEE IF COLUMN 15 HAS BEEN SET   04340020
         BNE   ISITER                   YES, DONT SET AGAIN             04360020
 SPACE                                                                  04380020
STCL15   MVC   COL15+1(1),TID(ESDPTR)        SET COL15 = TID            04400020
         MVI   COL15,X'0'                                               04420020
ISITER   CLI   TTYPE(ESDPTR),ERCON      SEE IF EXTERNAL TYPE            04440020
         BE    EER                      YES, BRANCH                     04460020
         CLI   TTYPE(ESDPTR),WXCONA     SEE IF WEAK EXTERNAL TYPE       04470025
         BE    EER                      YES, BRANCH                     04475025
 SPACE                                                                  04480020
ELLTH    UNPK  TEMPAR(7),TLTH(4,ESDPTR) CONVERT LENGTH                  04500020
         TR    TEMPAR(6),HEXTBL         TO HEX FOR OUTPUT               04520020
         MVC   LLTH(6),TEMPAR                                           04540020
 SPACE                                                                  04560020
RETLLD   MVC   CLTH(3,VARFLD),TLTH(ESDPTR)   SET CLTH                   04580020
         UNPK  TEMPAR(7),TADDR(4,ESDPTR)     CONVERT LADDR TO HEX       04600020
         TR    TEMPAR(6),HEXTBL                                         04620020
         MVC   LADDR(6),TEMPAR               SET LADDR                  04640020
         OC    LALIGN(1),CALIGN(VARFLD) SET ALIGNMENT                   04660020
         B     RETEER                   ALREADY SET CLTH SO SKIP NEXT   04680020
 SPACE                                                                  04700020
EER      MVC   CLTH(3,VARFLD),CLTH-1(VARFLD)                            04720020
RETEER   L     ACC,CTRTBL(ACT)          ADDRESS OF TRT TABLE            04740020
         TR    TNAME(8,ESDPTR),0(ACC)        CAUTION - CHANGES ESD      04760020
         MVC   CNAME(8,VARFLD),TNAME(ESDPTR) SET CNAME                  04780020
         MVC   LNAME(8),TNAME(ESDPTR)          AND LNAME                04800020
         MVC   CTYPP(4,VARFLD),TTYPE(ESDPTR) SET CTYPE AND CADDR        04820020
         SR    ACC,ACC                                                  04840020
         IC    ACC,TTYPE(ESDPTR)        GET TYPE                        04860020
         AR    ACC,ACC                  DOUBLE                          04880020
         LA    ACC,TYPTBL(ACC)          POINT AT NAME IN TABLE          04900026
         MVC   LTYPE(2),0(ACC)          MOVE TYPE NAME FROM TABLE       04920026
 SPACE                                                                  04940020
MOD20ZAP LA    VARFLD,*-*+16(,VARFLD)   BUMP VARFLD BY ESD ENTRY LENGTH 04960025
         C     VARFLD,CRDTOP            SEE IF CARD IMAGE IS FULL       04980020
         BNE   OUTLNE                   NO, DONT PUT OUT CARD           05000020
 SPACE                                                                  05020020
NOROUT   MVI   CBYTE+1,*-*+X'30'        PUT IN NO. BYTES IN CARD        05040025
         BAL   INTSUB,SUB               OUTPUT ESD CARD IMAGE           05060020
OUTLNE   DS    0H                                                       05070026
         TM    CTESDI(ACT),X'20'        WAS ESD OPTION SPECIFIED .Q     05080026
         BZ    FI8B                     BRANCH IF NOT                   05100026
         LH    ACC,LINECT               GET LINE COUNT                  05120026
         BCT   ACC,LINEOK               REDUCE COUNT BY ONE             05140026
         BAL   SRR,PRNTHD               IF ZERO, START WITH A HEADED PG 05160026
LINEOK   DS    0H                                                       05170026
         STH   ACC,LINECT               SAVE UPDATED LINE COUNT         05180026
         LA    SP1,LBUFR                ADDR OF PRINT AREA              05200026
         BAL   SRR,SYSL                 PRINT ON SYSPRINT               05210026
         L     GR1,ADLIST1(,ACT)        POINT TO LIST1 COMMON AREA      05220026
         MVC   LBUFR(L'LBUFR),L1BLANKS(GR1)  BLANK THE LINE             05240026
 SPACE                                                                  05260020
FI8B     LA    ESDPTR,16(0,ESDPTR)      POSITION TO NEXT ESD            05280020
         LH    ACC,ITEMCT               NUMBER LEFT IN THIS BLOCK       05300020
         BCT   ACC,FI9                  BRANCH IF MORE LEFT             05320020
 SPACE                                                                  05340020
         L         ACC,CTESRP(0,ACT)   POINT AT NEXT SEGMENT            05360020
         LA        ACC,4(0,ACC)                                         05380020
         ST        ACC,CTESRP(0,ACT)                                    05400020
         L         ESDPTR,0(0,ACC)                                      05420020
         LA    ACC,16                  RESET ENTRIES PER SEG COUNTER    05440020
FI9      STH   ACC,ITEMCT               SAVE NUMBER LEFT IN BLOCK       05460020
         BCT   NOESD,FI4                LOOP FOR ALL ESD ENTRIES        05480020
 SPACE                                                                  05500020
FI10     S     VARFLD,CRD17             GET NUMBER OF FIELDS IN CARD    05520020
         BZ    FI5                      NONE, CONTINUE ON               05540020
 SPACE                                                                  05560020
         SH    VARFLD,=H'16'            SEE IF ONE OR TWO FIELDS LEFT   05580020
         LA    INTSUB,FI5               RETURN FOR OUTPUT CARD ROUTINE  05600020
         BZ    ONEFLD                   ONE FIELD LEFT - PUT IT OUT     05620020
 SPACE                                                                  05640020
         MVI   CBYTE+1,X'20'            TWO FIELDS LEFT                 05660020
         B     SUB                      PUT IT OUT                      05680020
 EJECT                                                                  05700020
*                        BUILD THE LITERAL ADDRESS TABLES (LAT)         05720020
FI5      L         SRR,LBPTR           POINT AT NEXT LBT/LAT ENTRY      05740020
         L         SRR,16(0,SRR)       CHAIN POINTER                    05760020
         LTR       SRR,SRR             TEST FOR NO MORE ENTRIES         05780020
         BZ        CALLF8               NO MORE LBT S, GET NEXT PHASE   05800020
 SPACE                                                                  05820020
         ST        SRR,LBPTR            SET AS NEXT POINTER             05840020
         SR        ACC,ACC             INITIALIZE ADDRESS               05860020
         L     ADJCT,CADJBS(ACT)        SET PTR TO ADJ BASE FOR SEARCH  05880020
         IC    GRB,LBTID(LBTPTR)                                        05900020
         STC       GRB,LOOPSR+1         SET UP LBT/ID                   05920020
LOOPSR   CLI       AID(ADJCT),*-*         SEARCH ESD ADJ TAB WITH LBTID 05940020
         BE    RELFND                       FOUND                       05960020
         LA    ADJCT,4(ADJCT)              IF NOT, INCREMENT ESD ADJPTR 05980020
         CLR   ADJCT,ADJPTR               ARE WE AT TOP                 06000020
         BL    LOOPSR                   NO, TRY AGAIN                   06020020
         B     ATOP                     YES                             06040020
 SPACE 3                                                                06060020
RELFND   MVC   TEMPF+1(3),ADDR(ADJCT)   SET LITERAL ADJ TABLE           06080020
         A     ACC,TEMPF                WHERE IT WAS FOUND              06100020
ATOP     MVC   TEMPF+1(3),LITAD(LBTPTR)                                 06120020
         A     ACC,TEMPF                1ST ITEM = ID, ADDR, + LITAD    06140020
         ST    ACC,AID(LADJP)                                           06160020
         MVC   TEMPF+1(3),D8(LBTPTR)                                    06180020
         A     ACC,TEMPF                2ND ITEM = 1ST + D8             06200020
         ST    ACC,AID+4(LADJP)                                         06220020
         MVC   TEMPF+1(3),D4(LBTPTR)                                    06240020
         A     ACC,TEMPF                3RD ITEM = 2ND + D4             06260020
         ST    ACC,AID+8(LADJP)                                         06280020
         MVC   TEMPF+1(3),D2(LBTPTR)                                    06300020
         A     ACC,TEMPF                4TH ITEM = 3RD + D2             06320020
         ST    ACC,AID+12(LADJP)                                        06340020
*        SET ESD ID                                                     06360020
         STC       GRB,AID+00(0,LADJP)                                  06380020
         STC       GRB,AID+04(0,LADJP)                                  06400020
         STC       GRB,AID+08(0,LADJP)                                  06420020
         STC       GRB,AID+12(0,LADJP)                                  06440020
         B         FI5                                                  06460020
 EJECT                                                                  06480020
*                        PUNCH OUTPUT CARD                              06500020
ONEFLD   MVI   CBYTE+1,X'10'            NUMBER BYTES FOR ONE FIELD      06520020
SUB      MVI   CBYTE,X'0'                    INTERNAL SUBROUTINE FOR    06540020
         MVC   CRDNME(4),CTITLE(ACT)    OUTPUTTING CARD IMAGE           06560020
         CVB   ACC,CRDCNT               PUT IN CARD SEQUENCE            06580020
         LA    ACC,1(ACC)               ADD ONE                         06600020
         CVD   ACC,CRDCNT                                               06620020
         UNPK  CDCTFD(4),CRDCNT         PUT IN COUNT FIELD              06640020
         OI    CDCTFD+3,X'F0'           SET ZONE                        06660020
         LA    SP1,CARD-1               WHERE TO START OUTPUTTING       06680020
         BAL   SRR,SYSO                 PUT OUT CARD                    06700020
         L     VARFLD,CRD17             RESTORE WHERE TO PUT ESD ON CD  06720020
         MVC   CARD+5(67),CARD+4        BLANK OUT CARD                  06740020
         BR    INTSUB                   RETURN                          06760020
 SPACE                                                                  06780020
*                        PRINT HEADING                                  06800020
PRNTHD   ST    SRR,SAVEF                SAVE RETURN                     06820020
         L     SRR,ADLIST1(,ACT)        POINT TO LIST1 IN ASMGASM       06830026
         L     ACC,L1PAGENO(,SRR)       GET CURRENT PAGE NUMBER         06840026
         LA    ACC,1(,ACC)              INCREMENT PAGE COUNT BY ONE     06850026
         ST    ACC,L1PAGENO(,SRR)       UPDATE CURRENT PAGE NUMBER      06860026
         CVD   ACC,PGCNT                CONVERT PAGE COUNT TO PACKED    06880026
         MVC   CNTFLD,=X'40202120'      EDIT MASK WITH BLANKS           06900027
         ED    CNTFLD,PGCNT+6           EDIT IN PAGE NUMBER             06920027
*./      DELETE    SEQ1=06940020,SEQ2=07000020                          07000027
         LA    SP1,HD1                  PRINTS HEADING ONE              07020020
         BAL   SRR,SYSL                 CALL SYSLIST                    07040020
         LA    SP1,HD2                  PRINTS HEADING TWO              07060020
         BAL   SRR,SYSL                 CALL SYSLIST                    07080020
         MVI   LBUFR,X'01'              RESET PRINT BUFFER TO SKIP LINE 07100026
         SR    ACC,ACC                                                  07120020
         IC    ACC,CTPGLNCT(ACT)        SET LINE COUNT                  07140020
         L     SRR,SAVEF                RESTORE RETURN ADDRESS          07160020
         BR    SRR                      RETURN                          07180020
MVBLNK   MVC   CNTFLD(*-*),=CL6' '      EXECUTED MOVE TO BLANK LEAD 0'S 07200026
 EJECT                                                                  07220020
* F/INTERLUDE INITIALIZATION                                            07240020
         SPACE 1                                                        07260020
FII      DS    0H                                                       07280027
         L         GR1,CTXIO1(0,ACT)   PUT ADJ TAB IN F7 OUTPUT BUFFER  07300020
         S         GR1,=F'1092'                                         07320020
         ST    GR1,CADJBS(ACT)          ADDRESS OF ADJUSTMENT TABLE     07340020
         LA    SP1,CTLBTP-16(0,ACT)     LBT CHAIN                       07360020
         ST    SP1,LBPTR                LOG REC PTR                     07380020
         NI        CTXRFI(ACT),X'FD'   TURN OFF XREF SWITCH FOR F7S     07400020
         L         GR1,ADLIST1(,ACT)   POINT TO LIST1 IN ASMGASM        07410025
         CLC       =C'20',L1ISNAME+6(GR1)  INSTRUCTION SET 20 .Q        07420025
         BNE       FIIDONE             NO, PROCEDE                      07430025
         MVI       MOD20ZAP+3,X'30'    YES, ONLY 1 ESD ENTRY PER CARD   07440025
         MVI       NOROUT+1,X'10'      LENGTH OF DATA PER CARD IS 16    07450025
FIIDONE  TM        CTEXEC(ACT),X'20'   IS EXECUTE ON .Q                 07460026
         BCR       8,SRR               NO, EXIT NOW                     07470025
         MVI       PCHX+1,0            NOP THE OBJECT ON SYSUT2 SWITCH  07480020
         BR    SRR                      EXIT                            07500020
 EJECT                                                                  07520020
* F/INTERLUDE PHASE CLOSE                                               07540020
******************                                                      07560020
 SPACE                                                                  07580020
CALLF8   MVC   CCRDCT(4,ACT),CDCTFD     MOVE IN CARD COUNT              07600020
         LA    GRZ,IOSAVE               SAVE AREA FOR OS/360            07620020
******************                                                      07640020
         L     SRR,ADLIST1(,ACT)        GET ADDRESS OF LIST1 IN ASM     07650025
         LA    SRR,L1BLDL+5*L1LENBL(,SRR) BLDL TABLE ADDRESS OF F8      07660027
         XCTL  ,DE=(SRR)                CALL IN PHASE ASMGF8 IN ASMGF8I 07670025
         EJECT                                                          07680020
* SYSTEM OUTPUT SUBROUTINE G ASSEMBLER                                  07700020
         USING SYSO1,FRB                TEMP ENTRY FROM F7I             07720027
SYSO1    DS    0H                                                       07730027
         SH    FRB,=AL2(SYSO1-ASMGFI)  SET UP NORMAL BASE               07740027
         USING ASMGFI,FRB              REVERT TO ACTUAL BASE            07760027
SYSO     LA    SP1,1(SP1)               BYPASS CTL CHAR.                07780020
         STM   13,1,IOSAVE              SAVE                            07800020
         LA    13,IOSAVE+20             AND SET UP SAVE AREA            07820020
         TM    CTPCHI(ACT),X'80'        PUNCH OPTION BIT                07840020
         BZ    PCHI                     NO, DONT PUNCH CARD             07860020
         L     1,PCHDCB(ACT)            YES, GET PUNCH DCB              07880020
         PUT   (1),(SP1)                OUTPUT TO SYSPUNCH              07900020
PCHI     TM    CTCGOI(ACT),X'40'        LOAD OPTION SPECIFIED .Q        07920026
         BZ    PCHX                     NO, DON'T PUT ON SYSLIN         07940026
         L     1,GODCB(,ACT)            YES, GET SYSLIN DCB             07960026
         PUT   (1),(SP1)                OUTPUT TO SYSLIN                07980026
PCHX     BC        *-*+15,PCHX1(*-*)   OBJECT ON SYSUT2 FOR FEX SWITCH  08000020
         ST        SP1,PCHAD           PUT DATA ADDRESS IN WRITE CALL   08020020
         L         GR1,BUFFPT(0,ACT)   DO A WRITE ON SYSUT2             08040020
         CNOP      2,4                                                  08060020
         BALR      GR0,GR1                                              08080020
         DC        A(8,4)                                               08100020
PCHAD    DS        F                                                    08120020
         DC        A(80)               RECORD LENGTH                    08140020
         L         GR1,BUFFPT(0,ACT)   DO A CHECK ON SYSUT2             08160020
         CNOP      2,4                                                  08180020
         BALR      GR0,GR1                                              08200020
         DC        A(28,4)                                              08220020
PCHX1    LM    13,1,IOSAVE              RESTORE REGISTERS               08240020
         BR    SRR                      RETURN                          08260020
 EJECT                                                                  08280020
* SYSTEM LIST SUBROUTINE G ASSEMBLER                                    08300020
*                                                                       08320026
SYSL     DS    0H                                                       08340026
         STM   GRZ,GR1,IOSAVE           SAVE 13-01                      08360026
         LA    GRZ,IOSAVE+20            O/S SAVE AREA                   08380026
         L     GR1,LSTDCB(,ACT)         GET SYSPRINT DCB ADDRESS        08400026
         PUT   (1),(SP1)                PUT OUT RECORD                  08420026
*./      DELETE    SEQ1=08440020,SEQ2=09180020                          09180026
         LM    GRZ,GR1,IOSAVE           RESTORE 13-01                   09200026
         BR    SRR                      AND RETURN                      09220026
         SPACE 5                                                        09240026
*        NO CORE FOR SYMBOL TABLE ABEND                                 09260020
*./      DELETE    SEQ1=09280020,SEQ2=09380020                          09380022
F7ABEND  L         GR1,ADLIST1(,ACT)   POINT TO LIST1 IN ASMGASM        09400026
         BAL       GR0,L1ABEND(,GR1)   GO TO ABEND ROUTINE IN ASM       09420026
         DC        C'996I',AL1(L'MES996-1)                              09440027
MES996   DC        C'INSUFFICIENT MEMORY TO PROCESS SYMBOL TABLE'       09460027
  SPACE 2                                                               09480020
IOSAVE   DS    23F                      IO REGISTER SAVE AREA           09500020
 EJECT                                                                  09520020
*                        INDEX IN ESD TABLE                             09540020
TTYPE    EQU   0                        TYPE                            09560020
TADDR    EQU   1                        ADDRESS                         09580020
TALIGN   EQU   3                        ALIGNMENT                       09600020
TID      EQU   4                        ESD/ID                          09620020
TLTH     EQU   5                        LENGTH                          09640020
TNAME    EQU   8                        NAME                            09660020
 SPACE                                                                  09680020
TYPTBL   DC    C'SDLDER  PCCMXD      WX'  ESD TYPE IN EBCDIC            09700025
HXTBL    DC    C'0123456789ABCDEF'      TABLE TO CONVERT TO HEX         09720020
HEXTBL   EQU   HXTBL-240                                                09740020
*./      DELETE    SEQ1=09760020,SEQ2=09780020                          09780027
         SPACE 2                                                        09800020
ITEMCT   DC    H'16'                    COUNT PER ESD BLOCK             09820020
LINECT   DS    H                        LINES PER PAGE, INIT TO ONE     09840026
         SPACE                                                          09860027
         DS    0D                       FOR ALIGNMENT                   09880026
CRDCNT   DC    PL8'0'                   CARD COUNT                      09900026
PGCNT    DC    PL8'0'                   PAGE COUNT WORK AREA            09920026
 SPACE                                                                  09940020
         LTORG                                                          09960020
 SPACE                                                                  09980020
ESDNO    DC    H'0'                     NUMBER OF ESD                   10000020
 EJECT                                                                  10020020
PRINTBUF DSECT                                                          10025027
LBUFR    DS    0CL133                   SYSPRINT LINE BUFFER            10030026
         DC    X'00'                    NUMERIC CARRIAGE CONTROL        10040026
LNAME    DC    10C' '                   NAME                            10060020
LTYPE    DC    4C' '                    TYPE                            10080020
LID      DC    3C' '                    ESD/ID                          10100020
LADDR    DC    7C' '                    ADDRESS                         10120020
LALIGN   EQU   LADDR+5                  ALIGNMENT                       10140020
LLTH     DC    8C' '                    LENGTH                          10160020
LLDID    DC    87C' '                   LD ID                           10180020
         DC    CL13' '                  TRAILING BLANKS                 10200026
 SPACE                                                                  10220020
HD1      DS    0CL133                   FIRST LINE OF HEADING           10230027
         DC    X'FF'                    PAGE EJECT                      10240027
         DC    CL46' '                                                  10260020
HD1ESD   DC    CL65'EXTERNAL SYMBOL DICTIONARY'                         10280027
HD1PAGE  DC    C'PAGE '                                                 10300027
CNTFLD   DC    CL4' '                   PAGE NUMBER                     10320020
         DC    CL12' '                  TRAILING BLANKS                 10330026
 SPACE                                                                  10340020
HD2      DS    0CL133                   SECOND LINE OF HEADING          10350027
         DC    X'02'                    DOUBLE SPACE                    10360027
HD2SYMT  DC    C'SYMBOL   TYPE ID  ADDR  LENGTH LD ID'                  10380027
         DC    CL96' '                  TRAILING BLANKS AND DATE        10400026
ASMGFI   CSECT                                                          10410027
SD1ESD   DC    C'EXTERNAL SYMBOL DICTIONARY'                            10412027
SD1PAGE  DC    C'PAGE'                                                  10414027
SD2SYMT  DC    C'SYMBOL   TYPE ID  ADDR  LENGTH LD ID'                  10416027
 SPACE                                                                  10420020
         CNOP      6,8                 PUT CARD ON D BOUNDRY            10440020
         DC    H'0'                     CARD CONTROL CHARACTER          10460020
CARD     DC    X'02C5E2C4404040404040'  CARD IMAGE   (ESD)              10480020
         DC    70C' '                                                   10500020
CBYTE    EQU   CARD+10                  NUMBER OF BYTES ON CARD         10520020
COL15    EQU   CARD+14                  COLUMN 15                       10540020
CRDNME   EQU   CARD+72                  CARD NAME                       10560020
CNAME    EQU   0                        NAME RELATIVE TO VARFLD         10580020
CTYPP    EQU   8                        TYPE                            10600020
CALIGN   EQU   12                       ALIGNMENT                       10620020
CLTH     EQU   13                       LENGTH                          10640020
         ORG   CARD+76                                                  10660020
CDCTFD   DC    ZL4'0'                   CARD NUMBER                     10680020
         ORG                                                            10700020
CRD17    DC    A(CARD+16)               BEGINNING OF VARFLD             10720020
CRDTOP   DC    A(CARD+64)               END OF VARFLD                   10740020
 SPACE                                                                  10760020
TEMPF    DS    0F                       CONTIGUOUS                      10780020
         DC    X'0'                     WORKSPACE                       10800020
TEMPAR   DC    XL3'0'                    AND                            10820020
SAVEF    DC    F'0'                      SAVE AREA                      10840020
 SPACE                                                                  10860020
LBPTR    DS        F                    POINTER IN LBT                  10880020
 EJECT                                                                  10900020
AID      EQU   0                        ID IN ADJUSTMENT                10920020
ADDR     EQU   1                        ADDRESS IN ADJUSTMENT TABLE     10940020
ENTCMBS  EQU   X'18'                    MASK FOR COMPLETION OF XD OR LD 10960020
SDBIT    EQU   3                        MASK FOR CSECT,DSECT,OR EXTERN  10980020
ENTCMBI  EQU   X'10'                    MASK FOR COMPLETE CD            11000020
LBTID    EQU   3                        LITERAL BASE TABLE ID           11020020
LITAD    EQU   4                        LBT  ADDRESS                    11040020
D8       EQU   7                        LENGTH OF 8 BYTE STRINGS        11060020
D4       EQU   10                                 4                     11080020
D2       EQU   13                                 2                     11100020
ADJCD    EQU   1                        ADJECTIVE CODE IN SYMBOL TABLE  11120020
ESDDD    EQU   2                        ESD ID                          11140020
VALUE    EQU   3                        VALUE OF SYMBOL                 11160020
 SPACE                                                                  11180020
**                            REGISTER USAGE                         ** 11200020
*                                                                       11220027
U1       EQU   FRB            BASE REGISTERS                            11240020
ESDPTR   EQU   GRA            POINT TO ESD TABLE                        11260020
VARFLD   EQU   GRB            POINTS TO FIELD ON CARD                   11280020
SEGNO    EQU   GRB                      NO OF SEGMENTS TO FETCH         11300020
LBTPTR   EQU       SRR        POINTS TO LITERAL BASE TABLE              11320020
NOESD    EQU   GRC            COUNTS THROUGH ESD                        11340020
SRPTR    EQU   GRC                                                      11360020
ADJPTR   EQU   GRD            POINTS TO ESD ADJUSTMENT TABLE            11380020
LADJP    EQU       SRR        POINTS TO LITERAL ADJUSTMENT TABLE        11400020
ACC      EQU   SP1           ACCUMLATOR                                 11420020
DSPTR    EQU   GRY                                                      11440020
INTSUB   EQU   GRY            REGISTER FOR SUBROUTINE SUB               11460020
ADJCT    EQU   GRY            USED TO SEARCH ADJ TABLE FOR A LIT POOL   11480020
 SPACE                                                                  11500020
         END       ASMGFI                                               11520020
./ ADD NAME=ASMGFPP
FPP      TITLE     'ASMG     POST PROCESSOR'                            00020027
         ISEQ      73,78                                                00040027
         COPY      ASMGSET                                              00060027
*                                                                     * 00080027
ASMGFPP  START                                                          00100027
         PRINT     NOGEN                                                00120027
         FDIMEN                                                         00140027
         PRINT     GEN                                                  00160027
         SPACE                                                          00180027
*                                                                     * 00200027
*TITLE 'ASMGFPP ' ... POST PROCESSOR                                  * 00220027
*FUNCTION/OPERATION-                                                  * 00240027
*  ASMGFPP SORTS, PRINTS, AND PUNCHES THE RELOCATION DICTIONARY (RLD) * 00260027
*   SORTS AND PRINTS THE SYMBOL CROSS-REFERENCE (XRF),                * 00280027
*   AND PROCESSES AND PRINTS THE LITERAL CROSS-REFERENCE (LRF).       * 00300027
*ENTRY POINT- ASMGFPP  CALLED VIA                                     * 00320027
*        XCTL  EP=ASMGFPP               CALL POST PROCESSOR           * 00340027
*INPUT- RECORDS TYPE 7 (XRF) AND 8 (RLD)                              * 00360027
*   FORMAT OF THE XRF RECORD TYPE 7 IS-                               * 00380027
*                                                                     * 00400027
*   *******************************************************           * 00420027
*   *                                     *               *           * 00440027
*   *          SQUISHED SYMBOL            *   STATEMENT   *           * 00460027
*   *                                     *    NUMBER     *           * 00480027
*   *******************************************************           * 00500027
*    BYTES            6                            2                  * 00520027
*                                                                     * 00540027
*   FORMAT OF THE RLD RECORD TYPE 8 IS-                               * 00560027
*                                                                     * 00580027
*   **************************************************                * 00600027
*   *       *          *            *      *         *                * 00620027
*   * TABLE * POSITION * RELOCATION * FLAG * SYMBOL  *                * 00640027
*   *  ID   *   ID     *    ID      *      * ADDRESS *                * 00660027
*   **************************************************                * 00680027
*   BYTES 1      1          1           1       3                     * 00700027
*        FLAG- BITS                                                   * 00720027
*               0-1  00                                               * 00740027
*               2-3  00  A AND Y TYPE ADDRESS CONSTANTS               * 00760027
*                    01  V TYPE ADDRESS CONSTANTS                     * 00780027
*                    10  Q TYPE ADDRESS CONSTANTS                     * 00800027
*                    11  CXD                                          * 00820027
*               4-5      LENGTH OF ADDRESS CONSTANT MINUS ONE         * 00840027
*                6       ESD SIGN 0=PLUS(+), 1=MINUS(-)               * 00860027
*                7    0  NEXT ENTRY HAS SAME POSITION AND RELOCATION  * 00880027
*                        ID                                           * 00900027
*                     1  NEXT ENTRY HAS DIFFERENT POSITION AND/OR     * 00920027
*                        RELOCATION ID                                * 00940027
         SPACE                                                          00960027
*                                                                     * 00980027
*   FORMAT OF THE LREF RECORDS IN THE SYMBOL TABLE IS --              * 01000027
*                                                                     * 01020027
*DISP     -6                -3              0               3         * 01040027
*   ***************************************************************   * 01060027
*   *                 *               *               *           *   * 01080027
*   * START REF CHAIN * END REF CHAIN * LITERAL CHAIN * AS BEFORE *   * 01100027
*   *             F7D *           F7D *           F7G *           *   * 01120027
*   ***************************************************************   * 01140027
*BYTES    3                 3               3             7+LV        * 01160027
*                                                                     * 01180027
*DISP   10+LV        12+LV      13+LV       16+LV                     * 01200027
*   **************************************************                * 01220027
*   *             *         *            *           *                * 01240027
*   * STMT NUMBER *  ESDID  *  LOCATION  * AS BEFORE *                * 01260027
*   *         F7G *     F7G *        F7G *           *                * 01280027
*   **************************************************                * 01300027
*BYTES    2            1          3           11                      * 01320027
*                                                                     * 01340027
*        WHERE  LV = LENGTH OF TEXT FORM OF LITERAL                   * 01360027
*                                                                     * 01380027
         SPACE     2                                                    01400027
*OUTPUT- THE RELOCATION DICTIONARY AND CROSS REFERENCE IS PRINTED ON  * 01420027
*        SYSPRINT. RLD AND END CARDS ARE PUT ON SYSPUNCH AND/OR SYSGO.* 01440027
*   FORMAT OF RLD CARD-                                               * 01460027
*       COLUMN      CONTENTS                                          * 01480027
*          1        12-2-9 PUNCH                                      * 01500027
*         2-4       'RLD'                                             * 01520027
*         5-10      BLANK                                             * 01540027
*        11-12      NUMBER OF BYTES IN DATA FIELD                     * 01560027
*        13-16      BLANK                                             * 01580027
*        17-72      DATA FIELD                                        * 01600027
*           17-18      POSITION ESD/ID                                * 01620027
*           19-20      RELOCATION ESD/ID                              * 01640027
*            21        FLAG (SAME AS RLD INPUT)                       * 01660027
*           22-24      ABSOLUTE ADDRESS                               * 01680027
*           25-72      REMAINING RLD ENTRIES                          * 01700027
*        73-76      DECK ID                                           * 01720027
*        77-80      CARD SEQUENCE NUMBER                              * 01740027
*   FORMAT OF END CARD-                                               * 01760027
*       COLUMN      CONTENTS                                          * 01780027
*          1        12-2-9 PUNCH                                      * 01800027
*         2-4       'END'                                             * 01820027
*          5        BLANK                                             * 01840027
*         6-8       ENTRY ADDRESS FROM OPERAND OF END CARD            * 01860027
*         9-14      BLANK                                             * 01880027
*        15-16      ESDID OF ENTRY POINT                              * 01900027
*        17-30      BLANK                                             * 01920027
*         31        IDR COUNT  (BLANK,C'1' OR C'2')                   * 01940027
*        32-50      IDR1 IDENTIFYING THIS ASSEMBLER                   * 01960027
*           32-41      I.D.                                           * 01980027
*           42-45      VERSION/LEVEL                                  * 02000027
*           46-50      JULIAN DATE                                    * 02020027
*        51-69      IDR2 FROM SECOND OPERAND OF END CARD              * 02040027
*                                                                     * 02060027
*EXTERNAL ROUTINES-                                                   * 02080027
*   NAME           DECK       USE                                     * 02100027
*   CTDUMP(ACT)    ASMGRTA    FOR PATCHES TO FPP AND FD               * 02120027
*   ASMGFD         ASMGFD     FOR DIAGNOSTIC OUTPUT                   * 02140027
*EXITS- CALLS ASMGFD VIA-                                             * 02160027
*        L     R15,=V(ASMGFD)                                         * 02180027
*        BR    R15                                                    * 02200027
         EJECT                                                          02220027
*TABLES/WORKAREAS-                                                    * 02240027
*   XRFTAB         I/O CONTROL INFO FOR READING XREF                  * 02260027
*   RLDTAB         I/O CONTROL INFO FOR READING RLD                   * 02280027
*   IOSAVE     OS SAVE AREA                                           * 02300027
*   SAVE       GENERAL REGISTER SAVE AREA                             * 02320027
*   UMPH1      USING MAP HEADING ONE                                  * 02340027
*   UMPH2      USING MAP HEADING TWO                                  * 02360027
*   LRFH1      LITERAL CROSS-REFERENCE HEADING ONE                    * 02380027
*   LRFH2      LITERAL CROSS-REFERENCE HEADING TWO                    * 02400027
*   XRFH1      CROSS REFERENCE HEADING ONE                            * 02420027
*   XRFH2      CROSS REFERENCE HEADING TWO                            * 02440027
*   RLDH1      RELOCATION DICTIONARY HEADING ONE                      * 02460027
*   RLDH2      RELOCATION DICTIONARY HEADING TWO                      * 02480027
*   RLDOUT     CARD IMAGE FOR RLD AND END PUNCH                       * 02500027
*   RESBUF     INTERNAL I/O BUFFER                                    * 02520027
*   ICT        INPUT CONTROL TABLE                                    * 02540027
*      THE FORMAT OF THE I/O CONTROL TABLE  (ICT)  IS-                * 02560027
*       WORD  TABLE+     CONTENTS                                     * 02580027
*         0      0       POINTER TO END OF BLOCK                      * 02600027
*         1      4       POINTER TO NEXT RECORD                       * 02620027
*         2      8       LENGTH OF RECORD                             * 02640027
*         3     12       TYPE OF BUFF ROUTINE READ TO USE             * 02660027
*       1 BYTE  16       RECORD TYPE                                  * 02680027
*NOTES-                                                               * 02700027
*   STORAGE IS OBTAINED BY A SHRINK TO BUFF ROUTINE IF NECESSARY.     * 02720027
*   IF THE REQUIRED STORAGE IS NOT AVAILABLE THE ASSEMBLY IS ABENDED. * 02740027
*                                                                     * 02760027
*                                                                     * 02780027
         SPACE     2                                                    02800027
         ENTRY     ERRBUF                                               02820027
         ENTRY     TERLI                                                02840027
         ENTRY     ERRCDL                                               02860027
*                                                                     * 02880027
         SPACE     2                                                    02900027
XRFLN    EQU       8                   XRF LOGICAL RECORD LENGTH        02920027
RLDLN    EQU       6                   RLD LOGICAL RECORD LN            02940027
BLKFC1   EQU       200                 XRF BLOCKING FACTOR              02960027
BLKFC2   EQU       20                  RLD BLOCKING FACTOR              02980027
R0       EQU       0                                                    03000027
R1       EQU       1                                                    03020027
R2       EQU       2                                                    03040027
*ACT     EQU       3                                                  * 03060027
R4       EQU       4                                                    03080027
R5       EQU       5                                                    03100027
R6       EQU       6                                                    03120027
R7       EQU       7                                                    03140027
R8       EQU       8                                                    03160027
R9       EQU       9                                                    03180027
R10      EQU       10                                                   03200027
*11      EQU       11                                                 * 03220027
R12      EQU       12                                                   03240027
R13      EQU       13                                                   03260027
R14      EQU       14                                                   03280027
R15      EQU       15                                                   03300027
*                                                                     * 03320027
*        BITS NEEDED FOR TWO-COLUMN XREF AND THREE-COLUMN RLD         * 03340027
*                                                                     * 03360027
MULT     EQU       X'80'               TWO COLUMNS REQUESTED            03380027
TRIPLE   EQU       X'40'               THREE COLUMNS REQUESTED          03400027
MTBUFF   EQU       X'20'               BUFFER BEING EMPTIED             03420027
PTOP     EQU       X'10'               TOP OF PAGE BIT                  03440027
CTOP     EQU       X'08'               TOP OF COLUMN BIT                03460027
RMULT    EQU       X'04'               GLOBAL MULT BIT                  03480027
XFIRST   EQU       X'01'               FIRST TIME FOR XREF HEADING      03500027
*        ************************************************************** 03520027
         SPACE     4                                                    03540027
         LR        R12,R15             TRANSFER BASE ADDRESS            03560027
         USING     ASMGFPP,R12         AND TELL THE ASSEMBLER           03580027
         LA        R13,IOSAVE          POINT TO OS SAVE AREA            03600027
         USING     IOSAVE,R13          USE IT FOR DATA AREA             03620027
         ENTRYOUT  FPP                                                  03640027
*        ************************************************************** 03660027
* PHASE INITIALIZATION                                                * 03680027
*        ************************************************************** 03700027
         MVC       DKNO(4),CCRDCT(ACT) CARD COUNT                       03720027
         MVC       DKID(4),CTITLE(ACT) PARTIAL PROGRAM I.D. ON DECK     03740027
         MVC       HEAD1+1(8),CTITLE(ACT) PROGRAM I.D. TO PAGE HEADING  03760027
         MVC       HEAD2+112(9),CTDATE(ACT) DATE TO PAGE HEADINGS       03780027
         L         R1,ADLIST1(,ACT)    POINT TO LIST1 IN ASMGASM        03800027
         SR        R2,R2               CLEAR OUT A WORK REGISTER        03820027
         IC        R2,L1COLCT(,R1)     GET COL= VALUE                   03840027
         IC        R2,CTAB(R2)         GET CORRESPONDING BIT SETTINGS   03860027
         STC       R2,CFLGS            INITIALIZE THE FLAGS             03880027
         L         R1,CADJBS(,ACT)     MOVE ADJUSTEMENT TABLE INTO PROG 03900027
         MVC       ADJBS(256),0(R1)                                     03920027
         MVC       ADJBS+256(256),256(R1)                               03940027
         MVC       ADJBS+512(256),512(R1)                               03960027
         MVC       ADJBS+768(256),768(R1)                               03980027
         MVC       ADJBS+1024(68),1024(R1)                              04000027
         L         R2,CTADJEND(,ACT)   SET END POINTER                  04020027
         SR        R2,R1                                                04040027
         LA        R2,ADJBS(R2)                                         04060027
         ST        R2,ADJBSEND                                          04080027
*        ************************************************************** 04100027
*        PRINT USING MAP IF ENTRIES PRESENT                           * 04120027
*        ************************************************************** 04140027
         L         R2,STUMAP(,ACT)     GET CHAIN OF UMAP ENTRIES        04160027
         LTR       R2,R2               ARE THERE ANY .Q                 04180027
         BZ        LRFLOD              IF NOT THEN DO THE LREF    V7A29 04181028
         LA        R6,STUMAP(,ACT)     POINT TO FIRST POINTER     V7A29 04182028
         USING     USNGMAP,R6          LESSER BUBBLE SORT ENTRY   V7A29 04183028
USORT01  DS        0H                                             V7A29 04184028
         L         R6,USNGCHN          GET NEXT ENTRY             V7A29 04185028
         LA        R6,0(,R6)           CLEAR REGISTER             V7A29 04186028
         LTR       R6,R6               AT THE END .Q              V7A29 04187028
         BZ        USORT04             BRANCH IF YES              V7A29 04188028
         LR        R7,R6               START OF REST TO COMPARE   V7A29 04189028
USORT02  DS        0H                                             V7A29 04190028
         L         R7,USNGCHN-USNGMAP(,R7)  NEXT ENTRY            V7A29 04191028
         LA        R7,0(,R7)           CLEAR REGISTER             V7A29 04192028
         LTR       R7,R7               AT THE END .Q              V7A29 04193028
         BZ        USORT01             BRANCH IF YES              V7A29 04194028
         CLC       USNGREG,USNGREG-USNGMAP(R7)  REGISTER SMALLER  V7A29 04195028
         BL        USORT02             BRANCH IF YES              V7A29 04196028
         BH        USORT03             BRANCH IF NOT              V7A29 04197028
         CLC       USNGSTRT,USNGSTRT-USNGMAP(R7) USING STMT       V7A29 04198028
         BL        USORT02             BRANCH IF YES              V7A29 04199028
USORT03  DS        0H                                             V7A29 04200028
         IC        R1,USNGREG          ENTRY ONE                  V7A29 04201028
         MVC       USNGREG,USNGREG-USNGMAP(R7)   TWO TO ONE       V7A29 04202028
         STC       R1,USNGREG-USNGMAP(,R7)       ONE TO TWO       V7A29 04203028
         XC    USNGSTRT(USNGLEN-L'USNGCHN),USNGSTRT-USNGMAP(R7)   V7A29 04204028
         XC    USNGSTRT-USNGMAP(USNGLEN-L'USNGCHN,R7),USNGSTRT    V7A29 04205028
         XC    USNGSTRT(USNGLEN-L'USNGCHN),USNGSTRT-USNGMAP(R7)   V7A29 04206028
         B         USORT02             AND CONTINUE               V7A29 04207028
         DROP      R6                  END OF BUBBLE SORT         V7A29 04208028
USORT04  DS        0H                                             V7A29 04209028
         MVC       HEAD1ID,UMP1ID      SET HEADER ONE                   04220027
         MVI       HEAD2ID,C' '        CLEAR HEADER TWO                 04240027
         MVC       HEAD2ID+1(L'HEAD2ID-1),HEAD2ID  ALL OF IT            04260027
         MVC       HEAD2ID(L'UMP2ID),UMP2ID  SET SECOND HEADER          04280027
         TM        CFLGS,MULT          IS IT MULTIPLE COLUMNS .Q        04300027
         BZ        UMPSING             BRANCH IF NOT                    04320027
         MVC       HEAD2ID+60(L'UMP2ID),UMP2ID  MULTIPLE HEADER         04340027
UMPSING  DS        0H                                                   04360027
         USING     USNGMAP,R2          SET USING POINTER                04380027
         LA        R1,1                INITIALIZE LINES LEFT ON PAGE    04400027
         ST        R1,CTLINECT(,ACT)   PASS IT ON                       04420027
         LA        R7,UMAPOUT+1        OUTPUT LINE POSITION             04440027
         SR        R6,R6               ZERO AREA OFFSET OF UMAP BLOCK   04460027
UMPNXT   DS        0H                                                   04480027
         SR        R1,R1               CLEAR A WORK REGISTER            04500027
         IC        R1,USNGREG(R6)      GET REGISTER NUMBER              04520027
         CVD       R1,DWORD            CONVERT TO DECIMAL               04540027
         MVC       0(6,R7),EDMASK      MOVE IN EDIT MASK                04560027
         ED        0(6,R7),DWORD+5     EDIT IN REGISTER NUMBER          04580027
         LH        R1,USNGSTRT(R6)     GET USING STATEMENT NUMBER       04600027
         N         R1,=X'0000FFFF'     REMOVE NEGATIVE BITS             04620027
         CVD       R1,DWORD            CONVERT TO DECIMAL               04640027
         MVC       12(6,R7),EDMASK     MOVE IN EDIT MASK                04660027
         ED        12(6,R7),DWORD+5    EDIT IN USING STATEMENT NUMBER   04680027
         LH        R1,USNGDROP(R6)     GET DROP STATEMENT NUMBER        04700027
         N         R1,=X'0000FFFF'     REMOVE NEGATIVE BITS             04720027
         LTR       R1,R1               WAS REGISTER NEVER DROPPED .Q    04740027
         BNZ       UMPDRP              BRANCH IF DROPPED                04760027
         MVC       26(3,R7),ENDCR      ENTER 'END'                      04780027
         B         USGCPS              BRANCH AROUND                    04800027
UMPDRP   DS        0H                                                   04820027
         CVD       R1,DWORD            CONVERT TO DECIMAL               04840027
         MVC       23(6,R7),EDMASK     MOVE IN EDIT MASK                04860027
         ED        23(6,R7),DWORD+5    EDIT IN DROP STATEMENT           04880027
USGCPS   DS        0H                                                   04900027
         LA        R0,USNGESD(R6)      POINT TO ESDID                   04920027
         BAL       R14,ADJUST          CONVERT ADDRESS                  04940027
         MVC       34(6,R7),DWORD      ENTER VALUE                      04960027
         LA        R1,USNGLBEL(R6)     POINT TO USING LABEL       V7A29 04970028
         MVC       42(L'USNGLBEL,R7),0(R1)  ENTER USING LABEL     V7A29 04972028
         L         R1,USNGCHN(R6)      GET NEXT AREA ON THE CHAIN       04980027
         LA        R1,0(,R1)           CLEAR HIGH BYTE                  05000027
         LTR       R1,R1               AT END OF THE CHAIN .Q           05020027
         BZ        UMPEND              BRANCH IF YES                    05040027
         TM        CFLGS,MULT          IS MULTIPLE UMAP .Q              05060027
         BZ        UMPPRT              BRANCH IF NOT                    05080027
         LA        R4,UMAPOUT+1        INITIAL OUTPUT POSITION          05100027
         CR        R4,R7               ARE WE AT THE FIRST .Q           05120027
         BNE       UMPPRT              BRANCH IF NOT                    05140027
         LA        R7,UMAPOUT+61       POINT TO SECOND AREA             05160027
         B         UMPBMP              BRANCH TO NEXT POINT             05180027
UMPPRT   DS        0H                                                   05200027
         L         R1,CTLINECT(,ACT)   GET LINES LEFT ON PAGE           05220027
         BCT       R1,UMPSKP           DECREMENT LINES LEFT             05240027
         BAL       R9,PAGEHED          YES, PRINT HEADINGS              05260027
UMPSKP   DS        0H                                                   05280027
         ST        R1,CTLINECT(,ACT)   UPDATE LINES LEFT                05300027
         LA        R1,UMAPOUT          POINT AT OUTPUT LINE             05320027
         BAL       R9,WRLST            PRINT THE LINE                   05340027
         MVC       UMAPOUT(2),=X'0040' RESET SPACE OPERAND              05360027
         MVC       UMAPOUT+2(L'UMAPOUT-2),UMAPOUT+1  AND CLEAR AREA     05380027
         LA        R7,UMAPOUT+1        RESET OUTPUT LINE POS'N          05400027
UMPBMP   DS        0H                                                   05420027
         LTR       R6,R6               SPECIAL LAST ENTRY CASE .Q       05440027
         BM        UMPCLR              BRANCH IF YES                    05460027
         LA        R6,USNGLEN(,R6)     NEXT BLOCK OFFSET                05480027
         C         R6,USDPLEN          IS IT TOO BIG .Q                 05500027
         BL        UMPNXT              BRANCH IF NOT                    05520027
UMPCLR   DS        0H                                                   05540027
         ST        R2,USDPADDR         SET ADDRESS TO FREE              05560027
         L         R2,USNGCHN+USNGLEN*(USNGDUP-1) POINT TO NEXT BLOCK   05580027
         LA        R2,0(,R2)           CLEAR HIGH BYTE                  05600027
         L         R1,BUFFPT(,ACT)     POINT TO BUFF IN ASM             05620027
         CNOP      2,4                 ALIGN ARGUMENTS                  05640027
         BALR      R0,R1               GO DO THE GROW                   05660027
         DC        A(32)               GROW CODE                        05680027
USDPLEN  DC        A(USNGLEN*USNGDUP)  LENGTH OF ONE UMAP AREA          05700027
USDPADDR DC        A(0)                UMAP AREA ADDRESS                05720027
         LTR       R6,R6               TEST WHO CALLED                  05740027
         BM        LRFLOD              BRANCH IF LAST CALL              05760027
         SR        R6,R6               ZERO UMAP BLOCK OFFSET           05780027
         B         UMPNXT              AND DO NEXT REFERENCE            05800027
UMPEND   DS        0H                                                   05820027
         SR        R6,R6               ZERO UMAP OFFSET                 05840027
         BCTR      R6,0                AND MAKE IT NEGATIVE             05860027
         B         UMPPRT              COMMON PRINT THEN GROW ROUTINE   05880027
         DROP      R2                  FORGET UMAP BLOCK BASE           05900027
*        ************************************************************** 05920027
*        ADJUST RELOCATABLE ADDRESS FROM ADJUSTMENT TABLE             * 05940027
*        ************************************************************** 05960027
*        INPUT     (R0) POINTS TO ESDID AND DISPLACEMENT              * 05980027
*                  R14 IS RETURN REGISTER                             * 06000027
*        OUTPUT    ALWRD HAS DISPLACEMENT VALUE                       * 06020027
*                  FWORD HAS ADJUSTED VALUE                           * 06040027
*                  DWORD(6) HAS PRINTABLE CHARACTER VALUE             * 06060027
ADJUST   DS        0H                                                   06080027
         STM       R1,R15,SAVE         SAVE ALL REGISTERS BUT ONE       06100027
         LR        R1,R0               TRANSFER ADDRESS OF ARGUMENT     06120027
         SR        R4,R4               ZERO REGISTER                    06140027
         CLI       0(R1),X'00'         NO ADJUSTMENT IF ESDID = 0       06160027
         BE        NOADJUST            IF NO ADJUSTMENT, BRANCH         06180027
         LA        R4,ADJBS-4          ADJUSTMENT TABLE ADDRESS         06200027
         MVC       ADJCLI+1(1),0(R1)   CAUSE CLI BEATS CLC              06220027
ADJLOOP  DS        0H                                                   06240027
         LA        R4,4(,R4)           POINT TO NEXT ENTRY              06260027
         C         R4,ADJBSEND         NO MORE TRYS .Q                  06280027
         BL        ADJCLI              BRANCH IF NOT                    06300027
         SR        R4,R4               ADJUSTMENT IS ZERO               06320027
         B         NOADJUST            IF TABLE ENTRY NOT FOUND         06340027
ADJCLI   CLI       0(R4),*-*           IS THIS THE RIGHT ENTRY .Q       06360027
         BNE       ADJLOOP             NO, THEN LOOP BACK               06380027
         L         R4,0(,R4)           GET ADJUSTMENT                   06400027
NOADJUST DS        0H                                                   06420027
         MVC       ALWRD+1(3),1(R1)    ALIGN DISPLACEMENT IN WORD       06440027
         AL        R4,ALWRD            ADD DISPLACEMENT TO DEFN         06460027
         ST        R4,FWORD            STORE SUM TO PASS BACK           06480027
         UNPK      DWORD(7),FWORD+1(4) UNPACK ADDRESS + 1 EXTRA         06500027
         TR        DWORD(6),SQTRTAB1   CHANGE TO CHARACTER              06520027
         LM        R1,R15,SAVE         RESTORE CALLER'S REGS            06540027
         BR        R14                 AND RETURN                       06560027
*        ************************************************************** 06580027
*        CONVERT LITERAL STRINGS TO EBCDIC                            * 06600027
*        ************************************************************** 06620027
LRFLOD   DS        0H                                                   06640027
         L         R2,STLREF(,ACT)     GET CHAIN OF ALL LITERALS        06660027
         LTR       R2,R2               ARE THERE ANY .Q                 06680027
         BZ        XRFLOD              IF NOT DO XREF                   06700027
         MVC       HEAD1ID,LRF1ID      SET HEADER 1                     06720027
         MVI       HEAD2ID,C' '        CLEAR HEADER 2                   06740027
         MVC       HEAD2ID+1(L'HEAD2ID-1),HEAD2ID  ALL OF IT            06760027
         MVC       HEAD2ID(L'LRF2ID),LRF2ID  SET SECOND HEADER TITLE    06780027
         L         R4,CTRTBP(,ACT)     GET ADDRESS OF TRANSLATE TABLE   06800027
LREFLOOP DS        0H                                                   06820027
         IC        R1,3(,R2)           LENGTH-1 OF LITERAL              06840027
         EX        R1,LREFTR           TRANSLATE LITERAL TO EBCDIC      06860027
         MVC       ALWRD+1(3),0(R2)    MOVE CHAIN POINTER               06880027
         L         R2,ALWRD            LOAD NEXT CHAIN POINTER          06900027
         LTR       R2,R2               ARE WE AT THE END OF CHAIN .Q    06920027
         BNZ       LREFLOOP            NO, TRANSLATE NEXT LITERAL       06940027
         LA        R1,1                INITIALIZE LINES LEFT ON PAGE    06960027
         ST        R1,CTLINECT(,ACT)   SET IT FOR NEW LREF PAGE         06980027
*        ************************************************************** 07000027
*        FIND NEXT SMALLEST LITERAL FOR PRINTING                      * 07020027
*        ************************************************************** 07040027
LREFNEXT DS        0H                                                   07060027
         L         R2,STLREF(,ACT)     GET CHAIN OF REMAINING LITERALS  07080027
         LTR       R2,R2               ARE THERE ANY LEFT .Q            07100027
         BZ        XRFLOD              THAT'S ALL                       07120027
         ST        R2,LREFSMLL         ASSUME FIRST IS SMALLEST         07140027
         LA        R1,STLREF+1(,ACT)   THIS POINTS TO THE SMALLEST      07160027
         ST        R1,LREFSPNT         AND DON'T FORGET IT              07180027
         SR        R4,R4               ZERO FOR MANIPULATING BYTES      07200027
LREFEND  DS        0H                                                   07220027
         LR        R1,R2               MOVE PREVIOUS POINTER DOWN CHAIN 07240027
         MVC       ALWRD+1(3),0(R1)    GET ADDRESS OF NEXT IN CHAIN     07260027
         L         R2,ALWRD            LOAD IT                          07280027
         LTR       R2,R2               IS THIS THE END .Q               07300027
         BZ        LREFPRNT            YES, GO PRINT SMALLEST           07320027
         L         R5,LREFSMLL         POINT TO SMALLEST SO FAR         07340027
         CLC       3(1,R5),3(R2)       WHICH LITERAL IS SHORTER ,Q      07360027
         BNL       *+12                NEW ONE IS SHORTER               07380027
         IC        R4,3(R5)            INSERT FORMER LENGTH             07400027
         B         *+8                 BRANCH AORUND                    07420027
         IC        R4,3(R2)            INSERT NEW LENGTH                07440027
         EX        R4,LREFCOMP         COMPARE LITERALS                 07460027
         BL        LREFEND             SMALLEST IS STILL SMALLEST       07480027
         BH        LREFCNGE            LITERALS WEREN'T EQUAL           07500027
         CLC       3(1,R5),3(R2)       WHICH LITERAL IS SHORTER .Q      07520027
         BL        LREFEND             SMALLEST WAS SHORTER             07540027
LREFCNGE DS        0H                                                   07560027
         ST        R2,LREFSMLL         ADDRESS OF NEW SMALLEST          07580027
         ST        R1,LREFSPNT         ADDRESS POINTS TO NEW SMALLEST   07600027
         B         LREFEND             MAKE NEXT TEST                   07620027
*        ************************************************************** 07640027
*        UPDATE LITERAL CHAIN & PRINT LITERAL                         * 07660027
*        ************************************************************** 07680027
LREFPRNT DS        0H                                                   07700027
         L         R1,LREFSPNT         ENTRY POINTING TO SMALLEST       07720027
         L         R2,LREFSMLL         ADDRESS OF SMALLEST LITERAL      07740027
         MVC       0(3,R1),0(R2)       SHORTEN LITERAL CHAIN BY ONE     07760027
*        MAKE UP PRINT LINE UP TO REFERENCES                          * 07780027
         IC        R4,3(R2)            GET LENGTH-1 OF LITERAL STRING   07800027
         LA        R1,5(R4,R2)         POINT TO LENGTH GENERATED        07820027
         IC        R4,0(R1)            LOAD LENGTH INTO REGISTER        07840027
         CVD       R4,DWORD            CONVERT TO DECIMAL               07860027
         MVC       LRFOUT+5(6),EDMASK  MOVE IN EDIT MASK                07880027
         ED        LRFOUT+5(6),DWORD+5 EDIT LENGTH INTO LINE            07900027
         MVC       ALWRD+2(2),6(R1)    ALIGN DEFINITION STATEMENT       07920027
         LH        R4,ALWRD+2          LOAD STATEMENT INTO REGISTER     07940027
         N         R4,=X'0000FFFF'     REMOVE NEGATIVE SIGN BITS        07960027
         CVD       R4,DWORD            CONVERT TO DECIMAL               07980027
         MVC       LRFOUT+12(7),EDMASK MOVE IN EDIT MASK                08000027
         ED        LRFOUT+12(6),DWORD+5 EDIT IN DEFINITION LINE         08020027
         MVC       LRFOUT+19(L'LRFOUT-19),LRFOUT+18  BLANK REST OF LINE 08040027
         LA        R0,8(,R1)           POINT TO ESDID/DISPLACEMENT      08060027
         BAL       R14,ADJUST          GET RELOCATED ADDRESS            08080027
         MVC       LRFOUT+1(6),DWORD   MOVE RESULT TO PRINT LINE        08100027
         MVI       LRFOUT+21,C'='      PUT = SIGN BEFORE LITERAL        08120027
         SR        R4,R4               ZERO R4 AGAIN                    08140027
         CLI       3(R2),99            IS LITERAL GT 100 CHARS .Q       08160027
         BL        *+12                YES, BRANCH AROUND               08180027
         LA        R4,99               MAKE IT 100 CHARS                08200027
         B         *+8                 BRANCH AROUND                    08220027
         IC        R4,3(R2)            MAKE IT WHAT IT IS               08240027
         EX        R4,LREFMOVE         MOVE IN LITERAL STRING           08260027
         S         R2,=F'6'            POINT TO LITERAL PREFIX          08280027
*        ************************************************************** 08300027
*        NOW PRINT OUT REFERENCES                                     * 08320027
*        ************************************************************** 08340027
         LA        R7,LRFSN1           FIRST POSSIBLE REF POSITION      08360027
         LA        R4,LRFOUT+23(R4)    WHERE THE LITERAL TOOK US        08380027
LCAGAIN  DS        0H                                                   08400027
         CR        R7,R4               COMPARE TWO POSITIONS            08420027
         BNL       LREFGET             OK TO PROCEED                    08440027
         LA        R7,6(R7)            INCREMENT BY 6                   08460027
         B         LCAGAIN             TRY AGAIN                        08480027
LREFGET  DS        0H                                                   08500027
         MVC       ALWRD+1(3),0(R2)    ALIGN NEXT REFERENCE IN CHAIN    08520027
         L         R2,ALWRD            LOAD NEXT ADDRESS                08540027
         LTR       R2,R2               IS THIS END OF CHAIN .Q          08560027
         BZ        LREFEOC             YES, PRINT REMAINING LINE        08580027
         MVC       ALWRD+2(2),3(R2)    ALIGN REFERENCE STMT NUMBER      08600027
         LH        R4,ALWRD+2          LOAD STMT INTO REGISTER          08620027
         N         R4,=X'0000FFFF'     REMOVE NEGATIVE SIGN BITS        08640027
         CVD       R4,DWORD            CONVERT TO DECIMAL               08660027
         LA        R1,LRFOUT+120       LAST PRINT POSITION              08680027
         CR        R7,R1               ARE WE AT END OF LINE .Q         08700027
         BL        LREFIN              NO, MAKE NEW ENTRY               08720027
         LA        R7,LRFSN1           NEXT LINE STARTS HERE            08740027
         L         R1,CTLINECT(,ACT)   GET LINES LEFT ON PAGE           08760027
         BCT       R1,LREFNOHD         DECREMENT LINES LEFT             08780027
         BAL       R9,PAGEHED          YES, PRINT HEADINGS              08800027
LREFNOHD DS        0H                                                   08820027
         ST        R1,CTLINECT(,ACT)   UPDATE LINES LEFT                08840027
         LA        R1,LRFOUT           POINT AT OUTPUT LINE             08860027
         BAL       R9,WRLST            PRINT THE LINE                   08880027
         MVC       LRFOUT(2),=X'0040'  RESET SPACE OPERAND AND          08900027
         MVC       LRFOUT+2(119),LRFOUT+1 BLANK LINE                    08920027
LREFIN   DS        0H                                                   08940027
         MVC       0(6,R7),EDMASK      MOVE IN EDIT MASK                08960027
         ED        0(6,R7),DWORD+5     EDIT IN REFERENCE STATEMENT      08980027
         LA        R7,6(R7)            INCREASE POSITION BY 6           09000027
         B         LREFGET             GO FURTHER DOWN CHAIN            09020027
LREFEOC  DS        0H                                                   09040027
         L         R1,CTLINECT(,ACT)   GET LINES LEFT ON PAGE           09060027
         BCT       R1,LREFSKIP         DECREMENT LINES LEFT             09080027
         BAL       R9,PAGEHED          YES, PRINT HEADINGS              09100027
LREFSKIP DS        0H                                                   09120027
         ST        R1,CTLINECT(,ACT)   UPDATE LINES LEFT                09140027
         LA        R1,LRFOUT           POINT AT OUTPUT LINE             09160027
         BAL       R9,WRLST            PRINT THE LINE                   09180027
         MVI       LRFOUT,X'00'        RESET SPACE OPERAND              09200027
         B         LREFNEXT            AND RETURN                       09220027
*        ************************************************************** 09240027
* MOVE THE SYMBOL TABLE DEFINITIONS TO THE BOTTOM OF MEMORY           * 09260027
*        ************************************************************** 09280027
XRFLOD   DS        0H                                                   09300027
         L         R2,STCHAIN(,ACT)    CHAIN OF ALL SYMBOLS             09320027
         LTR       R2,R2               ARE THERE ANY                    09340027
         BZ        RLDLOD              IF NOT DO RLD                    09360027
         MVC       HEAD1ID,XRF1ID      SET HEADER ONE                   09380027
         MVI       HEAD2ID,C' '        CLEAR HEADER TWO                 09400027
         MVC       HEAD2ID+1(L'HEAD2ID-1),HEAD2ID  ALL OF IT            09420027
         TM        CTFXRFI(ACT),X'02'  TEST WHICH XREF                  09440027
         BO        FULLXSET            BRANCH IF FULLXREF               09460027
         LA        R1,HEAD2ID          POINT TO START OF AREA           09480027
         TM        CFLGS,MULT          IS IT MULTI COLUMN .Q            09500027
         BO        *+8                 BRANCH IF YES                    09520027
         LA        R1,HEAD2ID+21       ONLY ONE SQUISHED COLUMN         09540027
         MVC       0(L'SRF2ID,R1),SRF2ID  SET SQUISHED XREF HEADER TWO  09560027
         B         XRFTSTM             TEST FOR MULTI COLUMNS AGAIN     09580027
FULLXSET DS        0H                                                   09600027
         MVC       HEAD2ID(L'XRF2ID),XRF2ID  SET FULL XREF HEADER       09620027
XRFTSTM  DS        0H                                                   09640027
         TM        CFLGS,MULT          IS IT MULTI COLUMN .Q            09660027
         BZ        XRFSING             BRANCH IF ONLY ONE               09680027
         MVC       HEAD2ID+60(50),HEAD2ID  DOUBLE THE INFORMATION       09700027
XRFSING  DS        0H                                                   09720027
         L         R10,CESIOA(,ACT)    BOTTOM OF MEMORY                 09740027
         MVI       XISYMB(R10),0       PLACE DUMMY ENTRY AT BOTTOM      09760027
         LA        R1,16(,R10)         POINT AT NEXT ENTRY              09780027
         LR        R6,R1               REMEMBER THE START               09800027
MOVEDEF  DS        0H                                                   09820027
         MVC       XISYMB(6,R1),ISYMB(R2) MOVE NAME                     09840027
         MVC       XILINE(2,R1),ILINE(R2) MOVE DEFN LINE NUMBER         09860027
         TM        IADJ(R2),UNDEF      TEST IF UNDEFINED ENTRY          09880027
         BZ        NOTUNDEF            BRANCH IF NOT                    09900027
         XC        XILINE(2,R1),XILINE(R1) ZERO DEFN LINE NUMBER        09920027
NOTUNDEF DS        0H                                                   09940027
         MVC       XIESDID(6,R1),IESDID(R2)  MOVE ESDID,VALUE,LENGTH    09960027
         TM        IADJ(R2),NAMES      IS THIS A NAME ENTRY .Q          09980027
         BO        NAMEOK              BRANCH IF YES                    10000027
         XC        XIVALUE(5,R1),XIVALUE(R1)  ZERO VALUE AND LENGTH     10020027
NAMEOK   DS        0H                                                   10040027
         TM        CTXRFFSI(ACT),X'20' XREF(FULL) .Q                    10060027
         BZ        NAMENZRF            BRANCH IF YES                    10080027
         OC        INOREFS(2,R2),INOREFS(R2)  ZERO REFERENCES .Q        10100027
         BZ        NAMEZORF            FORGET IT IF YES                 10120027
NAMENZRF DS        0H                                                   10140027
         MVC       XIOFFSET(2,R1),INOREFS(R2)  MOVE NUMBER OF REFS      10160027
         LA        R1,16(,R1)          POINT TO NEXT ENTRY              10180027
NAMEZORF DS        0H                                                   10200027
         C         R2,CHAINPT(,ACT)    TEST FOR LAST SYMBOL             10220027
         L         R2,ICHAIN(,R2)      CHAIN TO NEXT DEFN               10240027
         LA        R2,0(,R2)           CLEAR TOP BYTE                   10260027
         BNE       MOVEDEF                                              10280027
         CR        R1,R6               ANY SYMBOLS NOW .Q               10300027
         BE        RLDLOD              NO, GO DO RLD                    10320027
         MVI       0(R1),X'FF'         PLACE DUMMY ENTRY AT TOP         10340027
*        ************************************************************** 10360027
* SORT THE DEFINITIONS                                                * 10380027
*        ************************************************************** 10400027
         LA        R6,16(,R1)          INITIALIZE DELTA TO SIZE OF DATA 10420027
         SR        R6,R10                                               10440027
XSORT1   DS        0H                                                   10460027
         SRL       R6,1                DELTA/2 FOR NEXT PASS            10480027
         N         R6,=F'-16'                                           10500027
         BZ        XREFALOC            END OF SORT WHEN DELTA=0         10520027
         SR        R8,R8               INITIALIZE SUBSEQUENCE BASE      10540027
XSORT4   DS        0H                                                   10560027
         LA        R14,0(R8,R10)       START NEW SUBSEQUENCE            10580027
XSORT2   DS        0H                                                   10600027
         LR        R4,R14              STEP TO NEXT SUBSEQUENCE PAIR    10620027
XSORT3   DS        0H                                                   10640027
         LA        R14,0(R6,R4)        UPPER INDEX = LOWER + DELTA      10660027
         CR        R14,R1              BRANCH IF END OF SUBSEQUENCE     10680027
         BH        XSORT6                                               10700027
         CLC       XISYMB(8,R4),XISYMB(R14) COMP SYMBOL & LINE          10720027
         BNH       XSORT2              BRANCH IF IN SEQUENCE            10740027
         LD        FR0,0(,R4)          SWAP THE ENTRIES                 10760027
         LD        FR2,0(,R14)                                          10780027
         STD       FR0,0(,R14)                                          10800027
         STD       FR2,0(,R4)                                           10820027
         LD        FR0,8(,R4)                                           10840027
         LD        FR2,8(,R14)                                          10860027
         STD       FR0,8(,R14)                                          10880027
         STD       FR2,8(,R4)                                           10900027
         SR        R4,R6               LET UPPER ITEM SINK              10920027
         CR        R4,R10              TEST FOR BOTTOM                  10940027
         BH        XSORT3                                               10960027
         B         XSORT2                                               10980027
XSORT6   DS        0H                                                   11000027
         LA        R8,16(,R8)          STEP TO NEXT SUBSEQUENCE         11020027
         CR        R8,R6               TEST FOR END OF PASS             11040027
         BL        XSORT4                                               11060027
         B         XSORT1                                               11080027
*        ************************************************************** 11100027
* ALLOCATE MEMORY FOR THE REFERENCES                                  * 11120027
*        ************************************************************** 11140027
XREFALOC DS        0H                                                   11160027
         LA        R2,16(,R10)         FIRST ENTRY                      11180027
         LA        R0,16               INC FOR BXLE                     11200027
         SR        R5,R5               OFFSET FOR 1ST REF               11220027
         LR        R6,R5                                                11240027
ALOCLOOP DS        0H                                                   11260027
         AR        R5,R6               OFFSET FOR THIS DEFN'S REFS      11280027
         LH        R6,XIOFFSET(,R2)    PICK UP NUMBER OF REFS           11300027
         STH       R5,XIOFFSET(,R2)    PLACE OFFSET                     11320027
         BXLE      R2,R0,ALOCLOOP      LOOP FOR ALL DEFNS               11340027
*        ************************************************************** 11360027
* DO A SHRINK TO GET CORE FOR REFS IF NECESSARY                       * 11380027
*        ************************************************************** 11400027
         AR        R5,R5               DOUBLE FOR 2 BYTES/REF           11420027
         LA        R5,16(R5,R1)        ADD TO DEFN AREA                 11440027
         ST        R5,CBUFAD           SAVE R5...IT'S IMPORTANT         11460027
         ST        R5,CBUFPT           ALSO INIT BUFFER PTR             11480027
         S         R5,CESIOB(,ACT)     DO WE HAVE ENOUGH ALREADY        11500027
         BNH       IL0050              BRANCH IF SO                     11520027
         LA        R5,7(,R5)           D ALIGN AMOUNT                   11540027
         N         R5,=F'-8'                                            11560027
         ST        R1,SR1              SAVE REGISTER 1 FOR THE SHRINK   11580027
         ST        R5,SHLEN            DO THE SHRINK                    11600027
         L         R1,BUFFPT(,ACT)                                      11620027
         CNOP      2,4                                                  11640027
         BALR      R0,R1                                                11660027
         DC        A(36)                                                11680027
SHLEN    DS        F                                                    11700027
SHADR    DS        F                                                    11720027
         L         R1,SR1              RESTORE REGISTER 1 AFTER SHRINK  11740027
         AL        R5,SHADR            SET NEW TOP OF CORE              11760027
         ST        R5,CESIOB(,ACT)                                      11780027
         BNO       IL0050              TEST FOR CORE NOT AVAILABLE      11800027
         LA        R0,MSG995           POINT TO MESSAGE           V7A29 11820028
         B         ABEND               END OF THE LINE            V7A29 11840028
*./      DELETE    SEQ1=11860027,SEQ2=11860027                    V7A29 11860028
*        ************************************************************** 11880027
* TRY TO ALLOCATE STORAGE FOR A TWO-COLUMN XREF IF REQ'D              * 11900027
*        ************************************************************** 11920027
IL0050   DS        0H                                                   11940027
         TM        CFLGS,MULT          TWO-COLUMN .Q                    11960027
         BZ        XREFREAD            IF NOT, FORGET WHOLE THING       11980027
         L         R5,CBUFAD           GET HOPEFUL BUFFER ADDRESS       12000027
         SR        R0,R0               ZERO A WORK REGISTER             12020027
         IC        R0,CTPGLNCT(,ACT)   GET LINES PER PAGE               12040027
         LTR       R0,R0               IS IT ZERO .Q                    12060027
         BZ        IL0055              IF SO, TWO-COLUMN ILLEGAL        12080027
         MH        R0,=H'60'           HOW MUCH CORE NEEDED             12100027
         AR        R5,R0               BUMP TOP OF CORE POINTER         12120027
         ST        R5,CBUFND           AND SAVE AS BUFFER END + 1       12140027
         S         R5,CESIOB(,ACT)     SEE IF OVER THE TOP              12160027
         BNH       XREFREAD            IF NOT, ALL'S WELL               12180027
         LA        R5,7(,R5)           AND WE MUST ALLOCATE             12200027
         N         R5,=F'-8'           BY DOUBLEWORDS ONLY              12220027
         ST        R1,SR1              SAVE R1 ACROSS SHRINK            12240027
         ST        R5,SQLEN            SAVE LENGTH TO GET               12260027
         L         R1,BUFFPT(,ACT)     GET LIFELINE TO BUFF             12280027
         CNOP      2,4                 ALIGN ADCONS                     12300027
         BALR      R0,R1               GO ALLOCATE                      12320027
         DC        A(36)               CODE FOR A SHRINK                12340027
SQLEN    DS        A                   LENGTH OF EXTRA NEEDED           12360027
SQADR    DS        A                   ADDRESS RETURNED HERE            12380027
         L         R1,SR1              RESTORE R1                       12400027
         L         R5,SQADR            GET ADDRESS OF NEW CORE          12420027
         LTR       R5,R5               IS IT NON-POSITIVE .Q            12440027
         BP        IL0060              ON FALL-THRU, ACT LIKE           12460027
IL0055   DS        0H                                                   12480027
         NI        CFLGS,X'FF'-MULT-TRIPLE NOTHING HAPPENED             12500027
         B         XREFREAD            AND GO PROCESS XREF              12520027
IL0060   DS        0H                                                   12540027
         AL        R5,SQADR            ELSE PROCESS NEW TOP             12560027
         ST        R5,CESIOB(,ACT)     AND STASH IT BACK                12580027
*        ************************************************************** 12600027
* READ THE XREF REFERENCES                                            * 12620027
*        ************************************************************** 12640027
XREFREAD DS        0H                                                   12660027
         LH        R0,CTCXRF(,ACT)     SEE IF ANY REF RECORDS           12680027
         LTR       R0,R0                                                12700027
         BZ        XREFOUT             IF NOT DO NOT READ               12720027
         MVC       ICT(4*4+1),XRFTAB   SET FOR READING ICT              12740027
READLOOP DS        0H                                                   12760027
         BAL       R9,GTO              READ REF                         12780027
         BZ        XREFOUT             TEST FOR EOF                     12800027
*        ************************************************************** 12820027
* DO A BINARY SEARCH TO FIND DEFINITION                               * 12840027
*        ************************************************************** 12860027
         LA        R6,16(,R1)          INITIALIZE DELTA TO DATA SIZE    12880027
         SR        R6,R10                                               12900027
         LR        R14,R10             SO R14 WILL START IN MIDDLE      12920027
UP       DS        0H                                                   12940027
         LPR       R6,R6               MAKE DELTA + SO MOVE UP          12960027
HALF     DS        0H                                                   12980027
         SRA       R6,1                HALF DELTA                       13000027
         N         R6,=F'-16'                                           13020027
         BNZ       ADD                 TEST FOR DELTA=0                 13040027
         LA        R6,16               SLOWLY MOVE UP AFTER DELTA = 0   13060027
ADD      DS        0H                                                   13080027
         AR        R14,R6              MOVE UP OR DOWN BY DELTA         13100027
         CR        R14,R10             TEST FOR BELOW DEFNS             13120027
         BNL       *+6                                                  13140027
         LR        R14,R10             SET TO BOTTOM OF TABLE           13160027
         CLC       HOLD(6),XISYMB(R14) COMP SYMBOL                      13180027
         BE        FOUND               GO CHECK FOR DUPLICATES          13200027
         BH        UP                  SEARCH HIGHER UP                 13220027
         LNR       R6,R6               MAKE DELTA - SO MOVE DOWN        13240027
         B         HALF                GO TRY AGAIN                     13260027
FOUND    DS        0H                                                   13280027
         A         R14,=F'-16'         TEST IF LOWER ONE SAME           13300027
         CLC       HOLD(6),XISYMB(R14)                                  13320027
         BE        FOUND               LOWEST DEFN IS NOT DUPLICATE     13340027
*        ************************************************************** 13360027
* PLACE THE REF IN REF AREA AND INCREMENT OFFSET POINTER              * 13380027
*        ************************************************************** 13400027
         LH        R6,16+XIOFFSET(,R14) PICK UP OFFSET FOR REF          13420027
         N         R6,=X'0000FFFF'     REMOVE SIGN BITS                 13440027
         LA        R6,1(,R6)           INCREMENT IT BY 1                13460027
         STH       R6,16+XIOFFSET(,R14) REPLACE IT                      13480027
         AR        R6,R6               DOUBLE FOR 2 BYTES/REF           13500027
         AR        R6,R1               POINT TO WHERE REF GOES - 14     13520027
         MVC       16-2*1(2,R6),HOLD+6 PLACE THE REFERENCE              13540027
         B         READLOOP                                             13560027
*        ************************************************************** 13580027
*        XRF OUTPUT ALL DATA FROM CORE                                * 13600027
*        ************************************************************** 13620027
XREFOUT  DS        0H                                                   13640027
         SR        R4,R4               REFERENCE POINTER                13660027
         LR        R8,R10              DEFINITION POINTER - 16          13680027
         ST        R1,RAPOINTR         REF AREA POINTER - 16            13700027
         LA        R7,XRFSN1+85        LOAD ADDR OF LAST PRINT POSN     13720027
         TM        CFLGS,MULT          SEE IF COL GREATER THAN ONE      13740027
         BZ        XAR                 BRANCH IF NOT                    13760027
         LA        R7,XRFSN1+22        ELSE MODIFY LENGTH               13780027
XAR      DS        0H                                                   13800027
         LR        R2,R7               FORCE NEW LINE                   13820027
         BAL       R9,XRFHED           PRINT A PAGE HEADING             13840027
         ST        R1,CTLINECT(,ACT)   SET LINES LEFT ON PAGE           13860027
         B         PUTXR1              AND CONTINUE                     13880027
*        GO TO NEXT REFERENCE                                         * 13900027
LODREF   DS        0H                                                   13920027
         LA        R4,1(,R4)           POINT AT NEXT REFERENCE          13940027
LODDEF   DS        0H                                                   13960027
         LH        R1,16+XIOFFSET(,R8) TEST FOR LAST REFERENCE          13980027
         N         R1,=X'0000FFFF'                                      14000027
         CR        R1,R4                                                14020027
         BE        PUTXR2                                               14040027
         LA        R1,0(R4,R4)         GET NEXT REFERENCE               14060027
         A         R1,RAPOINTR         PLUS REF AREA POINTER - 16       14080027
         LH        R1,16(,R1)          GET NEXT REFERENCE               14100027
         B         PUTXR3                                               14120027
*        GO TO NEXT DEFINITION                                        * 14140027
PUTXR2   DS        0H                                                   14160027
         LA        R8,16(,R8)          POINT AT NEXT DEFN               14180027
         CLI       16+XISYMB(R8),X'FF' TEST FOR LAST ONE                14200027
         BE        SQEND                                                14220027
PUTXR1   DS        0H                                                   14240027
         L         R1,16+XISYMB(,R8)   CONVERT SYMBOL TO EBCDIC         14260027
         SR        R0,R0                                                14280027
         SLDL      R0,6                                                 14300027
         SLL       R0,2                                                 14320027
         SLDL      R0,6                                                 14340027
         SLL       R0,2                                                 14360027
         SLDL      R0,6                                                 14380027
         SLL       R0,2                                                 14400027
         SLDL      R0,6                                                 14420027
         ST        R0,XRFHLD                                            14440027
         SR        R0,R0                                                14460027
         SLDL      R0,6                                                 14480027
         SLL       R0,2                                                 14500027
         SLDL      R0,2                                                 14520027
         L         R1,16+XISYMB+4(,R8)                                  14540027
         SLDL      R0,4                                                 14560027
         SLL       R0,2                                                 14580027
         SLDL      R0,6                                                 14600027
         SLL       R0,2                                                 14620027
         SLDL      R0,6                                                 14640027
         ST        R0,XRFHLD+4                                          14660027
         TR        XRFHLD(8),EBCDIC                                     14680027
         LH        R1,16+XILINE(,R8)   LOAD BIN STATEMENT NUMBER        14700027
         LTR       R1,R1               TEST FOR UNDEFINED SYMBOL        14720027
         BZ        UNDSYM                                               14740027
         MVI       SQPUTSW+1,X'F0'     SET SWITCH FOR DEFN              14760027
*        CONVERT THE STATEMENT NUMBER TO CHARACTER                    * 14780027
PUTXR3   DS        0H                                                   14800027
         N         R1,=X'0000FFFF'     REMOVE PROPAGATED SIGN BITS      14820027
         CVD       R1,DWORD            CONVERT STMT NO. TO DECIMAL      14840027
         LA        R1,SQFWORD+17       IN CASE ONLY 1 SIG DIGIT         14860027
         MVC       SQFWORD+12(6),EDMASK SET UP EDIT FIELD               14880027
         EDMK      SQFWORD+12(6),DWORD+5 EDIT AND MARK 1ST SIG CHAR     14900027
         LA        R14,SQFWORD+17      CALCULATE LENGTH-1               14920027
         SR        R14,R1                                               14940027
SQPUTSW  BC        15+*-*,NEWXRF(*-*)  REF OR DEFN SWITCH               14960027
*        OUTPUT REFERENCE                                             * 14980027
         CR        R2,R7               CHECK FOR LAST ST-NO ON LINE     15000027
         BNH       SQLINEOK                                             15020027
         ST        R1,SQSAVE2          SAVE SIG DIG POINTER             15040027
         BAL       R15,SQOUT           OUTPUT THE LINE                  15060027
         TM        CTFXRFI(ACT),X'02'  TEST TYPE OF XREF                15080027
         BO        SQLINEOK                                             15100027
         L         R1,SQSAVE2          RESTORE SIG DIG POINTER          15120027
         LA        R2,XRFOUT+3         SQ XREF  START REFS IN COL 3     15140027
SQLINEOK DS        0H                                                   15160027
         TM        CTFXRFI(ACT),X'02'  TEST TYPE OF XREF                15180027
         BZ        SQSQREF                                              15200027
         MVC       0(5,R2),SQFWORD+13  MOVE FULL TYPE REF TO LINE       15220027
         LA        R2,6(R2)            6 COLUMNS PER FULL REF           15240027
         B         LODREF                                               15260027
SQSQREF  DS        0H                                                   15280027
         EX        R14,SQSMVC          PLACE SQ REF ON LINE             15300027
         LA        R2,2(R14,R2)        REF LENGTH + 1 BLANK             15320027
         B         LODREF                                               15340027
SQSMVC   MVC       0(*-*,R2),0(R1)     PLACE SQUISHED REF ON LINE       15360027
*        UNDEFINED DEFINITION TO BE OUTPUT                            * 15380027
UNDSYM   DS        0H                                                   15400027
         MVC       SQFWORD(18),=C' ****UNDEFINED****' SET STACK         15420027
         TM        CTFXRFI(ACT),X'02'  TEST TYPE OF XREF                15440027
         BO        SQPUTD1             GO DO FULL XREF                  15460027
         LA        R1,SQFWORD+1        SET TOP OF STACK POINTER         15480027
         LR        R0,R2               CAUSE TRT CLOBBERS 2             15500027
         B         SQPUTD2             DO SQ XREF                       15520027
*        OUTPUT NORMAL OR DUPLICATE DEFINITION                        * 15540027
*        ADJUST RELOCATABLE ADDRESS FROM ADJUSTMENT TABLE             * 15560027
NEWXRF   DS        0H                                                   15580027
         LA        R0,16+XIESDID(,R8)  POINT TO ESDID/DISPL             15600027
         BAL       R14,ADJUST          CONVERT TO A VALUE               15620027
         MVC       SQFWORD+6(6),DWORD  PLACE IN STACK AT FULL POSN      15640027
         TM        CTFXRFI(ACT),X'02'  TEST IF IT IS FULL WANTED        15660027
         BO        SQLENGET                                             15680027
         S         R1,=F'7'            MOVE TOP OF STACK UP 7           15700027
         MVI       6(R1),C','          PUT COMMA LEFT OF DEFN           15720027
         LR        R0,R2               SAVE R2 CAUSE TRT CLOBBERS       15740027
         MVC       0(6,R1),DWORD       PLACE VALUE NEXT TO DEFN         15760027
         LR        R14,R1              FIND HIGH SIG DIGIT              15780027
         LA        R1,5(,R1)           IN CASE VALUE 0                  15800027
         TRT       0(6,R14),SQTRTAB2                                    15820027
SQLENGET DS        0H                                                   15840027
         LH        R14,16+XILENG(,R8)  LOAD BIN SYMBOL LENGTH           15860027
         LA        R14,1(,R14)         ADD 1 FOR TRUE LENGTH            15880027
         N         R14,=X'0000FFFF'    REMOVE PROPAGATED SIGN BITS      15900027
         CVD       R14,DWORD                                            15920027
         MVC       SQFWORD-1(7),EDMASK PLACE  EDIT FIELD                15940027
         ED        SQFWORD-1(6),DWORD+5 ASSUME FULL XREF                15960027
         TM        CTFXRFI(ACT),X'02'  TEST IF REALLY FULL XREF         15980027
         BO        SQPUTD1                                              16000027
         S         R1,=F'7'            MOVE STACK POINTER UP 7          16020027
         MVC       0(6,R1),EDMASK      EDIT FIELD                       16040027
         MVI       6(R1),C','          AND COMMA                        16060027
         LR        R14,R1              FIND HIGH SIG DIGIT              16080027
         LA        R1,5(,R1)           IN CASE ONLY 1 SIG DIG           16100027
         EDMK      0(6,R14),DWORD+5    EDIT AND MARK LENGTH             16120027
SQPUTD2  DS        0H                                                   16140027
         LR        R14,R1              SAVE TOP OF STACK POINTER        16160027
         LA        R1,XRFHLD+8         FIND NO CHAR IN SYMBOL           16180027
         TM        CFLGS,MULT          MULTI-COLUMN .Q                  16200027
         BO        IL0015              BRANCH IF SO, FORCE LENGTH=8     16220027
         TRT       XRFHLD+1(7),SQTRTAB3                                 16240027
IL0015   DS        0H                                                   16260027
         S         R1,=A(XRFHLD+1)     NO CHAR - 1                      16280027
         LA        R6,SQFWORD+17       CALCULATE STACK LENGTH - 1       16300027
         SR        R6,R14                                               16320027
         TM        CFLGS,MULT          MULTIPLE COLUMNS .Q              16340027
         LR        R2,R0               RESTORE R2                       16360027
         BO        IL0030              MAYBE MAKE NL FOR DEFN           16380027
         LA        R2,19(R6,R1)        TOTAL LENGTH REQUIRED            16400027
         AR        R2,R0               NEW LINE POSITION                16420027
         CR        R2,R7               TEST IF ENOUGH ROOM              16440027
         LR        R2,R0               RESTORE LINE POINTER             16460027
         BNH       SQADDNEW                                             16480027
IL0030   DS        0H                                                   16500027
         STM       R14,R1,SQSAVE4      SAVE SOME REGS                   16520027
         BAL       R15,SQOUT           PRINT LAST LINE                  16540027
         LM        R14,R1,SQSAVE4      RESTORE THE REGS                 16560027
         LA        R2,XRFOUT-1         SET NEW LINE POINTER             16580027
SQADDNEW DS        0H                                                   16600027
         EX        R1,SQADDMVC         PUT SYMBOL ON LINE               16620027
         LA        R2,5(R1,R2)         UP LINE POINTER                  16640027
         EX        R6,SQADDLVD         MOVE STACK GIVEN LENGTH          16660027
         LA        R2,3(R6,R2)         SET POINTER FOR FIRST REF        16680027
         B         SQNEWDON                                             16700027
SQADDMVC MVC       2(*-*,R2),XRFHLD    EXECUTED MOVE                    16720027
SQADDLVD MVC       0(*-*,R2),0(R14)    EX STACK ON LINE  (LEN,VAL,DEF)  16740027
SQPUTD1  DS        0H                                                   16760027
         BAL       R15,SQOUT           PRINT LAST FULL XREF LINE        16780027
         MVC       XRFOUT+1(8),XRFHLD  PUT SYMBOL ON NEW LINE           16800027
         MVC       XRFHOLD,XRFHLD      SAVE SYMBOL IN CASE              16820027
         MVC       XRFOUT+10(18),SQFWORD PUT STACK  (LEN,VAL,DEF) ON    16840027
SQNEWDON DS        0H                                                   16860027
         MVI       SQPUTSW+1,X'00'     ASSUME REFS COME NEXT            16880027
         CLC       XISYMB(6,R8),16+XISYMB(R8) TEST FOR DUP DEFN         16900027
         BNE       LODDEF                                               16920027
         MVC       0(17,R2),=C'****DUPLICATE****'                       16940027
         LA        R2,18(,R2)          UP THE LINE POINTER              16960027
         B         LODDEF                                               16980027
SQOUT    BC        *-*+15,SQOUTEND     TEST IF FIRST LINE               17000027
         TM        CFLGS,CTOP          TOP OF COLUMN .Q                 17020027
         BZ        IL0065              NO...SKIP CODE                   17040027
         NI        CFLGS,X'FF'-CTOP    TURN OFF FLAG                    17060027
         TM        CTFXRFI(ACT),X'02'  WAS FULLXREF SPECIFIED .Q        17080027
         BZ        IL0065              BRANCH IF NOT                    17100027
         CLI       XRFOUT+1,C' '       SEE IF CONTINUATION              17120027
         BNE       IL0065              BRANCH IF NOT                    17140027
         MVC       XRFOUT+1(8),XRFHOLD MOVE SYMBOL NAME                 17160027
         MVC       XRFOUT+17(11),=C'(CONTINUED)' AND INDICATOR          17180027
IL0065   DS        0H                                                   17200027
         TM        CFLGS,MULT          SEE IF TWO COLUMN                17220027
         BZ        IL0100              BRANCH IF NOT                    17240027
         TM        CFLGS,MTBUFF        DO WE FILL OR EMPTY              17260027
         BZ        IL0080              BRANCH IF WE FILL                17280027
IL0070   DS        0H                                                   17300027
         MVC       XRFOUT+61(60),XRFOUT+1 MOVE COLUMN TO RIGHT          17320027
         L         R1,CBUFPT           GET PLACE IN BUFFER              17340027
         MVC       XRFOUT+1(60),0(R1)  PLUG TEXT FROM BUFFER            17360027
         AH        R1,=H'60'           POINT TO NEXT PLACE              17380027
         ST        R1,CBUFPT           SAVE IT BACK                     17400027
         B         IL0100              EXIT LAUGHING...                 17420027
IL0080   DS        0H                                                   17440027
         L         R1,CBUFPT           GET BUFFER POINTER               17460027
         C         R1,CBUFND           SEE IF WE ARE OUTSIDE            17480027
         BNE       IL0090              BRANCH IF NOT, NORMAL CASE       17500027
         L         R1,CBUFAD           RESET BUFFER POINTER             17520027
         OI        CFLGS,MTBUFF        WE EMPTY NOW                     17540027
         ST        R1,CBUFPT           STORE NEW POINTER                17560027
         B         IL0070              MAKE LIKE WE EMPTY               17580027
IL0090   DS        0H                                                   17600027
         MVC       0(60,R1),XRFOUT+1   MOVE TEST INTO BUFFER            17620027
         AH        R1,=H'60'           BUMP BUFFER POINTER              17640027
IL0095   DS        0H                                                   17660027
         ST        R1,CBUFPT           STORE IT BACK                    17680027
         C         R1,CBUFND           ARE WE AT THE END .Q             17700027
         BNE       SQOUTEND            IF SO, THE NEXT LINE WILL        17720027
         OI        CFLGS,CTOP          START A NEW COLUMN               17740027
         B         SQOUTEND            AND GO EXIT                      17760027
IL0100   DS        0H                                                   17780027
         LA        R1,XRFOUT           POINT AT OUTPUT LINE             17800027
         TM        CFLGS,PTOP          PAGE TOP .Q                      17820027
         BZ        IL0110              IF NOT, THEN BRANCH              17840027
         MVI       XRFOUT,X'01'        ELSE DOUBLE SPACE                17860027
         NI        CFLGS,X'FF'-PTOP    AND TURN OFF THE BIT             17880027
IL0110   DS        0H                                                   17900027
         BAL       R9,WRLST            PRINT THE LINE                   17920027
         L         R1,CTLINECT(,ACT)   GET LINES LEFT ON PAGE           17940027
         BCT       R1,SQOUTSKP         DECREMENT BY ONE                 17960027
         BAL       R9,XRFHED           PRINT HEADINGS                   17980027
SQOUTSKP DS        0H                                                   18000027
         ST        R1,CTLINECT(,ACT)   UPDATE LINES LEFT                18020027
SQOUTEND DS        0H                                                   18040027
         LA        R2,XRFSN1           SET LINE POINTER FOR FULL XREF   18060027
         MVC       XRFOUT(2),=X'0040'  RESET SPACE OPERAND              18080027
         MVC       XRFOUT+2(L'XRFOUT-2),XRFOUT+1  AND BLANK THE LINE    18100027
         MVI       SQOUT+1,X'00'       RESET FIRST SWITCH               18120027
         BR        R15                                                  18140027
SQEND    DS        0H                                                   18160027
         L         R1,CTLINECT(,ACT)   GET LINES LEFT                   18180027
         A         R1,=F'1'            ADD ONE                          18200027
         ST        R1,CTLINECT(,ACT)   PREVENT A NEW PAGE               18220027
         BAL       R15,SQOUT           PRINT LAST LINE                  18240027
         TM        CFLGS,MULT          ARE WE IN COLUMN MODE .Q         18260027
         BZ        RLDLOD              IF NOT, SKIP IT                  18280027
         L         R15,CBUFPT          GET BUFFER LOCATION              18300027
         TM        CFLGS,MTBUFF        DO WE EMPTY .Q                   18320027
         BNZ       SQLP                BRANCH IF SO                     18340027
         MVI       XRFOUT,X'01'        INDICATE NEW PAGE                18360027
         L         R1,QBUFAD           GET QSAM BUFFER ADDRESS          18380027
         MVI       60(R1),C' '         WHICH STILL HAS PAGE HEADING     18400027
         MVC       61(50,R1),60(R1)    AND BLANK THE RIGHT HALF         18420027
         ST        R15,CBUFND          ACT AS IF THE                    18440027
         L         R15,CBUFAD          BUFFER IS SHORTER                18460027
SQLP     DS        0H                                                   18480027
         C         R15,CBUFND          ARE WE AT THE END .Q             18500027
         BNL       RLDLOD              BRANCH IF SO... EXIT             18520027
         MVC       XRFOUT+1(60),0(R15) MOVE THE TEXT                    18540027
         L         R1,CTLINECT(,ACT)   GET LINES LEFT                   18560027
         BCTR      R1,0                DECREMENT BY ONE                 18580027
         ST        R1,CTLINECT(,ACT)   AND SAVE IT BACK                 18600027
         LA        R1,XRFOUT           POINT AT THE LINE                18620027
         BAL       R9,WRLST            GO PRINT IT                      18640027
         MVI       XRFOUT,X'00'        RESET TO SINGLE SPACE            18660027
         AH        R15,=H'60'          BUMP THE POINTER                 18680027
         B         SQLP                GO LOOP                          18700027
*        ************************************************************** 18720027
*        PRINT XRF PAGE HEADINGS                                      * 18740027
*        ************************************************************** 18760027
XRFHED   DS        0H                                                   18780027
         TM        CFLGS,MULT          TWO COLUMNS .Q                   18800027
         BZ        EXPCOM              BRANCH IF NOT                    18820027
         NI        CFLGS,X'FF'-MTBUFF-XFIRST INDICATE FILL MODE         18840027
         L         R1,CBUFAD           GET BUFFER ADDRESS               18860027
         ST        R1,CBUFPT           STORE IT AS CURRENT PLACE        18880027
EXPCOM   DS        0H                                                   18900027
         OI        CFLGS,CTOP+PTOP     SAY WE'RE AT COLUMN TOP          18920027
         B         PAGEHED             DO THE OUTPUT                    18940027
*        ************************************************************** 18960027
*        START RLD INPUT PASS                                         * 18980027
*        ************************************************************** 19000027
RLDLOD   DS        0H                                                   19020027
         TM        CTPCHI(ACT),X'C8'   SEE IF DECK,LOAD OR RLD          19040027
         BNZ       RLDOK               BRANCH IF ANY SPECIFIED          19060027
         TM        CTEXEC(ACT),X'20'   WAS EXECUTE SPECIFIED .Q         19080027
         BZ        ENDJOB              BRANCH IF NOT                    19100027
RLDOK    DS        0H                                                   19120027
         LH        R10,CTCRLD(,ACT)    SEE IF ANY RLD'S PRODUCED        19140027
         LTR       R7,R10                                               19160027
         BZ        ENDJOB                                               19180027
         MH        R10,=AL2(4*BLKFC2)  SPACE NEEDED FOR POINTERS        19200027
         MH        R7,=AL2(RLDLN*BLKFC2) SPACE NEEDED FOR RLD'S         19220027
         L         R8,CESIOA(,ACT)     BOTTOM OF SORT AREA              19240027
         AR        R10,R8              BOTTOM OF RLD AREA               19260027
         ST        R10,BASED                                            19280027
         AR        R7,R10              TOP OF CORE NEEDED               19300027
         S         R7,CESIOB(,ACT)     DO WE HAVE ENOUGH ALREADY        19320027
         BNH       RLDPOINT                                             19340027
         LA        R7,7(,R7)           D ALIGN AMOUNT                   19360027
         N         R7,=F'-8'                                            19380027
         ST        R7,SKLEN            SAVE LENGTH TO BE SHRANK         19400027
         L         R1,BUFFPT(,ACT)     POINT TO BUFF IN ASM             19420027
         CNOP      2,4                 ALIGN ARGUMENTS                  19440027
         BALR      R0,R1               GO DO THE SHRINK                 19460027
         DC        A(36)               SHRINK CODE FOR BUFF             19480027
SKLEN    DC        F'0'                LENGTH TO BE GOTTEN              19500027
SKADR    DC        A(0)                ADDRESS RETURNED BY BUFF         19520027
         AL        R7,SKADR            LENGTH PLUS ADDRESS              19540027
         ST        R7,CESIOB(,ACT)     SAVE NEW HIGH                    19560027
         BNO       RLDPOINT            TEST FOR CORE NOT AVAILABLE      19580027
         LA        R0,MSG994           THE BITTER END                   19600027
ABEND    DS        0H                                                   19620027
         L         R1,ADLIST1(,ACT)    POINT TO LIST1 IN ASMGASM        19640027
         B         L1ABEND(,R1)        BRANCH TO ABEND ROUTINE IN ASM   19660027
*./      DELETE    SEQ1=19680027,SEQ2=19700027                    V7A29 19700028
RLDPOINT DS        0H                                                   19720027
         MVC       RLDPT,CTRRLD(ACT)   GET ADDRESS OF 1ST RLD BLOCK     19740027
         L         R1,BUFFPT(,ACT)     POINT AT IT                      19760027
         CNOP      2,4                                                  19780027
         BALR      R0,R1                                                19800027
         DC        A(12,0)                                              19820027
RLDPT    DS        F                                                    19840027
         MVC       ICT(4*4+1),RLDTAB   SET FOR READING RLD              19860027
         SR        R2,R2               ZERO INDEX IN SORT BLOCK POINTR  19880027
*        ************************************************************** 19900027
*        READ RLD FROM INPUT TAPE AND STORE                           * 19920027
*        ************************************************************** 19940027
READRLD  DS        0H                                                   19960027
         BAL       R9,GTO              BRANCH TO IO ROUTINE             19980027
         BZ        EOFRH               BRANCH IF EOF                    20000027
         MVC       0(2,R10),HOLD       MOVE IN RLD- ESD/ID              20020027
         MVC       2(3,R10),HOLD+3     SYMBOL ADDRESS                   20040027
         MVC       5(1,R10),HOLD+2     FLAG                             20060027
*        ************************************************************** 20080027
*        UP ALL POINTERS FOR NEXT RLD                                 * 20100027
*        ************************************************************** 20120027
         ST        R10,0(R2,R8)        STORE ADDRESS POINTER            20140027
         LA        R2,4(R2)            UP COUNTER BY FULL WORD          20160027
         LA        R10,RLDLN(,R10)     UP DATA POINTER BY RECORD LENGT  20180027
         B         READRLD             GET NEXT RECORD                  20200027
*        ************************************************************** 20220027
*        END OF FILE ON RLD                                           * 20240027
*        ************************************************************** 20260027
EOFRH    DS        0H                                                   20280027
         LR        R7,R2               LOAD UPPER LIMIT OF STRING       20300027
         S         R7,=F'4'            BACK IT UP ONE                   20320027
         TM        CTDOSI(ACT),X'40'   TEST IF DOS OPTION               20340027
         BO        SETOT1              DON'T SORT RLD IF SO             20360027
*        ************************************************************** 20380027
*        INTERNAL SORT FOR RLD                                        * 20400027
*        ************************************************************** 20420027
*        SHELL'S METHOD                                               * 20440027
         LR        R6,R7               INITIALIZE DELTA AND             20460027
         L         R10,BASED           DATA ITEM BASE                   20480027
         LA        R6,4(R6)                                             20500027
ESORT1   DS        0H                                                   20520027
         SRL       R6,1                DELTA/2 INITIALIZES NEXT PASS    20540027
         N         R6,=F'-4'           FULL WORD ALIGN                  20560027
         BZ        SETOT1              END OF SORT WHEN DELTA =0        20580027
         SR        R0,R0               INITIAL SUBSEQUENCE BASE INDEX   20600027
ESORT4   DS        0H                                                   20620027
         LR        R14,R0                                               20640027
ESORT2   DS        0H                                                   20660027
         LR        R9,R14              STEP TO NEXT SUBSEQUENCE PAIR    20680027
ESORT3   DS        0H                                                   20700027
         LA        R14,0(R6,R9)        UPPER INDEX = LOWER+DELTA        20720027
         CR        R14,R7              BRANCH IF END OF SUBSEQUENCE     20740027
         BH        ESORT6                                               20760027
         L         R1,0(R9,R8)         POINT TO LOWER DATA ITEM         20780027
         L         R4,0(R14,R8)        POINT TO UPPER DATA ITEM         20800027
         CLC       0(RLDLN,R1),0(R4)   COMPARE                          20820027
         BNH       ESORT2              IN SEQUENCE                      20840027
         ST        R1,0(R14,R8)        LET UPPER ITEM SINK              20860027
         ST        R4,0(R9,R8)                                          20880027
         SR        R9,R6                                                20900027
         BNL       ESORT3              POSSIBLY ALL THE WAY             20920027
         B         ESORT2              TO THE BOTTOM.....               20940027
ESORT6   DS        0H                                                   20960027
         A         R0,=F'4'            STEP TO NEXT SUBSEQUENCE         20980027
         CR        R0,R6               TEST FOR END OF PASS             21000027
         BL        ESORT4              NO -SORT NEXT SUBSEQUENCE        21020027
         B         ESORT1              YES -INITIALIZE NEW PASS         21040027
*        ************************************************************** 21060027
*        RLD OUTPUT ALL DATA FROM CORE                                * 21080027
*        ************************************************************** 21100027
SETOT1   DS        0H                                                   21120027
         TM        CTRLDI(ACT),X'08'   WAS RLD SPECIFIED .Q             21140027
         BZ        SETOT3              BRANCH IF NOT                    21160027
         MVC       HEAD1ID,RLD1ID      SET HEADER ONE                   21180027
         MVI       HEAD2ID,C' '        CLEAR HEADER TWO                 21200027
         MVC       HEAD2ID+1(L'HEAD2ID-1),HEAD2ID  ALL OF IT            21220027
         MVC       HEAD2ID(L'RLD2ID),RLD2ID  SET SECOND HEADER          21240027
         TM        CFLGS,RMULT         IS IT MULTIPLE RLD .Q            21260027
         BZ        SETOT2              BRANCH IF NOT                    21280027
         MVC       RLDH2+55(54),RLDH2+1 EXPAND FOR TWO COLUMN           21300027
         TM        CFLGS,TRIPLE        IS IT TRIPLE RLD .Q              21320027
         BZ        SETOT2              BRANCH IF NOT                    21340027
         MVC       RLDH2+37(72),RLDH2+1  EXPAND FOR THREE COLUMN        21360027
SETOT2   DS        0H                                                   21380027
         BAL       R9,PAGEHED          PRINT RLD HEADING ON FIRST PAGE  21400027
         ST        R1,CTLINECT(,ACT)   SET LINES LEFT ON PAGE           21420027
SETOT3   DS        0H                                                   21440027
         SR        R10,R10             SET ADDRESS POINTER TO ZERO      21460027
         LA        R5,48               LOAD UPPER LIMIT OF CARD         21480027
         LA        R2,VARRLD           SET BASE ADDRESS OF OUTPUT REC   21500027
         SR        R4,R4                                                21520027
LODHLD   DS        0H                                                   21540027
         L         R1,0(R10,R8)        LOAD POINTER TO NEXT DATA ELEM   21560027
         LA        R10,4(,R10)         UP POINTER BY FULL WORD          21580027
         CR        R10,R7              LOOK FOR END OF STRING           21600027
         BNH       MOVE1               BRANCH IF NOT END                21620027
         MVI       ENDSWX,X'FF'        END OF STRING TURN END SWH ON    21640027
MOVE1    DS        0H                                                   21660027
         MVC       PESDID,1(R1)                                         21680027
         MVC       RESDID,0(R1)        MOVE FROM WORK AREA TO OUTPUT    21700027
         MVC       ENDRLD,2(R1)                                         21720027
         UNPK      FWORD(15),HLDRLD(8) UNPACK RLD ENTRY                 21740027
         LA        R6,FWORD            LOAD ADDRESS OF FIRST BYTE       21760027
CONV     DS        0H                                                   21780027
         OI        0(R6),X'F0'         MASK HIGH END                    21800027
         CLI       0(R6),X'F9'         IS VALUE EQ OR LESS THAN 9       21820027
         BNH       UP1                 YES                              21840027
         SR        R0,R0               NO                               21860027
         IC        R0,0(,R6)           LOAD CHR IN REG                  21880027
         SH        R0,THRNIN           SUBTRACT 39 FROM CHR             21900027
         STC       R0,0(,R6)           STORE EDITED CHR IN WORK AREA    21920027
UP1      DS        0H                                                   21940027
         LA        R6,1(,R6)           UP POINTER BY ONE                21960027
         LA        R0,FWORD+16         LOAD UPPER LIMIT OF WORK AREA    21980027
         CR        R6,R0               CHECK FOR END                    22000027
         BL        CONV                RETURN FOR NEXT CHR              22020027
         MVC       RLDIMAGE+3(2),FWORD+2 POS. ID                        22040027
         MVC       RLDIMAGE+11(2),FWORD REL. ID                         22060027
         MVC       RLDIMAGE+18(2),FWORD+10 FLAG                         22080027
         MVC       RLDIMAGE+24(6),FWORD+4 ADDRESS                       22100027
         TM        CTRLDI(ACT),X'08'   TEST RLD SWITCH                  22120027
         MVC       RLDHLD+1(1),PESDID  MOVE FOR CARD- POSITION ID       22140027
         MVC       RLDHLD+3(1),RESDID  RELOCATION ID                    22160027
         MVC       RLDHLD+5(3),ENDRLD  ADDRESS                          22180027
         MVC       RLDHLD+4(1),ENDRLD+3 FLAG                            22200027
         BZ        SQNO1               BRANCH IF NORLD                  22220027
         STM       R1,R4,REGHLD        STORE WORK REGISTERS             22240027
         L         R2,NXTRLD           FIND WHERE WE ARE                22260027
         MVC       1(36,R2),RLDIMAGE   MOVE THE TEXT                    22280027
         LA        R1,108(,R2)         ASSUME ONE COLUMN                22300027
         TM        CFLGS,RMULT         IS IT TWO OR THREE .Q            22320027
         BZ        RLDGUNK             BRANCH IF NEITHER                22340027
         LA        R1,54(,R2)          SO ASSUME TWO                    22360027
         TM        CFLGS,TRIPLE        IS IT THREE .Q                   22380027
         BZ        RLDGUNK             BRANCH IF NOT                    22400027
         LA        R1,36(,R2)          SO MAKE IT THREE                 22420027
RLDGUNK  DS        0H                                                   22440027
         CL        R1,=A(RLDDET+108)   END OF LINE .Q                   22460027
         ST        R1,NXTRLD           STORE POINTER BACK               22480027
         BNE       NORLD               SEE IF WE SHOULD PRINT           22500027
         LA        R1,RLDDET           RESET POINTER                    22520027
         ST        R1,NXTRLD           TO BUFFER START                  22540027
         L         R1,CTLINECT(,ACT)   GET LINES PER PAGE               22560027
         BCT       R1,NORLDH           DECREMENT LINES LEFT             22580027
         BAL       R9,PAGEHED          BRANCH TO HEADING ROUTINE        22600027
NORLDH   DS        0H                                                   22620027
         ST        R1,CTLINECT(,ACT)   UPDATE LINES LEFT                22640027
         LA        R1,RLDDET           LOAD ADDRESS OF OUTPUT           22660027
         BAL       R9,WRLST            WRITE OUTPUT                     22680027
         MVI       RLDDET,X'00'        RESET SPACING                    22700027
         MVI       RLDDET+1,C' '       BLANK THE ENTIRE LINE            22720027
         MVC       RLDDET+2(L'RLDDET-2),RLDDET+1  BY PROPAGATION        22740027
NORLD    DS        0H                                                   22760027
         LM        R1,R4,REGHLD        RESTORE WORK REGISTERS           22780027
SQNO1    DS        0H                                                   22800027
         CLC       COMPID,RLDHLD       IS THIS THE SAME ID .Q           22820027
         BNE       NEWRLD              NO START NEW                     22840027
         LA        R6,4                SET MOVE LENGTH- 4 BYTES         22860027
         LA        R9,RLDHLD+4         SET REGISTER FOR MOVE            22880027
         SR        R2,R6                                                22900027
         OI        0(R2),X'01'         TURN DUP RLD FLAG ON             22920027
         AR        R2,R6               RESET OUTPUT POINTER             22940027
         LA        R6,3                SET MOVE LENGTH                  22960027
         B         CRDTST                                               22980027
NEWRLD   DS        0H                                                   23000027
         LA        R9,RLDHLD           SET REGISTER FOR MOVE            23020027
         LA        R6,7                SET MOVE LENGTH- 7 BYTES         23040027
         MVC       TSTPES,1(R1)                                         23060027
         MVC       TSTRES,0(R1)                                         23080027
CRDTST   DS        0H                                                   23100027
         LA        R5,56               SET BYTE COUNT LIMIT             23120027
         LA        R4,1(R4,R6)         STEP BYTE COUNT                  23140027
         CR        R4,R5               IF END OF OUTPUT RECORD          23160027
         BH        WRITE0              WRITE OUT                        23180027
         EX        R6,MVRLD            EXECUTE MOVE INSTRUCTION         23200027
         BE        WRITE1              BRANCH IF CARD FULL              23220027
         LA        R2,1(R2,R6)         STEP OUTPUT POINTER              23240027
         CLI       ENDSWX,X'FF'        IS END SWITCH ON                 23260027
         BE        WRITE1              YES, GO WRITE RLD                23280027
         B         LODHLD              RETURN AND GET NEXT RECORD       23300027
MVRLD    MVC       0(*-*,R2),0(R9)     EXECUTED MOVE INSTRUCTION        23320027
WRITE0   DS        0H                                                   23340027
         OI        PKFLG,X'FF'         TURN ON RLD SPLIT FLAG           23360027
         BCTR      R4,0                                                 23380027
         SR        R4,R6               GET BYTE COUNT                   23400027
WRITE1   DS        0H                                                   23420027
         STH       R4,REGDMP           STORE BYTE COUNT                 23440027
         MVC       BYTOUT(2),REGDMP    MOVE BYTE COUNT TO OUTPUT        23460027
         BAL       R9,DKCNT            BRANCH TO UP DECK COUNTER BY 1   23480027
         MVC       VARRLD+60(4),DKNO   PUT IN DECK SEQUENCE NUMBER      23500027
         MVC       VARRLD+56(4),DKID   MOVE DECK ID TO OUTPUT           23520027
         BAL       R9,WRPUN            PUNCH THE CARD                   23540027
         XC        COMPID,COMPID       ZERO SO ID'S GO OUT NEXT TIME    23560027
         MVI       RLDOUT+4,X'40'      BLANK OUT CARD                   23580027
         MVC       RLDOUT+5(67),RLDOUT+4 RESET OUTPUT LINE              23600027
         LA        R2,VARRLD           RESET REG FOR NEXT RECORD        23620027
         SR        R4,R4               START INDEX AT ZERO              23640027
         CLI       PKFLG,X'FF'         IS SPLIT FLAG ON                 23660027
         BNE       TSTND               NO, CONTINUE RLD OUTPUT          23680027
         MVI       PKFLG,X'00'         ZERO SPLIT FLAG                  23700027
         B         NEWRLD              PUT IN REST OF RLD               23720027
TSTND    DS        0H                                                   23740027
         CLI       ENDSWX,X'FF'        IS RLD OUTPUT COMPLETE           23760027
         BNE       LODHLD              NO, GET NEXT RECORD              23780027
         LA        R1,RLDDET           GET BUFFER POINTER               23800027
         CL        R1,NXTRLD           SEE IF STUFF TO PRINT            23820027
         BE        ENDJOB              BRANCH IF NOT                    23840027
         CLI       RLDDET,X'00'        ONLY ONE LINE ON PAGE .Q         23860027
         BE        RLDBAL              BRANCH IF NOT                    23880027
         L         R2,QBUFAD           GET ADDR OF PAGE HEADER          23900027
         A         R2,NXTRLD           ADD RLD POS'N POINTER            23920027
         LA        R4,RLDDET-1         GET STARTING LOC - 1             23940027
         SR        R2,R4               GET SPOT TO                      23960027
         MVI       0(R2),C' '          PLACE FIRST BLANK                23980027
         S         R4,NXTRLD           FIND OUT THE LENGTH              24000027
         LA        R4,107(,R4)         AND MAKE IT PROPER               24020027
         EX        R4,RLDMVC           BLANK THE REST OF IT             24040027
RLDBAL   DS        0H                                                   24060027
         BAL       R9,WRLST            ELSE PRINT THE STUFF             24080027
         B         ENDJOB              YES, EXIT RLD                    24100027
RLDMVC   MVC       1(*-*,R2),0(R2)     TO PROPAGATE BLANKS              24120027
*        ************************************************************** 24140027
*        DECK COUNTING SUBROUTINE                                     * 24160027
*        ************************************************************** 24180027
DKCNT    DS        0H                                                   24200027
         PACK      DWORD,DKNO          CONVERT TO DECIMAL               24220027
         CVB       R1,DWORD            CONVERT TO BINARY                24240027
         LA        R1,1(,R1)           BUMP SEQUENCE BY ONE             24260027
         CVD       R1,DWORD            CONVERT BACK TO DECIMAL          24280027
         UNPK      DKNO,DWORD          AND BACK TO ZONED                24300027
         OC        DKNO,CDZERO         MAKE IT PRINTABLE                24320027
         BR        R9                  AND RETURN                       24340027
*        ************************************************************** 24360027
*        PRINT PAGE HEADINGS                                          * 24380027
*        ************************************************************** 24400027
PAGEHED  DS        0H                                                   24420027
         ST        R9,RETHLD           REMEMBER RETURN ADDRESS          24440027
         BAL       R9,PGCNT            CALL PAGE COUNT SUBROUTINE       24460027
         LA        R1,LRFH1            ADDRESS OF HEADING 1             24480027
         BAL       R9,WRLST            PUT OUT HEADING 1                24500027
         LA        R1,LRFH2            ADDRESS OF HEADING 2             24520027
         BAL       R9,WRLST            PUT OUT HEADING 2                24540027
         MVI       HEAD1,X'FF'         EJECT HEADING 1                  24560027
         MVI       HEAD2,X'02'         DOUBLE SPACE HEADING 2           24580027
         MVI       OUTLINE,X'01'       AND SPACE AFTER HEADING 2        24600027
         SR        R1,R1               ZERO REGISTER                    24620027
         IC        R1,CTPGLNCT(,ACT)   GET LINES PER PAGE               24640027
         L         R9,RETHLD           RESTORE RETURN ADDRESS           24660027
         BR        R9                  AND RETURN                       24680027
*        ************************************************************** 24700027
*        PAGE COUNTER SUBROUTINE                                      * 24720027
*        ************************************************************** 24740027
PGCNT    DS        0H                                                   24760027
         STM       R1,R2,REGHLD+16     STORE WORK REGISTERS             24780027
         L         R1,ADLIST1(,ACT)    POINT TO LIST1 IN ASMGASM        24800027
         L         R2,L1PAGENO(,R1)    GET PAGE NUMBER ON SYSPRINT      24820027
         LA        R2,1(,R2)           ADD ONE TO PAGE NUMBER           24840027
         ST        R2,L1PAGENO(,R1)    AND RESTORE PAGE COUNT           24860027
         CVD       R2,DWORD            CONV BIN COUNTER TO DECIMAL      24880027
         MVC       FWORD(6),EDMASK     ENTER EDIT MASK FOR NO ZEROS     24900027
         ED        FWORD(6),DWORD+5    EDIT IN THE PAGE NUMBER          24920027
         MVC       HEAD1PGE,FWORD+2    MOVE EDITED PAGE NO TO USER      24940027
         LM        R1,R2,REGHLD+16     RESET WORK REGISTERS             24960027
         BR        R9                  RETURN TO USER                   24980027
*        ************************************************************** 25000027
*        WRITE RECORDS ON SYSLST                                      * 25020027
*        ************************************************************** 25040027
WRLST    DS        0H                                                   25060027
         STM       R1,R15,SAVE         SAVE ALL CALLER'S REGISTERS      25080027
         LR        R0,R1               TRANSFER OUTPUT ADDRESS          25100027
         L         R1,LSTDCB(,ACT)     GET SYSPRINT DCB ADDRESS         25120027
         PUT       (1),(0)             PRINT IT OUT                     25140027
         L         R1,LSTDCB(,ACT)     GET SYSPRINT DCB ADDRESS         25160027
         L         R1,L1DCBLPT(,R1)    GET LAST QSAM BUFFER POINTER     25180027
         LTR       R1,R1               WAS IT DUMMIED .Q                25200027
         BZ        WRLSTAR             BRANCH IF YES                    25220027
         ST        R1,QBUFAD           PASS ON THAT ADDRESS             25240027
WRLSTAR  DS        0H                                                   25260027
         LM        R1,R15,SAVE         RESTORE CALLER'S REGISTERS       25280027
         BR        R9                  AND RETURN                       25300027
*        ************************************************************** 25320027
* SYSTEM OUTPUT SUBROUTINE                                            * 25340027
*        ************************************************************** 25360027
WRPUN    DS        0H                                                   25380027
         STM       R1,R15,SAVE         SAVE ALL REGISTERS               25400027
         TM        CTPCHI(ACT),X'80'   IS A DECK WANTED .Q              25420027
         BZ        PCH1                NO DECK, TRY SYSGO               25440027
         L         R1,PCHDCB(ACT)      GET ADDRESS OF PUNCH DCB         25460027
         PUT       (1),RLDOUT          PUNCH OUT RLD CARD               25480027
PCH1     DS        0H                                                   25500027
         TM        CTCGOI(ACT),X'40'   IS LOAD OPTION ON .Q             25520027
         BZ        PCH11               NO, EXIT                         25540027
         L         R1,GODCB(ACT)       YES, GET SYSGO DCB               25560027
         PUT       (1),RLDOUT          PUT CARD IMAGE ON SYSGO          25580027
PCH11    DS        0H                                                   25600027
         TM        CTEXEC(ACT),X'20'   TEST FOR EXECUTION               25620027
         BZ        PCH111                                               25640027
         L         R1,BUFFPT(,ACT)     DO A WRITE                       25660027
         CNOP      2,4                                                  25680027
         BALR      R0,R1                                                25700027
         DC        A(8,4,RLDOUT,80)                                     25720027
         L         R1,BUFFPT(,ACT)     DO A CHECK                       25740027
         CNOP      2,4                                                  25760027
         BALR      R0,R1                                                25780027
         DC        A(28,4)                                              25800027
PCH111   DS        0H                                                   25820027
         LM        R1,R15,SAVE         RESTORE ALL REGISTERS            25840027
         BR        R9                  EXIT                             25860027
*        ************************************************************** 25880027
* GET XRF OR RLD FROM SYSUT1                                          * 25900027
*        ************************************************************** 25920027
GTO      DS        0H                                                   25940027
         STM       R0,R8,SAVE          SAVE SOME REGS                   25960027
         LM        R4,R8,ICT           LOAD I/O CONTROL JUNK            25980027
         CR        R4,R5               TEST FOR NEW BLOCK NEEDED        26000027
         BNE       GET                                                  26020027
         ST        R7,READCODE         SET TYPE OF READ                 26040027
READ     DS        0H                                                   26060027
         L         R1,BUFFPT(,ACT)     DO THE READ                      26080027
         CNOP      2,4                 ALIGN PARAMETERS                 26100027
         BALR      R0,R1               GO DO THE READ                   26120027
READCODE DS        F                                                    26140027
         DC        A(0,RESBUF)                                          26160027
         L         R1,BUFFPT(,ACT)     DO A CHECK                       26180027
         CNOP      2,4                 ALIGN PARAMETERS                 26200027
         BALR      R0,R1               GO DO THE CHECK                  26220027
         DC        A(28,0,0)                                            26240027
         CLC       RESBUF(1),ICT+16    TEST FOR RIGHT RECORD TYPE       26260027
         BNE       READ                                                 26280027
         LA        R5,RESBUF+1         SET RECORD POINTER               26300027
GET      DS        0H                                                   26320027
         CLC       0(4,R5),EOF         TEST FOR END OF FILE             26340027
         BE        GETOUT                                               26360027
         MVC       HOLD(8),0(R5)       MOVE THE RECORD                  26380027
         AR        R5,R6               INCREMENT POINTER                26400027
         ST        R5,ICT+4            STORE IT                         26420027
GETOUT   DS        0H                                                   26440027
         LM        R0,R8,SAVE          RESTORE CALLER'S REGS            26460027
         BR        R9                                                   26480027
*        ************************************************************** 26500027
* END OF ASMGFPP                                                      * 26520027
*        ************************************************************** 26540027
ENDJOB   DS        0H                                                   26560027
         MVI       RLDOUT+1,X'40'      BLANK CARD OUTPUT AREA           26580027
         MVC       RLDOUT+2(79),RLDOUT+1                                26600027
         CLC       DKNO(4),CDZERO      WERE ANY CARDS PUT OUT           26620027
         BE        YPN                 NO, SKIP                         26640027
         BAL       R9,DKCNT            GO STEP AND FORMAT NUMBER FOR    26660027
         MVC       RLDOUT+76(4),DKNO   MOVE NUMBER TO OUTPUT ARRY       26680027
         MVC       RLDOUT+1(3),ENDCR   MOVE CHARACTERS -END- TO CARD    26700027
         MVC       RLDOUT+72(4),DKID   GET DECK ID                      26720027
         L         R1,ADLIST1(,ACT)    POINT AT LIST1 TABLE IN ASM      26740027
         TM        CTDOSI(ACT),X'40'   WAS DOS OPTION SPECIFIED .Q      26760027
         BO        NOTDOS              YES, DON'T INDICATE IDR          26780027
         MVC       RLDOUT+32(1),CTIDR(ACT) MOVE IN IDR INDICATOR        26800027
NOTDOS   DS        0H                                                   26820027
         MVC       RLDOUT+33(10),L1PID(R1) MOVE PROR9M I.D. TO END      26840027
         MVC       RLDOUT+43(4),L1VERMOD(R1) ADD VERSION AND LEVEL      26860027
         MVC       RLDOUT+47(5),L1JULDTE(R1) ADD TODAY'S JULIAN DATE    26880027
         MVC       RLDOUT+53(8),L1PRTIME(R1) MAYBE ADD TIME OF DAY      26900027
         MVC       RLDOUT+62(9),L1PRDATE(R1) AND A READABLE DATE        26920027
         CLI       CTIDR(ACT),C'2'     IS A 2ND IDR PRESENT .Q          26940027
         BNE       ONEIDR              BRANCH IF NOT                    26960027
         MVC       RLDOUT+52(19),CT2IDR(ACT) MOVE 2ND IDR TO CARD       26980027
ONEIDR   DS        0H                                                   27000027
         L         R1,ENDSWH(,ACT)     GET ENTRY ADDRESS                27020027
         LTR       R1,R1               IS THERE AN ENTRY ADDRESS        27040027
         BZ        XYZ                 NO                               27060027
         MVC       RLDOUT+5(3),ENDSWH+1(ACT) YES, PUT IN THE ADDRESS    27080027
         MVC       RLDOUT+15(1),ENDSWH(ACT)                             27100027
         MVI       RLDOUT+14,X'00'                                      27120027
XYZ      DS        0H                                                   27140027
         BAL       R9,WRPUN            GO PUNCH CARD                    27160027
YPN      DS        0H                                                   27180027
         L         R1,CESIOA(,ACT)     BOTTOM OF CORE GOTTEN FROM BUFF  27200027
         L         R2,CESIOB(,ACT)     TOP OF CORE GOTTEN FROM BUFF     27220027
         SR        R2,R1               AMT OF CORE GOTTEN FROM BUFF     27240027
         ST        R1,R9D              ADDRESS OF GROW AREA             27260027
         ST        R2,R15EN            LENGTH OF GROW AREA              27280027
         L         R1,BUFFPT(,ACT)     DO A GROW                        27300027
         CNOP      2,4                                                  27320027
         BALR      R0,R1                                                27340027
         DC        A(32)                                                27360027
R15EN    DS        F                                                    27380027
R9D      DS        F                                                    27400027
         LA        R9,PAIN                                              27420027
         STM       R1,R15,SAVE                                          27440027
         MVC       RLDOUT+1(3),=C'EOF'                                  27460027
         B         PCH11                                                27480027
PAIN     DS        0H                                                   27500027
         MVC       RLDOUT+1(3),=C'RLD'                                  27520027
         TM        CTEXEC(ACT),X'20'   TEST EXECUTE OPTION              27540027
         BZ        EXIT                                                 27560027
         L         R1,BUFFPT(,ACT)     TCLOSE THE OBJECT DECK UTILITY   27580027
         CNOP      2,4                                                  27600027
         BALR      R0,R1                                                27620027
         DC        A(24,4,1)                                            27640027
EXIT     DS        0H                                                   27660027
         L         R15,=V(ASMGFD)      LOAD ADDRESS OF ASMGFD           27680027
         BR        R15                 CALL DIAGNOSTIC ROUTINE          27700027
*        ************************************************************** 27720027
* I/O CONTROL TABLES.  SEE PAGE 4 FOR FORMAT.                         * 27740027
*        ************************************************************** 27760027
IOSAVE   DS        18F                 OS SAVE AREA                     27780027
PATCH    DC        10S(*)              ASMGFPP PATCH AREA               27800027
SAVE     DS        15F                 SAVE AREA FOR REGISTERS 1-15     27820027
SR1      DS        F                   SAVE AREA FOR R1 DURING SHRINK   27840027
MSG995   DC        C'995I',AL1(L'MES995-1)                        V7A29 27842028
MES995   DC        C'INSUFFICIENT MEMORY TO PROCESS XREF'         V7A29 27844028
MSG994   DC        C'994I',AL1(L'MES994-1)                        V7A29 27846028
MES994   DC        C'INSUFFICIENT MEMORY TO PROCESS RLD'          V7A29 27848028
FWORD    DS        2D                  PACKED AND DECIMAL VALUE         27860027
DWORD    DS        D                   BINARY VALUE                     27880027
         DS        C                                                    27900027
SQFWORD  DS        18C                 STACK TO ACCUMULATE LEN,VAL,DEF  27920027
SQSAVE4  DS        4F                                                   27940027
RAPOINTR DC        A(0)                REF AREA POINTER - 16            27960027
SQSAVE2  DS        F                                                    27980027
CDZERO   DC        X'F0F0F0F0'         MASK FOR ZEROING BLANKS          28000027
XRFSIZ   EQU       (XRFLN*BLKFC1+1)/8*8+8 SIZE OF XRF BUFFER            28020027
*                                                                     * 28040027
XRFTAB   DC        2A(XRFLN*BLKFC1+1+RESBUF)                            28060027
         DC        A(XRFLN)                                             28080027
         DC        A(4)                READ & PURGE                     28100027
         DC        X'07'                                                28120027
RLDTAB   DC        2A(RLDLN*BLKFC2+1+RESBUF)                            28140027
         DC        A(RLDLN)                                             28160027
         DC        A(0)                READ & KEEP                      28180027
         DC        X'08'                                                28200027
ICT      DS        4F,C                INPUT CONTROL TABLE              28220027
*                                                                     * 28240027
FR0      EQU       0                   FLOATING REGISTER 0              28260027
FR2      EQU       2                   FLOATING REGISTER 2              28280027
*                  SYMBOLIC DISPLACEMENTS FOR XREF DEFN ENTRIES       * 28300027
XISYMB   EQU       0                                                    28320027
XILINE   EQU       6                                                    28340027
XIESDID  EQU       8                                                    28360027
XIVALUE  EQU       9                                                    28380027
XILENG   EQU       12                                                   28400027
XIOFFSET EQU       14                                                   28420027
*                  SYMBOLIC DISPLACEMENTS FOR SYMBOL TABLE ENTRIES    * 28440027
ICHAIN   EQU       0                                                    28460027
INOREFS  EQU       4                                                    28480027
ILINE    EQU       6                                                    28500027
ISYMB    EQU       8                                                    28520027
IADJ     EQU       15                                                   28540027
IESDID   EQU       16                                                   28560027
*                  SYMBOLIC MASKS FOR ADJ CODES                       * 28580027
UNDEF    EQU       X'20'                                                28600027
NAMES    EQU       X'03'                                                28620027
         SPACE                                                          28640027
EOF      DC        X'7F7F7F7F'         EOF RECORD IN XREF AND RLD       28660027
EBCDIC   DC        C' '                TRANSLATE 2ND INTERNAL CODE TO C 28680027
         DS        9C                                                   28700027
         DC        C'$#@'                                               28720027
         DS        3C                                                   28740027
         DC        C'ABCDEFGHIJKLMNOPQRSTUVWXYZ'                        28760027
         DS        6C                                                   28780027
         DC        C'0123456789'                                        28800027
         SPACE                                                          28820027
CFLGS    DC        X'00'               2 COLUMN XREF FLAGS              28840027
PKFLG    DC        X'00'               RLD SPLIT FLAG FF=SPLIT,00=NOT   28860027
CBUFAD   DS        A                   ADDRESS OF 2 COLUMN BUFFER       28880027
CBUFPT   DS        A                   ADDRESS OF CURRENT LINE          28900027
CBUFND   DS        A                   ADDRESS OF END OF BUFFER+1       28920027
QBUFAD   DC        A(RLDH1)            ADDRESS OF LAST QSAM BUFFER      28940027
NXTRLD   DC        A(RLDDET)           WHERE WE ARE IN RLDDET           28960027
CTAB     DC        AL1(RMULT+TRIPLE+XFIRST) THIS TABLE IS THE           28980027
         DC        AL1(XFIRST)         BIT SETTINGS                     29000027
         DC        AL1(MULT+RMULT+XFIRST) CORRESPONDING TO THE          29020027
         DC        AL1(MULT+RMULT+TRIPLE+XFIRST) VALUES FOR COL=        29040027
RETHLD   DS        F                   RETURN ADDRESS FOR WRLST         29060027
REGHLD   DS        6F                  SAVE AREA FOR WORK REGISTERS     29080027
ADJBS    DS        CL1092              ADJUSTMENT TABLE                 29100027
ADJBSEND DS        F                   ADJ TABLE FINAL ENTRY +4         29120027
DKID     DC        4X'40'              DECK ID                          29140027
ENDSWX   DC        X'00'               END SWITCH  FF=ON, 00=OFF        29160027
EDMASK   DC        XL7'40202020212040' EDIT MASK                        29180027
CNTSAV   DC        H'0'                LINE COUNTER SAVE AREA           29200027
THRNIN   DC        H'57'               THIRTY-NINE HEX                  29220027
REGDMP   DS        H                   TEMP FOR BYTE COUNT              29240027
DKNO     DC        C'0000'             OBJECT DECK SEQUENCE NUMBER      29260027
HOLD     DS        D                   RLD HOLD AREA                    29280027
XRFHLD   EQU       HOLD                XRF HOLD AREA                    29300027
XRFHOLD  DS        D                   SYMBOL FOR 'CONTINUED' IND       29320027
RLDIMAGE DC        CL40' '             RLD COLUMN IMAGE                 29340027
COMPID   DS        0CL4                COMPARE FOR SAME ID              29360027
         DC        X'00'                                                29380027
TSTPES   DS        C                   POS. ID                          29400027
         DC        X'00'                                                29420027
TSTRES   DS        C                   REL. ID                          29440027
RLDHLD   DC        8X'0'               RLD FOR CARD OUTPUT              29460027
HLDRLD   DS        0CL8                TO UNPACK RLD FOR CARD           29480027
PESDID   DS        C                   POS. ESD/ID                      29500027
RESDID   DS        C                   REL. ESD/ID                      29520027
ENDRLD   DS        CL6                 RLD FOR OUTPUT                   29540027
ALWRD    DC        F'0'                ALIGNMENT WORD                   29560027
LREFSPNT DS        F                   ADDRESS OF POINTER TO SMALLEST   29580027
LREFSMLL DS        F                   ADDRESS OF SMALLEST LITERAL      29600027
LREFMOVE MVC       LRFOUT+22(*-*),4(R2) MOVE LITERAL STRING TO LINE     29620027
LREFTR   TR        4(*-*,R2),0(R4)     EX LITERAL TRANSLATE TO EBCDIC   29640027
LREFCOMP CLC       4(*-*,R5),4(R2)     COMPARE LITERALS FOR ORDER       29660027
HEAD1    DS        0CL133              1ST PAGE HEADING                 29680027
UMAPH1   DS        0CL133              USING MAP PAGE HEADING           29700027
LRFH1    DS        0CL133              LITERAL CROSS REFERENCE HEAD1    29720027
XRFH1    DS        0CL133              SYMBOL CROSS REFERENCE HEAD1     29740027
RLDH1    DS        0CL133              RLD HEADING ONE                  29760027
         DC        X'FF'               EJECT                            29780027
HEAD1LAB DC        CL8' '              PROGRAM I.D.                     29800027
         DC        CL32' '             SPACE TO HEADID                  29820027
HEAD1ID  DC        CL23' '             HEADING IDENTIFIER               29840027
         DC        CL48' '             SPACE TO PAGE                    29860027
         DC        CL5'PAGE '                                           29880027
HEAD1PGE DC        CL4' '              PAGE NUMBER                      29900027
         DC        CL12' '             FILL TO 133 CHARACTERS           29920027
         SPACE     2                                                    29940027
HEAD2    DS        0CL133              SECOND PAGE HEADING              29960027
UMAPH2   DS        0CL133              USING MAP SECOND HEADING         29980027
LRFH2    DS        0CL133              LITERAL CROSS REFERENCE HEAD2    30000027
XRFH2    DS        0CL133              SYMBOL CROSS REFERENCE HEAD2     30020027
RLDH2    DS        0CL133              RLD HEADING TWO                  30040027
         DC        X'02'               TRIPLE SPACE                     30060027
HEAD2ID  DC        CL111' '            HEADING TWO IDENTIFIER           30080027
HEAD2DTE DC        CL9'DD MMM YY'      ASSEMBLY DATE                    30100027
         DC        CL12' '             FILL TO 133 CHARACTERS           30120027
         SPACE     2                                                    30140027
OUTLINE  DS        0CL133              OUTPUT WORK LINE                 30160027
UMAPOUT  DS        0CL133              USING MAP DETAIL OUTPUT LINE     30180027
LRFOUT   DS        0CL133              LREF DETAIL OUTPUT LINE          30200027
XRFOUT   DS        0CL133              XREF DETAIL OUTPUT LINE          30220027
RLDDET   DS        0CL133              RLD DETAIL OUTPUT LINE           30240027
         DC        X'00'               NO SPACEING CARRIAGE CONTROL     30260027
         DC        CL132' '            OUTPUT LINE                      30280027
LRFSN1   EQU       LRFOUT+37           LITERAL REFERENCES               30300027
XRFSN1   EQU       XRFOUT+31           XREF REFERENCES                  30320027
         SPACE     2                                                    30340027
UMP1ID   DC        CL23'       USING MAP       '                        30360027
LRF1ID   DC        CL23'LITERAL CROSS-REFERENCE'                        30380027
XRF1ID   DC        CL23'    CROSS-REFERENCE    '                        30400027
RLD1ID   DC        CL23' RELOCATION DICTIONARY '                        30420027
         SPACE     2                                                    30440027
UMP2ID   DC    C' REGISTER  USING STMT  DROP STMT  VALUE   LABEL' V7A29 30460028
LRF2ID   DC        C'  LOC  LEN   DEFN     LITERAL                  REF*30480027
               ERENCES'                                                 30500027
XRF2ID   DC        C'SYMBOL     LEN  VALUE  DEFN    REFERENCES'         30520027
SRF2ID   DC        C'SYMBOL    LENGTH,VALUE,DEFN  REFERENCES'           30540027
RLD2ID   DC        C' POS.ID  REL.ID  FLAGS  ADDRESS'                   30560027
         SPACE     2                                                    30580027
ENDCR    DC        C'END'              FOR END CARD                     30600027
         DS        0D                  FOR RLDOUT                       30620027
RLDOUT   DC        X'02'               CARD IMAGE FOR RLD OUTPUT        30640027
         DC        C'RLD'                                               30660027
         DC        6C' '                                                30680027
BYTOUT   DS        2C                  NUMBER OF BYTES                  30700027
         DC        4C' '                                                30720027
VARRLD   DC        56C' '              RLD OUTPUT                       30740027
         DC        8C' '                                                30760027
BASED    DS        F                   START OF SORT AREA               30780027
SQTRTAB2 DC        X'FF'               TABLE TO PASS 0'S                30800027
SQTRTAB1 DC        16C'0123456789ABCDEF' TABLE TO TR HEX TO CHAR        30820027
         ORG       SQTRTAB2+C'0'                                        30840027
         DC        X'00'                                                30860027
         ORG                                                            30880027
SQTRTAB3 DC        256X'00'            TABLE TO FIND BLANKS             30900027
         ORG       SQTRTAB3+C' '                                        30920027
         DC        X'FF'                                                30940027
         ORG                                                            30960027
         LTORG                                                          30980027
RESBUF   DS        0D,XL(XRFSIZ)       INTERNAL I/O BUFFERS             31000027
ERRBUF   EQU       RESBUF                                               31020027
TERLI    EQU       ERRBUF+1                                             31040027
ERRCDL   EQU       ERRBUF+519                                           31060027
         SPACE     2                                                    31080027
ENDFPP   DS        0D                                                   31100027
         SPACE     2                                                    31120027
USNGMAP  DSECT                                                          31140027
USNGREG  DS        0AL1                REGISTER NUMBER                  31160027
USNGCHN  DS        A                   CHAIN OF USING BLOCKS            31180027
USNGSTRT DS        H                   START USING STATEMENT NUMBER     31200027
USNGDROP DS        H                   DROP USING STATEMENT NUMBER      31220027
USNGLBEL DS        CL12                LABEL OF USING LOCATION    V7A29 31240028
USNGESD  DS        0XL1                ESD-ID OF USING LOCATION         31260027
USNGDISP DS        F                   OFFSET OF USING LOCATION         31280027
USNGLEN  EQU       *-USNGMAP           LENGTH OF CONTROL BLOCK          31300027
USNGDUP  EQU       5                   NUM USING MAP BLOCKS PER AREA    31320027
         SPACE     2                                                    31340027
         END       ASMGFPP                                              31360027
./ ADD NAME=ASMGF2
F2       TITLE     'ASMG     MACRO GENERATOR EDITING PHASE'             00020000
         ISEQ      73,78                                                00040000
*TITLE-'ASMGF2' (PHASE F2)                                              00060000
*FUNCTION/OPERATION                                                     00080000
*   PROCESSES ALL SOURCE, COPY AND SYSTEM MACRO STATEMENTS INTO EDITED  00100000
*   TEXT. GENERATES A GLOBAL DICTIONARY, A LOCAL DICTIONARY FOR THE     00120000
*   SOURCE PROGRAM AND ONE LOCAL DICTIONARY FOR EACH MACRO DEFINITION   00140000
*   PROCESSED.                                                          00160000
*ENTRY POINTS                                                           00180000
*        ASMGF2     REACHED VIA XCTL FROM PHASE ASMGF1                  00200000
*              *****THE FOLLOWING ENTRIES USED BY CO-MODULE ASMGF2A**** 00220000
*        ABSERR     SERIOUS ERROR PROCESSING ROUTINE                    00240000
*                             L    LINK,=V(ABSERR)                      00260000
*                             BALR LINK,LINK                            00280000
*                             DC   AL1(ERROR-CODE,ERROR-RECORD-TYPE)    00300000
*        ABS001     FLUSH REMAINING CARDS OF STATEMENT IN ERROR         00320000
*                             L    LINK,=V(ABS001)                      00340000
*                             BR   LINK                                 00360000
*        DRIVER     PROCESS NEXT STATEMENT                              00380000
*                             L    LINK,=V(DRIVER)                      00400000
*                             BR   LINK                                 00420000
*        MEND1      SIMULATE 'MEND' WHEN EOD WHILE READING SYSTEM MACRO 00440000
*                             L    LINK,=V(MEND1)                       00460000
*                             BR   LINK                                 00480000
*        NDOPR0     END OF STATEMENT PROCESSOR                          00500000
*                             L    LINK,=V(NDOPR0)                      00520000
*                             BALR LINK,LINK                            00540000
*        SWICTL     SET STANDARD ICTL PARAMETERS FOR SYSLIB READ        00560000
*                             L    LINK,=V(SWICTL)                      00580000
*                             BALR LINK,LINK                            00600000
*        WRNERR     WARNING ERROR PROCESSING ROUTINE                    00620000
*                             L    LINK,=V(WRNERR)                      00640000
*                             BALR LINK,LINK                            00660000
*                             DC   AL1(ERROR-CODE,ERROR-RECORD-TYPE)    00680000
*        FIND       DOES A POINT TO FIRST RECORD OF A MEMBER IN SYSLIB  00700000
*                             SEE COMMENTS PRECEEDING FIND ROUTINE      00720000
*INPUT                                                                  00740000
*   SYSIN -SOURCE PROGRAM STATEMENTS                                    00760000
*   SYSLIB -COPY CODE AND SYSTEM MACRO SOURCE STATEMENTS                00780000
*   F1 EXIT CONDITIONS INDICATED IN ERRSW1 BYTE -                       00782000
*        ERRBDPM = '0' -- PARM FIELD OK                                 00784000
*        ERRBDPM = '1' -- ERROR IN PARM FIELD                           00786000
*   REGISTER 10 POINTS TO F1/F2 SHARED COMMON AREA                      00788000
*                                                                       00790000
*OUTPUT                                                                 00800000
*   SYSUT3 -SOURCE STATEMENTS AND ASSOCIATED EDITED TEXT AND ERROR      00820000
*           RECORDS                                                     00840000
*   SYSUT1 -MACRO EDITED TEXT AND ASSOCIATED ERROR RECORDS AND MACRO    00860000
*           AND OPEN CODE DICTIONARIES                                  00880000
*EXTERNAL ROUTINES                                                      00900000
*        ASMGBUFF   USED TO PERFORM I/O FUNCTIONS SUCH AS READ, WRITE,  00920000
*                   NOTE, POINT, ETC.                                   00940000
*              *****THE FOLLOWING ROUTINES ARE IN CO-MODULE ASMGF2A**** 00960000
*        ASCAN      ATTRIBUTE GATHERER FOR DC/DS OPERANDS               00980000
*        BWFORC     UT1/UT3 OUTPUT BLOCKING ROUTINE    SIZE ENTRY       01000000
*./      DELETE    SEQ1=01020020,SEQ2=01020020                          01020000
*        BWRITE     UT1/UT3 OUTPUT BLOCKING ROUTINE    TEXT ENTRY       01040000
*        DCLOSE     CLOSES OUT SOURCE PROGRAM AND MACRO LOCAL           01060000
*                   DICTIONARIES AND CREATES CORRESPONDING SUBSETTED    01080000
*                   DICTIONARIES FOR PHASE ASMGF3                       01100000
*        DCLOS1     (SAME FUNCTION AS DCLOSE)                           01120000
*        ENTDCT     CREATES ENTRIES IN THE GLOBAL AND LOCAL             01140000
*                   DICTIONARIES FOR SYMBOLS, MACRO NAMES, ETC.         01160000
*        EOFIN      PROCESSES EOD CONDITION ON SYSIN                    01180000
*        EOFLIB     PROCESSES EOD CONDITION ON SYSLIB                   01200000
*        GETSRC     SYSIN/SYSLIB INPUT PROCESSING ROUTINE               01220000
*        KLOSIT     END OF PHASE PROCESSOR                              01240000
*        LIBCHK     CHECK SYSLIB READ - BEFORE COPY FROM MACRO          01260000
*                                                                       01280000
*                                                                       01300000
*        LIBRFND1  DOUBLE BUFFER READ INITIATE FROM SYSLIB              01320000
*        LIBWAIT   AWAIT COMPLETION OF ALL READS ON SYSLIB AND CLEAR    01340000
*                   DCB ERROR FLAGS                                     01360000
*        LOOKUP     PROCESS ANY NECESSARY DICTIONARY ENTRIES FOR STMT   01380000
*EXITS -NORMAL (FROM CO-MODULE ASMGF2A)                                 01400000
*       TO PHASE ASMGF3 VIA XCTL WHEN ALL INPUT HAS BEEN PROCESSED      01420000
*      -ERROR  (FROM CO-MODULE ASMGF2A)                                 01440000
*       ABEND 20 RETURN TO SYSTEM IF THE GLOBAL OR SOURCE PROGRAM       01460000
*        LOCAL DICTIONARY OVERFLOWS ITS AVAILABLE AREA                  01480000
*TABLES/WORK AREAS                                                      01500000
*        COMMON WORK AREA WAS ASSEMBLED AS PART OF ASMGF1 AS A CSECT.   01520000
*         COMMON AREA IS FORMATTED AS INDICATED BY THE DSECT 'COMMON'.  01540000
*        THE FOLLOWING WORK AREAS ARE IN A SEGMENT OF MEMORY OF MEMORY  01560000
*         AQUIRED FROM BUFF BY F1.                                      01580000
*         A SYSUT3 BUFFER POINTED AT BY WORD AT BWBLKS+16.              01600000
*         A SYSUT1 BUFFER POINTED AT BY WORD AT BWBLKS.                 01620000
*         2 SYSLIB BUFFERS POINTED AT BY LIBBUFAD.                      01640000
*         THE GLOBAL DICTIONARY POINTED AT BY GDP.                      01660000
*ATTRIBUTES -N/A                                                        01680000
         COPY      ASMGSET                                              01700000
         SPACE     1                                                    01720000
ASMGF2   START                                                          01740000
         SPACE     1                                                    01760000
*./      DELETE    SEQ1=01780020,SEQ2=01800020                          01800000
         EXTRN EOFIN                                                    01820000
         EXTRN EOFLIB                                                   01840000
*                                                                       01860000
         EXTRN LIBRFND1                                                 01880000
         EXTRN LIBWAIT                                                  01900000
         ENTRY ABSERR                                                   01920000
         ENTRY DRIVER                                                   01940000
         ENTRY NDOPR0                                                   01960000
         ENTRY SWICTL                                                   01980000
         ENTRY WRNERR                                                   02000000
         ENTRY MEND1                                                    02020000
         ENTRY ABS001                                                   02040000
*                                                                       02060000
*        REGISTER DEFINITIONS                                           02080000
RQ       EQU   0                                                        02100000
RA       EQU   1                                                        02120000
RB       EQU   2                                                        02140000
R8       EQU   8                                                        02160000
B1       EQU   11        BASE                                           02180000
B2       EQU   12        BASE                                           02200000
CM       EQU   13        COMMON POINTER                                 02220000
L5       EQU   15        LINK                                           02240000
*                                                                       02260000
*                                                                       02280000
*        SET UP PHASE F2 BASES                                          02285000
         LR        R8,L5               TRANSFER BASE ADDRESS            02290000
         USING     ASMGF2,R8           TEMPORARY INITIAL BASE           02295000
         L         CM,COMMAD           ADDRESS OF COMMON AREA           02300000
         USING     COMMON,CM           AND TELL ASSEMBLER               02305000
         ENTRYOUT  F2                                                   02310000
         LA        B1,USEBAS           1ST BASE REGISTER                02315000
         L         B2,USING1           2ND BASE REGISTER                02320000
         USING     USEBAS,B1,B2        AND TELL ASSEMBLER               02325000
*                                                                       02330000
*        INITIALIZE F1/F2 SHARED COMMON AREA                            02335000
*                                                                       02340000
         MVC       F1F2STRT(256),0(AUXREG)    MOVE SHARED F1/F2 COMMON  02345000
         MVC       F1F2STRT+256(256),256(AUXREG)   ALL OF IT            02350000
         MVC       F1F2STRT+512(F1F2END-F1F2STRT-512),512(AUXREG)       02355000
*                                                                       02360000
*        SET UP DCBS AND BUFFERS                                        02365000
*                                                                       02370000
         USING     IHADCB,RB           DCB ADDRESSABILITY               02375000
         L         RB,ADCBIN           GET SYSIN DCB ADDRESS            02380000
         MVC       DCBEODAD+1(3),EOFINAD+1     PUT EOF INTO SYSIN DCB   02384000
         L         RB,ADCBLB           GET SYSLIB DCB ADDRESS           02386000
         MVC       DCBEODAD+1(3),EOFLIBAD+1    PUT EOF INTO SYSLIB DCB  02388000
         DROP      RB                                                   02400000
*                                                                       02420000
*        TEST IF EXTEN OPTION SPECIFIED                                 02425000
*                                                                       02430000
         TM        PARBYT1,EXTEN       TEST EXTEN SWITCH                02435000
         BO        RDFRST              BRANCH IF ON                     02440000
         OI        POPRINT,2           MAKE PRINT BAD IN MACROS         02450000
         OI        POMACRO,4           MAKE MACRO BAD IN COPY           02455000
         OI        POMEND,4            MAKE MEND BAD IN COPY            02460000
         OI        POEND,X'04'         ILLEGAL WITHIN COPY        V7A28 02462028
         MVI       POCOPY,X'04'        COPY BAD BETWEEN MACS, IN COPY   02465000
         NI        SWTCH5,X'FE'        TURN EXTEN SWITCH OFF            02470000
         LA        LINK,2500           SETX DIMENSION LIMIT       V7A17 02471028
         ST        LINK,SETXLIM        SET VALUE FOR LATER CHECK  V7A17 02472028
         LA        LINK,200            MAX POS PARM VALUE         V7A58 02473028
         STH       LINK,POSNOMAX       SET VALUE FOR LATER CHECK  V7A58 02474028
*                                                                       02475000
*        READ FIRST CARD FROM SYSIN                                     02480000
*                                                                       02485000
RDFRST   DS        0H                                                   02490000
         L         LINK,GETAD          BRANCH TO GETSRC TO GET FIRST    02495000
         BALR      LINK,LINK           CARD INTO INPUT BUFFER           02500000
         DC        AL2(0)              (FOR GTSRC ENTRY)                02505000
         TM        ERRSW1,ERRBDPM      IS PARM FIELD OK .Q              02510000
         BZ        PARMOK              BRANCH IF YES                    02515000
         BAL       LINK,WRNERR         ENTER ERROR                      02520000
         DC        AL1(F1ERR1,ERRST)   ERROR CODE                       02525000
F1ERR1   EQU       55                  ERROR IN PARAMETER FIELD OF EXEC 02530000
PARMOK   DS        0H                                                   02535000
         L         INPTRS,INPUT        INITIALIZE INPUT POINTER         02540000
         LA        OUTPTR,OUTPUT       INITIALIZE OUTPUT POINTER        02545000
         LA        AUXREG,67(,INPTRS)  LAST POSITION ICTL CAN START     02550000
         CLI       0(INPTRS),BLANK     IS THERE A NAME FIELD .Q         02555000
         BNE       DRVER1              YES, ASSUME NOT ICTL             02560000
         BAL       LINK,SKPBLK         SCAN TO OPCODE FIELD             02565000
         CR        AUXREG,INPTRS       STILL ROOM FOR ICTL .Q           02570000
         BNH       DRVER1              NOT ICTL IF NOT                  02575000
         CLC       XICTL,0(INPTRS)     TEST FOR ICTL                    02580000
         BNE       DRVER1              BRANCH IF NOT                    02585000
         LA        INPTRS,4(,INPTRS)   SKIP OVER OPCODE                 02590000
         L         LINK,GETAD          GET CONTINUATIONS, IF ANY        02595000
         BALR      LINK,LINK           GO DO THE IO                     02600000
         DC        AL2(2)              (FOR GTSRC1 ENTRY)               02605000
         BAL       LINK,SKPBLK         SCAN TO START OF OPERAND FIELD   02610000
         C         INPTRS,ENDCOL       CHECK IF NO OPERANDS             02615000
         BH        ICTL                BRANCH IF NONE                   02620000
         NI        SWTCH1,X'F7'        INDICATE NO CONTINUES ALLOWED    02625000
         BAL       LINK,DECSCN         SCAN FIRST OPERAND               02630000
         B         ICTL                BRANCH IF BAD ICTL OPERAND       02635000
         LTR       RA,RA               VALUE GREATER THAN ZERO .Q       02640000
         BNH       ICTL                ERROR IF NOT                     02645000
         CH        RA,H40              VALUE GREATER THAN FORTY .Q      02650000
         BH        ICTL                ERROR IF YES                     02655000
         ST        RA,BEGCOL           NEW BEGIN COLUMN                 02660000
         LA        RA,71               STANDARD END COLUMN              02665000
         CLI       0(INPTRS),COMMA     TEST TERMINATOR                  02670000
         BNE       IC05                NOT COMMA, NO MORE OPERANDS      02675000
         BAL       LINK,DECSC1         SCAN SECOND OPERAND              02680000
         B         ICTL                BRANCH IF BAD ICTL OPERAND       02685000
         CH        RA,H40              VALUE GREATER THAN FORTY .Q      02690000
         BNH       ICTL                ERROR IF NOT                     02695000
         CH        RA,H80              VALUE GREATER THAN EIGHTY .Q     02700000
         BH        ICTL                ERROR IF YES                     02705000
         LR        RB,RA               END COL MUST BE .GE. BEG COL+5   02710000
         S         RB,BEGCOL           TO HAVE ROOM FOR 'END' OPCODE    02715000
         C         RB,F5               ON EOD CONDITION FOR SYSIN       02720000
         BL        ICTL                ERROR IF NOT                     02725000
         ST        RA,ECOL             NEW END COLUMN                   02730000
IC05     DS        0H                                                   02735000
         S         RA,BEGCOL           COMPUTE STATEMENT LENGTH         02740000
         ST        RA,SRCLEN           AND SET LENGTH                   02745000
         CLI       0(INPTRS),COMMA     TEST TERMINATOR                  02750000
         BNE       IC10                NOT COMMA, NO MORE OPERANDS      02755000
         CLI       ECOL+3,80           CAN'T CONTINUE IF END=80         02760000
         BE        ICTL                ERROR IF YES                     02765000
         BAL       LINK,DECSC1         SCAN THIRD OPERAND               02770000
         B         ICTL                BRANCH IF BAD ICTL OPERAND       02775000
         C         RA,BEGCOL           VALUE MUST BE BETWEEN BEGCOL+1   02780000
         BNH       ICTL                ERROR IF NOT                     02785000
         CH        RA,H40              AND FORTY                        02790000
         BH        ICTL                ERROR IF NOT                     02795000
         ST        RA,BEGCNT           SET NEW CONTINUE COLUMN          02800000
         LCR       RA,RA               COMPUTE LENGTH OF                02805000
         A         RA,ECOL             CONTINUATION FIELD               02810000
         ST        RA,CONLEN           SET LENGTH INDICATION            02815000
         OI        SWTCH1,8            INDICATE CONTINUES ALLOWED       02820000
IC10     DS        0H                                                   02825000
         CLI       0(INPTRS),BLANK     BLANK MUST TERMINATE             02830000
         BE        IC15                BRANCH IF YES                    02835000
         C         INPTRS,ENDCOL       OR ELSE THE END COLUMN           02840000
         BNH       ICTL                ERROR                            02845000
IC15     DS        0H                                                   02850000
         L         RA,ECOL             COMPUTE CONTINUATION             02855000
         LA        RA,1(,RA)           INDICATOR COLUMN                 02860000
         ST        RA,CNTCL1           AND SET IT                       02865000
         L         LINK,GETAD          ADDRESS OF GETSRC                02870000
         BALR      LINK,LINK           GET NEXT SYSIN RECORD            02875000
         DC        AL2(0)              (FOR GTSRC ENTRY)                02880000
         B         DRVER1              CONTINUE AFTER ICTL              02885000
XICTL    DC        X'120C1D1532'       'ICTL ' IN INTERNAL CODE         02890000
         DROP      R8                  DROP TEMPORARY BASE              02895000
*                                                                       02900000
*        ADDRESSES FOR INITIALIZATION                                   02920000
*                                                                       02940000
COMMAD   DC        A(COMMON)           COMMON WORK AREA ADDRESS         02960000
*./      DELETE    SEQ1=02980020,SEQ2=03180020                          03180000
         EJECT                                                          03200000
* ERROR CODES                                                           03220000
ERRR1    EQU   39        ILLEGAL TERMINATOR - INVALID DELIMITER         03240000
ERRR2    EQU   16        INVALID NAME                                   03260000
ERRR3    EQU   84        ILLEGAL OPERAND FIELD FORMAT                   03280000
ERRR4    EQU   71        ILLEGAL OCCURRENCE OF LCL, GBL, OR ACTR        03300000
ERRR5    EQU   42        ILLEGAL TERMINATOR IN SETB                     03320000
ERRR6    EQU   72        ILLEGAL ISEQ                                   03340000
ERRR7    EQU   73        ILLEGAL NAME FIELD                             03360000
ERRR8    EQU   41        UNDECLARED VARIABLE SYMBOL                     03380000
ERRR9    EQU   45        ILLEGAL USAGE OF VARIABLE SYMBOL               03400000
ERRR10   EQU   49        VARIABLE SYMBOL MATCHES A PARAMETER            03420000
ERRR11   EQU   51        MACRO DEFINITION PREVIOUSLY DEFINED            03440000
ERRR12   EQU   81        ILLEGAL FORMAT IN GBL OR LCL STATEMENT         03460000
ERRR13   EQU   86        ILLEGAL USAGE OF SYSTEM VARIABLE SYMBOL        03480000
ERRR14   EQU   89        ILLEGAL USAGE OF N' OR K'                      03500000
ERRR15   EQU   43        SET SYMBOL PREVIOUSLY DEFINED                  03520000
ERRR16   EQU   85        ILLEGAL LOGICAL OPERATOR                       03540000
ERRR17   EQU   87        NO TERMINATING QUOTES                          03560000
ERRR18   EQU   26        TOO MANY LEVELS OF PARENTHESIS                 03580000
ERRR19   EQU   96        OPERAND .GT. 255 CHARACTERS                    03600000
ERRR20   EQU   94        INVALID NAME OR OPERATION IN PROTOTYPE         03620000
ERRR21   EQU   93        UNBALANCED PARENTHESIS                         03640000
ERRR22   EQU   99        POSITIONAL PARAMETER FOLLOWS KEYWORD           03660000
ERRR23   EQU   98        MORE THAN 200 PARAMETERS IN PROTOTYPE          03680000
ERRR24   EQU   75        ILLEGAL STATEMENT OUTSIDE MACRO DEFINITION.    03700000
ERRR25   EQU   73        ILLEGAL NAME FIELD OF ANOP.                    03720000
ERRR26   EQU   102       ILLEGAL ICTL.                                  03740000
ERRR27   EQU   103       ILLEGAL NAME IN OPERAND OF COPY OP.            03760000
ERRR28   EQU   104       COPY CODE NOT FOUND.                           03780000
ERRR29   EQU   101       UNEXPECTED EOF ON SYSIN.                       03800000
ERRR30   EQU   74        ILLEGAL STATEMENT IN COPY CODE.                03820000
ERRR31   EQU   79        ILLEGAL OP IN MACRO DEFINITION.                03840000
ERRR32   EQU   74        ILLEGAL STATEMENT IN SYSTEM MACRO.             03860000
ERRR33   EQU   79        END CARD IN MACRO DEFINITION.                  03880000
ERRR34   EQU   75        ILLEGAL STATEMENT IN OPEN CODE.                03900000
ERRR35   EQU   76        SEQUENCE ERROR.                                03920000
ERRR36   EQU   77        ILLEGAL CONTINUATION CARD.                     03940000
ERRR37   EQU   77        TOO MANY CONTINUATION CARDS.                   03960000
ERRR38   EQU   105       EOD ON SYSLIB                                  03980000
ERRR39   EQU   34        OP-CODE NOT FOLLOWED BY BLANK                  04000000
ERRR40   EQU   82        ILLEGAL DIMENSION SPECIFIED IN GBL OR LCL      04020000
ERRR41   EQU   90        INVALID SUBSCRIPT                              04040000
ERRR42   EQU   91        INVALID SELF DEFINING TERM                     04060000
ERRR43   EQU   92        INVALID FORMAT FOR VARIABLE SYMBOL             04080000
ERRR44   EQU   83        SET NAME FIELD NOT A VARIABLE SYMBOL           04100000
ERRR45   EQU   100       STATEMENT COMPLEXITY EXCEEDED                  04120000
ERRR46   EQU   97        BAD PROTOTYPE FORMAT                           04140000
ERRR47   EQU   48        SYMBOLIC PARAMETER PREVIOUSLY DEFINED          04160000
ERRR48   EQU   44        SET SYMBOL USAGE INCONSISTENT WITH DECLARATION 04180000
ERRR49   EQU   47        SEQUENCE SYMBOL PREVIOUSLY DEFINED             04200000
ERRR50   EQU   52        NAME FIELD CONTAINS ILLEGAL SET SYMBOL         04220000
ERRR51   EQU   50        INCONSISTANT GLOBAL DECLARATION                04240000
*./      DELETE    SEQ1=04260020,SEQ2=04280020                          04280000
ERRR54   EQU   18        INVALID SYMBOL                                 04285000
ERRR55   EQU   88        UNDEFINED CODE                                 04290000
ERRR56   EQU   116       ILLEGAL OPSYN                                  04295000
ERRR108  EQU       108                 INVALID EQU ARGUMENTS            04297000
         EJECT                                                          04300000
*ROUTINE 'DRIVER'                                                       04320000
*FUNCTIONS-                                                             04340000
*   ENTRY PT 'DRIVER'- INITIALIZE, GET NEW CARD, GO TO 'DRVER1'.        04360000
*   ENTRY PT 'DRVER1'- SCAN NAME AND OP FIELDS, EXIT ON ERRORS.         04380000
*     PROCESS * AND .* COMMENTS. PUT EDITED NAME AND OP FIELDS IN       04400000
*     OUTPUT BUFFER. EXIT TO OPERAND PROCESSOR DETERMINED BY TYPE       04420000
*     OF NAME AND OPERATION.                                            04440000
*ENTRY POINTS-                                                          04460000
*        B     DRIVER    GET AND START PROCESSING NEW STATEMENT.        04480000
*        B     DRVER1    START PROCESSING.                              04500000
*INPUT-                                                                 04520000
*   FOR DRVER1- INPUT RECORD IN INPUT BUFFER.                           04540000
*EXTERNAL ROUTINES-                                                     04560000
*   GETSRC- GET SOURCE CARDS TO INPUT BUFFER.                           04580000
*   GETCMT- GET COMMENTS CONTINUATIONS.                                 04600000
*   EDT04-  EDIT COMMENTS TO OUTPUT.                                    04620000
*   NDSMT3- WRITE OUT OUTPUT BUFFER.                                    04640000
*   GSCAN-  CLASSIFY NAME AND OPERATION FIELDS.                         04660000
*   PUTPUT- INSERT TEXT FLAGS IN OUTPUT BUFFER.                         04680000
*   ENTDCT- CHECK IF OP IS ASSEMBLER OP.                                04700000
*NORMAL EXITS- TO OPERAND PROCESSORS-                                   04720000
*        B     PROTO     PROTOTYPE IS EXPECTED.                         04740000
*        B     TESTOV    NAME IS VAR SYM, NOT IN PROTOTYPE.             04760000
*        B     VALDOP    OP IS ASSEMBLER OP.                            04780000
*        B     MCRINS    OP NOT RECOGNIZED, ASSUMED MACRO.              04800000
*ERROR EXITS- SYNTAX ERRORS IN NAME OR OP-                              04820000
*   (ALL RETURN TO DRIVER TO START NEXT CARD.)                          04840000
*        B     ILOP                                                     04860000
*        B     BDPROT                                                   04880000
*        BAL   LINK,ABSERR                                              04900000
*                                                                       04920000
ETSTRT   EQU   0                                                        04940000
APTR     EQU   0                        'A' POINTER                     04960000
EPTR     EQU   1                                                        04980000
ZERORG   EQU   2                                                        05000000
WORKRG   EQU   4                                                        05020000
COMPGO   EQU   5                                                        05040000
OPNDS    EQU   6                        PNTR WITHIN OPERAND FORMAT LIST 05060000
BLKSKP   EQU   7                        POINTER TO START OF FIELD       05080000
TEMPRG   EQU   8                        REGISTER ALWAYS AVAILABLE       05100000
DCTEMP   EQU   9                        TEMP REG FOR DICTIONARY LOOKUP  05120000
AUXREG   EQU   10                                                       05140000
OUTPTR   EQU   14                       OUTPUT POINTER                  05160000
INPTRS   EQU   15                       INPUT POINTER                   05180000
INPTR    EQU   INPTRS                                                   05200000
OPTR     EQU   OUTPTR                                                   05220000
USEBAS   EQU   *                        AL'S PIVOT      DOIN'           05222000
USEADR   EQU   *                        HARVEY'S PIVOT   THE OLD        05224000
BASE     EQU   *                        EARL'S PIVOT      SOFT SHOE     05226000
USING1   DC    A(USEBAS+4096)           SECOND BASE ADDRESS IN B2       05228000
EOFINAD  DC    A(EOFIN)                 SYSIN EOD ADDRESS               05230000
EOFLIBAD DC    A(EOFLIB)                SYSLIB EOD ADDRESS              05232000
         AIF       (&NOTSTAT).DRIV     BEGINNING OF STATISTICS PHASE    05240000
DRIVER   ST        7,HOLDIT            SAVE OUR WORK REGISTER           05260000
         L         7,=V(CARDSW)        LOAD THE EXTERNAL ADDRESS        05280000
         TM        0(7),X'FF'          ARE WE TO COUNT THE CARDS?       05300000
         BO        MVI                 GUESS NOT SO FORGET IT           05320000
         L         7,BUMPER            GET LAST COUNT- 0 AT START       05340000
         A         7,=F'1'             BUMP HER UP BY ONE-SOURCE CARD   05360000
         ST        7,BUMPER            STORE YE OLDE COUNT FOR FUTURE   05380000
         L         7,HOLDIT            RELOAD WORK REGISTER             05400000
         B         MVI                 BRANCH BY WORK AREAS             05420000
HOLDIT   DS        F                   REGISTER 7 SAVE AREA             05440000
BUMPER   DC        F'0'                CONTAINS LATEST COUNT            05460000
         LTORG                         SAVE OUR LITERAL =1              05480000
         DS        0H                  REALIGNMENT                      05500000
MVI      MVI       SWTCH3,X'00'                                         05520000
         ENTRY     BUMPER                                               05540000
          AGO      .NOW                SKIP EXTRA DRIVER STATEMENT      05560000
.DRIV    ANOP                          END OF STATISTICS PHASE          05580000
DRIVER   MVI   SWTCH3,X'00'             RESET GETSRC ENTRY INDICATORS   05600000
.NOW     ANOP                                                           05620000
         TM    SWTCH8,MASK2             SKIPPING FOR SYSIN LEVEL  V7A28 05622028
         BNO   DRVER0                   BRANCH IF NOT             V7A28 05624028
         TM    SWTCH7,X'01'             IN COPY CODE STILL .Q     V7A28 05626028
         BO    DRVER0                   YES, READ AGAIN           V7A28 05628028
         NI    SWTCH8,X'FF'-MASK2       RESET SKIP FLAG           V7A28 05630028
         B     END0                     CONTINUE END PROCESSING   V7A28 05632028
DRVER0   DS    0H                                                 V7A28 05634028
         NI    SWTCH4,X'FD'             RESET MACRO INDICATOR           05640000
         NI    SWTCH7,X'0F' TURN OFF PROC. SUBL.,CONC.,PROC. KW,ERR PR. 05660000
         TM        SWTCH7,X'02'        DID EOF OCCUR ON SYSIN  Q.       05680000
         BO        END2                YES- PROCESS AS END              05700000
         L     LINK,GETAD               BR TO GETSRC TO GET NEXT        05720000
         BALR  LINK,LINK                 CARD INTO INPUT BUFFER         05740000
         DC    AL2(0)                   (FOR GTSRC ENTRY)               05760000
         TM    SWTCH8,MASK2             SKIPPING FOR SYSIN LEVEL  V7A28 05762028
         BO    DRIVER                   YES, READ AGAIN           V7A28 05764028
*                                                                       05780000
* INITIALIZE FOR NEW STATEMENT                                          05800000
*                                                                       05820000
DRVER1   MVC   OUTPUT(10),PNCTAB        CLEAR TEXT PART OF OUTPUT BUFFR 05840000
         L     B2,USING1                RESTORE B2 AS 2ND BASE REG      05860000
         LA    OUTPTR,OUTPUT+10         POINT TO TEXT PART OF OUTPT BFR 05880000
         L     INPTRS,INPUT                                             05900000
         SR    ZERORG,ZERORG            CLEAR                           05920000
         ST    ZERORG,IOPNDX            CLEAR                           05940000
         MVC   TYPATR(5),TYPATI         SET DUMMY TYPE FOR NAME         05960000
         MVI   OUTPUT+3,X'40'           ASSUME PROCESS ONLY RECORD TYPE 05980000
         CLI   0(INPTR),STAR            TEST IF '*' COMMENTS            06000000
         BNE   DRV10                    BR IF NOT                       06020000
         BAL   AUXREG,GETCMT            COLLECT ANY CONTINUATION        06040000
         TM    SWTCH1,64           IF NOT IN MACRO DEF,                 06060000
         BZ    DRIVER              GET NEXT STATEMENT.                  06080000
         LA    OPTR,OUTPUT+2            POINT TO OUTPUT FIELD TARGET    06100000
         LR    INPTR1,INPTR             TRANSFER START CHAR             06110000
         L     INPTR,ENDCOL             GET LAST CHAR PTR               06120000
         BAL   R2,EDT05                 ADD COMMENTS TO RECORD          06130000
         MVI   OUTPUT,X'08'             SET SAM'S RECORD TYPE           06140000
         MVI   OUTPUT+3,X'30'           SET ASSEMBLER'S RECORD TYPE     06160000
         BCTR  OPTR,0                   BACK UP THE OUTPUT POINTER AND  06180000
         BCT   OPTR,NDSMT3                GO OUTPUT THE RECORD          06200000
DRV10    CLC   0(2,INPTR),PERASK   TEST IF ' .* '                       06220000
         BNE   DRV12                    BR IF NOT                       06240000
         BAL   AUXREG,GETCMT       YES, COLLECT CONTINUATION.           06260000
         TM        SWTCH7,X'02'        DID EOF OCCUR ON SYSIN  Q.       06266000
         BO        END2                YES- ABORT PROCESSING            06272000
         TM    SWTCH1,64           TEST IF IN MACRO DEF.                06280000
         BO    DRIVER              IF YES, O.K.                         06300000
         BAL   LINK,ABSERR         IF NO, OUTPUT ERR REC AND GET NEXT   06320000
         DC    AL1(ERRR24)         STATEMENT.                           06340000
         DC    AL1(ERRST)                                               06360000
DRV12    TM    SWTCH1,64           TEST IF IN MACRO DEF.                06380000
         BZ    DRV20                    BR IF NOT                       06400000
         MVI   OUTPUT+3,X'70'           PROCESS AND PRINT IF 'GEN' TYPE 06420000
*                                                                       06440000
* SCAN NAME FIELD AND SAVE RESULTS                                      06460000
*                                                                       06480000
DRV20    BAL   LINK,GSCAN               SCAN NAME FIELD                 06500000
         MVC   NAMBYT(1),GSUMRY                                         06520000
         TM    NAMBYT,5                 IF NAME FIELD IS ORDINARY OR    06540000
         BZ    *+8                        SEQ SYMBOL, SET PT OF DEFN    06560000
         OI    OPNDL,8                    IND. IN OPNDL ENTRY           06580000
         CLI   NAMBYT,1                 TEST IF SEQ SYM OR BLANK        06600000
         BH    DRV25                    BR IF NOT                       06620000
         MVC   OUTPUT+10(2),OMTFLD      ELSE GENERATE OMITTED FIELD TXT 06640000
         LA    OPTR,2(0,OPTR)                                           06660000
         B     DRV30                                                    06680000
DRV25    TM    NAMBYT,128               IF NAME FIELD CONTAINS NO V.S.  06700000
         BO    DRV30                                                    06720000
         L     R1,SVPTR                   CHANGE CHARACTER STRING FLAG  06740000
         MVI   0(R1),SPUT                 TO PUT FLAG                   06760000
DRV30    BAL   LINK,SKPBLK              SPACE INPTR TO OP FIELD         06780000
*                                                                       06800000
* SCAN OPERATION FIELD AND SAVE RESULTS                                 06820000
*                                                                       06840000
         STM   OUTPTR,INPTRS,SAVOUT                                     06860000
         BAL   R1,PUTPUT+4              PUT END OF FIELD FLAG IN        06880000
         DC    AL2(ENDFLD)                EDITED TEXT                   06900000
         MVC   SOPNDX(1),OPNDX          SAVE CURRENT OPNDX              06920000
         BAL   LINK,GSCAN               LINK TO GENERAL SCAN            06940000
         CLI   0(INPTRS),BLANK          BLANK MUST TERMINATE OP FIELD   06960000
         BNE   ILOP                     ILLEGAL OP-CODE FIELD           06980000
         BAL   R1,PUTPUT+4              PUT END OF FIELD FLAG IN        07000000
         DC    AL2(ENDFLD)                EDITED TEXT                   07020000
         MVC   OPBYTE(1),GSUMRY         SAVE OP FIELD SCAN RESULTS      07040000
         BAL   LINK,SKPBLK              SPACE INPTR TO OPRND FIELD      07060000
         TM    OPBYTE,X'04'             TEST IF OP WAS NORMAL SYMBOL    07080000
         BZ    NONNOR                   BR IF NOT                       07100000
*                                                                       07120000
* PROCESS NORMAL SYMBOL  OPERATION FIELD                                07140000
*                                                                       07160000
         IC    ZERORG,OPNDX             SET BACK TO OP-CODE             07180000
         LA    WORKRG,OPNDL-4(ZERORG)   FIELD OPNDL ENTRY.              07200000
         NI    0(WORKRG),X'07'          ERASE ALL BUT LENGTH-1 IN FLAG  07220000
         MVC   OPNDX(1),SOPNDX          BACK UP OPNDX                   07240000
         L     TEMPRG,SAVOUT+4          RESTORE INPTRS                  07260000
         MVC   DCAREA+1(8),0(TEMPRG)    MOVE OP-CODE AND LENGTH-1 INTO  07280000
         MVC   DCAREA(1),0(WORKRG)       DICTIONARY WORK AREA           07300000
         MVI   DENTRY,X'00'             INDICATE POINT OF REFERENCE     07320000
         OI    DCAREA,24                ASSUME MACRO NAME IN G.D. FLAG  07340000
         TM    SWTCH1,MASK3                                             07360000
         BO    PROTO                    BR IF PROTOTYPE EXPECTED        07380000
         L     LINK,DUSING              LET ENTDCT CHECK IF IT IS AN    07400000
         BALR  LINK,LINK                 ASSEMBLER OP                   07420000
         STH   APTR,LTTLA                                               07440000
         LTR   APTR,APTR                APTR=0 IF IT IS                 07460000
         BZ    VALDOP                   BRANCH YES                      07480000
         OI        SWTCH8,X'80'         PREVENT OPSYN                   07490000
         B     MCRINS                   BRANCH TO MACRO INSTRUCTION     07500000
         SPACE 2                                                        07520000
*                                                                       07540000
* BRANCH TO PROCESS PROTOTYPE NAME FIELD                                07560000
*                                                                       07580000
PROTO    DS    0H                       FOR ADDRESSABILITY SAKE         07600000
         LA    LINK,PROTOA-GSCAN        GET OFFSET PAST GSCAN           07620000
         B     GSCAN(LINK)              BRANCH TO PROTOA                07640000
         EJECT                                                          07660000
*./      DELETE    SEQ1=07680020,SEQ2=08460020                          08460000
*                                                                       08461000
*        FORCE OUT UTILITY BUFFER IF NEARLY FULL TO TRY TO PREVENT      08462000
*          MACRO RECORDS FROM BEING SPLIT ACROSS TWO BLOCKS, THUS       08463000
*          REDUCING PERFORMANCE                                         08464000
*                                                                       08465000
MCRINS   LA        RQ,150              FORCING VALUE FOR 1-LINE MACRO   08466000
         TM        SWTCH4,X'40'        TEST IF CONTINUED                08467000
         BZ        *+8                                                  08468000
         LA        RQ,350              FORCING VALUE FOR MULTI-LINE MAC 08469000
         LA        RA,8                SPECIFY UT3                      08470000
         TM        SWTCH1,X'40'        TEST IF IN MACRO                 08471000
         BZ        *+6                 SKIP IF NOT                      08472000
         SR        RA,RA               SPECIFY UT1                      08473000
         L         RR0,ADWS            ADDRESS OF BWFORC                08474000
         BALR      RR0,RR0             CALL IT                          08475000
*                                                                       08480000
* PROCESS MACRO INSTRUCTION NAME FIELD                                  08500000
*                                                                       08520000
         MVI   TYPATR,MTYPE             SET TYPE ATTRIBUTE              08540000
         BAL   AUXREG,SMTSQ1            CHECK STATEMENT SEQUENCING      08560000
         ST    INPTRS,SAVPTR                                            08580000
         TM    NAMBYT,5                 BR IF NAME IS EITHER ORDINARY   08600000
         BM    BELOWW                    OR SEQ SYM, ELSE               08620000
         MVI   OPNDX,0                  RESET OP LIST POINTER INDEX     08640000
BELOWW   MVI   OUTPUT,N5                M-I FLAG                        08660000
         MVC   OUTPUT+10(2),LTTLA       INSERT MACRO DEFN POINTER AND   08680000
         MVI   OUTPUT+12,POSFLG           POS. PAR. FLAG                08700000
         LA    OUTPTR,OUTPUT+13         POINT TO OUTPUT BUFF NAME FIELD 08720000
         CLI   NAMBYT,X'01'                                             08740000
         BH    PRCSNM                   NOT S.S. OR BLANK NAME FIELD    08760000
         MVC   0(4,OUTPTR),OMITOP       OMITTED OPERAND                 08780000
         LA    OUTPTR,3(0,OUTPTR)       ADVANCE POINTER                 08800000
GTOPCD   BAL   LINK,ENDOPR              WRITE OUT NAME FIELD            08820000
         L     INPTRS,SAVPTR            SET POINTER BACK TO OPERAND     08840000
         BAL   AUXREG,ISITFF            GET CONTINUATION IF NEEDED      08860000
         B     MISCAN                   AND GO EDIT OPERAND FIELD       08880000
*                                                                       08900000
PRCSNM   L     INPTRS,INPUT             SET POINTER TO NAME FIELD       08920000
         LR    INPTR1,INPTRS                 AND                        08940000
         ST    INPTR,INTPTR              ALLOW DICT ENTRY IF SYMBOL     08960000
         OI    NPRIME+1,X'01'           SUBLISTS DISABLE KEYWORDS V7A38 08970028
         BAL   LINKR,LEGOP0               GO EDIT NAME FIELD            08980000
         CLI   ERRCOD,0                                                 09000000
         BNE   ILNAM                    INVALID NAME FIELD              09020000
         CLI   0(INPTRS),BLANK                                          09040000
         BNE   ILNAM                    ILLEGAL TERMINATOR IN NAME FLD  09060000
         MVI   0(OPTR),BLANK            NAME FIELD TERMINATOR           09080000
         B     GTOPCD                                                   09100000
         EJECT                                                          09120000
*                                                                       09140000
* PROCESS ASSEMBLER OP STATEMENT                                        09160000
*                                                                       09180000
* TEST IF MACHINE OPERATION OR PSEUDO OPERATION                         09200000
*                                                                       09220000
VALDOP   IC    ZERORG,0(0,WORKRG)       LOAD 360 LENGTH OF OP SYMBOL    09240000
         LA    TEMPRG,2(EPTR,ZERORG)                                    09260000
*        TEMPRG NOW POINTS TO INTERNAL OP CODE+ASC FLAG IN GLOBAL DICT  09280000
         IC    ZERORG,0(0,TEMPRG)       FETCH OP-CODE FOR COMPUTD GO TO 09300000
         MVC   OUTPUT+5(2),0(TEMPRG)    INSERT OP-CODE, ASC FOR ASSMBLR 09320000
         TM    0(EPTR),X'18'            IS THE R1 MASK PRESENT .Q       09340000
         BZ    VAL1                     BIF NO                          09360000
         MVC   OUTPUT+4(1),1(TEMPRG)    YES, SO MOVE IN R1 MASK AND     09380000
         MVC   OUTPUT+6(1),2(TEMPRG)    A.S.C. FOR PSEUDOS & XTND MNEM. 09400000
VAL1     EQU   *                                                        09420000
         L     R1,SVPTR                 CHANGE CHARACTER STRING FLAG    09440000
         MVI   0(R1),SPUT                 TO PUT FLAG                   09460000
         TM    0(EPTR),MASK4                                            09480000
         BO    PSDOPR                   BRANCH, PSEUDO OPERATION        09500000
*                                                                       09520000
* PROCESS MACHINE OPERATION (ENTIRE STATEMENT)                          09540000
*                                                                       09560000
         BAL   AUXREG,SMTSQ1            CHECK STATEMENT SEQUENCING      09580000
         IC    ZERORG,0(TEMPRG)         RESTORE OP-CODE SMTSQ1 SMASHED  09600000
*./      DELETE    SEQ1=09620020,SEQ2=09660020                          09660000
         OI    OUTPUT+4,MASK1           SET MACHINE INSTRUCTION         09680000
         OI        SWTCH8,X'80'         PREVENT OPSYN                   09690000
         SRL   ZERORG,6                 DEVELOP LENGTH ATTRIBUTE IN     09700000
         LA    ZERORG,1(0,ZERORG)         CASE NAME FIELD IS A SYMBOL   09720000
         STH   ZERORG,LNGTAT                                            09740000
         OI    LNGTAT+1,1                                               09760000
         MVI   TYPATR,ITYPE             SET TYPE ATTRIBUTE              09780000
TESTOV   EQU   *                                                        09800000
         L     LINK,GETAD               BR TO GETSRC TO GET ALL         09820000
         BALR  LINK,LINK                  CONTINUATIONS                 09840000
         DC    AL2(2)                                                   09860000
MCHINS   BAL   LINK,SKPBLK              INSURE INPTR AT OPERAND FIELD   09880000
         BAL   LINK,GSCAN               NOW SCAN IT                     09900000
* IF GSCAN MADE AN OPNDL ENTRY FOR A NORMAL OR SEQ SYM, CANCEL IT       09920000
MCHIN1   TM    GSUMRY,5                 BRANCH IF OPERAND FIELD DOES    09940000
         BZ    ENDSMT                   NOT LOOK LIKE O.S. OR S.S.      09960000
         IC    ZERORG,OPNDX             .....OTHERWISE CANCEL ONE       09980000
         SH    ZERORG,H4                                                10000000
         STC   ZERORG,OPNDX                                             10020000
         B     ENDSMT                                                   10040000
         EJECT                                                          10060000
*                                                                       10080000
* PROCESS PSEUDO OPERATION                                              10100000
*                                                                       10120000
PSDOPR   OI    OUTPUT+4,MASK0           SET ASSEMBLER OPERATION IND.    10140000
         BAL   AUXREG,SMTSEQ            CHECK STATEMENT SEQUENCING      10160000
         CLI   0(TEMPRG),24             A TITLE STATEMENT .Q      V7A04 10162028
         BNE   PSDOPRA                  NO, LET GETSRC PUT STMT   V7A04 10164028
         OI    SWTCH3,MASK6             SET NO PUT CONTIN SOURCE  V7A04 10166028
PSDOPRA  DS    0H                                                 V7A04 10168028
         L     LINK,GETAD               BR TO GETSRC TO GET ALL         10180000
         BALR  LINK,LINK                  CONTINUATIONS                 10200000
         DC    AL2(2)                                                   10220000
         BAL   LINK,SKPBLK              SPACE INPTR TO OPERAND FIELD    10240000
         CLI   0(TEMPRG),6              TEST IF GBL OR LCL DECLARATION  10260000
         BL    DCLRTN                   BR YES                          10280000
         AR    ZERORG,ZERORG                                            10300000
         CLI   0(TEMPRG),8              TEST IF SET STATEMENT           10320000
         BNH   SETS                     BR YES                          10340000
         L         COMPGO,ADBASE1                                       10350000
         LH    COMPGO,0(COMPGO,ZERORG)  ELSE DEVELOP BRANCH FROM OP CD  10360000
         B     BASE(COMPGO)                                             10380000
ADBASE1  DC        A(BASE1-18)                                          10390000
         EJECT                                                          10400000
*                                                                       10420000
* DCLRTN- PROCESSES GLOBAL AND LOCAL DECLARATIONS.                      10440000
* CHECKS SYNTAX, INCLUDING DIMENSIONING. ENTERS VAR SYMS INTO DICTS.    10460000
* SUPPRESSES EDITED TEXT OUTPUT.                                        10480000
* ON ENTRY, ZERORG MUST CONTAIN INTERNAL OP CODE =                      10500000
* 00,01,02,03,04, OR 05 FOR GBLA,GBLB,GBLC,LCLA,LCLB, OR LCLC, RESP.    10520000
DCLRTN   CH    ZERORG,H2                TEST IF GBL                     10540000
         BH    DCL10                    BR IF NOT                       10560000
         TM    SWTCH5,16                TEST IF GBL  IS ALLOWABLE       10580000
         BZ    DCL15                    O.K., PRESS ON                  10600000
         TM    SWTCH5,X'01'             UNDER 'EXTEN' .Q          V7A55 10602028
         BO    DCL15                    YES, GBL OK ANYWHERE      V7A55 10604028
****     ERROR...ILLEGAL DECLARATION,GENERATE DIAGNOSTIC                10620000
DCL05    EQU   *                                                        10640000
         BAL   LINK,ABSERR                                              10660000
         DC    AL1(ERRR4)                                               10680000
         DC    AL1(ERRST)                                               10700000
DCL10    TM    SWTCH5,8                 TEST IF LCL IS ALLOWABLE        10720000
         BNO   DCL12                    BRANCH IF LEGAL           V7A55 10740028
         TM    SWTCH5,X'01'             IS 'EXTEN' ON .Q          V7A55 10742028
         BNO   DCL05                    ILLEGAL LCL IF NOT        V7A55 10744028
DCL12    DS    0H                                                 V7A55 10746028
         OI    SWTCH5,16                DISALLOW FUTURE GBL             10760000
DCL15    BAL   LINK,CKNAM1              NAME FIELD MUST BE BLANK        10780000
         IC    ZERORG,DCL60(ZERORG)     SET UP FLAG BYTE FOR G.D. ENTRY 10800000
         STC   ZERORG,DEFENT                                            10820000
         MVI   GCALL,1                  SET COMMA AS SCAN TERMINATOR    10840000
*        DIVERT EDITED TEXT INTO 'DBLWD'                                10860000
DCL30    LA    OPTR,DBLWD               (OUTPUT EDITED TEXT IS DUMPED)  10880000
         MVC   SOPNDX(1),OPNDX          REMEMBER OPNDX                  10900000
         BAL   LINK,GSCAN               SCAN TO TERMINATOR              10920000
         CLI   GSUMRY,128               RESULT MUST BE VARIABLE SYMBOL  10940000
         BE    DCL40                                                    10960000
******** GENERATE DIAGNOSTIC -ILLEGAL FIELD IN DECLARATION              10980000
DCL35    EQU   *                                                        11000000
         BAL   LINK,WRNERR                                              11020000
DCLER12  DC    AL1(ERRR12)                                              11040000
         DC    AL1(ERRST)                                               11060000
         MVC   OPNDX(1),SOPNDX          KILL ANY OPNDL NONSENSE         11080000
         B     DCL55                                                    11100000
********                                                                11120000
DCL40    IC    ZERORG,SOPNDX            GET ABS. LOC. OF OPNDL ENTRY    11140000
         LA    R2,OPNDL(ZERORG)           FOR THE VARIABLE SYMBOL       11160000
         TM    0(R2),64                 DON'T LET SYSLIST SLIP THROUGH  11180000
         BZ    DCL35                                                    11200000
         MVC   2(2,R2),PNCTAB           INITIALIZE AS UNDIMENSIONED     11220000
         TM    0(R2),8                  TEST IF DIMENSIONED             11240000
         BZ    DCL55                    NO                              11260000
*        EDITED SUBSCRIPT FORMAT MUST BE-                               11280000
*        SUBSCR LPAREN FLAG/DSDT FLAG/3-BYTE DECIMAL DIMENSION/         11300000
*        RPAREN FLAG                                                    11320000
         CLC   DBLWD+4(2),DCL65                                         11340000
         BNE   DCL35                    ILLEGAL                         11360000
         CLI   DBLWD+9,SRPAR                                            11380000
         BNE   DCL35                    ILLEGAL                         11400000
         LH    R8,DBLWD+6               FETCH DIMENSION                 11410000
         SLL   R8,8                     MAKE ROOM FOR UNIT POSITION     11420000
         IC    R8,DBLWD+8               FETCH UNITS POSITION            11430000
         LTR   R8,R8                    IS DIMENSION 0 OR MINUS         11440000
         BNP   DCL44                    YES, GO LOG ERROR               11450000
         C     R8,SETXLIM               NO, IS DIMEN MORE THAN MAX      11460000
         BNH   DCL50                    NO, CONTINUE                    11470000
         MVC   DBLWD+6(3),SETXLIM+1     YES, DEFAULT VALUE = MAX        11480000
         B     DCL45                    GO LOG ERROR                    11490000
DCL44    MVC   DBLWD+6(3),F1+1          DEFAULT DIMENSION TO 1          11495000
******** GENERATE DIAGNOSTIC -ILLEGAL DIMENSION SPECIFICATION           11500000
DCL45    EQU   *                                                        11520000
         BAL   LINK,WRNERR                                              11540000
         DC    AL1(ERRR40)                                              11560000
         DC    AL1(ERRST)                                               11580000
*./      DELETE    SEQ1=11600020,SEQ2=11600020                          11600000
********                                                                11620000
DCL50    MVC   2(2,R2),DBLWD+7          INSERT DIM. IN OPNDL ENTRY      11640000
DCL55    CLI   0(INPTR),COMMA           TEST FOR TERMINATING COMMA      11660000
*        IF END OF FIELD, SET RETURN TO 'DRIVER' AND EXIT TO 'LOOKUP'   11680000
*        TO ENTER OPERANDS IN DICTIONARY.                               11700000
         LA    TEMPRG,DRIVER                                            11720000
         BNE   LOOKP                    NOT COMMA, SO END OF FIELD      11740000
*                                                                       11760000
         LA    INPTR,1(0,INPTR)         COMMA- PROCESS NEXT OPERAND     11780000
         B     DCL30                                                    11800000
* THE SO-CALLED 'LOOKUP' ROUTINE SCANS THE OPNDL LIST AND MAKES ALL     11820000
* NECESSARY DICTIONARY ENTRIES FOR THE CORRESPONDING OPERANDS.          11840000
* (EXIT IS BR TEMPRG)                                                   11860000
LOOKP    L     LINK,DLOOKUP                                             11880000
         BR    LINK                                                     11900000
SETXLIM  DC    F'9999'                  EXTEN SETX DIMEN LIMIT    V7A17 11910028
DCL60    DC    X'202830606870'          RESPECTIVE G.D. FLAGS           11920000
DCL65    DC    AL1(SUBSLP)                                              11940000
         DC    AL1(SDSDT)                                               11960000
         EJECT                                                          11980000
*        PROCESS ACTR STATEMENT                                         12000000
ACTR1    BAL   LINK,CKNAM1              NAME FIELD MUST BE BLANK        12020000
         MVC   OUTPUT+10(4),ACT10       EDITED TEXT FOR TGD REFERENCE   12040000
         LA    OPTR,OUTPUT+14           SET UP THE OUTPUT POINTER       12060000
         MVC   MCALL(2),SB19            PROCESS JUST LIKE A SETA        12080000
         B     SB01                                                     12100000
ACT10    DC    AL1(SSETA)                                               12120000
         DC    AL2(4)                                                   12140000
         DC    AL1(0)                                                   12160000
*        PROCESS AIF, AGO, SETA, SETB, SETC STATEMENTS                  12180000
SETS     CLI   NAMBYT,128               NAME FIELD MUST BE V.S.         12200000
         BNE   ILSSNF                                                   12220000
         LH    WORKRG,SB19-12(ZERORG)   SET UP PARAMETERS               12240000
         STH   WORKRG,MCALL                                             12260000
         L     OPTR,SAVOUT              RESET OPTR                      12280000
SB01     MVI   OUTPUT,4                 SET STATEMENT TYPE              12300000
         BAL   R1,PUTPUT+4              SET A BLANK IN EDITED TEXT      12320000
         DC    AL2(BLANK)                                               12340000
         CLI   MCALL+1,SSETB            BRANCH IF SETB                  12360000
         BE    SETB1                                                    12380000
         CLI   MCALL+1,SSETA            IF SETA, PUT A.R.E. FLAG        12400000
         BNE   *+10                       IN TEXT                       12420000
         BAL   R1,PUTPUT+4                                              12440000
         DC    AL2(SARE)                                                12460000
         BAL   LINK,METSCN              METSCN DOES ALL THE WORK        12480000
         CLI   0(INPTR),BLANK           IF BLANK DOESN'T TERMINATE..... 12500000
         BE    SB05                                                     12520000
         C     INPTR,ENDCOL               THEN STATEMENT BOUNDARY MUST  12540000
         BNH   ILOPRF                                                   12560000
SB05     BCT   INPTR,SB15                                               12580000
SETB1    MVC   0(5,OPTR),SB20           IF SETB OPERAND IS OF THE FORM  12600000
         CLI   0(INPTR),1               0 OR (0), OR 1 OR (1), EDIT     12620000
         BH    SB06                      IT AS A D.S.D.T. WITH VALUE    12640000
         BCTR  INPTR,0                   0 OR 1, RESPECTIVELY           12660000
         BCTR  INPTR,0                                                  12680000
         BE    SB07                                                     12700000
         B     SB08                                                     12720000
SB06     CLC   0(3,INPTR),SB21                                          12740000
         BE    SB08                                                     12760000
         CLC   0(3,INPTR),SB22                                          12780000
         BNE   SB10                                                     12800000
SB07     MVI   4(OPTR),1                                                12820000
SB08     LA    INPTR,2(0,INPTR)                                         12840000
         LA    OPTR,5(0,OPTR)           SPACE OPTR OVER D.S.D.T. TEXT   12860000
         B     SB15                                                     12880000
AIF      EQU   *                                                        12900000
         MVI   OUTPUT,X'03'                                             12920000
         MVC   MCALL(2),PNCTAB          INDICATE AIF ENTRY              12940000
         BAL   LINK,CKNAME              NAME FIELD MUST BE S.S. OR BLNK 12960000
         LA    OPTR,OUTPUT+10           BACK UP OUTPUT POINTER          12980000
SB10     CLI   0(INPTR),LPAREN          EXPRESSION MUST BEGIN WITH      13000000
         BNE   ILOPRF                                                   13020000
         LA    INPTR,1(0,INPTR)         SPACE OVER L-PAREN              13040000
         BAL   LINK,METSCN                                              13060000
         CLI   0(INPTR),RPAREN          TERMINATOR MUST BE RIGHT        13080000
         BNE   ILOPRF                                                   13100000
         CH    R3,H2                    EXPRESSION MUST BE SIMPLE OR    13120000
         BH    ILXPRB                                                   13140000
         BE    SB15                                                     13160000
         TM    0(R1),128                IF SIMPLE, MUST NOT BE SYSLIST  13180000
         BZ    ILXPRB                                                   13200000
         OI    0(R1),32                 PUT SETB FLAG IN OPNDL ENTRY    13220000
SB15     BAL   R1,PUTPUT                GENERATE TERMINATING BLANK      13240000
         DC    AL2(BLANK)                 IN TEXT                       13260000
         CLI   MCALL+1,0                BRANCH IF AIF                   13280000
         BE    AGO2                                                     13300000
         L     TEMPRG,DLOOKUP                                           13320000
         BALR  TEMPRG,TEMPRG                                            13340000
         CLC   OUTPUT+10(1),MCALL+1     NAME FIELD AND STATEMENT TYPES  13360000
         BE    NDSMT0                   DO MATCH.                       13380000
         BAL   LINK,ABSERR              DO NOT MATCH.                   13400000
         DC    AL1(ERRR50)                                              13420000
         DC    AL1(ERRST)                                               13440000
ILXPRB   BAL   LINK,ABSERR              ILLEGAL TERM IN BOOLEAN         13460000
         DC    AL1(ERRR5)                    EXPRESSION                 13480000
         DC    AL1(ERRST)                                               13500000
AGO      DS    0H                                                       13520000
         LA    OPTR,OUTPUT+11           BACK UP THE OUTPUT POINTER      13540000
         MVI   OUTPUT,2                 SET STATEMENT TYPE              13560000
         BAL   LINK,CKNAME              NAME FIELD MUST BE S.S. OR BLNK 13580000
AGO2     MVI   GCALL,0                  USE GSCAN TO PROCESS OPERAND    13600000
         BAL   LINK,GSCAN                 FIELD SEQUENCE SYMBOL         13620000
         CLI   GSUMRY,1                 IF THAT'S WHAT WE GOT.....      13640000
         BE    *+10                                                     13660000
ILOPRF   BAL   LINK,ABSERR              SEQUENCE SYMBOL MISSING IN      13680000
         DC    AL1(ERRR3)                  OPERAND FIELD OF AIF OR AGO  13700000
         DC    AL1(ERRST)                                               13720000
         LA    OPTR,2(0,OPTR)           ADVANCE OPTR                    13740000
         B     NDSMT0                                                   13760000
SB19     DC    AL2(32768+SSETA)         (MUST BE HALF-WORD ALIGNED)     13780000
         DC    AL2(0+SSETB)                                             13800000
         DC    AL2(16384+SSETC)                                         13820000
SB20     DC    AL1(SARE)                                                13840000
         DC    AL1(SDSDT)                                               13860000
         DC    X'000000'                                                13880000
SB21     DC    AL1(LPAREN,0,RPAREN)     INTERNAL CODE FOR (0)           13900000
SB22     DC    AL1(LPAREN,1,RPAREN)     INTERNAL CODE FOR (1)           13920000
         EJECT                                                          13940000
         DS    0H                                                       13960000
ANOP     EQU   *                                                        13980000
         TM    NAMBYT,1            TEST IF NAME FIELD IS SEQ SYMB.      14000000
         BO    ANOPOK                                                   14020000
         BAL   LINK,ABSERR                                              14040000
         DC    AL1(ERRR25)                                              14060000
         DC    AL1(ERRST)                                               14080000
ANOPOK   MVI   OUTPUT,9                                                 14100000
         LA    OUTPTR,OUTPUT+3                                          14120000
         B     NDSMT0                                                   14140000
MACRO    EQU   *                                                        14160000
         BAL   LINK,CKNAM1              NAME FIELD MUST BE BLANK        14180000
         OI    SWTCH1,MASK13                                            14200000
         OI        SWTCH8,X'80'         PREVENT OPSYN                   14210000
         B     DRIVER                                                   14220000
*./      DELETE    SEQ1=14240020,SEQ2=14280020                          14280000
MEXIT    EQU   *                                                        14300000
         BAL   LINK,CKNAME              NAME FIELD MUST BE S.S. OR BLNK 14320000
         MVI   OUTPUT,X'07'                                             14340000
         LA    OUTPTR,OUTPUT+3                                          14360000
         B     NDSMT0                                                   14380000
MEND     EQU   *                                                        14400000
         BAL   LINK,CKNAME              NAME FIELD MUST BE S.S. OR BLNK 14420000
MEND1    MVI   OUTPUT,X'07'                                             14440000
         LA    OUTPTR,OUTPUT+3                                          14460000
         BAL   LINK,NDOPR0              OUTPUT RECORD                   14480000
MEND2    LH    RQ,H32767                FORCE BLOCK TO OUTPUT MEDIUM    14500000
         SR    RA,RA                   ON UT1                           14520000
         L         RR0,ADWS                                             14540000
         BALR  RR0,RR0                  BWFORCE                         14560000
*./      DELETE    SEQ1=14580020,SEQ2=14600020                          14600000
         B     END1                     CLOSE OUT MACRO DICTIONARY      14620000
ICTL     EQU   *                                                        14640000
         BAL   LINK,WRNERR                                              14660000
         DC    AL1(ERRR26)                                              14680000
         DC    AL1(ERRST)                                               14700000
         MVI   INPUTBUF,BLANK      CLEAR TO INTERNAL BLANKS.            14720000
         MVC   INPUTBUF+1(70),INPUTBUF                                  14740000
         MVC   INPUTBUF+1(3),INTEND   INSERT END OP.                    14760000
         MVI   INPUTBUF+71,X'FF'   END OF TEXT FLAG.                    14780000
         BAL   LINK,SWICTL              SET UP STANDARD ICTL PARAMETERS 14800000
         B     DRVER1                                                   14820000
INTEND   DC    X'0E170D'           END OP IN INTERNAL CODE.             14840000
         EJECT                                                          14860000
COPY     BAL   LINK,CKNAM1         NAME FIELD MUST BE BLANK.            14880000
         STM   14,15,TEMP              SAVE TWO REGS.                   14900000
         CLI   CPCUR,X'FF'             ANYTHING NESTED YET .Q           14920000
         BE    NOTSMD1                 BRANCH IF NOTHING                14940000
*                                                                       14960000
*   NOTE LOC IN SYSTEM MACRO.                                           14980000
*                                                                       15000000
         L     RA,ADCBLB               ADDRESS OF SYSLIB DCB            15020000
         USING IHADCB,RA               CHANGE EODAD ADDR IN DCB TO      15040000
         MVC   DCBEODAD+1(3),BACK7AD+1 POINT TO BACK7 FOR THIS CHECK.   15060000
         DROP  RA                                                       15080000
*                                                                       15100000
         L     B2,DCLOS1AD              LOAD BASE                       15120000
         L     L5,VCHECK                LOAD VECTOR                     15140000
         BALR  LINK,L5                  AND GO TO IT.                   15160000
BACK7    L     B2,USING1                RESTORE BASE                    15180000
         L     RA,ADCBLB               ADDRESS OF SYSLIB DCB.           15200000
         USING IHADCB,RA               RESTORE PROPER EODAD EXIT        15220000
         MVC   DCBEODAD+1(3),EOFLIBAD+1  ADDRESS TO SYSLIB DCB          15240000
         DROP  RA                                                       15260000
*                                                                       15280000
         L     14,LBDECBAD+4          2ND DECB ADDR                     15340000
         L     15,LBDECBAD            1ST DECB ADDR                     15356500
         STM   14,15,LBDECBAD         INTERCHANGE THE TWO               15360000
*                                                                       15380000
         B     NOTSMD                   OF BLOCK IN BUFFER.             15400000
*                                                                       15420000
BACK7AD  DC    A(BACK7)                                                 15440000
*                                                                       15460000
NOTSMD1  L     B2,DCLOS1AD             LOAD BASE                        15480000
         L     L5,VWAIT                AWAIT COMPLETION OF ANY READS    15500000
         BALR  RD1,L5                  BEFORE DOUBLE BUFFER COPY READ.  15520000
         L     B2,USING1               RESTORE BASE                     15540000
RD1      EQU   5                        WAIT ROUTINE LINK REGISTER      15550000
*                                                                       15560000
NOTSMD   EQU   *                                                        15580000
         LM    14,15,TEMP              RESTORE THE TWO REGS.            15600000
         ST    INPTR,SAVEIN        SAVE LOC OF BEG OF OPERAND.          15620000
         BAL   LINK,GSCAN                                               15640000
         TM    GSUMRY,X'04'        TEST IF NORM SYMBOL.                 15660000
         BZ    NOCOPY                                                   15680000
         LR    LREG,INPTR          END OF NAME.                         15700000
         L     TEMPRG,SAVEIN       BEG OF NAME.                         15720000
         SR    LREG,TEMPRG         SUB TO GET LENGTH.                   15740000
         BCTR  LREG,0              TRUE LENGTH MINUS ONE.               15760000
         N     LREG,F255           ENSURE LOW ORDER BYTE ONLY.          15780000
         CL    LREG,F7             NAME CAN BE 8 BYTES MAX.             15800000
         BH    NOCOPY                                                   15820000
         MVC   NAMBOX+1(8),NAMBOX  CLEAR TO BLANKS.                     15840000
         EX    LREG,MCNM           MOVE NAME TO ALIGNED AREA.           15860000
         TR    NAMBOX+1(8),TRSLTB  TRANSLATE BACK TO EXTERNAL.          15880000
         MVC   COPYNAME,MACNAME    RETAIN MACRO NAME WITH COPY          15890000
*                                                                       15900000
*   EXECUTE FIND FUNCTION.                                              15920000
*                                                                       15940000
         LA    RM15,NAMBOX+1            POINT TO MEMBER NAME            16040000
         L     RM1,FINDAD               ADDRESS OF FIND ROUTINE         16060000
         BALR  RM0,RM1                  GO FIND MEMBER                  16080000
         EJECT                                                          16100000
*./      DELETE    SEQ1=16120020,SEQ2=17420020                          17420000
*        RETURN FROM COPY FIND                                          17430000
*                                                                       17440000
TESTCOPY DS    0H                                                       17450000
         BNZ   NFCOP                    ERROR IF COPY NOT FOUND         17460000
         L     RA,CPCUR                 CURRENT NESTING LEVEL           17470000
         A     RA,CPLEN                 PLUS ONE LEVEL                  17480000
         C     RA,CPMAX                 COMPARE TO MAXIMUM              17490000
         BNH   TCOPYA                   BRANCH IF NOT TOO BIG     V7A54 17500028
         BAL   LINK,ABSERR              SO TO ERROR ROUTINE       V7A54 17502028
         DC    AL1(ERRR30,ERRST)        ILLEGAL STMT IN COPY      V7A54 17504028
TCOPYA   DS    0H                                                 V7A54 17506028
         ST    RA,CPCUR                 UPDATE CURRENT NESTING          17510000
         LTR   RA,RA                    1ST LEVEL OF NESTING .Q         17520000
         BNZ   TCOPYB                   BRANCH IF NOT 1ST LEVEL         17530000
         MVC   COPYSV(40),SEQLEN        SAVE GTSRC PARAMS               17540000
         MVC   INFILS(1),TYPRED+1       SAVE INPUT FILE NUMBER          17550000
         MVC   SWTCH1X(1),SWTCH1        SAVE SWTCH1 SETTING             17560000
         BAL   LINK,SWICTL              SET UP FOR STANDARD ICTL        17570000
         TM    SWTCH5,X'20'             IN A SYSTEM MACRO NOW .Q        17580000
         BZ    TCOPYC                   BRANCH IF NOT, ONLY 1ST COPY    17590000
         A     RA,CPLEN                 BUMP BY ONE MORE LEVEL          17600000
         ST    RA,CPCUR                 UPDATE LEVEL COUNTER            17610000
TCOPYB   DS    0H                                                       17620000
         S     RA,CPLEN                 RESTORE FORMER LEVEL FOR SAVE   17630000
         LA    RA,CPWORK(RA)            POINT TO SAVE WORK ENTRY        17640000
         L     L5,LBDECBAD              1ST DECB POINTER                17650000
         MVC   CPLIBNOT(16,RA),LBLIBNOT(L5)  SAVE BUFFER DATA           17660000
         NI    LBRDSW(L5),255-LBRDRS-LBRDOT  KILL READ SWITCHES         17670000
         L     L5,LBDECBAD+4            2ND DECB POINTER                17680000
         MVC   CPLIBNO2(8,RA),LBLIBNOT(L5)  SAVE 2ND FDAD               17690000
         NI    LBRDSW(L5),255-LBRDRS-LBRDOT  KILL READ SWITCHES         17700000
         MVC   CPCPNAME(8,RA),COPYNAME  SAVE MEMBER NAME                17710000
         L     RQ,LBDECBAD+4            GET SECOND DECB ADDRESS         17720000
         L     RA,LBDECBAD              GET FIRST DECB ADDRESS          17730000
         STM   RQ,RA,LBDECBAD           AND REVERSE THE TWO             17740000
TCOPYC   DS    0H                                                       17750000
         MVI   TYPRED+1,MACLIB          SET TO SYSTEM LIBRARY           17760000
         OI    SWTCH7,X'01'             SET COPY CODE SWITCH            17770000
         L     B2,DCLOS1AD              LOAD BASE REGISTER              17780000
         L     L5,VLREAD                SET UP TO DOUBLE BUFFER         17790000
         BR    L5                       GO FILL BUFFERS                 17800000
*                                                                       17820000
MCNM     MVC   NAMBOX+1(*-*),0(TEMPRG)  MOVE MEMBER NAME                17840000
*                                                                       17860000
*   ILLEGAL NAME IN OPERAND FIELD OF COPY OP.                           17880000
*                                                                       17900000
NOCOPY   EQU   *                                                        17920000
         BAL   LINK,ABS000         OUTPUT ERR REC AND GET NEXT REC.     17940000
         DC    AL1(ERRR27)                                              17960000
         DC    AL1(ERRST)                                               17980000
*                                                                       18000000
*   COPY CODE NOT FOUND.                                                18020000
*                                                                       18040000
NFCOP    DS    0H                                                       18050000
         MVC   MACNAME(8),COPYNAME      RESTORE MACRO NAME              18060000
         BAL   LINK,ABS000              OUTPUT ERR REC AND GET NEXT     18070000
         DC    AL1(ERRR28)                                              18080000
         DC    AL1(ERRST)                                               18100000
*                                                                       18120000
MACLIB   EQU   16                                                       18140000
         DC    X'32'               INTERNAL BLANK.                      18160000
         DS    0F                  ALIGN                                18180000
         ORG   *-1                                                      18200000
NAMBOX   DC    X'32'                                                    18220000
         DC    2F'0'                                                    18240000
*                                                                       18260000
*        SET STANDARD INPUT CARD FORMAT                                 18280000
SWICTL   MVI   BEGCOL+3,1          BEGIN COL                            18300000
         MVI   SRCLEN+3,70         SOURCE LENGTH MINUS ONE              18320000
         MVI   ECOL+3,71           END COL                              18340000
         MVI   CNTCL1+3,72         CONT IND COL                         18360000
         MVI   BEGCNT+3,16         CONT CARD BEGIN COL                  18380000
         MVI   CONLEN+3,55         SOURCE LENGTH OF CONT CARD           18400000
         NI    SWTCH1,X'7F'        TURN OFF SEQUENCE CHECKING           18420000
         OI    SWTCH1,X'08'        ALLOW CONT CARDS.                    18440000
         BR    LINK                RETURN                               18460000
         EJECT                                                          18480000
*        PROCESS ISEQ OPERAND FIELD                                     18500000
ISEQ     NI    SWTCH1,X'7F'        TURN OFF SEQUENCE CHECKING.          18520000
         OI    SWTCH8,X'80'        OPSYN NOW ILLEGAL                    18530000
         BAL   LINK,CKNAM1         NAME FIELD MUST BE BLANK.            18540000
         CLC   0(2,INPTR),COMMABL  TEST IF OMITTED OPERAND.             18560000
         BE    DRIVER                                                   18580000
         C     INPTR,ENDCOL                                             18600000
         BH    DRIVER                                                   18620000
         BAL   LINK,DECSCN              SCAN FIRST OPERAND              18640000
         B     ISEQER                   BRANCH IF 1ST OPND ERROR        18650000
         CLI   0(INPTR),COMMA           COMMA MUST TERMINATE            18660000
         BNE   ISEQER                                                   18680000
         LTR   RA,RA                    VALUE MUST BE AT LEAST 1        18700000
         BNH   ISEQER                                                   18720000
         ST    RA,SEQCL1                                                18740000
         BAL   LINK,DECSC1              SCAN SECOND OPERAND             18760000
         B     ISEQER                   BRANCH IF 2ND OPND ERROR        18770000
         CLI   0(INPTR),BLANK      BLANK OR END COLUMN MUST TERMINATE.  18780000
         BE    *+12                                                     18800000
         C     INPTR,ENDCOL                                             18820000
         BNH   ISEQER                                                   18840000
         CH    RA,H80                   VALUE MUST NOT BE GREATER THAN  18860000
         BH    ISEQER                                                   18880000
         C     RA,ECOL                  FIELD MUST LIE OUTSIDE OF       18900000
         BH    IS20                       STATEMENT BOUNDARIES          18920000
         C     RA,BEGCOL                                                18940000
         BNL   ISEQER                                                   18960000
IS10     S     RA,SEQCL1                COMPUTE 360 FIELD LENGTH        18980000
         BM    ISEQER                                                   19000000
         ST    RA,SEQLEN                                                19020000
         OI    SWTCH1,128               ALLOW SEQUENCE CHECKING         19040000
         XC    SEQVAL(40),SEQVAL        CLEAR SEQUENCE CHECK FIELD      19060000
         B     DRIVER                                                   19080000
IS20     CLC   SEQCL1(4),ECOL           .....THE OTHER CASE FOR         19100000
         BH    IS10                       STATEMENT BOUNDARY CHECKING   19120000
ISEQER   BAL   LINK,ABSERR              ILLEGAL ISEQ OPERAND            19140000
         DC    AL1(ERRR6)                                               19160000
         DC    AL1(ERRST)                                               19180000
*                                                                       19190000
*        SUBROUTINE TO SCAN AND CONVERT DECIMAL OPERAND FOR ICTL/ISEQ   19200000
*                                                                       19210000
DECSC1   DS    0H                                                       19220000
         LA    INPTR,1(,INPTR)          SPACE POINTER OVER COMMA        19230000
DECSCN   DS    0H                                                       19240000
         LR    RB,INPTR                 REMEMBER STARTING POINTER       19250000
         SR    RA,RA                    CLEAR TARGET REGISTER           19260000
         SR    RQ,RQ                    CLEAR WORK REGISTER             19270000
DEC1     DS    0H                                                       19280000
         CLI   0(INPTR),X'09'           IS THERE A DIGIT AT INPTR .Q    19290000
         BH    DEC2                     BRANCH IF NOT                   19300000
         IC    RQ,0(,INPTR)             INSERT CURRENT DIGIT            19320000
         MH    RA,H10                   MULTIPLY PARTIAL SUM BY TEN     19340000
         AR    RA,RQ                    AND ADD IN CURRENT DIGIT        19360000
         LA    INPTR,1(,INPTR)          POINT ONE MORE DOWN STRING      19380000
         B     DEC1                     AND LOOP BACK                   19400000
DEC2     DS    0H                                                       19420000
         LR    RQ,INPTR                 TRANSFER CURRENT POINTER        19430000
         SR    RQ,RB                    LESS STARTING POINTER           19440000
         C     RQ,F8                    TEST FOR LENGTH .LE. EIGHT      19460000
         BNH   4(,LINK)                 EXIT IF HOKAY                   19480000
         BR    LINK                     *** ERROR ***                   19500000
COMMABL  DC    X'2B32'             'COMMA-BLANK' IN INTERNAL CODE.      19520000
         EJECT                                                          19540000
REPRO    DS    0H                                                       19560000
         BAL   LINK,CKNAME              NAME FIELD MUST BE S.S. OR BLAN 19580000
         XC    SVPTR(4),SVPTR           PROCESS COMMENTS FIELD TO       19600000
         BAL   R2,EDTCMT                  EDITED TEXT                   19620000
         L     LINK,GETAD               GET NEXT CARD                   19640000
         BALR  LINK,LINK                IMAGE                           19660000
         DC    AL2(8)                                                   19680000
         L     INPTR,ENDCOL             BUILD THE FIFTH EDITED TEXT     19700000
         MVC   2(80,OPTR),1(INPTR)        FIELD ABOUT IT                19720000
         MVI   0(OPTR),SPUT                                             19740000
         MVI   1(OPTR),80                                               19760000
         MVI   82(OPTR),ENDFLD                                          19780000
         LA    OPTR,83(0,OPTR)          THUSLY DO WE EDIT 'REPRO' IN    19800000
         B     NDSMT0                     THE MIGHTY MACRO GENERATOR    19820000
         SPACE 3                                                        19840000
TITLE    DS    0H                                                       19860000
         OI    SWTCH8,X'80'             OPSYN NOW ILLEGAL               19870000
         OI    SWTCH3,MASK5             TELL GSCAN OPND IS TITLE'S      19875000
         TM    NAMBYT,4                                                 19880000
         BZ    TESTOV                   GET CONTINUATION CARDS, IF ANY  19900000
         MVI   OPNDL,0                                                  19920000
         B     TESTOV                   GET CONTINUATION CARDS, IF ANY  19940000
         SPACE 3                                                        19960000
WXTRN    EQU   *                        FOR WEAK EXTERNAL REFERENCES    19962000
         TM    SWTCH5,X'41'             TEST OPEN CODE OR EXTEN PARM    19964000
         BZ    PSODSO                   BRANCH IF NO                    19966000
         BAL   LINK,CKNAME              NAME FIELD MUST BE S.S. OR BLAN 19968000
         STM   OPTR,INPTR,TEMP          SAVE INPUT AND OUTPUT POINTERS  19970000
         MVI   TYPATR,WETYPE            SET WEAK EXTERNAL SYMBOL TYPE   19972000
         B     EXT                      CONTINUE IN EXTRN ROUTINE       19974000
EXTRN    EQU   *                                                        19980000
         TM    SWTCH5,X'41'            TEST OPEN CODE OR EXTEN PARM     20000000
         BZ    PSODSO                                                   20020000
         BAL   LINK,CKNAME              NAME FIELD MUST BE S.S. OR BLAN 20040000
         STM   OPTR,INPTR,TEMP          SAVE INPUT AND OUTPUT POINTERS  20060000
         MVI   TYPATR,TTYPE             SET EXTERNAL SYMBOL TYPE        20080000
EXT      EQU   *                        ENTRY FROM WXTRN                20090000
         MVI   GCALL,1                  SET COMMA AS SCAN TERMINATOR    20100000
         BCTR  INPTR,0                                                  20120000
EXT05    LA    INPTR,1(0,INPTR)         ADVANCE INPUT POINTER           20140000
         L     OPTR,TEMP                (SCAN OUTPUT IS DUMPED)         20160000
         IC    ZERORG,OPNDX             REMEMBER OPNDX                  20180000
         STC   ZERORG,SOPNDX            IN SOPNDX.                      20200000
         BAL   LINK,GSCAN               SCAN ONE OPERAND                20220000
         CLI   GSUMRY,4                 IGNORE IF NOT AN O.S.           20240000
         BE    EXT10                                                    20260000
         STC   ZERORG,OPNDX                                             20280000
         TM    GSUMRY,128               IF OPERAND CONTAINS NO V.S.,    20300000
         BZ    EXT15                      TERMINATE OPERAND SCAN.       20320000
EXT10    LA    WORKRG,OPNDL(ZERORG)     INDICATE POINT OF DEFINITION    20340000
         OI    0(WORKRG),8                                              20360000
         CLI   0(INPTR),COMMA           IF COMMA TERMINATED.....        20380000
         BE    EXT05                      PROCESS NEXT OPERAND          20400000
EXT15    MVC   SOPNDX(1),OPNDX          SAVE OPNDX IN CASE OF ERROR     20420000
         LM    OPTR,INPTR,TEMP          OTHERWISE RETURN TO SCAN ENTIRE 20440000
         MVI   GCALL,0                    OPERAND FIELD IN THE USUAL    20460000
         B     MCHINS                   MANNER                          20480000
         SPACE 3                                                        20500000
START    DS    0H                                                       20520000
         MVI   OUTPUT,1                 SET STATEMENT TYPE              20540000
*DXD -NAME AND OPERAND REQUIRED.                                        20560000
DXD      EQU   *                                                        20580000
         MVI   TYPATR,JTYPE             SET TYPE ATTRIBUTE              20600000
         B     MCHINS                                                   20620000
         SPACE 3                                                        20640000
COM      EQU       *                                                    20650000
CSECT    EQU   *                                                        20660000
DSECT    EQU   *                                                        20680000
         MVI   TYPATR,JTYPE             SET TYPE ATTRIBUTE              20700000
         MVI   OUTPUT,1                 AND STATEMENT TYPE              20720000
         MVC   SVPTR(4),PNCTAB                                          20740000
         B     ENDSMT                                                   20760000
         SPACE 3                                                        20780000
*                                                                       20800000
* CXD - NAME OPTIONAL AND NO OPERAND ALLOWED.                           20820000
CXD      MVI   TYPATR,ATYPE                                             20840000
         MVI   LNGTAT+1,3               DEFINE L' FOR CXD.              20860000
         B     LTORG                                                    20880000
         SPACE 3                                                        20900000
END      DS    0H                                                       20920000
         TIMEOUT   'END CARD PROCESSED',DCB=NO                          20940000
         BAL   LINK,CKNAME         NAME FIELD MUST BE S.S. OR BLANK.    20960000
         BAL   LINK,GSCAN               SCAN OPERAND FIELD              20980000
         OI    SWTCH1,MASK7                                             21000000
         BAL   LINK,MCHIN1                                              21020000
         TM    SWTCH5,X'41'             EXTEN AND OPEN CODE .Q    V7A28 21022028
         BNO   END0                     BRANCH IF NOT             V7A28 21023028
         TM    SWTCH7,X'01'             IN 'COPY CODE' .Q         V7A28 21024028
         BNO   END0                     BRANCH IF NOT             V7A28 21025028
         OI    SWTCH8,MASK2             SKIP BACK TO SYSIN LEVEL  V7A28 21026028
         B     DRIVER                   AND CONTINUE              V7A28 21027028
END0     DS    0H                                                 V7A28 21028028
         L     LINK,DCLSE                                               21040000
         NI    SWTCH7,X'FE'        IN CASE WE WERE IN COPY CODE         21050000
         OI    POMACRO,4                MAKE MACRO BAD IN COPY          21052000
         OI    POMEND,4                 MAKE MEND BAD IN COPY           21054000
         TM    SWTCH7,X'02'        CHECK IF GENERATED END.              21060000
         BCR   8,LINK              NO, GO CLOSE OUT MAINLINE DICT.      21080000
END2     TM    SWTCH5,X'80'             PROGRAMMER MACRO STATE          21090000
         BNO   END22                    NO, CONTINUE              V7A54 21095028
         L     AUXREG,ASEQBEG           BEG SEQ BASE REG          V7A54 21096028
         B     SEQ35-SEQBEG(,AUXREG)    INIT OPEN CODE            V7A54 21097028
END22    BAL       LINK,WRNERR                                          21100000
         DC    AL1(ERRR29)                                              21120000
         DC    AL1(ERRST)                                               21140000
         NI    SWTCH7,X'FD'        RESET SWITCH.                        21160000
END1     L     LINK,DCLSE                                               21180000
         BR    LINK                                                     21200000
         EJECT                                                          21220000
*                                                                       21240000
DC       EQU   *                                                        21260000
         MVI   ACALL,0                  INDICATE DC                     21280000
         B     DS1                                                      21300000
DS       EQU   *                                                        21320000
         MVI   ACALL,1                  INDICATE DS                     21340000
DS1      ST    INPTR,TEMP               SAVE LOC. OF OPERAND START      21360000
         BAL   LINK,GSCAN               SCAN ENTIRE OPERAND FIELD       21380000
         TM    SWTCH5,X'41'             NO ATTRIBUTES IF NOT OPEN       21400000
         BZ    MCHIN1                        CODE OR EXTEN PARM         21420000
         TM    NAMBYT,4                 SKIP ATTRIBUTE SCAN IF NAME     21440000
         BZ    MCHIN1                     FIELD IS NOT O.S.             21460000
         ST    INPTR,TEMP+4             SAVE LOC. OF OPERAND TERMINATOR 21480000
         TM    GSUMRY,128               NO ATRRIBUTES AVAILABLE IF ANY  21500000
         BO    MCHIN1                     B.S. IN OPERAND               21520000
         L     INPTR,TEMP               OTHERWISE, UNLEASH THE          21540000
         L     LINKR,LASCAN               ATTRIBUTE SCANNER             21560000
         BALR  LINKR,LINKR                                              21580000
         B     DS2                      SHUCKS                          21600000
         MVC   TYPATR(5),ATYP           OH BOY -WE GOT SOMETHING        21620000
DS2      L     INPTR,TEMP+4             RESTORE INPTR AND CONTINUE      21640000
         B     MCHIN1                     NORMAL STATEMENT PROCESSING   21660000
OPSYN    L     AUXREG,OPSLOC            SET TEMPORARY BASE              21664000
         BALR  LINK,AUXREG              GO PROCESS OPSYN                21668000
         OI    SWTCH6,4                 SUPPRESS LOOKUPS                21672000
         B     ENDSMT                   CLEAN UP GOOD OPSYN             21676000
*./      DELETE    SEQ1=21680020,SEQ2=21960020                    V7A54 21680028
OPSLOC   DC    A(OPSSIN)                                                21970000
CCW      EQU   *                                                        21980000
         MVC   TYPATR(3),CCW1                                           22000000
         B     MCHINS                                                   22020000
CCW1     DC    AL1(WTYPE)                                               22040000
         DC    X'0007'                                                  22060000
         DC    C'0'                                                     22080000
         DS    0H                                                       22100000
PUNCH    EQU   *                                                        22105000
MNOTA    EQU   *                                                        22110000
         OI    SWTCH3,MASK5             GSCAN OPND IS OF MNOTE/PUNCH    22115000
DROP     EQU   *                                                        22120000
USING    EQU   *                                                        22140000
PRINT    EQU   *                                                        22160000
SPACE    EQU   *                                                        22180000
POP      EQU   *                                                        22200000
PUSH     EQU   *                                                        22210000
ENTRY    EQU   *                                                        22220000
PSODSO   EQU   *                                                        22230000
         OI    SWTCH8,X'80'             OPSYN NOW ILLEGAL               22240000
         BAL   LINK,CKNAME              NAME FIELD S.S. OR BLANK        22250000
         B     MCHINS                                                   22260000
CNOP     EQU   *                                                        22270000
ORG      EQU   *                                                        22280000
         TM    PARBYT1,EXTEN            IS EXTEN ON .Q                  22290000
         BZ    PSODSO                   BRANCH IF NOT                   22300000
         OI    SWTCH8,X'80'             OPSYN NOW ILLEGAL               22310000
         B     MCHINS                   GO CHECK OPERAND                22320000
EJECT    EQU   *                                                        22340000
         OI    SWTCH8,X'80'             OPSYN NOW ILLEGAL               22350000
         BAL   LINK,CKNAME              NAME FIELD MUST BE S.S. OR BLNK 22360000
LTORG    EQU   *                                                        22380000
         XC    SVPTR(4),SVPTR           FOOL 'EDTCMT' ROUTINE           22400000
         B     ENDSMT                                                   22420000
*CKNAME                                                                 22440000
*        SUBROUTINE LOOKS IF NAME FIELD IS SEQUENCE SYMBOL OR BLANK     22460000
*        IF NOT, THE MESS IS WIPED UP AND A DIAGNOSTIC ISSUED           22480000
*        BAL   LINK,CKNAME                                              22500000
*        (RETURN)                                                       22520000
CKNAME   TM    NAMBYT,254               RETURN IMMEDIATELY IF S.S. OR   22540000
         BCR   8,LINK                     BLANK                         22560000
CKNAM1   TM    NAMBYT,255               RETURN IMMEDIATELY IF BLANK     22580000
         BCR   8,LINK                                                   22600000
*********GENERATE DIAGNOSTIC -ILLEGAL NAME FIELD (ERASED)               22620000
CKNAM3   DS    0H                                                       22640000
         ST    LINK,SVLNKR                                              22660000
         BAL   LINK,WRNERR              INDICATE NAME FIELD             22680000
         DC    AL1(ERRR7)                WAS ERASED                     22700000
         DC    AL1(WRNST)                                               22720000
         L     LINK,SVLNKR                                              22740000
         ST    TEMPRG,SVLNKR                                            22760000
         L     TEMPRG,SAVOUT            ERASE NAME FIELD IN             22780000
         MVC   OUTPUT+10(3),OMTFLD        EDITED TEXT                   22800000
         MVC   OUTPUT+13(16),1(TEMPRG)                                  22820000
         MVI   NAMBYT,0                                                 22840000
         CLI   OUTPUT,X'02'             IS THIS AN AGO STMT .Q          22845000
         BE    CKNAM4                   BRANCH IF YES, DON'T DECREMENT  22850000
         LA    ETSTRT,OUTPUT+12         PERFORM CALC. TO                22860000
         SR    TEMPRG,ETSTRT            BACK UP POINTER                 22880000
         SR    OUTPTR,TEMPRG              ACCORDINGLY                   22900000
CKNAM4   DS    0H                       BRANCH HERE FOR AGO WITH ERROR  22910000
         L     TEMPRG,SVLNKR                                            22920000
         MVC   IOPNDX(1),SOPNDX                                         22940000
         BR    LINK                                                     22960000
         EJECT                                                          22980000
*./      DELETE    SEQ1=23000020,SEQ2=23740020                          23740000
*ROUTINES 'WRNERR' AND 'ABSERR'                                         23760000
*FUNCTION- PUTS OUT A 7-BYTE ERROR RECORD.                              23780000
*   WRNERR RETURNS TO CALLER.                                           23800000
*   ABSERR TERMINATES CURRENT STATEMENT, EXITS TO 'DRIVER' FOR NEXT.    23820000
*ENTRY POINTS-                                                          23840000
*        BAL   LINK,X         X IS EITHER WRNERR OR ABSERR              23860000
*        DC    AL1(ERRNO)          ERRNO EQU ERROR NUMBER               23880000
*        DC    X'TT'               TT = RECORD TYPE ID                  23900000
*                                       AL1(WRNST) IF WARNING MESSAGE   23920000
*                                       AL1(ERRST) IF DIAGNOSTIC        23940000
*   ALSO SEE ENTRY POINTS AT 'ERROR BRANCHES' IN CODE BELOW.            23960000
*OUTPUT- ERROR RECORD WITH FORMAT TLLA0N0-                              23980000
*        T = RECORD TYPE ID                                             24000000
*        LL = RECORD LENGTH (INSERTED BY ENDOPR)                        24020000
*        A = FLAGA = X'10'                                              24040000
*        N = ERROR NUMBER                                               24060000
*EXTERNAL ROUTINES-                                                     24080000
*   ENDOPR- OUTPUT ERROR RECORD                                         24100000
*   LOOKUP- ENTER PRECEDING VAR SYMS INTO DICT.                         24120000
*   GETSRC- BYPASS CONTINUATION CARDS.                                  24140000
*EXITS-                                                                 24160000
*   FROM WRNERR-                                                        24180000
*        B     2(0,LINK)      RETURN TO CALLER                          24200000
*   FROM ABSERR-                                                        24220000
*        B     NDPSCN         FOR MACRO INSTRUCTION (EXITS TO DRIVER)   24240000
*        B     NDSMT0         FOR EXTRN STATEMENT   (DITTO)             24260000
*        B     DRIVER         OTHERWISE                                 24280000
*                                                                       24300000
*./      DELETE    SEQ1=24320020,SEQ2=24320020                          24320000
WRNERR   ST    OPTR,ERRSAV              SAVE CRITICAL REG AND           24340000
         STM   LINK,R8,ERRSAV+4           OUTPUT AREA                   24360000
         MVC   TMPOUT(16),OUTPUT        SAVE MSG OVERLAY AREA           24380000
         MVC   ERRBUF+5(1),0(LINK)      INSERT ERROR NUMBER             24400000
         MVC   ERRBUF(1),1(LINK)        INSERT TYPE ID                  24420000
*./      DELETE    SEQ1=24440020,SEQ2=24460020                          24460000
         BAL   LINK,ERROPR              OUTPUT ERROR RECORD             24480000
         L     OPTR,ERRSAV              RESTORE VALUES                  24500000
         LM    LINK,R8,ERRSAV+4                                         24520000
         MVC   OUTPUT(16),TMPOUT        RESTORE OUTPUT AREA             24540000
         B     2(,LINK)                 AND RETURN                      24560000
*                                                                       24580000
ABS000   DS    0H                                                       24582000
         CLI   CPCUR,X'FF'              ARE WE IN A NEST .Q             24584000
         BE    ABSERR                   BRANCH IF NOT                   24586000
         L     RB,LBDECBAD              GET 1ST SYSLIB DECB             24588000
         L     RA,LBDECBAD+4            GET 2ND SYSLIB DECB             24590000
         STM   RA,RB,LBDECBAD           SWAP BUFFERS BACK               24592000
*                                                                       24594000
ABSERR   MVC   ERRBUF+5(1),0(LINK)      INSERT ERROR NUMBER             24600000
         MVC   ERRBUF(1),1(LINK)        INSERT TYPE ID                  24620000
*./      DELETE    SEQ1=24640020,SEQ2=24660020                          24660000
         TM        SWTCH1,MASK3        TEST IF PROTO                    24680000
         BZ        ABS003              BR IF NOT                        24700000
         OI        SWTCH5,X'04'        INDICATE SKIP TO MEND            24720000
         NI    SWTCH1,NMASK3            RESET PROTOTYPE EXPECTED SWITCH 24740000
ABS003   L     B2,USING1                RESTORE B2 AS 2ND BASE REG      24760000
         NI    SWTCH7,X'7F'             RESET PROC. SUBLIST SWITCH      24780000
*./      DELETE    SEQ1=24800020,SEQ2=24800020                          24800000
         BAL   LINK,ERROPR              OUTPUT ERROR RECORD             24820000
*        CLEAN UP                                                       24840000
         TM    SWTCH4,2                 M-I BEING PROCESSED             24860000
         BO    NDPSCN                   FINISHING TOUCH ON M-I          24880000
         MVC   OPNDX(1),SOPNDX          BACK UP OPNDX                   24900000
         CLC   OUTPUT+4(2),EXTOP        WAS OP CODE 'EXTRN' .Q          24920000
         BE    ABS002                   BIF YES                         24940000
         CLI   GCALL,1                  WAS THIS GBLX OR LCLX .Q        24960000
         BNE   ABS001                   BIF NO                          24980000
         CLI   OPNDX,0                  ANYTHING IN 'OPNDL' .Q          25000000
         BE    ABS001                   BIF NO                          25020000
         LA    TEMPRG,ABS001            YES, SO ENTER VAR SYMS IN DICT  25040000
         B     LOOKP                    UP TO POINT OF ERROR.           25060000
EXTOP    DC    X'861A'                  R1 MASK AND OP-CODE FOR EXTRN   25080000
ABS002   LA    OPTR,OUTPUT+10           WRITE OUT STMT UP TO POINT OF   25100000
         B     NDSMT0                     ERROR                         25120000
ABS001   L     LINK,GETAD               BYPASS                          25140000
         BALR  LINK,LINK                ANY CONTINUATION                25160000
         DC    AL2(6)                   CARDS.                          25180000
         B     DRIVER                   GET NEXT STATEMENT              25200000
ERRBUF   DC    X'0D000010010000'        ERROR RECORD MASK               25220000
ERROR78  DC    X'0D000010014E00'        ERROR 78 RECORD                 25230000
*./      DELETE    SEQ1=25240020,SEQ2=25260020                          25260000
*                                                                       25280000
*          ERROR BRANCHES                                               25300000
*                                                                       25320000
ILTERM   BAL   LINK,ABSERR              ILLEGAL TERMINATOR              25340000
         DC    AL1(ERRR1)                                               25360000
         DC    AL1(ERRST)                                               25380000
*./      DELETE    SEQ1=25400020,SEQ2=25440020                          25440000
ILNORK   BAL   LINK,ABSERR              ILLEGAL USAGE OF N' OR K'       25460000
         DC    AL1(ERRR14)                                              25480000
         DC    AL1(ERRST)                                               25500000
ILSYSL   BAL   LINK,ABSERR              INVALID USAGE OF SYSLIST        25520000
         DC    AL1(ERRR13)                                              25540000
         DC    AL1(ERRST)                                               25560000
NOBAL    BAL   LINK,ABSERR              UNBALANCED PARENTHESES          25580000
         DC    AL1(ERRR21)                                              25600000
         DC    AL1(ERRST)                                               25620000
ILOP     TM    SWTCH1,X'10'             IS PROTO EXPECTED SW ON         25640000
         BO    BDPROT                   YES, GO LOG BAD PROTO ERR       25650000
         BAL   LINK,ABSERR              ILLEGAL OP-CODE                 25660000
         DC    AL1(ERRR39)                                              25680000
         DC    AL1(ERRST)                                               25700000
INVSUB   BAL   LINK,ABSERR              INVALID SUBSCRIPT               25720000
         DC    AL1(ERRR41)                                              25740000
         DC    AL1(ERRST)                                               25760000
ILSDTF   BAL   LINK,ABSERR              BAD SELF DEFINING TERM          25780000
         DC    AL1(ERRR42)                                              25800000
         DC    AL1(ERRST)                                               25820000
ILVSF    BAL   LINK,ABSERR              INVALID FORMAT FOR V.S.         25840000
         DC    AL1(ERRR43)                                              25860000
         DC    AL1(ERRST)                                               25880000
ILSSNF   BAL   LINK,ABSERR              SET NAME FIELD NOT A V.S.       25900000
         DC    AL1(ERRR44)                                              25920000
         DC    AL1(ERRST)                                               25940000
STCPEX   BAL   LINK,ABSERR              STATEMENT COMPLEXITY EXCEEDED   25960000
         DC    AL1(ERRR45)                                              25980000
         DC    AL1(ERRST)                                               26000000
ILNAM    BAL   LINK,ABSERR              INVALID NAME FIELD              26020000
         DC    AL1(ERRR2)                                               26040000
         DC    AL1(ERRST)                                               26060000
ILPROT   BAL   LINK,ABSERR              BAD PROTOTYPE FORMAT            26080000
         DC    AL1(ERRR46)                                              26100000
         DC    AL1(ERRST)                                               26120000
         EJECT                                                          26140000
*                                                                       26160000
* PROCESS NON-NORMAL SYMBOL IN OPERATION FIELD                          26180000
*                                                                       26200000
NONNOR   TM    SWTCH1,MASK3             TEST IF PROTO EXPECTED          26220000
         BO    BDPROT                   SHOULD HAVE BEEN PROTOTYPE      26240000
         TM    OPBYTE,128               ELSE ONLY VAR SYM ALLOWED       26260000
         BZ    ILOP                                                     26280000
         BAL   AUXREG,SMTSQ1            FOR VALID STATEMENT HERE        26300000
         B     TESTOV                   PROCESS OPERAND AND COMMENTS    26320000
*                                                                       26340000
*                                                                       26360000
* CLOSED ROUTINE TO SKIP BLANKS                                         26380000
*                                                                       26400000
SKPBLK   DS        0H                                                   26420000
         LA        1,FINBLANK          POINT AT TRT TABLE FOR BLANKS    26430000
         LR        0,2                 SAVE REGISTER TWO                26440000
         TRT       0(256,INPTR),0(1)   STOP ON FIRST NON-BLANK          26450000
         LR        2,0                 RESTORE REGISTER TWO             26460000
         LR        INPTR,1             SET RESULTING POINTER            26470000
         BR        LINK                AND RETURN                       26480000
         EJECT                                                          26481000
*                                                                       26482000
*        ERROR INTERFACE TO ENDOPR                                      26483000
*                                                                       26484000
*        OUTPUT WARNING MESSAGE IF THIS IS FIRST DIAGNOSTIC WHILE       26485000
*          EDITING MACROS                                               26486000
*                                                                       26487000
ERROPR   OI        SWTCH6,4            SUPPRESS LOOKUPS IN ENDOPR       26488000
         MVC       OUTPUT(7),ERRBUF    MOVE THE ERROR RECORD            26489000
         LA        OPTR,OUTPUT+6       POINT AT RECORD END FOR ENDOPR   26490000
         TM        SWTCH8,X'40'        1ST ERROR AFTER END CARD .Q      26491000
         BZ        ENDOPR              NO, NORMAL                       26492000
         MVC       OUTPUT(7),ERROR78   PLACE WARNING ERROR RECORD       26493000
         MVI       NDERRBC1+1,X'F0'    FORCE ONTO UT3                   26494000
         B         ENDOPR              GO AND OUTPUT THE ERRORS         26495000
         EJECT                                                          26500000
*ROUTINE 'ENDOPR'                                                       26520000
*FUNCTION- WRITES OUT EDITED RECORDS FROM OUTPUT BUFFER WHEN END OF     26540000
*   OPERAND OR STATEMENT IS ENCOUNTERED.                                26560000
*   WRITES ON UT3 IF IN OPEN CODE, OR IF RECORD IS A WARNING MESSAGE    26580000
*   DURING A MACRO DEFN.                                                26600000
*   WRITES MACRO DEFNS ON UT1.                                          26620000
*   WRITES ERROR MESSAGES ON BOTH UT1 AND UT3 DURING MACRO DEFNS.       26640000
*   GETS NOTE/POINT DATA BEFORE EACH WRITE ON UT1.                      26660000
*   MAKES ALL REMAINING DICTIONARY ENTRIES FROM OPNDL LIST, UNLESS      26680000
*   SUPPRESSED.                                                         26700000
*   ('WRITE' MEANS MOVE TO I/O OUTPUT BUFFER)                           26720000
*ENTRY POINTS-                                                          26740000
*        BAL   LINK,NDOPR0    INSERT END-OF-STATEMENT FLAG IN OUTPUT    26760000
*                             BUFFER, GO TO ENDOPR.                     26780000
*        BAL   LINK,ENDOPR    IF OPERAND IS IN A SUBLIST, RETURN TO     26800000
*                             CALLER IMMEDIATELY, ELSE GO TO NDSMT3.    26820000
*        BAL   LINK,NDOPR1    (EQUATED TO ENDOPR)                       26840000
*        B     ENDSMT         EDIT COMMENTS TO OUTPUT BUFFER, GO TO     26860000
*                             NDSMT0.                                   26880000
*        B     NDSMT0         INSERT END-OF-STMT FLAG, GO TO NDSMT3.    26900000
*        B     NDSMT3         PERFORM FUNCTIONS DESCRIBED ABOVE.        26920000
*INPUT- EDITED RECORDS IN OUTPUT BUFFER.                                26940000
*   SWITCH 'SWTCH6' BIT 5 = 0, PERMITS DICT ENTRIES FROM OPNDL LIST,    26960000
*                           1, SUPPRESSES SAME.                         26980000
*EXTERNAL ROUTINES-                                                     27000000
*   EDTCMT- EDITS COMMENTS TO OUTPUT BUFFER.                            27020000
*   BWFORC- FORCE ROOM IN I/O OUTPUT BUFFER.                            27040000
*   BWNOTE- GET NOTE/POINT DATA.                                        27060000
*   LOOKUP- MAKE DICTIONARY ENTRIES FROM OPNDL LIST.                    27080000
*   BWRITE- MOVE RECORDS TO I/O OUTPUT BUFFER.                          27100000
*EXITS-                                                                 27120000
*   IF ENTRY IS NDOPR0, ENDOPR, OR NDOPR1-                              27140000
*        BR    LINK           RETURN TO CALLER.                         27160000
*   OTHERWISE-                                                          27180000
*        B     DRIVER         EXIT TO 'DRIVER' FOR NEXT STATEMENT.      27200000
*                                                                       27220000
NDOPR0   MVI   0(OUTPTR),X'FF'          SET END OF STATEMENT FLAG       27240000
NDOPR1   EQU   *                                                        27260000
ENDOPR   EQU   *                                                        27280000
         ST    LINK,SAVEM               SAVE FOR RETURN                 27300000
         TM    SWTCH7,128                                               27320000
         BO    NOPUT                    PROCESSING SUBLIST              27340000
         OI    SWTCH1,MASK7             INDICATE RETURN TO CALLER       27360000
         B     NDSMT3                                                   27380000
*        EXIT- NO OUTPUT                                                27400000
NOPUT    L     OPTR,INTOPT                                              27420000
         MVC   OPNDX(1),SOPNDX          RESTORE OPNDX                   27440000
         BR    LINK                     QUICK RETURN                    27460000
*                                                                       27480000
ENDSMT   ST    LINK,SAVEM                                               27500000
         BAL   R2,EDTCMT                EDIT COMMENTS                   27520000
*                                                                       27540000
NDSMT0   MVI   0(OUTPTR),X'FF'          SET END OF STATEMENT FLAG       27560000
NDSMT3   S     OUTPTR,OBUFS             COMPUTE RECORD LENGTH TO BE     27580000
         LA    RQ,1(0,OUTPTR)           INSERTED IN FRONT OF RECORD     27600000
         STH   RQ,RLIHLF                  AND CALL TO BWFORCE           27620000
NDERR0   LA    RA,8                     WRITE ON UT3 IF OUTSIDE A MACRO 27640000
         TM    SWTCH1,64                TEST IF IN MACRO DEFN           27660000
NDERRBC1 BC        *-*+8,NDSMT6        BR NO USUALLY  (BZ OR BR SW)     27680000
         CLI   OUTPUT,ERRST             IS THIS AN ERROR RECORD .Q      27700000
         BNE   NDSMT7                   BIF NO                          27720000
         CLI   OUTPUT+3,X'30'           IS IT A COMMENT .Q              27725000
         BE    NDSMT7                   BIF YES                         27735000
         CLI   OUTPUT,X'08'             IS A SOURCE RECORD PRESENT .Q   27740000
         BE    NDSMT6                   BIF YES -ASSUME A WARNING MSGE. 27760000
NDSMT7   DS    0H                                                       27780000
         SR    RA,RA                    OTHERWISE ON UT1                27782000
         B     NDSMT8                   GO DO IT                        27784000
NDSMT6   DS    0H                                                       27786000
         TM    SWTCH1,X'40'             IN A MACRO .Q                   27788000
         BZ    NDSMT8                   BRANCH IF NOT                   27790000
         TM    SWTCH5,X'20'             IN A SYSTEM MACRO TOO .Q        27792000
         BZ    NDSMT8                   BRANCH IF NOT                   27794000
         TM    SWTCH8,X'40'             IS THIS ERROR 78 .Q             27796000
         BO    NDSMT8                   BRANCH IF YES                   27798000
         TM    PARBYT1,FLIST            FULLLIST OPTION SPECIFIED .Q    27800000
         BO    NDSMT8                   NO EXTRA ERROR RECORDS IF SO    27802000
         CLC   DUMCMNT+L'DUMCMNT-8(8),MACNAME  SAME MACRO AS LAST .Q    27804000
         BE    NDSMT8                   YES, DON'T BOTHER WITH MESSAGE  27806000
         MVC   DUMCMNT+L'DUMCMNT-8(8),MACNAME  SET NEW MACRO NAME       27808000
         LA    RQ,L'DUMCMNT             ERROR COMMENT LENGTH            27810000
         L     RR0,ADWS                 GET BWFORCE ADDRESS             27812000
         BALR  RR0,RR0                  BWFORCE                         27814000
         LA    RQ,DUMCMNT               POINT TO COMMENT                27816000
         L     RR0,ADWS2                GET BWRITE ADDRESS              27818000
         BALR  RR0,RR0                  BWRITE                          27820000
         LH    RQ,RLIHLF                RESTORE RECORD LENGTH           27822000
NDSMT8   DS    0H                                                       27830000
         ST    RA,TEMP                  SAVE FILE NO.                   27840000
         TM    SWTCH1,X'40'             IN A MACRO .Q                   27841000
         BZ    NDSMT9                   BRANCH IF NOT                   27842000
         CLI   OUTPUT,ERRST             IS THIS AN ERROR RECORD .Q      27843000
         BNE   NDSMT9                   THEN DON'T OUTPUT SOURCE STMT   27844000
         TM    SWTCH8,X'40'             IS THIS ERROR 78 .Q             27845000
         BO    NDSMT9                   BRANCH IF YES                   27846000
         TM    PARBYT1,FLIST            WAS FULLLIST SPECIFIED .Q       27847000
         BO    NDSMT9                   FORGET EXTRA ERROR STMT IF SO   27848000
         LTR   RA,RA                    WRITING A MACRO DEF'N .Q        27849000
         BNZ   NDSMT1                   BRANCH IF NOT                   27850000
         TM    SWTCH5,X'10'             ARE GLOBALS STILL ALLOWED .Q    27851000
         BZ    NDSMT9                   BRANCH OUT IF YES               27852000
NDSMT1   DS    0H                                                       27853000
         TM    SWTCH5,X'80'             IN A PROGRAMMER MACRO .Q        27854000
         BNO   NDSMT2                   BRANCH IF NOT                   27855000
         LTR   RA,RA                    WRITING MACRO DEFINITION .Q     27856000
         BNZ   NDSMT9                   BRANCH IF NOT                   27857000
NDSMT2   DS    0H                                                       27858000
         LA    RQ,75                    GET FLAGS/SOURCE LENGTH-1       27859000
         L     RR0,ADWS                 GET BWFORCE ADDRESS             27860000
         BALR  RR0,RR0                  BWFORCE                         27861000
         L     LINK,SRCBUF              RETAIN SOURCE RECORD FLAGS      27862000
         MVC   SRCBUF(4),COMPREF        MOVE SOURCE COMMENT FLAGS       27863000
         LA    RQ,SRCBUF                RECORD TO BE WRITTEN            27864000
         L     RR0,ADWS2                GET BWRITE ADDRESS              27865000
         BALR  RR0,RR0                  BWRITE                          27866000
         ST    LINK,SRCBUF              RESTORE SOURCE RECORD FLAGS     27867000
         LH    RQ,RLIHLF                RESTORE BLKSIZE FOR BWFORCE     27868000
NDSMT9   DS    0H                                                       27869000
         L     RR0,ADWS                 GET BWFORCE ADDRESS             27870000
         BALR  RR0,RR0                  BWFORCE                         27880000
         CLI       TEMP+3,0             NOTE IF WRITING UT1             27900000
         BNZ   NDSMT4                   BR NO                           27920000
*./      DELETE    SEQ1=27940020,SEQ2=27960020                          27960000
         MVC   STNOTE(6),BWBLKS+BWFNOT  SAVE NOTE                       27980000
NDSMT4   LA    TEMPRG,NDSMT5            SET RETURN FROM 'LOOKUP'        28000000
         TM    SWTCH6,4                 DICT ENTRIES SUPPRESSED .Q      28020000
         BZ    LOOKP                    NO- GO DO IT                    28040000
NDSMT5   NI    SWTCH6,251               RESET 'SUPPRESS' INDIC          28060000
         MVC   OUTPUT+1(2),RLIHLF       INSERT RECORD LENGTH            28080000
         L     RA,TEMP                  'WRITE' (I.E. MOVE) EDITED TEXT 28100000
         LA    RQ,OUTPUT                  RECORD TO OUTPUT BLOCK        28120000
         L     RR0,ADWS2                                                28140000
         BALR  RR0,RR0                   BWRITE                         28160000
         CLI   OUTPUT,X'0D'             IS AN ERROR RECORD PRESENT .Q   28180000
         BNE   NOOUT                    EXIT IF NO                      28200000
         LH    RQ,RLIHLF                RESTORE BLOCKSIZE FOR BWFORC.   28202000
         TM        SWTCH8,X'40'        TEST IF ERROR 78 JUST OUTPUT     28204000
         BZ        NDERR1                                               28206000
         MVI       NDERRBC1+1,X'80'    RESTORE MUTILATED BE             28208000
         NI        SWTCH8,X'FF'-X'40'  TURN OFF ONE-TIME SWITCH         28210000
         OI        SWTCH6,X'04'        KEEP THOSE LOOKUPS SUPPRESSED    28211000
         MVC       OUTPUT(7),ERRBUF    RE-MOVE IN THE ORIGINAL ERROR    28212000
         B         NDERR0              GO OUTPUT IT                     28214000
NDERR1   TM    SWTCH1,MASK1             ARE WE IN A MACRO .Q            28220000
         BZ    NOOUT                    EXIT IF NO                      28240000
         CLI   TEMP+3,8                 DID WE JUST WRITE ON UT3 .Q     28260000
         BE    NOOUT                    BIF YES, (WROTE ON UT3 BEFORE)  28280000
         LA    RA,8                     NO, SO WRITE OUT SAME ERROR     28300000
*./      DELETE    SEQ1=28320020,SEQ2=28320020                          28320000
         OI    SWTCH6,4                 DO NOT GO TO LOOKUP ON ERRORS   28340000
         B     NDSMT6                   MESSAGE ON UT3 FOR ALL MACROS   28360000
COMPREF  DC    X'08004B30'              SOURCE COMMENT FLAGS            28370000
* EXIT                                                                  28380000
NOOUT    EQU   *                                                        28400000
         TM    SWTCH1,MASK7             TEST IF RETURN TO CALLER        28420000
         BZ    DRIVER                   NO- EXIT TO DRIVER              28440000
         NI    SWTCH1,NMASK7            RESET EXIT INDIC                28460000
         LA    OUTPTR,OUTPUT+10                                         28480000
         L     LINK,SAVEM               RETURN TO CALLER                28500000
         BR    LINK                                                     28520000
RLIHLF   DS    H                                                        28540000
         EJECT                                                          28560000
*SMTSEQ                                                                 28580000
*        SUBROUTINE TO CHECK STATEMENT SEQUENCING AND TO INITIALIZE     28600000
*        OPEN CODE PROCESSING                                           28620000
*        ENTRY POINT SMTSEQ IS FOR PSEUDO-OPS ONLY (INTERNAL OP-CODE    28640000
*        IN ZERORG)                                                     28660000
*        EVERYBODY ELSE HAS TO ENTER BY WAY OF SMTSQ1                   28680000
*        BAL   AUXREG,SMTSEQ       OR        BAL   AUXREG,SMTSQ1        28700000
*        (LIKELY RETURN)                     (LIKELY RETURN)            28720000
*                                                                       28740000
SMTSQ1   DS    0H                                                 V7A54 28760028
         LA    ZERORG,41                DUMMY IT UP               V7A54 28770028
SMTSEQ   DS    0H                                                 V7A54 28780028
         ST    AUXREG,FINDSAVE+4        SAVE RETURN ADDRESS       V7A54 28790028
         L     AUXREG,ASEQBEG           BASE ADDRESS              V7A54 28800028
         BR    AUXREG                   ENTER ROUTINE             V7A54 28810028
ASEQBEG  DC    A(SEQBEG)                STMT SEQUENCE ROUTINE     V7A54 28820028
*./      DELETE    SEQ1=28840020,SEQ2=32110027                    V7A54 28840028
         EJECT                                                          32120000
*                                                                       32140000
*EDTCMT                                                                 32160000
*        PROCESS COMMENTS FIELD TO EDITED TEXT                          32180000
*        BAL   R2,EDTCMT                                                32200000
*        (RETURN)                                                       32220000
EDTCMT   L     R1,SVPTR                 TEST IF TERMINAL CHARACTER      32240000
         LTR   R1,R1                      STRING EXISTS IN OPERAND      32260000
         BNE   EDT01                      FIELD                         32280000
         MVC   0(2,OPTR),TRMOPN         NO, CREATE ONE                  32300000
         LR    R1,OPTR                                                  32320000
         LA    OPTR,2(0,OPTR)                                           32340000
EDT01    MVC   0(2,OPTR),TRMOPN+2       SET TERMINAL BLANK PLUS END OF  32360000
         IC    RB,1(0,R1)                 FIELD FLAG AFTER EDITED       32380000
         LA    RB,1(0,RB)                 OPERAND, THEN INCREASE STRING 32400000
         STC   RB,1(0,R1)                 LENGTH BY ONE AND ADJUST      32420000
         LA    OPTR,2(0,OPTR)             OUTPUT POINTER                32440000
         TM    GSUMRY,128               IF EDITTED OPERAND CONTAINS NO  32460000
         BO    EDT03                    VARIABLE SYMBOLS, CHANGE        32480000
         MVI   0(R1),SPUT               EDITED TEXT TO PUT STRING       32500000
EDT03    MVC   0(3,OPTR),OMTFLD         ASSUME NO COMMENTS              32520000
         LA    OPTR,3(0,OPTR)                                           32540000
         BAL   LINK,SKPBLK              SPACE TO START OF COMMENTS      32560000
         OC    OPBYTE(1),NAMBYT         IF ANY SUBSTITUTION IN          32580000
         OC    GSUMRY(1),OPBYTE           STATEMENT, SET PRINT IND. IN  32600000
         TM    GSUMRY,128                 EDITED TEXT RECORD            32620000
         BZ    EDT03A                   BRANCH IF NO SUBSTITUTION       32640000
         OI    OUTPUT+3,X'20'                                           32660000
         B     EDT04                    GO PROCESS THE COMMENT          32665000
EDT03A   TM    SWTCH5,X'40'             ARE WE IN OPEN CODE .Q          32670000
         BCR   1,R2                     (BOR) YES, FORGET COMMENT       32675000
EDT04    LR    INPTR1,INPTR                                             32680000
         L     INPTR,ENDCOL                                             32700000
         CR    INPTR1,INPTR             EXIT IF NO COMMENTS             32720000
         BCR   2,R2                                                     32740000
         BCTR  INPTR1,0                 DECREMENT COMMENT POINTER       32760000
         L     R1,CALIGN                GET USERS OFFSET                32762000
         S     R1,F1                    DECREMENT BY ONE                32764000
         BP    EDT04A                   BRANCH IF VALID OFFSET    V7A05 32765028
         LA    R1,1(,R1)                RESTORE ORIGINAL          V7A05 32766028
         BZ    EDT04A                   BRANCH IF OFFSET ONE      V7A05 32767028
         LA    R1,1(,INPTR1)            ACTUAL COMMENT START ADDR       32768000
         S     R1,INPUT                 LESS START OF CARD(S)           32770000
EDT04A   DS    0H                                                       32772000
         STC   R1,0(,INPTR1)            PREFACE COMMENT WITH ITS OFFSET 32774000
         S     OPTR,F3                  BACKUP OUTPUT FOR COMMENT E.T.  32776000
EDT05    CLI   0(INPTR),BLANK           DELIMIT COMMENTS FIELD FROM     32780000
         BNE   EDT10                      THE RIGHT                     32800000
         BCT   INPTR,EDT05                                              32820000
EDT10    LA    INPTR,1(0,INPTR)         OUPUT COMMENTS                  32840000
         BAL   R1,PUTSTR                                                32860000
         L     R1,SVPTR                 REPLACE CHARACTER EXPRESSION    32880000
         MVI   0(R1),SPUT                 FLAG BY PUT FLAG              32900000
         BAL   R1,PUTPUT+4              SET END OF FIELD FLAG IN TEXT   32920000
         DC    AL2(ENDFLD)                                              32940000
         BR    R2                       RETURN                          32960000
*GETCMT                                                                 32980000
*        COLLECTS CONTINUATION CARDS FOR A COMMENTS STATEMENT AND       33000000
*        CHECKS THAT STATEMENT IS NOT BETWEEN MACRO AND PROTOTYPE       33020000
*                                                                       33040000
*        BAL   AUXREG,GETCMT                                            33060000
*        (RETURN)                                                       33080000
GETCMT   L     LINK,GETAD                                               33100000
         BALR  LINK,LINK                BR TO GETSRC                    33120000
         DC    AL2(2)                   (FOR GTSRC1 ENTRY)              33140000
         TM    SWTCH1,16                                                33160000
         BCR   8,AUXREG                                                 33180000
*./      DELETE    SEQ1=33200020,SEQ2=33200020                          33200000
*                                                                       33220000
BDPROT1  DS    0H                                                 V7A34 33221028
         NI    SWTCH4,X'FF'-X'02'       SET OFF M-I BIT           V7A34 33222028
BDPROT   BAL   LINK,ABSERR              BAD PROTOTYPE                   33223000
         DC    AL1(ERRR20)                                              33226000
         DC    AL1(ERRST)                                               33229000
*ISITFF                                                                 33240000
*        FOR MACROS AND PROTOS. TRIES TO GET CONTINUATION IF END OF     33260000
*        CARD HAS BEEN REACHED.                                         33280000
ISITFF   OI    SWTCH4,2                 M-I BEING PROCESSED             33300000
         CLI   0(INPTRS),X'FF'          TEST FOR END OF CARD            33320000
         BCR   7,AUXREG                 (BNE) RETURN IF NOT             33340000
         L     LINK,GETAD               BR TO GETSRC FOR ONE            33360000
         BALR  LINK,LINK                  CONTINUATION CARD             33380000
         DC    AL2(4)                                                   33400000
         CLI   0(INPTRS),X'FF'          SEE IF ANY WAS THERE            33420000
         BCR   7,AUXREG                 (BNE) RETURN IF YES             33440000
         BCTR  INPTRS,AUXREG            ELSE BACK UP POINTER, RTRN      33460000
*./      DELETE    SEQ1=33480020,SEQ2=33760020                          33760000
         EJECT                                                          33780000
*        REGISTER ASSIGNMENTS                                           33800000
R1       EQU   6                                                        33820000
R2       EQU   7                                                        33840000
R3       EQU   8                        MUST BE EVEN                    33860000
R3A      EQU   R3+1                     EVEN-ODD REGISTER PAIR          33880000
R4       EQU   4                                                        33900000
RREG     EQU   10                       RSTACK INDEX REG                33920000
LINKR    EQU   10                                                       33940000
STPTR    EQU   5                                                        33960000
INPTR1   EQU   STPTR                                                    33980000
*                                                                       34000000
*        SAM'S TEXT FLAG CODES                                          34020000
SRPAR    EQU   1                        R-PAREN                         34040000
SUBSLP   EQU   3                        SUBSCRIPT L-PAREN TEXT FLAG     34060000
SEQ      EQU   8                                                        34080000
SNE      EQU   9                                                        34100000
SLT      EQU   10                                                       34120000
SGT      EQU   11                                                       34140000
SLE      EQU   12                                                       34160000
SGE      EQU   13                                                       34180000
SNOT     EQU   14                                                       34200000
SOR      EQU   15                                                       34220000
SAND     EQU   16                                                       34240000
*        (NOTE.  'S.D.T.' = 'SELF-DEFINING TERM')                       34260000
SXSDT    EQU   34                       X.S.D.T. FLAG                   34280000
SBSDT    EQU   35                       B.S.D.T. FLAG                   34300000
SDSDT    EQU   36                       D.S.D.T. FLAG                   34320000
SCSDT    EQU   37                       C.S.D.T. FLAG                   34340000
SNULL    EQU   38                       NULL FLAG                       34360000
*./      DELETE    SEQ1=34380020,SEQ2=34380020                          34380000
SSETA    EQU   40                       SETA FLAG                       34400000
SSETB    EQU   41                       SETB FLAG                       34420000
SSETC    EQU   42                       SETC FLAG                       34440000
SCOMMA   EQU   43                                                       34460000
SSUBST   EQU   44                       SUBSTRING FLAG                  34480000
SUBOPE   EQU   45                       SUBSTRING SUBSCRIPT L-PAREN     34500000
SUBCOM   EQU   46                       SUBSTRING SUBSCRIPT COMMA       34520000
SUBCLS   EQU   47                       SUBSTRING SUBSCRIPT R-PAREN     34540000
SARE     EQU   49                       A.R.E. FLAG                     34560000
STATTR   EQU   51                                                       34580000
SLATTR   EQU   52                                                       34600000
SIATTR   EQU   53                                                       34620000
SSATTR   EQU   54                                                       34640000
*./      DELETE    SEQ1=34660020,SEQ2=34660020                          34660000
SKATTR   EQU   56                                                       34680000
SSPAR    EQU   57                       SYMBOLIC PARAMETER FLAG         34700000
SYSLST   EQU   58                       SYSLIST FLAG                    34720000
SSYMB    EQU   250                      ORDINARY SYMBOL FLAG            34740000
*./      DELETE    SEQ1=34780025,SEQ2=35880025                          35880000
         EJECT                                                          35900000
*METSCN                                                                 35920000
*        AN INTERPRETIVE SCANNER FOR SETA, SETB AND SETC OPERANDS       35940000
*        CALLING SEQUENCE   -ENTRY CODE PRESET IN CELL MCALL            35960000
*        BAL   LINK,METSCN  128=SETA, 64=SETC, 0=WHAT-IS-IT             35980000
*        IF CONTROL EVER RETURNS HERE, REGISTER R3 CONTAINS EXIT CODE   36000000
*              =1  ENTRY CODE WAS 0 AND A VARIABLE SYMBOL WAS READ      36020000
*              =2  ENTRY CODE WAS 0 AND A SETB EXPRESSION WAS READ      36040000
*              =3  A SETA EXPRESSION WAS READ                           36060000
*              =4  A SETC EXPRESSION WAS READ                           36080000
*                                                                       36100000
METSCN   BAL   R1,ENTER                 CREATE RECURSION STACK ENTRY    36120000
         MVC   0(1,RREG),MCALL          SET UP FLAG BYTE                36140000
         LH    STPTR,MH1                                                36160000
*        TRANSITION TO NEW STATE                                        36180000
MS05     LA    STPTR,1(0,STPTR)         ADVANCE STPTR                   36200000
MS10     L         R1,S1AD             POINT AT TRANSITION TABLE        36210000
         LA    R1,0(STPTR,R1)           CONVERT TO ABSOLUTE ADDRESS     36220000
         TM    0(R1),255                TEST FLAG BYTE                  36240000
         BO    MS30                     PROCESS FOLLOWING ACTION LIST   36260000
         BM    MS15                     TEST SYNTACTIC CATEGORY         36280000
         BAL   LINK,TRTEST              TRANSLATE AND TEST STRING       36300000
         B     MS05                      AT INPTR                       36320000
*        TEST IF TRT CATEGORY ADMISSIBLE FOR THIS PATH                  36340000
MS15     IC    R3A,0(0,R1)              ISOLATE CATEGORY OF CURRENT     36360000
         N     R3A,F15                    ACTION LIST                   36380000
         CR    R3A,2                    COMPARE AGAINST TRTEST CATEGORY 36400000
         BE    MS30                     SAME -EXECUTE ACTION LIST       36420000
*        TRY NEXT PATH                                                  36440000
         IC    R3A,0(0,R1)              ISOLATE LENGTH OF CURRENT       36460000
         SRL   R3A,4                      ACTION LIST                   36480000
         LA    STPTR,0(R3A,STPTR)       ADD TO STPTR AND THERE WE ARE   36500000
         B     MS10                                                     36520000
*        EXECUTE PATH ACTION LIST                                       36540000
MS30     LA    STPTR,1(0,STPTR)         ADVANCE STPTR                   36560000
MS35     L     R1,S1AD                  POINT AT TRANSITION TABLE       36570000
         IC    R3A,0(STPTR,R1)          ISOLATE ACTION NUMBER FOR A     36580000
         N     R3A,F31                    COMPUTED GO TO                36600000
         AR    R3A,R3A                                                  36620000
         L         R1,MS40AD                                            36630000
         LH    R1,0(R3A,R1)                                             36640000
         B     USEBAS(R1)                                               36660000
MS40AD   DC        A(MS40-2)                                            36670000
*./      DELETE    SEQ1=36680020,SEQ2=37120020                          37120000
S1AD     DC        A(S1)                                                37140000
*./      DELETE    SEQ1=37160020,SEQ2=41280020                          41280000
TCOMP    EQU   MS05                                                     41300000
         EJECT                                                          41320000
*        RECURSIVE CALL TO METSCN BECAUSE OF LEFT PARENTHESIS           41340000
CSETBA   MVI   MCALL,128                SET ARITHMETIC ENTRY CODE       41360000
         B     CT10                                                     41380000
CSETBE   MVC   MCALL(1),0(RREG)         SET ENTRY CODE SAME AS FOR      41400000
         NI    MCALL,128                  CURRENT LEVEL                 41420000
         MVC   4(1,RREG),OPNDX          (FOR POSSIBLE MBOOL ACTION)     41440000
CT10     BAL   R1,APARCT                INCREMENT PARENTHESIS COUNT     41460000
         BAL   R1,PUTR3                 PUT L-PAREN IN TEXT             41480000
         BAL   LINK,METSCN                                              41500000
         CLI   0(INPTR),RPAREN          TEST TERMINATOR                 41520000
         BNE   ILXPR                     MUST BE R-PAREN                41540000
         BAL   R1,DPARCT                DECREMENT PARENTHESIS COUNT     41560000
         BAL   R1,PUTPUT                PUT R-PAREN IN TEXT             41580000
         DC    AL2(SRPAR)                                               41600000
         AR    STPTR,R3                 EXECUTE TRANSITION TO STATE     41620000
         BCT   STPTR,NSTPTR               DEPENDENT ON METSCN EXIT CODE 41640000
*        IF ARITHMETIC ENTRY, EXECUTE IMMEDIATE STATE TRANSITION        41660000
TRANSA   TM    0(RREG),128                                              41680000
         B     TRANSC+4                                                 41700000
*        IF C-EXPRESSION ENTRY, EXECUTE IMMEDIATE STATE TRANSITION      41720000
TRANSC   TM    0(RREG),64                                               41740000
         BO    NSTPTR                                                   41760000
TRA1     LA    STPTR,2(0,STPTR)                                         41780000
         B     MS35                     RETURN TO ACTION PROCESSOR      41800000
*        IF BLANK AT INPTR, EXECUTE IMMEDIATE STATE TRANSITION          41820000
TBLANK   CLI   0(INPTR),BLANK                                           41840000
         BNE   TRA1                                                     41860000
*        NON-SIGNIFICANT BLANK GOBBLER                                  41880000
SBLANK   LA    R3,1                                                     41900000
         L     R3A,ENDCOL                                               41920000
         OI    0(RREG),32               MARK THE DIAGRAM COMPLEX        41940000
SL05     CLI   0(INPTR),BLANK                                           41960000
         BNE   NSTPTR                                                   41980000
         BXLE  INPTR,R3,SL05                                            42000000
*        EXECUTE TRANSITION TO INDICATED STATE                          42020000
NSTPTR   L         R1,S1AD             POINT AT THE TRANSITION TABLE    42030000
         IC    STPTR,1(STPTR,R1)                                        42040000
         B     MS10                     RETURN TO INTERPRETER           42060000
*        PROCESS VARIABLE SYMBOL                                        42080000
VSYMRK   MVC   4(1,RREG),OPNDX          SAVE OPNDX IN RSTACK            42100000
         BAL   R1,PUTPUT+4              SET A.R.E. FLAG IN TEXT         42120000
         DC    AL2(SARE)                                                42140000
VSYM     BAL   LINK,VARSYM                                              42160000
         CLI   8(RREG),128              UNSUBSCRIPTED SYSLIST IS ERROR  42180000
         BE    ILSYSL                                                   42200000
         B     NSTPTR                                                   42220000
*        WHAZZIT EXIT PROCESSOR                                         42240000
CEXITE   LA    R3,1                     ASSUME SIMPLE EXIT CODE         42260000
         IC    RB,4(0,RREG)             GET CURRENT OPNDX FROM RSTACK   42280000
         LA    R1,OPNDL(RB)                                             42300000
         TM    0(RREG),32               TEST IF SIMPLE SUPER-STATE      42320000
         BZ    EXIT                     YES -EXIT                       42340000
         TM    0(R1),128                COMPLEX -ENTRY MUST NOT BE      42360000
         BZ    ILXPR                     SYSLIST                        42380000
         OI    0(R1),32                 MARK AS BOOLEAN REQUIRED        42400000
         EJECT                                                          42420000
*        COMPLEX (BOOLEAN) EXIT PROCESSOR                               42440000
CEXITB   LA    R3,2                     SET COMPLEX EXIT CODE           42460000
         B     EXIT                                                     42480000
*        SETC  EXIT PROCESSOR                                           42500000
CEXITC   LA    R3,4                     SET EXIT CODE                   42520000
         B     CEXITA+4                                                 42540000
*        ARITHMETIC EXIT PROCESSOR                                      42560000
CEXITA   LA    R3,3                     SET EXIT CODE                   42580000
         TM    0(RREG),32               ERROR IF COMPLEX SUPER STATE    42600000
         BO    ILXPR                                                    42620000
         B     EXIT                                                     42640000
*        PROCESS ATTRIBUTE OPERATOR                                     42660000
ATTROP   LA    INPTR,1(0,INPTR)         PUT ATTRIBUTE OPERATOR IN       42680000
         BAL   R1,PUTR3                   TEXT                          42700000
         STC   R3,5(0,RREG)             SAVE IT IN RECURSION ENTRY      42720000
         TM    SWTCH5,64                BRANCH IF PROCESSING MAINLINE   42740000
         BO    ATR10                                                    42760000
         CLI   0(INPTR),AMPSND          MUST BE FOLLOWED BY AMPERSAND   42780000
         BNE   ILNORK                                                   42800000
         MVC   4(1,RREG),OPNDX          SAVE OPNDX IN RSTACK            42820000
         BAL   LINK,VARSYM              PROCESS VARIABLE SYMBOL         42840000
         LA    R1,OPNDL(RB)             JUST IN CASE                    42860000
         OI    0(R1),16                 SET SYMBOLIC PARAMETER FLAG IN  42880000
*                                         OPERAND LIST                  42900000
         CLI   5(RREG),SNATTR           TEST IF N-ATTRIBUTE             42920000
         BNE   ATR05                                                    42940000
         CLI   8(RREG),X'E0'              YES -MUST NOT BE DOUBLY       42960000
         BE    ILNORK                    SUBSCRIPTED SYSLIST            42980000
         TM    0(R1),216                  NOR SUBSCRIPTED V.S.          43000000
         BO    ILNORK                                                   43020000
         B     NSTPTR                                                   43040000
ATR05    CLI   8(RREG),X'80'            VARIABLE SYMBOL MUST NOT BE     43060000
         BE    ILNORK                   UNSUBSCRIPTED SYSLIST           43080000
         B     NSTPTR                                                   43100000
ATR10    CH    R3,HSNATR                MUST NOT BE N OR K-QUOTE        43120000
         BNL   ILNORK                                                   43140000
         BAL   LINK,ATR18               PROCESS SYMBOL                  43160000
         B     ILNORK                     ERROR... INVALID SYMBOL       43180000
         B     NSTPTR                     O.K.     PRESS ON             43200000
ATR18    LA    R3,2                                                     43220000
         ST    LINK,SDTEMP                SAVE LINK REGISTER            43240000
         BAL   LINK,TRTESN                LOOK AT STRING                43260000
         L     LINK,SDTEMP                                              43280000
         CH    2,H12                           MUST BE AN-STRING        43300000
         BCR   7,LINK                     NOT A VALID SYMBOL            43320000
         CH    R2,H8                      LENGTH MUST BE L.E. 8         43340000
         BCR   11,LINK                    NOT A VALID SYMBOL            43360000
         BAL   R1,PUTPUT+4              HOKAY -PUT SYMBOL FLAG IN TEXT  43380000
         DC    AL2(SSYMB)                                               43400000
         BAL   R1,EOPNDL                CREATE OPERAND LIST ENTRY       43420000
         LA    R1,128(0,R2)                                             43440000
         STC   R1,OPNDL(RB)                                             43460000
         LR    INPTR,1                  SPACE INPUT POINTER             43480000
         LA    OPTR,2(0,OPTR)             AND OUTPUT POINTER            43500000
         B     4(0,LINK)                RETURN WITH SYMBOL PROCESSED    43520000
*        SET BOOLEAN REQUIRED FLAG IN OPERAND LIST ENTRY                43540000
MBOOL    IC    RB,4(0,RREG)             GET CURRENT OPNDX FROM RSTACK   43560000
         LA    R1,OPNDL(RB)                                             43580000
         TM    0(R1),128                HOWEVER, MUST NOT BE SYSLIST    43600000
         BZ    ILSYSL                                                   43620000
         OI    0(R1),32                                                 43640000
*        PROCESS LOGICAL OPERATOR                                       43660000
BOOLOP   IC    RB,BOP15-14(R3)          TEST IF TYPE CORRESPONDS TO     43680000
         L     R1,S1AD                  POINT AT THE TRANSITION TABLE   43690000
         LA    R1,0(STPTR,R1)             CALLING SEQUENCE              43700000
         EX    RB,BOP10                                                 43720000
         BNE   *+10                                                     43740000
ILXPR    BAL   LINK,ABSERR              ILLEGAL LOGICAL OPERATOR        43760000
         DC    AL1(ERRR16)                                              43780000
         DC    AL1(ERRST)                                               43800000
*        PROCESS RELATIONAL OPERATOR                                    43820000
RELOP    BAL   R1,PUTR3+4               PUT OPERATOR IN TEXT            43840000
         LA    INPTR,1(R2,INPTR)                                        43860000
         B     SBLANK                   MARCH TO THE BLANK SCAVENGER    43880000
BOP10    TM    0(R1),0                  OUT-OF-LINE                     43900000
BOP15    DC    X'804040'                NOT,OR,AND ACCEPTANCE MASKS     43920000
*        PROCESS ARITHMETIC OPERATOR                                    43940000
AROP     BAL   R1,PUTR3                                                 43960000
         B     NSTPTR                                                   43980000
         EJECT                                                          44000000
*        PROCESS SETC CHARACTER EXPRESSION                              44020000
CSETC    LR    RQ,OPTR                  MARK OUTPUT POINTER             44040000
         S     RQ,OBUFS                                                 44060000
         STH   RQ,4(0,RREG)                                             44080000
         BAL   R1,PUTPUT+4              GENERATE DUMMY BYTE IN TEXT     44100000
         DC    AL2(SNULL)                                               44120000
CS02     LA    INPTR,1(0,INPTR)         SPACE OVER OPENING CHARACTER    44140000
CS05     L     R3A,ENDCOL               LOCATION OF THE END COLUMN      44160000
CS10     BAL   R1,PUTPUT+4              SET CHAR. STRING FLAG IN TEXT   44180000
         DC    AL2(SCEXPR)                                              44200000
         LR    R1,OPTR                  REMEMBER OPTR FOR STORING COUNT 44220000
         SR    R2,R2                    SET STRING LENGTH =0            44240000
         LA    R3,1                     SET BUMP FOR BXLE               44260000
         AR    OPTR,R3                                                  44280000
CS15     LA    RA,2                     ASSUME A 2 BYTE MOVE            44300000
         CLI   0(INPTR),QUOTE           EXAMINE THE QUOTE SITUATION     44320000
         BNE   CS20                                                     44340000
         CLI   1(INPTR),QUOTE                                           44360000
         BNE   CS35                     SINGLE                          44380000
         BCT   RA,CS24                  DOUBLE -SQUASH TO A SINGLE      44400000
CS20     CLI   0(INPTR),AMPSND          EXAMINE THE AMPERSAND SITUATION 44420000
         BNE   CS27                                                     44440000
         CLI   1(INPTR),AMPSND                                          44460000
         BNE   CS30                     SINGLE                          44480000
CS24     AR    INPTR,R3                 ADVANCE INPUT POINTER           44500000
CS25     MVC   0(1,OPTR),0(INPTR)       TRANSFER CHARACTER TO OUTPUT    44520000
         AR    R2,R3                    INCREMENT STRING LENGTH         44540000
         AR    OPTR,R3                  ADVANCE OUTPUT POINTER          44560000
CS27     BCT   RA,CS25                  ITERATE ON COUNT                44580000
         BXLE  INPTR,R3,CS15            ADVANCE INPUT POINTER           44600000
NOQUOT   BAL   LINK,ABSERR              END OF LOGICAL CARD             44620000
         DC    AL1(ERRR17)              WHILE QUOTED STRING             44626000
         DC    AL1(ERRST)                                               44629000
CS30     STC   R2,0(0,R1)               SET STRING LENGTH IN TEXT       44640000
         BAL   LINK,VARSYM              PROCESS VARIABLE SYMBOL TO TEXT 44660000
         CLI   8(RREG),128              UNSUBSCRIPTED SYSLIST IS AN     44680000
         BE    ILSYSL                   ERROR                           44700000
         CLI   0(INPTR),DOT             FORGET TERMINATING PERIOD       44720000
         BE    CS02                                                     44740000
         B     CS05                                                     44760000
CS35     STC   R2,0(0,R1)               SET STRING LENGTH IN TEXT       44780000
         AR    INPTR,R3                 ADVANCE INPTR                   44800000
         CLI   0(INPTR),LPAREN          TEST FOR SUBSTRING NOTATION     44820000
         BNE   CS40                                                     44840000
         BAL   R1,APARCT                                                44860000
         LH    R1,4(0,RREG)             SET SUBSTRING FLAG IN TEXT      44880000
         A     R1,OBUFS                                                 44900000
         MVI   0(R1),SSUBST                                             44920000
         BAL   R1,PUTPUT                PUT SUBSTRING L-PAREN IN TEXT   44940000
         DC    AL2(SUBOPE)                                              44960000
         MVI   MCALL,128                PROCESS SUBSCRIPT-1             44980000
         BAL   LINK,METSCN                                              45000000
         CLI   0(INPTR),COMMA           COMMA MUST TERMINATE            45020000
         BNE   INVSUB                                                   45040000
         BAL   R1,PUTPUT                PUT SUBSTRING COMMA IN TEXT     45060000
         DC    AL2(SUBCOM)                                              45080000
         BAL   LINK,METSCN              PROCESS SUBSCRIPT-2             45100000
         CLI   0(INPTR),RPAREN          R-PAREN MUST TERMINATE          45120000
         BNE   INVSUB                                                   45140000
         BAL   R1,DPARCT                                                45160000
         BAL   R1,PUTPUT                PUT SUBSTRING R-PAREN IN TEXT   45180000
         DC    AL2(SUBCLS)                                              45200000
         CLI   0(INPTR),QUOTE           TEST FOR IMPLIED CONCATENATION  45220000
         BE    NSTPTR                   YES -RETURN TO THE INTERPRETER  45240000
CS40     CLI   0(INPTR),DOT             TEST FOR EXPLICIT CONCATENATION 45260000
         LA    STPTR,1(0,STPTR)                                         45280000
         BNE   NSTPTR                   NO                              45300000
         LA    INPTR,1(0,INPTR)         YES -SPACE OVER THE PERIOD AND  45320000
         BCT   STPTR,NSTPTR               RETURN TO THE INTERPRETER     45340000
         EJECT                                                          45360000
*        PROCESS ARITHMETIC TERM                                        45380000
ATERMA   TM    0(RREG),128              TEST IF ARITHMETIC ENTRY        45400000
         BO    ATERMB                   YES                             45420000
         BAL   R1,PUTPUT+4              NO -PUT A.R.E. FLAG IN TEXT     45440000
         DC    AL2(SARE)                                                45460000
ATERMB   BAL   LINK,AT05                                                45480000
         B     ILSDTF                                                   45500000
         B     NSTPTR                                                   45520000
*        BRANCH TO APPROPRIATE PROCESSING ROUTINE                       45540000
AT05     CH    2,H4                                                     45560000
         BE    VSYM                                                     45580000
         CH    2,H6                                                     45600000
         BE    ATTROP                                                   45620000
         CH    2,H7                                                     45640000
         BE    AT20                                                     45660000
         CH    2,H11                                                    45680000
         BNE   ILXPR                                                    45700000
*        INITIALIZATION FOR DECIMAL S.D.T.                              45720000
AT18     LR    R3A,1                    SET SCAN LIMIT                  45740000
         LA    R3,SDSDT                 GENERATE TYPE FLAG              45760000
         BCT   R3A,AT26                                                 45780000
*        INITIALIZATION FOR HEX, BINARY AND CHARACTER S.D.T.            45800000
AT20     LA    INPTR,1(0,INPTR)         SKIP PAST SYNTACTIC HEAD        45820000
         BAL   R4,TESTND               *                                45840000
         L     R3A,ENDCOL               SET SCAN LIMIT                  45860000
AT26     IC    RB,AT70-SXSDT(R3)        SET MAX COUNT                   45880000
         ST    RB,SDTEMP                                                45900000
         IC    RB,AT75-SXSDT(R3)        HIGH CHAR RANGE                 45920000
         STH   RB,SDTEMP                                                45940000
         IC    RB,AT80-SXSDT(R3)        SHIFT AMOUNT                    45960000
         STC   R3,0(0,OPTR)             PUT TYPE FLAG IN TEXT           45980000
         LA    R3,1                     SET UP BXLE BUMP                46000000
         SR    RA,RA                    CLEAR COUNT                     46020000
         LR    R2,RA                    INITIALIZE RESULT REGISTER      46040000
         CLI   SDTEMP+1,255                                             46060000
         BNE   AT30                                                     46080000
         L     R2,AT60                                                  46100000
*        A SLOW BUT INDEFATIGABLE LOOP TO ASSEMBLE THE S.D.T.           46120000
AT30     SR    R1,R1                    PICK UP CURRENT INPUT BYTE      46140000
         IC    R1,0(0,INPTR)                                            46160000
         CLI   0(INPTR),QUOTE           TEST IF QUOTE                   46180000
         BNE   AT35                                                     46200000
         BAL   R4,TESTND               *                                46220000
         L     R3A,ENDCOL              *                                46240000
         CLI   SDTEMP+1,255             YES -IS THIS C.S.D.T.           46260000
         BNE   AT55                     NO -TERMINATES                  46280000
         CLI   0(INPTR),QUOTE           PERHAPS A DOUBLE QUOTE          46300000
         BNE   AT55                     NO -TERMINATES                  46320000
AT35     CH    R1,SDTEMP                TEST IF CHARACTER IN RANGE      46340000
         BCR   2,LINK                   NOT QUITE                       46360000
         CLI   0(INPTR),AMPSND          DO WE HAVE AN AMPERSAND         46380000
         BNE   AT40                                                     46400000
         BAL   R4,TESTND               *                                46420000
         L     R3A,ENDCOL              *                                46440000
         CLI   0(INPTR),AMPSND          THEN IT BETTER BE A DOUBLE      46460000
         BCR   7,LINK                                                   46480000
AT40     CLI   SDTEMP+1,N9              TEST IF D.S.D.T.                46500000
         BNE   AT50                                                     46520000
         LA    R1,0(R1,R2)              YES -ADJUST FOR CONVERSION      46540000
         ALR   R1,R2                                                    46560000
AT50     SLL   R2,0(RB)                 SHIFT PARTIAL RESULT            46580000
         ALR   R2,R1                    ADD IN CURRENT (ADJUSTED) BYTE  46600000
         AR    RA,R3                    ADD 1 TO COUNT                  46620000
         BXLE  INPTR,R3,AT30                                            46640000
*        SHOULD ONLY FALL THRU ON A D.S.D.T.                            46660000
         CLI   SDTEMP+1,N9                                              46680000
         BE    AT51                                                     46700000
*        OTHERWISE TEST IF A NEW CARD CAN BE ACQUIRED                   46720000
         BAL   R4,TSTND1               *                                46740000
         TM    MVBYTE,1                *                                46760000
         BCR   8,LINK                  *NO -ERROR                       46780000
         L     R3A,ENDCOL              *YES -SET NEW SCAN LIMIT         46800000
         B     AT30                    *  AND CONTINUE                  46820000
AT51     C     R2,AT85                  TEST AGAINST MAX VALUE OF       46840000
         BCR   2,LINK                     (2**24)-1                     46860000
*        STORE BINARY VALUE, CLEAN UP, AND GET THE HECK OUT OF HERE     46880000
AT55     LTR   RA,RA                    COUNT MUST BE IN BOUNDS         46900000
         BCR   8,LINK                                                   46920000
         CH    RA,SDTEMP+2                                              46940000
         BCR   2,LINK                                                   46960000
         ST    R2,SDTEMP                                                46980000
         MVC   1(3,OPTR),SDTEMP+1       (MODULO 2**24 IF D.S.D.T.)      47000000
         LA    OPTR,4(0,OPTR)                                           47020000
         B     4(0,LINK)                                                47040000
*        CONSTANTS, ETC.                                                47060000
         DS    0F                       FORCE FULL WORD ALIGNMENT       47080000
AT60     DC    C'0000'                  INITIAL VALUE FOR C.S.D.T.      47100000
AT70     DC    X'06180803'              MAX COUNT                       47120000
AT75     DC    X'0F0109FF'              MAX CHAR VALUE                  47140000
AT80     DC    X'04010308'              SHIFT VALUE                     47160000
AT85     DC    X'00FFFFFF'              (2**24)-1                       47180000
         EJECT                                                          47200000
*VARSYM                                                                 47220000
*        RECURSIVE SUBROUTINE TO SCAN VARIABLE SYMBOLS                  47240000
*        BAL   LINK,VARSYM                                              47260000
*                                                                       47280000
VARSYM   BAL   R1,ENTER                 CREATE RECURSION STACK ENTRY    47300000
         BAL   R1,EOPNDL                CREATE OPERAND LIST ENTRY       47320000
         STC   RB,4(0,RREG)             SAVE OPNDX IN RSTACK            47340000
         BAL   R4,TESTND                SPACE OVER INITIAL AMPERSAND    47360000
         LA    R3,2                     ISOLATE VARIABLE SYMBOL TAIL    47380000
         BAL   LINK,TRTESN                                              47400000
         CH    2,H12                    ERROR IF NOT AN-STRING          47420000
         BNE   ILVSF                                                    47440000
         CH    R2,H6                    ERROR IF LENGTH G.T. 7          47460000
         BH    ILVSF                                                    47480000
         IC    RB,4(0,RREG)             RECOVER OPNDX FROM RSTACK       47500000
*                                                                       47520000
         TM    SWTCH1,X'40'             TEST IF WITHIN MACRO DEFIN.     47540000
         BZ    V010                     NO-BR PAST SET OF SYSLIST SWTCH 47560000
         CLC   0(7,INPTR),SYSL          TEST FOR SYSLIST                47580000
         BNE   V010                                                     47600000
         BAL   R1,PUTPUT+4              YES -GENERATE TEXT FLAG         47620000
         DC    AL2(SYSLST)                                              47640000
         OI    0(RREG),128              SET SYSLIST SWCH IN RSTACK FLAG 47660000
         B     V015                                                     47680000
*                                                                       47700000
*        INDICATE V.S. IN OPNDL FLAG, AND ADD 1 TO LENGTH FOR THE &     47720000
V010     LA    RQ,193(0,R2)                                             47740000
         STC   RQ,OPNDL(RB)                                             47760000
         LA    OPTR,3(0,OPTR)           SKIP 3 BYTES IN OUTPUT TEXT,    47780000
         BAL   R1,PUTPUT+4                THEN INSERT NULL BYTE         47800000
         DC    AL2(SNULL)                                               47820000
V015     LA    INPTR,1(R2,INPTR)        SPACE OVER V.S. TAIL            47840000
*        SCAN OVER THE MAX LENGTH SPECIFICATION                         47841000
         TM        SWTCH5,X'01'        TEST EXTEN OPTION                47842000
         BZ        V019                SKIP IF OFF                      47843000
         CLI       OUTPUT+5,2          TEST IF GBLC                     47844000
         BE        *+12                                                 47845000
         CLI       OUTPUT+5,5          TEST IF LCLC                     47846000
         BNE       V019                                                 47847000
         CLI       0(INPTR),STAR       TEST FOR ASTERISK                47848000
         BNE       V019                                                 47849000
         CLI       1(INPTR),N9         TEST AT LEAST 1 DIGIT            47850000
         LA        LINK,DCLER12        ERROR IF NOT                     47851000
         BH        ABSERR                                               47852000
         LA        INPTR,1(,INPTR)     POINT AT NEXT CHAR               47853000
         CLI       0(INPTR),N9         TEST IF NUMERIC                  47854000
         BNH       *-8                 LOOP OVER ALL NUMERICS           47855000
*        SCAN OFF THE SUBSCRIPT                                         47856000
V019     CLI   0(INPTR),LPAREN          TEST FOR SUBSCRIPT              47860000
         BNE   EXIT                     NO -EXECUTE RECURSIVE EXIT      47880000
         BAL   R1,APARCT                YES -ADVANCE PARENTHESIS COUNT  47900000
         BAL   R1,PUTPUT                PUT SUBSCRIPT L-PAREN IN TEXT   47920000
         DC    AL2(SUBSLP)                                              47940000
         MVI   MCALL,128                RECURSIVE CALL TO METSCN TO     47960000
         BAL   LINK,METSCN                PROCESS SUBSCRIPT             47980000
         CLI   0(INPTR),COMMA           IS TERMINATOR A COMMA.....      48000000
         BNE   V020                                                     48020000
         TM    0(RREG),128              YES -TEST IF SYSLIST            48040000
         BZ    INVSUB                                                   48060000
         BAL   R1,PUTPUT                YES -PUT COMMA IN TEXT          48080000
         DC    AL2(SCOMMA)                                              48100000
         BAL   LINK,METSCN              PROCESS SECOND SUBSCRIPT        48120000
         OI    0(RREG),32                 AND SET INDICATOR             48140000
V020     CLI   0(INPTR),RPAREN          IS TERMINATOR R-PAREN.....      48160000
         BNE   INVSUB                                                   48180000
         BAL   R1,PUTPUT                YES -PUT IN OUTPUT TEXT         48200000
         DC    AL2(SRPAR)                                               48220000
         BAL   R1,DPARCT                DECREMENT PARENTHESIS COUNT     48240000
         IC    RB,4(0,RREG)             SET SUBSCRIPT INDICATOR IN      48260000
         LA    R1,OPNDL(RB)               OPERAND POINTER LIST          48280000
         OI    0(R1),8                                                  48300000
         OI    0(RREG),64               AND IN RECURSION ENTRY          48320000
         B     EXIT                                                     48340000
         EJECT                                                          48360000
*ENTER                                                                  48380000
*        COMMON RECURSIVE ENTRY ROUTINE FOR SCANNERS                    48400000
*        BAL   R1,ENTER                                                 48420000
*        (RETURN)                                                       48440000
ENTER    L     RREG,AVSP                GET LOCATION OF AVAILABLE SPACE 48460000
         LA    R3A,8(0,RREG)            COMPUTE LOCATION OF NEXT AND    48480000
         ST    R3A,AVSP                   SAVE                          48500000
         ST    LINK,0(0,RREG)           SAVE LINK REG. IN CURRENT ENTRY 48520000
         MVI   0(RREG),0                CLEAR FLAG BYTE                 48540000
         ST    STPTR,4(0,RREG)          SAVE CALLER'S STPTR             48560000
         BR    R1                       RETURN TO CALLER                48580000
*EXIT                                                                   48600000
*        COMMON RECURSIVE EXIT ROUTINE FOR SCANNERS                     48620000
*        B     EXIT                                                     48640000
EXIT     ST    RREG,AVSP                RESET AVAILABLE SPACE POINTER   48660000
         L     LINK,0(0,RREG)           RELOAD LINK REGISTER            48680000
         IC    STPTR,7(0,RREG)          RESTORE CALLER'S STPTR          48700000
         S     RREG,F8                  BACK UP RECURSION ENTRY POINTER 48720000
         BR    LINK                     RETURN TO CALLER'S CALLER       48740000
*APARCT                                                                 48760000
*        SUBROUTINE TO STEP PARENTHESIS COUNT -ERROR IF G.T. 5          48780000
*        BAL   R1,APARCT                                                48800000
APARCT   LH    RQ,PARLVL                                                48820000
         AH    RQ,H1                                                    48840000
         CH    RQ,H5                                                    48860000
         BNH   APARCS                                                   48880000
         BAL   LINK,ABSERR              TOO MANY NESTS FOR THIS BIRD    48900000
         DC    AL1(ERRR18)                                              48920000
         DC    AL1(ERRST)                                               48940000
APARCS   STH   RQ,PARLVL                                                48960000
         BR    R1                                                       48980000
*DPARCT                                                                 49000000
*        SUBROUTINE TO DECREMENT PARENTHESIS COUNT                      49020000
*        BAL   R1,DPARCT                                                49040000
DPARCT   LH    RQ,PARLVL                                                49060000
         SH    RQ,H1                                                    49080000
         STH   RQ,PARLVL                                                49100000
         BR    R1                                                       49120000
*EOPNDL                                                                 49140000
*        CREATES OPERAND LIST ENTRY                                     49160000
*        BAL   R1,EOPNDL                                                49180000
*        (RETURN)                                                       49200000
EOPNDL   IC    RB,OPNDX                 GET OPERAND ENTRY INDEX         49220000
         CH    RB,H200                  MAXIMUM 50 4-BYTE ENTRIES       49240000
         BNL   STCPEX                   ERROR- TOO MANY                 49260000
         LR    R3A,OPTR                 SET CURRENT OUTPUT TEXT INDEX   49280000
         S     R3A,OBUFS                  INTO ENTRY                    49300000
         STH   R3A,OPNDL+2(RB)                                          49320000
         LR    R3A,INPTR                DITTO FOR INPUT TEXT INDEX      49340000
         S     R3A,INPUT                LESS START OF INPUT BUFFER      49360000
         STH   R3A,OPNDL(RB)                                            49380000
         LA    R3A,4(0,RB)              UPDATE OPNDX                    49400000
         STC   R3A,OPNDX                                                49420000
         BR    R1                       RETURN                          49440000
         EJECT                                                          49460000
*PUTPUT                                                                 49480000
*        SUBROUTINE TO PUT ONE BYTE IN TEXT AND ADVANCE INPTR AND OPTR  49500000
*        BAL   R1,PUTPUT                                                49520000
*        DC    X'00XX'   WHERE XX IS THE BYTE TO BE PUT                 49540000
*        (RETURN)                                                       49560000
PUTPUT   BAL   R4,TESTND               *ADVANCE INPUT POINTER           49580000
         MVC   0(1,OPTR),1(R1)          PUT ARGUMENT IN TEXT            49600000
         LA    OPTR,1(0,OPTR)           ADVANCE OUTPUT POINTER          49620000
         B     2(0,R1)                  RETURN TO CALLER                49640000
*PUTR3                                                                  49660000
*        SAME AS PUTPUT EXCEPT ARGUMENT IS IN R3                        49680000
*        BAL   R1,PUTR3                                                 49700000
*        (RETURN)                                                       49720000
PUTR3    BAL   R4,TESTND               *ADVANCE INPUT POINTER           49740000
         STC   R3,0(0,OPTR)                                             49760000
         LA    OPTR,1(0,OPTR)                                           49780000
         BR    R1                                                       49800000
         EJECT                                                          49820000
*ROUTINE 'TRTEST'                                                       49840000
*FUNCTIONS- DOES TRANSLATE&TEST ON FIELD INDICATED IN POINTER 'INPTR',  49860000
*   UP TO LOCATION 'ENDCOL', TESTING AGAINST TABLE 'PNCTAB'.            49880000
*   TRT STOPS ON FIRST SPECIAL OR NON-ASSEMBLER CHARACTER, AND INSERTS  49900000
*     ARGUMENT FROM PNCTAB INTO REG 2 AS CATEGORY NUMBER.               49920000
*   IF FIRST CHAR IN STRING IS SPECL CHAR, THEN TYPE NUMBER IS SELECTED 49940000
*     FROM TABLE NN16, AND EXIT.                                        49960000
*   IF FIRST CHAR IS NON-ASM CHAR, THEN SET CATEGORY=0, AND EXIT.       49980000
*   IF ENTRY POINT IS NOT TRTEST, AND THE STRING MATCHES AN ENTRY IN    50000000
*     THE SYNTACTIC STRING TABLES NN17A, NN17B, OR NN17C, THEN TYPE AND 50020000
*     CATEGORY ARE SELECTED FROM THESE TABLES, AND EXIT.                50040000
*   OTHERWISE, IF FIRST CHAR IS NUMERIC, THEN CATEGORY=11 (DECIMAL      50060000
*     STRING)--IF NOT, CATEGORY=12 (ALPHANUMERIC STRING)--AND EXIT.     50080000
*ENTRY POINTS-                                                          50100000
*        BAL   LINK,TRTEST    PLACES STANDARD CATEGORY TABLE INTO       50120000
*                               PNCTAB, SKIPS SYNTACTIC STRING SEARCH.  50140000
*        BAL   LINK,TRTESN    PLACES STANDARD CATEGORY TABLE INTO       50160000
*                               PNCTAB, DOES SYNTACTIC STRING SEARCH.   50180000
*        BAL   LINK,TRTESN+6  ASSUMES USER HAS SET UP CATEGORIES IN     50200000
*                               PNCTAB, DOES SYNTACTIC STRING SEARCH.   50220000
*INPUT- FIELD POINTER IN 'INPTR'. FIELD MUST BE IN INTERNAL ASSEMBLER   50240000
*   CODE.                                                               50260000
*OUTPUT-                                                                50280000
*   IN REG 1- ADDRESS OF TERMINATING CHARACTER.                         50300000
*   IN REG 2- CATEGORY NUMBER.                                          50320000
*   IN REG R2- STRING LENGTH (EXCLUDING TERMINATOR), MINUS ONE.         50340000
*              (NOT SET IF LENGTH = 0.)                                 50360000
*   IN REG R3- TYPE NUMBER (FOR SPECIAL CHARACTERS).                    50380000
*                                                                       50400000
*   STANDARD TRTEST CATEGORIES-                                         50420000
*    0- 1ST CHAR IS NON-ASSEMBLER                                       50440000
*    1- 1ST CHAR IS ,=.) OR BLANK                                       50460000
*    2- 1ST CHAR IS (                                                   50480000
*    3- 1ST CHAR IS '                                                   50500000
*    4- 1ST CHAR IS &                                                   50520000
*    5- 1ST CHAR IS +-* OR /                                            50540000
*    6- STRING IS L' S' I' N' OR K'                                     50560000
*    7- STRING IS C' X' OR B'                                           50580000
*    8- STRING IS T'                                                    50600000
*    9- STRING IS AND NOT OR                                            50620000
*   10- STRING IS EQ NE LT GT LE GE                                     50640000
*   11- STRING IS DECIMAL (FIRST CHAR NUM)                              50660000
*   12- STRING IS ALPHANUM (FIRST CHAR ALPHA)                           50680000
*EXTERNAL ROUTINES-                                                     50700000
*   TSTND2- IF NO TERMINATOR FOUND, AND THIS IS A MACRO OPERAND WITH    50720000
*           CONTINUATION, TSTND2 WILL GET IT.                           50740000
*EXITS-  BR    LINK                                                     50760000
*EXTERNAL TABLES- PNCTAB, TRSLTB                                        50780000
*                                                                       50800000
*                                                                       50820000
TRTEST   LA    R3,1                     ENTRY POINT INDICATOR           50840000
TRTESN   MVC   PNCTAB+39(12),NN15       SET UP STANDARD TERMINATORS     50860000
         SR    1,1                                                      50880000
         LR    2,1                                                      50900000
         L     R1,ENDCOL                R1 = LENGTH FROM CURRENT INPTR  50920000
         SR    R1,INPTR                   THRU THE END COLUMN           50940000
         BM    NN7A                     UNKNOWN CAT. SINCE PAST END-COL 50960000
*        IF LNTH GT 255, REDUCE IT TO 255.                              50980000
         CH    R1,H255                  ONLY A MAD FIEND IN PRODUCT     51000000
         BNH   *+8                        TEST WOULD FORCE EXECUTION    51020000
         LH    R1,H255                    OF ***THIS*** INSTRUCTION     51040000
         EX    R1,NN14                  TRANSLATE&TEST AGAINST PNCTAB   51060000
         BNE   NN0                      BR IF AN ENTRY MATCHES          51080000
*        IF NO MATCH, SIMULATE ONE IN ENDCOL+1.                         51100000
         LA    1,1(R1,INPTR)            REG 1=1+ENDCOL-INPTR+INPTR      51120000
         CH    R1,H255                                                  51140000
         BE    NN0                                                      51160000
         BAL   R4,TSTND2                TEST FOR MACRO OPERAND CONT.    51180000
         TM    MVBYTE,1                 REDO IF A NEW CARD ACQUIRED     51200000
         BO    TRTESN+6                                                 51220000
*                                                                       51240000
*        TRT FINDS ANY CHAR IN CATEGORY TABLE OR ANY NON-ASM CHAR.      51260000
NN0      LR    R2,1                     COMPUTE TRUE LENGTH TO TERM.    51280000
         SR    R2,INPTR                                                 51300000
         BZ    NN7                      BR IF FIRST CHAR TERMINATES     51320000
         CH    R2,H255                  CHECK OPERAND LENGTH            51330000
         BH    OUTIT+12                 BR IF GT 255                    51335000
*        ONE-CHAR STRINGS ARE SIGNIFICANT HERE ONLY IF TERMINATED BY '  51340000
         BCT   R2,NN0A                  LENGTH-1. SKIP IF NOT 0.        51360000
         CLI   1(INPTR),QUOTE           TEST FOR QUOTE.                 51380000
         BNE   NN3                      BR IF NOT                       51400000
NN0A     C     R2,F2                    SKIP IF LENGTH GREATER THAN 3   51420000
         BH    NN3                                                      51440000
         BCT   R3,NN3                   NO TESTS IF TRTEST ENTRY        51460000
*        SET UP BXLE LOOP TO TEST FOR BOOLEAN AND RELATIONAL OPS, ATTR. 51480000
*        OPERATORS, ETC.                                                51500000
NN1      LA    R3,3(0,R2)               THE BUMP = LENGTH+2             51520000
         SR    R3A,R3A                                                  51540000
*        POINT R4 TO TABLE NN17A, NN17B, OR NN17C FOR LENGTH = 1, 2, OR 51560000
*        3, RESPECTIVELY.                                               51580000
         IC    R3A,NN18(R2)                                             51600000
         LA    R4,NN17A(R3A)                                            51620000
*        POINT R3A TO THE UPPER LIMIT OF THE SAME TABLE.                51640000
         IC    R3A,NN19(R2)                                             51660000
         AR    R3A,R4                                                   51680000
NN2      EX    R2,NN14A                 LOOK FOR A MATCH                51700000
         BE    NN6                      BRANCH IF SYMBOL FOUND.         51720000
*        INCREMENT TABLE PTR BY LENGTH+2, AND LOOP TO NN2 IF TABLE END  51740000
*        HAS NOT BEEN REACHED.                                          51760000
         BXLE  R4,R3,NN2                                                51780000
*        STRING IS NOT IN TABLE                                         51800000
NN3      LA    2,12                     ASSUME AN-STRING CATEGORY (=12) 51820000
         CLI   0(INPTR),N9              TEST FOR INITIAL DIGIT          51840000
         BCR   3,LINK                   EXIT IF NO                      51860000
         BCTR  2,LINK                   YES -SET D-STRING CATEGORY(=11) 51880000
*        RETURN AFTER FINDING ITEM IN SYNTAX TYPE TABLE                 51900000
NN6      IC    R3,2(R2,R4)              PICK UP TYPE NUMBER AND         51920000
         IC    2,1(R2,R4)                 CATEGORY FROM TABLE           51940000
         BR    LINK                                                     51960000
*        TRT TERMINATED AT STARTING BYTE                                51980000
NN7      CLI   0(INPTR),HCHAR           TEST IF NON-ASM CHARACTER       52000000
         BNH   NN8                      BR IF NOT                       52020000
NN7A     SR    2,2                      YES-SET CATEGORY UNKNOWN        52040000
         BR    LINK                       AND EXIT                      52060000
NN8      IC    R3,0(0,INPTR)            SET TYPE NUMBER FROM NN16       52080000
         IC    R3,NN16-39(R3)                                           52100000
         BR    LINK                     EXIT                            52120000
NN14     TRT   0(1,INPTR),PNCTAB        OUT-OF-LINE                     52140000
NN14A    CLC   0(1,INPTR),0(R4)                                         52160000
*                                                                       52180000
*        CATEGORIES AND TYPES CORRESPONDING TO SPECIAL CHARACTERS       52200000
*        (NN15 IS USED AS STANDARD CATEGORY TABLE)                      52220000
**               0 1 2 3 4 5 6 7 8 9 1011    INTERNAL CODE MINUS 39.    52240000
**               + - * / , = & . ( ) '       CHARACTER (LAST IS BLANK). 52260000
NN15     DC    X'050505050101040102010301'   CATEGORY NUMBERS           52280000
NN16     DC    X'040506072B00000002010032'   TYPE NUMBERS               52300000
*                                                                       52320000
*        SYNTACTIC STRING TABLES.                                       52340000
*        NN17A USED IF TERMINATOR IS ' AND LENGTH = 1.                  52360000
*        NN17B,NN17C USED IF LENGTH = 2,3 RESPECTIVELY, FOR ANY TERMI-  52380000
*        NATOR.                                                         52400000
*        ENTRY FORMAT IS SSSCT, WHERE SSS IS CHARACTER STRING (1,2, OR  52420000
*        3 BYTES), C IS CATEGORY AND T IS TYPE (1 BYTE EACH).           52440000
NN17A    DC    AL1(T)                                                   52460000
         DC    AL1(08)                                                  52480000
         DC    AL1(STATTR)                                              52500000
         DC    AL1(X)                                                   52520000
         DC    AL1(07)                                                  52540000
         DC    AL1(SXSDT)                                               52560000
         DC    AL1(B)                                                   52580000
         DC    AL1(07)                                                  52600000
         DC    AL1(SBSDT)                                               52620000
         DC    AL1(C)                                                   52640000
         DC    AL1(07)                                                  52660000
         DC    AL1(SCSDT)                                               52680000
         DC    AL1(L)                                                   52700000
         DC    AL1(06)                                                  52720000
         DC    AL1(SLATTR)                                              52740000
         DC    AL1(I)                                                   52760000
         DC    AL1(06)                                                  52780000
         DC    AL1(SIATTR)                                              52800000
         DC    AL1(S)                                                   52820000
         DC    AL1(06)                                                  52840000
         DC    AL1(SSATTR)                                              52860000
         DC    AL1(N)                                                   52880000
         DC    AL1(06)                                                  52900000
         DC    AL1(SNATTR)                                              52920000
         DC    AL1(K)                                                   52940000
         DC    AL1(06)                                                  52960000
         DC    AL1(SKATTR)                                              52980000
*                                                                       53000000
NN17B    DC    X'0E1A'                  EQ                              53020000
         DC    AL1(10)                                                  53040000
         DC    AL1(SEQ)                                                 53060000
         DC    X'181B'                  OR                              53080000
         DC    AL1(09)                                                  53100000
         DC    AL1(SOR)                                                 53120000
         DC    X'170E'                  NE                              53140000
         DC    AL1(10)                                                  53160000
         DC    AL1(SNE)                                                 53180000
         DC    X'151D'                  LT                              53200000
         DC    AL1(10)                                                  53220000
         DC    AL1(SLT)                                                 53240000
         DC    X'101D'                  GT                              53260000
         DC    AL1(10)                                                  53280000
         DC    AL1(SGT)                                                 53300000
         DC    X'150E'                  LE                              53320000
         DC    AL1(10)                                                  53340000
         DC    AL1(SLE)                                                 53360000
         DC    X'100E'                  GE                              53380000
         DC    AL1(10)                                                  53400000
         DC    AL1(SGE)                                                 53420000
*                                                                       53440000
NN17C    DC    X'0A170D'                AND                             53460000
         DC    AL1(9)                                                   53480000
         DC    AL1(SAND)                                                53500000
         DC    X'17181D'                NOT                             53520000
         DC    AL1(9)                                                   53540000
         DC    AL1(SNOT)                                                53560000
NN17D    EQU   *                                                        53580000
*        BXLE PARAMETERS FOR SYNTACTIC STRING LOOK-UP                   53600000
NN18     DC    AL1(NN17A-NN17A)         TABLE ADDRESS FOR LENGTH = 1    53620000
         DC    AL1(NN17B-NN17A)         TABLE ADDRESS FOR LENGTH = 2    53640000
         DC    AL1(NN17C-NN17A)         TABLE ADDRESS FOR LENGTH = 3    53660000
NN19     DC    AL1(NN17B-NN17A-3)       TABLE END FOR LENGTH = 1        53680000
         DC    AL1(NN17C-NN17B-4)       TABLE END FOR LENGTH = 2        53700000
         DC    AL1(NN17D-NN17C-5)       TABLE END FOR LENGTH = 3        53720000
         EJECT                                                          53740000
VSUB     EQU   X'F0'                    SUBLIST FLAG                    53760000
SUBFLG   EQU   VSUB                                                     53780000
VAVFLG   EQU   X'26'                    EVALUATE FLAG, NULL SYMBOL      53800000
EVAL     EQU   VAVFLG                                                   53820000
*                                                                       53840000
POSFLG   EQU   X'FB'                    POSITIONAL PARAM FLAG           53860000
ATSIGN   EQU   X'26'                                                    53880000
CONBIT   EQU   X'20'                    MASK TO TEST CONTINUATION INDIC 53900000
SMSPAR   EQU   X'0B'                    REC TYPE FLAG (MACRO/PROTO      53920000
*                                         OPERAND VALUE)                53940000
ENDSYM   EQU   X'0C'                    END OF M-I OR PROTO FLAG        53960000
KEYFLG   EQU   X'FC'                    KEY WORD PARAMETER FLAG         53980000
TYPEU    EQU   22                       'UNDEFINED' TYPE ATTR FLAG      54000000
WORK1    EQU   4                                                        54020000
SBCFLG   EQU   X'F9'                    CONT. FLAG WITHIN SUBLIST       54040000
*                                                                       54060000
*                                                                       54080000
*                                                                       54100000
*   MACRO INSTRUCTION SCANNER...                                        54120000
*        THIS ROUTINE IS CALLED BY THE DRIVER TO PROCESS THE            54140000
*          OPERAND FIELD OF AN UNKNOWN OP CODE AS A MACRO INSTRUCTION   54160000
*        IT IS ALSO USED BY THE PROTOTYPE SCANNER TO PROCESS THE        54180000
*        NORMAL VALUE OF A KEY WORD PARAMETER                           54200000
*                                                                       54220000
MISCAN   ST    INPTR,INTPTR             SAVE POINTER TO INPUT OPRND FLD 54240000
         SR    LINK,LINK                ZERO A TEMPORARY REGISTER       54250000
         STH   LINK,POSNO               INITIALIZE POSITIONAL COUNTER   54260000
         STH   LINK,NRKEY               INITIALIZE KEYWORD COUNTER      54280000
         CLI   0(INPTR),BLANK          TERMINATE SCAN IF INITIAL        54300000
         BE    NDPSCN                     CHARACTER IS BLANK            54320000
MISCAN2  BAL   LINK,NEXTOP              EDIT AN OPERAND                 54340000
         B     *-4                      GET NEXT OPERAND                54360000
         EJECT                                                          54380000
*                                                                       54400000
*        BEGIN NEW OPERAND                                              54420000
*                                                                       54440000
NEXTOP   DS    0H                                                       54460000
         BAL   LINKR,UPPOS              UPDATE POSITIONAL COUNT         54480000
NXTOP0   DS    0H                                                       54500000
         ST    INPTR,INTPTR             INITIALIZE FOR PROTO SCAN       54520000
         ST    LINK,SVNXT               BEGIN SCAN OF OPERAND           54540000
NXTOP1   ST    INPTR,FSTINP             SET FIRST CHAR. OF OP           54560000
         LR    INPTR1,INPTR                                             54580000
         CLI   0(INPTR),LPAREN          POSSIBLE SUBLIST                54600000
         BNE   NXTOP2                                                   54620000
         CLI   1(INPTR),RPAREN                                          54640000
         BNE   PTSBHD                  LOOKS LIKE A SUBLIST             54660000
NXTOP2   MVI   0(OPTR),POSFLG           ASSUME POS PARAM, INSERT FLAG   54680000
         LA    OPTR,1(0,OPTR)                                           54700000
         MVC   NPRIME,H0                INITIALIZE SUBLIST COUNT        54720000
         BAL   LINKR,LEGOP              EDIT OPERAND                    54740000
         CLI   ERRCOD,0                                                 54760000
         BNE   ILTERM                   ILLEGAL OPERAND,TERMINATE SCAN  54780000
         CLI   0(INPTR),BLANK                                           54800000
         BE    RPUPFD                   WRAP UP OP. FIELD               54820000
         BAL   LINKR,RPUPOP             ELSE...JUST WRAP UP OPERAND     54840000
         B     MRETUR                                                   54860000
*    INSERT END OF STATEMENT SYMBOL AND RETURN                          54880000
RPUPFD   DS    0H                                                 V7A53 54900028
         BAL   LINK,TSTPOS              POSPARM PRECEDE KW .Q     V7A53 54902028
         TM    SWTCH1,MASK3             PROTOTYPE STMT .Q         V7A53 54904028
         BNO   RPUPFDA                  BRANCH IF NOT             V7A53 54906028
         CLC   NRKEY,H0                 ANY KEYWORDS FOUND        V7A53 54908028
         BE    RPUPFDA                  BRANCH IF NONE            V7A53 54910028
         L     LINK,VENTKWB             KEYWORD ADJUST ROUTINE    V7A53 54912028
         BALR  LINK,LINK                ADJUST KEYWORD NUMBERS    V7A53 54914028
RPUPFDA  DS    0H                                                 V7A53 54916028
         MVI   0(OPTR),BLANK             ALL'S O.K.                     54920000
         BAL   LINK,ENDOPR                                              54940000
NDPSCN   L     LINK,GETAD               GET PAST ANY                    54960000
         BALR  LINK,LINK                   CONTINUATION CARDS           54980000
         DC    AL2(6)                                                   55000000
         MVI   OUTPUT,ENDSYM             END OF PROTOTYPE STATEMENT     55020000
         LA    OPTR,OUTPUT+6            ALSO END OF M-I STATEMENT V7A53 55040028
         LH    WORK1,POSNO              KEYWORDS AND POSNLS       V7A53 55042028
         SH    WORK1,NRKEY              LESS KEYWORD COUNT        V7A53 55044028
         STH   WORK1,POSNO              GIVES ONLY POSNL COUNT    V7A53 55046028
         MVC   OUTPUT+5(2),POSNO        FINAL POSNL COUNT         V7A53 55048028
         MVC   OUTPUT+3(2),NRKEY        KEYWORD COUNT                   55060000
         BAL   LINK,ENDOPR             OUTPUT  END RECORD               55080000
         NI        SWTCH1,NMASK3       TURN OFF PROTO INDIC             55100000
         B     DRIVER                   GET NEXT STATEMENT              55120000
*   END OF OPERAND,NOT END OF STATEMENT                                 55140000
RPUPOP   BAL   LINK,TSTPOS              SAME TEST FOR OPERAND           55160000
         MVI   0(OPTR),COMMA                                            55180000
         BAL   LINK,OUTIT               CHECK OPERAND LENGTH ONLY       55200000
         BAL   LINK,NDOPR1              OUTPUT OPERAND                  55220000
         BAL   LINK,OUTITA              UPDATE POINTERS.                55240000
         NI    SWTCH7,X'DF'             RESET K.W. INDICATOR            55260000
         BR    LINKR                                                    55280000
*        TSTPOS      ...         THIS ROUTINE MAKES THE                 55300000
*         FINAL TEST BEFORE OUTPUTTING THE OPERAND.                     55320000
*        ... IF A POSITIONAL PARAMETER IS BEING PROCESSED, IT IS AN     55340000
*              ERROR IF ANY K.W. PARAMETERS PRECEDED IT                 55360000
*            BAL      LINK,TSTPOS                                       55380000
*                      NORMAL RETURN                                    55400000
*                                                                       55420000
TSTPOS   CLC   NRKEY,H0                 ANY PRECEDING K.W.'S            55440000
         BCR   8,LINK                   NO...ALL'S WELL                 55460000
         TM    SWTCH7,32                ARE WE OUTPUTTING A K.W.        55480000
         BZ    PPFLKW                   ERROR... BAIL OUT               55500000
         CLC   NPRIME,H0                IS A SUBLIST BEING PROCESSED .Q 55520000
         BCR   7,LINK                   BIF YES                         55540000
         NI    SWTCH7,X'DF'             RESET K.W. INDICATOR            55560000
         BR    LINK                     AND RETURN                      55580000
PPFLKW   DS    0H                                                       55600000
         B     KEYPOS                   POSITIONAL PARAM FOLLOWS KW     55620000
*                                       RETURN IS TO LINK               55640000
*                                                                       55660000
*        THIS ROUTINE DOES THE FOLLOWING ...                            55680000
*          IF THE OPERAND EXCEEDS 255 CHARACTERS AN ERROR MESSAGE       55700000
*          IS OUTPUTTED IN LIEU OF THE EDITED TEXT FOR THAT OPERAND     55720000
*                                                                       55740000
OUTIT    LR    WORK1,INPTR                                              55760000
         S     WORK1,FSTINP                                             55780000
         CH    WORK1,H255               DOES THE C.S. EXCEED 255 .Q     55800000
         BCR   13,LINK                  BIF NO                          55820000
         BAL   LINK,ABSERR              YES, SO OUTPUT ERROR MESSAGE    55840000
         DC    AL1(ERRR19)              OPERAND EXCEEDS 255 CHARS.      55860000
         DC    AL1(ERRST)                                               55880000
*        THIS ROUTINE DOES THE FOLLOWING ...                            55900000
*          THE OPERAND IS OUTPUTTED AND THE                             55920000
*          OPERAND FIELD IS SHIFTED TO PERMIT THE NEXT OPERAND TO       55940000
*          FIT IN THE INTERMEDIATE BUFFER BEFORE EDITING                55960000
*        BAL   LINK,OUTITA                                              55980000
*              (RETURN)                                                 56000000
*                                                                       56020000
OUTITA   L     WORK1,INPUT              MOVE OPERAND TO BEGINNING OF    56040000
         MVC   0(255,WORK1),0(INPTR)           INPUT BUFFER             56060000
         MVC   255(65,WORK1),255(INPTR)                                 56080000
         SR    INPTR,WORK1             LENGTH OF MOVE                   56100000
         L     WORK1,ENDCOL                                             56120000
         SR    WORK1,INPTR             UPDATE POINTER TO END OF TEXT    56140000
         ST    WORK1,ENDCOL                                             56160000
         L     INPTR,INPUT                                              56180000
         LA    INPTR,1(0,INPTR)                                         56200000
OUTIT1   LR    INPTR1,INPTR                                             56220000
         ST    INPTR1,INTPTR                                            56240000
         BAL   R4,TSTND1                INSURE NOT PAST END COLUMN.     56260000
         BR    LINK                                                     56280000
MRETUR   L     LINK,SVNXT               RETURN TO CALLER OF NEXTOP      56300000
         BR    LINK                                                     56320000
         EJECT                                                          56340000
*   OUTPUT STANDARD SUBLIST HEAD                                        56360000
PTSBHD   ST    OPTR,INTOPT              IN CASE OF BACK UP              56380000
         MVC   NPRIME,H0                INITIALIZE SUBLIST COUNT        56400000
         BAL   R1,PUTPUT                POS. PARAMETER FLAG             56420000
         DC    AL2(POSFLG)                                              56440000
         XI    SWTCH7,128               FLIP BIT 0                      56460000
         MVI   1(OPTR),SUBFLG           LOOKS LIKE A SUBLIST...SO       56480000
         MVI   7(OPTR),LPAREN             INSERT HEADING NOW AND        56500000
         LA    OPTR,8(0,OPTR)             EDIT POTENTIAL SUBLIST        56520000
SUBNXT   LR    INPTR1,INPTR                                             56540000
         ST    INPTR,INTPTR              POINTERS                       56560000
         MVC   SOPNDX(1),OPNDX          SAVE OPNDX                      56580000
         LH    WORK1,NPRIME             GET CURRENT SUBLIST COUNT       56600000
         LA    WORK1,1(,WORK1)          UPDATE SUBLIST PARAM COUNTER    56620000
         STH   WORK1,NPRIME             SET NEW SUBLIST PARAM COUNT     56640000
         BAL   LINKR,LEGOP                                              56660000
         TM    ERRCOD,1                 RETURN FROM EDITOR              56680000
         BO    EXRPRN                   MUST BE EXCESSIVE RGT PAREN     56700000
         CLI   0(INPTR),COMMA                                           56720000
         BNE   ILTERM                   ILLEGAL TERMINATOR              56740000
         MVI   0(OPTR),COMMA           INSERT COMMA IN TEXT             56760000
         BAL   LINK,TSTPOS              INSURE P.P. BEFORE ANY K.W.P.   56780000
         BAL   LINK,ENDOPR             OUTPUT OPERAND                   56800000
         BAL   R1,PUTPUT                ENTER SUB CONT. FLAG            56820000
         DC    AL2(SBCFLG)                INTO OUTPUT STREAM            56840000
         BAL   LINK,OUTIT      CHECK OPERAND LENGTH                8189 56860000
         B     SUBNXT                   GET NEXT OPERAND                56880000
*    IF   ERROR WAS EXCESSIVE RGT PAREN ...IT MAY BE ALL RIGHT          56900000
EXRPRN   CLI   0(INPTR),RPAREN                                          56920000
         BNE   ILTERM                   TOO BAD,ERROR IS LEGIT          56940000
         BAL   R4,TESTND                                                56960000
         CLI   0(INPTR),BLANK                                           56980000
         BE    ENDSUB                   END OF STATEMENT                57000000
         CLI   0(INPTR),COMMA           HOW ABOUT COMMA                 57020000
         BE    MOREOP                   END OF OPERAND SUBLIST          57040000
         C     INPTR,ENDCOL             MAY BE END OF CARD              57060000
         BNH   WHOOPS                   NOT SUBLIST,SCAN FOR VALID TEXT 57080000
         B     ENDSUB                                                   57100000
MOREOP   BAL   LINKR,LEGSUB             WRAP UP SUBLIST                 57120000
         BAL   LINKR,RPUPOP                                             57140000
         B     MRETUR                                                   57160000
*     WRAP UP SUBLIST                                                   57180000
LEGSUB   MVI   0(OPTR),RPAREN                                           57200000
         MVC   1(1,OPTR),NPRIME+1       ENTER SUBLIST PARAMETER COUNT   57220000
         LA    OPTR,2(,OPTR)            BUMP OUTPUT POINTER             57240000
         TM    SWTCH7,128                                               57260000
         BCR   8,LINKR                  ALL HAS BEEN OUTPUTTED          57280000
         L     INPTR,FSTINP             RETURN TO LEFT PAREN            57300000
         L     LINK,SVNXT                                               57320000
         L     OPTR,INTOPT              RESET POINTERS                  57340000
         MVI   OPNDX,0                  TO SCAN AGAIN                   57360000
         B     NXTOP0                   AS A LEGIT SUBLIST              57380000
*    END OF SUBLIST AND STATEMENT                                       57400000
ENDSUB   BAL   LINKR,LEGSUB             SET END OF SUBLIST FLAGS        57420000
         B     RPUPFD                   END OF STATEMENT                57440000
*     NOT A VALID SUBLIST,BUT MAY BE LEGIT OPERAND                      57460000
*      BACKUP AND  RESCAN INCLUDING INITIAL LEFT PAREN                  57480000
WHOOPS   L     OPTR,INTOPT              RESET POINTERS                  57500000
         L     INPTR,FSTINP             BACK TO LEFT PAREN              57520000
         LR    INPTR1,INPTR                                             57540000
         ST    INPTR,INTPTR             RESET POINTERS                  57560000
         NI    SWTCH7,X'7F'             TURN OFF BYPASS                 57580000
         MVI   OPNDX,0                  DESTROY OP. LST. ENTRIES        57600000
         B     NXTOP2                   START ALL OVER                  57620000
         EJECT                                                          57640000
*ROUTINE 'LEGOP'                                                        57660000
*FUNCTIONS- EDITS MACRO INSTRUCTION OPERANDS TO OUTPUT BUFFER.          57680000
*   (ALSO ENTERED FROM PROSCN VIA NXTOP0 TO PROCESS KW IN PROTOTYPE.)   57700000
*   PROCESSES ONE OPERAND OR ONE SUBLIST.                               57720000
*   CREATES OPNDL ENTRIES.                                              57740000
*   EVALUATES SELF-DEFINING TERMS (SDT).                                57760000
*ENTRY POINTS-                                                          57780000
*        BAL   LINKR,LEGOP0   FOR PROCESSING MACRO INST NAME FIELD      57800000
*        BAL   LINKR,LEGOP    FOR OPERAND FIELD                         57820000
*EXTERNAL ROUTINES-                                                     57840000
*   TRTEST- SCAN FOR TERMINATORS                                        57860000
*   PUTST1- MOVE INPUT TEXT TO OUTPUT BUFFER                            57880000
*   DPARCT- DECREMENT PAREN LEVEL COUNT                                 57900000
*   GETSRC- GET NEXT CARD                                               57920000
*   APARCT- INCREMENT PAREN LEVEL COUNT                                 57940000
*   OUTIT-  CHECKS OPERAND LENGTH                                       57960000
*   VARSYM- CHECKS VAR SYM SYNTAX, CREATES OPNDL ENTRY                  57980000
*   AT20-   EVALUATES X',B', OR C' SDT, MOVES TO OUTPUT                 58000000
*   ATR18-  CHECKS ORD SYM SYNTAX, CREATES OPNDL ENTRY                  58020000
*   AT18-   EVALUATES DEC SDT, MOVES TO OUTPUT                          58040000
*   PUTPUT- INSERT FLAGS IN OUTPUT BUFFER                               58060000
*   UPKEY-  INCREMENT KEYWORD COUNTER                                   58080000
*   WRNERR- WRITE OUT ERROR WARNING MESSAGE                             58100000
*NORMAL EXITS-                                                          58120000
*        B     BLNKOP         LAST OPERAND IN FIELD IS KEYWORD WITH     58140000
*                               OMITTED OPERAND                         58160000
*        BR    LINKR          NORMAL RETURN AT END OF OPERAND OR SUBLST 58180000
*   EXIT CODES-                                                         58200000
*        ERRCOD =1 FOR EXCESS RIGHT PAREN (PRESUMABLY END OF SUBLIST)   58220000
*               =0 OTHERWISE                                            58240000
*ERROR EXITS- TO ONE OF THESE ON SYNTAX ERRORS-                         58260000
*   NOBAL                                                               58280000
*   ILTERM                                                              58300000
*   ILSYSL                                                              58320000
*   NOQUOT                                                              58340000
*                                                                       58360000
LEGOP    MVI   OUTPUT,SMSPAR            PUT PARAMETER FLAG              58380000
         MVI   MVBYTE,0                                                 58400000
LEGOP0   ST    LINKR,SVLNKR                                             58420000
         NI    SWTCH7,X'BF'             SET FIRST TIME SWITCH FOR VARSM 58440000
         SR    WORK1,WORK1              INITIALIZE FOR NEXT OP.         58460000
         STH   WORK1,PARLVL             ZERO PAREN LEVELS               58480000
         MVI   ERRCOD,0                                                 58500000
         CLI   0(INPTR),COMMA           IF FIRST CHARACTER A COMMA      58520000
         BE    NULOP                    YES...ENTER OMITTED OPERAND     58540000
         B     LEGP1A                   NO...PRESS ON                   58560000
*      INTERNAL RETURN TO IGNORE CHARACTER                              58580000
LEGOP1   BAL   R4,TESTND                                                58600000
*      CHARACTER WAS SIGNIFICANT - SDT CAN'T FOLLOW                     58620000
LEGOP2   OI    MVBYTE,X'20'             DISALLOW S.D.T.                 58640000
LEGP1A   C     INPTR,ENDCOL             END OF CARD TEST                58660000
         BH    CAT00A                   YES, PROCESS  AS SAME           58680000
         ST    INPTR,SAVEIN                                             58700000
         TM    PARBYT1,EXTEN            IS EXTEN ON .Q            V7A06 58701028
         BNO   LEGP1B                   BRANCH IF NOT             V7A06 58702028
         TM    MVBYTE,X'20'             S.D.T.'S STILL OK .Q      V7A06 58703028
         BZ    LEGP1B                   BRANCH IF YES             V7A06 58704028
         LA    R3,1                     FIRST INPUT INDICATOR     V7A06 58705028
         MVC   PNCTAB+39(12),NN15       TRANSLATE TO DELIMITER    V7A06 58706028
         MVI   PNCTAB+EQUALS,X'00'      FORGET THE EQUAL SIGN     V7A06 58707028
         BAL   LINK,TRTESN+6            GO TO ENTRY POINT         V7A06 58708028
         B     LEGP1C                   AND CONTINUE              V7A06 58709028
LEGP1B   DS    0H                                                 V7A06 58710028
         BAL   LINK,TRTEST               GET NEXT TERMINATOR            58720000
LEGP1C   DS    0H                                                 V7A06 58730028
         LR    INPTR,1                  SET INPUT POINTER               58740000
         AR    2,2                      DEVELOP CORRECT BRANCH          58760000
         LH    WORK1,BRANCH(2)           ADDRESS DETERMINED BY          58780000
         B     USEADR(WORK1)            CATEG. NO. RETURNED IN REG. 2   58800000
*       BRANCH ON CATEGORY NUMBER                            CAT.       58820000
BRANCH   DC    AL2(LEGOP1-USEADR)       ILLEGAL CHAR.OR PAST END  0     58840000
         DC    AL2(CAT01-USEADR)        A FEW SPECIAL CHARACTERS  1     58860000
         DC    AL2(CAT02-USEADR)         LEFT PAREN                     58880000
         DC    AL2(CAT03-USEADR)        QUOTE                     3     58900000
         DC    AL2(CAT04-USEADR)        AMPERSAND                 4     58920000
         DC    AL2(LEGOP1-USEADR)       ARITHMETIC OPERATOR +,-,*,/     58940000
         DC    AL2(CAT06-USEADR)        L'                        6     58960000
         DC    AL2(CAT07-USEADR)        POSSIBLE S.D.T            7     58980000
         DC    AL2(CAT03-USEADR)        T'                        8     59000000
         DC    AL2(CAT12A-USEADR)        RELATIONAL                9    59020000
         DC    AL2(CAT12A-USEADR)          OPERATORS              10    59040000
         DC    AL2(CAT11-USEADR)        DIGIT HEADED ALPHAMERIC  11     59060000
         DC    AL2(CAT12-USEADR)        LETTER HEADED ALPHAMERIC 12     59080000
* NORMAL RETURN TO CALLER                                               59100000
RETLEG   L     LINKR,SVLNKR                                             59120000
         BR    LINKR                                                    59140000
*                                                                       59160000
         EJECT                                                          59180000
*        END OF CARD                                                    59200000
CAT00A   CLI   PARLVL+1,0                                               59220000
         BNE   NOBAL                    PARENS DO NOT BALANCE ..ERROR   59240000
         MVI   0(INPTR),BLANK           DUMMY END OF CARD               59260000
         BCTR      INPTR,0             POINT TO END COLUMN              59264000
         CLI       0(INPTR),COMMA      WAS END COLUMN A COMMA           59268000
         LA        INPTR,1(,INPTR)     RESET POINTER                    59272000
         BE        NULOP               BRANCH IF COMMA                  59276000
         B     CAT12                      AND PROCESS OPERAND           59280000
*       PRIVILEGED SPECIAL CHARACTER                                    59300000
COMVAL   DC    H'43'                    COMMA                           59320000
CAT01    SR    WORK1,WORK1                                              59340000
         IC    WORK1,0(0,INPTR)         SET                             59360000
         SH    WORK1,COMVAL              UP                             59380000
         AR    WORK1,WORK1                BRANCH                        59400000
         LH    WORK1,BRNCH1(WORK1)                                      59420000
         B     USEADR(WORK1)                                            59440000
BRNCH1   DC    AL2(COM01-USEADR)        COMMA                           59460000
         DC    AL2(EQU01-USEADR)        EQUALS                          59480000
         DC    AL2(CAT04-USEADR)        AMPERSAND                       59500000
         DC    AL2(LEGOP1-USEADR)       PERIOD                          59520000
         DC    AL2(CAT02-USEADR)        LEFT PAREN                      59540000
         DC    AL2(RPAR01-USEADR)       RIGHT PAREN                     59560000
         DC    AL2(CAT03-USEADR)        QUOTE                           59580000
         DC    AL2(BLK01-USEADR)        BLANK                           59600000
*    COMMA                                                              59620000
COM01    CLI   PARLVL+1,0                                               59640000
         BNE   LEGOP1                   TREAT AS TEXT                   59660000
         BCTR  INPTR,0                  BACK UP ONE                     59680000
COM01A   CLI   0(INPTR),COMMA           WAS IT ALSO COMMA .Q            59700000
         LA    INPTR,1(0,INPTR)         RESET INPUT POINTER             59720000
         BE    NULOP                    OUTPUT OMITTED OPERAND IF YES   59740000
         BAL   R1,PUTST1                ELSE PUT OUT TEXT               59760000
         B     RETLEG                    AND RETURN                     59780000
*   EQUALS                                                              59800000
EQU01    CLI   PARLVL+1,0               IF BETWEEN PARENS, IT IS        59820000
         BNE   LEGOP1                   JUST A NORMAL SYMBOL            59840000
         C     INPTR,INTPTR             ONLY LEGIT IF FIRST CHAR.       59860000
         BE    LEGOP1                   TREAT AS TEXT                   59880000
         CLC   NPRIME,H0                IF PROCESSING SUBLIST...BACK UP 59900000
         BE    ILTERM                    EQUALS SIGN NOT VALID HERE     59920000
         B     LEGOP1                   TREAT AS OKAY                   59940000
*   RIGHT PARENTHESIS                                                   59960000
RPAR01   BAL   R1,DPARCT                DECREMENT PAREN LEVEL           59980000
         BNL   LEGOP1                   BR IF NOT EXCESS R PAREN        60000000
         MVI   ERRCOD,1                 SIGNAL MAIN PROGRAM POS. ERROR  60020000
         BCT   INPTR,COM01A             BACK UP ONE, SET TO RETURN      60040000
*   BLANK                                                               60060000
BLK01    BCTR  INPTR,0                  BACK UP ONE                     60080000
         CLI   0(INPTR),COMMA           WAS IT COMMA BLANK              60100000
*   COMMA,BLANK ... POSSIBLE ALTERNATE FORMAT                           60120000
         BNE   STRET                    NOT COMMA BLANK, WRAP IT UP     60140000
         CLI   PARLVL+1,0                                               60160000
         BNE   NOBAL                   UNBALENCED PARENS                60180000
         ST    INPTR,ENDCOL             PREPARE FOR NEXT CARD           60200000
         LA    INPTR,1(0,INPTR)         POINT TO CONTINUATION COL (73)  60220000
         TM    SWTCH4,CONBIT            IS CONTINUATION BIT ON          60240000
         BZ    NULOP                    OUTPUT OMITTED OPERAND IF NOT   60260000
         L     LINK,GETAD               GET NEXT                        60280000
         BALR  LINK,LINK                 CARD                           60300000
         DC    AL2(4)                                                   60320000
         CLI   0(INPTR),BLANK           WAS LAST ONE CONTINUED .Q       60340000
         BNE   ALTFMT                   BR IF YES, ELSE                 60360000
         B     NULOP                    OUTPUT OMITTED OPERAND          60380000
STRET    CLI   PARLVL+1,0                                               60400000
         BNE   NOBAL                    ERROR,PARENS DO NOT BALANCE     60420000
         LA    INPTR,1(0,INPTR)                                         60440000
         BAL   R1,PUTST1                      OUTPUT TEXT               60460000
         B     RETLEG                   ALL OK,PRESS ON                 60480000
ALTFMT   CLC   NPRIME,H0                CHECK SUBLIST OPERAND COUNT     60500000
         BNE   SUBNXT              PROCESSING SUBLIST                   60520000
         BCT   OPTR,NXTOP1         GET NEXT OPERAND                     60540000
*   COMMA,COMMA OR COMMA,BLANK..OUTPUT OMITTED OPERAND                  60560000
NULOP    MVC   0(3,OPTR),OMITOP         OUTPUT OPERAND                  60580000
         LA    OPTR,3(0,OPTR)           UPDATE POINTER                  60600000
         B     RETLEG                                                   60620000
OMITOP   DC    AL1(O),X'270032'         OMITTED OPERAND                 60640000
         EJECT                                                          60660000
*    LEFT PARENTHESIS                                                   60680000
CAT02    BAL   R1,APARCT                UP IT                           60700000
         BAL   R4,TESTND                ADVANCE INPUT POINTER           60720000
         OI    MVBYTE,X'10'             INDICATE LEFT PAREN READ        60740000
         B     LEGP1A                   RETURN FOR NEXT STRING          60760000
*   FIRST CHARACTER IS A QUOTE                                          60780000
CAT03    OI    MVBYTE,2                 ENTER QUOTE MODE                60800000
         BAL   R4,TESTND                ADVANCE INPUT POINTER           60820000
         CLI   0(INPTR),QUOTE           TEST FOR SECOND QUOTE           60840000
         BNE   QUCAT5                   BR IF NOT                       60860000
QURTRN   NI    MVBYTE,X'FD'             PAIRED QUOTES, IGNORE           60880000
         BAL   LINK,OUTIT               CHECK OPERAND LENGTH.           60900000
         B     LEGOP1                   LEAVE QUOTE MODE                60920000
*   ...BUT NOT PAIRED QUOTES- LOOK FOR AMPERSANDS AND NEXT QUOTE        60940000
QUCAT5   CLI   0(INPTR),AMPSND          ONLY OTHER SIGNIFICANT CHAR.    60960000
         BNE   QUCAT6                   IGNORE IT IF IT AIN'T           60980000
         BAL   R4,TESTND                ADVANCE INPUT POINTER           61000000
         CLI   0(INPTR),AMPSND          IF PAIRED AMPS,IGNORE           61020000
         BNE   GTVSYM                   ELSE.. PROCESS VARIABLE SYMBOL  61040000
QUCAT6   BAL   R4,TESTND                ADVANCE INPUT POINTER           61060000
         BAL   LINK,OUTIT               CHECK OPERAND LENGTH            61070000
QUCAT7   CLI   0(INPTR),QUOTE           KEEP LOOKING FOR QUOTE          61080000
         BE    QURTRN                   FOUND IT...LEAVE                61100000
         B     QUCAT5                   KEEP LOOKING                    61120000
*        PROCESS  VARIABLE SYMBOL                                       61140000
GTVSYM   BAL   LINKR,ISVSYM                                             61160000
         LR    INPTR1,INPTR             RESET POINTER                   61180000
         B     QUCAT7                   PRESS ON                        61200000
*    OUTPUTS ANY TEXT PRECEDING VARIABLE SYMBOL                         61220000
*        AND SWALLOWS EXPLICIT CONCAT. DOT IF IT EXISTS                 61240000
*              BAL  LINKR,ISVSYM                                        61260000
ISVSYM   ST    LINKR,SVLNR1                                             61280000
         TM        SWTCH1,16           VAR SYM INVALID AS               61300000
         BO        ILPROT                PROTOTYPE KW PARM              61320000
         BCTR  INPTR,0                  POINT TO INITIAL AMPERSAND      61340000
         BAL   R1,PUTST1                                                61360000
         TM    SWTCH7,64                DOES THIS CONTINUE A CONCAT     61380000
         BO    ISVS1                      STRING .Q. BR IF YES          61400000
         MVI   0(OPTR),EVAL                                             61420000
         MVI   1(OPTR),EVAL             EVAL FLAG                       61440000
         LA    OPTR,2(0,OPTR)                                           61460000
ISVS1    BAL   LINK,VARSYM              PROCESS V.S.                    61480000
*        (ON RETURN, RREG POINTS TO RSTACK FLAG BYTE)                   61500000
         CLI   8(RREG),X'80'            TEST FOR UNSUBSCRIPTED SYSLIST  61520000
         BE    ILSYSL                   ERROR                           61540000
         OI    SWTCH7,64                NXT TIME ... NO EVAL FLAG       61560000
         L     LINKR,SVLNR1                                             61580000
         CLI   0(INPTR),DOT             TEST EXPLICIT CONCATENATION     61600000
         BCR   7,LINKR                  (BNE) NO- RETURN                61620000
         LA    INPTR,1(0,INPTR)         SWALLOW PERIOD                  61640000
         BR    LINKR                   RETURN                           61660000
         EJECT                                                          61680000
*        INITIAL AMPERSAND                                              61700000
CAT04    BAL   R4,TESTND                ADVANCE INPUT POINTER           61720000
         CLI   0(INPTR),AMPSND          TEST FOR SECOND AMP             61740000
         BE    LEGOP1                   PAIRED AMPS...JUST TEXT         61760000
         BAL   LINKR,ISVSYM             PROCESS V.S.                    61780000
         LR    INPTR1,INPTR             RESET INPUT POINTER             61800000
         B     LEGOP2                                                   61820000
*                                                                       61840000
*                                                                       61860000
*     ONLY SIGNIFICANT STRING IS L'                                     61880000
CAT06    BCTR  INPTR,0                  BACK UP ONE                     61900000
         CLI   0(INPTR),L               QUOTE PRECEDED BY LETTER..L     61920000
         LA    INPTR,1(0,INPTR)                                         61940000
         BNE   CAT03                    JUST A CHARACTER STRING         61960000
         BAL   R4,TESTND                GET NEXT CHARACTER              61980000
         BAL   R4,TSTLET                DOES A LETTER FOLLOW            62000000
         BCT   INPTR,CAT03              NO,..POINT TO QUOTE             62020000
         B     LEGOP2                   YES,TREAT AS TEXT               62040000
         EJECT                                                          62060000
*   SCAN FOR POSSIBLE SELF DEFINING TERM                                62080000
CAT07    BAL   LINK,TSTSDT              IS S.D.T. VALID NOW             62100000
         BNE   CAT03                    NO...JUST A CHARACTER STRING    62120000
         ST    OPTR,SVOPTR                                              62140000
         MVI   0(OPTR),N                STORE TYPE 'N'                  62160000
         LA    OPTR,1(0,OPTR)                                           62180000
         BCTR  INPTR,0                  POINT TO LETTER                 62200000
         BAL   LINK,AT20                PROCESS S.D.T.,IF VALID         62220000
         B     BKITUP                   NOT A LEGAL S.D.T,ONLY CHARS.   62240000
*    S.D.T MUST STAND ALONE, HENCE TERMINATOR MUST BE END OF OPERAND    62260000
         CLI   0(INPTR),COMMA           COMMA                           62280000
         BE    LEGSDT                                                   62300000
         CLI   0(INPTR),BLANK           BLANK                           62320000
         BE    LEGSDT                                                   62340000
         CLI   0(INPTR),RPAREN          RIGHT PAREN                     62360000
         BNE   CAT07A                   GIVE IT ONE MORE CHANCE         62380000
         BAL   R1,DPARCT                REDUCE PAREN COUNT              62400000
         BNL   BKITUP                   NOT A SUBLIST                   62420000
         OI    ERRCOD,1                 EXCESSIVE RGT. PAREN            62440000
LEGSDT   L     INPTR1,INTPTR            OUTPUT CHARACTER STRING         62460000
         BAL   R1,PUTSTR                OUTPUT CHARACTER STRING         62480000
         B     RETLEG                   END OF OPERAND                  62500000
*                                                                       62520000
CAT07A   C     INPTR,ENDCOL             VALID STAND ALONE IF TRUE       62540000
         BNH   BKITUP                   S.D.T. DOES NOT STAND ALONE     62560000
         MVI   0(INPTR),BLANK           DUMMY UP END OF CARD            62580000
         B     LEGSDT                   AND PROCESS OPERAND             62600000
BKITUP   L     OPTR,SVOPTR              RESET POINTER                   62620000
         L     INPTR,INTPTR              RESCAN TEXT                    62640000
         LR    INPTR1,INPTR              AS CHARACTER STRING ONLY       62660000
         B     LEGOP1                                                   62680000
*                                                                       62700000
         EJECT                                                          62720000
*   ALPHAMERIC STRING HEADED BY A DIGIT                                 62740000
CAT11    CLI   0(INPTR),BLANK           IF IT DOESN'T STAND ALONE       62760000
         BE    BLK11                    TREAT IT JUST AS MORE TEXT      62780000
         CLI   0(INPTR),X'FF'           HAS END OF STMT BEEN REACHED .Q 62800000
         BE    LEGP1A                   BIF YES, LEGP1A-CAT00A-CAT12-11 62820000
         CLI   0(INPTR),COMMA            IN A CHARACTER STRING          62840000
         BE    COM11                                                    62860000
         CLI   0(INPTR),RPAREN                                          62880000
         BE    RPAR11                                                   62900000
         CLI   0(INPTR),LPAREN                                          62920000
         BE    CAT11A                   LEFT PAREN TERMINATED           62940000
         BH    LEGOP2                   TREAT STRING AS TEXT            62960000
CAT11A   BAL   LINK,TSTSDT              DETERMINE IF SYMBOL VALID HERE  62980000
         BE    CAT11B                   POSSIBLY                        63000000
         B     LEGOP2                   NO -EDIT AS TEXT                63020000
CAT11B   CH    2,H24                    MUST HAVE COME HERE VIA CAT12   63040000
         BNE   LEGOP2                   NO -TREAT STRING AS TEXT        63060000
         ST    INPTR,SVLNR1             SAVE POINTERS FOR POSSIBLE      63080000
         ST    OPTR,SVOPTR                BACK UP                       63100000
         L     INPTR,SAVEIN             POINT TO FIRST BYTE OF STRING   63120000
         LA    OPTR,1(0,OPTR)           GENERATE ONE DUMMY BYTE         63140000
         BAL   LINK,ATR18               TRY TO EDIT AS A SYMBOL         63160000
         B     CAT11C                   RETURNS HERE IF INVALID, ELSE   63180000
         LA    OPTR,3(0,OPTR)           CREATE THE DUMMY AND CONTINUE   63200000
         OI    MVBYTE,X'40'               PROCESSING THE OPERAND        63220000
         CLI   0(INPTR),RPAREN                                          63240000
         BE    LEGOP1                                                   63260000
         B     LEGOP2                                                   63280000
CAT11C   L     OPTR,SVOPTR              BACK UP POINTERS AND            63300000
         L     INPTR,SVLNR1                                             63320000
         B     LEGOP2                     PROCESS THE OPERAND AS TEXT   63340000
*   COMMA                                                               63360000
COM11    CLI   PARLVL+1,0               IF PARENS DON'T BALANCE         63380000
         BNE   LEGOP1                   NOT SIGNIFICANT COMMA           63400000
*   BLANK                                                               63420000
BLK11    CLI   PARLVL+1,0                                               63440000
         BNE   NOBAL                    ERROR                           63460000
BLK11A   BAL   LINK,TSTSDT              IS S.D.T. LEGIT HERE            63480000
         BE    POSDSD                   RETURNS HERE IF YES, ELSE       63500000
BLK11B   BAL   R1,PUTST1                OUTPUT TEXT                     63520000
         B     RETLEG                    AND RETURN                     63540000
*RIGHT PAREN                                                            63560000
RPAR11   BAL   R1,DPARCT                IF PAREN COUNT NOT NEG          63580000
         BNL   PAR11A                   CHECK ON PRECEDING TEXT         63600000
         OI    ERRCOD,1                SET EXCESSIVE RGT PAREN          63620000
         B     BLK11A                                                   63640000
PAR11A   BAL   R4,TESTND                ADVANCE INPUT POINTER AND       63660000
         B     CAT11A                     CONTINUE TESTS                63680000
POSDSD   ST    INPTR,SVLNR1             SAVE POINTERS                   63700000
         ST    OPTR,SVOPTR              FOR POSSIBLE BACKUP             63720000
         LR    INPTR,INPTR1             POINT TO FIRST CHAR.            63740000
         MVI   0(OPTR),N                TYPE 'N'                        63760000
         LA    OPTR,1(0,OPTR)           UPDATE POINTER                  63780000
         CH    2,H24               IF ENTERED FROM AN-STG BRANCH        63800000
         BE    POSSYM              YES... MAY BE SYMBOL                 63820000
         BAL   LINK,AT18                PROCESS DSDT                    63840000
         B     BKUP1                    BACKIT UP                       63860000
         BAL   R1,PUTSTR                                                63880000
         B     RETLEG                                                   63900000
BKUP1    L     OPTR,SVOPTR                                              63920000
         L     INPTR1,INTPTR            RESET POINTERS                  63940000
         L     INPTR,SVLNR1                                             63960000
         B     BLK11B                                                   63980000
POSDS1   BAL   R1,PUTSTR           OUTPUT STRING                        64000000
         B     RETLEG                                                   64020000
POSSYM   BAL   LINK,ATR18               TRY TO EDIT AS SYMBOL           64040000
         B     BKUP1                    NO, JUST A CHARACTER STRING     64060000
         LA   OPTR,3(0,OPTR)            YES, SYMBOL WAS TAKEN CARE OF   64080000
         B     POSDS1              FOLLOWED BY THE TEXT                 64100000
H24      DC    H'24'                                                    64120000
         EJECT                                                          64140000
*    ALPHAMERIC STRING HEADED BY LETTER                                 64160000
CAT12A   LA    2,24                     DUMMY IT UP                     64180000
CAT12    CLI   0(INPTR),EQUALS          POSSIBLE KEY WORD               64200000
         BNE   CAT11                     NOPE                           64220000
         CLC   NPRIME,H0                CHECK SUBLIST COUNT             64240000
         BNE   EQU01                    PROCESSING SUBLIST              64260000
         BAL   LINK,TSTSD1              LAST CHECK FOR K.W.             64280000
         BNE   EQU01                    NO KEYWORD HERE                 64300000
         TM    SWTCH7,32             IF ALREADY PROCESSING KEYWORD 6608 64320000
         BO    EQU01                   KILL IT                     6608 64340000
         BCTR  OPTR,0                                                   64360000
         BAL   R1,PUTPUT                OUTPUT KEYWORD FLAG             64380000
         DC    AL2(KEYFLG)                                              64400000
         BAL   R1,PUTSTR                NOW THE NAME                    64420000
         BAL   LINK,UPKEY               INCREMENT KEY COUNTER           64440000
         OI    SWTCH7,32                SET K.W. INDICATOR              64460000
         CLI   0(INPTR),BLANK                                           64480000
         BE    BLNKOP                   OMITTED OPERAND,END OF M-I      64500000
         C     INPTR,ENDCOL             MAY BE END OF CARD              64520000
         BH    BLNKOP                   OMITTED OPERAND                 64540000
         BAL   LINK,NXTOP0         PROCESS NEXT OPERAND                 64560000
         B         MISCAN2         HERE WE GO AGAIN                     64580000
*                                                                       64600000
KEYPOS   DS    0H                                                       64610000
         TM    PARBYT1,EXTEN            IS EXTEN ON .Q                  64620000
         BCR   1,LINK                   IGNORE ERROR IF YES       V7A53 64630028
         ST    LINK,SAVEM+4             SAVE RETURN REGISTER            64640000
         BAL   LINK,WRNERR              SET ERROR MESSAGE, POSITIONAL   64650000
         DC    AL1(ERRR22)              PARAMETER FOLLOWS KEYWORD       64660000
         DC    AL1(ERRST)               PARAMETER                       64670000
         L     LINK,SAVEM+4             RESTORE RETURN REGISTER         64680000
         BR    LINK                     AND RETURN                      64690000
*TESTND    UPDATES THE INPUT POINTER AND BRINGS IN THE NEXT             64700000
*         CARD IF PAST ENDCOL                                           64720000
*        TSTND1 DOES NOT UPDATE INPUT POINTER                           64740000
*                        BAL  R4,TESTND  OR  BAL R4,TSTND1              64760000
TESTND   LA    INPTR,1(0,INPTR)                                         64780000
TSTND1   C     INPTR,ENDCOL             TEST IF INPTR PAST END COLUMN   64800000
         BCR   13,R4                    NO...RETURN                     64820000
TSTND2   NI    MVBYTE,X'FE'             TURN OFF NEW CARD INDICATOR     64840000
         TM    SWTCH4,X'02'             PROCESSING M-I .Q               64860000
         BO    WASMI                    PRESENTLY PROCESSING M-I        64880000
TSTRET   BR    R4                       RETURN                          64900000
WASMI    TM    SWTCH4,CONBIT            IS IT CONTINUED                 64920000
         BZ    TSTQUT                   END OF LOGICAL CARD - GO EXIT   64940000
         ST    LINK,SAVEM+4                                             64960000
         L     LINK,GETAD               GET NEXT                        64980000
         BALR  LINK,LINK                 CARD                           65000000
         DC    AL2(4)                                                   65020000
         L     LINK,SAVEM+4                                             65040000
         OI    MVBYTE,1                 INDICATE NEW CARD READ          65060000
         BR    R4                                                       65080000
TSTQUT   TM    MVBYTE,2                                                 65100000
         BO    NOQUOT                                                   65120000
         BR    R4                      RETURN TO CALLER                 65140000
         EJECT                                                          65160000
*  TSTLET    ...TEST FOR LEGITIMATE LETTER                              65180000
*              CALLING SEQUENCE                                         65200000
*                 BAL  R4,TSTLET                                        65220000
*                     RETURNS TO 0(R4) IF NOT A LETTER                  65240000
*                     RETURNS TO 4(R4) IF IT IS A LETTER                65260000
TSTLET   CLI   0(INPTR),ATSIGN                                          65280000
         BCR   2,R4                     OUTSIDE RANGE OF LETTERS        65300000
         CLI   0(INPTR),N9                                              65320000
         BCR   13,R4                    DIGIT IS NO GOOD                65340000
         B     4(R4)                    IS LEGIT                        65360000
*     ROUTINE DETERMINES IF A SELF DEFINING TERM IS ALLOWED AT THIS     65380000
*        PARTICULAR POINT IN THE MACRO INSTRUCTION OPERAND              65400000
*              CALLING SEQUENCE IS    BAL  LINK,TSTSDT                  65420000
*              RETURNS TO 0(LINK)..IF IT IS LEGIT W/C.C. SET TO 8       65440000
*              RETURNS TO 4(LINK) .. IF NOT ALLOWED         (FOR EQUAL) 65460000
TSTSDT   CH    2,H24                                                    65480000
         BNE   TSTSD1                   NOT SYMBOL,MAY BE LEGIT SDT     65500000
         TM    SWTCH5,X'41'            MUST BE OPEN CODE OR EXTEN PARM  65520000
         BZ    4(0,LINK)                NOT MAINLINE CODE...RETURN      65540000
         TM    SWTCH1,MASK3             IS A PROTO EXPECTED .Q          65550000
         BO    4(0,LINK)                THEN NO SDT HERE                65555000
         TM    MVBYTE,X'20'             =1 IF SDT DISALLOWED HERE       65560000
         BCR   8,LINK                   (BZ) NO- RETURN                 65580000
TSTSD1   TM    MVBYTE,X'30'             MUST NOT HAVE PRECEDING TEXT    65600000
         BCR   7,LINK                   (BNZ) TEXT PRECEDES THIS TERM   65620000
         C     INPTR1,INTPTR            WAS THIS FIRST ACTION           65640000
         BR    LINK                     PASSED INITIAL TEST WITH HONORS 65660000
         EJECT                                                          65680000
*ROUTINE 'PROSCN'                                                       65700000
*FUNCTION- CHECKS PROTOTYPE OPERAND FIELD SYNTAX AND EDITS TO OUTPUT    65720000
*   BUFFER.                                                             65740000
*   ENTERS PARAMETERS INTO LOCAL DICTIONARY FOR THE MACRO.              65760000
*   WRITES OUT PROTOTYPE EDITED TEXT RECORD AND KEYWORD OPERAND         65780000
*   VALUE RECORDS.                                                      65800000
*OPERATION- EACH PARAMETER IS ASSIGNED A PARAMETER NUMBER, STARTING     65820000
*   WITH POSNOINT  (0 - &SYSNDX, 1 - &SYSECT, 2 - &SYSDATE,             65840000
*   3 - &SYSTIME, 4 - &SYSTYP, 5 - &SYSPARM, 6 - THE NAME               65850000
*   FIELD BY THE 'PROTO' ROUTINE). ALL POSITIONAL PARAMETERS MUST       65860000
*   PRECEDE ALL KEYWORD PARAMETERS. THE VARIABLE SYMBOLS AND PARAMETER  65880000
*   NUMBERS ARE PLACED IN THE LOCAL DICTIONARY FOR THE MACRO. FOR       65900000
*   POSITIONAL PARAMETERS, THE ONLY EDITED OUTPUT IS THE TOTAL NUMBER   65920000
*   OF PP'S, INSERTED INTO THE PROTOTYPE EDITED TEXT RECORD. FOR        65940000
*   KEYWORDS, THE NAME AND OPERAND VALUE ARE PLACED IN AN EDITED TEXT   65960000
*   OPERAND VALUE RECORD.                                               65980000
*ENTRY POINT-                                                           66000000
*        B     PROSCN                                                   66020000
*EXTERNAL ROUTINES-                                                     66040000
*   OUTIT1- ADJUSTS INPUT POINTERS.                                     66060000
*   TESTND- DITTO, AND GET NEXT CARD IF NEEDED.                         66080000
*   TSTLET- TESTS IF CHARACTER IS ALPHABETIC.                           66100000
*   TRTEST- SCANS FOR TERMINATORS.                                      66120000
*   OUTITA- SHIFTS INPUT BUFFER LEFT TO MAKE ROOM FOR MORE.             66140000
*   GETSRC- GETS CONTINUATION CARDS.                                    66160000
*   PUTSTR- MOVES KEYWORD NAMES TO OUTPUT BUFFER.                       66180000
*   NXTOP0- PROCESSES OPERANDS OF KEYWORD PARAMETERS.                   66200000
*   ENDOPR- WRITES OUT EDITED RECORDS.                                  66220000
*   ENTDCT- MAKES DICTIONARY ENTRIES.                                   66240000
*   WRNERR- WRITES OUT ERROR WARNING MESSAGES.                          66260000
*NORMAL EXITS-                                                          66280000
*   IF NO KEYWORD PARAMETERS,                                           66300000
*        B     NDPSCN                                                   66320000
*   IF ANY KEYWORDS,                                                    66340000
*        B     RPUPFD                                                   66360000
*ERROR EXITS- ON SYNTAX ERRORS, TO ONE OF THE FOLLOWING-                66380000
*   ILPROT                                                              66400000
*   ILSYSL                                                              66420000
*   ABSERR                                                              66440000
PROSCN   DS    0H                                                       66450000
         SR    LINK,LINK                ZERO A WORK REGISTER            66460000
         STH   LINK,NRKEY               ZERO KEYWORD PARAMETER COUNT    66470000
         STH   LINK,POSNO               ZERO POSITIONAL PARAMS          66480000
         BAL   LINK,OUTIT1              SET INPUT POINTERS              66500000
PRSCN1   CLI   0(INPTR),AMPSND             MUST BE FIRST CHAR.          66520000
         BNE   PRBLK                    BETTER BE A BLANK               66540000
         BAL   R4,TESTND                STEP INPTR, GET CARD IF NEEDED  66560000
         BAL   R4,TSTLET                TEST FOR ALPHA                  66580000
         BAL   LINK,ILVSWR1             ERROR...INVALID V.S. (WARNING)  66600000
         BAL   LINK,TRTEST              GET NEXT TERMINATOR             66620000
         LR    INPTR,1                                                  66640000
         CLI   0(INPTR),COMMA                                           66660000
         BNE   NOTCOM                   NOT A COMMA                     66680000
         BAL   R1,ISVALD                IF PARAMETER IS VALID,PROCESS   66700000
PRSCN2   BAL   LINK,OUTITA               MOVE TO BEGIN. OF INPUT        66720000
         B     PRSCN1                   GET NEXT PARAMETER              66740000
NOTCOM   CLI   0(INPTR),BLANK                                           66760000
         BE    NTCMA               VALID TERMINATOR                     66780000
         C     INPTR,ENDCOL        MAY BE END OF CARD                   66800000
         BNH   NTBORC              BETTER BE EQUALS                     66820000
NTCMA    BAL   R1,ISVALD                IF ENDCOL, CHECK FOR VALID V.S. 66840000
NTCM1    DS    0H                                                 V7A53 66860028
         CLC   NRKEY,H0                 ANY KEYWORDS FOUND .Q     V7A53 66862028
         BE    NTCM2                    BRANCH IF NONE            V7A53 66864028
         L     LINK,VENTKWB             KEYWORD ADJUST ROUTINE    V7A53 66866028
         BALR  LINK,LINK                REASSIGN KW POS NUMBERS   V7A53 66868028
         B     NTCM3                    GO TO RETURN              V7A53 66870028
NTCM2    DS    0H                                                 V7A53 66872028
         BAL   LINKR,RPPFD1             INSERT PROTO START STMT   V7A53 66874028
NTCM3    DS    0H                                                 V7A53 66876028
         B     NDPSCN                   END OF PROTO STATEMENT- EXIT    66880000
*                                                                       66900000
PRBLK    CLI   0(INPTR),BLANK                                           66920000
         BNE   PRCOM                    BRANCH IF NOT TO CHECK COMMA    66940000
         BCTR  INPTR,0                                                  66960000
         CLI   0(INPTR),COMMA                                           66980000
         BNE   NTCM1                    END OF PROTOTYPE                67000000
         TM    SWTCH4,CONBIT            ALTERNATE FMT IF CARD FOLLOWS   67010000
         BO    PRBLK1                   CONTINUATION IS PRESENT         67020000
         TM    PARBYT1,EXTEN            IS EXTEN ON .Q                  67030000
         BZ    ILPROT                   NO, ERROR AS WITH (F)           67040000
*./      DELETE    SEQ1=67050027,SEQ2=67055027                    V7A53 67050028
         B     NTCM1                    OTHERWISE END OF PROTOTYPE      67060000
PRBLK1   DS    0H                                                       67070000
         ST    INPTR,ENDCOL             PREPARE FOR NEXT CARD           67080000
         LA    INPTR,1(,INPTR)          BUMP PAST COMMA                 67090000
         L     LINK,GETAD               BR TO GETSRC FOR NEXT CARD      67100000
         BALR  LINK,LINK                                                67120000
         DC    AL2(4)                                                   67140000
         CLI   0(INPTR),BLANK                                           67160000
         BE    ILPROT                   ERROR...OMITTED OPERAND         67180000
         BCT   INPTR,PRSCN2             PNT TO COMMA,GET NEXT PARAM.    67200000
*  TERMINATOR IS NOT BLANK OR COMMA. CHECK IF KEYWORD.                  67220000
NTBORC   CLI   0(INPTR),EQUALS                                          67240000
         BNE   ILPROT                   ILLEGAL TERMINATOR              67260000
         CLC   NRKEY,H0                 HAVE WE BEEN HERE BEFORE        67280000
         BNE   *+8                      YES                             67300000
         BAL   LINKR,RPPFD1             NO- INITIALIZE FOR KEYWORDS     67320000
*                                                                       67340000
         L     INPTR1,INTPTR            BACK TO START OF KW             67360000
         BAL   LINK,UPKEY               INCREMENT KW COUNTER      V7A53 67380028
         BAL   R1,ISVLD1                ENTER KW NAME, IF VALID   V7A53 67400028
         MVI   0(OPTR),KEYFLG           KW FLAG TO OUTPUT BUFFER        67420000
         LA    OPTR,1(0,OPTR)                                           67440000
         LA    INPTR1,1(0,INPTR1)       GET PAST AMPERSAND              67460000
*        IF TERMINATOR ENDED CARD, LOOK FOR A CONTINUATION              67480000
         BAL   R4,TESTND                                                67500000
         BAL   R1,PUTSTR                KW NAME TO OUTPUT BUFFER        67520000
         OI    SWTCH7,32           SET K.W. INDICATOR                   67540000
         CLI   0(INPTR),BLANK           IS OPERAND OMITTED              67560000
         BE    BLNKOP                   YES...END OF ALL OPERANDS       67580000
         C     INPTR,ENDCOL        MAY BE END OF CARD                   67600000
         BH    BLNKOP              YES...OUTPUT OMITTED OPERAND         67620000
         BAL   LINK,NXTOP0              PROCESS OPERAND                 67640000
         B     PRSCN1                   GET NEXT PARAMETER              67660000
*                                                                       67662000
PRCOM    DS    0H                                                       67664000
         TM    PARBYT1,EXTEN            IS EXTEN ON .Q                  67666000
         BZ    ILPROT                   INVALID TERMINATOR IF NOT       67668000
         CLI   0(INPTR),COMMA           NULL POSITIONAL OPERAND .Q      67670000
         BNE   ILPROT                   INVALID TERMINATOR IF NOT       67672000
         BAL   LINKR,UPPOS              INCREMENT POSITIONAL COUNT      67674000
         BAL   LINK,OUTITA              GET NEXT PARAMETER              67676000
         B     PRSCN1                   GET NEXT PARAMETER              67678000
*                                                                       67680000
BLNKOP   MVC   1(3,OPTR),OMITOP                                         67700000
         LA    OPTR,4(0,OPTR)           OUTPUT OMITTED OPERAND          67720000
         MVI   OUTPUT,SMSPAR            RECORD TYPE INTO FIRST BYTE     67740000
          B    RPUPFD                   TERMINATE PROTO. SCAN           67760000
*                                                                       67780000
*        WRAP UP POSITIONAL PARAMS                                      67800000
*                                                                       67820000
RPPFD1   DS    0H                                                       67840000
         MVC   0(2,OPTR),POSNO         NUMBER OF POSITIONAL PARAMS      67860000
         LA    OPTR,1(,OPTR)           BUMP OUTPUT POINTER TO END       67870000
         OI    SWTCH6,4                FORCE LOOKUP BYPASS IN ENDOPR    67880000
         BAL   LINK,ENDOPR              WRITE PROTO EDITED TEXT RECORD  67900000
         BR    LINKR                    RETURN                          67920000
*    ISVALD    VALIDATES  PARAM. AND MAKES DICTIONARY ENTRY             67940000
*              BAL  R1,ISVALD           FOR POSITIONAL PARAMETERS       67960000
*              BAL  R1,ISVLD1           FOR KEY WORD PARAMETERS         67980000
ISVALD   DS    0H                                                       67990000
         CLC   NRKEY,H0                 ANY KEYWORD PARMS .Q            68000000
         BE    ISVLD1                   BRANCH IF NONE                  68010000
         BAL   LINK,KEYPOS              ERROR PP FOLLOWS KW  (WARNING)  68020000
ISVLD1   DS    0H                                                       68030000
         TM    SWTCH7,X'10'             IS PARAMETER ERROR SWITCH ON .Q 68040000
         BZ    *+10                     BIF NO                          68060000
         NI    SWTCH7,X'EF'             YES, SO RESET IT                68080000
         BR    R1                       AND RETURN.                     68100000
*                                                                       68120000
         CLC   1(7,INPTR1),SYSL                                         68140000
         BE    ILSYSL                   SYSLIST ILLEGAL PARAM           68160000
         CH    R2,H6                    360 LENGTH OF STRING            68180000
         LR    LINK,R1                  SET RETURN IF ERROR             68200000
         BH    ILVSWR                   TOO MANY CHARACTERS             68220000
         LA    R2,1(0,R2)               ONE FOR THE AMPERSAND           68240000
         EX    R2,MOV3                  MOVE TO ENTRY AREA FOR DICT     68260000
         STC   R2,DCAREA                STORE LENGTH                    68280000
         OI    DCAREA,PSYM              FLAG BYTE                       68300000
         BAL   LINKR,UPPOS              BUMP POSITIONAL COUNT           68320000
         AH    WORK1,POSNOINT           PLUS INITIAL DUMMIES            68340000
         SH    WORK1,NRKEY              LESS NUMBER OF KEYWORDS   V7A53 68342028
         CLI   0(INPTR),EQUALS          KEYWORD .Q                V7A53 68344028
         BNE   ISVLD3                   BRANCH IF NOT             V7A53 68346028
         LH    WORK1,NRKEY              KEYWORD NUMBER            V7A53 68348028
         LNR   WORK1,WORK1              -(MINUS) KEYWORD NUMBER   V7A53 68350028
ISVLD3   DS    0H                                                 V7A53 68352028
         STH   WORK1,DUMMY              SAVE RESULTS                    68360000
         LA    WORK1,DCAREA+2(R2)       BUMP PAST SYMBOL                68380000
         MVC   0(2,WORK1),DUMMY         ENTER POSITIONAL SEQUENCE NO.   68400000
*./      DELETE    SEQ1=68420020,SEQ2=68520020                          68520000
*    ALL SET  TO MAKE DICTIONARY ENTRY                                  68540000
         L     LINK,DUSING              ADDRESS OF DICTIONARY ROUT.     68560000
         BALR  LINK,LINK                MAKE DICTIONARY ENTRY           68580000
         CLI   DERR,0                                                   68600000
         BCR   8,R1                     RETURN IF NO DUPLICATES         68620000
ISVLD2   BAL   LINK,WRNERR              DUPLICATE SYMBOLIC PARAMETER    68640000
         DC    AL1(ERRR47)                                              68660000
         DC    AL1(ERRST)                                               68680000
         BR    R1                       RETURN                          68700000
PSYM     EQU   X'48'                    PARAMETER FLAG FOR DICT.        68720000
*                                                                       68740000
MOV3     MVC   DCAREA+1(*-*),0(INPTR1) ENTER PARAMETER NAME             68760000
ILVSWR1  OI    SWTCH7,X'10'             SET PARAMETER ERROR SWITCH      68780000
ILVSWR   ST    LINK,SAVEM+4             SAVE LINK                       68800000
         BAL   LINK,WRNERR              INVALID FORMAT FOR V.S.         68820000
         DC    AL1(ERRR43)                                              68840000
         DC    AL1(ERRST)                                               68860000
         L     LINK,SAVEM+4             RESTORE LINK                    68880000
         BR    LINK                     AND RETURN.                     68900000
*                                                                       68920000
*          SUBROUTINE TO UPDATE KEYWORD PARAMETER COUNT                 68940000
*           BAL     LINK,UPKEY                                          68960000
*                                                                       68980000
UPKEY    LH    WORK1,NRKEY                                              69000000
         LA    WORK1,1(,WORK1)          INCREMENT K.W. COUNT            69020000
         STH   WORK1,NRKEY                                              69040000
         BR    LINK                                                     69060000
         SPACE 2                                                        69062000
*                                                                       69064000
*        SUBROUTINE TO UPDATE AND CHECK POSITIONAL PARAM COUNT          69066000
*        BAL   LINKR,UPPOS                                              69068000
*        RETURNS WORK1 CONTAINS CURRENT UPDATED COUNT                   69070000
*                                                                       69072000
UPPOS    DS    0H                                                       69074000
         LH    WORK1,POSNO              GET CURRENT COUNT               69076000
         LA    WORK1,1(,WORK1)          UPDATE COUNT BY ONE             69078000
         STH   WORK1,POSNO              SET CURRENT NEW COUNT           69080000
         CH    WORK1,POSNOMAX           IS IT TOO BIG .Q                69082000
         BCR   13,LINKR                 (BNHR) RETURN IF NOT            69084000
MANYERR  DS    0H                                                       69086000
         BAL   LINK,ABSERR              TOO MANY POSITIONAL             69088000
         DC    AL1(ERRR23)              PARAMETERS IN                   69090000
         DC    AL1(ERRST)               MACRO PROTOTYPE                 69092000
*PUTSTR                                                                 69100000
*        ROUTINE TO WRITE INPUT TEXT TO THE OUTPUT BUFFER               69120000
*        BAL   R1,PUTSTR                                                69140000
*        (RETURN)                                                       69160000
PUTST1   C     INPTR1,INTPTR            OUTPUT TYPE BYTE ONLY IF        69180000
         BH    PUTSTR                   FIRST ELEMENT OF OPERAND        69200000
         TM    MVBYTE,X'40'               OR IF OPERAND HAS NOT BEEN    69220000
         BO    PUTSTR                     EDITED AS A SYMBOL            69240000
         LR    R4,INPTR                                                 69260000
         SR    R4,INPTR1                                                69280000
         BCR   12,R1                    NO CHARACTERS TO MOVE           69300000
         MVI   0(OPTR),U                TYPE 'UNDEFINED'                69320000
         LA    OPTR,1(0,OPTR)                                           69340000
         B     PUTSTR+6                 OUTPUT TEXT                     69360000
PUTSTR   LR    R4,INPTR                                                 69380000
         SR    R4,INPTR1                R4 = TEXT LENGTH                69400000
         BCR   12,R1                    (BZ) EXIT IF NOTHING TO PUT     69420000
         ST    OPTR,SVPTR               SAVE LOCATION OF C.S. FLAG      69440000
         MVI   0(OPTR),SCEXPR           SET C.S. FLAG IN TEXT           69460000
         STC   R4,1(OPTR)               FOLLOWED BY TRUE LENGTH BYTE    69480000
         BCTR  R4,0                     FOLLOWED BY TEXT                69500000
         EX    R4,PU2                                                   69520000
         LA    OPTR,3(R4,OPTR)          ADVANCE THE OUTPUT POINTER      69540000
         BR    R1                         AND EXIT                      69560000
PU2      MVC   2(*-*,OPTR),0(INPTR1)    OUT-OF-LINE MOVE TEXT           69580000
         EJECT                                                          69600000
LINK     EQU   3                        LINK FROM CALLER.               69620000
*./      DELETE    SEQ1=69640020,SEQ2=69640020                          69640000
*./      DELETE    SEQ1=69660020,SEQ2=69820020                          69820000
ATYPE    EQU   9                                                        69840000
ITYPE    EQU   14                                                       69860000
JTYPE    EQU   18                                                       69880000
MTYPE    EQU   20                                                       69900000
TTYPE    EQU   21                                                       69920000
WTYPE    EQU   13                                                       69940000
WETYPE   EQU   27                                                       69950000
WRKREG   EQU   2                        WORK REGISTER                   69960000
LREG     EQU   WRKREG                                                   69980000
RR0      EQU   5                        LINK REGISTER                   70000000
*./      DELETE    SEQ1=70020022,SEQ2=70020022                          70020000
MASK0    EQU   X'80'                                                    70040000
MASK1    EQU   X'40'                                                    70060000
MASK2    EQU   X'20'                                                    70080000
MASK3    EQU   X'10'                                                    70100000
MASK4    EQU   X'08'                                                    70120000
MASK5    EQU   X'04'                                              V7A08 70130028
MASK6    EQU   X'02'                                              V7A04 70135028
MASK7    EQU   X'01'                                                    70140000
MASK13   EQU   X'50'                                                    70160000
*      ILOPRF- ILLEGAL OPERAND FIELD FORMAT                             70170000
NMASK3   EQU   X'EF'                                                    70180000
NMASK7   EQU   X'FE'                                                    70200000
         EJECT                                                          70220000
*ROUTINE 'GSCAN'                                                        70240000
*FUNCTIONS- GENERAL SCANNER TO CLASSIFY ALL INPUT TEXT EXCEPT SEQUENCE  70260000
*   SYMBOLS, SET OPERANDS, MACRO INSTRUCTION OPERANDS, AND COMMENTS.    70280000
*   SCAN RESULTS ARE RETURNED IN LOCATION GSUMRY.                       70300000
*   INPUT TEXT IS EDITED TO OUTPUT BUFFER.                              70320000
*   OPERAND LIST POINTER (OPNDL) ENTRIES ARE MADE FOR                   70340000
*     1. VARIABLE SYMBOLS,                                              70360000
*     2. ONE SEQUENCE SYMBOL, IF IT IS NOT PRECEDED BY ANYTHING EXCEPT  70380000
*        NORMAL SYMBOLS,                                                70400000
*     3. ONE NORMAL SYMBOL, IF IT IS NOT PRECEDED BY ANYTHING EXCEPT    70420000
*        NORMAL SYMBOLS, BUT ONLY IF IT IS LAST OPERAND BEFORE EXIT.    70440000
*ENTRY POINT-                                                           70460000
*        BAL   LINK,GSCAN                                               70480000
*INPUTS-                                                                70500000
*   GCALL (BYTE)- SCAN EXTENT INDICATOR, SET BY CALLER-                 70520000
*     =0 TO SCAN ENTIRE FIELD (EXIT ON BLANK OR END OF STATEMENT),      70540000
*     =1 TO SCAN ONE OPERAND (EXIT ON COMMA, BLANK, OR END OF STMT).    70560000
*   INPTR (REG)- POINT TO STRING IN INPUT BUFFER.                       70580000
*   OPTR (REG)- POINT TO NEXT FREE LOC IN OUTPUT BUFFER.                70600000
*   RREG- POINT TO FLAG BYTE IN CURRENT OPNDL ENTRY.                    70620000
*OUTPUTS-                                                               70640000
*   GSUMRY (BYTE)- SCAN RESULTS...                                      70660000
*        BIT 0   =1 STRING CONTAINS VARIABLE SYMBOL                     70680000
*            1   =1 STRING CONTAINS A QUOTED STRING                     70700000
*            3   =1 VARIABLE SYMBOL IS CONCATENATED                     70720000
*            4   =1 STRING IS UNCLASSIFIABLE AT THE META LEVEL          70740000
*            5   =1 STRING IS A NORMAL SYMBOL                           70760000
*            6   =1 STRING IS A DECIMAL INTEGER                         70780000
*            7   =1 STRING IS A SEQUENCE SYMBOL                         70800000
*   OPNDL ENTRIES.                                                      70820000
*   EDITED TEXT (IN PHASE F3 INPUT FORMAT) IN OUTPUT BUFFER.            70840000
*EXTERNAL ROUTINES-                                                     70860000
*   TRTEST- ANALYZES OPERAND ELEMENTS. RETURNS CATEGORY AND TYPE NOS.   70880000
*   PUTSTR- MOVES OPERAND ELEMENTS TO OUTPUT BUFFER.                    70900000
*   VARSYM- SCANS VARIABLE SYMBOLS.                                     70920000
*   EOPNDL- CREATES OPNDL ENTRIES.                                      70940000
*NORMAL EXIT-                                                           70960000
*        BR    LINK                                                     70980000
*ERROR EXITS-                                                           71000000
*   GO TO ABSERR VIA...                                                 71020000
*      ILSYSL- UNSUBSCRIPTED SYSLIST                                    71040000
*      NOQUOT- ODD QUOTE COUNT                                          71060000
*                                                                       71080000
GSCAN    STM   2,10,SAVREG                                              71100000
         LA    R3A,GSCAN-USEBAS-4096(,B2)  DEFINE THE BASE              71120000
         USING GSCAN,R3A                TELL IT TO THE ASSEMBLER        71140000
         XC    PARLVL(5),PARLVL         ZERO PAREN NESTS                71160000
         XC    SVPTR(4),SVPTR           ZERO SAVED OUTPUT POINTER       71180000
         LA    R1,RSTACK                RESET RECURSION STACK POINTER   71200000
         ST    R1,AVSP                                                  71220000
GS03     LR    INPTR1,INPTR             SAVE INPUT POINTER              71240000
*        TRANSLATE AND TEST STRING AT INPTR                             71260000
GS05     LA    LINK,GS10                SET RETURN LINKAGE              71280000
         TM    GSTAT,128                IF IN QUOTE MODE.....           71300000
         BZ    TRTEST                   (BR IF NOT)                     71320000
         LA    R3,2                     ..STOP ONLY ON QUOTES           71340000
         MVC   PNCTAB+39(12),GS100        AND AMPERSANDS                71360000
         B     TRTESN+6                                                 71380000
*        BRANCH TO PROCESSOR FOR TRT CATEGORY                           71400000
*        (TRTEST REGISTER RESULTS-                                      71420000
*              REG 1- ADDRESS OF TERMINATING CHARACTER,                 71440000
*              REG 2- CATEGORY NUMBER,                                  71460000
*              REG R2- LENGTH-1,                                        71480000
*              REG R3- TYPE NUMBER)                                     71500000
GS10     AR    2,2                                                      71520000
         LA    R3A,GSCAN-USEBAS-4096(,B2)  RE-DEFINE THE BASE           71540000
         LH    R1,GS15(2)                                               71560000
         B     USEBAS(R1)                                               71580000
*                                 CATEGORIES...                         71600000
GS15     DC    AL2(GS20-USEBAS)   0 1ST CHAR IS NON-ASM                 71620000
         DC    AL2(GS45-USEBAS)   1             ,=.) OR BLANK           71640000
         DC    AL2(GS24-USEBAS)   2             (                       71660000
         DC    AL2(GS30-USEBAS)   3             '                       71680000
         DC    AL2(GS35-USEBAS)   4             &                       71700000
         DC    AL2(GS24-USEBAS)   5             +-* OR /                71720000
         DC    AL2(GS40-USEBAS)   6 STRING IS L' S' I' N' OR K'         71740000
         DC    AL2(GS40-USEBAS)   7           C' X' OR B'               71760000
         DC    AL2(GS40-USEBAS)   8           T'                        71780000
         DC    AL2(GS55-USEBAS)   9           AND NOT OR                71800000
         DC    AL2(GS55-USEBAS)  10           EQ NE LT GT LE GE         71820000
         DC    AL2(GS55-USEBAS)  11 DECIMAL (D) STRING - 1ST CHAR NUM   71840000
         DC    AL2(GS55-USEBAS)  12 ALPHANUM (AN) STRING - 1ST IS ALPHA 71860000
         EJECT                                                          71880000
*        NON-ASSEMBLER CHARACTER                                        71900000
GS20     C     INPTR,ENDCOL             TEST IF PAST THE END COLUMN     71920000
         BH    GS70                     YES -EXIT                       71940000
GS22     TM    GSTAT,128                IF NOT IN QUOTE MODE.....       71960000
         BO    GS25                     (BR IF YES)                     71980000
GS24     OI    GSUMRY,8                 INDICATE THE IMPURITY           72000000
GS25     LA    INPTR,1(0,INPTR)         STEP INPUT POINTER AND TAKE     72020000
         B     GS05                       ANOTHER SHOT                  72040000
*        AMPERSAND                                                      72060000
GS35     LA    INPTR,1(0,INPTR)         ASSUME DOUBLE                   72080000
         CLI   0(INPTR),AMPSND          VERIFY                          72100000
         BE    GS22                     YES                             72120000
         BCTR  INPTR,0                  C'EST LA VIE                    72140000
         BAL   R1,PUTSTR                OUTPUT PRIOR TEXT               72160000
         BAL   LINK,VARSYM              SCAN VARIABLE SYMBOL            72180000
         LA    R3A,GSCAN-USEBAS-4096(,B2)  RE-DEFINE THE BASE           72200000
         CLI   8(RREG),128              UNSUBSCRIPTED SYSLIST IS        72220000
         BE    ILSYSL                    AN ERROR                       72240000
         MVC   SVPTR(4),PNCTAB          ZERO SAVED OUTPUT POINTER       72260000
         TM    GSUMRY,255               SET CONCATENATION INDICATOR     72280000
         BZ    *+8                        IF APPLICABLE                 72300000
         OI    GSUMRY,16                                                72320000
         OI    GSUMRY,128               SET V.S. INDICATOR              72340000
         CLI   0(INPTR),DOT             SWALLOW A TERMINATING PERIOD    72360000
         LA    INPTR,1(0,INPTR)                                         72380000
         BE    GS03                                                     72400000
         BCT   INPTR,GS03                                               72420000
*        LETTER FOLLOWED BY QUOTE                                       72440000
GS40     CLI   0(INPTR),L               TEST FOR LEGITIMATE L-QUOTE     72460000
         LA    INPTR,1(0,INPTR)           CONSTRUCTION                  72480000
         BNE   GS29                     BR IF NOT L                     72500000
         CLI   1(INPTR),A                                               72520000
         BL    GS29                     BRANCH IF ' FOLLOWED BY DIGIT.  72540000
         CLI   1(INPTR),Z+3             IS IT L'ALPHA-NUMERIC STRING?   72560000
         BNH   GS24                     YES                             72580000
         CLI   1(INPTR),STAR            (INCLUDING L'*)                 72600000
         BE    GS24                     OH YES, OH MY, THRILLING        72620000
GS29     OI    GSUMRY,8                 NO                              72640000
*        QUOTE                                                          72660000
GS30     XI    GSTAT,128                FLIP THE INDICATOR              72680000
         OI    GSUMRY,64                TELL THE WORLD                  72700000
         TM    GSTAT,MASK0              WAS IT AN ODD QUOTE .Q          72702000
         BO    GS25                     BRANCH IF YES                   72704000
*        IF EVEN QUOTE - ARE WE PROCESSING PUNCH, MNOTE                 72706000
         TM    SWTCH3,MASK5             OR TITLE                        72708000
         BZ    GS25                     NO, WE ARE NOT                  72710000
*        IF YES - TEST WHAT FOLLOWS EVEN QUOTE                          72712000
         CLI   N1(INPTR),BLANK          BLANK FOLLOWS .Q                72714000
         BE    GS25                     YES, NO PROBLEMS                72716000
         CLI   N1(INPTR),QUOTE          ANOTHER QUOTE .Q                72718000
         BE    GS25                     YES, EVERYTHING OK              72720000
         C     INPTR,ENDCOL             IS IT ENDCOL .Q                 72722000
         BE    GS25                     YES, EVERYTHING OK              72724000
         B     ILOPRF                   NOT PERMITTED CHARACTER         72726000
*                                          FOLLOWS AN EVEN QUOTE        72728000
*        ,=.) OR BLANK                                                  72740000
GS45     CLI   0(INPTR),COMMA           WE ARE ONLY INTERESTED IN A     72760000
         BE    GS75                       SELECT FEW                    72780000
         CLI   0(INPTR),BLANK                                           72800000
         BE    GS70                                                     72820000
         CLI   0(INPTR),DOT                                             72840000
         BNE   GS24                                                     72860000
         LA    INPTR,1(0,INPTR)         THE PERIOD MAKES A GREAT START  72880000
         LA    R3,2                       TOWARD A SEQUENCE SYMBOL      72900000
         BAL   LINK,TRTESN+6                                            72920000
         LA    R3A,GSCAN-USEBAS-4096(,B2)  RE-DEFINE THE BASE           72940000
         BCTR  INPTR,0                                                  72960000
         CH    2,H12                    MUST BE .ALPHANUM STRING        72980000
         BNE   GS24                     TOO BAD                         73000000
         LA    R2,1(0,R2)               ADD 1 BACK TO LENGTH FOR THE .  73020000
*                                                                       73040000
*        ALPHA-NUMERIC STRING                                           73060000
GS55     TM    GSUMRY,255               ANYTHING DONE YET               73080000
         BNE   GS85                     BR IF YES                       73100000
         CH    R2,H8                    NO -TEST FOR LENGTH L.E. 8      73120000
         BNL   GS85                                                     73140000
         CLI   0(1),BLANK               AND FOR PROPER TERMINATOR       73160000
         BE    GS57                     A BLANK IS ALWAYS GOOD          73180000
         CLI   0(1),COMMA               IF NOT BLANK OR COMMA, GO SEE   73200000
         BNE   GS83                       IF IT WAS ENDCOL              73220000
         CLI   GCALL,1                  COMMA- DOES CALLER WANT IT .Q   73240000
         BNE   GS85                     BR IF NOT                       73260000
GS57     CLI   0(INPTR),N9              BRANCH IF DIGIT HEAD            73280000
         BNH   GS80                                                     73300000
         BAL   R1,EOPNDL                NO -CREATE OPERAND LIST ENTRY   73320000
         LA    R3A,GSCAN-USEBAS-4096(,B2)  RE-DEFINE THE BASE           73340000
         LA    R1,128(0,R2)             SET UP FLAG BYTE FOR OPNDL      73360000
         MVI   GSUMRY,4                 ASSUME NORMAL SYMBOL            73380000
         CLI   0(INPTR),DOT                                             73400000
         BNE   GS60                                                     73420000
         MVI   GSUMRY,1                 WRONG -IT IS A SEQUENCE SYMBOL  73440000
         LR    INPTR1,1                 ADVANCE SAVED PTR TO KILL OUTPT 73460000
         LA    R1,32(0,R1)              CHANGE OPNDL FLAG TO SEQ SYM    73480000
GS60     STC   R1,OPNDL(RB)             INSERT FLAG IN OPNDL            73500000
GS65     LR    INPTR,1                  ADVANCE INPUT POINTER           73520000
*                                                                       73540000
*        EXIT  GSCAN                                                    73560000
GS70     TM    GSTAT,128                BOMB ON ODD QUOTE COUNT         73580000
         BO    NOQUOT                                                   73600000
         BAL   R1,PUTSTR                OUTPUT PRIOR TEXT               73620000
         LM    2,10,SAVREG                                              73640000
         BR    LINK                                                     73660000
*                                                                       73680000
*        MISCELLANY                                                     73700000
*                                                                       73720000
GS75     CLI   GCALL,1                  IF INDICATED BY CALLER,         73740000
         BE    GS70                       EXIT ON A COMMA               73760000
         B     GS24                                                     73780000
*                                                                       73800000
*        FOR LEADING DIGIT...                                           73820000
GS80     MVC   PNCTAB+10(29),TRSLTB     SET TO STOP TRT ON NON-NUMERIC  73840000
         EX    R2,NN14                  TRT OPERAND AGAINST PNCTAB      73860000
         MVC   PNCTAB+10(29),PNCTAB     CLEAR PNCTAB                    73880000
         BNE   GS85                     BR IF ANY NON-NUMERIC           73900000
         MVI   GSUMRY,2                 INDICATE INTEGER AND EXIT       73920000
         B     GS65                                                     73940000
*                                                                       73960000
GS83     C     1,ENDCOL                                                 73980000
         BH    GS57                                                     74000000
GS85     AR    INPTR,R2                 OTHERWISE, PLOD ONWARD          74020000
         B     GS24                                                     74040000
*        TRT TABLE TO STOP ON AMPERSANDS AND QUOTES                     74060000
GS100    DC    X'000000000000040000000300'                              74080000
         DROP  R3A                      SAFETY FIRST                    74080500
         SPACE 2                                                        74081000
* OPSYN PROCESSOR                                                       74081500
         SPACE 2                                                        74082000
EREG     EQU   5                        ERROR CODE REGISTER             74082500
PREG     EQU   6                        OPND SYMBOL-TABLE PNTR          74083000
DREG     EQU   9                        ERROR LINK REG                  74083500
         USING OPSSIN,AUXREG                                            74084000
OPSSIN   ST    LINK,OPS99               SAVE RETURN REG                 74084500
         LA    DREG,OPS44               SET UP ERROR LINK               74085000
         MVI   DENTRY,0                 SET FOR OP-CODE LOOKUP          74085500
         LA    EREG,ERRR56                                              74086000
         TM        SWTCH8,X'80'         IS OPSYN LEGAL HERE?            74086500
         BCR   7,DREG                   NO (BNZR)                       74087000
         TM    SWTCH5,MASK1             ARE WE INTO OPEN CODE .Q        74087200
         BCR   7,DREG                   YES, (BNZR) OPSYN NOT ALLOWED   74087400
         LA    EREG,ERRR7                                               74087500
         CLI   NAMBYT,0                 ANY NAME?                       74088000
         BCR   8,DREG                   NO                              74088500
         LA    EREG,ERRR2                                               74089000
         CLI   NAMBYT,4                 ORDINARY SYMBOL?                74089500
         BCR   7,DREG                   NO                              74090000
         SR    PREG,PREG                CLEAR OPND POINTER              74090500
         C     INPTR,ENDCOL             OPERAND OMITTED?                74091000
         BH    OPS4                     YES                             74091500
         CLC   0(2,INPTR),COMMABL                                       74092000
         BE    OPS4                     YES                             74092500
         LR    TEMPRG,INPTR             SAVE OPERAND PNTR               74093000
         MVI   GCALL,1                  SET COMMA STOPPER               74093500
         BAL   LINK,GSCAN               SCAN OPERAND                    74094000
         C     INPTR,ENDCOL             RECORD END?                     74094500
         BH    OPS2                     YES                             74095000
         LA    EREG,ERRR3                                               74095500
         CLI   0(INPTR),BLANK           BLANK DELIMITER?                74096000
         BCR   7,DREG                   NO                              74096500
OPS2     LA    EREG,ERRR54                                              74097000
         CLI   GSUMRY,4                 ORDINARY SYMBOL?                74097500
         BCR   7,DREG                   NO                              74098000
         NI    OPNDL+4,7                SAVE LENGTH - 1                 74098500
         MVC   DCAREA+1(8),0(TEMPRG)    SET UP DICTIONARY               74099000
         MVC   DCAREA(1),OPNDL+4        WORK AREA                       74099500
         L     LINK,DUSING              LOOKUP OPERAND                  74100000
         BALR  LINK,LINK                AS MACHINE OP                   74100500
         LTR   PREG,EPTR                FOUND?                          74101000
         BCR   4,DREG                   NO                              74101500
         LA    EREG,ERRR55                                              74102000
         BCR   8,DREG                   NO                              74102500
         B     OPS22                                                    74103000
OPS4     XC    SVPTR(4),SVPTR           FORCE BLANK OPERAND             74103500
OPS22    NI    OPNDL,7                  SAVE L - 1                      74104000
         L     TEMPRG,INPUT             POINT TO NAME                   74104500
         MVC   DCAREA+1(8),0(TEMPRG)    SET UP DICTIONARY               74105000
         MVC   DCAREA(1),OPNDL          WORK AREA                       74105500
         L     LINK,DUSING              LOOKUP NAME                     74106000
         BALR  LINK,LINK                AS MACHINE OP                   74106500
         LA    EREG,ERRR2                                               74107000
         LTR   EPTR,EPTR                MACHINE OP?                     74107500
         BCR   4,DREG                   NO                              74108000
         BP    OPS6                     FOUND                           74108500
         LA    EREG,ERRR55              NOT FOUND                       74109000
         LTR   PREG,PREG                DELETION?                       74109500
         BNZ   OPS55                    NO                              74110000
OPS44    STC   EREG,OPS5                SET ERROR CODE                  74110500
         BAL   LINK,ABSERR              FLAG AND SKIP EDITED TEXT       74111000
OPS5     DC    AL1(0),X'0D'                                             74111500
OPS6     LTR   PREG,PREG                DELETION?                       74112000
         BNZ   OPS8                     NO                              74112500
         MVI   1(EPTR),0                DELETE NAME                     74113000
         B     OPSOUT                   EXIT                            74113500
OPS8     TM    0(PREG),X'10'            OPND EXTENDED OP?               74114000
         BO    OPS33                    YES                             74114500
OPS11    BAL   LINK,OPS69               CHANGE NAME OP                  74115000
         B     OPSOUT                   EXIT                            74115500
OPS33    TM    0(EPTR),X'10'            NAME EXTENDED OP?               74116000
         BO    OPS11                    YES                             74116500
         MVI   1(EPTR),0                NO ROOM, DELETE NAME            74117000
OPS55    L     EPTR,DENTRY              POINT TO DCAREA                 74117500
         BAL   LINK,OPS69               UPDATE NAME OP                  74118000
         MVI   DENTRY,X'80'             FORCE DICTIONARY INSERT         74118500
         L     LINK,DUSING              GO ENTER NEW OP                 74119000
         BALR  LINK,LINK                                                74119500
         MVC   ENDOPC(4),PNDX           UPDATE OP-CODES LIMIT           74120000
OPSOUT   L     LINK,OPS99               RETURN                          74120500
         BR    LINK                                                     74121000
OPS69    NI    0(EPTR),7                CLEAR EXTENDED OP FLAG          74121500
         IC    ZERORG,0(EPTR)           GET NAME L-1                    74122000
         LA    WORKRG,2(EPTR,ZERORG)    ACCESS HEX CODE                 74122500
         IC    ZERORG,0(PREG)           GET OPND FLAG BYTE              74123000
         N     ZERORG,F7                L-1                             74123500
         LA    TEMPRG,2(PREG,ZERORG)    ACCESS HEX CODE                 74124000
         MVC   0(2,WORKRG),0(TEMPRG)    MOVE HEX OP AND ASC/MASK        74124500
         TM    0(PREG),X'10'            OPND EXTENDED OP?               74125000
         BCR   8,LINK                   NO, RETURN                      74125500
         OI    0(EPTR),X'10'            SET NAME EXTENDED               74126000
         MVC   2(1,WORKRG),2(TEMPRG)    MOVE ASC                        74126500
         BR    LINK                     RETURN                          74127000
*                                                                       74127500
         DROP  AUXREG                   SAFETY FIRST                    74128000
         EJECT                                                          74128500
BASE1    DC        0H'0'                                                74129000
         DC    AL2(AIF-BASE)                                            74129500
         DC    AL2(AGO-BASE)                                            74130000
         DC    AL2(ANOP-BASE)                                           74130500
         DC    AL2(COPY-BASE)                                           74131000
         DC    AL2(MACRO-BASE)                                          74131500
         DC    AL2(MNOTA-BASE)                                          74132000
         DC    AL2(MEXIT-BASE)                                          74132500
         DC    AL2(MEND-BASE)                                           74133000
         DC    AL2(ICTL-BASE)                                           74133500
         DC    AL2(ISEQ-BASE)                                           74134000
         DC    AL2(PRINT-BASE)                                          74134500
         DC    AL2(SPACE-BASE)                                          74135000
         DC    AL2(EJECT-BASE)                                          74135500
         DC    AL2(PUNCH-BASE)                                          74136000
         DC    AL2(REPRO-BASE)                                          74136500
         DC    AL2(TITLE-BASE)                                          74137000
         DC    AL2(ENTRY-BASE)                                          74137500
         DC    AL2(EXTRN-BASE)                                          74138000
         DC    AL2(START-BASE)                                          74138500
         DC    AL2(CSECT-BASE)                                          74139000
         DC    AL2(DSECT-BASE)                                          74139500
         DC    AL2(COM-BASE)                                            74140000
         DC    AL2(EQU-BASE)                                            74140500
         DC    AL2(ORG-BASE)                                            74141000
         DC    AL2(END-BASE)                                            74141500
         DC    AL2(LTORG-BASE)                                          74142000
         DC    AL2(USING-BASE)                                          74142500
         DC    AL2(DROP-BASE)                                           74143000
         DC    AL2(ACTR1-BASE)                                          74143500
         DC    AL2(DC-BASE)                                             74144000
         DC    AL2(DS-BASE)                                             74144500
         DC    AL2(CCW-BASE)                                            74145000
         DC    AL2(CNOP-BASE)                                           74145500
         DC    AL2(1)                   INVALID, OPCODE=2A              74146000
         DC    AL2(DXD-BASE)                                            74146500
         DC    AL2(CXD-BASE)                                            74147000
         DC    AL2(OPSYN-BASE)                                          74147500
         DC    AL2(WXTRN-BASE)                                          74148000
         DC    AL2(POP-BASE)                                            74148500
         DC    AL2(PUSH-BASE)                                           74149000
         DC    AL2(1)                   INVALID, OPCODE=31              74149500
*./      DELETE    SEQ1=74150025,SEQ2=74270025                          74270000
         EJECT                                                          74272000
*        TABLE USED BY SETA,SETB,SETC OPERAND SCANNER                   74274000
         DS    0H                       ACTION ROUTINE NUMBERS          74276000
MS40     DC    AL2(AROP-USEBAS)          1                              74278000
         DC    AL2(ATERMA-USEBAS)        2                              74280000
         DC    AL2(ATERMB-USEBAS)        3                              74282000
         DC    AL2(ATTROP-USEBAS)        4                              74284000
         DC    AL2(BOOLOP-USEBAS)        5                              74286000
         DC    AL2(ILOPRF-USEBAS)        6                              74288000
         DC    AL2(CEXITA-USEBAS)        7                              74290000
         DC    AL2(CEXITB-USEBAS)        8                              74292000
         DC    AL2(CEXITC-USEBAS)        9                              74294000
         DC    AL2(CEXITE-USEBAS)       10                              74296000
         DC    AL2(CSETBA-USEBAS)       11                              74298000
         DC    AL2(CSETBE-USEBAS)       12                              74300000
         DC    AL2(TRANSC-USEBAS)       13                              74302000
         DC    AL2(CSETC-USEBAS)        14                              74304000
         DC    AL2(MBOOL-USEBAS)        15                              74306000
         DC    AL2(RELOP-USEBAS)        16                              74308000
         DC    AL2(VSYMRK-USEBAS)       17                              74310000
         DC    AL2(TBLANK-USEBAS)       18                              74312000
         DC    AL2(TCOMP-USEBAS)        19                              74314000
         DC    AL2(TRANSA-USEBAS)       20                              74316000
         DC    AL2(ILOPRF-USEBAS)       21                              74318000
         DC    AL2(ILXPR-USEBAS)        22                              74320000
         EJECT                                                          74322000
*        STATE TRANSITION TABLE FOR METSCN ROUTINE                      74324000
*                                                                       74326000
* METSCN IS DRIVEN BY THE STATE TRANSITION TABLE. STATE TABLE ENTRIES   74328000
* ARE INTERPRETED SEQUENTIALLY, UNLESS TRANSFER IS INDICATED BY AN 'SS' 74330000
* ENTRY, OR AN ACTION ROUTINE ALTERS THE SEQUENCE.                      74332000
*                                                                       74334000
* STATE TABLE ENTRY FORMATS-                                            74336000
*                                                                       74338000
*  AL1(0)      TRANSLATE&TEST STRING AT INPTR.                          74340000
*  AL1(255)    TRANSFER TO NEXT TABLE ENTRY.                            74342000
*  AL1(128+X)  EXECUTE ACTION ROUTINE X. STRING MUST BE 'NOT' OPERATOR. 74344000
*  AL1(64+X)   EXECUTE ACTION ROUTINE X. STRING MUST BE 'AND' OR 'OR'.  74346000
*  AL1(X)      EXECUTE ACTION ROUTINE X.                                74348000
*  AL1(SSX)    TRANSFER TO TABLE ENTRY SX.                              74350000
*  AL1(X*16+Y) ACTION LIST HEADER. X = NUMBER OF BYTES IN THIS LIST     74352000
*                (INCLUDING THE HEADER). TRTEST CATEGORY MUST EQUAL Y   74354000
*                TO EXECUTE THIS LIST, OTHERWISE SKIP TO TABLE ENTRY    74356000
*                FOLLOWING THIS LIST.                                   74358000
         SPACE 3                                                        74360000
*        STATE TRANSITION TABLE FOR METSCN                              74362000
S1       DC    AL1(0)         TRT       TRANSLATE AND TEST              74364000
         DC    AL1(255)       TACT      TRANSFER INTO ACTION MODE       74366000
         DC    AL1(20)        TRANSA    IF SETA ENTRY,                  74368000
         DC    AL1(SS4)                   TO S4                         74370000
         DC    AL1(13)        TRANSC    IF SETC ENTRY,                  74372000
         DC    AL1(SS16)                  TO S16                        74374000
         DC    AL1(18)        TBLANK    SCAVENGE BLANKS, THEN TO        74376000
         DC    AL1(SS1)                   STATE S1, OTHERWISE           74378000
         DC    AL1(19)        TCOMP     TRANSFER INTO COMPARE MODE      74380000
         DC    AL1(4*16+9)    IF(BOOL)  IF BOOLEAN OPERATOR             74382000
         DC    AL1(128+5)     BOOLOP,NOT  PERFORM BOOLOP(NOT)           74384000
         DC    AL1(SS3)                   TO S3                         74386000
S3       DC    AL1(0)         TRT                                       74388000
S4       DC    AL1(6*16+2)    IF(LPAR)  IF LEFT PARENTHESIS,            74390000
         DC    AL1(12)        CSETBE      PERFORM CSETBE                74392000
         DC    AL1(SS7)       RETURN-1  SIMPLE                          74394000
         DC    AL1(SS21)      RETURN-2  COMPLEX                         74396000
         DC    AL1(SS10)      RETURN-3  SETA EXPRESSION                 74398000
         DC    AL1(SS97)      RETURN-4  SETC EXPRESSION (ERROR)         74400000
S6       DC    AL1(255)       TACT                                      74402000
         DC    AL1(20)        TRANSA                                    74404000
         DC    AL1(SS23)                                                74406000
         DC    AL1(19)        TCOMP                                     74408000
         DC    AL1(3*16+4)    IF(AMPSND)                                74410000
         DC    AL1(17)        VSYMRK    PERFORM VSYMRK                  74412000
         DC    AL1(SS7)                 TO SS7                          74414000
S16      DC    AL1(6*16+8)    IF(TQUOTE)                                74416000
         DC    AL1(4)         ATTROP                                    74418000
         DC    AL1(SS17)                                                74420000
S16A     DC    AL1(0)         TRT                                       74422000
         DC    AL1(6*16+3)    IF(QUOTE)                                 74424000
         DC    AL1(19)        TCOMP                                     74426000
         DC    AL1(6*16+3)    IF(QUOTE)                                 74428000
         DC    AL1(14)        CSETC                                     74430000
         DC    AL1(SS16A)               EXIT-1 (RE-ENTER CSETC)         74432000
         DC    AL1(SS17)                EXIT-2 (END OF CHAR. EXPR)      74434000
         DC    AL1(255)       TACT                                      74436000
         DC    AL1(6)         CERROR                                    74438000
S23      DC    AL1(255)       TACT                                      74440000
         DC    AL1(13)        TRANSC                                    74442000
         DC    AL1(SS98)                                                74444000
         DC    AL1(2)         ATERMA                                    74446000
         DC    AL1(SS10)                                                74448000
S7       DC    AL1(0)         TRT                                       74450000
         DC    AL1(3*16+10)   IF(RELOP)                                 74452000
         DC    AL1(16)        RELOP                                     74454000
         DC    AL1(SS12)                                                74456000
         DC    AL1(3*16+9)    IF(BOOL)                                  74458000
         DC    AL1(64+15)     MBOOL,BOOLOP(AND,OR)                      74460000
         DC    AL1(SS22)                                                74462000
         DC    AL1(3*16+5)    IF(ARITH-OP)                              74464000
         DC    AL1(1)         AROP                                      74466000
         DC    AL1(SS9)                                                 74468000
         DC    AL1(4*16+1)    IF(TCHAR) IF A TERMINAL CHARACTER,        74470000
         DC    AL1(18)        TBLANK      CHECK FOR BLANK WHICH FORCES  74472000
         DC    AL1(SS8)                   TRANSITION TO STATE S8,       74474000
         DC    AL1(10)        CEXITE      OTHERWISE, EXIT THIS DIAGRAM  74476000
         DC    AL1(255)       TACT                                      74478000
         DC    AL1(10)        CEXITE                                    74480000
S8       DC    AL1(0)         TRT                                       74482000
         DC    AL1(3*16+10)   IF(RELOP)                                 74484000
         DC    AL1(16)        RELOP                                     74486000
         DC    AL1(SS12)                                                74488000
         DC    AL1(3*16+9)    IF(BOOL)                                  74490000
         DC    AL1(64+15)     MBOOL,BOOLOP(AND,OR)                      74492000
         DC    AL1(SS22)                                                74494000
         DC    AL1(255)       TACT                                      74496000
         DC    AL1(10)        CEXITE                                    74498000
S9       DC    AL1(0)         TRT                                       74500000
         DC    AL1(6*16+2)    IF(LPAR)                                  74502000
         DC    AL1(11)        CSETBA                                    74504000
         DC    AL1(SS10)                                                74506000
         DC    AL1(SS99)                                                74508000
         DC    AL1(SS10)                                                74510000
         DC    AL1(SS99)                                                74512000
         DC    AL1(255)       TACT                                      74514000
         DC    AL1(3)         ATERMB                                    74516000
         DC    AL1(SS10)                                                74518000
S10      DC    AL1(0)         TRT                                       74520000
         DC    AL1(3*16+5)    IF(ARITH-OP)                              74522000
         DC    AL1(1)         AROP                                      74524000
         DC    AL1(SS9)                                                 74526000
         DC    AL1(255)       TACT                                      74528000
         DC    AL1(20)        TRANSA                                    74530000
         DC    AL1(SS10A)                                               74532000
         DC    AL1(19)        TCOMP                                     74534000
         DC    AL1(3*16+10)   IF(RELOP)                                 74536000
         DC    AL1(16)        RELOP                                     74538000
         DC    AL1(SS12)                                                74540000
         DC    AL1(4*16+1)    IF(TCHAR)                                 74542000
         DC    AL1(18)        TBLANK                                    74544000
         DC    AL1(SS11)                                                74546000
         DC    AL1(7)         CEXITA                                    74548000
S10A     DC    AL1(255)       TACT                                      74550000
         DC    AL1(7)         CEXITA                                    74552000
S11      DC    AL1(0)         TRT                                       74554000
         DC    AL1(3*16+10)   IF(RELOP)                                 74556000
         DC    AL1(16)        RELOP                                     74558000
         DC    AL1(SS12)                                                74560000
S97      DC    AL1(255)       TACT                                      74562000
         DC    AL1(21)        CERROR    RELATIONAL OPERATOR EXPECTED    74564000
S12      DC    AL1(0)         TRT                                       74566000
         DC    AL1(6*16+2)    IF(LPAR)                                  74568000
         DC    AL1(11)        CSETBA                                    74570000
         DC    AL1(SS13)                                                74572000
         DC    AL1(SS99)                                                74574000
         DC    AL1(SS13)                                                74576000
         DC    AL1(SS99)                                                74578000
         DC    AL1(255)       TACT                                      74580000
         DC    AL1(3)         ATERMB                                    74582000
         DC    AL1(SS13)                                                74584000
S13      DC    AL1(0)         TRT                                       74586000
         DC    AL1(4*16+5)    IF(ARITH-OP)                              74588000
         DC    AL1(1)         AROP                                      74590000
         DC    AL1(SS12)                                                74592000
S21      DC    AL1(0)         TRT                                       74594000
         DC    AL1(3*16+9)    IF(BOOL)                                  74596000
         DC    AL1(64+5)      BOOLOP(AND,OR)                            74598000
         DC    AL1(SS22)                                                74600000
         DC    AL1(4*16+1)    IF(TCHAR)                                 74602000
         DC    AL1(18)        TBLANK                                    74604000
         DC    AL1(SS14)                                                74606000
         DC    AL1(8)         CEXITB                                    74608000
         DC    AL1(255)       TACT                                      74610000
         DC    AL1(8)         CEXITB                                    74612000
S14      DC    AL1(0)         TRT                                       74614000
         DC    AL1(3*16+9)    IF(BOOL)                                  74616000
         DC    AL1(64+5)      BOOLOP(AND,OR)                            74618000
         DC    AL1(SS22)                                                74620000
         DC    AL1(255)       TACT                                      74622000
         DC    AL1(8)         CEXITB                                    74624000
S17      DC    AL1(255)       TACT                                      74626000
         DC    AL1(13)        TRANSC                                    74628000
         DC    AL1(SS17A)                                               74630000
         DC    AL1(19)        TCOMP)                                    74632000
         DC    AL1(0)         TRT                                       74634000
         DC    AL1(3*16+10)   IF(RELOP)                                 74636000
         DC    AL1(16)        RELOP                                     74638000
         DC    AL1(SS19)                                                74640000
         DC    AL1(4*16+1)    IF(TCHAR)                                 74642000
         DC    AL1(18)        TBLANK                                    74644000
         DC    AL1(SS18)                                                74646000
         DC    AL1(9)         CEXITC                                    74648000
S17A     DC    AL1(255)       TACT                                      74650000
         DC    AL1(9)         CEXITC                                    74652000
S18      DC    AL1(0)         TRT                                       74654000
         DC    AL1(3*16+10)   IF(RELOP)                                 74656000
         DC    AL1(16)        RELOP                                     74658000
         DC    AL1(SS19)                                                74660000
         DC    AL1(255)       TACT                                      74662000
         DC    AL1(21)        CERROR    RELATIONAL OPERATOR EXPECTED    74664000
S19      DC    AL1(0)         TRT                                       74666000
         DC    AL1(4*16+8)    IF(TQUOTE)                                74668000
         DC    AL1(4)         ATTROP                                    74670000
         DC    AL1(SS21)                                                74672000
S19A     DC    AL1(0)         TRT                                       74674000
         DC    AL1(4*16+3)    IF(QUOTE)                                 74676000
         DC    AL1(14)        CSETC                                     74678000
         DC    AL1(SS19A)                                               74680000
         DC    AL1(SS21)                                                74682000
S98      DC    AL1(255)       TACT                                      74684000
         DC    AL1(22)        CERROR    ILLEGAL OPERAND FIELD FORMAT    74686000
         SPACE     5                                                    74688000
SS1      EQU   S1-S1                                                    74690000
SS3      EQU   S3-S1                                                    74692000
SS4      EQU   S4-S1                                                    74694000
SS6      EQU   S6-S1                                                    74696000
SS16     EQU   S16-S1                                                   74698000
SS23     EQU   S23-S1                                                   74700000
SS7      EQU   S7-S1                                                    74702000
SS8      EQU   S8-S1                                                    74704000
SS9      EQU   S9-S1                                                    74706000
SS10     EQU   S10-S1                                                   74708000
SS10A    EQU   S10A-S1                                                  74710000
SS11     EQU   S11-S1                                                   74712000
SS12     EQU   S12-S1                                                   74714000
SS13     EQU   S13-S1                                                   74716000
SS21     EQU   S21-S1                                                   74718000
SS14     EQU   S14-S1                                                   74720000
SS17     EQU   S17-S1                                                   74722000
SS17A    EQU   S17A-S1                                                  74724000
SS18     EQU   S18-S1                                                   74726000
SS19     EQU   S19-S1                                                   74728000
SS99     EQU   S98-S1                                                   74730000
SS16A    EQU   S16A-S1                                                  74732000
SS19A    EQU   S19A-S1                                                  74734000
SS22     EQU   S1-S1                                                    74736000
SS97     EQU   S97-S1                                                   74738000
SS98     EQU   S98-S1                                                   74740000
         EJECT                                                          74742000
*                                                                       74860000
*        EXTENDED EQU PROCESSOR                                         74880000
         SPACE     2                                                    74900000
EQU      DS        0H                                                   74920000
         TM        PARBYT1,EXTEN       WAS EXTEN SPECIFIED .Q           74940000
         BZ        MCHINS              NO EXTENDED EQU IF NOT           74960000
         BALR      AUXREG,0            ADDRESSABILITY                   74980000
         USING     *,AUXREG            AND TELL ASSEMBLER               75000000
         STM       OPTR,INPTR,TEMP     SAVE INPUT AND OUTPUT POINTERS   75020000
         MVI       GCALL,X'01'         SET COMMA AS SCAN TERMINATOR     75040000
         BAL       LINK,SKPBLK         SKIP TO OPERAND                  75060000
         IC        ZERORG,OPNDX        RETAIN OPERAND INDEX             75080000
         STC       ZERORG,SOPNDX       IN SAVE OPNDX                    75100000
         BAL       LINK,GSCAN          SCAN 1ST OPERAND                 75120000
         MVI       GCALL,X'00'         RESET COMMA INDICATOR            75140000
         CLI       0(INPTR),BLANK      BLANK TERMINATOR .Q              75160000
         BE        MCHIN1              YES, THEN ALL DONE               75180000
         STC       ZERORG,OPNDX        BACKUP OPERAND INDEX             75200000
         CLI       0(INPTR),COMMA      COMMA DELIMITER .Q               75220000
         BNE       ILTERM              BAD TERMINATOR IF NOT            75240000
         LA        INPTR,1(,INPTR)     POINT TO START OF NEXT           75260000
         CLI       0(INPTR),COMMA      IS 2ND OPERAND NULL .Q           75280000
         BE        EQU1SET             BRANCH IF YES                    75300000
         L         OPTR,TEMP           DUMP SCANNED OUTPUT              75320000
         BAL       LINK,TRTEST         DETERMINE TYPE                   75340000
         STC       R3,EQUTYPE          SAVE TYPE OF S.D.T.              75360000
         LA        LINK,EQU1RET        LOAD RETURN ADDRESS              75380000
         CH        RB,H11              IS IT D.S.D.T. .Q                75400000
         BE        AT18                BRANCH IF YES                    75420000
         CH        RB,H7               HEX, BIN, CHAR S.D.T. .Q         75440000
         BE        AT20                BRANCH IF YES                    75460000
         MVI       GCALL,X'01'         SET COMMA AS SCAN TERMINATOR     75480000
         BAL       LINK,GSCAN          BUMP OVER NON-S.D.T. FOR NOW     75500000
         MVI       GCALL,X'00'         RESET COMMA TERMINATOR           75520000
         B         EQU1SET             GO SET DUMMY TYPE                75540000
EQU1RET  DS        0H                                                   75560000
         B         ILEQUA              ILLEGAL S.D.T.                   75580000
         CLI       EQUTYPE,SCSDT       IS IT C.S.D.T. .Q                75600000
         BNE       EQU1ARND            BRANCH IF NOT                    75620000
         TR        SDTEMP(4),TRSLTB    TRANSLATE TO BINARY              75640000
EQU1ARND DS        0H                                                   75660000
         L         R2,SDTEMP           GET VALUE                        75680000
         C         R2,F65535           IS IT TOO BIG .Q                 75700000
         BH        ILEQUA              ILLEGAL IF YES                   75720000
         LTR       R2,R2               IS IT TOO SMALL .Q               75740000
         BM        ILEQUA              ILLEGAL IF YES                   75760000
         BCTR      R2,0                DECREMENT LENGTH BY ONE          75780000
         STH       R2,LNGTAT           SET LENGTH OF EQU                75800000
EQU1SET  DS        0H                                                   75820000
         MVI       SCLATR,X'80'        MARK AS EXTENDED EQU             75840000
         MVI       SCLATR+1,U          TYPE U AS DEFAULT                75860000
         CLI       0(INPTR),BLANK      IS IT A BLANK .Q                 75880000
         BE        EQUEND              BRANCH IF YES                    75900000
         CLI       0(INPTR),COMMA      A COMMA .Q                       75920000
         BNE       ILTERM              BAD DELIMITER IF NOT             75940000
         LA        INPTR,1(,INPTR)     POINT TO NEXT CHAR               75960000
         L         OPTR,TEMP           SCAN OUTPUT TO BE DUMPED         75980000
         BAL       LINK,TRTEST         DETERMINE TYPE                   76000000
         STC       R3,EQUTYPE          SAVE TYPE OF S.D.T.              76020000
         LA        LINK,EQU2RET        LOAD RETURN ADDRESS              76040000
         CH        RB,H11              IS IT D.S.D.T. .Q                76060000
         BE        AT18                BRANCH IF YES                    76080000
         CH        RB,H7               HEX, BIN, CHAR S.D.T. .Q         76100000
         BE        AT20                BRANCH IF YES                    76120000
EQU2RET  DS        0H                                                   76140000
         B         ILEQUA              ILLEGAL S.D.T.                   76160000
         CLI       EQUTYPE,SCSDT       IS IT C.S.D.T. .Q                76180000
         BNE       EQU2ARND            BRANCH IF NOT                    76200000
         TR        SDTEMP(4),TRSLTB    TRANSLATE TO BINARY              76220000
EQU2ARND DS        0H                                                   76240000
         L         R2,SDTEMP           SET VALUE                        76260000
         C         R2,F255             TOO BIG .Q                       76280000
         BH        ILEQUA              ILLEGAL IF YES                   76300000
         LTR       R2,R2               TOO SMALL .Q                     76320000
         BM        ILEQUA              ILLEGAL IF YES                   76340000
         STC       R2,TYPATR           SET TYPE ATTRIBUTE               76360000
         TR        TYPATR(1),TRSLTB    TRANSLATE TO INTERNAL CODE       76380000
         MVC       SCLATR+1(1),TYPATR  AND RETAIN ACTUAL TYPE           76400000
         CLI       0(INPTR),BLANK      BLANK DELIMITER .Q               76420000
         BNE       ILTERM              BAD DELIMITER IF NOT             76440000
EQUEND   DS        0H                                                   76460000
         LM        OPTR,INPTR,TEMP     RESET POINTERS                   76480000
         MVC       OPNDX(1),SOPNDX     RESET OPERAND INDEX              76500000
         B         MCHINS              AND CONTINUE                     76520000
         SPACE     2                                                    76540000
ILEQUA   DS        0H                                                   76560000
         BAL       LINK,ABSERR         LOG THE ERROR                    76580000
         DC        AL1(ERRR108)        INVALID EQU ARGUMENT             76600000
         DC        AL1(ERRST)          ERROR INDICATION                 76620000
         SPACE     2                                                    76640000
         DROP      AUXREG              SAFETY FIRST                     76660000
         EJECT                                                          76680000
*                                                                       76700000
* PROCESS PROTOTYPE NAME FIELD                                          76720000
*                                                                       76740000
PROTOA   DS    0H                                                       76760000
         LA    R3A,GSCAN                BASE ADDRESS                    76780000
         USING GSCAN,R3A                AND TELL THE ASSEMBLER          76800000
         MVI   OUTPUT,X'06'             PROTO FLAG TO OUTPUT TEXT       76820000
         LA    OUTPTR,OUTPUT+10         RESET OUTPUT POINTER            76840000
         MVI   DENTRY,X'80'             POINT OF DEFN FOR DICT          76860000
* INSERT UT1 NOTE/POINT INTO MACRO LOCAL DICTIONARY TO POINT TO         76880000
* EDITED PROTOTYPE RECORD.                                              76900000
*                                                                       76920000
         IC    ZERORG,0(0,WORKRG)        MOVE NOTE INTO DICTIONARY      76940000
         LA    RR0,DCAREA+4(ZERORG)           ENTRY                     76960000
         MVC   0(3,RR0),BWBLKS+BWFNOT                                   76980000
         L     LINK,DUSING              BR TO ENTDCT TO ENTER MACRO     77000000
         BALR  LINK,LINK                 NAME IN GLOBAL DICT            77020000
         TM    DERR,X'18'               TEST ENTDCT ERR INDIC           77040000
         BZ    PRTCHZ                   BR IF NONE                      77060000
         BAL   LINK,ABSERR              MACRO NAME ALREADY IN DICT.     77080000
         DC    AL1(ERRR11)                                              77100000
         DC    AL1(ERRST)                                               77120000
PRTCHZ   BAL   AUXREG,ISITFF            GET CONTINUATION IF NEEDED      77140000
         OI        SWTCH6,2            MUST SUBSET DICTIONARY           77160000
         MVI   DEFENT,X'48'             INDICATE MACRO NAME             77180000
*        ENTER THE SYSTEM PARAMETERS INTO THE LOCAL DICTIONARY          77200000
         L         AUXREG,DUSING       BR ADDR FOR ENTDICT ROUTINE      77220000
         MVC       DCAREA(10),SYSNDX   SYSNDX                           77240000
         BALR      LINK,AUXREG                                          77260000
         MVC       DCAREA+5(5),SYSECT  SYSECT                           77280000
         BALR      LINK,AUXREG                                          77300000
         TM        SWTCH5,X'01'        TEST EXTEN OPTION                77320000
         BZ        PRONAM                                               77340000
         MVC       DCAREA(11),SYSDATE  SYSDATE                          77360000
         BALR      LINK,AUXREG                                          77380000
         MVC       DCAREA+5(6),SYSTIME SYSTIME                          77400000
         BALR      LINK,AUXREG                                          77420000
         MVC       DCAREA+5(6),SYSSTYP SYSSTYP                          77440000
         BALR      LINK,AUXREG                                          77460000
         MVC       DCAREA+5(6),SYSPARM SYSPARM                          77480000
         BALR      LINK,AUXREG                                          77500000
PRONAM   CLI   NAMBYT,X'00'             TEST IF NAME BLANK              77520000
         BE    PROSCN                   IF YES, GO PROCESS OPERAND      77540000
         CLI   NAMBYT,X'80'             TEST IF NAME IS VAR SYM         77560000
         BNE   BDPROT1                  ERROR IF NOT              V7A34 77580028
         IC    ZERORG,SOPNDX            POINT TO NAME FIELD OPNDL       77600000
         LA    WORKRG,OPNDL-4(ZERORG)     ENTRY                         77620000
         TM    0(WORKRG),X'08'          TEST OPNDL FLAG                 77640000
         BO    BDPROT                   BIF SUBSCRIPT                   77660000
         TM    0(WORKRG),X'40'                                          77680000
         BZ    BDPROT                   BIF NOT A VARIABLE SYMBOL       77700000
         CLI   1(INPTR),N9              IS CHAR AFTER & NOT A LETTER .Q 77720000
         BNH   BDPROT                   BIF YES                         77740000
         MVC   2(2,WORKRG),POSNOINT     PARAMETER NUMBER END OF DUMMIES 77760000
         L     TEMPRG,DLOOKUP           LOOKUP ENTERS NAME FIELD INTO   77780000
         BALR  TEMPRG,TEMPRG             LOCAL DICT AS PARAMETER 6      77800000
         B     PROSCN                   GO PROCESS OPERAND              77820000
         DROP  R3A                      SAFETY FIRST                    77840000
*./      DELETE    SEQ1=77860027,SEQ2=78020027                    V7A49 77860028
         EJECT                                                          78040000
*                                                                       78060000
*        IN DAYS OF OLD WHEN IBM WAS BOLD AND CORE WAS VERY PRECIOUS    78080000
*        THERE WAS A FIND MACRO HERE. NOW THE SYSLIB NOTE               78100000
*        LIST IS INCORE, (OR ELSE WE NEVER GOT HERE),SO LEAVE US        78120000
*        GO AND DO A TABLE LOOKUP TO SEE IF HIS OPCODE IS A             78140000
*        MACRO OR NOT.                                                  78160000
*                                                                       78180000
*        AND IT CAME TO PASS THAT IN LATER YEARS MORE                   78200000
*        AND MORE DEMANDS WERE PLACED UPON MACRO FACILITIES,            78220000
*        ESPECIALLY THE SYSGEN VARIETY THAT NOW INCLUDE                 78240000
*        TSO FUNCTIONS.  SO NOW WE DO A TABLE LOOKUP                    78260000
*        AND IF THE OPCODE IS NOT FOUND AND THE INCORE TABLE            78280000
*        IS FULL THEN ENTER THE FIND MACRO TO SAVE THE DAY.             78300000
*        NOTE --  UNDER THE CMS OPTION NO INCORE TABLE EXISTS.          78320000
*                                                                       78340000
*        FIRST A NOTE FROM OUR SPONSOR                                  78360000
*                                                                       78380000
RM0      EQU       0                   RETURN ADDRESS                   78400000
RM1      EQU       1                   BASE ON ENTRY                    78420000
RM2      EQU       2                   CONSTANT 11                      78440000
RM3      EQU       3                   POINTER TO END OF NOTE LIST      78460000
RM4      EQU       4                   POINTER TO NAMES IN NOTE LIST    78480000
RM5      EQU       5                   BASE OF FIND ROUTINE             78500000
RM6      EQU       6                   POINTS TO LIST1 IN ASMGASM       78520000
RM7      EQU       7                                                    78540000
RM8      EQU       8                                                    78560000
RM9      EQU       9                                                    78580000
RM10     EQU       10                                                   78600000
RM11     EQU       11                                                   78620000
RM12     EQU       12                                                   78640000
RM13     EQU       13                  POINTS AT COMMON                 78660000
RM14     EQU       14                  USED BY POINT                    78680000
RM15     EQU       15                  POINTS TO NAME TO BE FOUND       78700000
*                                                                       78720000
*   WRITES MACRO NAME ONCE ON UT3 IF EDITING SYSTEM MACROS              78740000
*                  CALLING SEQUENCE                                     78760000
*                            LA       RM15,ADDRESS OF NAME              78780000
*                            L          RM1,=A(FIND)                    78800000
*                            BALR       RM0,RM1                         78820000
         EJECT                                                          78840000
*                                                                       78860000
*        NOW LOOK FOR THE MACRO                                         78880000
*                                                                       78900000
FIND     DS        0H                                                   78920000
         ENTRY     FIND                                                 78940000
         STM       RM0,RM6,FINDSAVE    SAVE CALLER'S REGISTERS          78960000
         LR        RM5,RM1             TRANSFER BASE ADDRESS            78980000
         USING     FIND,RM5            AND USE IT                       79000000
         MVC       MACNAME,0(RM15)     SAVE AWAY THE MACRO NAME         79020000
         TR        MACNAME,TRSLTB      IN INTERNAL FORMAT               79040000
         L         RM1,ADCBLB          POINT AT SYSLIB DCB              79060000
         TM        DCBOFLGS-IHADCB(RM1),X'10'  IS SYSLIB OPEN .Q        79080000
         BZ        DONEMAC             NO, THEN MEMBER NOT FOUND        79100000
         TM        PARBYT3,CMS         DID USER SPECIFY 'CMS' .Q        79120000
         BO        OSFIND              BRANCH IF YES                    79140000
         L         RM6,ADLIST1         POINT AT LIST1 IN ASMGASM        79160000
         L         RM4,L1TOPMC(,RM6)   POINT AT LAST ENTRY IN DIRECTORY 79180000
         L         RM3,L1BOTMC(,RM6)   POINT TO FIRST ENTRY             79200000
         LA        RM2,12              SET ENTRY LENGTH                 79220000
         MVC       0(8,RM3),0(RM15)    PLACE NAME TO BE FOUND AT END    79240000
         CNOP      0,8                 D ALIGN LOOP FOR MOD 75 PERFORM  79260000
LOOKMAC  DS        0H                                                   79280000
         SR        RM4,RM2             POINT AT NEXT ENTRY              79300000
         CLC       0(8,RM15),0(RM4)    COMPARE NAME AGAINST TABLE       79320000
         BNE       LOOKMAC             AND AGAIN                        79340000
         CR        RM4,RM3             IS THIS LAST ENTRY .Q            79360000
         BE        NOTINTAB            YES, CHECK FURTHER               79380000
*        MVC       DCBRELAD-IHADCB(3,RM1),8(RM4)  MOVE TTR TO DCB       79400000
*        MVI       DCBRELAD-IHADCB+3(RM1),X'00'   THE ZEROTH CONCAT     79420000
*        POINT     (1),DCBRELAD-IHADCB(RM1)       POINT TO IT           79440000
         FIND  (1),8(RM4),C                                             79450000
         SR        RM15,RM15           SET RETURN CODE                  79460000
         B         DONEMAC             BRANCH TO FINISH                 79480000
NOTINTAB DS        0H                                                   79500000
         TM        L1SYNERR(RM6),X'08' DID MACRO TABLE OVERFLOW         79520000
         BZ        DONEMAC             ERROR IF NOT                     79540000
         L         RM2,L1FINDCT(,RM6)  GET FIND COUNT                   79560000
         A         RM2,F1              BUMP FIND COUNT BY ONE           79580000
         ST        RM2,L1FINDCT(,RM6)  UPDATE COUNT                     79600000
         OI        L1SYNERR(RM6),X'04' INDICATE ERROR ASMG209           79620000
OSFIND   DS        0H                                                   79640000
         FIND      (1),(RM15),D        CAN O/S FIND THE MACRO .Q        79660000
DONEMAC  DS        0H                                                   79680000
         DROP      RM5                 DROP BASE ADDRESS                79700000
         LM        RM0,RM6,FINDSAVE    RESTORE CALLER'S REGISTERS       79720000
         LR        RM1,RM0             TRANSFER RETURN ADDRESS          79740000
         LTR       RM15,RM15           SET CONDITION CODE               79760000
         BR        RM1                 AND RETURN                       79780000
         SPACE     2                                                    79800000
*        FROM HERE TO SEQEND IS UPDATE NUMBER                     V7A54 80000028
SEQBEG   DS    0H                                                 V7A54 80020028
         USING SEQBEG,AUXREG            ENTRY ADDRESS WILL BE BASEV7A54 80040028
         IC    RQ,POBYTE(ZERORG)        INITIALIZE SWITCH BYTE    V7A54 80060028
         STC   RQ,PSOPSW                                          V7A54 80080028
         TM    SWTCH5,X'02'             SKIPPING TO END .Q        V7A54 80100028
         BZ    SEQ02                    BIF NO                    V7A54 80120028
         TM    PSOPSW,X'80'             YES - IS THIS AN END CARD .QA54 80140028
         BZ    DRIVER                   BIF NO                    V7A54 80160028
         L     B2,DCLOS1AD              YES -LOAD BASE FOR BRANCH V7A54 80180028
         L     LINK,AKLOSIT             TO ABORT                  V7A54 80200028
         BR    LINK                     ASSEMBLY.                 V7A54 80220028
SEQ02    TM    SWTCH5,X'04'             SKIPPING TO MEND .Q       V7A54 80240028
         BZ    SEQ05                    BIF NO                    V7A54 80260028
         TM    PSOPSW,X'80'             YES -IS THIS AN END CARD .Q7A54 80280028
         BO    SEQ04                    BIF YES                   V7A54 80300028
         TM    PSOPSW,X'40'             IS THIS A MEND CARD .Q    V7A54 80320028
         BZ    ABS001                   BIF NO                    V7A54 80340028
         TM        SWTCH6,2            WILL DICT BE SUBSET .Q     V7A54 80360028
         BZ        MEND2     NO, RESET OUTPUT BUFFER & CLOSE OUT DEFN54 80380028
         B         MEND1                YES- PROCESS MEND         V7A54 80400028
SEQ04    BAL       LINK,WRNERR         GO LOG ERROR               V7A54 80420028
         DC        AL1(ERRR33)         END CARD IN MACRO          V7A54 80440028
         DC        AL1(ERRST)          CLOSE OUT DEFINITION       V7A54 80460028
         B         END1                CLOSE OUT PHASE            V7A54 80480028
SEQ05    TM    SWTCH7,X'01'             ARE WE WITHIN COPY CODE.....A54 80500028
         BZ    SEQ10                    NO                        V7A54 80520028
         TM    PSOPSW,4                 YES -IS OP LEGAL IN COPY.....54 80540028
         BO    SEQ08                    ERROR IF NOT              V7A54 80560028
         TM    SWTCH5,X'20'             WITHIN SYSTEM MACRO DEFN .Q7A54 80580028
         BZ    SEQ10                    BRANCH IF NOT             V7A54 80600028
         TM    PSOPSW,X'60'             IS THIS A MACRO/MEND OP .QV7A54 80620028
         BZ    SEQ10                    OK IF NOT                 V7A54 80640028
******** GENERATE DIAGNOSTIC -ILLEGAL STATEMENT IN COPY           V7A54 80660028
SEQ08    DS    0H                                                 V7A54 80680028
         BAL   LINK,ABSERR                                        V7A54 80700028
         DC    AL1(ERRR30)                                        V7A54 80720028
         DC    AL1(ERRST)                                         V7A54 80740028
********                                                          V7A54 80760028
SEQ10    TM    SWTCH1,64                ARE WE WITHIN A MACRO.....V7A54 80780028
         BZ    SEQ20                    NO                        V7A54 80800028
         TM    PSOPSW,2                 YES -IS OP LEGAL IN MACROS..... 80820028
         BZ    SEQ50                    YES                       V7A54 80840028
         TM    SWTCH5,32                NO -IS THIS A SYSTEM MACRO..... 80860028
         BO    SEQ30               YES                            V7A54 80880028
         TM    PSOPSW,128               NO -IS THIS END.....      V7A54 80900028
         BO    OMY                 WELL,WELL - AN END CARD        V7A54 80920028
         L     LINK,GETAD               GET PAST ANY              V7A54 80940028
         BALR  LINK,LINK                   CONTINUATION CARDS     V7A54 80960028
         DC    AL2(6)                                             V7A54 80980028
******** GENERATE DIAGNOSTIC -OP ILLEGAL IN MACRO DEFINITIONS     V7A54 81000028
********                                                          V7A54 81020028
         BAL   LINK,ABSERR                                        V7A54 81040028
         DC    AL1(ERRR31)                                        V7A54 81060028
         DC    AL1(ERRST)                                         V7A54 81080028
SEQ20    TM    SWTCH5,128               PROCESSING PROGRAMMER MACROS... 81100028
         BZ    SEQ25                    NO                        V7A54 81120028
         CLI   NAMBYT,1                 YES -IF NAME FIELD IS S.S.V7A54 81140028
         BE    SEQ34                      GENERATE DIAGNOSTIC     V7A54 81160028
         TM    PSOPSW,1                 IF OP IS LEGAL BETWEEN MACROS54 81180028
         BO    SEQEND                     EXIT                    V7A54 81200028
         B     SEQ35                    OTHERWISE, INITIALIZE MAIN-LINE 81220028
SEQ25    TM    SWTCH6,64                EXPECTING MACRO PSEUDO-OP.....4 81240028
         BZ    SEQ40                    NO                        V7A54 81260028
         TM    PSOPSW,32                YES -IS THAT WHAT WE GOT.....54 81280028
         BNZ       SEQ26               YES-                       V7A54 81300028
         OI        SWTCH5,X'04'        NO-MACRO ABORT ON          V7A54 81320028
         NI        SWTCH6,X'FD'        SUBSET INDICATOR OFF       V7A54 81340028
         B         END1                TO CLOSE OUT DICTIONARY    V7A54 81360028
SEQ26    NI        SWTCH6,X'BF'        TURN OFF INDICATOR.        V7A54 81380028
         B     SEQEND                     AND EXIT                V7A54 81400028
******** GENERATE DIAGNOSTIC -ILLEGAL STATEMENT IN SYSTEM MACRO   V7A54 81420028
SEQ30    L     LINK,GETAD                                         V7A54 81440028
         BALR  LINK,LINK           SKIP ANY CONTINUATION CARDS.   V7A54 81460028
         DC    AL2(6)                                             V7A54 81480028
         BAL   LINK,ABSERR                                        V7A54 81500028
         DC    AL1(ERRR32)                                        V7A54 81520028
         DC    AL1(ERRST)                                         V7A54 81540028
OMY      DS    0H                                                 V7A54 81560028
         BAL   LINK,WRNERR                                        V7A54 81580028
         DC    AL1(ERRR33)                                        V7A54 81600028
         DC    AL1(ERRST)                                         V7A54 81620028
         B     SEQ35                                              V7A54 81640028
******** GENERATE DIAGNOSTIC -MEANINGLESS SEQUENCE SYMBOL -ERASED V7A54 81660028
********                                                          V7A54 81680028
SEQ34    BAL   LINK,CKNAM3                                        V7A54 81700028
         CLI   OUTPUT+5,X'0B'           IS OPERATION ANOP .Q      V7A54 81720028
         BNE   *+8                      BIF NO                    V7A54 81740028
         MVI   NAMBYT,1                 YES -FOOL ANOP, S.S. PRESENTA54 81760028
********                                                          V7A54 81780028
******** INITIALIZATION FOR OPEN CODE PROCESSING                  V7A54 81800028
SEQ35    XI    SWTCH5,192               FLIP INDICATORS           V7A54 81820028
         TIMEOUT   'OPEN CODE STARTED ',DCB=NO                    V7A54 81840028
         L     LINK,HISTRY+8            ENTER A DUMMY ENTRY INTO BLOCK4 81860028
         MVC   4(5,LINK),F1+1           ZERO OF THE OPEN CODE DICT-7A54 81880028
         LA    LINK,9                   IONARY AND UP THE INDICES V7A54 81900028
         ST    LINK,VCR                 ACCORDINGLY. THIS IS NEC. DUE54 81920028
         ST    LINK,TNDX                TO BLOCK NO. SEARCH ALGORITHM.4 81940028
         TM    SWTCH5,X'01'             WAS 'EXTEN' SPECIFIED .Q  V7A49 81960028
         BNO   SEQ37                    BRANCH IF NOT             V7A49 81980028
         ST    AUXREG,FINDSAVE          SAVE BASE REGISTER        V7A49 82000028
         L     AUXREG,DUSING            BRANCH ADDR FOR ENTDICT   V7A49 82020028
         MVC   DCAREA(10),SYSNDX        SYSNDX                    V7A49 82040028
         BALR  LINK,AUXREG              ENTER ZEROTH POS PARM     V7A49 82060028
         MVC   DCAREA+5(5),SYSECT       SYSECT                    V7A49 82080028
         BALR  LINK,AUXREG              ENTER FIRST POS PARM      V7A49 82100028
         MVC   DCAREA(11),SYSDATE       SYSDATE                   V7A49 82120028
         BALR  LINK,AUXREG              ENTER SECOND POS PARM     V7A49 82140028
         MVC   DCAREA+5(6),SYSTIME      SYSTIME                   V7A49 82160028
         BALR  LINK,AUXREG              ENTER THIRD POS PARM      V7A49 82180028
         MVC   DCAREA+5(6),SYSSTYP      SYSSTYP                   V7A49 82200028
         BALR  LINK,AUXREG              ENTER FOURTH POS PARM     V7A49 82220028
         MVC   DCAREA+5(6),SYSPARM      SYSPARM                   V7A49 82240028
         BALR  LINK,AUXREG              ENTER FIFTH POS PARM      V7A49 82260028
         L     AUXREG,FINDSAVE          RESTORE BASE REGISTER     V7A49 82280028
SEQ37    DS    0H                                                 V7A49 82300028
         TM    SWTCH7,X'02'             END CARD GENERATED        V7A54 82320028
         BO    END22                    YES CONTINUE END PROCESSING7A54 82340028
******** OF COURSE THERE'S MORE TO BE ADDED                       V7A54 82360028
SEQ40    TM    PSOPSW,16                IS OP MEXIT,MNOTE,MEND.....7A54 82380028
         BO    SEQ45                    YES -A GOOF               V7A54 82400028
         TM    PSOPSW,32                NO -IS OP MACRO.....      V7A54 82420028
         BZ    SEQ50                    NO                        V7A54 82440028
SEQ45    L     LINK,GETAD               GET PAST ANY              V7A54 82460028
         BALR  LINK,LINK                   CONTINUATION CARDS     V7A54 82480028
         DC    AL2(6)                                             V7A54 82500028
******** GENERATE DIAGNOSTIC -ILLEGAL STATEMENT IN OPEN CODE      V7A54 82520028
         BAL   LINK,ABSERR                                        V7A54 82540028
         DC    AL1(ERRR34)                                        V7A54 82560028
         DC    AL1(ERRST)                                         V7A54 82580028
********                                                          V7A54 82600028
SEQ50    TM    OUTPUT+4,MASK0           IS OP A PSEUDO-OP .Q      V7A54 82620028
         BZ    SEQ52                    BIF NO                    V7A54 82640028
         TM    PSOPSW,8                 IS OP GBLX,LCLX.....      V7A54 82660028
         BO    SEQEND                   YES -EXIT                 V7A54 82680028
         CLI   OUTPUT+5,X'0C'           NO.. IS OP COPY           V7A54 82700028
         BE    SEQEND                   ALLOW COPY BEFORE DECLARATIONS4 82720028
         CLI   OUTPUT+5,X'25'      IS OP ACTR.                    V7A54 82740028
         BE    SEQ55               YES -                          V7A54 82760028
         CLI   OUTPUT+5,X'2D'           NO.. IS OP OPSYN          V7A54 82780028
         BE    SEQEND                   ALLOW OPSYN BEFORE DECLNS V7A54 82800028
SEQ52    DS    0H                                                 V7A54 82820028
         TM    SWTCH5,X'01'             IS EXTEN ON .Q            V7A54 82840028
         BO    SEQ53                    YES, BRANCH AROUND        V7A54 82860028
         TM    SWTCH1,X'40'             ARE WE IN A MACRO .Q      V7A54 82880028
         BO    SEQ54                    YES, DISABLE DECLARATIONS V7A54 82900028
SEQ53    DS    0H                                                 V7A54 82920028
         CLI   PSOPSW,X'01'             EJECT,PRINT,SPACE OR TITLEV.Q54 82940028
         BE    SEQEND                   RETURN IF SO              V7A54 82960028
SEQ54    DS    0H                                                 V7A54 82980028
         OI    SWTCH5,X'18'             DISABLE GBLX,LCLX AND ACTRV7A54 83000028
         B     SEQEND                     AND EXIT                V7A54 83020028
SEQ55    TM    SWTCH5,X'08'        IF LCLX HAS BEEN DISALLOWED,   V7A54 83040028
         BZ    SEQ52                                              V7A54 83060028
         TM    SWTCH5,X'01'             IS EXTEN ON .Q            V7A55 83080028
         BO    SEQ52                    ACTR OK IF EXTEN          V7A55 83100028
         B     DCL05               THIS ACTR IS OUT OF ORDER.     V7A54 83120028
         SPACE 1                                                  V7A54 83140028
SEQEND   DS    0H                                                 V7A54 83160028
         L     AUXREG,FINDSAVE+4        RESTORE RETURN REGISTER   V7A54 83180028
         BR    AUXREG                   AND RETURN TO CALLER            83200028
         DROP  AUXREG                                                   83220028
         EJECT                                                          83240028
F2END    DC        0D'0'               END OF ASMGF2                    83640000
         TITLE     'COMMON - ASMGF2 COMMON COMMUNICATION AND WORK AREA' 83660000
         COMMON    PHASE=ASMGF2                                         83680000
         DCBD  DSORG=PS                                                 83700000
         END       ASMGF2                                               83720000
./ ADD NAME=ASMGF2A
F2A      TITLE     'ASMG     MACRO GENERATOR EDITING PHASE SUBROUTINES' 00020000
         ISEQ  73,78                                                    00040000
         COPY      ASMGSET                                              00060000
         SPACE     1                                                    00080000
ASMGF2A  START                                                          00100000
         SPACE 2                                                        00120000
*TITLE 'ASMGF2A'... SUBROUTINES FOR ASMGF2                            * 00140000
*FUNCTION/OPERATION                                                     00160000
*   PROVIDES VARIOUS SUBROUTINES TO BE USED BY MODULE ASMGF2.           00180000
*ENTRY POINTS                                                           00200000
*        ASCAN      SCANS DC AND DS OPERANDS FOR ATTRIBUTES.            00220000
*                             MVI  ACALL,0 (DC) OR MVI  ACALL,1 (DS)    00240000
*                             L    LINKR,=V(ASCAN)                      00260000
*                             BALR LINKR,LINKR                          00280000
*        BWFORC     INDICATE SIZE OF NEXT LOGICAL RECORD TO BE WRITTEN  00300000
*                   ON SYSUT1 OR SYSUT3.                                00320000
*                             LA   1,0  (UT1)  OR  LA   1,8  (UT3)      00340000
*                             LA   0,RECORD-LENGTH                      00360000
*                             L    RR0,=V(BWFORC)                       00380000
*                             BALR RR0,RR0                              00400000
*./      DELETE    SEQ1=00420020,SEQ2=00480020                          00480000
*        BWRITE     MOVE LOGICAL RECORD INTO CURRENT BLOCK FOR SYSUT1   00500000
*                   OR SYSUT3.                                          00520000
*                             LA   1,0  (UT1)  OR  LA   1,8  (UT3)      00540000
*                             LA   0,RECORD                             00560000
*                             L    RR0,=V(BWRITE)                       00580000
*                             BALR RR0,RR0                              00600000
*        DCLOSE,DCLOS1   CLOSE OUT SOURCE PROGRAM AND MACRO LOCAL       00620000
*                   DICTIONARIES AND CREATES CORRESPONDING SUBSETTED    00640000
*                   DICTIONARIES FOR PHASE ASMGF3. ENTRY POINT DCLOSE   00660000
*                   ESTABLISHES THE USING REGISTER FOR THE ROUTINE.     00680000
*                             L    LINK,=V(DCLOSE)                      00700000
*                             BR   LINK                                 00720000
*        ENTDCT     GENERAL DICTIONARY ACCESS ROUTINE FOR THE GLOBAL    00740000
*                   AND LOCAL DICTIONARIES. AT ENTRY, WORD 'DENTRY'     00760000
*                   MUST POINT TO THE ITEM TO BE ACCESSED OR INSERTED   00780000
*                   IN THE DICTIONARY.                                  00800000
*                             L    LINK,=V(ENTDCT)                      00820000
*                             BALR LINK,LINK                            00840000
*        EOFIN      PROCESSES EOD CONDITION ON SYSIN.                   00860000
*                             L    LINK,=V(EOFIN)                       00880000
*                             BR   LINK                                 00900000
*        EOFLIB     PROCESSES EOD CONDITION ON SYSLIB.                  00920000
*                             L    LINK,=V(EOFLIB)                      00940000
*                             BR   LINK                                 00960000
*        GETSRC     SYSIN/SYSLIB INPUT PROCESSING ROUTINE               00980000
*                             L    LINK,=V(GETSRC)                      01000000
*                             BALR LINK,LINK                            01020000
*                             DC   AL2(ENTRY-CODE)                      01040000
*        KLOSIT     GENERAL EXIT ROUTINE TO PHASE ASMGF3                01060000
*                             L    LINK,=V(KLOSIT)                      01080000
*                             BR   LINK                                 01100000
*        LIBCHK     CHECKS SYSLIB READ                                  01120000
*                             L    LINK,=V(LIBCHK)                      01140000
*                             BALR LINK,LINK                            01160000
*        LIBRFND1   PERFORM SYSLIB READ - SET UP FOR DOUBLE BUFFERING   01180000
*                   --RETURNS TO DRIVER IN F2.                          01200000
*                             L    L5,=V(LIBRFND1)                      01220000
*                             BR   L5                                   01240000
*        LIBWAIT    AWAIT COMPLETION OF ANY READS ON MACLIB AND CLEAR   01260000
*                   ERROR FLAGS IN DCB.                                 01280000
*                             L    L5,=V(LIBWAIT)                       01300000
*                             BALR RD1,L5                               01320000
*./      DELETE    SEQ1=01340020,SEQ2=01380020                          01380000
*        LOOKUP     PROCESSES ALL DICTIONARY ACTIONS TO BE PERFORMED    01400000
*                   FOR EACH STATEMENT                                  01420000
*                             L    TEMPRG,=V(LOOKUP)                    01440000
*                             BALR TEMPRG,TEMPRG                        01460000
*INPUT  (SEE ASMGF2 DESCRIPTION)                                        01480000
*OUTPUT (SEE ASMGF2 DESCRIPTION)                                        01500000
*EXTERNAL ROUTINES                                                      01520000
*        ASMGBUFF   USED TO PERFORM I/O FUNCTIONS SUCH AS READ, WRITE,  01540000
*                   NOTE, POINT, ETC.                                   01560000
*              *****THE FOLLOWING ROUTINES ARE IN MODULE ASMGF2****     01580000
*        ABSERR     ERROR PROCESSING ROUTINE                            01600000
*        ABS001     FLUSH REMAINING CARDS OF STATEMENT IN ERROR         01620000
*        DRIVER     PROCESS NEXT STATEMENT                              01640000
*        MEND1      SIMULATE 'MEND' WHEN EOD WHILE READING SYSTEM MACRO 01660000
*        NDOPR0     END OF STATEMENT PROCESSOR                          01680000
*        SWICTL     SET STANDARD ICTL PARAMETERS FOR SYSLIB READ        01700000
*        WRNERR     ERROR PROCESSING ROUTINE                            01720000
*        FIND       POINTS TO 1ST RECORD OF A MEMBER IN SYSLIB          01740000
*EXITS  -NORMAL                                                         01760000
*       TO PHASE ASMGF3 VIA XCTL WHEN ALL INPUT HAS BEEN PROCESSED      01780000
*       -ERROR                                                          01800000
*       AN ABEND 20 TO THE SYSTEM IF THE GLOBAL OR SOURCE PROGRAM       01820000
*        LOCAL DICTIONARY OVERFLOWS ITS AVAILABLE AREA                  01840000
*TABLES (SEE ASMGF2 DESCRIPTION)                                        01860000
*ATTRIBUTES -N/A                                                        01880000
         SPACE 3                                                        01900000
         ENTRY ASCAN                                                    01920000
         ENTRY BWFORC                                                   01940000
         ENTRY ENTKWB                                             V7A53 01960028
         ENTRY BWRITE                                                   01980000
         ENTRY DCLOSE                                                   02000000
         ENTRY DCLOS1                                                   02020000
         ENTRY ENTDCT                                                   02040000
         ENTRY EOFIN                                                    02060000
         ENTRY EOFLIB                                                   02080000
         ENTRY GETSRC                                                   02100000
         ENTRY KLOSIT                                                   02120000
         ENTRY LIBCHK                                                   02140000
*                                                                       02160000
*                                                                       02180000
         ENTRY LIBRFND1                                                 02200000
         ENTRY LIBWAIT                                                  02220000
         ENTRY LOOKUP                                                   02240000
         EXTRN ASMGF2                                                   02260000
*                                                                       02280000
*        REGISTER DEFINITIONS                                           02300000
*                                                                       02320000
RQ       EQU   0                                                        02340000
RA       EQU   1                                                        02360000
RB       EQU   2                                                        02380000
B1       EQU   11                                                       02400000
B2       EQU   12                       BASE                            02420000
CM       EQU   13                       COMMON AREA POINTER             02440000
L4       EQU   14                       LINK                            02460000
L5       EQU   15                       LINK                            02480000
*                                                                       02500000
         USING COMMON,CM                                                02520000
*                                                                       02540000
APTR     EQU   0                        'A' POINTER                     02560000
EPTR     EQU   1                                                        02580000
ZERORG   EQU   2                                                        02600000
WORKRG   EQU   4                                                        02620000
OPNDS    EQU   6                        PNTR WITHIN OPERAND FORMAT LIST 02640000
BLKSKP   EQU   7                        POINTER TO START OF FIELD       02660000
TEMPRG   EQU   8                        REGISTER ALWAYS AVAILABLE       02680000
DCTEMP   EQU   9                        TEMP REG FOR DICTIONARY LOOK-U  02700000
OUTPTR   EQU   14                       OUTPUT POINTER                  02720000
INPTRS   EQU   15                       INPUT POINTER                   02740000
ERRR5    EQU   42        ILLEGAL TERMINATOR IN SETB                     02760000
ERRR8    EQU   41        UNDECLARED VARIABLE SYMBOL                     02780000
ERRR9    EQU   45        ILLEGAL USAGE OF VARIABLE SYMBOL               02800000
ERRR10   EQU   49        VARIABLE SYMBOL MATCHES A PARAMETER            02820000
ERRR15   EQU   43        SET SYMBOL PREVIOUSLY DEFINED                  02840000
ERRR35   EQU   76        SEQUENCE ERROR.                                02860000
ERRR36   EQU   77        ILLEGAL CONTINUATION CARD.                     02880000
ERRR37   EQU   77        TOO MANY CONTINUATION CARDS.                   02900000
ERRR38   EQU   105       EOD ON SYSLIB                                  02920000
ERRR48   EQU   44        SET SYMBOL USAGE INCONSISTENT WITH DECLARATION 02940000
ERRR49   EQU   47        SEQUENCE SYMBOL PREVIOUSLY DEFINED             02960000
ERRR51   EQU   50        INCONSISTANT GLOBAL DECLARATION                02980000
*./      DELETE    SEQ1=03000020,SEQ2=03000020                          03000000
ERRR57   EQU       68                  ILLEGAL LENGTH ON GBL OR LCL     03020000
MACLIB   EQU   16                                                       03040000
R1       EQU   6                                                        03060000
R2       EQU   7                                                        03080000
R3       EQU   8                        MUST BE EVEN                    03100000
R3A      EQU   R3+1                     EVEN-ODD REGISTER PAIR          03120000
LINKR    EQU   10                                                       03140000
*./      DELETE    SEQ1=03160020,SEQ2=03160020                          03160000
SSETA    EQU   40                       SETA FLAG                       03180000
SSETB    EQU   41                       SETB FLAG                       03200000
SSETC    EQU   42                       SETC FLAG                       03220000
*./      DELETE    SEQ1=03240020,SEQ2=03240020                          03240000
SSPAR    EQU   57                       SYMBOLIC PARAMETER FLAG         03260000
*./      DELETE    SEQ1=03300025,SEQ2=03600025                          03600000
WORK1    EQU   4                                                        03620000
         EJECT                                                          03640000
*              REGISTER ASSIGNMENTS.                                    03660000
*                                                                       03680000
LINK     EQU   3                        LINK FROM CALLER.               03700000
CRA      EQU   8                        CURRENT BLOCK ORIGIN.           03720000
PPA      EQU   CRA+1                    PING-PONG BLOCK ORIGIN.         03740000
THLDA    EQU   PPA+1                    PERMANENT/TRANSIENT THRESHOLD.  03760000
CRNT     EQU   15                       CURRENT ENTRY IN A CHAIN.       03780000
PREV     EQU   14                       PREVIOUS ENTRY IN A CHAIN.      03800000
LARG     EQU   2                        LENGTH OF BCD ARGUMENT - 1.     03820000
RLNK     EQU   LINK                     SUBROUTINE LINK.                03840000
RS3      EQU   PREV                                                     03860000
*                                                                       03880000
*              SCRATCH REGISTERS, ASSIGNED CONTIGUOUSLY.                03900000
*                                                                       03920000
RE1      EQU   4                        EVEN.                           03940000
RD1      EQU   RE1+1                    ODD.                            03960000
RE2      EQU   RD1+1                    EVEN.                           03980000
RD2      EQU   RE2+1                    ODD.                            04000000
*                                                                       04020000
*              EQUATED PARAMETERS.                                      04040000
*                                                                       04060000
NUL      EQU   1                        NULL LENGTH.                    04080000
*./      DELETE    SEQ1=04140022,SEQ2=04160022                          04160000
NPF      EQU   7                        POSITION OF N/P IN IOCTL.       04180000
*./      DELETE    SEQ1=04200020,SEQ2=04300020                          04300000
UTYP     EQU   22                       TYPE 'U' FLAG.                  04320000
*./      DELETE    SEQ1=04340020,SEQ2=04340020                          04340000
JTYP     EQU   18                                                       04360000
NPTW     EQU   3                        NOTE LENGTH.                    04380000
*./      DELETE    SEQ1=04400020,SEQ2=04400020                          04400000
         EJECT                                                          04420000
*ROUTINE FOR CONDITIONAL PLACEMENT OF ENTRIES IN THE GENERAL DICTIONARY 04440000
*                                                                       04460000
*   GENERAL COMMENTS ON TRANSIENT DICTIONARY MANAGEMENT                 04480000
*        - TRANSIENT DICTIONARY BLOCKS ARE CONTIGUOUS AND ORDERED       04500000
*        IN CORE.                                                       04520000
*        - TRANSIENT DICTIONARIES ARE HELD IN CORE UNTIL COMPLETE,      04540000
*        SUBSETTED IMMEDIATELY (EVEN OPEN CODE), THEN WRITTEN TO UT1.   04560000
*        - BOTH TRANSIENT AND PERMANENT DICTIONARIES ARE DYNAMIC.       04580000
*        WHEN THE PERMANENT DICT. HAS TO EXPAND BY ONE BLOCK, THE       04600000
*        TRANSIENT DICT. MUST BE MOVED AHEAD ONE BLOCK IN CORE TO       04620000
*        PROVIDE SPACE. 'GETCRBLK' CALLS BUFF TO OBTAIN A BLOCK OF      04640000
*        CORE CONTIGUOUS ABOVE DEND.                                    04660000
*        - IF ENOUGH CORE IS NOT AVAILABLE FOR THE DICTIONARIES,        04680000
*        ASSEMBLY IS ABORTED.(SEE ABORTP).                              04700000
*                                                                       04720000
*                                                                       04740000
         DS    0H                                                       04760000
         USING *,B2                                                     04780000
ENTDCT   EQU   *                                                        04800000
         STM   RB,L5,SAVREG                                             04820000
         L     B2,DUSING                                                04840000
         LM    CRA,THLDA,HISTRY                                         04860000
         BAL   RLNK,HASH                                                04880000
*./      DELETE    SEQ1=04900020,SEQ2=04900020                          04900000
         MVC   HSHA(1),0(RE1)                                           04920000
         NI    HSHA,X'38'               SAVE TYPE CODE.                 04940000
         TM    0(RE1),X'40'             TEST IF ENTRY FOR PERM AREA.    04960000
         BZ    ENTD15                   BRANCH IF YES.                  04980000
         L     RD1,HSHA                                                 05000000
         SRL   RD1,26                   PREPARE TO FAN OUT.             05020000
         LH    RD1,ENTD5(RD1)                                           05040000
         B     ENTDCT(RD1)                                              05060000
ENTD5    DC    AL2(ENTSEQ-ENTDCT)       SEQUENCE SYMBOL.                05080000
         DC    AL2(ENTPAR-ENTDCT)       PARAMETER.                      05100000
         DC    AL2(ENTSYM-ENTDCT)       ORDINARY SYMBOL.                05120000
         DC        AL2(*-ENTDCT)       ILLEGAL.  (FORCE INVALID OP)     05140000
         DC    AL2(ENTLCL-ENTDCT)       LOCAL SET VARIABLE.             05160000
         DC    AL2(ENTLCL-ENTDCT)       LOCAL SET VARIABLE.             05180000
         DC    AL2(ENTLCL-ENTDCT)       LOCAL SET VARIABLE.             05200000
         DC        AL2(*-ENTDCT)       ILLEGAL.  (FORCE INVALID OP)     05220000
*./      DELETE    SEQ1=05240020,SEQ2=05280020                          05280000
ENTD15   TM    0(RE1),X'20'             TEST GLOBAL                     05300000
         BO    ENTGBL                   YES                             05302000
         TM    0(RE1),X'18'             TEST MACRO                      05304000
         BO    ENTMAC                   YES                             05306000
         EJECT                                                          05308000
* ROUTINE TO FIND OR PLACE A MACHINE OP IN THE GLOBAL DICTIONARY        05310000
*                                                                       05312000
ENTOPR   BAL   LINK,FCHN                LOOK FOR MATCH                  05314000
         B     ENTOP4                   FOUND IT                        05316000
         L     RE1,DENTRY               POINT TO SEARCH ITEM            05318000
         SR    EPTR,EPTR                PRE-SET TO NOT FOUND            05320000
         LTR   RE1,RE1                  IS THIS A SEARCH ONLY?          05322000
         BNM   DEXIT                    YES, RETURN                     05324000
         LA    RE2,4(0,LARG)            FORM EXTENDED OP LENGTH         05326000
         TM    0(RE1),X'10'             IS IT EXTENDED                  05328000
         BO    ENTOP2                   YES                             05330000
         BCTR  RE2,0                    REDUCE BY 1                     05332000
ENTOP2   STH   RE2,ENTLN                SET LENGTH                      05334000
         BAL   RLNK,ENTPRM              PLUG IT IN                      05336000
         B     DEXIT                    AND RETURN PNTR IN EPTR         05338000
ENTOP4   LA    EPTR,2(0,CRNT)           POINT TO FLAG BYTE              05340000
         TM    0(EPTR),X'E8'            IS IT MACHINE OP?               05342000
         BZ    DEXIT                    YES, RETURN PNTR                05344000
         LCR   EPTR,EPTR                NO, RETURN ERROR FLAG           05346000
         B     DEXIT                                                    05348000
         EJECT                                                          05360000
*              ROUTINE TO PLACE A GLOBAL SET VARIABLE IN THE GD.        05380000
*                                                                       05400000
ENTGBL   BAL   LINK,BCHN                SEARCH FOR A MATCHING PARAMETER 05420000
         B     DBIT2                     YES, WE GOT TROUBLE.           05440000
         BAL   LINK,FCHN                SEARCH THE PGD FOR MATCHING GBL 05460000
         B     ENTD24                    YES, GO TEST IF ACTIVE.        05480000
         L     RE1,DENTRY               RESTORE RE1.                    05500000
         LA    RD1,2(RE1,LARG)          SET POINTER TO 'A' SLOT.        05520000
         SR    RD2,RD2                                                  05540000
         IC    RD2,2(0,RD1)             GET DIMENSION.                  05560000
         SLL   RD2,8                    SHIFT THE HIGH ORDER BYTE &     05566000
         IC    RD2,3(,RD1)               INSERT LOW ORDER OF DIMEN      05572000
         CLI   HSHA,X'28'               TEST IF GBLB.                   05580000
         BE    ENTG8                                                    05600000
         LA    RE2,5(,LARG)            GBLA LENGTH                      05620000
*./      DELETE    SEQ1=05640020,SEQ2=05640020                          05640000
         CLI       HSHA,X'30'          TEST IF GBLC                     05645000
         BNE       ENTD21                                               05650000
         LA        RE2,6(,LARG)        GBLC LENGTH                      05655000
         B     ENTD21                                                   05660000
ENTG8    LA    RE2,6(,LARG)             GBLB LENGTH                     05680000
*./      DELETE    SEQ1=05700020,SEQ2=05700020                          05700000
         LTR   RD2,RD2                  TEST DIMENSION.                 05720000
         BC    6,ENTD21                 (BNZ) BRANCH IF DIMENSIONED.    05740000
         MVC   0(2,RD1),LTLAP+6         INSERT 'A'.                     05760000
         MVC   4(1,RD1),BTNRP+3         INSERT BIT NUMBER               05780000
         L     APTR,LTLAP+4             GET POINTER TO BIT-BYTE.        05800000
         B     ENTD22                                                   05820000
ENTD21   MVC   0(2,RD1),LTLAP+2         INSERT LITTLE 'A' IN ENTRY.     05840000
         L     APTR,LTLAP                                               05860000
ENTD22   STH   RE2,ENTLN                STORE GBLX LENGTH               05880000
         LM    RE1,RD1,LTLAP            PREPARE TO ENTER A SETV         05900000
         L     RE2,BTNRP                                                05920000
         BAL   RLNK,ENTPRM              (TRANSPARENT TO RE1-RD2)        05940000
         BAL   RLNK,ASETV               UPDATE LITTLE 'A' POINTERS.     05960000
         STM   RE1,RD1,LTLAP            SAVE BYTE & BIT-BYTE LIL A      05980000
*./      DELETE    SEQ1=06000020,SEQ2=06000020                          06000000
         ST    RE2,BTNRP                SAVE BIT NUMBER                 06020000
         B     DEXIT                                                    06040000
ENTD24   TM    2(CRNT),X'80'            TEST FOR ACTIVE GLOBAL.         06060000
         BZ    DBITZ                    ERROR,ENTRY ALREADY ACTIVE.     06080000
         L     RE1,DENTRY               CHECK NEW DECLARATION.          06100000
         LA    RE2,4(LARG,RE1)          POINT TO DIMENSION.             06120000
         LA    RD2,6(LARG,CRNT)         POINT TO DIMENSION.             06140000
         CLC   0(2,RE2),0(RD2)          COMPARE DIMENSIONS              06160000
         BNE   DBIT6                                                    06180000
         MVC   EVENX+3(1),2(CRNT)       GET FLAG BYTE.                  06200000
         NI    EVENX+3,X'7F'            CLEAR INACTIVE BIT.             06220000
         CLC   EVENX+3(1),0(RE1)                                        06240000
         BNE   DBIT6                                                    06260000
         TM        0(RE1),X'30'        TEST IF GBLC                     06264000
         BNO       *+14                SKIP IF NOT                      06268000
         CLC       2(1,RE2),2(RD2)     TEST LENGTHS CONSISTENT          06272000
         BNE       DBIT6               ERROR IF NOT                     06276000
         XI    2(CRNT),X'80'            ACTIVATE THE ENTRY.             06280000
         IC    RE1,2(0,CRNT)            GET BCD LENGTH.                 06300000
         N     RE1,HSH7                 RETAIN 3 BITS.                  06320000
         LA    RE1,4(RE1,CRNT)          CHAIN POINTER + 2               06340000
         MVC   EVENX+2(2),0(RE1)        GET LITTLE 'A'                  06360000
         L     APTR,EVENX                                               06380000
         LA    EPTR,2(0,CRNT)           POINT EPTR AT FLAG BYTE.        06400000
         BAL   RLNK,BCHN                SEARCH FOR A MATCHING PARAMETER 06420000
         B     DBIT2                                                    06440000
*                                                                       06460000
DEXIT    EQU   *                        COMMON EXIT FROM GD MAINTENANCE 06480000
         MVI   DERR,0                                                   06500000
DEXITR   EQU   *                                                        06520000
         STM   CRA,THLDA,HISTRY         SAVE POINTERS.                  06540000
         LM    RB,L5,SAVREG                                             06560000
         BR    LINK                                                     06580000
*                                                                       06600000
         EJECT                                                          06620000
*              ENTER MACRO NAME.                                        06640000
*                                                                       06660000
ENTMAC   BAL   RLNK,FCHN                SCAN THE PERM AREA.             06680000
         B     ENTM22                   MATCH.                          06700000
         LA    RE1,NPTW+5(0,LARG)                                       06720000
         STH   RE1,ENTLN                ENTRY LENGTH - CHAIN PTR - 1.   06740000
         L     RD1,DENTRY               GET POINTER TO FLAG BYTE.       06760000
         LA    RD1,2(LARG,RD1)          POINTER TO 'A' FIELD.           06780000
         MVC   0(2,RD1),LTLAP+2         INSERT LITTLE 'A'.              06800000
         TM    DENTRY,X'80'                                             06820000
         BO    ENTM15                   BRANCH IF POINT OF DEFINITION.  06840000
         MVC   2(NPTW,RD1),FZRO         CLEAR N/P FIELD.                06860000
ENTM15   L     APTR,LTLAP                                               06880000
         LR    RE1,APTR                 INCREMENT 'A'.                  06900000
         LA    RE1,NPTL(0,RE1)          BUMP BY NOTER, NOT NOTEW.       06920000
         ST    RE1,LTLAP                                                06940000
         BAL   RLNK,ENTPRM              PLACE ENTRY IN GD.              06960000
         LA    RE1,NPTW+4(LARG,EPTR)    POINT TO MACRO CHAIN POINTER.   06980000
         MVC   0(2,RE1),MACHN+2         PLACE ENTRY IN MACRO CHAIN.     07000000
         MVC   MACHN+2(2),0(CRNT)                                       07020000
         TM    DENTRY,X'80'                                             07040000
         BZ    DEXIT                    BRANCH IF POINT OF REFERENCE.   07060000
         ST    EPTR,EVENX+4             PLACE POINTER TO MACRO NAME     07080000
         MVC   1(3,CRA),EVENX+5         IN BLOCK 0.                     07100000
         B     DEXIT                                                    07120000
ENTM22   L     RE1,DENTRY               POINTER TO PROPOSED ENTRY.      07140000
         LTR   RE1,RE1                  TEST SIGN BIT.                  07160000
         BP    ENTM25                   BRANCH IF POINT OF REFERENCE.   07180000
         TM    2(CRNT),X'18'            TEST IF ACTUALLY A MACRO.       07200000
         BC    12,DBIT3                 BRANCH IF OP-CODE.              07220000
         LA    RE2,6(LARG,CRNT)         POINT TO N/P FIELD.             07240000
         CLC   FZRO(NPTW),0(RE2)        TEST IF N/P FIELD IS ZERO.      07260000
         BNE   DBIT4                    MULTIPLY-DEFINED MACRO.         07280000
         LA    RD2,4(LARG,RE1)          POINT TO N/P IN PROPOSED ENTRY. 07300000
         MVC   0(NPTW,RE2),0(RD2)       INSERT N/P INTO GD ENTRY.       07320000
         LA    RE2,2(0,CRNT)            POINT TO FLAG BYTE.             07340000
         ST    RE2,EVENX+4              PLACE POINTER TO MACRO NAME     07360000
         MVC   1(3,CRA),EVENX+5         IN BLOCK 0.                     07380000
ENTM23   LA    RE2,4(LARG,CRNT)         POINT TO 'A'.                   07400000
         MVC   EVENX+2(2),0(RE2)                                        07420000
         L     APTR,EVENX                                               07440000
ENTM24   LA    EPTR,2(0,CRNT)                                           07460000
         B     DEXIT                                                    07480000
ENTM25   TM    2(CRNT),X'18'                                            07500000
         BO    ENTM23                   BRANCH IF MACRO.                07520000
         SR    APTR,APTR                OP-CODE.                        07540000
         B     ENTM24                                                   07560000
*                                                                       07580000
         EJECT                                                          07600000
*              ROUTINE TO PLACE A PARAMETER IN THE GD.                  07620000
*                                                                       07640000
ENTPAR   EQU   *                                                        07660000
ENTP2    BAL   RLNK,BCHN                SEARCH TRANSIENT AREA.          07680000
         B     DBIT2                    BCD MATCH.                      07700000
         LA    RD1,3(0,LARG)            BCD+3.                          07720000
         STH   RD1,ENTLN                ENTRY LENGTH - CHAIN PTR - 1.   07740000
         BAL   RLNK,ENTRAN              PLACE ENTRY IN TRANSIENT AREA.  07760000
         SR    APTR,APTR                NO LITTLE 'A' POINTER FOR       07780000
         B     DEXIT                    PARAMETERS.                     07800000
*                                                                       07820000
         EJECT                                                          07840000
*              ROUTINE TO PLACE A LOCAL SET VARIABLE IN THE GD.         07860000
*                                                                       07880000
ENTLCL   BAL   RLNK,FCHN                SEARCH PERMANENT AREA.          07900000
         B     ENTL22                   BCD MATCH.                      07920000
ENTL5    BAL   RLNK,BCHN                SEARCH TRANSIENT AREA.          07940000
         B     ENTL18                   BCD MATCH.                      07960000
         L     RE1,DENTRY               POINTER TO FLAG BYTE.           07980000
         LA    RD1,2(RE1,LARG)                                          08000000
         SR    RD2,RD2                                                  08020000
         IC    RD2,2(0,RD1)             GET DIMENSION.                  08040000
         SLL   RD2,8                    SHIFT THE HIGH ORDER BYTE &     08046000
         IC    RD2,3(,RD1)               INSERT LOW ORDER OF DIMEN      08052000
         CLI   HSHA,X'28'               TEST IF BOOLEAN.                08060000
         BE    ENTL8                                                    08080000
         LA    RE2,5(,LARG)            LCLA LENGTH                      08100000
*./      DELETE    SEQ1=08120020,SEQ2=08120020                          08120000
         CLI       HSHA,X'30'          TEST IF LCLC                     08125000
         BNE       ENTL9                                                08130000
         LA        RE2,6(,LARG)        LCLC LENGTH                      08135000
         B     ENTL9                                                    08140000
ENTL8    LA    RE2,6(,LARG)             LCLB LENGTH                     08160000
*./      DELETE    SEQ1=08180020,SEQ2=08180020                          08180000
         LTR   RD2,RD2                                                  08200000
         BC    6,ENTL9                  (BNZ) BRANCH IF DIMENSIONED.    08220000
         MVC   0(2,RD1),LTLAT+6         INSERT 'A'.                     08240000
         MVC   4(1,RD1),BTNRT+3         INSERT BIT NUMBER               08260000
         L     APTR,LTLAT+4             GET POINTER TO BIT-BYTE.        08280000
         B     ENTL12                                                   08300000
ENTL9    MVC   0(2,RD1),LTLAT+2         LCLA, LCLC, OR DIMEN'D LCLB.    08320000
         L     APTR,LTLAT                                               08340000
ENTL12   STH   RE2,ENTLN                STORE ENTRY LENGTH              08360000
         LM    RE1,RD1,LTLAT            PREPARE TO ENTER A SETV         08380000
         L     RE2,BTNRT                                                08400000
         BAL   RLNK,ENTRAN                                              08420000
         BAL   RLNK,ASETV               UPDATE LITTLE 'A' COUNTERS.     08440000
         STM   RE1,RD1,LTLAT            SAVE BYTE & BIT-BYTE LIL A      08460000
*./      DELETE    SEQ1=08480020,SEQ2=08480020                          08480000
         ST    RE2,BTNRT                SAVE BIT NUMBER                 08500000
         B     DEXIT                                                    08520000
ENTL18   TM    3(CRNT),X'48'            TEST IF GD ENTRY A PARAMETER.   08540000
         BO    DBIT2                    YES.                            08560000
         B     DBIT1                    NO.                             08580000
ENTL22   TM    2(CRNT),X'80'            TEST IF GLOBAL IS ACTIVE.       08600000
         BO    ENTL5                    BRANCH IF INACTIVE.             08620000
         B     DBITZ                    PROPOSED LCL MATCHES ACTIVE GBL 08640000
*                                                                       08660000
         EJECT                                                          08680000
*              ROUTINE TO PLACE A SEQUENCE SYMBOL IN THE GD.            08700000
*                                                                       08720000
ENTSEQ   EQU   *                                                        08740000
         L     RE1,DENTRY               SET POINTER TO PROPOSED ENTRY.  08760000
         LA    RD1,NPTW+5(0,LARG)       COMPUTE ENTRY LENGTH.           08780000
         STH   RD1,ENTLN                                                08800000
         LA    RD2,2(LARG,RE1)          POINT TO 'A' IN PROPOSED ENTRY. 08820000
         BAL   RLNK,BCHN                SEARCH THE GD.                  08840000
         B     ENTS16                   BCD MATCH.                      08860000
         LTR   RE1,RE1                                                  08880000
         BP    ENTS5                    BRANCH IF POINT OF REFERENCE.   08900000
         SR    APTR,APTR                POINT OF DEFINITION.            08920000
         MVC   0(2,RD2),FZRO            CLEAR 'A' POINTER FIELD.        08940000
         B     ENTS18                   GO PLACE ENTRY IN THE GD.       08960000
ENTS5    MVC   2(NPTW+2,RD2),FZRO       POINT OF REFERENCE.             08980000
         B     ENTS23                                                   09000000
ENTS16   LA    RE2,5(LARG,CRNT)         POINT TO 'A' FIELD IN GD ENTRY. 09020000
         CLC   FZRO(2),0(RE2)                                           09040000
         BE    ENTS21                   BRANCH IF NO 'A' IN GD.         09060000
         LTR   RE1,RE1                                                  09080000
         MVC   EVENX+2(2),0(RE2)                                        09100000
         L     APTR,EVENX                                               09120000
         BP    DEXIT                                                    09140000
         CLC   FZRO(NPTW+2),2(RE2)      PREVIOUSLY DEFINED...           09160000
         BNE   DBIT5                    BIF YES                         09180000
         MVC   0(2,RD2),0(RE2)          MOVE 'A' FROM GD TO NEW ENTRY.  09200000
ENTS18   BAL   RLNK,ENTRAN              PLACE ENTRY IN THE GD.          09220000
         B     DEXIT                                                    09240000
ENTS21   LTR   RE1,RE1                                                  09260000
         BM    DBIT5                    BRANCH IF MULTIPLY-DEFINED.     09280000
         MVC   2(NPTW+2,RD2),2(RE2)     MOVE N/P + DELTA TO NEW ENTRY.  09300000
ENTS23   MVC   0(2,RD2),LTLAT+2                                         09320000
         L     RD2,LTLAT                                                09340000
         LR    APTR,RD2                 (APTR MAY EQU 0)                09360000
         LA    RD2,NPTW+2(0,RD2)        INCREMENT 'A'.                  09380000
         ST    RD2,LTLAT                                                09400000
         B     ENTS18                                                   09420000
*                                                                       09440000
         EJECT                                                          09460000
*              ROUTINE TO PLACE AN ORDINARY SYMBOL INTO THE GD.         09480000
*                                                                       09500000
ENTSYM   LA    RE1,8(0,LARG)            COMPUTE ENTRY LENGTH.           09520000
         STH   RE1,ENTLN                                                09540000
         BAL   RLNK,BCHN                SEARCH THE TRANSIENT AREA.      09560000
         B     ENTY22                   BCD MATCH.                      09580000
         BAL   RLNK,ENTRAN              PLACE THE ENTRY IN THE GD.      09600000
         LA    RD1,2(LARG,EPTR)         POINT TO LITTLE 'A' FIELD.      09620000
         TM    DENTRY,128                                               09640000
         BO    ENTY5                    BRANCH IF POINT OF DEFINITION.  09660000
         MVC   0(2,RD1),LTLAT+2         INSERT 'A' INTO THE GD.         09680000
         L     APTR,LTLAT                                               09700000
         LR    RE2,APTR                 INCREMENT 'A'.                  09720000
         LA    RE2,5(0,RE2)                                             09740000
         ST    RE2,LTLAT                                                09760000
         B     DEXIT                                                    09780000
ENTY5    SR    APTR,APTR                SET 'A' EQUAL ZERO.             09800000
         MVC   0(2,RD1),FZRO                                            09820000
         B     DEXIT                                                    09840000
ENTY22   L     RE1,DENTRY                                               09860000
         LA    RD1,2(LARG,RE1)          POINT TO 'A' IN PROPOSED ENTRY. 09880000
         LA    RD2,5(LARG,CRNT)         POINT TO 'A' IN GD ENTRY.       09900000
         LTR   RE1,RE1                                                  09920000
         BM    ENTY27                   BRANCH IF POINT OF DEFINITION.  09940000
         CLC   FZRO(2),0(RD2)           TEST 'A' IN GD ENTRY.           09960000
         BNE   ENTY35                   BRANCH IF PRESENT.              09980000
         MVC   0(2,RD1),LTLAT+2         INSERT 'A' INTO PROPOSED ENTRY. 10000000
         L     APTR,LTLAT                                               10020000
         LR    RE2,APTR                                                 10040000
         LA    RE2,5(0,RE2)                                             10060000
         ST    RE2,LTLAT                                                10080000
         MVC   2(5,RD1),2(RD2)          MOVE ATTRIBUTES.                10100000
ENTY24   BAL   RLNK,ENTRAN                                              10120000
         B     DEXIT                                                    10140000
ENTY27   CLI   2(RD2),DTYP              TEST IF OLD MULTIPLE DEFINITION 10160000
         BE    DEXIT                    IF SO, IGNORE.                  10180000
         CLI   2(RD2),JTYP                                              10200000
         BE    DEXIT                    IGNORE MULTIPLE TYPE 'J'.       10220000
         CLI   2(RD2),UTYP              TEST IF GD ENTRY IS TYPE 'U'.   10240000
         BNE   ENTY37                   IF NOT, SET SPECIAL TYPE BYTE.  10260000
ENTY29   MVC   0(2,RD1),0(RD2)          MOVE  'A'.                      10280000
         MVC   EVENX+2(2),0(RD2)                                        10300000
         L     APTR,EVENX                                               10320000
         B     ENTY24                                                   10340000
ENTY35   MVC   EVENX+2(2),0(RD2)        GET 'A'.                        10360000
         L     APTR,EVENX                                               10380000
         LA    EPTR,3(0,CRNT)                                           10400000
         B     DEXIT                                                    10420000
ENTY37   MVI   2(RD1),DTYP                                              10440000
         B     ENTY29                   GO GET 'A', IF PRESENT.         10460000
*                                                                       10480000
         EJECT                                                          10500000
*              ERROR EXITS.                                             10520000
*                                                                       10540000
* THE PROPOSED ENTRY MATCHES AN ACTIVE GLOBAL SET VARIABLE.             10560000
DBITZ    MVI   DERR,128                                                 10580000
         SR    EPTR,EPTR                                                10600000
         B     DEXITR                                                   10620000
*                                                                       10640000
* THE PROPOSED ENTRY MATCHES A LOCAL SET VARIABLE.                      10660000
DBIT1    MVI   DERR,64                                                  10680000
         B     DBITZ+4                                                  10700000
*                                                                       10720000
* THE PROPOSED ENTRY MATCHES A PARAMETER.                               10740000
DBIT2    MVI   DERR,32                                                  10760000
         B     DBITZ+4                                                  10780000
*                                                                       10800000
* A MACRO NAME MATCHES AN OP-CODE, EXTENDED MNEMONIC, OR PSEUDO-OP.     10820000
DBIT3    MVI   DERR,16                                                  10840000
         B     DBITZ+4                                                  10860000
*                                                                       10880000
* A MACRO NAME IS MULTIPY-DEFINED.                                      10900000
DBIT4    MVI   DERR,8                                                   10920000
         B     DBITZ+4                                                  10940000
*                                                                       10960000
* A SEQUENCE SYMBOL IS MULTIPLY-DEFINED.                                10980000
DBIT5    MVI   DERR,4                                                   11000000
         B     DBITZ+4                                                  11020000
*                                                                       11040000
* A NEW GLOBAL DECLARATION IS INCONSISTENT WITH THE ORIGINAL ONE.       11060000
DBIT6    MVI   DERR,2                                                   11080000
         B     DBITZ+4                                                  11100000
         EJECT                                                          11120000
*              SUBROUTINE TO UPDATE LITTLE 'A' VALUES.                  11140000
*                                                                       11160000
* AT ENTRY,    HSHA  CONTAINS A TYPE CODE (BITS 1-4) FROM THE FLAG BYTE 11180000
*              RE1 CONTAINS THE FULL-BYTE LITTLE 'A' VALUE.             11200000
*              RD1 CONTAINS THE BIT-BYTE LITTLE 'A' VALUE.              11220000
*              RE2 CONTAINS THE BIT NUMBER (0-7).                       11240000
*              RD2 CONTAINS THE DIMENSION.                              11260000
*              RS3 CONTAINS MAX LENGTH IF SETC                          11270000
* AT EXIT,     RE1,RD1 AND RE2 ARE UPDATED.  RD2 AND RB ARE DESTROYED.  11280000
*                                                                       11300000
ASETV    EQU   *                                                        11320000
         CLI   HSHA,X'28'               TEST IF GBLB OR LCLB.           11340000
         BE    ASETB                                                    11360000
         CLI   HSHA,X'30'               TEST IF SETC.                   11380000
         BE    ASETC                                                    11400000
         SLA   RD2,2                    4X, TURNS ON CC.                11420000
         LA    RE1,2(RD2,RE1)           ADD IN DIMENSION BYTE           11440000
         BCR   6,RLNK                   (BNZ) EXIT IF DIMENSIONED.      11460000
         LA    RE1,2(,RE1)              UNDIMENSIONED                   11480000
         BR    RLNK                                                     11500000
ASETC    LA    RS3,1(,RS3)              ADD 1 FOR LENGTH BYTE           11520000
         LTR   RD2,RD2                  TEST IF DIMENSIONED             11540000
         BZ    ASC1                     BRANCH IF NOT DIMENSIONED       11560000
         LR    RB,RE2                   REMEMBER BIT NUMBER             11570000
         MR    RE2,RS3                  COMPUTE SPACE NEEDED            11580000
         LR    RE2,RB                   RESTORE BIT NUMBER              11590000
         LA    RE1,3(RD2,RE1)           NEW LITTLE 'A' VALUE            11600000
         BR    RLNK                     RETURN                          11620000
ASC1     LA    RE1,2(RS3,RE1)           NEW LITTLE 'A' FOR UNDIMENSIOND 11630000
         BR    RLNK                                                     11640000
ASETB    LTR   RD2,RD2                  TEST DIMENSION.                 11660000
         BZ    ASB5                     BRANCH IF NON-DIMENSIONED.      11680000
         LA    RD2,7(0,RD2)             BIAS THE DIVIDEND.              11700000
         SRL   RD2,3                    DIVIDE BY 8.                    11720000
         LA    RE1,2(RD2,RE1)           ADD IN DIMENSION BYTE           11740000
         BR    RLNK                                                     11760000
ASB5     C     RE2,HSH7                 TEST IF BIT NUMBER = 7.         11780000
         BE    ASB6                                                     11800000
         LA    RE2,1(0,RE2)             NO, INCREMENT BIT NUMBER.       11820000
         BR    RLNK                                                     11840000
ASB6     SR    RE2,RE2                  RESET BIT NUMBER.               11860000
         LR    RD1,RE1                  MOVE UP BIT-BYTE VALUE.         11880000
         LA    RE1,1(0,RE1)             BUMP FULL-BYTE VALUE.           11900000
         BR    RLNK                                                     11920000
*                                                                       11940000
         EJECT                                                          11960000
*              SUBROUTINE TO PLACE AN ENTRY IN THE PERMANENT GD.        11980000
*                                                                       12000000
* THIS PROGRAM IS TRANSPARENT TO THE SCRATCH REGISTERS, RE1,RD1,RE2,RD2 12020000
*                                                                       12040000
ENTPRM   STM   RE1,RD2,TREGS                                            12060000
         LH    RE1,ENTLN                ENTRY LENGTH - CHAIN PTR - 1.   12080000
         L     RD1,PNDX                 PERM AREA STORAGE INDEX, REL.   12100000
         AL    RD1,GDP                  MAKE ABSOLUTE.                  12120000
         LA    RE2,3(RE1,RD1)           ADD ENTRY LENGTH.               12140000
         CLR   RE2,THLDA                COMPARE AGAINST THRESHOLD.      12160000
         BC    10,ENTP25                BRANCH IF RE2 HIGH OR EQUAL.    12180000
ENTP22   L     RD2,DENTRY                                               12200000
         EX    RE1,ENTP23               MOVE THE ENTRY INTO THE GD.     12220000
         MVC   0(2,RD1),FZRO            MOVE CHAIN POINTER INTO ENTRY.  12240000
         MVC   0(2,CRNT),PNDX+2         SET POINTER TO NEW ENTRY.       12260000
         SL    RE2,GDP                  RELATIVIZE NEW  STORAGE INDEX.  12280000
         ST    RE2,PNDX                                                 12300000
         LA    EPTR,2(0,RD1)            SET ABSOLUTE POINTER TO ENTRY.  12320000
         SR        RS3,RS3             GET LENGTH IN CASE SETC          12330000
         IC        RS3,2(RE1,RD1)                                       12335000
         LM    RE1,RD2,TREGS                                            12340000
         BR    RLNK                                                     12360000
ENTP23   MVC   2(NUL,RD1),0(RD2)                                        12380000
ENTP25   STM   RE1,RE2,SAVE3            SAVE REGS                       12400000
         C     PPA,DEND                ANY CORE LEFT FOR DICT. .Q       12420000
         BL    MOVEM1                  BIF YES                          12440000
         BAL   RD1,GETCRBLK            NO-GET ANOTHER BLOCK             12460000
*                  WE MUST MOVE ALL OF TRANSIENT DICT AHEAD ONE         12480000
*                  BLOCK TO ALLOW PERMANENT DICT TO GROW                12500000
MOVEM1   LR    RE1,CRA                 FROM ADDR                        12520000
         LA    RD2,BLKSZ(0,RE1)        TO ADDR                          12540000
         L     RD1,TNDX               NUM. CHAR. TO BE MOVED FIRST BLK  12560000
         BAL   RE2,MOVEM               BRANCH TO MOVE ROUTINE           12580000
         LR    RD1,CRA                 FIRST BLOCK WAS MOVED ALREADY    12600000
         LA    RD2,BLKSZ               LENGTH OF BLOCKS TO BE MOVED     12620000
MOVELOOP CR    RD1,THLDA               FINISHED MOVE YET .Q             12640000
         BNH   MOVEFINI                BIF YES                          12660000
         SR    RD1,RD2                 POINT TO NEXT BLOCK DOWN         12680000
         MVC   BLKSZ(256,RD1),0(RD1)   PERFORM MOVE OF 1024 BYTES       12700000
         MVC   BLKSZ+256(256,RD1),256(RD1)     IN 4 MVC S               12720000
         MVC   BLKSZ+512(256,RD1),512(RD1)                              12740000
         MVC   BLKSZ+768(256,RD1),768(RD1)                              12760000
         B     MOVELOOP                GO MOVE THE REST OF THE BLOCKS   12780000
MOVEFINI LA    THLDA,BLKSZ(0,THLDA)    MOVE THLDA PTR.                  12800000
         LA    PPA,BLKSZ(0,PPA)        MOVE PPA PTR                     12820000
         LA    CRA,BLKSZ(0,CRA)        MOVE CRA PTR                     12840000
         LM    RE1,RE2,SAVE3           RESTORE REGS                     12860000
         B     ENTP22                  0.K. NOW WE CAN RESUME           12880000
*                                                                       12900000
SAVE3    DS    3F                      SAVE AREA FOR 3 REGS             12920000
*                                                                       12940000
*MV256 (MOVEM) MOVES CHARACTERS                                         12960000
*              REG RD1 - HOW MANY                                       12980000
*              REG RE1 - FROM WHERE                                     13000000
*              REG RD2 - TO WHERE                                       13020000
*              REG RE2 - RETURN REG                                     13040000
*                                                                       13060000
MV256    MVC   0(256,RD2),0(RE1)       MOVE 256 CHARACTERS              13080000
         LA    RD2,256(0,RD2)          UPDATE POINTERS                  13100000
         LA    RE1,256(0,RE1)                                           13120000
MOVEM    SH    RD1,H256                TEST IF 256 CHARACTERS REMAIN    13140000
         BH    MV256                   TO BE MOVED. BIF IF YES          13160000
         LA    RD1,255(0,RD1)          SET UP FOR EX INST               13180000
         EX    RD1,MOVE1                                                13200000
         BR    RE2                     RETURN TO CALLER                 13220000
MOVE1    MVC    0(0,RD2),0(RE1)        MOVE INST IS EXECUTED            13240000
*                                                                       13260000
*                                                                       13280000
         EJECT                                                          13300000
*              SUBROUTINE TO PLACE AN ENTRY IN THE TRANSIENT GD.        13320000
* THIS PROGRAM IS TRANSPARENT TO THE SCRATCH REGISTERS, RE1,RD1,RE2,RD2 13340000
*                                                                       13360000
ENTRAN   STM   RE1,RD2,TREGS                                            13380000
         LH    RE1,ENTLN                ENTRY LENGTH - CHAIN PTR - 1.   13400000
         L     RD1,TNDX                 TRANSIENT BLOCK INDEX.          13420000
         LA    RD2,BLKSZ-4              NEED AT LEAST 4 FOR FLAG BYTE.  13440000
         CLR   RD1,RD2                                                  13460000
         BH    ENTR15                   BRANCH IF NO ROOM FOR FLAG.     13480000
         LA    RE2,4(RE1,RD1)           INDEX PLUS ENTRY LENGTH.        13500000
         ST    RE2,TNDX                                                 13520000
         LA    RD2,BLKSZ                INDEX END TEST VALUE.           13540000
         CLR   RE2,RD2                  SEE IF ROOM FOR ENTRY.          13560000
         LA    RD1,0(RD1,CRA)           RETAIN CONDITION CODE.          13580000
         MVI   3(RD1),0                 INSERT 0 IN FB FOR SUBSETTING.  13600000
         BH    ENTR15                   BRANCH IF NOT ENOUGH SPACE.     13620000
ENTR4    L     RD2,DENTRY                                               13640000
         EX    RE1,ENTR12               MOVE THE ENTRY INTO THE GD.     13660000
         LA    EPTR,3(0,RD1)                                            13680000
         MVC   0(3,RD1),0(PREV)         MOVE HT POINTER INTO ENTRY.     13700000
         L     RE2,VCR                                                  13720000
         MVC       0(3,PREV),VCR+1      STORE VIRTUAL LOCATION IN HT.   13740000
         SR        RS3,RS3             GET MAX LENGTH IN CASE SETC      13750000
         IC        RS3,3(RE1,RD1)                                       13755000
         LA    RE2,4(RE2,RE1)           ADVANCE VIRTUAL STORAGE POINTER 13760000
         ST    RE2,VCR                  STORE NEW VALUE.                13780000
         LM    RE1,RD2,TREGS                                            13800000
         BR    RLNK                                                     13820000
ENTR12   MVC   3(NUL,RD1),0(RD2)                                        13840000
*./      DELETE    SEQ1=13860020,SEQ2=13880020                          13880000
ENTR15   C     PPA,DEND                DO WE NEED SOME MORE CORE FOR    13900000
         BL    RMLEFT                  DICTIONARY. BIF NO               13920000
         BAL   RD1,GETCRBLK            GO AND GET ANOTHER BLOCK OF CORE 13940000
*./      DELETE    SEQ1=13960020,SEQ2=14000020                          14000000
RMLEFT   LA    CRA,BLKSZ(0,CRA)        INCREMENT CRA                    14020000
         LA    PPA,BLKSZ(0,PPA)        AND PPA                          14040000
         LA    RD1,5(0,RE1)             ENTRY LENGTH+1 IS               14060000
         ST    RD1,TNDX                 NEW INDEX FOR NEXT TIME.        14080000
         LA    RD1,1(0,CRA)             RESET FOR THIS TIME.            14100000
         LR        RE2,CRA             RESET VIRTUAL POINTER.           14120000
         SR        RE2,THLDA                                            14140000
         LA    RE2,1(0,RE2)                                             14160000
         ST    RE2,VCR                                                  14180000
         B     ENTR4                    RETURN AND MAKE THE ENTRY.      14200000
*                                                                       14220000
*                  THE FOLLOWING CODING TRYS TO GET A BLOCK OF CORE     14240000
*                  FROM BUFF AND UPDATES POINTER DEND, AND ZEROES FIRST 14260000
*                  SEVEN BYTES OF BLOCK OBTAINED TO INITIALIZE IT IF    14280000
*                  SUCESSFUL. OTHERWISE IT BRANCHES TO ABORTP TO        14300000
*                  PRINT MESSAGE AND ABEND. RETURN REGISTER IS RD1.     14320000
*                                                                       14340000
R0       EQU   0                       MUST BE REG 0                    14360000
GETCRBLK STM   R0,RA,SAVE0             SAVE REGS 1,0                    14380000
         L     RA,BUFFENT              LOAD ADDRESS OF RENNIE S         14400000
         CNOP  2,4                     BUFFERING ROUTINE.               14420000
         BALR  R0,RA                   GO ASK HIM TO SHRINK             14440000
         DC    A(36)                   CODE FOR SHRINK                  14460000
         DC    A(BLKSZ)                AMOUNT OF CORE REQUIRED          14480000
COREGOT  DS    F                       ADDR OF CORE GOT.(-1 IF CORE     14500000
         CLI   COREGOT,X'FF'           NOT AVAILABLE).WAS IT .Q         14520000
         BNE   GOBACK                  BIF WE GOT IT.                   14540000
         B     ABORTP                  WE DID NOT GET IT. WE MUST ABEND 14560000
GOBACK   L     RA,DEND                 MOVE DEND                        14580000
         LA    RA,BLKSZ(0,RA)          POINTER                          14600000
         ST    RA,DEND                                                  14620000
         L     RA,COREGOT              INITIALIZE DICT BLK--ZERO FIRST  14640000
         MVC   0(7,RA),FZRO            SEVEN BYTES                      14660000
         LM    R0,RA,SAVE0             RESTORE REGS 1,0                 14680000
         BR    RD1                     RETURN TO CALLER.                14700000
*                                                                       14720000
ABORTP   DS        0H                                                   14730000
         L         L5,ALIBWAIT         ADDRESS OF SYSLIB WAIT ROUTINE   14740000
         BALR      RD1,L5              TERMINATE ANY SYSLIB ACTIVITY    14750000
         L         RA,ADLIST1          BRANCH TO ABORT ROUTINE IN ASM   14760000
         BAL       R0,L1ABEND(,RA)     POINT AT MESSAGE AND BRANCH      14780000
         DC        C'992I',AL1(L'MES992-1)                              14800000
MES992   DC        C'INSUFFICIENT DICTIONARY SPACE FOR PHASE F2'        14820000
SAVE0    DC        2F'0'                                                14840000
ALIBWAIT DC        A(LIBWAIT)          LIBWAIT ENTRY ADDRESS            15040000
         EJECT                                                          15060000
*              FORWARD CHAIN TRACING SUBROUTINE.                        15080000
*                                                                       15100000
* THIS SUBROUTINE TRACES A PERMANENT AREA CHAIN UNTIL EITHER A BCD      15120000
* MATCH OR END OF CHAIN.  REGISTERS PREV AND CRNT ARE ABSOLUTE POINTERS 15140000
* TO PREVIOUS AND CURRENT ENTRIES IN A CHAIN.                           15160000
* CALLING SEQUENCE...                                                   15180000
*        BAL   RLNK,FCHN                                                15200000
*        B     (MATCH)                                                  15220000
*              (END OF CHAIN)                                           15240000
*                                                                       15260000
FCHN     LH    PREV,HSHVAL              DEVELOP HASH INDEX.             15280000
         N     PREV,PHASHM                                              15300000
         LA    PREV,PHASHT(PREV)                                        15320000
         CLC   FZRO(2),0(PREV)          TEST FOR NO CHAIN AT ALL.       15340000
         LR    CRNT,PREV                                                15360000
         BE    4(0,RLNK)                                                15380000
FCH2     MVC   EVENX+2(2),0(PREV)       GET CHAIN POINTER.              15400000
         L     CRNT,EVENX                                               15420000
         AL    CRNT,GDP                 MAKE IT ABSOLUTE.               15440000
         IC    RE1,2(0,CRNT)            PICK UP FLAG BYTE OF GD ENTRY.  15460000
         N     RE1,HSH7                 EXPOSE LENGTH.                  15480000
         CR    RE1,LARG                 COMPARE LENGTHS.                15500000
         BNE   FCH3                                                     15520000
         L     RD1,DENTRY                                               15540000
         EX    RE1,FCH5                 COMPARE BCD NAMES.              15560000
         BCR   8,RLNK                                                   15580000
FCH3     CLC   FZRO(2),0(CRNT)          TEST FOR END OF CHAIN.          15600000
         BE    4(0,RLNK)                                                15620000
         LR    PREV,CRNT                ADVANCE POINTERS.               15640000
         B     FCH2                     CONTINUE.                       15660000
FCH5     CLC   1(NUL,RD1),3(CRNT)                                       15680000
*                                                                       15700000
         EJECT                                                          15720000
*              BACKWARD CHAIN TRACING SUBROUTINE.                       15740000
*                                                                       15760000
* AT ENTRY, REGISTER PREV POINTS ABSOLUTELY TO A HASH TABLE ENTRY.      15780000
* ALL CHAIN POINTERS ASSOCIATED WITH THE TRANSIENT AREA ARE RELATIVE TO 15800000
* THE THRESHOLD.                                                        15820000
* AT EXIT, REGISTER PREV IS UNCHANGED. REGISTER CRNT POINTS TO THE      15840000
* MATCHING ENTRY IF FOUND. OTHERWISE CRNT'S CONTENTS ARE IRRELEVANT.    15860000
* CALLING SEQUENCE...                                                   15880000
*        BAL   RLNK,BCHN                                                15900000
*        B     (MATCH)                                                  15920000
*              (END OF CHAIN)                                           15940000
*                                                                       15960000
BCHN     EQU   *                                                        15980000
         LH    PREV,HSHVAL              DEVELOP HASH INDEX.             16000000
         N     PREV,THASHM                                              16020000
         MH    PREV,H3                                                  16030000
         LA    PREV,THASHT(PREV)                                        16040000
         CLC   FZRO(3),0(PREV)          TEST FOR NO CHAIN AT ALL.       16060000
         BE    4(0,RLNK)                                                16080000
         STM   RE1,RD2,TREGS                                            16100000
         MVC   EVENY+1(3),0(PREV)                                       16120000
BCH2     L     RA,EVENY                 SAVE POSITION IN CHAIN.         16140000
*./      DELETE    SEQ1=16160020,SEQ2=16300020                          16300000
         LA    RD1,0(THLDA,RA)         ABSOLUTE ADDR. OF BLOCK          16320000
         IC    RE2,3(0,RD1)             GET FLAG BYTE OF GD ENTRY.      16340000
         N     RE2,HSH7                 ISOLATE BCD LENGTH.             16360000
         CR    RE2,LARG                 COMPARE LENGTHS.                16380000
         BNE   BCH55                                                    16400000
         L     RE1,DENTRY                                               16420000
         EX    RE2,BCH76                COMPARE BCD NAMES.              16440000
         BE    BCH58                                                    16460000
BCH55    CLC   FZRO(3),0(RD1)           TEST FOR END OF CHAIN.          16480000
         BE    BCH57                                                    16500000
         MVC   EVENY+1(3),0(RD1)        GET POINTER TO NEXT ENTRY.      16520000
         B     BCH2                                                     16540000
BCH57    LM    RE1,RD2,TREGS                                            16560000
         B     4(0,RLNK)                                                16580000
BCH58    LR    CRNT,RD1                                                 16600000
         LM    RE1,RD2,TREGS                                            16620000
         BR    RLNK                                                     16640000
BCH71    CLI   0(RD1),0                 BLOCK NUMBER COMPARE.           16660000
*./      DELETE    SEQ1=16680020,SEQ2=16680020                          16680000
BCH76    CLC   1(NUL,RE1),4(RD1)        BCD NAME COMPARE.               16700000
*                                                                       16720000
         EJECT                                                          16740000
*              BCD NAME HASHING SUBROUTINE.                             16760000
*                                                                       16780000
* SUBROUTINE ALSO DETERMINES AND SAVES LENGTH OF BCD NAME OF ARGUMENT.  16800000
*                                                                       16820000
HASH     L     RE1,DENTRY                                               16840000
         SR    RE2,RE2                  CLEAR RE2 AND                   16860000
         LR    RD2,RE2                  HASHING AREA.                   16880000
         STM   RE2,RD2,HSHA                                             16900000
         IC    LARG,0(0,RE1)            GET ARGUMENT LENGTH.            16920000
         N     LARG,HSH7                                                16940000
         EX    LARG,HSHMV               MOVE.                           16960000
         L     RD2,HSHA                 FOLD ONCE.                      16980000
         AL    RD2,HSHA+4                                               17000000
         D     RE2,F65537               PRIME.                          17020000
         STH   RE2,HSHVAL                                               17040000
         BR    RLNK                                                     17060000
HSHMV    MVC   HSHA(NUL),1(RE1)                                         17080000
F65537   DC    F'8209'                  PRIME.                          17100000
HSH7     DC    F'7'                                                     17120000
*                                                                       17140000
         EJECT                                                          17160000
*              ROUTINE FOR LOOKING UP A DICTIONARY ENTRY.               17180000
*                                                                       17200000
DLKUP    DS    0H                                                       17220000
         STM   RB,L5,SAVREG                                             17240000
         L     B2,DUSING                                                17260000
         LM    CRA,THLDA,HISTRY                                         17280000
         BAL   RLNK,HASH                HASH THE ARGUMENT NAME.         17300000
         CLI   DENTRY,2                 TEST IF TRANSIENT AREA ONLY.    17320000
         BNE   DLK18                    BRANCH IF NOT.                  17340000
DLK13    BAL   RLNK,BCHN                SEARCH TRANSIENT AREA.          17360000
         B     DLK25                    BCD MATCH.                      17380000
DLK15    SR    EPTR,EPTR                                                17400000
         B     DLK29                                                    17420000
DLK18    BAL   RLNK,FCHN                SEARCH PERMANENT AREA.          17440000
         B     DLK19                    BCD MATCH.                      17460000
DLK20    CLI   DENTRY,1                 TEST FOR PA SEARCH ONLY.        17480000
         BE    DLK15                    BRANCH IF YES.                  17500000
         B     DLK13                    GO SEARCH TRANSIENT AREA.       17520000
DLK25    LA    EPTR,3(0,CRNT)                                           17540000
DLK26    TM    0(EPTR),X'60'            TEST IF OP-CODE OR MACRO.       17560000
         BZ    DLK28                    BRANCH ON PROBABLE OP-CODE.     17580000
DLK27    LA    RE1,2(EPTR,LARG)         POINT TO LITTLE 'A' FIELD.      17600000
         MVC   EVENX+2(2),0(RE1)                                        17620000
         L     APTR,EVENX                                               17640000
         B     DEXIT                                                    17660000
DLK28    TM    0(EPTR),X'18'            TEST IF MACRO.                  17680000
         BO    DLK27                    BRANCH IF YES.                  17700000
DLK29    SR    APTR,APTR                OP-CODE.                        17720000
         B     DEXIT                                                    17740000
DLK19    TM    2(CRNT),X'80'            IS GLOBAL INACTIVE .Q           17760000
         BO    DLK20                    BIF YES                         17780000
         LA        EPTR,2(0,CRNT)       NO                              17800000
         B         DLK26                                                17810000
*                                                                       17820000
         EJECT                                                          17840000
*                                                                       17860000
*        REGISTERS AND EQU'S                                            17880000
*                                                                       17900000
REG1     EQU   4                                                        17920000
REG2     EQU   5                                                        17940000
REG3     EQU   6                                                        17960000
XTRD     EQU   7               ABSOLUTE INDEX TO TRANSIENT DICT AREA    17980000
XMCD     EQU   8               ABSOLUTE INDEX TO MACRO DICT AREA        18000000
FLGBYT   EQU   9               FLAG BYTE STORAGE                        18020000
LITTLA   EQU   10              LITTLE A STORAGE                         18040000
SSFILE   EQU   0               MACRO DICTIONARIES ON SYSUT1             18060000
*                                                                       18080000
*        CONSTANTS                                                      18100000
*                                                                       18120000
         DS    0F                                                       18140000
FLGM1    DC    XL4'7'          FLAGBYTE MASK. 00000111                  18160000
LAST     DC    XL4'FF'         LAST ENTRY SIGNAL. 11111111(AS FLAGBYTE) 18180000
ENDBLK   DC    F'0'            END OF BLOCK SIGNAL. 00000000(FLAGBYTE)  18200000
RNDMSK2  DC        X'FFFFFFF8'                                          18220000
         EJECT                                                          18240000
*                                                                       18260000
*        SUBSETTING ROUTINE - TRANSIENT DICTIONARIES                    18280000
*                                                                       18300000
*        THIS ROUTINE SUBSETS THE TRANSIENT DICTIONARY FOR EACH MACRO   18320000
*        IMMEDIATELY AFTER IT HAS BEEN CLOSED OUT.  THE SUBSETTED MACRO 18340000
*        DICTIONARY IS WRITTEN TO SYSUT1.  THE TRANSIENT DICTIONARY     18360000
*        FOR OPEN CODE IS SUBSETTED AND WRITTEN TO SYSUT1 ALSO.  IT'S   18380000
*        NOTE/POINT ADDRESS IS STORED IN 'NPMAIN' AND LATER PASSED      18400000
*        TO F3 IN REGISTER RB.                                          18420000
*                                                                       18440000
*        INPUT PARAMETERS FOR THIS ROUTINE ARE STORED IN COMMON AREA    18460000
*        AS FOLLOWS --- 'DEND' - ABSOLUTE ADDRESS OF END OF DICTIONARY  18480000
*        AREA, 'HISTRY'+8 - ABSOLUTE ADDRESS OF DICTIONARY THRESHOLD,   18500000
*        'SWTCH5' - BIT1 IS SET IF OPEN CODE IS BEING PROCESSED.        18520000
*                                                                       18540000
*        THE TRANSIENT DICTIONARY IS SUBSETTED INITIALLY INTO ONE       18560000
*        BLOCK (BLKSZ) OF CORE WHICH IS ZEROED. WHEN THIS BLOCK IS      18580000
*        FILLED, THE NEXT BLOCK (WHICH WAS UNSUBSETTED DICT. BEFORE)    18600000
*        IS ZEROED AND SUBSETTING CONTINUES IN THIS MANNER. IF A BLOCK  18620000
*        OF SUBSETTED DICT. IS GOING TO BE LARGER THAN THE UNSUBSETTED  18640000
*        BLOCK(I.E. IF DIMENSIONED SET SYMBOLS ARE USED),A NEW BLOCK OF 18660000
*        OF CORE MUST BE OBTAINED,THE T.D. MUST BE MOVED AHEAD 1 BLOCK, 18665000
*        AND THEN THE FREE BLOCK IS ZEROED AND SUBSETTING RESUMES.      18670000
*                                                                       18680000
*        CALLING SEQUENCE ... BAL   LINK,TSBSET                         18700000
*                                                                       18720000
TSBSET   DS    0H                                                       18740000
         STM   RQ,L5,SAVREG            THIS AGREES WITH EOFLIB ON NULL  18760000
*                                      MACROS                           18770000
         L     B2,DUSING                                                18780000
*                                                                       18800000
*                                                                       18820000
*        SETUP INPUT AND SUBSETTING AREAS IN TRANSIENT DICTIONARY AREA  18840000
*                                                                       18860000
         MVI       SBSWCH,C'T'         NOTE SUBSETTING TRANS DICT       18870000
         L     REG1,HISTRY+4           FORMER PPA FOR TRANS DICT.       18880000
         CL    REG1,DEND               DO WE HAVE A SPARE EMPTY BLK LFT 18900000
         BL    *+8                     BIF YES                          18920000
         BAL   REG2,GETCRBLK           GET ANOTHER BLOCK AT TOP OF DICT 18940000
         LA    REG2,BLKSZ              STORE INITIAL LENGTH OF          18960000
         ST    REG2,MCDSZ              SUBSETTING AREA                  18980000
         A     REG2,HISTRY+8           COMPUTE END OF SUBSET            19000000
         ST    REG2,TRD                AREA=INPUT AREA=UNSUBSETTED DICT 19020000
         LR    XTRD,REG2                                                19040000
         LA    REG2,BLKSZ-1(0,REG2)    END OF FIRST BLOCK OF DICT.      19060000
         ST    REG2,ENDTRD                                              19080000
         L     REG2,HISTRY+8           THRESHOLD(THAT WAS) IS           19100000
         ST    REG2,MCD                NOW BEGINNING OF SUBSET AREA     19120000
         ST    REG2,MCD1               SAVE AT MCD1 TOO                 19130000
*                  NOW MOVE WHOLE DICT AHEAD ONE BLOCK TO ALLOW ONE     19140000
*                  BLOCK OF INITIAL SUBSETTING AREA                     19160000
*                  REG1 POINTS ALREADY TO START OF AREA TO MOVE TO      19180000
         LA    LINK,MOVEFIN            SET TO RETURN TO MOVEFIN         19190000
MOVE1024 LA    REG2,BLKSZ              SIZE OF MOVE                     19200000
MOVELP1  CL    REG1,MCD1               MOVE FINISHED YET                19220000
         BCR   13,LINK                 BIF YES (BNH)                    19240000
         SR    REG1,REG2               SET FOR NEXT MOVE                19260000
         MVC   BLKSZ(256,REG1),0(REG1) MOVE 1024 BYTES IN               19280000
         MVC   BLKSZ+256(256,REG1),256(REG1)     FOUR MOVES OF 256      19300000
         MVC   BLKSZ+512(256,REG1),512(REG1)                            19320000
         MVC   BLKSZ+768(256,REG1),768(REG1)                            19340000
         B     MOVELP1                 WE ARE NOT FINISHED YET          19360000
MOVEFIN  EQU   *                                                        19380000
*                                                                       19400000
*        SAVE ADDRESS OF G.D. MACRO NAME ENTRY FOR LATER USE            19420000
*                                                                       19440000
         ST    XTRD,MCD1               BEGINNING OF INPUT BLOCK         19450000
         MVC   MACNAM(4),0(XTRD)  SAVE ADDRESS OF MACRO NAME ENTRY      19460000
         TM    SWTCH5,64               ARE WE IN OPEN CODE              19480000
         BNO   *+8                     BIF NO                           19500000
         LA    XTRD,5(XTRD)            ADD 5 BYTES INCREMENT FOR O.C.   19520000
         LA    XTRD,4(XTRD)       INCREMENT INPUT AREA INDEX BY 4       19540000
*                                                                       19560000
*        MAKE INITIAL CALL TO DICTIONARY SUBSETTING ROUTINE             19580000
*                                                                       19600000
         BAL   LINK,SBSET              ZERO SUBSETTING AREA             19620000
         B     TSBST2                                                   19640000
*                  SET UP ANOTHER DICT. BLOCK FOR SUBSETTING            19660000
TSBST1   L     XTRD,ENDTRD             FORMER END OF INPUT.AREA         19680000
         L         REG2,MCD1           FORMER START OF INPUT AREA       19680300
         XC        000(256,REG2),000(REG2) ZERO THE BLOCK               19680600
         XC        256(256,REG2),256(REG2)   EVEN THOUGH IF MAY NOT     19680900
         XC        512(256,REG2),512(REG2)   BE USED                    19681200
         XC        768(256,REG2),768(REG2)                              19681500
         LA        REG2,BLKSZ(,REG2)   UPDATE IT                        19682000
         ST        REG2,MCD1           NEW START OF INPUT BLOCK         19683000
         L     REG2,MCDSZ              SIZE OF OUTPUT AREA              19686000
         LA    REG2,BLKSZ(0,REG2)      UPDATE IT                        19689000
         ST    REG2,MCDSZ              AND SAVE NEW VALUE               19692000
         LA    REG2,BLKSZ(0,XTRD)      NEW END OF DICT. INP. AREA.      19700000
         ST    REG2,ENDTRD                                              19720000
         CL    REG2,DEND                                                19740000
         BH    ABORTP                  ERROR.                           19760000
         LA    XTRD,2(0,XTRD)          POINT TO NEW INP AREA            19780000
*                  MAKE SUBSEQUENT CALL TO SUBSETTING ROUTINE           19800000
TSBST2   EQU   *                                                        19820000
         BAL   LINK,SBSET1     CALL SUBSETTING ROUTINE                  19840000
         B     TSBST1                  END OF INPUT BLOCK RETURN.       19860000
*        B     *+4              END OF DICTIONARY RETURN                19880000
*                                                                       19900000
*        STORE DICT SIZE IN SUBSETTED DICT AND OUTPUT PARAMETER LIST    19920000
*                                                                       19940000
         L     XMCD,MCD        SET SUBSETTED DICTIONARY INDEX           19960000
         MVC   18(2,XMCD),1(XTRD)  MOVE DICT SIZE FROM LAST INPUT       19980000
*                                                                       20000000
*        STORE STANDARD ACTR VALUE IN SUBSETTED DICTIONARY              20020000
*                                                                       20040000
         MVC   4(4,XMCD),ACTR                                           20060000
*                                                                       20080000
BNOTE    TM    SWTCH5,64               IN O.C. .Q                       20100000
         BZ        CNOTE               BRANCH IF NOT                    20110000
         MVC   NPMAIN(3),BWBLKS+BWFNOT N/P ADDRESS OF SUBSETTED O.C.    20120000
         B         ANOTE                                                20130000
*        STORE EDITED TEXT N/P ADDRESS IN DICTIONARY                    20140000
*                                                                       20160000
CNOTE    L     REG3,MACNAM     RECOVER ADDRESS OF MACRO NAME ENTRY      20180000
         IC    REG2,0(0,REG3)  FIND LENGTH OF BCD MACRO NAME-1 AND ADD  20200000
         N     REG2,FLGM1       IT TO ADDRESS OF MACRO NAME ENTRY       20220000
         AR    REG3,REG2                                                20240000
         MVC   12(3,XMCD),4(REG3)  MV EDITED TEXT N/P TO SUBSETTED DICT 20260000
         MVC       4(3,REG3),BWBLKS+BWFNOT  STORE N/P OF SUBSETTED     X20270000
                   MACRO DICT. IN GLOBAL DICT.                          20275000
*                                                                       20280000
*        COMPUTE NO OF BLOCKS OF DICT AND STORE INTO DICTIONARY         20300000
*                                                                       20320000
ANOTE    LH    REG2,18(0,XMCD) GET DICTIONARY SIZE                      20340000
         N     REG2,F65535              BE SURE DICT SIZE IS PLUS       20350000
         L     REG1,RECSZ      GET STANDARD BLOCK SIZE                  20360000
         ST        REG1,WRLEN1 STORE BLOCK SIZE IN OUTPUT PARAMETER     20380000
         LR        L5,REG2     COMPUTE NUMBER OF BLOCKS OF DICT         20400000
         BCTR      L5,0                                                 20410000
         SR        L4,L4                                                20420000
         DR        L4,REG1                                              20440000
         LA        L5,1(0,L5)                                           20460000
         STC     L5,17(0,XMCD) STORE NO OF BLOCKS INTO DICT             20480000
*./      DELETE    SEQ1=20500020,SEQ2=20500020                          20500000
*                                                                       20520000
*              WRITE BLOCK OF DICTIONARY TO SYSUT1                      20540000
*                                                                       20560000
TSBST0   C         REG2,RECSZ          TEST IF SHORT BLOCK CAN BE WRIT  20580000
         BNL       *+8                                                  20600000
         ST        REG2,WRLEN1         YES  PLACE BLOCKSIZE             20605000
         L         L5,MCD              WRITE ADDRESS                    20610000
         ST        L5,WRADD1                                            20615000
         L         RA,BUFFENT          DO THE WRITE                     20620000
         CNOP      2,4                                                  20625000
         BALR      RQ,RA                                                20630000
         DC        A(8,0)                                               20635000
WRADD1   DC        F'0'                                                 20640000
WRLEN1   DC        F'0'                                                 20645000
         L         RA,BUFFENT          DO A CHECK                       20650000
         CNOP      2,4                                                  20655000
         BALR      RQ,RA                                                20660000
         DC        A(28,0)                                              20665000
*./      DELETE    SEQ1=20680020,SEQ2=20900020                          20900000
*        WRITE SUBSEQUENT BLOCKS OF DICT TO SYSUT1                      20920000
*./      DELETE    SEQ1=20940020,SEQ2=20960020                          20960000
         L     REG1,MCD                                                 20980000
         A     REG1,RECSZ                                               21000000
         ST    REG1,MCD                                                 21020000
         S         REG2,RECSZ                                           21040000
         BH        TSBST0              BRANCH IF MORE BLOCKS TO BE WRIT 21060000
*        DO A NOTE FOR COMPATIBILITY WITH TEXT WRITTING ROUTINES        21062000
         L         RA,BUFFENT                                           21064000
         CNOP      2,4                                                  21066000
         BALR      RQ,RA                                                21068000
         DC        A(20,0)                                              21070000
NTNP1    DC        F'0'                                                 21072000
         MVC       BWBLKS+BWFNOT(4),NTNP1                               21074000
*                                                                       21080000
*        RETURN TO CALLING ROUTINE                                      21100000
*                                                                       21120000
*./      DELETE    SEQ1=21140020,SEQ2=21140020                          21140000
         LM    RQ,L5,SAVREG                                             21160000
         BCR   15,LINK                                                  21180000
*./      DELETE    SEQ1=21200020,SEQ2=21600020                          21600000
         EJECT                                                          21620000
*                                                                       21640000
*                                                                       21660000
*        SUBSETTING ROUTINE - PERMANENT DICTIONARY                      21680000
*                                                                       21700000
*        THIS ROUTINE SUBSETS THE PERMANENT DICTIONARY.  INPUTS TO THE  21720000
*        ROUTINE ARE THE PERMANENT DICTIONARY IN CORE.                  21740000
*                                                                       21760000
*        INPUT PARAMETERS FOR THIS ROUTINE ARE STORED IN THE COMMON     21780000
*        AREA AS FOLLOWS --- 'GDP' - ABSOLUTE ADDRESS OF DICTIONARY,    21800000
*        'DEND' - ABSOLUTE ADDRESS OF END OF DICTIONARY, 'ENDOPC' -     21820000
*        ADDRESS (RELATIVE TO GDP) OF FIRST PERMANENT DICTIONARY ENTRY  21840000
*        AFTER OP CODES, 'PNDX' - ADDRESS(RELATIVE TO GDP) OF NEXT      21860000
*        AVAILABLE LOCATION IN PERMANENT DICTIONARY, 'LTLAP' - LITTLE   21880000
*        A POINTER FOR PERMANENT DICTIONARY, 'ACTR' - STANDARD VALUE    21900000
*        FOR ACTR.                                                      21920000
*                                                                       21940000
*        CALLING SEQUENCE ... BAL   LINK,PSBSET                         21960000
*                                                                       21980000
PSBSET   DS    0H                                                       22000000
         STM   RB,L5,SAVREG                                             22020000
         L     B2,DUSING                                                22040000
*                                                                       22060000
*                                                                       22080000
*        MOVE PERMANENT DICTIONARY TO BEGINNING OF DICTIONARY AREA      22100000
*                                                                       22120000
         MVI       SBSWCH,C'P'         NOTE SUBSETTING PERM. DICT       22130000
         L     REG1,PNDX                                                22140000
         L     REG2,GDP        BEGIN ADDRESS OF DICT AFTER MOVE IN REG2 22160000
         L     REG3,ENDOPC                                              22180000
         AR    REG1,REG2       END ADDRESS OF DICT AFTER MOVE IN REG1   22200000
         SR    REG1,REG3                                                22220000
         AR    REG3,REG2       BEGIN ADDR OF DICT BEFORE MOVE IN REG3   22240000
MVDIC1   MVC   0(256,REG2),0(REG3)                                      22260000
         LA    REG2,256(0,REG2)                                         22280000
         LA    REG3,256(0,REG3)                                         22300000
         CLR   REG2,REG1                                                22320000
         BNH       MVDIC1              GO MOVE REMAINING DICT.          22340000
*                                                                       22360000
*        SETUP TO SUBSET PERMANENT DICTIONARY                           22380000
*                                                                       22400000
         ST    REG1,MCD        STORE BEGIN ADDRESS OF SUBSETTING AREA   22420000
         L     REG2,DEND       COMPUTE AND STORE SIZE OF SUBSET AREA    22440000
         LA    REG2,1(0,REG2)                                           22460000
         SR    REG2,REG1                                                22480000
         ST    REG2,MCDSZ                                               22500000
         L     XTRD,GDP        GET START ADDRESS OF PERMANENT DICT      22520000
         BCTR  REG1,0          GET AND STORE END ADDRESS OF PERMANENT   22540000
         ST    REG1,ENDTRD      DICTIONARY                              22560000
         LM    REG1,REG2,LTLAP         GET SIZE OF SUBSETTED DICT  7953 22580000
         CLR   REG1,REG2                                           7953 22600000
         BC    2,*+6                                               7953 22620000
         LR    REG1,REG2                                           7953 22640000
         ST    REG1,LTTLAF                                         7953 22660000
*                                                                       22680000
*        CALL THE DICTIONARY SUBSETTING ROUTINE                         22700000
*                                                                       22720000
         BAL   LINK,SBSET                                               22740000
         BAL   LINK,SBSET1                                              22760000
PSBIND   EQU   *         MUST FOLLOW BAL LINK,SBSET1                    22780000
*                                                                       22800000
*        MOVE SUBSETTED PERMANENT DICTIONARY TO HEAD OF DICTIONARY AREA 22820000
*                                                                       22840000
         L     REG1,LTTLAF   GET SIZEOF SUBSETTED DICT             7953 22860000
CHKAGN1  CL    REG1,MCDSZ    IS IT TOO BIG FOR AREA                     22862000
         BNH   AFINE         NO. IT'S O.K.                              22864000
         BAL   LINK,HELP     GO GET SOME MORE CORE, ETC.                22866000
         B     CHKAGN1                  TRY AGAIN                       22868000
AFINE    L     REG2,GDP        BEGIN ADDRESS OF DICT AFTER MOVE IN REG2 22880000
         L     REG3,MCD        BEGIN ADDR OF DICT BEFORE MOVE IN REG3   22900000
         AR    REG1,REG2       END ADDRESS OF DICT AFTER MOVE IN REG1   22920000
MVDIC2   MVC   0(256,REG2),0(REG3)                                      22940000
         LA    REG2,256(0,REG2)                                         22960000
         LA    REG3,256(0,REG3)                                         22980000
         CLR   REG2,REG1                                                23000000
         BNH       MVDIC2              GO MOVE REMAINING DICT.          23020000
*                                                                       23040000
*        SETUP INPUT AREA AND SUBSETTING AREA FOR F3.                   23060000
*                                                                       23080000
         LA    REG3,8(0,REG1)  ROUND SUBSETTING ADDRESS UP TO DOUBLE    23100000
         N     REG3,RNDMSK2     WORD BOUNDRY AND STORE                  23120000
         ST    REG3,MCD                                                 23140000
         L     REG2,GDP                                                 23160000
         ST    REG3,0(0,REG2)  ALSO STORE IN FIRST WORD OF PERM DICT    23180000
         L     REG1,DEND       GET AND STORE END ADDRESS OF INPUT AREA  23200000
         ST    REG1,ENDTRD                                              23220000
*./      DELETE    SEQ1=23240020,SEQ2=23300020                          23300000
*                                                                       23320000
*        RETURN TO CALLER                                               23340000
*                                                                       23360000
         LM    RB,L5,SAVREG                                             23380000
         BCR   15,LINK                                                  23400000
*                                                                       23420000
         EJECT                                                          23440000
*                                                                       23460000
*        DICTIONARY SUBSETTING ROUTINE                                  23480000
*                                                                       23500000
*        THIS ROUTINE CLEARS THE SUBSETTING AREA TO ZEROS. IT REQUIRES  23520000
*        THE ADDRESS OF THE SUBSETTING AREA IN 'MCD' AND THE AREA       23540000
*        SIZE IN 'MCDSZ'.                                               23560000
*                                                                       23580000
*        CALLING SEQUENCE - - - - -                                     23600000
*        BAL   LINK,SBSET                                               23620000
*                                                                       23640000
SBSET    EQU   *                                                        23660000
         L     REG1,MCD        CLEAR THE SUBSETTING AREA TO ZERO        23680000
         L     REG2,MCDSZ       CONTENTS OF MCD GIVES BEGINNING         23700000
SBSETB   AR    REG2,REG1        ADDRESS AND CONTENTS MCD + CONTENTS     23720000
*                  ENTER AT SBSETB WITH REG1 AND REG2 ALREADY DEFINED   23740000
         LA    REG3,256                                                 23760000
         MVI   0(REG1),0           CLEAR FIRST BLOCK OF 256 BYTES       23780000
         MVC   1(255,REG1),0(REG1)                                      23800000
SBSETA   SR    REG2,REG3           CLEAR THE REST OF THE AREA BLOCK BY  23820000
         CR    REG2,REG1           BLOCK STARTING WITH LAST BLOCK AND   23840000
         BCR   12,LINK         WORKING BACKWARDS                   7869 23860000
         MVC   0(256,REG2),0(REG1)                                      23880000
         BC    15,SBSETA                                                23900000
*                                                                       23920000
*                                                                       23940000
*        THIS ROUTINE SUBSETS A DICTIONARY FROM AN AREA OF CORE WHOSE   23960000
*        ADDRESS IS IN 'TRD' AND WHOSE END ADDRESS IS IN 'ENDTRD' INTO  23980000
*        AN AREA OF CORE WHOSE ADDRESS IS IN 'MCD'. THIS ROUTINE WILL   24000000
*        RETURN TO THE CALLING ROUTINE AT THE ADDRESS IMMEDIATELY       24020000
*        FOLLOWING THE BAL INSTRUCTION IF END OF DICTIONARY IS REACHED. 24040000
*        IF A FLAGBYTE OF X'FF' IS ENCOUTNERED, RETURN IS MADE TO THE   24060000
*        ADDRESS+4 FOLLOWING THE BAL INSTRUCTION(END OF TRANSIENT DICT) 24080000
*                                                                       24100000
*        DICTIONARY SUBSETTING IS DYNAMIC IN TWO WAYS-                  24120000
*             (1) TRANSIENT DICTIONARY SUBSETTING OCCURS ON TOP OF,     24140000
*             BUT ONE BLOCK BEHIND, THE UNSUBSETTED DICT. IN THIS WAY   24160000
*             WHEN SUBSETTING CORE IS REQUIRED, A BLOCK OF SUBSETTED    24180000
*             UNSUBSETTED DICT. SPACE CAN BE ZEROED, THEN USED; UNLESS  24200000
*             DIMENSIONED SET SYMBOLS CAUSE THE SUBSETTED DICT. BLOCK   24205000
*             TO BE LARGER THAN THE UNSUBSETTED DICT. BLOCK.            24210000
*             (2) PERMANENT DICTIONARY SUBSETTING TAKES PLACE IN THE    24220000
*             AREA FROM THE END OF THE UNSUBSETTED DICT. TO DEND.       24240000
*             IF IT RUNS OUT OF SPACE, MORE CORE IS REQUESTED FROM BUFF 24260000
*             AT 'GETCRBLK', AND THE SUBSETTING AREA IS EXPANDED, THE   24280000
*             NEW BLOCK IS ZEROED, AND THE SUBSETTING RESUMES.          24300000
*                                                                       24320000
*        CALLING SEQUENCE - - - - - -                                   24340000
*        BAL   LINK,SBSET1                                              24360000
*        RETURN FOR END OF PERM DICT OR END OF TRANS DICT.              24380000
*                                                                       24400000
SBSET1   EQU   *                                                        24420000
         ST    LINK,SVLINK             SAVE THAT REGISTER               24430000
SBSET1A  LA    XTRD,2(0,XTRD)  INCREMENT TRANSIENT DICT INPUT AREA BY 2 24440000
         CLI       SBSWCH,C'P'         ARE WE SUBSETTING PERM .Q        24445000
         BE        SUBPERM             BR IF YES                        24450000
         LA        XTRD,1(0,XTRD)      SUBSETTING TRANS                 24455000
SUBPERM  C     XTRD,ENDTRD       EXIT IF END OF PRESENT BLOCK           24460000
         BCR   10,LINK                 OR END OF PERM. DICT.            24480000
         TM    0(XTRD),255     EXIT IF                             7869 24500000
         BCR   8,LINK                  END OF PRESENT DICT BLOCK        24520000
         BO    4(0,LINK)               OR END OF DICTIONARY        7869 24540000
         LR    FLGBYT,XTRD      SAVE FLAG BYTE ADDRESS             7869 24560000
         IC    REG2,0(0,XTRD)      ISOLATE LENGTH OF NAME IN ENTRY 7869 24580000
         N     REG2,FLGM1      INCREMENT TRANSIENT AREA INDEX BY LENGTH 24600000
         AR    XTRD,REG2        OF BCD NAME ENTRY PLUS 2 TO POSITION    24620000
         LA    XTRD,2(0,XTRD)   TO LITTLE A POINTER.                    24640000
         SR    XMCD,XMCD       LOAD MACRO DICT AREA INDEX WITH LITTLE   24660000
         IC    XMCD,0(0,XTRD)   A POINTER PLUS ABSOLUTE ADDRESS OF      24680000
         SLL   XMCD,8           MACRO DICT AREA . SAVE LITTLE A IN      24700000
         IC    XMCD,1(0,XTRD)   ANOTHER REGISTER                        24720000
         LR    LITTLA,XMCD                                              24740000
         A     XMCD,MCD                                                 24760000
         LA    REG1,4(0,LITTLA)         TEST TO SEE IF SUBSETTING AREA  24780000
CHKAGAN  CL    REG1,MCDSZ       IS LARGE ENOUGH TO HOLD ENTRY           24800000
         BNH   OKBACK             YES..O.K.                             24805000
         BAL   LINK,HELP               BIF NO.                          24810000
         L     LINK,SVLINK             RESTORE REGISTER                 24815000
         B     CHKAGAN             TRY AGAIN                            24820000
OKBACK   CLC   LTTLAF,F65535   ABORT IF LITTLA                          24840000
         BH    ABORTP                  OVERFLOWED TWO BYTES             24860000
         LA    XTRD,2(0,XTRD)  POSITION TRANS AREA INDEX BEYOND LITTLEA 24880000
         TM    0(FLGBYT),56    TEST BITS 2-4 OF FLAGBYTE WHICH SHOW     24900000
         BC    8,TAG              TYPE OF ENTRY. BRANCH TO APPROPRIATE  24920000
         TM    0(FLGBYT),X'30'  ROUTINE FOR THAT TYPE OF ENTRY.         24940000
         BC    8,SBSET1A                                                24960000
         BC    1,SETC                                                   24980000
         TM    0(FLGBYT),X'28'                                          25000000
         BC    8,SYMB                                                   25020000
         BC    1,SETB                                                   25040000
         TM    0(FLGBYT),X'18'                                          25060000
         BC    1,MAC                                                    25080000
SETA     LR    REG1,XTRD       GET SUBSCRIPT BYTE ADDRESS               25100000
         LA    XTRD,2(,XTRD)  SET TRANSIENT AREA INDEX TO NXT ENTRY     25120000
SETA1    C     LITTLA,ENDBLK   TEST IF LITTLE A POINTER IS ZERO         25140000
         BC    8,SBSET1A         --YES, DONT STORE INTO SUBSETTED DICT  25160000
SETA2    CLC   0(2,REG1),F1       TEST IF ENTRY IS SUBSCRIPTED          25180000
         BC    8,SBSET1A         --NO, DONT STORE IN SUBSETTED DICT     25200000
         MVC   0(2,XMCD),0(REG1)  STORE SUBSCRIPT IN SUBSETTED DICT     25220000
         BC    15,SBSET1A                                               25240000
SETB     LR    REG1,XTRD       GET SUBSCRIPT BYTE ADDRESS               25260000
         LA    XTRD,3(,XTRD)  SET TRANSIENT AREA INDEX TO NXT ENTRY     25280000
         BC    15,SETA1                                                 25300000
SETC     LR        REG1,XTRD           SUBSCRIPT BYTE ADDRESS           25302000
         LA        XTRD,3(,XTRD)       SET TRANS AREA INDEX TO NEXT     25304000
         C         LITTLA,ENDBLK       TEST IF LITTLE A PTR IS ZERO     25306000
         BE        SBSET1A             DON'T STORE IN SUBSETTED DICT    25308000
         MVC       0(1,XMCD),2(REG1)   PLACE MAX LENGTH IN SUBSET DICT  25310000
         MVC       2(1,XMCD),2(REG1)   PLACE HERE ALSO IN CASE DIMENS'D 25311000
         B         SETA2               GO MOVE DIMENSION                25312000
TAG      C     LITTLA,ENDBLK   TEST IF LITTLE A POINTER IS ZERO         25320000
         BC    8,TAG1            --YES, DONT STORE INTO SUBSETTED DICT  25340000
*                              MOVE NOTE/POINT AND RELATIVE ADDRESSES   25360000
         MVC   0(5,XMCD),0(XTRD)  FROM TRANSIENT TO SUBSETTED DICT.     25380000
TAG1     LA    XTRD,5(0,XTRD)  SET TRANSIENT AREA INDEX TO NEXT ENTRY   25400000
         BC    15,SBSET1A                                               25420000
SYMB     C     LITTLA,ENDBLK   TEST IF LITTLE A POINTER IS ZERO         25440000
         BC    8,SYMB1           --YES, DONT STORE INTO SUBSETTED DICT  25460000
         CLI   3(XTRD),X'80'            IS SYMBOL AN EXTENDED EQU .Q    25465000
         BNE   SYMBA                    BRANCH IF NOT                   25470000
         MVC   0(1,XTRD),4(XTRD)        SET ACTUAL TYPE                 25475000
         MVI   4(XTRD),X'00'            ZERO SAVED TYPE VALUE           25480000
         B     SYMBB                    AND GO SET IT                   25485000
SYMBA    DS    0H                                                       25490000
         IC    REG2,0(,XTRD)            GET WORKING TYPE                25495000
         IC    REG2,TYPETRAN(REG2)      GET ACTUAL TYPE                 25500000
         STC   REG2,0(,XTRD)            SET ACTUAL TYPE                 25505000
SYMBB    DS    0H                                                       25520000
         MVC   0(5,XMCD),0(XTRD)                                        25540000
SYMB1    LA    XTRD,5(0,XTRD)                                           25560000
         BC    15,SBSET1A                                               25580000
MAC      C     LITTLA,ENDBLK   TEST IF LITTLE A POINTER IS ZERO         25600000
         BC    8,MAC1            --YES, DONT STORE INTO SUBSETTED DICT  25620000
         MVC   0(3,XMCD),0(XTRD)  MOVE NOTE/POINT TO SUBSETTED DICT     25640000
MAC1     LA    XTRD,5(0,XTRD)  SET DICT INDEX TO NEXT ENTRY             25660000
         BC    15,SBSET1A                                               25680000
TYPETRAN DC    AL1(P,Z,E,D,K,F,G,H,S,A)                                 25685000
         DC    AL1(V,Y,R,W,I,C,Q,B,J,X)                                 25690000
         DC    AL1(M,T,U,O,N,U,L,$)                                     25695000
*                                                                       25700000
* DICTIONARY SUBSET AREA IS TOO SMALL TO HOLD ENTRY. TRY TO EXPAND DICT 25720000
* AREA BY ONE BLOCK.  IF BUFF SAYS NO, PRINT ERROR MSG AND ABEND.       25740000
*                                                                       25760000
HELP     STM   LINK,REG3,SAVE2          SAVE SOME REGISTERS             25780000
         LA    REG1,PSBIND             FETCH PERM. SUBSET RETURN        25800000
         L     LINK,SVLINK             GET RETURN ADDR FROM SUBSET      25810000
         LA    LINK,0(0,LINK)           ZERO HIGH ORDERED BYTE          25820000
         CR    REG1,LINK                IS PERMANENT DICT. SUBSETTED .Q 25840000
         BE    CORGET                  BIF YES.                         25860000
         L     REG3,HISTRY+4           END OF INPUT AREA(FORMER PPA)    25861000
         LA    REG3,BLKSZ(0,REG3)      DO WE NEED ANOTHER BLOCK         25862000
         CL    REG3,DEND               OF CORE                          25863000
         BL    NOCORE                  BIF NO.                          25864000
CORGET   BAL   REG2,GETCRBLK      WE NEED TO GET ANOTHER BLK OF CORE    25880000
NOCORE   CR    REG1,LINK               PERM. DICT. SUBSETTED?           25881000
         BE    ZEROIT                  BIF YES.                         25882000
         LR    REG1,REG3                                                25884000
         ST    REG1,HISTRY+4           SAVE NEW VALUE                   25885000
         BAL   LINK,MOVE1024           MOVE INP DICT AHEAD ONE BLOCK    25886000
         L     REG2,MCD1                                                25887000
         LA    REG2,BLKSZ(0,REG2)                                       25888000
         ST    REG2,MCD1               SAVE UPDATED VALUE               25889000
         LA    XTRD,BLKSZ(0,XTRD)      BUMP XTRD POINTER TOO.           25890000
         LA    FLGBYT,BLKSZ(0,FLGBYT)  BUMP PTR TO FLAG BYTE.           25891000
         L     REG2,ENDTRD             END OF CURRENT INP BLK.          25892000
         LA    REG2,BLKSZ(0,REG2)      INCREMENT IT                     25893000
         ST    REG2,ENDTRD             SAVE NEW VALUE                   25894000
ZEROIT   L     REG1,MCD                POINT REG1 TO BEGINNING          25900000
         A     REG1,MCDSZ              OF NEXT BLOCK                    25920000
         LA    REG2,BLKSZ              REG2 HAS BLOCKLENGTH TO ZERO     25940000
         BAL   LINK,SBSETB        ZERO NEXT BLOCK OF SUBSETTING AREA.   25960000
         LA    REG1,BLKSZ                                               25980000
         A     REG1,MCDSZ              SET MCDSZ TO NEW VALUE           26000000
         ST    REG1,MCDSZ                                               26020000
         LM    LINK,REG3,SAVE2         RESTORE REGS.                    26040000
         BR    LINK                    SUBSETTING AREA IS NOW BIGGER BY 26060000
*                                      BLKSZ BYTES - TRY AGAIN.         26080000
*                                                                       26085000
*                                                                       26090000
*                                                                       26100000
*                                                                       26120000
SBSWCH   DC        C'T'                                                 26130000
         EJECT                                                          26140000
*                                                                       26160000
* CLOSED ROUTINE TO DICTIONARY FOR OUTPUT OPERAND LIST FORMAT           26180000
*                                                                       26200000
LOOKUP   ST    B2,SAVEM+4               SAVE CALLER'S BASE REGISTER     26220000
         L     B2,DUSING                CONTINUE THE GAME               26240000
         IC    ZERORG,IOPNDX                                            26260000
         LA    OPNDS,OPNDL-4(ZERORG)                                    26280000
BEFORL   LA    OPNDS,4(0,OPNDS)         LOOK AT NEXT LIST ENTRY         26300000
         IC    ZERORG,OPNDX             CHECK IF END OF LIST            26320000
         LA    WORKRG,OPNDL(ZERORG)                                     26340000
         CR    WORKRG,OPNDS                                             26360000
         BH    CHKOUT                                                   26380000
         MVI   OPNDX,X'00'                                              26400000
         MVI   IOPNDX,0                                                 26420000
         L     B2,SAVEM+4               RESTORE THE BASE REGISTER       26440000
         BR    TEMPRG                                                   26460000
CHKOUT   MVC   LSTFLG(4),0(OPNDS)       SAVE LIST WORD                  26480000
         TM    LSTFLG,MASK0             DICTIONARY ACTION REQUIRED      26500000
         BZ    BEFORL                                                   26520000
         NI    0(OPNDS),X'07'                                           26540000
         IC    ZERORG,1(0,OPNDS)        POINT TO INPUT BUFFER LOCATION  26560000
         L     RA,INPUT                                                 26580000
         AR    RA,ZERORG                                                26600000
         MVC   DCAREA+1(8),0(RA)        EXTRACT BCD FROM INPUT AREA     26620000
         IC    ZERORG,0(0,OPNDS)        'LENGTH OF ENTRY' POINTER       26640000
         LH    DCTEMP,LSTFLG+2                                          26660000
         LA    DCTEMP,OUTPUT(DCTEMP)    POINTER TO OUTPUT               26680000
         LA    BLKSKP,DCAREA+2(ZERORG)  POINTER ONE PAST END OF BCD     26700000
         STC   ZERORG,DCAREA                                            26720000
         TM    LSTFLG,X'40'             TEST FOR VARIABLE SYMBOL        26740000
         BO    VARTYP                                                   26760000
         TM    LSTFLG,8                 TEST IF REFERENCE TO O.S. OR    26780000
         BZ    SEQREF                     S.S.                          26800000
         TM    LSTFLG,32                NO -TEST IF SEQUENCE SYMBOL     26820000
         BO    SEQDEF                                                   26840000
         TM    SWTCH5,X'41'             O.S. DEFINITION -HOWEVER        26860000
         BZ    BEFORL                     NOT IN MACROS UNLESS EXTEN    26880000
         OI    DCAREA,80                NO -COMPLETE O.S. FLAG BYTE     26900000
         MVC   2(5,BLKSKP),TYPATR       MOVE IN TYPE, LENGTH, SCALE     26920000
         MVI   DENTRY,128               INDICATE POINT OF DEFINITION    26940000
         BAL   LINK,ENTDCT              FOR THE DICTIONARY MAN          26960000
         B     BEFORL                   THAT'S ALL                      26980000
SEQREF   MVI   DENTRY,0                 INDICATE POINT OF REFERENCE     27000000
         OI    DCAREA,64                                                27020000
         TM    LSTFLG,32                                                27040000
         BO    *+12                                                     27060000
         OI    DCAREA,16                                                27080000
         MVI   2(BLKSKP),UTYPE          DAVE'S SOP                      27100000
         BAL   LINK,ENTDCT              MAKE THE ENTRY IN TH E DICT.    27120000
         BCT   DCTEMP,VART12            GO MOVE IN LIL'A                27140000
SEQDEF   MVI   DENTRY,128               INDICATE POINT OF DEFINITION    27160000
         OI    DCAREA,64                COMPLETE G.D. FLAG BYTE         27180000
         MVC   2(3,BLKSKP),STNOTE       MOVE 3 BYTE NOTE POINT PLUS     27200000
         MVC   5(2,BLKSKP),STNOTE+4       BUFFER INDEX TO ENTRY AREA    27220000
         B     VARD10                                                   27240000
VARTYP   CLI   DEFENT,0                 TEST IF DECLARATION             27260000
         BNE   VARDEF                   YES                             27280000
         MVI   DENTRY,3                 NO -LOOKUP                      27300000
         BAL   LINK,DLKUP               GO GET SYMBOL                   27320000
         LTR   EPTR,EPTR                UNDECLARED V.S. IS AN ERROR     27340000
         BNE   *+12                     ALL IS WELL                     27360000
         L     LINK,VABSER              LOAD VECTOR                     27380000
         BALR  LINK,LINK                V.S. NOT PREVIOUSLY             27400000
         DC    AL1(ERRR8)                DECLARED                       27420000
         DC    AL1(ERRST)                                               27440000
         LA    WORKRG,4(ZERORG,EPTR)    POINT TO DIMENSION IN ENTRY     27460000
         TM    0(EPTR),40               IS ENTRY A SETB.....            27480000
         BO    VART15                   YES                             27500000
         TM    LSTFLG,32                NO -IS ONE REQUIRED             27520000
         BO    ILSTBX                   YES...ERROR                     27540000
         TM    0(EPTR),72               NO -IS IT A SYMBOLIC PARAMETER  27560000
         BO    VART17                   YES                             27580000
VART04   MVI   3(DCTEMP),0              NO -CLEAR NULL BYTE IN TEXT     27600000
VART05   TM    LSTFLG,16                IS SYMBOLIC PARAMETER REQUIRED  27620000
         BZ    VART06                   NO... OK TO PROCEED             27640000
         TM    SWTCH5,X'01'             IS EXTEN ON .Q                  27642000
         BZ    ILTYPE                   NO, THEN WE HAVE AN ERROR       27644000
         TM    0(EPTR),X'20'            ENTRY SETA/SETB/SETC .Q   V7A56 27646028
         BNO   ILTYPE                   NO, THEN AGAIN WE HAVE AN ERROR 27648000
         IC    ZERORG,1(,OPNDS)         GET DISP INTO BUFFER LOCATION   27650000
         A     ZERORG,INPUT             CHANGE TO ABSOLUTE ADDRESS      27652000
         S     ZERORG,F2                BACK OFF TWO CHARACTERS         27654000
         CLC   0(2,ZERORG),KQUOTE       IS OPERATOR K' .Q               27656000
         BNE   ILTYPE                   NO THEN WE HAVE AN ERROR        27658000
VART06   TM    0(EPTR),64               IS THIS A GLOBAL ENTRY .Q       27660000
         BO    *+8                                                      27680000
         OI    3(DCTEMP),128            YES -SET GLOBAL FLAG IN TEXT    27700000
         CLC   0(2,WORKRG),F1           IF V.S. IS DIMENSIOND THEN      27720000
         BE    *+8                        TEXT OCCURENCE MUST BE        27740000
         XI    LSTFLG,8                   SUBSCRIPTED AND CONVERSELY    27760000
         TM    LSTFLG,8                                                 27780000
         BO    ILUSS                                                    27800000
VART10   IC    ZERORG,0(0,EPTR)         GENERATE TEXT FLAG BYTE         27820000
         SRL   ZERORG,3                                                 27840000
         N     ZERORG,F7                                                27860000
         IC    ZERORG,VART20-1(ZERORG)                                  27880000
         STC   ZERORG,0(0,DCTEMP)                                       27900000
VART12   STH   APTR,DUMMY               MOVE LIL'A  OR PAR. NO. INTO    27920000
         MVC   1(2,DCTEMP),DUMMY          EDITED TEXT                   27940000
         B     BEFORL                   WHEW                            27960000
KQUOTE   DC    X'1431'                  K' INTERNAL CODE CHAR STRING    27970000
VART15   CLC   0(2,WORKRG),F1           BACK TO MAINLINE IF SETB        27980000
         BNE   VART04                     VARIABLE IS DIMENSIONED       28000000
         MVC   3(1,DCTEMP),2(WORKRG)    ELSE, SET BIT NUMBER IN TXT     28020000
         B     VART05                                                   28040000
VART17   CH    APTR,H1                  BRANCH IF NOT SYSECT OR SYSNDX  28060000
         BH    VART10                                                   28080000
         TM    LSTFLG,16                OTHERWISE, MUST NOT BE          28100000
         BZ    VART10                     EXPECTING AN S.P.             28120000
ILTYPE   L     LINK,VABSER              LOAD VECTOR                     28140000
         BALR    LINK,LINK              ILLEGAL USAGE OF                28146000
         DC    AL1(ERRR9)               VARIABLE SYMBOL                 28149000
         DC    AL1(ERRST)                                               28153000
VART20   DC    AL1(SSPAR)                                               28160000
         DC    AL1(0)                                                   28180000
         DC    AL1(0)                                                   28200000
         DC    AL1(SSETA)                                               28220000
         DC    AL1(SSETB)                                               28240000
         DC    AL1(SSETC)                                               28260000
VARDEF   DS        0H                                                   28280000
         OC        DCAREA(1),DEFENT    FINISH UP FLAG BYTE              28300000
         CLI       DEFENT,72           IF SYMBOLIC PARAMETER THEN       28320000
         BE        VARD09              ENTER PARAMETER NUMBER           28340000
         LA        BLKSKP,2(,BLKSKP)   OTHERWISE DIMENSION              28340500
         MVC       2(1,BLKSKP),LSETCBYT+3  SET DEFAULT SETC LENGTH      28341000
         LA        RA,1(ZERORG,RA)     POINT PAST END OF NAME ON INPUT  28341500
         CLI       0(RA),STAR          TEST IF LENGTH SPECIFIED         28342000
         BNE       VARD09                                               28342500
         SR        LINK,LINK           ZERO ACCUMULATOR                 28343000
VARD05   LA        RA,1(,RA)           POINT AT NEXT SOURCE CHAR        28343500
         CLI       0(RA),N9            TEST IF NUMERIC                  28344000
         BH        VARD06                                               28344500
         IC        ZERORG,0(,RA)       PICK UP SOURCE CHAR              28345000
         MH        LINK,H10            SHIFT ACCUMULATOR                28345500
         AR        LINK,ZERORG         ADD IN NEW DIGIT                 28346000
         B         VARD05              LOOP FOR MORE DIGITS             28346500
VARD06   LTR       LINK,LINK           TEST VALUE NOT ZERO              28347000
         BNH       VARD07                                               28347500
         C         LINK,F255           TEST NOT TOO BIG                 28348000
         BNH       VARD08                                               28348500
VARD07   L         LINK,VWRNER1        OUTPUT WARNING                   28349000
         BALR      LINK,LINK                                            28349500
         DC        AL1(ERRR57)         INCORRECT LENGTH SPECIFICATION   28350000
         DC        AL1(ERRST)                                           28350500
*./      DELETE    SEQ1=28351025,SEQ2=28351025                          28351000
         IC        LINK,LSETCBYT+3     SET DEFAULT SETC LENGTH          28351500
VARD08   STC       LINK,2(BLKSKP)      PLACE MAX LENGTH BYTE            28352000
VARD09   MVC   0(2,BLKSKP),LSTFLG+2                                     28360000
VARD10   BAL   LINK,ENTDCT              MAKE THE ENTRY IN THE DICT.     28380000
         CLI   DERR,0                   NO DUPLICATES, PLEASE           28400000
         BE    BEFORL                                                   28420000
         CLI   DERR,32                  WHAT DOES SYMBOL MATCH .Q       28440000
         BH    VARD11                   BIF IT MATCHES A SET SYMBOL     28460000
         BE    VARD12                   BIF IT MATCHES A PARAMETER      28480000
         CLI   DERR,2                   WAS GLOBAL INCONSISTANT .Q      28500000
         BE    VARD13                   BIF YES                         28520000
         L     LINK,VABSER              LOAD VECTOR                     28540000
         BALR  LINK,LINK                IF HERE, MUST MATCH A S.S.      28560000
         DC    AL1(ERRR49)                                              28580000
         DC    AL1(ERRST)                                               28600000
VARD11   L     LINK,VWRNER1             LOAD VECTOR                     28620000
         BALR  LINK,LINK                SET SYMBOL PREVIOUSLY DEFINED   28640000
         DC    AL1(ERRR15)                                              28660000
         DC    AL1(ERRST)                                               28680000
         B     BEFORL                   PROCESS NEXT OPNDL ENTRY,IF ANY 28700000
VARD12   L     LINK,VWRNER1             LOAD VECTOR                     28720000
         BALR  LINK,LINK                SET SYMBOL SAME AS A S.P.       28740000
         DC    AL1(ERRR10)                                              28760000
         DC    AL1(ERRST)                                               28780000
         B     BEFORL                   PROCESS NEXT OPNDL ENTRY,IF ANY 28800000
VARD13   L     LINK,VWRNER1             LOAD VECTOR                     28820000
         BALR  LINK,LINK                INCONSISTANT GLOBAL DECLARATION 28840000
         DC    AL1(ERRR51)                                              28860000
         DC    AL1(ERRST)                                               28880000
         B     BEFORL                   PROCESS NEXT OPNDL ENTRY,IF ANY 28900000
ILUSS    L     LINK,VABSER              LOAD VECTOR                     28920000
         BALR  LINK,LINK                S.S. USAGE INCON. WITH DECLR.   28940000
         DC    AL1(ERRR48)                                              28960000
         DC    AL1(ERRST)                                               28980000
ILSTBX   L     LINK,VABSER              LOAD VECTOR                     29000000
         BALR  LINK,LINK                ILLEGAL SETB EXPRESSION         29020000
         DC    AL1(ERRR5)                                               29040000
         DC    AL1(ERRST)                                               29060000
VABSER   DC    V(ABSERR)                                          V7A53 29080028
VWRNER1  DC    V(WRNERR)                                          V7A53 29100028
VABS001  DC    V(ABS001)                                          V7A53 29120028
         EJECT ,                                                  V7A53 29140028
*        AFTER SCANNING MACRO PROTOTYPE STATEMENT THE             V7A53 29142028
*        KEYWORD PARAMETERS HAVE BEEN ENTERED IN LOCAL DICT       V7A53 29144028
*        WITH A PARAMETER NUMBER OF MINUS THE KEYWORD             V7A53 29146028
*        COUNT NUMBER.  THE PURPOSE OF THIS ROUTINE IS TO         V7A53 29148028
*        MAKE THE KEYWORD PARM NUMBERS ABOVE POSITIONAL PARMS.    V7A53 29150028
*                                                                 V7A53 29152028
*        CALLING SEQUENCE  --  L     LINK,VENTKWB                 V7A53 29154028
*                              BALR  LINK,LINK                    V7A53 29156028
         SPACE 1                                                  V7A53 29158028
ENTKWB   DS    0H                                                 V7A53 29160028
         STM   RB,L5,SAVREG        SAVE CALLER'S REGISTERS        V7A53 29161028
         L     B2,VENTKWB          BASE REGISTER                  V7A53 29162028
         USING ENTKWB,B2           AND TELL THE ASSEMBLER         V7A53 29163028
         LA    RR4,TASHL           NUMBER OF HAST TABLE ENTRIES   V7A53 29164028
         LA    RR3,THASHT          FIRST HASH POINTER IS HERE     V7A53 29165028
ENTKW1   DS    0H                                                 V7A53 29166028
         LR    RR2,RR3             FIRST CHAIN PTR ADDRESS        V7A53 29167028
ENTKW2   DS    0H                                                 V7A53 29168028
         MVC   EVENY+1(3),0(RR2)   ALIGN NEXT POINTER             V7A53 29169028
         L     RR2,EVENY           GET POINTER                    V7A53 29170028
         LTR   RR2,RR2             AT THE END .Q                  V7A53 29171028
         BZ    ENTKW3              YES, CONTINUE WITH NEXT        V7A53 29172028
         A     RR2,HISTRY+8             ADD DICTIONARY BASE             29173028
         TM    3(RR2),X'48'        IS THIS KEYWORD .Q             V7A53 29174028
         BNO   ENTKW2              BRANCH OUT IF NOT              V7A53 29175028
         TM    3(RR2),X'30'        AND NOTHING ELSE .Q            V7A53 29176028
         BNZ   ENTKW2              BRANCH OUT IF NOT              V7A53 29177028
         IC    RR1,3(,RR2)         GET FLAG BYTE                  V7A53 29178028
         N     RR1,F7              PURIFY BCD LENGTH-1            V7A53 29179028
         LA    RR1,5(RR1,RR2)      POINT TO POS PARM NUMBER       V7A53 29180028
         MVC   EVENX+2(2),0(RR1)   ALIGN POS PARM NUMBER          V7A53 29181028
         LH    RR0,EVENX+2         LOAD POS PARM NUMBER           V7A53 29182028
         LTR   RR0,RR0             NEGATIVE MEANS KEYWORD         V7A53 29183028
         BNM   ENTKW2              BRANCH IF NOT KEYWORD          V7A53 29184028
         LPR   RR0,RR0             POSITIVE KEYWORD NUMBER        V7A53 29185028
         AH    RR0,POSNO           PLUS NUMBER OF POSNL/KEYWORDS  V7A53 29186028
         SH    RR0,NRKEY           LESS NUMBER OF KEYWORDS        V7A53 29187028
         AH    RR0,POSNOINT        PLUS INITIAL DUMMIES           V7A53 29188028
         STH   RR0,EVENX+2         SAVE REAL RESULT               V7A53 29189028
         MVC   0(2,RR1),EVENX+2    CHANGE LOCAL DICT PARM NUMBER  V7A53 29190028
         B     ENTKW2              ALL DONE                       V7A53 29191028
ENTKW3   DS    0H                                                 V7A53 29192028
         LA    RR3,L'THASHT(,RR3)  NEXT HASH PTR IS HERE          V7A53 29193028
         BCT   RR4,ENTKW1          DO THEM ALL                    V7A53 29194028
         LM    RB,L5,SAVREG        RESTORE CALLER'S REGS          V7A53 29195028
         BR    LINK                AND RETURN TO CALLER           V7A53 29200028
         EJECT                                                          29220000
ASCAN    ST    B2,SAVREG                MICKEY-MOUSE TO ESTABLISH       29240000
         DROP  B2                        INDEPENDENT ADDRESSABILITY     29260000
         BALR  B2,0                                                     29280000
         USING *,B2                                                     29300000
ASCAN1   BAL   LINK,ASC05                                               29320000
         SH    LINKR,H4                                                 29340000
         L     B2,SAVREG                                                29360000
         B     4(0,LINKR)                                               29380000
ASC05    LA    R3,1                     SET UP A ONE'S REGISTER         29400000
         ST    R3,ASTAT                   AND INDICATORS                29420000
         LR    R3A,R3                   CLEAR HIGH ORDER GARBAGE        29440000
*        PROCESS DUPLICATION FACTOR                                     29460000
         CLI   0(INPTR),N9              TEST FOR INITIAL DIGIT          29480000
         BH    ASC10                                                    29500000
         BAL   R1,DECBIN                CONVERT TO BINARY               29520000
         LTR   R2,R2                    IF LITERAL, CANNOT BE 0         29540000
         BNE   ASC10                                                    29560000
         TM    ACALL,2                                                  29580000
         BCR   1,LINK                                                   29600000
*        PROCESS TYPE                                                   29620000
ASC10    CLI   0(INPTR),Z               TEST FOR TYPE LETTER            29640000
         BCR   2,LINK                   NO                              29660000
         IC    R3A,0(0,INPTR)           TEST FOR VALID TYPE             29680000
         IC    R3A,ASC198-A(R3A)                                        29700000
         LTR   R3A,R3A                                                  29720000
         BCR   8,LINK                   NO                              29740000
         LA    R1,ASC199(R3A)           YES -MOVE TABLE ENTRY FOR TYPE  29760000
         MVC   RSLTA(14),0(R1)            TO RESULT AREA                29780000
ASC15    AR    INPTR,R3                 ADVANCE INPUT POINTER           29800000
*        PROCESS LENGTH MODIFIER                                        29820000
         CLI   0(INPTR),L               TEST IF PRESENT                 29840000
         BNE   ASC35                                                    29860000
         AR    INPTR,R3                 YES                             29880000
         OI    ASTAT,32                 SET EXPLICIT LENGTH INDICATOR   29900000
         CLI   0(INPTR),DOT             TEST IF BIT LENGTH              29920000
         BNE   ASC25                                                    29940000
         CLI   ATYP,STYPE               YES -HOWEVER, NOT IN S-TYPE     29960000
         BCR   8,LINK                     CONSTANTS                     29980000
         AR    INPTR,R3                 CONVERT TO BINARY               30000000
         BAL   R1,DECBIN                                                30020000
         LA    R2,7(0,R2)                 THENCE TO BYTE LENGTH         30040000
         SRA   R2,3                                                     30060000
         B     ASC30                                                    30080000
ASC25    BAL   R1,DECBIN                                                30100000
ASC30    BCT   R2,ASC32                 CONVERT TO 360 LENGTH           30120000
         CLI   ATYP,STYPE               ERROR IF S-TYPE AND LENGTH NOT  30140000
         BCR   8,LINK                     EQUAL TO 2                    30160000
ASC32    CL    R2,F65535                ERROR IF LENGTH EXCEEDS         30180000
         BCR   2,LINK                   ABSOLUTE MAXIMUM OF 65536       30200000
         CH    R2,LMAX                  IF LENGTH EXCEEDS STANDARD      30220000
         BNH   ASC34                      MAXIMUM, TEST FOR C OR X TYPE 30240000
         TM    ACALL,1                    IN A DS                       30260000
         BCR   8,LINK                                                   30280000
         TM    AFLGS,48                                                 30300000
         BCR   8,LINK                                                   30320000
         CLI   ATYP,BTYPE                                               30340000
         BCR   8,LINK                                                   30360000
ASC34    STH   R2,ALENG                                                 30380000
*./      DELETE    SEQ1=30400020,SEQ2=30400020                          30400000
         TM    AFLGS,4                  IF D OR E TYPE, SET MAX SCALE   30420000
         BZ    ASC37                    NOT D, E, L TYPE                30430000
         CLI   ATYP,LTYPE               IF L-TYPE,                      30435000
         BNE   ASC38                     (NOT L)                        30440000
         CLI   ALENG+1,9-1              AND IF LENGTH GT 8 BYTES,       30445000
         BL    ASC38                     (NOT GT)                       30450000
         SR    R2,R3                    THEN ALLOW FOR LOW EXPON.       30455000
ASC38    AR    R2,R2                    DEVELOP MAX S-MOD               30460000
         STH   R2,SMAX                                                  30480000
ASC37    MVC   ATYP(1),MAPTYP           REPLACE TYPE                    30490000
*        PROCESS SCALE MODIFIER                                         30500000
ASC35    CLI   0(INPTR),S               TEST IF PRESENT                 30520000
         BNE   ASC50                                                    30540000
         TM    AFLGS,6                  TEST IF SCALE ALLOWED           30560000
         BCR   8,LINK                   NO                              30580000
         AR    INPTR,R3                 ADVANCE INPUT POINTER           30600000
         CLI   0(INPTR),PLUS            CHECK FOR PLUS SIGN             30620000
         BE    ASC40                                                    30640000
         CLI   0(INPTR),MINUS           CHECK FOR MINUS SIGN            30660000
         BNE   ASC42                                                    30680000
         TM    AFLGS,4                  YES-NOT ALLOWED-D,E,L-CON       30700000
         BCR   1,LINK                                                   30720000
         OI    ASTAT,16                 SET IND.                        30740000
ASC40    TM    ACALL,2                  SIGNED SCALE NOT ALLOWED IN     30760000
         BCR   1,LINK                     LITERAL                       30780000
         AR    INPTR,R3                                                 30800000
ASC42    CLI   0(INPTR),N9              TEST FOR DIGIT                  30820000
         BCR   3,LINK                                                   30840000
         BAL   R1,DECBIN                YES -CONVERT SCALE TO BINARY    30860000
         TM    ASTAT,16                 SET NEGATIVE IF MINUS SIGN      30880000
         BZ    ASC45                                                    30900000
         LCR   R2,R2                                                    30920000
         CH    R2,MH187                 TEST AGAINST MINIMUM VALUE      30940000
         BCR   4,LINK                   UNDER                           30960000
ASC45    CH    R2,SMAX                  TEST AGAINST MAXIMUM VALUE      30980000
         BCR   3,LINK                   OVER                            31000000
         STH   R2,ASCAL                                                 31020000
*        PROCESS EXPONENT MODIFIER                                      31040000
ASC50    CLI   0(INPTR),E               TEST IF PRESENT                 31060000
         BNE   ASC60                                                    31080000
         TM    AFLGS,6                  TEST IF ALLOWED                 31100000
         BCR   8,LINK                   NO                              31120000
         B     4(0,LINK)                YES                             31140000
ASC60    CLI   0(INPTR),QUOTE           TEST FOR QUOTE                  31160000
         BNE   ASC95                                                    31180000
         TM    AFLGS,62                 YES -TEST IF VALID              31200000
         BCR   8,LINK                                                   31220000
         AR    INPTR,R3                 YES -ADVANCE INPUT POINTER      31240000
         TM    AFLGS,56                 TEST IF IMPLIED LENGTH SCAN     31260000
         BZ    4(0,LINK)                NO -EXIT                        31280000
ASC62    SR    R3A,R3A                  INITIALIZE FOR IMPLIED LENGTH   31300000
         LR    R2,R3A                     SCAN                          31320000
*        DETERMINE IMPLIED LENGTH AND/OR SCALE                          31340000
ASC65    CLI   0(INPTR),QUOTE           TEST FOR QUOTE                  31360000
         BNE   ASC70                                                    31380000
         TM    AFLGS,32                 YES -IS THIS C TYPE             31400000
         BZ    ASC90                    NO -FINISHED                    31420000
         AR    INPTR,R3                 YES -ADVANCE INPTR AND TEST     31440000
         CLI   0(INPTR),QUOTE             FOR DOUBLE QUOTE              31460000
         BNE   ASC90                    NO -FINISHED                    31480000
ASC70    CLC   0(1,INPTR),ACMAX         COMPARE AGAINST HIGH VALUE      31500000
         BNH   ASC80                                                    31520000
         TM    AFLGS,16                 TEST IF X OR B TYPE             31540000
         BCR   1,LINK                   YES -ERROR                      31560000
         CLI   0(INPTR),PLUS            TEST FOR PLUS SIGN              31580000
         BE    ASC75                                                    31600000
         CLI   0(INPTR),MINUS             -OR MINUS                     31620000
         BE    ASC75                                                    31640000
         CLI   0(INPTR),DOT             NO -TEST IF DECIMAL POINT       31660000
         BE    ASC74                                                    31680000
         CLI   0(INPTR),COMMA           NO -TEST FOR TERMINATING COMMA  31700000
         BCR   7,LINK                   NO -ERROR                       31720000
ASC90    STC   R2,ASCAL+1               STORE SCALE                     31740000
         LR    R1,R3                    COMPUTE IMPLIED LENGTH          31760000
         IC    R1,RFACT                                                 31780000
         AR    R3A,R1                                                   31800000
         IC    R1,SFACT                                                 31820000
         SRL   R3A,0(R1)                                                31840000
         SR    R3A,R3                                                   31860000
         BCR   4,LINK                   MUST BE AT LEAST 1              31880000
         CH    R3A,LMAX                 MAKE SURE L.E. MAXIMUM          31900000
         BCR   3,LINK                   NO -ERROR                       31920000
         TM    ASTAT,32                 WAS THERE AN EXPLICIT LENGTH    31940000
         BO    4(0,LINK)                YES -EXIT                       31960000
         STH   R3A,ALENG                NO -STORE IMPLIED               31980000
         B     4(0,LINK)                EXIT                            32000000
ASC74    XI    ASTAT+1,1                ERROR IF DECIMAL POINT ALREADY  32020000
         BCR   8,LINK                     SCANNED                       32040000
         B     ASC85                                                    32060000
ASC75    XI    ASTAT+2,1                ERROR IF SIGN ALREADY SCANNED   32080000
         BCR   8,LINK                                                   32100000
         BXH   INPTR,R3,ASC65                                           32120000
ASC80    CLI   0(INPTR),AMPSND          TEST FOR AMPERSAND              32140000
         BNE   *+6                                                      32160000
         AR    INPTR,R3                 YES -MUST BE A DOUBLE           32180000
         AH    R2,ASTAT                 BUMP THE SCALE COUNTER          32200000
         AR    R3A,R3                   ADD ONE TO LENGTH COUNTER       32220000
ASC85    OI    ASTAT+2,1                DISALLOW SIGN                   32240000
         BXH   INPTR,R3,ASC65                                           32260000
*        CONTINUE TESTS ON MODIFIER FIELD                               32280000
ASC95    CLI   0(INPTR),LPAREN          TEST IF LEFT PARENTHESIS        32300000
         BNE   ASC100                                                   32320000
         TM    AFLGS,192                YES -TEST IF ALLOWED            32340000
         BCR   8,LINK                   NO -ERROR                       32360000
         B     4(0,LINK)                YES -EXIT                       32380000
ASC100   CLI   0(INPTR),BLANK           TEST IF BLANK                   32400000
         BE    ASC105                                                   32420000
         CLI   0(INPTR),COMMA           NO -TEST IF COMMA               32440000
         BE    ASC105                   YES                             32460000
         C     INPTR,ENDCOL             NO -LAST HOPE IS THE END COLUMN 32480000
         BCR   13,LINK                  NOPE                            32500000
ASC105   TM    ACALL,1                  YES -TEST IF DS                 32520000
         BO    4(0,LINK)                YES -EXIT                       32540000
         TM    AFLGS,128                NO -TEST IF Q-TYPE              32560000
         BCR   8,LINK                   NO -ERROR                       32580000
         B     4(0,LINK)                YES -EXIT                       32600000
*DECBIN                                                                 32620000
*        SUBROUTINE TO CONVERT DIGIT STRING TO BINARY                   32640000
*        BAL   R1,DECBIN                                                32660000
DECBIN   SR    R3A,R3A                  CLEAR PICK-UP AND VALUE         32680000
         LR    R2,R3A                     REGISTERS                     32700000
DEC01    CLI   0(INPTR),N9              EXIT IF NOT DIGIT               32720000
         BCR   3,R1                                                     32740000
         IC    R3A,0(0,INPTR)                                           32760000
         MH    R2,H10                   MULTIPLY PARTIAL VALUE BY 10    32780000
         AR    R2,R3A                     AND ADD IN CURRENT DIGIT      32800000
         BXH   INPTR,R3,DEC01                                           32820000
*        SAM'S TYPE FLAGS                                               32840000
*              OTHER FLAGS DEFINED FOR A,W,I,J,M,T AT TOP OF PHASE      32850000
ATYPE    EQU   9                                                        32860000
BTYPE    EQU   17                                                       32880000
CTYPE    EQU   15                                                       32900000
DTYPE    EQU   3                                                        32920000
ETYPE    EQU   2                                                        32940000
FTYPE    EQU   5                                                        32960000
GTYPE    EQU   6                                                        32980000
HTYPE    EQU   7                                                        33000000
ITYPE    EQU   14                                                       33020000
JTYPE    EQU   18                                                       33040000
KTYPE    EQU   4                                                        33060000
LTYPE    EQU   26                                                       33070000
MTYPE    EQU   20                                                       33080000
NTYPE    EQU   24                                                       33100000
OTYPE    EQU   23                                                       33120000
PTYPE    EQU   0                                                        33140000
QTYPE    EQU   16                                                       33160000
RTYPE    EQU   12                                                       33180000
STYPE    EQU   8                                                        33200000
TTYPE    EQU   21                                                       33220000
UTYPE    EQU   22                                                       33240000
VTYPE    EQU   10                                                       33260000
WTYPE    EQU   13                                                       33280000
XTYPE    EQU   19                                                       33300000
YTYPE    EQU   11                                                       33320000
ZTYPE    EQU   1                                                        33340000
ASC198   DC    AL1(ASC225-ASC199)       A                               33360000
         DC    AL1(ASC210-ASC199)       B                               33380000
         DC    AL1(ASC200-ASC199)       C                               33400000
         DC    AL1(ASC250-ASC199)       D                               33420000
         DC    AL1(ASC255-ASC199)       E                               33440000
         DC    AL1(ASC260-ASC199)       F                               33460000
         DC    AL1(0)                   G                               33480000
         DC    AL1(ASC265-ASC199)       H                               33500000
         DC    AL1(0)                   I                               33520000
         DC    AL1(0)                   J                               33540000
         DC    AL1(0)                   K                               33560000
         DC    AL1(ASC270-ASC199)       L                               33580000
         DC    AL1(0)                   M                               33600000
         DC    AL1(0)                   N                               33620000
         DC    AL1(0)                   O                               33640000
         DC    AL1(ASC215-ASC199)       P                               33660000
         DC    AL1(ASC245-ASC199)       Q                               33680000
         DC    AL1(0)                   R                               33700000
         DC    AL1(ASC230-ASC199)       S                               33720000
         DC    AL1(0)                   T                               33740000
         DC    AL1(0)                   U                               33760000
         DC    AL1(ASC235-ASC199)       V                               33780000
         DC    AL1(0)                   W                               33800000
         DC    AL1(ASC205-ASC199)       X                               33820000
         DC    AL1(ASC240-ASC199)       Y                               33840000
ASC199   DC    AL1(ASC220-ASC199)       Z                               33860000
ASC200   DC    AL1(32)       (AFLGS)    CTYPE                           33880000
         DC    AL2(255)      (LMAX)                                     33900000
         DC    AL2(0)        (SMAX)                                     33920000
         DC    AL1(CTYPE)    (MAPTYP)                                   33940000
         DC    AL1(CTYPE)                                               33960000
         DC    AL2(0)        (ALENG)                                    33980000
         DC    AL2(0)        (ASCAL)                                    34000000
         DC    AL1(0)        (RFACT)                                    34020000
         DC    AL1(0)        (SFACT)                                    34040000
         DC    AL1(255)      (ACMAX)                                    34060000
ASC205   DC    AL1(16)                  XTYPE                           34080000
         DC    AL2(255)                                                 34100000
         DC    AL2(0)                                                   34120000
         DC    AL1(XTYPE)                                               34140000
         DC    AL1(XTYPE)                                               34160000
         DC    AL2(0)                                                   34180000
         DC    AL2(0)                                                   34200000
         DC    AL1(1)                                                   34220000
         DC    AL1(1)                                                   34240000
         DC    AL1(15)                                                  34260000
ASC210   DC    AL1(16)                  BTYPE                           34280000
         DC    AL2(255)                                                 34300000
         DC    AL2(0)                                                   34320000
         DC    AL1(BTYPE)                                               34340000
         DC    AL1(BTYPE)                                               34360000
         DC    AL2(0)                                                   34380000
         DC    AL2(0)                                                   34400000
         DC    AL1(7)                                                   34420000
         DC    AL1(3)                                                   34440000
         DC    AL1(1)                                                   34460000
ASC215   DC    AL1(8)                   PTYPE                           34480000
         DC    AL2(15)                                                  34500000
         DC    AL2(31)                                                  34520000
         DC    AL1(PTYPE)                                               34540000
         DC    AL1(PTYPE)                                               34560000
         DC    AL2(0)                                                   34580000
         DC    AL2(0)                                                   34600000
         DC    AL1(2)                                                   34620000
         DC    AL1(1)                                                   34640000
         DC    AL1(9)                                                   34660000
ASC220   DC    AL1(8)                   ZTYPE                           34680000
         DC    AL2(15)                                                  34700000
         DC    AL2(16)                                                  34720000
         DC    AL1(ZTYPE)                                               34740000
         DC    AL1(ZTYPE)                                               34760000
         DC    AL2(0)                                                   34780000
         DC    AL2(0)                                                   34800000
         DC    AL1(0)                                                   34820000
         DC    AL1(0)                                                   34840000
         DC    AL1(9)                                                   34860000
ASC225   DC    AL1(128)                 ATYPE                           34880000
         DC    AL2(3)                                                   34900000
         DC    AL2(0)                                                   34920000
         DC    AL1(RTYPE)                                               34940000
         DC    AL1(ATYPE)                                               34960000
         DC    AL2(3)                                                   34980000
         DC    AL2(0)                                                   35000000
ASC230   DC    AL1(128)                 STYPE                           35020000
         DC    AL2(1)                                                   35040000
         DC    AL2(0)                                                   35060000
         DC    AL1(RTYPE)                                               35080000
         DC    AL1(STYPE)                                               35100000
         DC    AL2(1)                                                   35120000
         DC    AL2(0)                                                   35140000
ASC235   DC    AL1(128)                 VTYPE                           35160000
         DC    AL2(3)                                                   35180000
         DC    AL2(0)                                                   35200000
         DC    AL1(RTYPE)                                               35220000
         DC    AL1(VTYPE)                                               35240000
         DC    AL2(3)                                                   35260000
         DC    AL2(0)                                                   35280000
ASC240   DC    AL1(128)                 YTYPE                           35300000
         DC    AL2(3)                                                   35320000
         DC    AL2(0)                                                   35340000
         DC    AL1(RTYPE)                                               35360000
         DC    AL1(YTYPE)                                               35380000
         DC    AL2(1)                                                   35400000
         DC    AL2(0)                                                   35420000
ASC245   DC    AL1(64)                  QTYPE                           35440000
         DC    AL2(3)                                                   35460000
         DC    AL2(0)                                                   35480000
         DC    AL1(RTYPE)                                               35500000
         DC    AL1(QTYPE)                                               35520000
         DC    AL2(3)                                                   35540000
         DC    AL2(0)                                                   35560000
ASC250   DC    AL1(4)                   DTYPE                           35580000
         DC    AL2(7)                                                   35600000
         DC    AL2(14)                                                  35620000
         DC    AL1(KTYPE)                                               35640000
         DC    AL1(DTYPE)                                               35660000
         DC    AL2(7)                                                   35680000
         DC    AL2(0)                                                   35700000
ASC255   DC    AL1(4)                   ETYPE                           35720000
         DC    AL2(7)                                                   35740000
         DC    AL2(6)                                                   35760000
         DC    AL1(KTYPE)                                               35780000
         DC    AL1(ETYPE)                                               35800000
         DC    AL2(3)                                                   35820000
         DC    AL2(0)                                                   35840000
ASC260   DC    AL1(2)                   FTYPE                           35860000
         DC    AL2(7)                                                   35880000
         DC    AL2(346)                                                 35900000
         DC    AL1(GTYPE)                                               35920000
         DC    AL1(FTYPE)                                               35940000
         DC    AL2(3)                                                   35960000
         DC    AL2(0)                                                   35980000
ASC265   DC    AL1(2)                   HTYPE                           36000000
         DC    AL2(7)                                                   36020000
         DC    AL2(346)                                                 36040000
         DC    AL1(GTYPE)                                               36060000
         DC    AL1(HTYPE)                                               36080000
         DC    AL2(1)                                                   36100000
         DC    AL2(0)                                                   36120000
ASC270   DC    AL1(4)                   LTYPE     FLAGS                 36122000
         DC    AL2(15)                       L MAX                      36124000
         DC    AL2(28)                       MAX S-MOD IF IMP.LGH       36126000
         DC    AL1(KTYPE)                    TYPE IF LGH SPEC           36128000
         DC    AL1(LTYPE)                    TYPE IF IMPLIED LGH        36130000
         DC    AL2(15)                       IMPLIED LGH - 1            36132000
         DC    AL2(0)                        IMPLIED SCL MOD.           36134000
         EJECT                                                          36140000
* TRANSIENT DICTIONARY CLOSEOUT AND RE-INITIALIZE CODE.                 36160000
         DROP  B2                                                       36180000
*                                                                       36200000
DCLOSE   BALR  B2,0                                                     36220000
         USING *,B2                     FOR ADDRESSABILITY              36240000
DCLOS1   NI    SWTCH1,NMASK1            NO LONGER WITHIN A MACRO        36260000
         TM    SWTCH1,X'10'             PROTOTYPE EXPECTED .Q     V7A12 36270028
         BO    SMCH31                   YES, DON'T SUBSET MAC DIC V7A12 36272028
         NI    SWTCH5,231               REALLOW GLOBAL AND LOCAL DECL.  36280000
         LA    RE1,PHASHT               RUNNING INDEX                   36300000
         LA    RE2,2                                                    36320000
         LA    RD2,PHASHT+PASHL1                                        36340000
DCLA     LR    CRNT,RE1                                                 36360000
DCLB     MVC   EVENX+2(2),0(CRNT)                                       36380000
         L     CRNT,EVENX                                               36400000
         LTR   CRNT,CRNT                                                36420000
         BZ    DCLQ                                                     36440000
         AL    CRNT,GDP                                                 36460000
         TM    2(CRNT),X'20'                                            36480000
         BZ    DCLB                                                     36500000
         OI    2(CRNT),X'80'                                            36520000
         B     DCLB                     CONTINUE.                       36540000
DCLQ     BXLE  RE1,RE2,DCLA                                             36560000
         LM      CRA,THLDA,HISTRY                                       36580000
         L     RE1,TNDX                                                 36600000
         LA    RD1,BLKSZ-5    MUST HAVE SIX BYTES IN LAST BLOCK         36620000
         CLR   RD1,RE1                                                  36640000
         BL    DCL4                     BRANCH IF SPACE LESS THAN 6.    36660000
         LA    RS3,0(RE1,CRA)                                           36680000
         MVI   3(RS3),0                                                 36700000
         BE    DCL4                                                7869 36720000
DCL3     MVI   3(RS3),X'FF'                                             36740000
         LM    RE2,RD2,LTLAT            GET LARGEST 'A'.                36760000
         CR    RE2,RD2                                                  36780000
         BH    DCLT                                                     36800000
         LR    RE2,RD2                                                  36820000
DCLT     STH   RE2,EVENX+2                                              36840000
         MVC   4(2,RS3),EVENX+2         PLACE IN LAST BLOCK.            36860000
         ST    RE2,LTTLAF               SAVE FULL WORD LITTLA           36880000
*./      DELETE    SEQ1=36900020,SEQ2=37020020                          37020000
         B     DCL6                                                     37040000
DCL4     C     PPA,DEND    DO WE HAVE ENOUGH CORE LEFT FOR ANOTHER BLK  37060000
         BL    OKAYSTIL                BIF YES.                         37080000
         ST    RD1,SAVE4               SAVE RD1                         37100000
         L         B2,DUSING           ADDRESSABILITY FOR GETCRBLK      37120000
         USING     ENTDCT,B2                                            37130000
         BAL       RD1,GETCRBLK        GO GET ANOTHER BLOCK OF CORE     37140000
         L         B2,DCLOS1AD                                          37145000
         USING     DCLOS1,B2                                            37155000
         L     RD1,SAVE4                RESTORE RD1                     37160000
*./      DELETE    SEQ1=37180020,SEQ2=37200020                          37200000
OKAYSTIL LA    PPA,BLKSZ(0,PPA)        INCREMENT PPA POINTER            37220000
         LA    CRA,BLKSZ(0,CRA)        INCREMENT CRA POINTER,TOO.       37240000
         STM   CRA,THLDA,HISTRY        SAVE THEM POINTERS.              37260000
         LA    RS3,1(0,CRA)                                             37280000
*./      DELETE    SEQ1=37300020,SEQ2=37300020                          37300000
         B     DCL3                                                     37320000
*./      DELETE    SEQ1=37340020,SEQ2=37340020                          37340000
SAVE4    DS    F                                                        37360000
DCL6     MVI   THASHT,X'00'            SET TO CLEAR TA HASH TABLE       37380000
         MVC   THASHT+1(255),THASHT    ZERO IT. NOTE -  TASHL.EQ.128    37400000
         MVC   THASHT+256(3*TASHL-256),THASHT                           37410000
         TM    SWTCH5,X'04'            SKIPPING TO MEND .Q              37420000
         BZ    DCL7A                   BIF NOT.                         37440000
         TM    SWTCH6,2                MUST SUBSET .Q.                  37460000
         BZ    DCL9                    BIF NOT.                         37480000
DCL7A    L     LINK,DUSING              SUBSET THE MACRO DICTIONARY.    37500000
         BAL   LINK,TSBSET-ENTDCT(LINK)                                 37520000
DCL9     NI    SWTCH5,X'FB'             RESET MACRO ABORT CONDITION     37540000
         NI        SWTCH6,X'FD'        RESET DICT SUBSET INDIC          37560000
         LR    CRA,THLDA                RESET TA POINTERS.              37580000
         LA    PPA,BLKSZ(0,CRA)                                         37600000
         STM   CRA,PPA,HISTRY                                           37620000
DCL8     MVC   0(7,THLDA),FZRO          ZERO THE START OF EACH T.D.     37640000
         LA    THLDA,BLKSZ(0,THLDA)     BLOCK SUCH THAT 'EMPTY CORE'    37660000
         LA    RE1,BLKSZ-1                   COMPUTE                    37680000
         S     RE1,DEND                      DEND+1                     37700000
         LCR   RE1,RE1                       -BLKSZ.                    37720000
         CR    THLDA,RE1                CAN NEVER APPEAR AS             37740000
         BNH   DCL8                     A TRANSIENT DICTIONARY BLOCK.   37760000
         LA    RE1,4                    RESET TA BLOCK INDEX FOR BLK 0. 37780000
         ST    RE1,VCR                                                  37800000
         ST    RE1,TNDX                                                 37820000
         LA    RE1,TBEG                                                 37840000
         ST    RE1,LTLAT+4                                              37860000
         LA    RE1,1(0,RE1)                                             37880000
         ST    RE1,LTLAT                                                37900000
*./      DELETE    SEQ1=37920020,SEQ2=37920020                          37920000
         TM    SWTCH5,128               BRANCH IF EDITING PGMR MACROS   37940000
         BO    DRVER                   BACK TO MAINLINE                 37960000
         NI    SWTCH5,191               INDICATE SYSTEM MACRO EDITING   37980000
         OI    SWTCH5,32                                                38000000
*        DRIVER FOR SYSTEM MACRO EDITING                                38020000
         SR    RE1,RE1             ZERO OUT REG.                        38040000
         C     RE1,SVCHN           TEST IF FIRST TIME THROUGH.          38060000
         BNE   SMCH3               BRANCH IF NOT.                       38080000
         C     RE1,MACHN           SEE IF ANY MACROS.                   38100000
         BE        KLOSOWT                                              38120000
         MVI       TYPRED+1,MACLIB                                      38140000
         TM    PARBYT1,FLIST            WAS FULLLIST SPECIFIED .Q       38144000
         BO    FULLLIST                 BRANCH IF YES                   38148000
         OI    SWTCH8,X'40'             FORCE ERROR 78 NEXT ERROR MSG   38152000
FULLLIST DS    0H                                                       38156000
         L     LINK,VSWICL              LOAD VECTOR                     38160000
         BALR  LINK,LINK           SET UP STANDARD ICTL SETTINGS.       38180000
         L     RE1,MACHN           GET RELATIVE MACRO CHAIN ORIGIN.     38200000
SMCH1    ST    RE1,SVCHN           SAVE ORIGIN.                         38220000
SMCH2    AL    RE1,GDP             MAKE POINTER ABSOLUTE.               38240000
         LA    RE1,2(0,RE1)             MOVE PAST BIG 'A' POINTER TO    38260000
         IC    RD1,0(0,RE1)        GET FLAG BYTE.                       38280000
         N     RD1,F7              KEEP ONLY BCD LENGTH.                38300000
         LA    RE2,4(RD1,RE1)      POINT TO N/P FIELD.                  38320000
         CLC   0(NPTL,RE2),FZRO    UNDEFINED IF ZERO.                   38340000
         BNE   SMCH4                                                    38360000
         AIF       (&NOTSTAT).CONT                                      38380000
         ST        7,HOLDIT                                             38400000
         L         7,BUMPER2                                            38420000
         A         7,ADD                                                38440000
         ST        7,BUMPER2                                            38460000
         L         7,HOLDIT                                             38480000
         B         MVI                                                  38500000
BUMPER2            DC                  F'0'                             38520000
ADD      DC        F'1'                                                 38540000
HOLDIT   DS        F                                                    38560000
         DS        0H                                                   38580000
MVI      MVI       DBLWD,BLANK                                          38600000
         AGO       .CONT1                                               38620000
.CONT    ANOP                                                           38640000
         MVI   DBLWD,BLANK         SET DOUBLE WORD TO INTERNAL BLANKS.  38660000
.CONT1   ANOP                                                           38680000
         MVC   DBLWD+1(7),DBLWD                                         38700000
         EX    RD1,SMNAMV          MOVE IN NAME.                        38720000
         MVC       DUMTITL1+24(8),DBLWD PLACE NAME IN DUMMY TITLE STMT  38730000
         TR    DBLWD(8),TRSLTB     TRANSLATE TO EXTERNAL.               38740000
         LA        RD1,LIBRFND1        CHECK IF MACLIB READ IN PROGRESS 38760000
*                                                                       38780000
LIBWAIT  DS    0H                                                       38800000
         L     RA,LBDECBAD+4            2ND SYSLIB  BUFFER READ         38820000
         TM    LBRDSW(RA),LBRDOT        ANY READS OUTSTANDING .Q        38840000
         BCR   8,RD1                    BRANCH IF NOT                   38860000
         NI    LBRDSW(RA),255-LBRDOT    KILL OUTSTANDING READ           38880000
         WAIT  ECB=(RA)                 AWAIT COMPLETION OF ANY I/O     38900000
         L     RA,ADCBLB                ADDR OF SYSLIB DCB              38920000
         NI    DCBIFLGS-IHADCB(RA),255-X'C0'  AVOID SYNAD/EOV CHECKING  38940000
         NI    DCBOFLGS-IHADCB(RA),X'FF'-X'80'  TRK BAL NO LONGER VALID 38950000
         BR    RD1                      RETURN                          38960000
*                                                                       38980000
LIBRFND1 EQU   *                        BY IOS.                         39000000
         TM    SWTCH7,X'01'            COPY CODE TO BE READ .Q          39020000
         BO    INCOPY                  BIF YES--FIND ALREADY DONE.      39040000
*./      DELETE    SEQ1=39060020,SEQ2=39140020                          39140000
         LA        L5,DBLWD            POINT AT NAME                    39160000
         L         RA,FINDAD           CALL FIND SUBROUTINE             39180000
         BALR      RQ,RA                                                39200000
         BNE       SMCH4               TEST IF FOUND                    39220000
         OI    SWTCH6,X'40'        IND 'MACRO' OP EXPECTED.             39240000
         ST    RE2,SMRE2X               SAVE PTR TO N/P FIELD     V7A24 39250028
INCOPY   DS    0H                                                       39260000
         L     RD1,LBDECBAD             DECB ADDR FOR 1ST SYSLIB BUFFER 39280000
*                                                                       39300000
*        NOTE AND READ FIRST SYSLIB BUFFER                              39320000
         BAL   LINK,NOTREAD             READ INTO 1ST SYSLIB BUFFER     39340000
         BAL   LINK,NOTCHECK            CHECK 1ST READ                  39360000
         OI    LBRDSW(RD1),LBRDRS       PROCESSING READS STARTED        39380000
         L     RA,LBRECPW(,RD1)         COMPUT END-OF BLOCK ADDR        39385000
         L     L5,LBDCBAD(,RD1)         FROM RESIDUAL LENGTH IN         39390000
         LH    L4,14(,RA)               CSW, BLKSIZE IN DCB       V7A42 39395028
         LCR   L4,L4                    AND BUFFER ADDRESS        V7A42 39396028
         TM    DCBRECFM-IHADCB(L5),X'C0'  RECFM 'U' .Q            V7A42 39397028
         BNO   LIBRS0                   BRANCH IF NOT             V7A42 39398028
         LTR   L4,L4                    CHECK RESIDUAL COUNT      V7A42 39399028
         BNM   LIBRDERR                 ERR IF RESID CT <= 0      V7A42 39400028
LIBRS0   DS    0H                                                 V7A42 39401028
         AH    L4,DCBBLKSI-IHADCB(,L5)  CALCULATE RECORD LENGTH   V7A42 39402028
         L     LINK,LBAREAAD(,RD1)      POINT AT THE BUFFER       V7A42 39403028
         CH    L4,0(,LINK)              IS IT EDIT-FORMAT .Q      V7A42 39404028
         BL    LIBRS1                   BRANCH IF NOT             V7A42 39405028
         CLI   0(LINK),X'0F'            DOUBLE-CHECK THAT HALF    V7A42 39406028
         BNL   LIBRS1                   WORD COUNT IS POSITIVE    V7A42 39407028
         LH    L4,0(,LINK)              GET EDIT BLOCK LENGTH     V7A42 39408028
         ST    L4,LBLIBEOB(,RD1)        STORE AS EOB OFFSET       V7A42 39409028
         LA    L4,2                     GET START OFFSET          V7A42 39410028
         B     LIBRS2                   AND JOIN COMMON CODE      V7A42 39411028
LIBRS1   DS    0H                                                 V7A42 39412028
         ST    L4,LBLIBEOB(,RD1)        SAVE EOB OFFSET           V7A42 39413028
         SR    L4,L4                    ZERO WORK REGISTER              39440000
LIBRS2   DS    0H                       HERE FROM EDIT-FORMAT     V7A42 39450028
         ST    L4,LBLIBNTA(,RD1)        ZERO START BUFFER OFFSET        39460000
         L     RD1,LBDECBAD+4           2ND SYSLIB DECB                 39480000
*                                                                       39500000
*        NOTE AND READ SECOND SYSLIB BUFFER                             39510000
         BAL   LINK,NOTREAD             READ INTO 2ND SYSLIB BUFFER     39520000
         OI    LBRDSW(RD1),LBRDOT       OUTSTANDING READ                39540000
         TM    SWTCH7,X'01'             COPY CODE BEING READ .Q         39550000
         BO    DRVER                    BRANCH IF YES                   39560000
         ST    RE2,SMRE2X               SAVE PTR TO N/P FIELD           39570000
         AIF       (&NOTSTAT).NEXT     BEGINNING OF STATISTICS PHASE    39580000
         MVI       CARDSW,X'00'        SET CARD SWITCH INDICATOR ON     39600000
         B         DRVER               BRANCH TO DRIVE ROUTINE          39620000
         ENTRY     CARDSW                                               39640000
CARDSW   DC        X'FF'               SET INITIALIZER FOR SOURCE IND.  39660000
         DS        0H                  REALIGNMENT                      39680000
.NEXT    ANOP                          END OF STATISTICS OPTION         39700000
DRVER    L     LINK,VDRVER              LOAD VECTOR                     39720000
         BR    LINK                      AND RETURN                     39740000
SMCH31   DS    0H                                                 V7A12 39750028
         NI    SWTCH1,X'EF'             TURN OFF PROTOTYPE EXPECT V7A12 39752028
SMCH3    L     RE2,SMRE2X          RELOAD POINTER.                      39760000
SMCH4    CLC   NPTL(EPTL,RE2),TEMPH+4-EPTL                              39780000
         BE    SMCH5               BRANCH IF AT END OF CHAIN.           39800000
         MVC   DBLWD(4),FZRO       ZERO OUT DBLWD.                      39820000
         MVC   DBLWD+4-EPTL(EPTL),NPTL(RE2)                             39840000
         L     RE1,DBLWD           GET RELATIVE POINTER TO NEXT ENTRY.  39860000
         B     SMCH2                                                    39880000
SMCH5    L     RE1,MACHN                ANY NEW MACRO NAMES ADDED .Q    39900000
         CL    RE1,SVCHN                                                39920000
         BE    KLOSOWT             IF NOT, GET OUT.                     39940000
         MVC   TEMPH,SVCHN         SAVE NEW CHAIN END INDICATOR.        39960000
         B     SMCH1                                                    39980000
KLOSOWT  DS    0H                                                       40000000
         L     LINK,DUSING              SUBSET                          40020000
         BAL   LINK,PSBSET-ENTDCT(LINK)   PERMANENT GENERAL DICTIONARY  40040000
KLOSIT   EQU   *                                                        40060000
         BAL       RD1,LIBWAIT         CHECK SYSLIB IF READ IN PROGRESS 40080000
         MVI   OUTPUT,X'0A'             GENERATE UT3 CLOSE OUT          40100000
         LA    OUTPTR,OUTPUT+3                                          40120000
         OI    SWTCH6,X'04'             SUPPRESS LOOKUP IN ENDOPR       40130000
         L     LINK,VNDOPR              LOAD VECTOR                     40140000
         BALR  LINK,LINK                OUTPUT RECORD                   40160000
         LH    RQ,H32767                FORCE BLOCK TO OUTPUT MEDIUM    40180000
         LA    RA,8                                                     40200000
         BAL       RR0,BWFORC                                           40220000
*./      DELETE    SEQ1=40240020,SEQ2=40240020                          40240000
*                                                                       40260000
*        CALL PHASE F3                                                  40280000
*                                                                       40300000
*./      DELETE    SEQ1=40320020,SEQ2=40480020                          40480000
         AIF       (&NOTSTAT).NO2                                       40500000
*   PRINTOUT  BEFORE  THE XCTL                                          40520000
         STM       7,8,SAVEREG         SAVE WORK REGISTERS              40540000
         L         7,BUMPER2           PLACE COUNTER IN REGISTER        40560000
         CVD       7,WORK              CHANGE MODE FOR PRINTING         40580000
         UNPK      WORK2(16),WORK      UNPACK FOR PRINTING              40600000
         OI        WORK2+15,X'F0'      CHANGE ZONE BIT FOR PRINTING     40620000
         MVC       YNOMACS,WORK2+11    MOVE TO THE OUTPUT AREA          40640000
         L         8,BUMPER1           GET THE EXTERNAL ADDRESS         40660000
         L         7,0(8)              LOAD EXTERNAL BUMPER             40680000
         CVD       7,WORK              CHANGE MODE FOR PRINTING         40700000
         UNPK      WORK2(16),WORK      UNPACK FOR PRINTING              40720000
         OI        WORK2+15,X'F0'      CHANGE ZONE BIT FOR PRINTING     40740000
         MVC       Z1,WORK2+11         MOVE TO OUTPUT AREA              40760000
         LM        7,8,SAVEREG         RELOAD THE WORK REGISTERS        40780000
         B         PRINTOUT            GET TO THE PRINT MACRO           40800000
SAVEREG  DS        2F                  SAVE REGISTER AREA               40820000
WORK     DS        D                   WORK AREA FOR CVD                40840000
WORK2    DS        4F                  WORK AREA FOR UNPK               40860000
PRINT    DC        C'SYSMACROS= '      START OF OUTPUT MESSAGE          40880000
YNOMACS  DS        CL5                 NO OF MACROS                     40900000
         DC        C'  SOURCE CARDS IN SYSMACROS= '                     40920000
Z1       DS        CL5                 NO OF SOURCE CARDS               40940000
BUMPER1  DC        V(BUMPER)                                            40960000
         DS        0H                  REALIGNMENT                      40980000
PRINTOUT PRINTOUT  PRINT,DCB=YES,CSECT=GGECT,TYPE=STAT SYSMACRO INFO    41000000
.NO2     ANOP                          END OF STATISTICS CODE           41020000
*                                                                       41040000
*        PASS F3 THE FOLLOWING PARAMETERS IN THE REGISTERS              41050000
         L         11,NPMAIN       R11=N/P ADDR. OF SUBSETTED O.C.DICT. 41060000
         LM        1,3,GDP         R1=GDP, R2=DEND, R3=SSEG.            41080000
         L         4,BWBLKS+16+BWBUFF BOTTOM OF CORE GOTTEN FROM BUFF   41090000
         LM        5,6,INPLEN      R5=INPLEN, R6=OBSIZ.                 41100000
         LM        7,8,BUFFENT     R7=BUFFENT, R8=ADLIST1.              41120000
         L         14,RETURN           RETURN ADDRESS TO ASM            41140000
         L         13,ASMSAVE          ADDRESS OF SAVE AREA IN ASM      41160000
*                                                                       41180000
*                                                                       41200000
         LA        9,L1BLDL+3*L1LENBL(8) GET ADDRESS OF F3 IN BLDL      41210000
         XCTL      ,DE=(9)            TABLE AND TRANSFER TO ASMGF3      41220000
*                                                                       41240000
*                                                                       41260000
*                                                                       41280000
SVCHN    DC    F'0'                                                     41300000
TEMPH    DC    F'0'                                                     41320000
SMRE2X   DS    F                                                        41340000
SMNAMV   MVC       DBLWD(*-*),1(RE1)   EX'ED MOVE OF MACRO NAME         41360000
EPTL     EQU   2                   LENGTH OF MACRO NAME CHAIN POINTER.  41380000
         EJECT                                                          41400000
*                                                                       41420000
*ROUTINE 'GETSRC'                                                       41440000
*FUNCTIONS-                                                             41460000
*   1. READS SOURCE, COPY, OR MACRO LIBRARY STATEMENTS INTO SOURCE      41480000
*      BUFFER.                                                          41500000
*   2. SEQUENCE CHECKS, TRANSLATES, AND DOES CONTINUATION HOUSEKEEPING. 41520000
*   3. WRITES OUT SOURCE RECORDS.                                       41540000
*   4. BUILDS STATEMENTS IN INPUT BUFFER.                               41560000
*ENTRY POINTS-                                                          41580000
*   GTSRC- GET FIRST CARD OF A STATEMENT.                               41600000
*        BAL   LINK,GETSRC                                              41620000
*        DC    AL2(0)                                                   41640000
*   GTSRC1- GET ALL CONTINUATION CARDS.                                 41660000
*        BAL   LINK,GETSRC                                              41680000
*        DC    AL2(2)                                                   41700000
*   GTSRC2- GET ONE CONTINUATION, WITH NO CHECK ON NUMBER OF CONTINU-   41720000
*           ATIONS (FOR MACRO INSTRUCTIONS).                            41740000
*        BAL   LINK,GETSRC                                              41760000
*        DC    AL2(4)                                                   41780000
*   GTSRC4- SKIP ALL CONTINUATION CARDS.                                41800000
*        BAL   LINK,GETSRC                                              41820000
*        DC    AL2(6)                                                   41840000
*   GTSRC5- GET ONE CARD, WITH NO SEQUENCE CHECK (FOR REPRO).           41860000
*./      DELETE    SEQ1=41880020,SEQ2=41880020                          41880000
*        BAL   LINK,GETSRC                                              41900000
*        DC    AL2(8)                                                   41920000
*                                                                       41940000
*                                                                       41960000
*                                       ******************************* 41980000
*                                       * REGISTER DEFINITIONS        * 42000000
*                                       ******************************* 42020000
WRKREG   EQU   2                        WORK REGISTER                   42040000
SEQLTH   EQU   4                        SEQUENCE FIELD LENGTH MINUS ONE 42060000
LINKRR   EQU   SEQLTH                   FOR INTERNAL LINKAGE            42080000
WRKRG1   EQU   LINKRR                                                   42100000
SEQPTR   EQU   5                        START OF SEQUENCE FIELD         42120000
ADJUST   EQU   6                        SOURCE BUFFER START             42140000
CNTCOL   EQU   7                        CONTINUATION CHARACTER COLUMN   42160000
SRCADR   EQU   8                        BEGIN OR CONTINUE COLUMN        42180000
INCRMN   EQU   9                        LENGTH OF SOURE MINUS ONE-      42200000
*                                         =END COL-BEG COL FOR FIRST,   42220000
*                                         =END COL-CONT COL FOR CONT.   42240000
TXTOUT   EQU   10                       INPUT BUFFER-1, OR LAST CHAR    42260000
*                                         PUT IN INPUT BUFFER           42280000
*                                       ******************************* 42300000
*                                       * MAINLINE CODE               * 42320000
*                                       ******************************* 42340000
*                                                                       42360000
*                                                                       42380000
*                                                                       42400000
*        INITIALIZE FOR FIRST CARD OF A STATEMENT.                      42420000
*                                                                       42440000
GETSRC   STM   RQ,L5,SAVREG                                             42460000
         L     B2,DCLOS1AD              SET BASE REGISTER.              42480000
         LH    RA,0(0,LINK)             DEVELOP BRANCH ADDRESS          42500000
         LH    WORK1,JUMP(RA)           FOR PROPER ENTRY                42520000
         B     GETSRC(WORK1)            INTO GET TEXT ROUTINE           42540000
JUMP     DC    AL2(GTSRC-GETSRC)        GET FIRST CARD                  42560000
         DC    AL2(GTSRC1-GETSRC)       GET ALL CONTINUATION CARDS      42580000
         DC    AL2(GTSRC2-GETSRC)       GET A SINGLE CONTINUATION CARD  42600000
         DC    AL2(GTSRC4-GETSRC)       BYPASS ANY CONTINUATION CARDS   42620000
         DC    AL2(GTSRC5-GETSRC)       GET ONE CARD                    42640000
GTSRC    NI    SWTCH4,X'FC'                                             42660000
         NI    SWTCH4,NMK012            RESET LAST STATEMENT MASKS      42680000
         OI    SWTCH6,8                 SET FIRST CARD SWITCH           42700000
         LA    RA,8                     ENSURE SPACE ON UT3 BLOCK       42720000
         LA    RQ,84                                                    42740000
         BAL   RR0,BWFORC                                               42760000
         LM    SEQLTH,TXTOUT,SEQLEN     LOAD REGISTERS WITH CONSTANTS   42780000
         MVI   ADDCNT,X'00'             RESET NO. OF LINES COUNTER      42800000
         B     CLSDRD              BRANCH TO READ.                      42820000
*                                                                       42840000
*        SET ENTRY POINT INDICATORS.                                    42860000
*                                                                       42880000
GTSRC4   OI    SWTCH3,MASK34                                            42900000
GTSRC2   OI    SWTCH3,MASK2                                             42920000
GTSRC1   OI    SWTCH3,MASK1                                             42940000
*                                                                       42960000
*        RETURN IF PREVIOUS CARD SHOWED NO CONTINUATION.                42980000
*                                                                       43000000
         TM    SWTCH4,MASK2                                             43020000
         BZ    ZXIT                                                     43040000
GTSRC5   OI    SWTCH3,MASK0                                             43060000
MAINLN   LA    RA,8                                                     43080000
         LA    RQ,84                                                    43100000
         BAL   RR0,BWFORC               ENSURE SPACE ON UT3 BLOCK.      43120000
*                                                                       43140000
*        INITIALIZE FOR CONTINUATION CARD.                              43160000
*                                                                       43180000
         LM    SEQLTH,CNTCOL,SEQLEN                                     43200000
         LM    SRCADR,TXTOUT,BEGCNT     ''                              43220000
*                                                                       43240000
*        READ ONE CARD INTO SOURCE BUFFER.                              43260000
*                                                                       43280000
CLSDRD   EQU   *                                                        43300000
         CLI   TYPRED+1,MACLIB          IS READ FROM MACLIB.            43320000
         BE    LIBREAD                  BRANCH IF YES                   43340000
         LA        RQ,NMBFLG(0,ADJUST) ADDRESS OF READIN AREA           43360000
         L     RA,ADCBIN                ADDRESS OF SYSIN DCB            43380000
         ST        RQ,PARA                                              43400000
*./      DELETE    SEQ1=43420020,SEQ2=43420020                          43420000
         GET   (1),(0)                  DO READ                         43440000
         L         RA,ADCBIN            SYSIN DCB FOR RECORD COUNT      43450000
LIBRETRN EQU   *                        MACLIB READ RETURN POINT.       43460000
         IC    WRKREG,ADDCNT            INCREMENT LINE COUNT            43480000
         LA    WRKREG,1(0,WRKREG)       ''                              43500000
         STC   WRKREG,ADDCNT            ''                              43520000
         L     WRKREG,L1DCBRCT(,RA)     GET CURRENT RECORD COUNT        43530000
         A     WRKREG,F1                BUMP COUNT BY ONE               43540000
         ST    WRKREG,L1DCBRCT(,RA)     RESTORE NEW RECORD COUNT        43550000
         TM    SWTCH3,MASK01                                            43560000
         BM    TRNSLT                   IF GTSRC5                       43580000
*                                                                       43600000
*        CHECK CONTINUATION COLUMN.                                     43620000
*                                                                       43640000
         TM    SWTCH1,MASK4             SKIP IF ICTL DOES NOT           43660000
         BZ    SEQNCE                     ALLOW CONTINUATIONS           43680000
         LA    WRKREG,NBFLM1(ADJUST,CNTCOL)                             43700000
         CLI   0(WRKREG),ABLANK         CONTINUATION CHECK              43720000
         BE    SEQNCE                   BRANCH IF NOT CONTINUED         43740000
         OI    SWTCH4,MASK1             SET NEW CONTINUATION BIT        43760000
*                                                                       43780000
*        SEQUENCE CHECK.                                                43800000
*                                                                       43820000
SEQNCE   DS    0H                                                       43830000
         LA    SEQPTR,NBFLM1(SEQPTR,ADJUST)  POINT TO SEQUENCE NUMBER   43840000
         TM    SWTCH1,MASK0             TEST IF SEQUENCE CHECK          43860000
         BZ    TRNSLT                   BRANCH IF NO SEQUENCE CHECK     43880000
         EX    SEQLTH,CMPFLD            SEQUENCE CHECK                  43900000
         BH    SEQSAVE                  BRANCH IF SEQUENCE O.K.         43920000
         OI    SWTCH7,X'04'             SET ERROR INDICATOR             43940000
SEQSAVE  DS    0H                                                       43950000
         EX    SEQLTH,SAVSEQ            SAVE NEW SEQUENCE VALUE         43960000
*                                                                       43980000
*        TRANSLATE TO INTERNAL ASSEMBLER CODE.                          44000000
*                                                                       44020000
TRNSLT   TR        NMBFLG(80,ADJUST),TRSLTB  TRANSLATE SOURCE           44040000
         TM    SWTCH3,MASK01            WAS ENTRY POINT GTSRC5 .Q       44060000
         BM    PUTIN3                   BIF YES                         44080000
         BAL   LINKRR,WRTAPER      GO WRITE OUT SOURCE.                 44100000
         TM    SWTCH7,X'04'             SEQUENCE ERROR INDICATOR        44120000
         BZ    NOSEQR                   NO ERROR                        44140000
         MVC       SWTCH7S1+1(1),SWTCH7 SAVE SWTCH7                     44146000
         NI        SWTCH7,X'7F'        TURN OFF SUBLIST SWITCH          44152000
         L     LINK,VWRNER              SEQUENCE ERROR MESSAGE          44160000
         BALR  LINK,LINK                                                44180000
         DC    AL1(ERRR35)                                              44200000
         DC    AL1(WRNST)                                               44220000
SWTCH7S1 MVI       SWTCH7,*-*          RESTORE SWTCH7                   44230000
         NI    SWTCH7,X'FB'        RESET SEQ ERR IND.                   44240000
NOSEQR   EQU   *                                                        44260000
         TM    SWTCH4,MASK2             TEST IF LAST CARD A CONTINUE    44280000
         BZ    SETUP                    BRANCH NO                       44300000
         NI    SWTCH4,NMASK2            RESET PREVIOUS CONTINUE INDIC   44320000
*                                                                       44340000
*        CHECK THAT NAME AND OPERATION FIELDS ARE BLANK.                44360000
*                                                                       44380000
         LA    WRKRG1,NBFLM1(ADJUST,SRCADR) CONTINUE COLUMN             44400000
         L     WRKREG,BEGCOL                                            44420000
         LA    WRKREG,NBFLM1-1(ADJUST,WRKREG)  BEGIN COL MINUS ONE      44440000
*              CHECK BEGIN TO CONTINUE COLUMNS FOR BLANK.               44460000
BLNCHK   LA    WRKREG,1(0,WRKREG)       ''                              44480000
         CR    WRKRG1,WRKREG            ''                              44500000
         BE    SETUP                    ''                              44520000
         CLI   0(WRKREG),BLANK          ''                              44540000
         BE    BLNCHK                   ''                              44560000
         MVC       SWTCH7S2+1(1),SWTCH7 SAVE SWTCH7                     44566000
         NI        SWTCH7,X'7F'        TURN OFF SUBLIST SWITCH          44572000
         L     LINK,VWRNER              BAD CONTINUATION ERROR MESSAGE  44580000
         BALR      LINK,LINK                                            44600000
         DC    AL1(ERRR36)                                              44620000
         DC    AL1(WRNST)                                               44640000
SWTCH7S2 MVI       SWTCH7,*-*          RESTORE SWTCH7                   44650000
SETUP    EQU   *                                                        44660000
         BAL   LINKRR,ERRORS       CHECK NBR OF CONT CARDS.             44680000
*                                                                       44700000
*        IF GTSRC4 ENTRY, GO GET THE FOLLOWING CONTINUATION.            44720000
*                                                                       44740000
         TM    SWTCH3,MASK4             TEST GETSRC ENTRY POINT         44760000
         BZ    PUTIN2                   SKIP IF NOT GTSRC4              44780000
*                                                                       44800000
         TM    SWTCH4,MASK1             TEST IF CONTINUATION TO FOLLOW  44820000
         BZ    AXIT                     BR IF NOT                       44840000
*        PREPARE FOR NEXT CARD BY CLEARING CONTINUE INDICATOR FOR       44860000
*        CURRENT CARD AND SETTING CONTINUATION EXPECTED INDICATOR.      44880000
         OI    SWTCH4,MASK2                                             44900000
         NI    SWTCH4,NMASK1                                            44920000
         B     MAINLN                   BRANCH TO READ COMPLETION OF ST 44940000
PUTIN2   TM    SWTCH4,MASK1                                             44960000
         BZ    PTTIN2                                                   44980000
         NI    SWTCH4,NMASK1                                            45000000
         OI    SWTCH4,MASK2                                             45020000
*                                                                       45040000
*        MOVE CARD TO START OF INPUT BUFFER IF  GTSRC. MOVE OPERAND     45060000
*        FIELD TO NEXT SPACE IN INPUT BUFFER IF GTSRC1 OR GTSRC2.       45080000
*        DIFFERENCE IS DETERMINED BY CONTENTS OF REGISTERS SRCADR,      45100000
*        INCRMN, AND TXTOUT. (NOT USED BY GTSRC4 OR GTSRC5.)            45120000
*                                                                       45140000
PTTIN2   LA    WRKREG,NBFLM1(SRCADR,ADJUST)  LOC OF SOURCE FIELD        45160000
         LA    LINKRR,1(INCRMN,TXTOUT)  SAVE ADDRESS OF LAST PUT CHARAC 45180000
         EX    INCRMN,MVTOUT            EXECUTE MOVE TO INPUT BUFFER    45200000
         ST    LINKRR,ENDCOL            UPDATE INPUT BUFFER POINTER     45220000
         MVI   1(LINKRR),X'FF'          END-OF-STATEMENT CODE           45240000
*                                                                       45260000
*        IF GTSRC1, LOOP TO GTSRC1 . EXIT OTHERWISE.                    45280000
AXIT     EQU   *                                                        45300000
         TM    SWTCH3,MASK12            TEST IF GTSRC1                  45320000
         BM    GTSRC1                   BRANCH YES                      45340000
ZXIT     DS    0H                                                 V7A08 45360028
         NI    SWTCH3,NM0123            RESET GETSRC BITS 0-3     V7A08 45370028
         LM    RQ,L5,SAVREG             RESTORE REGISTERS               45380000
         B     2(0,LINK)                RETURN TO CALLER                45400000
*                                                                       45420000
*        MOVE CARD TO INPUT BUFFER FOR GTSRC5.                          45440000
*                                                                       45460000
PUTIN3   MVC   1(80,TXTOUT),NMBFLG(ADJUST)                              45480000
         TM    SWTCH5,128                                               45500000
         BZ    AXIT                    EXIT IF NOT PROGRAMMER MACRO     45520000
         OI    SWTCH6,8                ELSE WRITE SOURCE                45540000
         BAL   LINKRR,WRTAPE                                            45560000
         B     AXIT                                                     45580000
DUMTITLE DC        X'08005400',9X'32',X'1D121D150E323232323231',8X'29',X45584000
               X'31',51X'32'                                            45588000
DUMTITL1 DC        X'00002740801800000000FD00F8FD051D121D150EF8FD0B31',X45592000
               8X'29',X'3132F8FD00F8FF'                                 45596000
*                                                                       45600000
CMPFLD   CLC   0(0,SEQPTR),SEQVAL       OUT OF LINE SEQUENCE COMPARE    45620000
SAVSEQ   MVC   SEQVAL(0),0(SEQPTR)      OUT OF LINE SAVE SEQUENCE VALUE 45640000
MVTOUT   MVC   1(0,TXTOUT),0(WRKREG)    OUT OF LINE MOVE TO INPUT       45660000
*                                       ******************************* 45680000
*                                       ******************************* 45700000
*                                                                       45720000
*        CHECK IF MORE THAN 3 CARDS IN STATEMENT.                       45740000
*                                                                       45760000
ERRORS   TM    SWTCH3,MASK2             TEST GETSRC ENTRY POINT         45780000
         BCR   1,LINKRR                 SKIP IF GTSRC2 OR GTSRC4 ENTRY  45800000
         CLI   ADDCNT,4                 CHECK COUNT                     45820000
         BCR   4,LINKRR                 BR IF LESS THAN 4               45840000
         L     LINK,VWRNER              LOAD VECTOR                     45860000
         BALR  LINK,LINK                TOO MANY CONTINUATIONS ERR MSG  45880000
         DC    AL1(ERRR37)                                              45900000
         DC    AL1(WRNST)                                               45920000
         OI    SWTCH3,X'78'             SIMULATE GTSRC4 ENTRY TO SKIP   45940000
*                                         ANY MORE CONTINUES            45960000
         BR    LINKRR                                                   45980000
*                                                                       46000000
INEND    DC        X'0E170D'           'END' IN INTERNAL CODE           46020000
*                                                                       46040000
*        WRITE OUT SOURCE RECORDS.                                      46060000
*                                                                       46080000
WRTAPER  MVC   0(NMBFLG,ADJUST),SRCFLG  INITIALIZE SOURCE HEADER BYTES  46100000
         TM    SWTCH3,MASK7             WERE ANY ERRORS FOUND .Q        46120000
         BZ    SUTUP                    BIF NO                          46140000
         OI    3(ADJUST),MASK5          SET ERROR RECORD FLAG           46160000
         TM    SWTCH4,MASK0             WERE COMMENTS CONTINUED .Q      46180000
         BO    SUTUP                    BIF YES                         46200000
         OI    3(ADJUST),MASK3          SET RECORD TYPE AS ERROR        46220000
SUTUP    TM    SWTCH4,MASK2             IS THIS A CONTINUATION CARD .Q  46240000
         BZ    WRTAPE                   BIF NO                          46260000
         OI    3(ADJUST),MASK6          SET CONTINUATION CARD FLAG      46280000
WRTAPE   DS        0H                                                   46300000
         LA        RA,8                WRITE ON UT3                     46301000
         TM        PARBYT1,FLIST       WAS FULLLIST SPECIFIED .Q        46302000
         BZ        REWTEST             BRANCH IF OFF                    46303000
         TM        SWTCH6,X'40'        TEST IF THIS FIRST CARD          46304000
         BZ        REWRTP                                               46305000
*        OUTPUT A TITLE STATEMENT TO PREFIX THE MACRO                   46306000
         LA        RQ,84+39            LENGTH OF SOURCE & INTERNAL RECS 46307000
         BAL       RR0,BWFORC                                           46309000
         LA        RQ,DUMTITLE         ADDR OF RECORDS                  46310000
         BAL       RR0,BWRITE                                           46312000
         B         REWRTP              GO OUTPUT LINE                   46313000
REWTEST  TM    SWTCH5,X'C0'             TEST FOR MAINLINE OR SYSTEM     46320000
         BZ    NOSYSM                      MACROS                       46340000
         TM    SWTCH1,MASK1             IN PROGRAMMER MACRO .Q    V7A04 46342028
         BO    REWRTP                   YES, PRINT EVERYTHING     V7A04 46344028
         TM    SWTCH3,MASK6             SUPPRESS SOURCE PUT ON .Q V7A04 46346028
         BO    NOSYSM                   YES, DO NOT PUT SOURCE    V7A04 46348028
REWRTP   LA    RQ,84                    SOURCE LENGTH IS 84             46360000
         BAL   RR0,BWFORC               ASSURE FIT INTO OUTPUT BLOCK    46380000
         TM    SWTCH5,64                BRANCH IF NOT MAINLINE          46400000
         BZ    REWRT1                                                   46420000
         TM    SWTCH6,8                   OR IF NOT FIRST CARD          46440000
         BZ    REWRT1                                                   46460000
         LA        RR0,0(RA,RA)         OTHERWISE PICK UP NOTE          46480000
         LA        RR0,BWBLKS(RR0)                                      46500000
         MVC       STNOTE(6),BWFNOT(RR0) AND SAVE                       46520000
REWRT1   LR    RQ,ADJUST                                                46540000
         BAL   RR0,BWRITE                                               46560000
NOSYSM   NI    SWTCH6,247               CLEAR FIRST CARD SWITCH         46580000
         TM    SWTCH6,1                 IS THIS A NORMAL COMMENT WITHIN 46600000
         BZ    NOWRIT                      A MACRO                      46620000
         NI    SWTCH6,X'FE'                                             46640000
         TM    SWTCH1,MASK1             ARE WE WITHIN A MACRO           46660000
         BZ    NOWRIT                                                   46680000
         SR    RA,RA                    YES- WRITE ON SYSUT1 TOO        46700000
         B     REWRTP                                                   46720000
NOWRIT   BR    LINKRR                                                   46740000
         EJECT                                                          46750000
*        CODE TO READ MACLIB/COPYLIB DOUBLE BUFFERED ALL THE WAY        46760000
*                                                                       46780000
LIBREAD  DS    0H                                                       46800000
         STM   RE1,RD1,FINDSAVE         SAVE SOME WORK REGISTERS        46820000
         L     RE1,LBDECBAD             GET CURRENT SYSLIB DECB         46840000
         TM    LBRDSW(RE1),LBRDOT       OUTSTANDING READ .Q             46860000
         BZ    LIBRRDE2                 BRANCH IF NOT                   46880000
         BAL   LINK,LIBRDSUB            CLEAN VARIOUS STUFF UP    V7A42 46900028
LIBRRDE2 DS    0H                                                       47020000
         L     RA,LBLIBNTA(,RE1)        MOVE LOGICAL RECORD TO WKAREA   47040000
         CL    RA,LBLIBEOB(,RE1)        TEST FOR END-OF-BLOCK           47060000
         BNL   CHECKEM                  END-OF-BLOCK, GET ANOTHER       47080000
         L     L4,LBAREAAD(,RE1)        GET START OF BUFFER ADDRESS     47100000
         CLI   0(L4),X'0F'              IS THE BLOCK EDIT-FORMAT? V7A42 47110028
         LA    L4,0(L4,RA)              ADD BUFFER OFFSET (CC)    V7A42 47120028
         BNL   LIBRRD2A                 NO, UNBLOCK CARD FORMAT   V7A42 47121028
         LR    RA,L4                    RECORD ADDR INTO RA (R1)  V7A42 47122028
         LA    WRKREG,NMBFLG(,ADJUST)   OUTPUT INTO WRKREG (R2)   V7A42 47123028
         L     LINK,ADLIST1             POINT AT LIST1 IN ASM     V7A42 47124028
         LA    RQ,L1DDNAM+24(,LINK)     R0 POINTS TO "SYSLIB"     V7A42 47125028
         L     L5,L1DBLK(,LINK)         POINT AT DEBLOCKER        V7A42 47126028
         BALR  L4,L5                    OFF TO IT                 V7A42 47127028
         S     RA,LBAREAAD(,RE1)        CALCULATE THE OFFSET      V7A42 47128028
         B     LIBRRD2B                 GO JOIN COMMON CODE       V7A42 47129028
LIBRRD2A DS    0H                       HERE FOR CARD FORMAT      V7A42 47130028
         MVC   NMBFLG(80,ADJUST),0(L4)  OK - TRANSFER ONE RECORD        47140000
         LA    RA,80(,RA)               UPDATE RECORD OFFSET            47160000
LIBRRD2B DS    0H                       HERE FROM EDIT CASE       V7A42 47170028
         ST    RA,LBLIBNTA(,RE1)        SAVE IT FOR LATER               47180000
         B     LIBRRDE3                 BRANCH TO RETURN                47200000
CHECKEM  DS    0H                                                       47220000
         LR    RD1,RE1                  1ST SYSLIB DECB                 47240000
         L     RE1,LBDECBAD+4           2ND SYSLIB DECB                 47260000
         STM   RE1,RD1,LBDECBAD         SWITCH DECB POINTERS            47280000
         BAL   LINK,LIBRDSUB            CLEAN VARIOUS STUFF UP    V7A42 47300028
         L     RD1,LBDECBAD+4           2ND SYSLIB DECB ADDRESS         47500000
         OI    LBRDSW(RD1),LBRDOT       OUTSTANDING READ                47520000
*                                                                       47540000
*        NOTE AND READ NEXT BUFFER                                      47550000
         BAL   LINK,NOTREAD             START NEXT READ                 47560000
         B     LIBRRDE2                 PEEL OFF NEXT RECORD            47580000
LIBRRDE3 DS    0H                                                       47600000
         L     RA,LBDCBAD(,RE1)         SYSLIB DCB FOR RECORD COUNT     47620000
         LM    RE1,RD1,FINDSAVE         RESTORE WORK REGISTERS          47640000
         B     LIBRETRN                 AND RETURN                      47660000
*./      DELETE    SEQ1=47680020,SEQ2=48000020                          48000000
         EJECT                                                          48020000
*./      DELETE    SEQ1=48040020,SEQ2=48080020                          48080000
EOFIN    OI        SWTCH7,X'02'        SET ERROR IND.                   48100000
         MVI       SWTCH4,X'00'        CLEANUP                          48110000
         NI        SWTCH5,X'C1'        CLEANUP, PROG MACRO OR O.C. KEPT 48115000
         L     WORKRG,PARA         GET INPUT BUFFER  ADDRESS.           48120000
         MVI       0(WORKRG),X'32'     SET TO BLANKS                    48140000
         MVC   1(79,WORKRG),0(WORKRG)                                   48160000
         A     WORKRG,BEGCOL            COMPUTE START OF OP-FIELD       48180000
         MVC       0(3,WORKRG),INEND   MOVE IN END OPERATION            48200000
*./      DELETE    SEQ1=48220020,SEQ2=48300020                          48300000
         MVC       1(80,TXTOUT),NMBFLG(ADJUST) MOVE TO INPUT BUFFER     48320000
         B         ZXIT                                                 48340000
*                                                                       48360000
*                                                                       48380000
LIBCHK   DS    0H                                                       48400000
         STM   LINK,RD1,FINDSAVE        SAVE WORK REGISTERS             48420000
         L     RE1,LBDECBAD+4           2ND SYSLIB DECB                 48440000
         L     RD1,LBDECBAD             1ST SYSLIB DECB                 48460000
         STM   RE1,RD1,LBDECBAD         SWITCH DECB POINTERS            48480000
         LR    RD1,RE1                  THIS ONE HAS A READ             48490000
         NI    LBRDSW(RD1),255-LBRDOT   TURN OFF OUTSTANDING READ       48500000
         BAL   LINK,NOTCHECK            CHECK THE READ                  48520000
         OI    LBRDSW(RD1),LBRDRS       PROCESSING READS STARTED        48540000
         LM    LINK,RD1,FINDSAVE        RESTORE WORK REGISTERS          48560000
         BR    LINK                     AND RETURN                      48580000
*./      DELETE    SEQ1=48600020,SEQ2=48700020                          48700000
*                                                                       48720000
*                                                                       48740000
EOFLIB   DS    0H                                                       48760000
         LM    RQ,L5,SAVREG             RELOAD REGS AS IF EXIT FROM     48780000
         L     B2,DCLOS1AD              GETSRC, AND RESTORE BASE        48800000
         XI    SWTCH4,MASK5             RESET SWITCH FOR GETSRC PROCBUF 48820000
         L     RA,CPCUR                 GET CURRENT NESTING LEVEL       48830000
         LTR   RA,RA                    ALREADY NEGATIVE .Q             48840000
         BM    NOTCOP                   YES, EOF IN MACRO               48850000
         S     RA,CPLEN                 LESS ONE LEVEL                  48860000
         ST    RA,CPCUR                 UPDATE NEW LEVEL                48870000
         BP    EOFLIBA                  BRANCH IF NESTED COPY           48880000
         BM    EOFLIBB                  BRANCH IF END OF NESTED COPY    48890000
         TM    SWTCH5,X'20'             IN SYSTEM MACRO .Q              48900000
         BZ    EOFLIBA                  BRANCH IF NOT, STILL COPY       48910000
         LR    RQ,RA                    TRANSFER CURRENT LEVEL          48920000
         S     RQ,CPLEN                 DOWN TO SYSTEM MACRO            48930000
         ST    RQ,CPCUR                 SET INITIAL CURRENT LEVEL       48940000
EOFLIBB  DS    0H                                                       48950000
         NI    SWTCH1,X'50'             KEEP MACRO AND PROT SWITCH      48960000
         NI    SWTCH1X,255-X'50'        DESTROY MACRO AND PROT SWITCH   48970000
         OC    SWTCH1(1),SWTCH1X        RESET SWITCH1                   48980000
         NI    SWTCH7,X'FE'             RESET COPY SWITCH               48990000
         MVC   TYPRED+1(1),INFILS  RESET INPUT FILE NBR.                49000000
         MVC   SEQLEN(40),COPYSV   RESET GTSRC PARAMS.                  49020000
         L     RQ,BEGCOL                ENDCOLUMN=BEGIN COLUMN          49025000
         A     RQ,SRCLEN                $ PLUS SOURCE LENGTH            49030000
         ST    RQ,ECOL                  RESTORE END COLUMN              49035000
         TM    SWTCH5,X'20'             WITHIN A SYSTEM MACRO .Q        49040000
         BZ    DRVER                    RETURN IF NOT                   49050000
*                                                                       49060000
*        WITHIN SYSTEM MACRO OR NESTED COPY, POINT TO PREVIOUS          49080000
*                                                                       49100000
EOFLIBA  DS    0H                                                       49120000
         STM   RE1,RD1,FINDSAVE         SAVE WORK REGS                  49140000
         L     RD1,LBDECBAD             1ST SYSLIB DECB POINTER         49156000
         LA    RA,CPWORK(RA)            POINT TO SAVED DATA             49160000
         MVC   MACNAME,CPCPNAME(RA)     RESTORE CALLER MEMBER NAME      49180000
         MVC   LBLIBNOT(LBRDSW-LBLIBNOT,RD1),CPLIBNOT(RA)  DECB SUFIX   49182000
         L     RE1,LBDCBAD(,RD1)        SYSLIB DCB ADDRESS              49184000
         TM    PARBYT3,CMS            CMS OPTION ON .Q                  49186000
         BZ    EOFLIBC                BRANCH IF NOT                     49188000
         LA    L5,DBLWD                 MACRO NAME GOES HERE            49190000
         MVC   0(8,L5),MACNAME          MACRO NAME IN INTERNAL          49190400
         TR    0(8,L5),TRSLTB           EXTERNAL FORM                   49190800
         L     RA,FINDAD                FIND SUBROUTINE ADDRESS         49191200
         BALR  RQ,RA                    CALL FIND SUBROUTINE            49191600
         POINT (RE1),LBLIBNOT(RD1)      AND A POINT                     49192000
         B     EOFLIBD                AND CONTINUE                      49194000
*        POINT WOULD HAVE RESTORED FDAD IN DCB                          49196000
EOFLIBC  DS    0H                                                       49198000
         MVC   DCBFDAD-IHADCB(8,RE1),LBLIBNOT(RD1)  RESET DCB FDAD      49200000
         NI    DCBOFLGS-IHADCB(RE1),X'FF'-X'80' TRK BAL NO LONGER VALID 49204000
         NI    DCBIFLGS-IHADCB(RE1),X'FF'-X'C0' AVOID SYNAD/EOV CHECK   49208000
         NI    DCBCIND1-IHADCB(RE1),X'FF'-X'20' VOLUME FULL BIT         49212000
         L     RA,DCBIOBA-IHADCB(,RE1)  SYSLIB IOB ADDRESS              49220000
*        AND POINT WOULD HAVE RESTORED FDAD IN IOB                      49240000
         MVC   IOBSEEK+8(8,RA),LBLIBNOT(RD1)  RESET IOB SEEK ADDRESS    49260000
EOFLIBD  DS    0H                                                       49270000
         NI    LBRDSW(RD1),255-LBRDRS-LBRDOT  KILL READ SWITCHES        49280000
         BAL   LINK,NOTREAD             READ INTO 1ST SYSLIB BUFFER     49300000
         BAL   LINK,NOTCHECK            CHECK 1ST READ                  49310000
         OI    LBRDSW(RD1),LBRDRS       PROCESSING READS STARTED        49320000
         L     RD1,LBDECBAD+4           2ND SYSLIB DECB                 49330000
         NI    LBRDSW(RD1),255-LBRDRS-LBRDOT  KILL READ SWITCHES        49340000
         BAL   LINK,NOTREAD             READ INTO 2ND SYSLIB BUFFER     49360000
         OI    LBRDSW(RD1),LBRDOT       OUTSTANDING READ                49370000
         LM    RE1,RD1,FINDSAVE         RESTORE CALLER'S REGS           49380000
         B     DRVER                    AND CONTINUE                    49390000
*                                                                       49400000
NOTCOP   EQU   *                                                        49420000
         L     LINK,VWRNER              LOAD VECTOR                     49440000
         BALR  LINK,LINK           OUTPUT ERROR RECORD AND GO TO DRIVER 49460000
         DC    AL1(ERRR38)                                              49480000
         DC    AL1(ERRST)                                               49500000
         TM    SWTCH6,X'40'             TEST IF MACRO OP EXPECTED       49510000
         BO    SMCH3                    MACRO MEMBER IS EMPTY           49515000
         L     LINK,VMEND1              LOAD VECTOR                     49520000
         BR    LINK                     AND BRANCH.                     49540000
LREG     EQU   WRKREG                                                   49560000
LSLINK   DS    F                        SAVE AREA FOR LINK        V7A42 49562028
LIBRDSUB DS    0H                                                 V7A42 49562228
         ST    LINK,LSLINK              SAVE LINK REGISTER        V7A42 49562428
         NI    LBRDSW(RE1),255-LBRDOT   TURN OFF READ OUTSTANDING V7A42 49562628
         LR    RD1,RE1                  DECB ADDRESS              V7A42 49562828
         BAL   LINK,NOTCHECK            CHECK THE READ            V7A42 49563028
         OI    LBRDSW(RE1),LBRDRS       PROCESSING READS STARTED  V7A42 49563228
         L     RD1,LBRECPW(,RE1)        COMPUTE EOB ADDRESS       V7A42 49563428
         L     RA,LBDCBAD(,RE1)         FROM RESIDUAL LENGTH IN   V7A42 49563628
         LH    L4,14(,RD1)              GET RESIDUAL COUNT        V7A42 49563828
         LCR   L4,L4                    CSW, BLKSIZE FROM DCB     V7A42 49564028
         TM    DCBRECFM-IHADCB(RA),X'C0'  RECFM 'U' .Q            V7A42 49564228
         BNO   LIBRDS0                  BRANCH IF NOT             V7A42 49564428
         LTR   L4,L4                    CHECK RESIDUAL COUNT      V7A42 49564628
         BNM   LIBRDERR                 OVERFLOW IF ZERO OR POS   V7A42 49564828
LIBRDS0  DS    0H                                                 V7A42 49565028
         AH    L4,DCBBLKSI-IHADCB(,RA)  GET TRUE BLOCK LENGTH     V7A42 49565228
         L     LINK,LBAREAAD(,RE1)      GET THE BUFFER ADDRESS    V7A42 49565428
         CH    L4,0(,LINK)              TEST IF IT'S EDIT FORMAT  V7A42 49565628
         BL    LIBRDS1                  IF NOT, PROCESS NORMALLY  V7A42 49565828
         CLI   0(LINK),X'0F'            BETTER DOUBLE-CHECK       V7A42 49566028
         BNL   LIBRDS1                  THAT THE WORD'S POSITIVE  V7A42 49566228
         LH    L4,0(,LINK)              GET THE 'REAL' LENGTH     V7A42 49566428
         ST    L4,LBLIBEOB(,RE1)        STORE IT AS EOB ADDR      V7A42 49566628
         LA    L4,2                     GET STARTING OFFSET OF 2  V7A42 49566828
         B     LIBRDS2                  REJOIN COMMON CODING      V7A42 49567028
LIBRDS1  DS    0H                                                 V7A42 49567228
         ST    L4,LBLIBEOB(,RE1)        SAVE EOB OFFSET           V7A42 49567428
         SR    L4,L4                    ZERO WORK REGISTER        V7A42 49567628
LIBRDS2  DS    0H                                                 V7A42 49567828
         ST    L4,LBLIBNTA(,RE1)        ZERO START BUFFER OFFSET  V7A42 49568028
         L     LINK,LSLINK              RESTORE LINK REGISTER     V7A42 49568228
         BR    LINK                     RETURN TO CALLER          V7A42 49568428
*                                                                 V7A42 49568628
LIBRDERR DS    0H                                                 V7A42 49568828
         L     RA,ADLIST1               POINT TO LIST1 IN ASM     V7A42 49569028
         MVC   LIBRDDNM(8),L1DDNAM+24(RA) MOVE "SYSLIB" INTO MSG  V7A42 49569228
         BAL   RQ,L1ABEND(,RA)          GO TERMINATE ASSEMBLY     V7A42 49569428
*                                                                 V7A42 49569628
         DC    C'503A',AL1(LIBME-*-2)   PARAMETERS FOR ABEND      V7A42 49569828
         DC    C'BLOCK EXCEEDS DECLARED BLKSIZE, DDNAME = '       V7A42 49570028
LIBRDDNM DC    C'XXXXXXXX'              SPACE FOR DDNAME          V7A42 49570228
LIBME    EQU   *                        END OF MESSAGE            V7A42 49570428
*                                                                 V7A42 49570628
VMEND1   DC    V(MEND1)                                                 49580000
VWRNER   DC    V(WRNERR)                                                49600000
VSWICL   DC    V(SWICTL)                                                49620000
VNDOPR   DC    V(NDOPR0)                                                49640000
VDRVER   DC    V(DRIVER)                                                49660000
         SPACE 2                                                        49661000
*                                                                       49662000
*        NOTE AND READ SYSLIB DATASET                                   49663000
*                                                                       49664000
*        (RD1) DECB ADDRESS                                             49665000
*        (LINK) RETURN ADDRESS                                          49666000
NOTREAD  DS    0H                                                       49667000
         L     RA,LBDCBAD(,RD1)       SYSLIB DCB ADDRESS                49668000
         TM    PARBYT3,CMS            CMS OPTION ON .Q                  49669000
         BO    NOTREAD1               BRANCH TO READ IF YES             49670000
         MVC   LBLIBNOT(8,RD1),DCBFDAD-IHADCB(RA)  SAVE DCB FDAD        49671000
NOTREAD1 DS    0H                                                       49672000
         XC    0(4,RD1),0(RD1)                                          49672102
         READ  (RD1),SF,,,'S',MF=E      READ INTO BUFFER          V7A42 49673028
         BR    LINK                   AND RETURN                        49674000
         SPACE 2                                                        49675000
*                                                                       49676000
*        CHECK AND NOTE SYSLIB DATASET                                  49677000
*                                                                       49678000
*        (RD1) DECB ADDRESS                                             49679000
*        (LINK) RETURN ADDRESS                                          49680000
NOTCHECK DS    0H                                                       49681000
         CHECK (RD1)                  CHECK OUTSTANDING READ            49682000
         TM    PARBYT3,CMS            CMS OPTION ON .Q                  49683000
         BCR   8,LINK                 RETURN NOW IF NOT                 49684000
         L     RA,LBDCBAD(,RD1)         SYSLIB DCB ADDRESS              49685002
         NOTE  (1)                    WHERE WERE WE .Q                  49686000
         ST    RA,LBLIBNOT(,RD1)      SAVE TTRN INFO                    49687000
         BR    LINK                   AND RETURN                        49688000
         EJECT                                                          49690000
*ROUTINES 'BWFORC' AND 'BWRITE'                                         49700000
*FUNCTION/OPERATION-                                                    49720000
*    UT1 AND UT3 BLOCKED TEXT WRITE PACKAGE FOR SOURCE, EDITED, AND     49740000
*    ERROR RECORDS.                                                     49760000
*                                                                       49780000
*    BWFORC CHECKS IF BUFFER HAS ROOM FOR NEXT RECORD. IF YES, RETURN.  49800000
*    IF NO, WRITES, CHECKS, AND NOTES BLOCK FROM BUFFER.                49820000
*    CALL TO BWFORC MUST PRECEDE EACH CALL TO BWRITE.                   49840000
*                                                                       49860000
*    BWRITE TRANSFERS NEXT RECORD TO BUFFER, THEN GOES TO BWFORC.       49880000
*    IF RECORD FILLS BUFFER, BWFORC WILL WRITE IT.                      49900000
*                                                                       49920000
*./      DELETE    SEQ1=49940020,SEQ2=49940020                          49940000
*                                                                       49960000
*ENTRY POINTS-                                                          49980000
*   BWFORC-   L     RQ,LENGTH           RECORD LENGTH                   50000000
*             L     RA,FILENO           FILE NUMBER- 0=SYSUT1, 8=SYSUT3 50020000
*             BAL   RR0,BWFORC                                          50040000
*                                                                       50060000
*   BWRITE-   LA    RQ,RECORD           RECORD ADDRESS                  50080000
*             L     RA,FILENO           FILE NUMBER                     50100000
*             BAL   RR0,BWRITE                                          50120000
*                                                                       50140000
*./      DELETE    SEQ1=50160020,SEQ2=50180020                          50180000
*                                                                       50200000
RR0      EQU   5                        LINK REGISTER                   50220000
RR1      EQU   8                        POINTER TO FILE BLOCKS BWBLKS   50240000
RR2      EQU   9                        'FROM' POINTER FOR RECORD MOVE  50260000
RR3      EQU   10                       'TO' POINTER FOR RECORD MOVE    50280000
RR4      EQU   14                       LENGTH COUNTER FOR RECORD MOVE  50300000
*./      DELETE    SEQ1=50320020,SEQ2=50380020                          50380000
*./      DELETE    SEQ1=50400022,SEQ2=50440022                          50440000
*                                                                       50460000
BWFVAL   EQU   20                       FORCE VALUE AFTER BWRITE ENTRY  50480000
EOBFLG   EQU   254                      END-OF-BUFFER FLAG              50500000
BWFORC   STM   RR1,L5,BWSAVE            SAVE REGISTERS                  50520000
         L     B2,DCLOS1AD              SET BASE REGISTER               50540000
         LA    RR1,0(RA,RA)             POINT RR1 TO BWBLKS FOR SYSUT1, 50560000
         LA    RR1,BWBLKS(RR1)            OR BWBLKS+16 FOR SYSUT3       50580000
         STH   RQ,BWRLTH(0,RR1)                                         50600000
*./      DELETE    SEQ1=50620020,SEQ2=50640020                          50640000
BW05     AH    RQ,BWNDEX(0,RR1)         EXIT IF RECORD WILL FIT IN      50660000
         CH    RQ,BWBFSZ(0,RR1)           CURRENT BLOCK                 50680000
         BL    BW010                                                    50700000
*./      DELETE    SEQ1=50720020,SEQ2=50740020                          50740000
         LH        RQ,BWNDEX(0,RR1)    ADD 1 TO COVER EOB FLAG          50760000
         A         RQ,F1               ADD THE ONE                      50780000
         ST        RQ,WRLEN2           SET LENGTH                       50785000
         ST        RA,WRUT2            SET UTILITY NUMBER               50790000
         ST        RA,CKUT2                                             50795000
         ST        RA,NTUT2                                             50800000
         L         L5,BWBUFF(0,RR1)    SET ADDRESS                      50805000
         ST        L5,WRADD2                                            50810000
         MVC       0(4,L5),BWFNOT(RR1) SET N/P AT START OF BUFFER       50812000
         L         RA,BUFFENT          DO A WRITE                       50815000
         CNOP      2,4                                                  50820000
         BALR      RQ,RA                                                50825000
         DC        F'8'                                                 50830000
WRUT2    DC        F'0'                                                 50835000
WRADD2   DC        F'0'                                                 50840000
WRLEN2   DC        F'0'                                                 50845000
         L         RA,BUFFENT          DO A CHECK                       50850000
         CNOP      2,4                                                  50855000
         BALR      RQ,RA                                                50860000
         DC        F'28'                                                50865000
CKUT2    DC        F'0'                                                 50870000
         L         RA,BUFFENT          DO A NOTE                        50880000
         CNOP      2,4                                                  50890000
         BALR      RQ,RA                                                50900000
         DC        F'20'                                                50910000
NTUT2    DC        F'0'                                                 50920000
NTNP2    DC        F'0'                                                 50930000
         MVC       BWFNOT(4,RR1),NTNP2 SAVE NOTE                        50940000
         MVC       BWNDEX(2,RR1),H5    SET CURRENT BUFFER POSITION = 5  50960000
         L         RA,WRUT2            RESTORE RA                       50970000
BW010    LM        RR1,L5,BWSAVE       RESTORE REGISTERS AND EXIT       50980000
         BR        RR0                                                  50990000
         SPACE     2                                                    50995000
BWRITE   STM   RR1,L5,BWSAVE            SAVE REGISTERS                  51000000
         L     B2,DCLOS1AD              SET BASE REGISTER               51020000
         LR    RR2,RQ                   SAVE RECORD ADDRESS             51040000
*./      DELETE    SEQ1=51060020,SEQ2=51060020                          51060000
         LA    RR1,0(RA,RA)             POINT RR1 TO BWBLKS FOR SYSUT1, 51080000
         LA    RR1,BWBLKS(RR1)            OR BWBLKS+16 FOR SYSUT3       51100000
*./      DELETE    SEQ1=51120020,SEQ2=51480020                          51480000
         LH    L5,BWNDEX(0,RR1)                                         51500000
         L     RR3,BWBUFF(0,RR1)                                        51520000
         AR    RR3,L5                   ...ABSOLUTE BUFFER POSITION     51540000
         LH    RR4,BWRLTH(0,RR1)        LENGTH FROM PREVIOUS BWFORC     51560000
         AR    L5,RR4                                                   51580000
         STH   L5,BWNDEX(0,RR1)         ...UPDATED BUFFER INDEX         51600000
         LA    L5,0(RR3,RR4)                                            51620000
         MVI   0(L5),EOBFLG             ...MOVE EOB FLAG AFTER RECORD   51640000
         B     BW035                                                    51660000
BW030    MVC   0(256,RR3),0(RR2)        MOVE 256 BYTES AND UPDATE       51680000
         LA    RR2,256(0,RR2)             POINTERS                      51700000
         LA    RR3,256(0,RR3)                                           51720000
BW035    SH    RR4,H256                 TEST IF A 256 BYTE MOVE CAN     51740000
         BH    BW030                      BE PERFORMED, AND DO IT       51760000
         LA    RR4,255(0,RR4)           NO -SO JUST MOVE WHAT'S LEFT    51780000
         EX    RR4,BW050                                                51800000
*./      DELETE    SEQ1=51820020,SEQ2=51820020                          51820000
         LA    RQ,BWFVAL                EXECUTE BWFORC                  51840000
         B     BW05                                                     51860000
*./      DELETE    SEQ1=51880020,SEQ2=51940020                          51940000
BW050    MVC   0(1,RR3),0(RR2)          OUT-OF-LINE                     51960000
         LTORG                                                          51980000
*                                       ******************************* 52000000
*                                       * EQUATES                     * 52020000
*                                       ******************************* 52040000
PUTFLG   EQU   X'FD'                                                    52060000
NULL     EQU   X'00'                                                    52080000
ONE      EQU   X'01'                                                    52100000
MASK16   EQU   X'42'                                                    52120000
MASKFA   EQU   X'FA'                                                    52140000
MASKFB   EQU   X'FB'                                                    52160000
MASKFF   EQU   X'FF'                                                    52180000
MSK067   EQU   X'83'                                                    52200000
MSK136   EQU   X'52'                                                    52220000
MSK146   EQU   X'4A'                                                    52240000
MK1467   EQU   X'4B'                                                    52260000
N01234   EQU   X'07'                                                    52280000
*./      DELETE    SEQ1=52300020,SEQ2=52300020                          52300000
ZERO     EQU   X'00'                    CONSTANT ZERO                   52320000
*./      DELETE    SEQ1=52340020,SEQ2=52340020                          52340000
DIFFNC   EQU   X'54'                    BUFER ONE TO BUFFER 2WO  LENGTH 52360000
ABLANK   EQU   X'40'                    INPUT BLANK                     52380000
*./      DELETE    SEQ1=52400020,SEQ2=52420020                          52420000
MASK0    EQU   X'80'                                                    52440000
MASK1    EQU   X'40'                                                    52460000
MASK2    EQU   X'20'                                                    52480000
MASK3    EQU   X'10'                                                    52500000
MASK4    EQU   X'08'                                                    52520000
MASK5    EQU   X'04'                                                    52540000
MASK6    EQU   X'02'                                                    52560000
MASK7    EQU   X'01'                                                    52580000
MASK01   EQU   X'C0'                                                    52600000
MASK02   EQU   X'A0'                                                    52620000
MASK12   EQU   X'60'                                                    52640000
MASK13   EQU   X'50'                                                    52660000
MASK34   EQU   X'18'                                                    52680000
MASK45   EQU   X'0C'                                                    52700000
MASK67   EQU   X'03'                                                    52720000
MSK012   EQU   X'E0'                                                    52740000
MSK123   EQU   X'70'                                                    52760000
MK0123   EQU   X'F0'                                                    52780000
NMASK0   EQU   X'7F'                                                    52800000
NMASK1   EQU   X'BF'                                                    52820000
NMASK2   EQU   X'DF'                                                    52840000
NMASK3   EQU   X'EF'                                                    52860000
NMASK4   EQU   X'F7'                                                    52880000
NMASK5   EQU   X'FB'                                                    52900000
NMASK6   EQU   X'FD'                                                    52920000
NMASK7   EQU   X'FE'                                                    52940000
NMSK67   EQU   X'FC'                                                    52960000
NMK012   EQU   X'1F'                                                    52980000
NMK123   EQU   X'8F'                                                    53000000
NMKALL   EQU   X'00'                                                    53020000
NM0123   EQU   X'0F'                                                    53040000
TWTYFR   EQU   X'18'                    TWENTY-FOUR                     53060000
FIFTY4   EQU   X'54'                                                    53080000
INPTR    EQU   INPTRS                                                   53100000
OPTR     EQU   OUTPTR                                                   53120000
F2AEND   DC        0D'0'               ALIGN END OF ASMGF2A             53130000
         EJECT                                                          53140000
         COMMON    PHASE=ASMGF2A                                        53160000
*./      DELETE    SEQ1=53180020,SEQ2=62600020                          62600000
         EJECT                                                          62620000
IOBSEEK  EQU   32                      IOB SEEK ADDRESS DISPLACEMENT    62630000
         DCBD  DSORG=PS                                                 62640000
         END       ASMGF2A                                              62660000
./ ADD NAME=ASMGF3
F3       TITLE     'ASMG     MACRO GENERATOR GENERATION PHASE'          00020021
         ISEQ      73,78                                                00040021
*TITLE   'ASMGF3'.. MACRO GENERATION                                  * 00060020
*FUNCTION/OPERATION                                                   * 00080020
*  ASMGF3 EVALUATES CONDITIONAL ASSEMBLY EXPRESSIONS,PERFORMS         * 00100020
*   CONDITIONAL ASSEMBLY STATEMENTS AND GENERATES ASSEMBLER EDITED    * 00120020
*   TEXT USING MACRO DEFINITIONS AND THE ASSOCIATED EDITED            * 00140020
*   INFORMATION IN THE GLOBAL AND RELATED LOCAL DICTIONARIES.         * 00160020
*                                                                     * 00170026
*ENTRY POINT- ASMGF3                                                  * 00180020
*   CALLED VIA                                                        * 00200020
*   XCTL  ,DE=(R9)         I.E. EP=ASMGF3                             * 00220025
*                                                                     * 00230026
*INPUT-                                                               * 00240020
*   SYSUT3                                                            * 00260020
*     INPUT EDITED TEXT FOR ALL SOURCE AND ASSEMBLY STATEMENTS        * 00280020
*   SYSUT1                                                            * 00300020
*     EDITED TEXT FOR ALL MACRO DEFINITIONS FOLLOWED BY THE           * 00320020
*     CORRESPONDING MACRO DICTIONARY SEGMENTS.                        * 00340020
*     ALSO CONTAINS OPEN CODE SUBSETTED DICTIONARY.                   * 00360020
*   PARAMETERS                                                        * 00380020
*        R11=N/P OF OPEN CODE SUBSETTED DICTIONARY ON SYSUT1.         * 00400022
*        R1=GDP    BEGINNING OF GLOBAL DICTIONARY IN CORE.            * 00420022
*        R2=DEND   THE END OF THE DICTIONARY AREA.                    * 00440022
*        R3=SSEG   THE SIZE OF THE DICTIONARY SEGMENTS ON SYSUT1.     * 00460022
*        R4=BOTGOT THE BOTTOM OF CORE UNDER THE ASSEMBLERS CONTROL.   * 00480022
*        R5=INPLEN THE SYSUT3 BLOCKSIZE.                              * 00500022
*        R6=OBSIZ  THE F3->F7->F8 BLOCKSIZE FOR SYSUT2 AND SYSUT3.    * 00510022
*        R7=BUFFENT ADDRESS OF I/O BUFFERING AND CORE MANAGEMENT ROUT.* 00520022
*        R8=ADLIST1 COMMON AREA 'LIST1' IN ASM.                       * 00530022
*                                                                     * 00535026
*OUTPUT                                                               * 00540020
*   SYSUT2..CONTAINS EDITED TEXT FOR ALL INPUT SOURCE STATEMENTS AS   * 00560020
*       WELL AS EDITED TEXT FOR ALL STATEMENTS CREATED DUE TO MACRO   * 00580020
*       GENERATION AND CONDITIONAL ASSEMBLY.  THIS WILL BE INPUT      * 00600020
*       FOR PHASE ASMGF7.                                             * 00620020
*   REGISTER R2 IS SET TO THE BLOCKSIZE OF THE OUTPUT FILE TO BE      * 00640020
*       PASSED TO THE ASSEMBLER PHASES.                               * 00660022
*                                                                     * 00680020
*EXTERNAL ROUTINES                                                    * 00700020
*  ASMGBUFF- USED TO PERFORM MOST I/O FUNCTIONS SUCH AS               * 00720022
*        READ,WRITE,NOTE,POINT,ETC.                                   * 00740020
*                                                                     * 00760020
*EXITS- NORMAL                                                        * 00780020
*        XCTL TO ASMGRTA VIA                                          * 00800022
*                XCTL   ,DE=(R9)     I.E. EP=ASMGRTA                  * 00820025
*                                                                     * 00840022
*       ERRORS                                                        * 00860020
*         THERE ARE FOUR SEVERITIES OF ERRORS WHICH MAY OCCUR DURING  * 00880020
*         MACRO GENERATION                                            * 00900020
*          1.ERRORS THAT ONLY AFFECT THE STATEMENT BEING PROCESSED    * 00920020
*             GENERATED STATEMENT TOO LONG                            * 00940020
*             INVALID ATTRIBUTE REFERENCE                             * 00960020
*             SYSLIST EXPRESSION NOT WITHIN RANGE                     * 00980020
*             INVALID OP CODE                                         * 01000020
*             MULTIPLY-DEFINED KEYWORD PARAMETER IN MACRO INSTRUCTION * 01020020
*             EXPRESSION EXCEEDS LENGTH OF SUBSTRING                  * 01040020
*             UNDEFINED SEQUENCE SYMBOL                               * 01060020
*             CHARACTER STRING USED IN AN ARITHMETIC RELATIONAL       * 01080020
*               EXPRESSION IS NOT AN INTEGER                          * 01100020
*             MACRO INSTRUCTION PARAMETER NOT A SELF DEFINING VALUE   * 01120020
*             OVERFLOW DUE TO ARITHMETIC OPERATION                    * 01140020
*             EXPRESSION TWO OF A SUBSTRING IS GREATER THAN 8         * 01160020
*          2. ERRORS THAT CAUSE THE CURRENT MACRO PROCESSING TO BE    * 01180020
*             ABANDONED.                                              * 01200020
*             ACTR (LOOP COUNTER) EXCEEDED AND PROCESSING OF MACRO IS * 01220020
*              SUSPENDED                                              * 01240020
*          3.IF THE LOOP COUNTER(ACTR)IS EXCEEDED WHILST PROCESSING   * 01260020
*             OPEN CODE,AN END CARD IS INSERTED IN THE OUTPUT STREAM  * 01280020
*             AND ASMGF3 INPUT IS TERMINATED.                         * 01300020
*          4.IF THERE IS NOT ENOUGH CORE FOR THE LOCAL DICTIONARIES   * 01320020
*             OF THE MACROS BEING PROCESSED THE ASSEMBLY IS ABORTED.  * 01340020
*TABLES/WORK AREAS                                                    * 01360020
*       BUFFCB- INPUT BUFFERS CONTROL BLOCK, USED TO DETERMINE WHEN   * 01380022
*                READING IS NOT NECESSARY DUE TO DATA ALREADY BEING IN* 01400022
*                A BUFFER.                                            * 01410022
*       INPLEN  BLOCKSIZE OF INPUT RECORDS                            * 01420020
*       OBSIZ -BLOCKING OF OUTPUT RECORDS                             * 01440020
*       L1,L2 -258 BYTE AREAS SET ASIDE FOR COMPARING CHARACTERS      * 01460020
*              STRINGS.                                               * 01480020
*                                                                     * 01500020
         EJECT                                                          01507022
         COPY      ASMGSET                                              01520020
         EJECT                                                          01536022
ASMGF3   CSECT                                                          01540027
         USING     ASMGF3,R15,R14      WE WILL START WITH THESE         01550027
         STM       R13,R14,ASMSAVE     SAVE REGS TO PASS ON             01560027
         LR        R14,R15             INITIALIZE SECOND BASE REGISTER  01565027
         A         R14,F4096           SET UP SECOND BASE REGISTER      01570027
         LA        R13,F3SAVE          SET UP LAST BASE REGISTER        01590027
         USING     F3SAVE,R13          AND TELL THE ASSEMBLER           01600027
*                                                                       01800020
*    DICTIONARY - CORE ALLOCATION.                                      01820020
*                                                                       01840020
         ST        R11,DICTNP          OPEN CODE NOTE/POINT             01860022
         STM       R1,R8,GDP           SAVE OTHER PARAMETERS            01870022
*                                                                       01880027
*        MOVE ASMGASM PARBYTES TO ASMGF3                                01904027
*                                                                       01908027
         MVC       PARBYT1(4),L1PBYT1(R8)  MOVE PARBYTES TO ASMGF3      01912027
*                                                                       01916027
*        DO A GROW TO RECLAIM MACRO DIRECTORY IF NOT BATCH              01917027
         TM        PARBYT1,X'10'       TEST BATCH OPTION                01920027
         BO        BATCHASM            BRANCH IF BATCH SPECIFIED        01940027
         L         R0,L1LENMC(,R8)     GET LENGTH OF MACRO DIRECTORY    01960020
         ST        R0,GRLEN1                                            01980020
         L         R1,L1BOTMC(,R8)     GET STARTING ADDRESS             02000020
         N         R1,LOW3             D ALIGN                          02020020
         ST        R1,GRADD1                                            02040020
         L         R1,BUFFENT          DO THE GROW                      02060020
         CNOP      2,4                                                  02080020
         BALR      R0,R1                                                02100020
         DC        A(32)                                                02120020
GRLEN1   DS        F                                                    02140020
GRADD1   DS        F                                                    02160020
         SPACE     2                                                    02271022
*        DETERMINE THE OPTIMUM USE OF THE WORKDS SPACE.                 02272022
*        MAY NOT BE OPTIMAL IF &UT1BUFF>2 OR &UT3BUFF>1                 02273022
*                                                                       02274022
*        R0        MIN WASTED CORE                                      02275022
*        R1        BEST BIT STRING YET                                  02276022
*        R2        BIT STRING BEING TESTED                              02277022
*        R3        TOTAL LENGTH ACCUMULATOR (NEG)                       02278022
*                                                                       02279022
*        INITIALIZATION                                                 02280022
BATCHASM L         R0,LWORKDS          MAX WASTED CORE                  02281027
         SR        R1,R1               BIT STRING FOR MAX WASTED CORE   02282022
         LA        R2,B'00011111'      STARTING BIT STRING              02283022
*                                                                       02284022
OPTLOOP  STC       R2,TMBYTE           PUT BIT STRING IN CORE           02285022
         SR        R3,R3               INIT ACC                         02286022
*        TEST GBL DICT BIT                                              02287022
         TM        TMBYTE,B'00010000'                                   02288022
         BZ        OPT2                                                 02289022
         L         R3,GDP              COMPUTE NEG LTH OF GBL DICT      02290022
         S         R3,0(0,R3)                                           02291022
*        TEST SYSUT2 BIT                                                02292022
OPT2     TM        TMBYTE,B'00001000'                                   02293022
         BZ        OPT3                                                 02294022
         S         R3,OBSIZ            DECREMENT ACC                    02295022
*        TEST SYSUT3 BIT                                                02296022
OPT3     TM        TMBYTE,B'0000100'                                    02297022
         BZ        OPT4                                                 02298022
         S         R3,INPLEN           DECREMENT ACC                    02299022
*        TEST SYSUT1 BITS                                               02300022
OPT4     TM        TMBYTE,B'00000010'                                   02301022
         BZ        OPT5                                                 02302022
         S         R3,SSEG             DECREMENT ACC                    02303022
OPT5     TM        TMBYTE,B'00000001'                                   02304022
         BZ        OPT6                                                 02305022
         S         R3,SSEG             DECREMENT ACC                    02306022
*        TEST IF THIS BEST ALLOCATION SO FAR                            02307022
OPT6     A         R3,LWORKDS                                           02308027
         BL        OPT7                BR IF OVER-ALLOCATED             02309022
         CR        R0,R3               TEST IF BEST ALLOCATION          02310022
         BL        OPT7                                                 02311022
         LR        R0,R3               THIS IS BEST                     02312022
         LR        R1,R2               SAVE THIS BIT STRING             02313022
*        TEST FOR LAST COMBINATION                                      02314022
OPT7     BCT       R2,OPTLOOP          BR IF NOT LAST                   02315022
         STC       R1,TMBYTE           SAVE BEST BIT STRING             02316022
         LA        R5,WORKDS           INITIALIZE WORKDS POINTER        02317022
*        TEST IF GBL DICT SHOULD RESIDE IN WORKDS                       02318022
         TM        TMBYTE,B'00010000'                                   02319022
         BZ        GBLMOVE                                              02320022
*        MOVE GLOBAL DICTIONARY                                         02321022
         LR        R4,R5               MOVE IT INTO WORKDS              02322022
*        MOVE GLOBAL DICTIONARY DOWN TO BOTTOM OF MY CORE               02340022
GBLMOVE  L         R2,GDP              WHERE GBL DICT IS NOW            02360022
         ST        R4,GDP              NEW GLOBAL DICT LOCATION         02400022
         L         R0,0(0,R2)          POINTER TO WHERE IT ENDS NOW     02420022
MOVEGD   MVC       0(256,R4),0(R2)     MOVE 256 BYTES                   02440022
         LA        R4,256(0,R4)        UP THE ADDRESSES                 02460022
         LA        R2,256(0,R2)                                         02480020
         CR        R2,R0               HAS ENOUGH BEEN MOVED            02500022
         BL        MOVEGD                                               02520020
         SR        R2,R4               DETERMINE NEW END LOCATION       02540022
         SR        R0,R2                                                02560022
         TM        TMBYTE,B'00010000'  TEST IF IN WORKDS                02564022
         BZ        GIVE                                                 02568022
         LR        R5,R0               SAVE WORKDS POINTER              02572022
         L         R0,BOTGOT           SET MY CORE POINTER              02576022
*        GIVE THE REST OF CORE TO BUFF                                  02580020
GIVE     ST        R0,GRADD2           ADDRESS                          02600022
         ST        R0,WRREG+4          TEMPORARY SAVE                   02610023
         L         R1,DEND             PRESENT END OF MY CORE           02620020
         LA        R1,1(0,R1)          BOTTOM OF BUFF'S CORE            02640020
         SR        R1,R0               LENGTH TO GIVE BUFF              02660020
         ST        R1,GRLEN2                                            02680020
         L         R1,BUFFENT          DO A GROW                        02700020
         CNOP      2,4                                                  02720020
         BALR      R0,R1                                                02740020
         DC        A(32)                                                02760020
GRLEN2   DS        F                                                    02780020
GRADD2   DS        F                                                    02800020
*        REWIND SYSUT1 AND SYSUT3                                       02802021
         L         R1,BUFFENT          REWIND SYSUT1                    02804021
         CNOP      2,4                                                  02806021
         BALR      R0,R1                                                02808021
         DC        A(24,0,1)                                            02810021
         L         R1,BUFFENT          REWIND SYSUT3                    02812021
         CNOP      2,4                                                  02814021
         BALR      R0,R1                                                02816021
         DC        A(24,8,1)                                            02818021
         BALR      R3,0                BALR FOR                         02818121
         USING     *,R3                         TEMP BASE     DS100107  02818221
         ENTRYOUT  F3                                                   02819025
         USING     ASMGF3,R15,R14      RENEW OUR              DS100107  02819221
         USING     F3SAVE,R13                    BASE REGS    DS100107  02819421
         DROP      R3                  BLOW AWAY TEMP BASE    DS100107  02819621
*        CALCULATE AMOUNT OF CORE NEEDED FOR I/O BUFFERS + EXTRA TO    X02820020
               START                   DICTIONARY AREA                  02840020
         L         R2,SSEG             2 * SSEG FOR INIT DICT +         02850022
         LA        R1,56(R2,R2)        51 FOR DICT AREA (D ALGND) +     02860023
         TM        TMBYTE,B'00000001'                                   02870022
         BO        *+6                                                  02871022
         AR        R1,R2               SSEG IF BUFFER NOT IN WORKDS +   02872022
         TM        TMBYTE,B'00000010'                                   02874022
         BO        *+6                                                  02875022
         AR        R1,R2               SSEG IF BUFFER NOT IN WORKDS +   02876022
         AIF       (&UT1BUFF EQ 2).GO1                                  02877022
         MH        R2,=AL2(&UT1BUFF-2)                                  02878022
         AR        R1,R2               REST OF UT1 BUFFERS +            02879022
.GO1     TM        TMBYTE,B'00000100'                                   02880022
         BO        *+8                                                  02881022
         A         R1,INPLEN           UT3 BUFFER IF NOT IN WORKDS +    02882022
         AIF       (&UT3BUFF EQ 1).GO2                                  02883022
         L         R2,INPLEN                                            02884022
         MH        R2,=AL2(&UT1BUFF-1)                                  02885022
         AR        R1,R2               REST OF UT3 BUFFERS +            02886022
.GO2     TM        TMBYTE,B'00001000'                                   02890022
         BO        *+8                                                  02900022
         A         R1,OBSIZ            UT2 BUFFER IF NOT IN WORKDS      02920022
         ST        R1,GETLEN           DO A GETCORE FROM BUFF FOR IT    02940020
         BAL       R9,GETCORE                                           02960020
*                                                                       02980020
*    INITIALIZATION FOR OUTPUT BUFFER                                   03000022
         L         R2,OBSIZ            OUTPUT BUFFER SIZE               03020020
         ST        R2,WRREG            STORE OUTPUT BUFFER SIZE         03040020
         L         R6,WRREG+4          POINT AT SPACE IN GETMAIN AREA   03050023
         TM        TMBYTE,B'00001000'  TEST IN IN WORKDS                03055022
         BZ        *+12                                                 03060022
         LR        R4,R5               SET IN WORKDS                    03065022
         AR        R5,R2               BUMP WORKDS POINTER              03070022
         B         *+8                                                  03075022
         LR        R4,R6               SET IN GETMAIN AREA              03080022
         AR        R6,R2               BUMP GETMAIN AREA POINTER        03085022
         ST        R4,WRREG+4                                           03100020
         ST        R4,WRREG+8                                           03120020
         ST        R4,WRADD                                             03180022
*                                                                       03280020
*    INITIALIZATION FOR INPUT BUFFERS                                   03300020
         TM        TMBYTE,B'00000100'  TEST IF UT3 BUFFER IN WORKDS     03302022
         BZ        *+14                                                 03304022
         LR        R4,R5               SET IN WORKDS                    03306022
         A         R5,INPLEN           BUMP WORKDS POINTER              03308022
         B         *+10                                                 03310022
         LR        R4,R6               SET IN GETMAIN AREA              03312022
         A         R6,INPLEN           BUMP GETMAIN AREA POINTER        03314022
         ST        R4,BUFFCB           UT3 BUFFER POINTER               03316022
         MVC       0(4,R4),EIGHT       INITIALIZE OC INPUT BUFFER       03318022
&WORK    SETA      1                                                    03320022
         AIF       (&UT3BUFF EQ 1).GO3                                  03330022
.OCBUFF  ST        R6,BUFFCB+&WORK*8   UT3 INPUT BUFFER                 03340022
         MVC       0(4,R6),=F'8'       INITIALIZE OC INPUT BUFFER       03350022
         A         R6,INPLEN           OPEN CODE BUFFER LENGTH          03360022
&WORK    SETA      &WORK+1                                              03370022
         AIF       (&WORK LT &UT3BUFF).OCBUFF                           03380022
.GO3     TM        TMBYTE,B'00000010'  TEST IF 1ST UT1 BUFF IN WORKDS   03381022
         BZ        *+14                                                 03382022
         LR        R4,R5               SET IN WORKDS                    03383022
         A         R5,SSEG             BUMP WORKDS POINTER              03384022
         B         *+10                                                 03385022
         LR        R4,R6               SET IN GETMAIN AREA              03386022
         A         R6,SSEG             BUMP GETMAIN AREA POINTER        03387022
         ST        R4,BUFFCB+&WORK*8   UT1 BUFFER POINTER               03388022
&WORK    SETA      &WORK+1                                              03389022
         TM        TMBYTE,B'00000001'  TEST IF 2ND UT1 BUFF IN WORKDS   03390022
         BZ        *+14                                                 03391022
         LR        R4,R5               SET IN WORKDS                    03392022
         A         R5,SSEG             BUMP WORKDS POINTER              03393022
         B         *+10                                                 03394022
         LR        R4,R6               SET IN GETMAIN AREA              03395022
         A         R6,SSEG             BUMP GETMAIN AREA POINTER        03396022
         ST        R4,BUFFCB+&WORK*8   UT1 BUFFER POINTER               03397022
&WORK    SETA      &WORK+1                                              03398022
         AIF       (&UT1BUFF EQ 2).GO4                                  03399022
.MACBUFF ST        R2,BUFFCB+&WORK*8   UT1 INPUT BUFFER                 03400022
         A         R2,SSEG             MACRO BUFFER LENGTH              03420022
&WORK    SETA      &WORK+1                                              03430022
         AIF       (&WORK LT &UTBUFF).MACBUFF                           03440022
.GO4     LR        R2,R6               SET R2 FOR MACIN                 03460022
         LR        R7,R6               INITIALIZE R7                    03480022
*        READ IN OPEN CODE DICTIONARY                                   03500020
         TM        PARBYT1,X'04'       UNDER EXTEN .Q             V7A49 03502028
         BNO       MACIN               NO, JUST GO AND READ       V7A49 03504028
         MVI       MAC4+1,X'00'        EXTEN POS PARMS SWITCH     V7A49 03506028
         L         R8,NDXCNT           FIRST SYSNDX VALUE         V7A49 03508028
         BCTR      R8,0                LESS ONE                   V7A49 03510028
         ST        R8,NDXCNT           SET FOR OPEN CODE VALUE    V7A49 03512028
         LH        R8,POSNOMAX         OLD MAX POS PARMS          V7A58 03514028
         LA        R8,40(,R8)          BUMP BY EXTEN OPTION       V7A58 03516028
         STH       R8,POSNOMAX         SET NEW MAX POS PARMS      V7A58 03518028
         LH        R8,HIPTRMXL         OLD MAX BYTE LENGTH        V7A58 03520028
         LA        R8,40*2(,R8)        BUMP TWICE EXTEN OPTION    V7A58 03522028
         STH       R8,HIPTRMXL         SET NEW MAX BYTE LENGTH    V7A58 03524028
         B         MACIN               GO AND READ IT                   03540020
INIT1    MVI       MAC4+1,X'00'        CLEAR FIRST TIME BRANCH          03560020
         MVI       MAC5+1,X'00'        CLEAR FIRST TIME SWITCH    V7A49 03562028
         MVC       PARADROP(4),PARSAV  SAVE OPEN CODE PAR AREA    V7A49 03564028
         LA        R8,HIPTROP          OPEN PAR POINTERS HERE     V7A49 03566028
         ST        R8,PADOP            INITIALIZE ITS VALUE       V7A49 03568028
         MVI       18(R7),X'80'        MAKE LOOK A LIKE PAR PTRS STORED 03580022
         N         R2,LOW3             DOUBLE ALIGN                     03600022
         ST        R2,TLADR            INITIALIZE TLADR                 03620022
         LA        R2,8(0,R2)          INITIALIZE LDICT1                03640022
         ST        R2,LDICT1                                            03660022
         L         R8,ADLIST1          POINT TO LIST1 IN ASMGASM        03662027
         TM        L1SYNERR+1(R8),X'01'  ARE WE TO QUIT IMMEDIATELY .Q  03664027
         BZ        START7              BRANCH IF NOT                    03666027
         LA        R5,X'53'            LENGTH OF DUMMY COMMENT          03668027
         LA        R11,DUMCMNT         ADDRESS OF DUMMY COMMENT         03670027
         BAL       R8,WRTRL            WRITE OUT DUMMY RECORD           03672027
         OI        ERRBTS,MASK1        SET ERROR BIT                    03674027
         BAL       R6,CHKERR           ENTER THE ERROR                  03676027
         B         ENDGEN              AND QUIT                         03680027
         SPACE     2                                                    03690020
ASMSAVE  DS        2F                  ASMSAVE AREA AND RETURN ADDRESS  03740022
F4096    DC        F'4096'             DIFFERENCE TWIXT R15 AND R14     03745023
         EJECT                                                          03750022
*                                                                       03760020
*   REGISTERS FOR DRIVER ROUTINE                                        03780020
*                                                                       03800020
R0       EQU       0                                                    03820020
R1       EQU       1                                                    03860020
R2       EQU       2                                                    03900020
R3       EQU       3                                                    03940020
R4       EQU       4                                                    03980020
R5       EQU       5                                                    04020020
R6       EQU       6                                                    04060020
R7       EQU       7                                                    04070023
R8       EQU       8                                                    04100020
R9       EQU       9                                                    04105022
R10      EQU       10                                                   04115022
R11      EQU       11                                                   04160020
R12      EQU       12                                                   04180020
R13      EQU       13                                                   04200020
R14      EQU       14                                                   04220020
R15      EQU       15                                                   04240020
*                                                                       04625022
FR0      EQU       0                   FLOATING REG 0                   04630022
*                                                                       04635022
BO       EQU       1                                                    04640020
BH       EQU       2                                                    04660020
BP       EQU       2                                                    04680020
BL       EQU       4                                                    04700020
BM       EQU       4                                                    04720020
BNE      EQU       7                                                    04740020
BNZ      EQU       7                                                    04760020
BE       EQU       8                                                    04780020
BZ       EQU       8                                                    04800020
BNL      EQU       11                                                   04840020
BNH      EQU       13                                                   04860020
TRUE     EQU       1                                                    04880020
BLKHDR   EQU       5                   SIZE OF F3 INPUT BLOCK HEADER    04920020
         EJECT                                                          04940020
START6   CLI       0(R10),EOB          TEST FOR END OF BLOCK            04945022
         BNE       BYREAD                                               04950022
START7   LA        R12,BUFFCB          POINT AT 1ST BUFFER CONT BLOCK   04955022
         BAL       R9,RDNEXT1          READ NEXT BLOCK                  04960022
         LA        R10,BLKHDR(0,R1)    RESET INPUT POINTER              04970022
BYREAD   SR        R5,R5                                                04980020
         STH       R5,ERRBTS           INITIALIZE TO ZERO               05000020
         MVC       PARCNT,ZEROS        INITIALIZE TO ZERO               05020027
         MVI       SUBSW,X'01'                                          05040020
         MVC       SAVRL(2),1(R10)     SAVE R/L                         05060020
         ST        R10,BEGADR          SAVE BEG. ADDR. OF RECORD        05080020
         LA        R11,1(0,R10)                                         05100020
*                                                                       05120020
*    COMPUTED GO TO ON STATEMENT TYPE                                   05140020
*                                                                       05160020
         IC        R5,0(0,R10)         FETCH STATEMENT TYPE             05180020
         STC       R5,STATYP           STORE STATEMENT FLAG             05200020
         LA        R10,FLGLEN(0,R10)   GET BY FLAG                      05220020
         AR        R5,R5                                                05240020
         LH        R9,STTYPE(R5)                                        05260020
         B         ASMGF3(R9)          GO TO THE ROUTINE                05280020
*                                                                       05300020
STTYPE   DC        AL2(MACHOP-ASMGF3)  X'00'  MACHINE INSTRUCTION       05320020
         DC        AL2(CSECT-ASMGF3)   X'01'  CSECT, DSECT, ETC         05340020
         DC        AL2(AGOST-ASMGF3)   X'02'  AGO STATEMENT             05360020
         DC        AL2(AIFST-ASMGF3)   X'03'  AIF STATEMENT             05380020
         DC        AL2(SETST-ASMGF3)   X'04'  SET STATEMENT             05400020
         DC        AL2(MINSTR-ASMGF3)  X'05'  MACRO INSTRUCTION         05420020
         DC        AL2(DUMP-ASMGF3)    X'06'  SPACER                    05440020
         DC        AL2(MENDST-ASMGF3)  X'07'  MEND OR MEXIT             05460020
         DC        AL2(SOURCE-ASMGF3)  X'08'  SOURCE STATEMENT          05480020
         DC        AL2(ANOP-ASMGF3)    X'09'  BYPASS STATEMENT          05500020
         DC        AL2(ENDST-ASMGF3)   X'0A'  END OF ASSEM. STATEMENT   05520020
         DC        AL2(PARAM-ASMGF3)   X'0B'  PARAMETER RECORD          05540020
         DC        AL2(ENDMI-ASMGF3)   X'0C'  END OF M-I RECORD         05560020
         DC        AL2(ERRORST-ASMGF3) X'0D'  ERROR STATEMENT           05580025
*                                                                       05600022
ENDST    BAL       R8,WREND            DUMP OUTPUT BUFFERS              05620022
*                                                                       05640020
*      LOAD REGISTER R2 WITH TEXT BLOCKSIZE TO BE PASSED TO THE         05660020
*         ASSEMBLER PHASE 'ASMGRTA'                                     05680020
*                                                                       05700020
         L         R2,OBSIZ                                             05720020
         L         R3,ADLIST1          PASS ADDRESS OF LIST1 TO RTA     05730022
*                                                                       05740020
*        REWIND UTILITY FILES                                           05760020
*                                                                       05780020
         L         R1,BUFFENT          REWIND SYSUT1                    05800020
         CNOP      2,4                                                  05820020
         BALR      R0,R1                                                05840020
         DC        A(24,0,1)                                            05860020
         L         R1,BUFFENT          REWIND SYSUT2                    05880020
         CNOP      2,4                                                  05900020
         BALR      R0,R1                                                05920020
         DC        A(24,4,1)                                            05940020
         L         R1,BUFFENT          REWIND SYSUT3                    05960020
         CNOP      2,4                                                  05980020
         BALR      R0,R1                                                06000020
         DC        A(24,8,1)                                            06020020
*                                                                       06040020
*        RELEASE CORE OBTAINED FOR G.D., BUFFERS, LCL DICTS TO BUFF     06060022
*                                                                       06080020
         L         R4,BOTGOT                                            06090022
         ST        R4,GRADD            SET GROW ADDRESS                 06100022
         L         R0,DEND                                              06120020
         SR        R0,R4               AMOUNT OF CORE TO BE FREED       06140022
         ST        R0,GRLEN            SET GROW LENGTH                  06160020
         L         R1,BUFFENT          DO THE GROW                      06180020
         CNOP      2,4                                                  06200020
         BALR      R0,R1                                                06220020
         DC        A(32)                                                06240020
GRLEN    DS        F                                                    06260020
GRADD    DS        F                                                    06280020
*                                                                       06560020
*                                                                       06580020
*        XCTL TO 'ASMGRTA'                                              06600022
*                                                                       06620020
         LM        R13,R14,ASMSAVE     SAVE AREA AND RETURN TO ASM      06640022
         LA        R9,L1BLDL+6*L1LENBL(R3) ADDRESS OF RTA IN BLDL TABLE 06650027
         XCTL      ,DE=(R9)            AND TRANSFER                     06660025
         EJECT                                                          06680020
EOB1     LA        R10,1(0,R10)        GET BY END OF STATEMENT FLAG     06740020
         B         START6                                               06760020
*                                                                       06780020
*  PROCESS END OF M-I RECORD.  USED ONLY ON PRELIM. PASS                06800020
*      TO OUTPUT SOURCE                                                 06820020
*                                                                       06840020
ENDMI    S         R10,TEN                                              06860020
         MVC       NUMKW,3(R10)        STORE NO. OF KW  ...  M-I        06880027
         LA        R10,7(,R10)         BUMP INPUT POINTER         V7A53 06900028
         MVC       MINOTE2(4),BUFFCB+4 SAVE NOTE & UT NUMBER            06920022
         LR        R12,R10                                              07000020
         S         R12,BUFFCB          M-I DELTA                        07020022
         STH       R12,MINOTE2+4       STORE M-I DELTA                  07040022
         L         R0,MINOTE1          READ FIRST OF M-I AGAIN          07060022
         LA        R12,BUFFCB                                           07080022
         BAL       R9,RDTEXT1                                           07100022
         AH        R1,MINOTE1+4        ADD M-I DELTA                    07200022
         LA        R10,9(0,R1)         POINT TO BYTE BEFORE 'A' PTR     07220022
         OI        MISWIT,X'20'        MACRO INSTRUCT. SW               07240020
         B         BEGMAC                                               07260020
*                                                                       07280020
*    PROCESS CSECT, DSECT, START, COMMON                                07300020
*                                                                       07320020
CSECT    LA        R5,8                                                 07340020
         BAL       R8,WRTRL                                             07360020
         MVC       SECTNM(9),1(R10)    STORE LENGTH AND NAME            07380020
         SR        R11,R11             FIND THE OPCODE FIELD            07384023
         IC        R11,1(,R10)         BY JUMPING OVER THE NAME         07388023
         LA        R11,4(R11,R10)                                       07392023
         MVC       SECTYP(6),0(R11)    PLACE LEN AND OPCODE AS SECTYP   07396023
         TM        PARBYT1,X'04'       UNDER EXTEN .Q             V7A49 07396228
         BNO       CSECT01             BRANCH IF NOT              V7A49 07396428
         L         R8,PARADROP         OPEN CODE POS PARM AREA    V7A49 07396628
         MVC       13(9,R8),SECTNM     ENTER SECTION NAME/LENGTH  V7A49 07396828
         MVC       45(6,R8),SECTYP     ENTER SECTION TYPE         V7A49 07397028
         CLC       46(5,R8),=X'1C1D0A1B1D'  IS IT 'START' .Q      V7A49 07397228
         BNE       CSECT01             BRANCH IF NOT              V7A49 07397428
         MVC       46(5,R8),=X'0C1C0E0C1D'  CHANGE TO 'CSECT'     V7A49 07397628
CSECT01  DS        0H                                             V7A49 07397828
         CLI       0(R10),VPUT         IS IT PUT FLAG                   07400020
         BE        SECT2                                                07420020
         BAL       R11,GOVAL           EVALUATE NAME FIELD              07440020
         MVC       SECTNM(9),L1+1      STORE LENGTH + NAME              07460020
         MVC       SECTYP(6),2(R10)    PLACE LEN AND OPCODE AS SECTYP   07470023
         TM        PARBYT1,X'04'       UNDER EXTEN .Q             V7A49 07471028
         BNO       CSECT02             BRANCH IF NOT              V7A49 07472028
         L         R8,PARADROP         OPEN CODE POS PARM AREA    V7A49 07473028
         MVC       13(9,R8),SECTNM     ENTER SECTION NAME/LENGTH  V7A49 07474028
         MVC       45(6,R8),SECTYP     ENTER SECTION TYPE         V7A49 07475028
         CLC       46(5,R8),=X'1C1D0A1B1D'  IS IT 'START' .Q      V7A49 07476028
         BNE       CSECT02             BRANCH IF NOT              V7A49 07477028
         MVC       46(5,R8),=X'0C1C0E0C1D'  CHANGE TO 'CSECT'     V7A49 07478028
CSECT02  DS        0H                                             V7A49 07479028
         B         MACH1                                                07480020
*                                                                       07500020
*    PROCESS MACHINE INSTRUCTION                                        07520020
*                                                                       07540020
MACHOP   LA        R5,8                                                 07560020
         BAL       R8,WRTRL                                             07580020
MACH     SR        R5,R5               ZERO OUT LENGTH REG.             07600020
         CLI       0(R10),VPUT         IS IT PUT FLAG                   07620020
         BE        SECT2                                                07640020
         CLI       0(R10),VEND         IS IT END OF STATEMENT           07660020
         BE        EOB1                                                 07680020
         BAL       R11,GOVAL           EVALUATE                         07700020
MACH1    SR        R5,R5               CLEAR REGISTER                   07720023
         IC        R5,L1+1             FETCH LENGTH OF STRING           07730023
         LA        R11,L1+1                                             07740020
         LA        R5,1(0,R5)          INCLUDE LENGTH IN STRING         07760020
         BAL       R8,WRATXT                                            07780020
         LA        R10,1(0,R10)                                         07800020
         B         SECT3                                                07820020
SECT2    LA        R11,1(0,R10)        SET UP                           07840020
         SR        R5,R5               CLEAR REGISTER                   07850023
         IC        R5,1(0,R10)         WRITE PARAMETERS                 07860020
         LA        R5,1(0,R5)          INCR. PARAMETER TO INCLUDE R/L   07880020
         BAL       R8,WRATXT                                            07900020
         LA        R10,2(R10,R5)       ADVANCE INPUT PTR.               07920020
SECT3    TM        ERRBTS,MASK0        WAS STATEMENT TOO LONG           07940020
         BZ        MACH                BRANCH IF O.K.                   07960020
         STM       R2,R3,SAV2          SAVE REGS.                       07980020
         BAL       R6,ERR1A            PUTOUT ERROR MESSAGE             08000020
         B         PARAM               BYPASS STATEMENT                 08020020
*                                                                       08040020
*    PROCESS COMPRESSED SOURCE AND ERROR STATEMENTS                     08060020
*                                                                       08080020
ERRORST  L         R8,4(,R7)           DIVIDE ACTR BY 2 FOR             08085025
         SRA       R8,1                EACH ERROR RECORD                08090025
         ST        R8,4(,R7)           SAVE IT BACK AGAIN               08095025
SOURCE   BAL       R9,OUTP             WRITE SOURCE RECORD              08100020
PARAM    L         R10,BEGADR                                           08120020
         AH        R10,SAVRL                                            08140020
         B         START6                                               08160020
*                                                                       08180020
*    PROCESS -AIF- AND -AGO- STATEMENTS                                 08200020
*                                                                       08220020
AIFST    BAL       R11,GOVAL           EVALUATE AIF EXPRESSION          08240020
         CLI       GTLIST+3,TRUE       IS EXPRESSION TRUE               08260020
         BNE       PROTO4                                               08280020
         B         AGOST1                                               08283024
*                                                                       08286024
AGOST    STM       R1,R6,SVREG         SAVE REGISTERS IN CASE OF        08293024
*                                       UNDEFINED SEQUENCE SYMBOL       08296024
*    SETUP TO READ TEXT AT SEQUENCE SYMBOL                              08300020
AGOST1   L         R9,8(0,R7)          FETCH LOOP COUNT                 08320024
         C         R9,4(0,R7)          DOES IT EXCEED ACTR              08340020
         BC        BE+BH,LOOPER                                         08360020
         LA        R9,1(0,R9)          INCREMENT LOOP COUNT             08380020
         ST        R9,8(0,R7)                                           08400020
         BAL       R8,BASONE                                            08420020
         CLC       0(5,R12),ZERO       IS SEQ. SYMBOL UNDEFINED         08440022
         BE        NOSEQ                                                08460020
         LA        R10,5(0,R10)        GET TO NEXT STATEMENT FLAG       08480020
         MVC       SAVNOTE(3),0(R12)   GET NOTE OF TARGET BLOCK         08520022
         MVC       FWRD+2(2),3(R12)    GET BLOCK DELTA                  08540022
         L         R0,SAVNOTE          READ TARGET BLOCK                08560022
         IC        R0,BUFFCB+7         FILE TO READ FROM                08580022
         LA        R12,BUFFCB                                           08600022
         BAL       R9,RDTEXT1                                           08620022
         LR        R10,R1              SET NEW INPUT POINTER            08640022
         AH        R10,FWRD+2                                           08680020
         B         BYREAD                                               08700020
*                                                                       08720020
*    PROCESS SET STATEMENT                                              08740020
*                                                                       08760020
SETST    MVC       PARCNT(1),0(R10)    SAVE TYPE OF SET STATEMENT       08780020
         CLI       4(R10),SPAREN       IS IT SUBSCRIPTED                08800022
         BE        SETST1                                               08820020
         BAL       R9,METINT           GET RESULT ADDRESS               08840020
         B         SETST2                                               08860020
SETST1   BAL       R11,GOVAL           EVALUATE SUBSCRIPTED NAME        08880020
SETST2   MVC       SAVBIT(1),BITNO     STORE BIT NO.                    08900020
         MVC       SETADR(4),SAVADR    SAVE SET VARIABLE ADDR.          08920020
         MVC       SETLEN(1),SAVLEN    SAVE MAX LENGTH OF SETC          08930025
         LA        R10,1(0,R10)                                         08940020
         BAL       R11,GOVAL           EVALUATE OPERAND                 08960020
         L         R12,SETADR          FETCH SET VARIABLE ADDR.         08980020
         CLI       PARCNT,VSETB        TYPE OF STATEMENT                09000027
         BE        SETSTB                                               09020020
         BH        SETSTC                                               09040020
SETSTA   MVC       0(4,R12),GTLIST     STORE SETA VALUE                 09060020
         LA        R5,4(,R7)           ACTR VALUE GOES HERE       V7A55 09062028
         CR        R5,R12              DID WE JUST SET ACTR .Q    V7A55 09064028
         BNE       PARAM               BRANCH IF NOT              V7A55 09066028
         XC        8(4,R7),8(R7)       ZERO LOOP COUNT            V7A55 09068028
         B         PARAM                                                09080020
SETSTC   SR        R5,R5               GET MAX LENGTH OF SETC           09090025
         IC        R5,SETLEN                                            09100025
         CLC       SETLEN(1),L1+1      COMPARE AGAINST LENGTH OF R.H.S. 09110025
         BNH       *+8                 AND PICK MIN VALUE               09120025
         IC        R5,L1+1             GET LENGTH OF RIGHT HAND SIDE    09130025
         STC       R5,1(,R12)          SET CURRENT LENGTH OF SETC       09140025
         S         R5,ONE              DECREMENT FOR MVC                09150025
         BM        PARAM               EXIT IF NULL STRING              09160025
         EX        R5,SETMVC           MOVE R.H.S. TO SETC STORAGE      09170025
         B         PARAM               EXIT                             09180025
SETMVC   MVC       2(*-*,R12),L1+2     EX'ED MVC                        09190025
SETSTB   SR        R5,R5               CLEAR REGISTER                   09200023
         IC        R5,SAVBIT           FETCH BIT NUMBER                 09210023
         BAL       R9,FNDBIT                                            09220020
         CH        R8,GTLIST+2         DOES RESULT FLD NEED CHANGE      09240020
         BE        PARAM                                                09260020
         IC        R9,0(0,R12)         FETCH SETB BYTE                  09280020
         XR        R9,R5               ALTER BIT                        09300020
         STC       R9,0(0,R12)                                          09320020
         B         PARAM                                                09340020
ANOP     EQU       PARAM                                                09360020
*                                                                       09380020
*   PROCESS MEND OR MEXIT                                               09400020
*                                                                       09420020
MENDST   MVC       MINOTE2(6),12(R7)   RETURN POINT AT NEXT UP LEVEL    09440022
MENDST01 LR        R2,R7               SAVE LOCAL DICTIONARY POINTER    09460023
MEND     L         R0,MINOTE2          NOTE/PT PARAMETER                09480022
         LA        R12,BUFFCB          READ THE BLOCK                   09500022
         BAL       R9,RDTEXT1                                           09520022
         LR        R10,R1              SET INPUT POINTER                09540022
         AH        R10,MINOTE2+4       INCREMENT BY M-I DELTA           09820022
         S         R2,EIGHT                                             09840020
         MVC       PAD(8),0(R2)        SETUP -PAD-, -PARADR-            09860020
         TM        MISWIT,X'02'        ABORT SW.                        09880020
         BO        MEND4                                                09900020
         L         R7,0(0,R7)                                           09920020
MEND4    ST        R2,TLADR                                             09940020
         B         START6                                               09960020
*                                                                       10040020
*  PROCESS MACRO INSTRUCTION ***** (M-I)                                10060020
*                                                                       10080020
*                                                                       10100020
*     PERFORM PRELIMINARY PASS ON M-I TO OUTPUT SOURCE                  10120020
*                                                                       10140020
MINSTR   MVC       MINOTE1(4),BUFFCB+4 SAVE NOTE AND UT NUMBER          10160022
         L         R9,BEGADR                                            10240020
         S         R9,BUFFCB           COMPUTE M-I DELTA                10260022
         STH       R9,MINOTE1+4        STORE M-I DELTA                  10280022
         B         PARAM                                                10300020
* SET UP FOR BUILDING PARAMETER TABLE                                   10320020
*                                                                       10340020
BEGMAC   L         R2,TLADR            AVAIL. DICT. LOCATION            10360020
         OI        BITNO,GLOBAL        FORCE GLOBAL FETCH               10400020
         BAL       R8,BASONE                                            10420020
         CLI       18(R7),X'80'        HAVE PAR. PTRS. BEEN STORED      10540022
         BE        NESTA                                                10560020
         LR        R5,R3               SAVE PARAM TABLE POINTER         10570027
         LA        R9,HIPTR-1                                           10580020
         SR        R5,R9               LESS THE START                   10600027
         A         R5,TWO              ADD TWO BYTES FOR POS PAR COUNT  10610027
NEST0    DS        0H                                                   10620027
         LA        R9,14(R2,R5)        WILL PARAM PTRS FIT IN DICT .Q   10630027
         C         R9,DEND                                              10640020
         BL        NEST1                                                10660020
         BAL       R9,GETCORE          GET MORE MEMORY                  10680020
         B         NEST0                                                10700020
NEST1    A         R2,THREE                                             10720020
         N         R2,LOW2             NEAREST FULL WORD ALIGN.         10740020
         ST        R2,PAD              STORE CORRECT PARLST             10745023
         LA        R9,HIPTR            GET ADDR OF PARM PTR TBL         10750023
NEST2    LR        R8,R5               XRF LENGTH OF PARM PTR TABLE     10755027
         CH        R5,H255             IS PTR TABLE MORE THAN 255 .Q    10760027
         BNH       NEST2A              NO, STORE PARM PTR TABLE         10765023
         LA        R8,255              SET TO MOVE 256 BYTES            10770023
NEST2A   EX        R8,MOVPAR           MOVE PARM. PTR TABLE             10775023
         CR        R5,R8               IS PARM POINTER MOVE DONE .Q     10780027
         BNH       NEST3               YES, CONTINUE                    10785023
         SH        R5,H256             ADJUST LENGTH TO BE MOVED        10790027
         LA        R2,1(R2,R8)         ADJUST                           10792023
         LA        R9,1(R9,R8)         MOVE POINTERS                    10794023
         B         NEST2               GO FINISH MOVING TABLE           10796023
NEST3    DS        0H                                                   10800027
         LA        R2,1+7(R2,R5)       7 FOR ALIGNMENT                  10820027
         N         R2,LOW3             NEAREST DOUBLE WORD ALIGNMENT    10840020
         MVC       0(8,R2),PAD         STORE LOCAL -PAD- , -PARADR-     10860020
         MVI       18(R7),X'80'        PAR. PTRS HAVE BEEN STORED       10880022
NESTA    LA        R2,8(0,R2)                                           10900020
         ST        R2,MHDR             STORE HDR. ADDR.                 10910022
         CLC       0(3,R12),ZEROS      NOTE/PT ZERO .Q                  10920022
         BE        MACERR                                               10930022
*        PUSH BUFFER STACK DOWN                                         10940022
&WORK    SETA      &UTBUFF                                              10960022
.LOOP    LD        FR0,BUFFCB+&WORK*8-8                                 10980022
         STD       FR0,BUFFCB+&WORK*8                                   11000022
&WORK    SETA      &WORK-1                                              11020022
         AIF       (&WORK GE 1).LOOP                                    11040022
         LA        R4,4(0,R10)         SET MI POINTER                   11060020
*                                                                       11080020
*   READ IN MACRO DICTIONARY                                            11100020
*                                                                       11120020
         MVC       DICTNP(3),0(R12)    GET N/P                          11140022
*                                                                       11180020
*        ROUTINE TO READ MACRO OR OPEN CODE DICTIONARY                  11200020
*        ENTER WITH DICTNP CONTAINING NOTE/POINT OF 1ST SEGMENT         11220022
*                                                                       11260020
*        CHECK ENOUGH CORE FOR 1ST READ                                 11280020
MACIN    L         R11,SSEG            MAX SIZE OF INPUT RECORD         11300022
MAC0     LA        R9,0(R2,R11)        AMT. CORE THAT SHOULD BE THERE   11320020
         C         R9,DEND                                              11340020
         BL        MAC1                BR IF OK                         11360020
         LA        R9,MAC0             RETURN ADDRESS FROM GETCORE      11380020
*        ROUTINE TO GET CORE FROM BUFF                                  11400020
GETCORE  STM       R0,R1,GETCSAV       SAVE R0 AND R1                   11420020
         L         R1,BUFFENT          DO A SHRINK                      11440020
         CNOP      2,4                                                  11460020
         BALR      R0,R1                                                11480020
         DC        A(36)                                                11500020
GETLEN   DS        F                   USUALLY = SEG                    11520020
GETANS   DS        F                   RETURNED ANSWER FROM BUFF        11540020
         L         R1,GETLEN           COMPUTE NEW END OF MY CORE       11560020
         AL        R1,GETANS           OVERFLOW IF -1 IS IN GETANS      11580020
         ST        R1,DEND             SET TOP OF CORE POINTER          11600020
         MVC       GETLEN(4),SSEG      RESET GETLEN                     11620022
         LM        R0,R1,GETCSAV       RESTORE REGISTERS                11640020
         BCR       14,R9               BNOR   TEST IF ENOUGH CORE       11660020
         L         R1,ADLIST1          GO TO ABEND ROUTINE IN ASM       11680022
         BAL       R0,L1ABEND(,R1)     POINTING TO A MESSAGE            11700022
         DC        C'989I',AL1(L'MES989-1)                              11720022
MES989   DC        C'INSUFFICIENT MEMORY FOR PHASE F3 DICTIONARIES'     11740027
GETCSAV  DS        2F                                                   11900020
*                                                                       11920020
*        READ 1ST SEGMENT                                               11940020
MAC1     LA        R9,DICT1            RETURN ADDRESS                   11945022
         ST        R2,DICTADD          READ ADDRESS                     11947022
*                                                                       11950022
         L         R1,BUFFENT          POINT                            11955022
         CNOP      2,4                                                  11960022
         BALR      R0,R1                                                11965022
         DC        A(12,0)                                              11970022
DICTNP   DC        F'1'                                                 11975022
DICTREAD L         R1,BUFFENT          READ                             11980022
         CNOP      2,4                                                  11985022
         BALR      R0,R1                                                11990022
         DC        A(0,0)                                               11995022
DICTADD  DC        F'0'                                                 11997022
         L         R1,BUFFENT          CHECK                            12000022
         CNOP      2,4                                                  12005022
         BALR      R0,R1                                                12010022
         DC        A(28,0,0)                                            12015022
         BR        R9                  RETURN                           12020022
*                                                                       12040022
DICT1    SR        R5,R5                                                12060022
         IC        R5,17(0,R2)         NO. OF SEGMENTS                  12080020
*        TEST IF ENOUGH CORE FOR REMAINING SEGMENTS                     12100020
         MVC       FWRD+2(2),18(R2)    FETCH SIZE OF DICTIONARY         12120020
         LR        R11,R2              POINTS TO WHERE EACH SEG IS READ 12140020
         L         R3,ADLIST1          POINT AT LIST1 IN ASM            12150026
         SR        R9,R9               ZERO ACCUMULATOR REGISTER        12160026
         IC        R9,L1ASPARM(,R3)    GET LENGTH OF SYSPARM            12170026
         A         R9,FWRD             PLUS SIZE NEEDED                 12180026
         LA        R9,22+54(R2,R9)     TOP OF CORE NEEDED FOR           12185026
*                                      CURRENT ENTRY AND NEXT IS LAST   12190024
         S         R9,DEND             ADDITIONAL NEEDED                12200020
         BL        MAC3                BR IF NONE                       12220020
*        GET ADDITIONAL CORE                                            12240020
         LA        R9,7(0,R9)          D ALIGN UP                       12260020
         N         R9,LOW3                                              12280020
         ST        R9,GETLEN           PLACE AMT.                       12300020
         BAL       R9,GETCORE                                           12320020
         B         MAC3                                                 12340020
*        READ IN REMAINING SEGMENTS OF DICTIONARY                       12360020
MAC2     A         R11,SSEG            COMPUTE ADDRESS FOR NEXT SEGMENT 12380022
         ST        R11,DICTADD         SET AS READ ADDRESS              12400022
         BAL       R9,DICTREAD         READ ANOTHER DICT SEGMENT        12440022
MAC3     BCT       R5,MAC2             LOOP FOR EACH SEGMENT            12460020
         MVC       SAVNOTE(3),12(R2)   SET NOTE OF FIRST PROTO BLOCK    12480022
         ST        R7,0(0,R2)                                           12520020
         A         R2,FWRD             COMPUTE 1ST PARAMETER ADDR       12540023
MAC4     BC        *-*+15,INIT1(*-*)   BRANCH IF OPEN CODE DICT         12560020
         ST        R2,PARSAV           STORE BEGIN OF PAR. TABLE ADDR.  12580020
*                                                                       12600020
* INITIALIZE PARAMETER TABLE WITH SYSNDX,SYSECT,SYSDATE,SYSTIME,        12620025
*                SYSSTYP AND SYSPARM                                    12630025
*  STORE MACRO INSTRUCTION                                              12640020
*                                                                       12660020
         L         R8,NDXCNT                                            12680020
         LA        R8,1(0,R8)          INCREMENT SYSNDX                 12700020
         ST        R8,NDXCNT                                            12720020
         BAL       R9,ABCD             CONVERT TO DECIMAL               12740020
         MVC       0(3,R2),FOUR+1                                       12760020
         MVC       3(4,R2),UNPAKD+11   ENTER CHARACTERS IN PAR. TABLE   12780020
         MVC       7(4,R2),NDXCNT      ENTER BINARY IN PAR. TABLE       12800020
         MVC       11(2,R2),FLAGSVS    &SYSECT FLAG BYTES               12810023
         MVC       13(9,R2),SECTNM     STORE SECTION NAME IN PAR. TAB.  12820020
         MVC       22(2,R2),FLAGSVS    FLAGS FOR &SYSDATE               12840025
         L         R3,ADLIST1          POINT AT TABLE IN ASM            12842023
         MVC       24(8,R2),L1ASDATE(R3)  MOVE IN THE DATE              12844025
         MVC       32(3,R2),FLAGSVS    FLAGS & LENGTH FOR &SYSTIME      12858025
         MVC       35(8,R2),L1ASTIME(R3)  MOVE IN THE TIME              12860025
         MVC       43(2,R2),FLAGSVS    &SYSSTYP FLAG BYTES              12862023
         MVC       45(6,R2),SECTYP     SECTION TYPE                     12864023
         CLC       46(5,R2),=X'1C1D0A1B1D'  TEST FOR 'START'            12866023
         BNE       MACPSET                                              12868023
         MVC       46(5,R2),=X'0C1C0E0C1D'  CHANGE TO 'CSECT'           12870023
MACPSET  MVC       51(2,R2),FLAGSVS    SYSPARM FLAG BYTES               12875025
         SR        R8,R8               ZERO A WORK REGISTER             12876026
         IC        R8,L1ASPARM(,R3)    GET LENGTH OF SYSPARM            12880025
         STC       R8,53(,R2)          PASS LENGTH ALONG                12885025
         L         R3,L1ASPARM(,R3)    GET ADDRESS OF SYSPARM           12890025
         LTR       R9,R8               IS SYSPARM NULL .Q               12895025
         BZ        SYSPARND            YES, BRANCH AROUND               12900025
         BCTR      R9,0                DECREASE LENGTH FOR A MOVE       12905025
         EX        R9,SYSPMOVE         MOVE IN SYSPARM                  12910025
         EX        R9,SYSPTRAN         TRANSLATE TO INTERNAL CODE       12915025
SYSPARND LA        R8,54(,R8)          GET TOTAL DISP INTO PARAM TABLE  12920025
         STH       R8,PARLST+10        UPDATE LAST POINTER ENTRY        12925025
         LA        R2,0(R8,R2)         ADVANCE PARAM TABLE POINTER      12930025
         LA        R3,PARLST+10        POINT TO LAST POINTER ENTRY      12935025
MAC5     BC        *-*+15,INIT1        BRANCH IF EXTEN AND OPEN   V7A49 12937028
         B         PROTO               CONTINUE                         12940025
SYSPTRAN TR        54(*-*,R2),TRSLTB   TRANSLATE TO INTERNAL CODE       12945025
SYSPMOVE MVC       54(*-*,R2),0(R3)    PUT SYSPARM IN PARAM TABLE       12950025
*                                                                       12955025
*    HAVE ALL MACRO INSTRUCTION KEYWORDS BEEN REFERRED TO BY PROTOTYPE  12960020
*                                                                       12980020
CHKEND   L         R7,MHDR                                              13000020
         MVC       12(7,R7),MINOTE2    STORE N/P OF M-I AND INIT SW     13020022
         CLC       NUMKW,MACCNT        WERE THERE SURPLUS KEYWORDS .Q   13060027
         BNE       MIERR                                                13080020
         STM       R5,R7,STOREGS       SAVE AWAY REGISTERS              13090026
         MVC       R1SAVE+2(2),3(R10)  ALIGN NUMBER OF KEYWORDS         13095027
         LH        R6,R1SAVE+2         NUMBER OF KEYWORDS IN PROTOTYPE  13100027
         LH        R7,POSCTR           NUMBER OF POS PAR IN MACRO CALL  13105027
*                                                                       13110027
         AR        R6,R7               COMBINED TOGETHER                13115026
         AR        R6,R6               DOUBLE IT                        13120026
         LA        R5,PARLST+12(R6)    POINT TO PARM TABLE              13125026
         STC       R7,0(0,R5)          ENTER NUM OF POSITIONALS IN CALL 13130026
         MVC       1(1,R5),POSCNT+1    ENTER NUM OF POSNLS IN PROTOTYPE 13135027
         LM        R5,R7,STOREGS       RESTORE REGISTERS                13140026
*                                                                       13180020
PROTO3   LH        R0,PARCNT                                            13200020
         L         R8,PARSAV           FETCH PAR. TABLE ADDR.           13220020
         STC       R0,0(0,R8)          SYSLIST PAR. COUNT               13240020
         ST        R8,PARADR           STORE NEW PAR. TABLE ADDR.       13260020
         LA        R9,HIPTR                                             13280020
         ST        R9,PAD              REINITIALIZE PAD                 13300020
         LR        R8,R3                                                13320020
         SR        R8,R9                                                13340020
         A         R8,TWO              ADD 2 BYTES FOR POS PAR COUNTS   13350023
         STH       R8,HIPTR            LENGTH OF PARAM. PTR. TABLE      13360020
*        FREE THE SECOND BUFFER                                         13380022
         LD        FR0,BUFFCB+8                                         13400022
         MVC       BUFFCB+8(&UTBUFF*8-16),BUFFCB+16                     13420022
         STD       FR0,BUFFCB+&UTBUFF*8-8                               13440022
         LA        R10,3(,R10)         BUMP FOR END STATEMENT     V7A53 13450028
PROTO4   LA        R10,4(0,R10)                                         13460020
         ST        R2,TLADR                                             13480020
         B         START6                                               13500020
*                                                                       13520020
*   PROCESS PROTOTYPE STATEMENT                                         13540020
*   'NOTE' PROTOTYPE SEGMENT FOR NEXT PROTOTYPE READ                    13560020
*                                                                       13580020
PROTO    L         R0,SAVNOTE          READ PROTOTYPE                   13600022
         LA        R12,BUFFCB                                           13610022
         LA        R1,BUFFCB+16                                         13620022
         BAL       R9,RDNEW                                             13630022
         LA        R10,BLKHDR(0,R1)    HEADER                           13640022
         CLI       0(R10),X'06'        IS IT PROTOTYPE RECORD           13660020
         BNE       PUTERR              NO, IT'S AN ERROR RECORD         13680020
*./      DELETE    SEQ1=13690027,SEQ2=13690027                    V7A53 13690028
         MVC       FWRD+2(2),1(R10)    RECORD LENGTH                    13700027
         AH        R10,FWRD+2          ADVANCE PROTOTYPE POINTER        13720027
         MVI       KEYSWIT,X'00'       CLEAR KEYWORD SWITCHES     V7A53 13722028
KWPRT01  DS        0H                                             V7A53 13723028
         CLI       0(R10),ENDREC       END OF PROTOTYPE           V7A53 13723528
         BE        KWPRT03             BRANCH IF YES              V7A53 13724028
         CLI       0(R10),ERRFLG       ERROR RECORD .Q            V7A53 13724528
         BH        KWPRT02             HIGHER, END OF RECORD      V7A53 13725028
         MVC       FWRD+2(2),1(R10)    ALIGN RECORD LENGTH        V7A53 13725528
         AH        R10,FWRD+2          ADVANCE PROTOTYPE PTR      V7A53 13726028
         B         KWPRT01             CONTINUE SEARCH            V7A53 13726528
KWPRT02  DS        0H                                             V7A53 13727028
         LA        R12,BUFFCB          READ NEXT PROTO SEGMENT    V7A53 13727528
         BAL       R9,RDNEXT2          READ NEXT PROTO SEGMENT    V7A53 13728028
         LA        R10,BLKHDR(,R1)     POINT TO NEXT RECORD       V7A53 13728528
         B         KWPRT01             AND CONTINUE SEARCH        V7A53 13729028
KWPRT03  DS        0H                                             V7A53 13729528
         MVC       POSCNT,5(R10)       ALIGN POS PARM COUNT       V7A53 13730028
         L         R0,SAVNOTE          READ PROTOTYPE TARGET BLK  V7A53 13730528
         LA        R12,BUFFCB          BUFFER CONTROL BLOCK       V7A53 13731028
         BAL       R9,RDTEXT2          RE-READ THE PROTOTYPE      V7A53 13731528
         LA        R10,BLKHDR(,R1)     POINT PAST HEADER          V7A53 13732028
         CLI       0(R10),X'06'        CHECK IF PROTOTYPE AGAIN   V7A53 13732528
         BNE       PUTERR              (LOGIC) ERROR IF NOT       V7A53 13733028
         MVC       FWRD+2(2),1(R10)    PROTOTYPE RECORD LENGTH    V7A53 13733528
         AH        R10,FWRD+2          ADVANCE PROTOTYPE POINTER  V7A53 13734028
         B         NAMPAR                                               13740020
*                                                                       13760020
PROTO1   CLI       0(R4),PARFLG                                         13780020
         BL        BYSRCE              SOURCE FLAG                      13800020
         BE        PARPUT              PARAMETER RECORD FLAG            13820020
MIEOB    CLI       0(R4),ERRFLG        OPERAND ERROR                    13840020
         BL        KWENDMI             M-I END RECORD FLAG        V7A53 13860028
         BH        CONTKY                                               13880020
ENT0D    L         R2,MHDR                                              13900025
         B         ABT                                                  13920020
CONTKY   LA        R12,BUFFCB+8        READ NEXT M-I SEGMENT            13940022
         BAL       R9,RDNEXT2                                           13960022
*****************************************************************       13980022
         LA        R4,BLKHDR(0,R1)     INITIALIZE M-I PTR.              14000022
         B         PROTO1                                               14020020
BYSRCE   MVC       FWRD+2(2),1(R4)                                      14040020
         AH        R4,FWRD+2           GET BY M-I SOURCE                14060020
         B         PROTO1                                               14080020
PARPUT   CLI       10(R4),POSFLG       POSITIONAL PARAM.                14100020
         BH        KWPAR               BRANCH IF KEYWORD          V7A53 14120028
         BL        PARP                SUBLIST CONTINUE FLAG            14140020
         TM        KEYSWIT,KEYPASS2    SECOND PASS, KEYWORDS ONLY V7A53 14142028
         BO        PARP                BRANCH IF YES              V7A53 14144028
         TM        MISWIT,X'40'        2ND PASS FOR KEYWORDS            14160020
         BZ        PARADV                                               14180020
PARP     MVC       FWRD+2(2),1(R4)     GET BY                           14200020
         AH        R4,FWRD+2           POSITIONAL PARAMETER             14220020
         B         PROTO1                                               14240020
PARADV   LA        R4,10(0,R4)         INCR. R4 PAST PAR. REC.          14260020
         LH        R9,PARCNT                                            14280020
         LA        R9,1(0,R9)          COUNT POSITIONAL PARAMETERS      14300020
         STH       R9,PARCNT                                            14320020
         STH       R9,POSCTR           SAVE NUMBER OF POS PAR IN CALL   14340027
NAMPAR   ST        R10,SAVINP          SAVE INPUT PTR.                  14360020
         OI        MISWIT,X'08'        SET USE M-I PARAM SW.            14380020
         LR        R1,R4                                                14400020
         BAL       R6,ENTRY            ENTER POSITIONAL PARAMETER       14420020
         LR        R4,R1                                                14440020
         L         R10,SAVINP          RESTORE INPUT PTR.               14460020
         B         PROTO1                                               14480020
KWPAR    DS        0H                                             V7A53 14481028
         TM        KEYSWIT,KEYPASS2    2ND PASS KEYWORDS ONLY     V7A53 14482028
         BO        ALLPOS              BRANCH IF YES              V7A53 14483028
         OI        KEYSWIT,KEYFOUND    ONE KEYWORD IN M-I         V7A53 14484028
         B         PARP                SKIP IT THIS TIME          V7A53 14485028
KWENDMI  DS        0H                                             V7A53 14486028
         TM        KEYSWIT,KEYPASS2    2ND PASS KEYWORDS ONLY     V7A53 14487028
         BO        ALLPOS              BRANCH TO END IF YES       V7A53 14488028
         TM        KEYSWIT,KEYFOUND    ANY KEYWORDS ENCOUNTERED   V7A53 14489028
         BNO       ALLPOS              BRANCH IF NOT              V7A53 14490028
         OI        KEYSWIT,KEYPASS2    2ND PASS KEYWORDS ONLY     V7A53 14491028
         B         RDAGN               AND TRY AGAIN              V7A53 14492028
ALLPOS   CLC       POSCNT,POSCTR       ARE THERE ANY OMITTED OPNDS      14500027
         BC        BE+BL,MERGE                                          14520020
         LA        R1,NULCON-1                                          14540020
         BAL       R6,ENTRY            ENTER NULL CHAR. STRING          14560020
         LH        R5,POSCTR           GET CURRENT POS PARAM COUNT      14580027
         LA        R5,1(0,R5)          INCREMENT PARAM. CTR             14600020
         STH       R5,POSCTR           UPDATE CURRENT POS PARAM COUNT   14620027
         B         ALLPOS                                               14640020
MERGE    CLI       0(R10),ENDREC       END OF PROTOTYPE                 14660020
         BE        CHKEND                                               14680020
         CLI       0(R10),ERRFLG                                        14700020
         BL        MERGE1              KEYWORD FLAG                     14720020
         BE        PUTERR              ERROR FLAG                       14740020
         LA        R12,BUFFCB          READ NEXT PROTO. SEGMENT         14760022
         BAL       R9,RDNEXT2                                           14780022
*****************************************************************       14800022
         LA        R10,BLKHDR(0,R1)                                     14820022
         B         PROTO1                                               14840020
MERGE1   CLI       10(R10),X'F9'       IS IT CONT SUBLIST FLAG          14860020
         BNE       MERGE2                                               14880020
         MVC       FWRD+2(2),1(R10)                                     14900020
         AH        R10,FWRD+2                                           14920020
         B         MERGE                                                14940020
MERGE2   SR        R5,R5               CLEAR REGISTER                   14960023
         IC        R5,12(,R10)         FETCH KEYWORD NAME LENGTH        14970023
         CLI       0(R4),ENDREC        END OF M-I                       14980020
         BH        CONTKY              M-I CONTINUED                    15000020
         BL        CHKKEY              PROCESS KEYWORD                  15020020
         CLC       NUMKW,ZEROS         ARE THERE NO KEYWORDS IN M-I     15040027
         BE        USEPRO                                               15060020
         TM        MISWIT,X'40'        IS ITERATION ON - BIT 1          15080020
         BZ        RDAGN               BRANCH IF IT WAS OFF             15100020
USEPRO   NI        MISWIT,X'B7'        TURN ITERATION OFF - SET PROTO   15120020
         LA        R1,13(R10,R5)       GET TO VALUE -1 BYTE             15140020
         BAL       R6,ENTRY            ENTER KEYWORD PARAMETER          15160020
         LR        R10,R1              RESET INPUT PTR.                 15180020
         B         PROTO1                                               15200020
PUTERR   LA        R11,1(0,R10)                                         15220020
         MVC       SAVRL(2),1(R10)                                      15240020
         BAL       R9,OUTP                                              15260020
         L         R2,MHDR                                              15280020
         B         ABT                                                  15300020
*           READ INITIAL  M-I SEGMENT                                   15480022
RDAGN    L         R0,MINOTE1                                           15500022
         LA        R12,BUFFCB+8                                         15520022
         BAL       R9,RDTEXT2                                           15540022
         L         R4,BUFFCB+8                                          15560022
         AH        R4,MINOTE1+4        ADD M-I DELTA                    15580022
         MVC       FWRD+2(2),1(R4)                                      15600020
         AH        R4,FWRD+2           GET BY FLAGS & NAME FLD.         15620020
         OI        MISWIT,X'40'        INITIALIZE TO -ON-               15640020
         B         PROTO1                                               15660020
CHKKEY   CLC       12(1,R4),12(R10)    ARE LENGTHS OF KEYWORD NAME EQ.  15680020
         BNE       PARP                                                 15700020
CHKNAM   EX        R5,COMPR            COMPARE KEYWORD NAMES            15720020
         BNE       PARP                                                 15740020
USEMI    LA        R1,13(R4,R5)        GET TO VALUE - 1 BYTE            15760020
         OI        MISWIT,X'08'        SET USE M-I PARAM. SW.           15780020
         ST        R10,SAVINP                                           15800020
         BAL       R6,ENTRY            ENTER PARAMETER                  15820020
         L         R10,SAVINP                                           15840020
         LR        R4,R1                                                15860020
         LH        R9,MACCNT                                            15880020
         LA        R9,1(0,R9)          UP M-I KEYWORD CNTR.             15900020
         STH       R9,MACCNT                                            15920020
         MVC       FWRD+2(2),1(R10)                                     15940020
         AH        R10,FWRD+2          ADVANCE PROTOTYPE PTR.           15960020
         NI        MISWIT,X'BF'        INITIALIZE TO OFF                15980020
         B         PROTO1                                               16000020
*                                                                       16480020
*  ****  ENTRY  ****                                                    16500020
*                                                                       16520020
*  FUNCTION.  1. EVALUATE PARAMETER                                     16540020
*             2. MAKE ENTRY IN PARAMETER TABLE                          16560020
*                                                                       16580020
*  PARAMETERS.                                                          16600020
*              R1 - CONTAINS ADDR. OF BYTE PRECEDING TYPE BYTE          16620020
*                                                                       16640020
*                                                                       16660020
ENTRY    LA        R9,HIPTR            ENSURE PARAMETER POINTER         16662023
         SR        R9,R3               TABLE WILL NOT OVERFLOW          16664023
         LCR       R9,R9                                                16666023
         CH        R9,HIPTRMXL                                          16668023
         BL        ENTRY00             NO OVERFLOW                      16670023
         OI        ERRBTS+1,X'08'      OVERFLOW, SET UP DIAG            16672023
         MVI       RTNNO,3             AND TERMINATE THIS M-I           16674023
         L         R2,MHDR             RESTORE PARAM TABLE PTR          16676023
         B         ABT                 AND EXIT                         16678023
ENTRY00  ST        R2,DELTA            STORE SUBLIST PTR. ADDR.         16680023
         MVC       SUBLEN(5),ZEROS     ZERO OUT                         16700020
ENTRY1   ST        R2,TLADR            STORE SUBLIST PTR. ADDR.         16720020
         LA        R9,17(0,R2)                                          16740020
         C         R9,DEND                                              16760020
         BL        ENTRY0              BR IF ENOUGH CORE                16780020
         BAL       R9,GETCORE          GET SOME MORE CORE               16800020
         B         ENTRY1+4                                             16820020
ENTRY0   TM        MISWIT,X'10'        IS IT SUBLIST                    16840020
         BZ        ENTRY2                                               16860020
ENTRY0A  DS        0H                                                   16862027
         LA        R9,19(,R2)          WE NEED TWO MORE FOR SUBLIST     16864027
         C         R9,DEND             IS THERE SUFFICIENT ROOM .Q      16866027
         BL        ENTRY0B             BRANCH IF YES                    16868027
         BAL       R9,GETCORE          GET SOME MORE CORE               16870027
         B         ENTRY0A             CHECK IF ENOUGH                  16872027
ENTRY0B  DS        0H                                                   16874027
         LA        R2,2(0,R2)          BYPASS PTR.                      16880020
ENTRY2   CLI       SAVTYP,VSUB                                          16900020
         BNE       ENTRY3                                               16920020
         LA        R1,2(0,R1)                                           16940020
ENTRY3   MVC       0(17,R2),1(R1)      ENTER TYPE, FLAG, ETC.           16960020
         LA        R1,2(0,R1)          POINT TO FLAG                    16980020
         CLI       1(R2),VSUB          IS IT SUBLIST                    17000020
         BE        SBEVAL                                               17020020
         CLI       1(R2),VSYM          IS IT A SYMBOL                   17040020
         BE        SYMENT                                               17060020
         CLI       1(R2),NULSYM                                         17080020
         BL        CSDENT                                               17100020
         BH        SIMPCH                                               17120020
*                                       EVALUATE                        17140020
EVAL     MVI       0(R2),UTYPE         SET TYPE TO U                    17160027
EVAL2    MVI       1(R2),VCHAR                                          17180020
EVAL1    LR        R10,R1                                               17200020
         BAL       R11,GOVAL           EVALUATION                       17220020
ENTR9    TM        MODESW,CONCAT       WAS THERE CONCATENATION          17240020
         BZ        NOCAT                                                17260020
NOCAT2   LR        R1,R10              NEW SCAN PTR                     17280020
         LA        R12,L1+1            L BYTE ADDR                      17300020
         LA        R2,2(0,R2)                                           17320020
         B         PUTIN                                                17340020
NOCAT    L         R1,SUBADR                                            17360020
         LTR       R1,R1               SIMPLE CHAR. STRING              17380020
         BZ        NOCAT2                                               17400020
         TM        MISWIT,X'10'        IS IT SUBLIST                    17420020
         BO        NOCAT2                                               17440020
         BCTR      R1,0                POINT TO BYTE BEFORE TYPE        17460020
         MVC       SAVTYP(1),2(R1)     SAVE FLAG OF PARAMETER           17480020
         B         ENTRY3                                               17500020
*                                       SUBLIST ENTRY                   17520020
SBEVAL   MVI       0(R2),X'FF'         SW. - GET TYPE OF FIRST PAR.     17540020
         OI        MISWIT,X'10'        SET SUBLIST SW. ON - BIT 3       17560020
         LA        R2,8(0,R2)                                           17580020
         LA        R1,6(0,R1)          POINT TO (                       17600020
         B         ENTRY1                                               17620020
*                                       CSD - HBD ENTRY                 17640020
CSDENT   LA        R2,6(0,R2)                                           17660020
         LA        R1,5(0,R1)          POINT TO L BYTE                  17680020
CSD1     SR        R5,R5               CLEAR REGISTER                   17700023
         IC        R5,0(,R1)           FETCH LENGTH                     17710023
         LR        R12,R1                                               17720020
         LA        R1,1(R1,R5)         ADV. TO END OF PARAMETER         17740020
         B         PUTIN                                                17760020
*                                       SYMBOL ENTRY                    17780020
SYMENT   CLI       SAVTYP,X'00'                                         17800020
         BNE       SYMIN               BRANCH IF OUTER REFERENCE        17820020
         LR        R10,R1                                               17840020
         BAL       R8,BASONE           GET ADDR. OF ATTRIBUTE           17860020
         MVC       2(ATTLEN,R2),0(R12) ENTER ATTRIBUTES                 17880020
         MVC       0(1,R2),0(R12)      STORE TYPE IN FIRST BYTE         17900020
         LA        R2,6(0,R2)                                           17920020
         LA        R1,6(0,R1)                                           17940020
         B         EVAL2                                                17960020
SYMIN    LA        R2,8(0,R2)                                           17980020
         LA        R1,7(0,R1)                                           18000020
         B         CSD1                                                 18020020
*    IS IT A SIMPLE CHARACTER STRING                                    18040020
SIMPCH   LA        R12,1(0,R1)         FETCH ADDR. OF L BYTE            18060020
         SR        R5,R5               CLEAR REGISTER                   18070023
         IC        R5,1(0,R1)                                           18080020
         LA        R9,2(R1,R5)         BYTE BEYOND STRING               18100020
         CLI       0(R9),NULSYM        TEST FOR EVAL. FLAG              18120020
         BE        EVAL1                                                18140020
         LA        R2,2(0,R2)                                           18160020
         CLI       1(R1),X'0E'         HAS IT ALL BEEN ENTERED          18180020
         LR        R1,R9                                                18200020
         BNH       PUTINC                                               18220020
PUTIN    SR        R5,R5               CLEAR REGISTER                   18240023
         IC        R5,0(,R12)          STORE L                          18250023
         LTR       R5,R5               IS IT NULL STRING                18260020
         BP        PUTINA                                               18280020
         MVI       0(R2),X'00'         NULL CHAR. STRING                18300020
PUTINA   LA        R9,1(R2,R5)                                          18320020
         C         R9,DEND             WILL ENTRY FIT                   18340020
         BL        PUTIN1              BR IF ENOUGH CORE                18360020
         BAL       R9,GETCORE          GET SOME MORE CORE               18380020
         B         PUTINA                                               18400020
PUTIN1   EX        R5,ENTER            MAKE ENTRY                       18420020
PUTINC   LA        R2,1(R2,R5)         ADV. TABLE PTR.                  18440020
         MVI       0(R2),X'00'         AVOID SPURIOUS 'EVAL' FLAG       18460020
         LH        R9,SUBLEN                                            18480020
         AR        R9,R5               UP SUBLIST CTR.                  18500020
         STH       R9,SUBLEN                                            18520020
         TM        MISWIT,X'10'        IS IT SUBLIST                    18540020
         BO        ENT1                                                 18560020
ENTA     CLI       SAVTYP,X'00'        IS IT OUTER PARAM. LOOKUP        18580020
         BE        ENT5                                                 18600020
         LR        R1,R10              RESTORE R1                       18620020
         B         ENT5                                                 18640020
ENT1     LR        R8,R2                                                18660020
         L         R9,TLADR                                             18680020
         SR        R8,R9                                                18700020
         S         R8,TWO              COMPUTE OPND. PTR                18720020
         STH       R8,FWRD+2           STORE OPND. PTR                  18740023
         MVC       0(2,R9),FWRD+2                                       18760020
ENT5     L         R12,DELTA           FETCH ENTRY ADDR.                18780020
         TM        MISWIT,X'10'        IS IT SUBLIST                    18800020
         BO        ENT3                                                 18820020
         LR        R9,R2                                                18840020
         SR        R9,R12                                               18860020
         STH       R9,FWRD+2           TOTAL LENGTH OF ENTRY            18880023
         AH        R9,0(0,R3)                                           18900020
         STH       R9,2(0,R3)          STORE NEW PTR.                   18920020
         LA        R3,2(0,R3)                                           18940020
         CLI       1(R12),VSUB         IS IT SUBLIST                    18960020
         BE        ENT22                                                18980020
         LA        R1,1(0,R1)                                           19000020
         BR        R6                                                   19020020
ENT22    MVC       2(2,R12),FWRD+2     STORE TOTAL LENGTH IN PARAM.     19040020
         LA        R1,3(,R1)           BUMP PAST N ATTRIBUTE            19060027
         BR        R6                                                   19080020
ENT3     MVC       0(2,R2),0(R1)       ENTER OPERAND TERMINATOR         19100020
         CLI       0(R12),X'FF'        TYPE OF SUBLIST UNKNOWN YET      19120020
         BNE       ENT5A                                                19140020
         MVC       0(1,R12),2(R9)      USE TYPE OF FIRST PARAMETER      19160020
ENT5A    CLI       0(R1),RPARVL        END OF SUBLIST                   19180020
         BE        ENT4                                                 19200020
         LA        R2,1(0,R2)                                           19220020
         CLI       1(R1),ERRFLG        TEST                             19240025
         BH        ENT6A               END OF BLOCK, OR                 19250025
         BE        ENT0D               ERROR RECORD                     19260025
         CLI       SAVTYP,X'00'        IS IT PARAMETER REFERENCE        19280020
         BNE       ENTRY1              BRANCH IF IT IS                  19300020
         LA        R1,11(0,R1)         POINT TO BYTE BEFORE TYPE        19320020
         B         ENTRY1                                               19340020
ENT6A    TM        MISWIT,X'08'                                         19360020
         BZ        ENT7                                                 19380020
         LA        R12,BUFFCB+8        READ NEXT M-I SEGMENT            19400022
         BAL       R9,RDNEXT2                                           19420022
         LA        R9,BLKHDR(0,R1)                                      19440022
         B         ENT8                                                 19460020
ENT7     LA        R12,BUFFCB          READ NEXT PROTO SEGMENT          19480022
         BAL       R9,RDNEXT2                                           19500022
         LA        R9,BLKHDR(0,R1)                                      19520022
ENT8     LA        R1,10(0,R9)                                          19540020
         B         ENTRY1                                               19560020
ENT4     LA        R2,2(0,R2)                                           19580020
         SR        R5,R5               CLEAR REGISTER                   19590023
         IC        R5,1(,R1)           GET N ATTRIBUTE OF SUBLIST       19600027
         STC       R5,6(0,R12)         STORE N ATTRIB.                  19620020
*                                       COMPUTE K ATTRIB                19640020
         LA        R8,1(0,R5)          N+1                              19660020
         AH        R8,SUBLEN                                            19680020
         STH       R8,SUBLEN                                            19700020
         MVC       4(2,R12),SUBLEN     STORE K                          19720020
         S         R10,TWO                                              19740020
         NI        MISWIT,X'EF'        TURN OFF SUBLIST SWITCH          19760020
         B         ENTA                                                 19780020
********************** DRIVER SUBROUTINES *********************         19800020
OUTP     LH        R5,SAVRL                                             19820020
         BCTR      R5,0                GET ACTUAL LENGTH                19840020
         BAL       R8,WRTRL                                             19860020
         BR        R9                                                   19880020
*                                                                       19900020
GOVAL    STM       R1,R6,SVREG         SAVE REGISTERS                   19920020
         ST        R11,RTNVAL                                           19940020
         B         VALUAT              EVALUATE                         19960020
VALRTN   L         R11,RTNVAL                                           19980020
         BR        R11                                                  20000020
         EJECT                                                          20010022
*                                                                       20020020
*        THE FOLLOWING ROUTINES READ THE INPUT TEXT FROM UT1 AND UT3    20030022
*        THEY MAINTAIN THE INPUT BUFFERS VIA THE BUFFCB                 20040022
*        BLOCKS ARE READ ONLY AFTER IT HAS BEEN ASCERTAINED THAT THE    20050022
*          BLOCK IS NOT ALREADY IN A BUFFER                             20060022
*                                                                       20070022
*        INPUT - R12 POINTS AT THE BUFFER CONTROL BLOCK ENTRY           20080022
*                  BUFFCB+8 FOR M-I INPUT DURING M-I/PROTO SCAN         20090022
*                  BUFFCB   FOR EVERYTHING ELSE                         20100022
*                R9 IS RETURN ADDRESS                                   20110022
*                R0 CONTAINS NOTE/POINT OF BLOCK TO BE READ             20120022
*                R1 POINTS AT FIRST FREE BUFFER CONTROL BLOCK           20130022
*                   BUFFCB+16 DURING M-I/PROTO SCAN                     20140022
*                   BUFFCB+8  AT ALL OTHER TIMES                        20150022
*             NOTE - NOT ALL OF THE ABOVE REGISTERS ARE NEEDED AT ALL   20160022
*                    OF THE ENTRY POINTS                                20170022
*                                                                       20180022
*        OUTPUT - R1 POINTS AT THE START OF THE BUFFER                  20190022
*                                                                       20200022
*        READ A NEW BLOCK, 2 ACTIVE, R12,R9 AND R0 NEEDED               20210022
RDTEXT2  C         R0,4(0,R12)         SAME AS PRESENT BLOCK .Q         20220022
         BE        RET                 EXIT IF SO                       20230022
         B         RDFREE2             GO FREE PRESENT BUFFER           20240022
*        READ A NEW BLOCK, 1 ACTIVE, R12,R9 AND R0 NEEDED               20250022
RDTEXT1  C         R0,4(0,R12)         SAME AS PRESENT BLOCK .Q         20260022
         BE        RET                 EXIT IF SO                       20270022
         B         RDFREE1             GO FREE PRESENT BUFFER           20280022
*        READ NEXT BLOCK, 2 ACTIVE, R12 AND R9 NEEDED                   20290022
RDNEXT2  L         R1,0(0,R12)         POINT AT PRESENT BUFFER          20300022
         L         R0,0(0,R1)          EXTRACT NEXT NOTE/POINT          20310022
RDFREE2  LA        R1,BUFFCB+16        SET 1ST FREE POINTER             20320022
         B         RDFREE              GO FREE THIS BUFFER              20330022
*        READ NEXT BLOCK, 1 ACTIVE, R12 AND R9 NEEDED                   20340022
RDNEXT1  L         R1,0(0,R12)         POINT AT PRESENT BUFFER          20350022
         L         R0,0(0,R1)          EXTRACT NEXT NOTE/POINT          20360022
RDFREE1  LA        R1,BUFFCB+8         SET 1ST FREE POINTER             20370022
RDFREE   LD        FR0,0(0,R12)        FREE BUFFER BY PLACING AT BOTTOM 20380022
         STD       FR0,BUFFCB+&UTBUFF*8  OF BUFFCB                      20390022
*        READ A NEW BLOCK WITHOUT FREEING A BUFFER,                     20400022
*              R12,R9,R1 AND R0 NEEDED                                  20410026
RDNEW    ST        R1,R1SAVE           SAVE R1                          20420022
LOOP     C         R0,4(0,R1)          TEST FOR CORRECT BLOCK           20430022
         BE        FOUND                                                20440022
         LA        R1,8(0,R1)          NEXT ENTRY                       20450022
         CLI       0(R1),0             TEST FOR END OF LIST             20460022
         BE        LOOP                                                 20470022
*        SET UP FOR READING                                             20480022
         ST        R0,PTNP             NOTE/POINT                       20490022
         MVI       PTNP+3,X'01'        POINT + 1                        20500022
         STC       R0,CLI1+1           UT NUMBER                        20505022
         STC       R0,PTUTNO+3                                          20510022
         STC       R0,RDUTNO+3                                          20520022
         STC       R0,CKUTNO+3                                          20530022
         STC       R0,NTUTNO+3                                          20540022
         STC       R0,MVI1+1                                            20550022
*        FIND A FREE BUFFER FOR THIS UTILITY                            20560022
         L         R1,R1SAVE           RESTORE R1                       20570022
         MVI       RETSW+1,0           SET BRANCH TO NOP                20580022
CLI1     CLI       7(R1),*-*           TEST UTILITY NUMBER              20590022
         BE        FOUND                                                20600022
         LA        R1,8(0,R1)          NEXT ENTRY                       20610022
         B         CLI1                                                 20620022
*        PLACE FOUND BUFFER IN REQUESTED SPOT AND POP UP THOSE BELOW IT 20630022
FOUND    LD        FR0,0(0,R1)         PICK UP BUFF CONT BLOCK          20640022
         STD       FR0,0(0,R12)        AND STORE IT                     20650022
         LA        R0,BUFFCB+&UTBUFF*8 CALCULATE MOVE LENGTH            20660022
         SR        R0,R1                                                20670022
         STC       R0,*+5              DO THE MOVE                      20680022
         MVC       0(*-*,R1),8(R1)                                      20690022
RET      L         R1,0(0,R12)         SET R1 IN CASE SW IS TO BR       20700022
RETSW    BCR       *-*+15,R9           BR/NOP SWITCH                    20710022
*                                                                       20720022
         MVI       RETSW+1,X'F0'+R9    RESET BRANCH                     20725022
         L         R1,BUFFENT          POINT + 1                        20730022
         CNOP      2,4                                                  20740022
         BALR      R0,R1                                                20750022
         DC        F'12'                                                20760022
PTUTNO   DC        F'0'                UT NUMBER                        20770022
PTNP     DC        F'1'                NOTE/POINT INFO                  20780022
         L         R1,0(0,R12)         BUFFER ADDRESS                   20790022
         ST        R1,RDADD                                             20800022
         L         R1,BUFFENT          READ & KEEP                      20810022
         CNOP      2,4                                                  20820022
         BALR      R0,R1                                                20830022
         DC        F'0'                                                 20840022
RDUTNO   DC        F'0'                UT NUMBER                        20850022
RDADD    DC        F'0'                ADDRESS                          20860022
         L         R1,BUFFENT          CHECK                            20870022
         CNOP      2,4                                                  20880022
         BALR      R0,R1                                                20890022
         DC        F'28'                                                20900022
CKUTNO   DC        F'0'                UT NUMBER                        20910022
         DC        F'0'                LENGTH (IGNORED)                 20920022
         L         R1,BUFFENT          NOTE                             20930022
         CNOP      2,4                                                  20940022
         BALR      R0,R1                                                20950022
         DC        F'20'                                                20960022
NTUTNO   DC        F'0'                UT NUMBER                        20970022
NTNP     DC        F'0'                NOTE/POINT                       20980022
*        PLACE N/P OF THIS RECORD IN BUFFCB AND N/P FOR NEXT RECORD     20985022
*          AT START OF BUFFER                                           20990022
         L         R1,0(0,R12)         POINT AT BUFFER                  20995022
         MVC       4(3,R12),0(R1)      N/P FOR THIS BLOCK               21000022
         MVC       0(3,R1),NTNP        N/P FOR NEXT BLOCK               21005022
MVI1     MVI       3(R1),*-*           UT NUMBER                        21010022
         BR        R9                  RETURN                           21015022
         EJECT                                                          21017022
*                                                                       21020020
*   CHECK ERROR BITS ROUTINE                                            21040020
*                                                                       21060020
CHKERR   STM       R2,R3,SAV2                                           21080020
         CLI       STATYP,X'01'        IS IT CSECT OR MACH. INSTRUCT.   21100020
         BH        ERR1A                                                21120020
         LA        R11,ZEROS           PUTOUT FULL WORD - ZEROS         21140020
         LA        R5,4                                                 21160020
         BAL       R8,WRATXT           WRITE                            21180020
ERR1A    SR        R2,R2               ZERO ERRSTG COUNTER              21200020
         LA        R12,ERRBTS                                           21220020
ERR1     CLI       0(R12),X'00'        ERRORS IN FIRST BYTE             21240020
         BE        SECBYT                                               21260020
         SR        R4,R4               ZERO OUT REGISTER                21280020
ERR2     LR        R5,R4               STORE BIT NO.                    21300020
         BAL       R9,FNDBIT           IS BIT SET                       21320020
         LA        R4,1(0,R4)          INCREMENT BIT NO.                21340020
         LTR       R8,R8                                                21360020
         BP        ERR3                BRANCH IF ERROR BIT IS ON        21380020
ERR22    LA        R2,1(0,R2)          UP ERRSTG CNTR.                  21400020
         C         R4,EIGHT            END OF BYTE                      21420020
         BL        ERR2                                                 21440020
SECBYT   LA        R3,ERRBTS+1         SECOND ERROR BYTE                21460020
         CR        R12,R3              HAS SECOND BYTE BEEN CHECKED     21480020
         BNE       ERR4                                                 21500020
         LM        R2,R3,SAV2                                           21520020
         BR        R6                                                   21540020
ERR4     IC        R2,EIGHTH+1                                          21560020
         LR        R12,R3                                               21580020
         B         ERR1                                                 21600020
ERR3     IC        R5,ERRSTG(R2)       FETCH ERROR NO.                  21620020
         STC       R5,ERRNO            MOVE TO PUT STRING               21640020
         LA        R5,6                LENGTH = 6                       21660025
         LA        R11,ERRREC                                           21680020
         BAL       R8,WRTRL            PUTOUT ERROR RECORD              21700020
         L         R8,4(,R7)           DIVIDE ACTR BY 2 ON EACH ERROR   21706025
         SRA       R8,1                                                 21712025
         ST        R8,4(,R7)           SAVE IT BACK AGAIN               21718025
         B         ERR22                                                21720020
ERRSTG   DC        X'2873393A3B3C3D3E3F40415842433845'  ERROR CODES     21740027
*                                                                       21760020
*                                                                       21780020
*                                                                       21800020
*                                                                       21820020
VALUAT   MVI       MODESW,CREMSK       INITIALIZE MODESW - CHAR. EXPR.  21840020
         LM        R2,R5,REGCON        INITIALIZE POINTERS              21860020
         MVI       OPTAB,DOT           INITIALIZE OPTAB                 21880020
         ST        R5,GTLIST           INITIALIZE WITH ZERO RESULT      21900020
SYMBLA   STH       R5,L1               ZERO OUT L1                      21920020
         STH       R5,L2               ZERO OUT L2                      21940025
         ST        R5,SUBADR           ZERO OUT                         21960020
         LA        R6,L1                                                21980020
         NI        MODESW,X'F7'        TURN OFF PUTST SW. - BIT 4       22000020
SYMBL    CLI       0(R10),HIOP         IS IT OUTSIDE OPERATOR RANGE     22020020
         BH        NOTOPR                                               22040020
*                                                                       22060020
*   CHECK OPERATOR FOR PARENTHESIS AND END OF EXPRESSION                22080020
*                                                                       22100020
CHFORC   CLI       0(R10),LPAREN       (                                22120020
         BE        ADVOP                                                22140020
         CLI       0(R10),RPAREN       )                                22160020
         BE        TSTOP1                                               22180020
TSTREL   CLI       0(R10),EQUAL        IS IT RELATIONAL OPR.            22200020
         BL        FORCE1                                               22220020
         CLI       0(R10),VNOT         OUTSIDE RELATIONAL OPR. RANGE .Q 22240020
         BH        FORCE               BRANCH IF .AND.  .OR.            22260020
         BE        ADVOP                                                22280020
RELINT   LA        R6,L2               INITIALIZE STRG2                 22300025
         NI        MODESW,X'F7'        TURN OFF PUTST SW. - BIT 4       22320020
         B         FORCE1                                               22340020
*                                                                       22360020
*   DOES OPR. AT R10 FORCE THE LAST OPR. ENTRY IN OPLIST                22380020
*  I.E.   -  DOES IT HAVE A HIGHER RATING                               22400020
*                                                                       22420020
FORCE    CLI       OPTAB,COMMA         END OF EXPRESSION                22440020
         BE        TSTOP1                                               22460020
FORCE1   SR        R9,R9               ZERO OUT REG                     22480020
         SR        R5,R5               CLEAR REGISTER                   22490023
         IC        R5,0(0,R10)         FETCH OPERATOR                   22500020
         IC        R9,RATING(R5)       GET OPR. RATING OF INPPTR OPR.   22520020
         IC        R5,0(0,R4)                                           22540020
         IC        R5,RATING(R5)       GET OPR. RATING OF OPPTR OPR.    22560020
         CLR       R9,R5               DOES FORCING OCCUR               22580020
         BL        ADVOP                                                22600020
*                                                                       22620020
*    OPERATOR DOES FORCE                                                22640020
*                                                                       22660020
TSTOP1   CLI       0(R4),COMMA                                          22680020
         BE        TEMPEX                                               22700020
         CLI       0(R4),LPAREN        (                                22720020
         BNE       CH1                                                  22740020
         TM        SWITCH,X'01'        IS IT SBCLS, SBCOM               22760020
         BO        TEMPEX                                               22780020
         CLI       0(R10),RPAREN       )                                22800020
         BNE       ADVOP                                                22820020
CANCEL   BCTR      R4,0                MOVE R4 BACK ONE                 22840020
         CLI       OPTAB,COMMA                                          22860020
         BE        DOOPR                                                22880020
         B         ADVINP                                               22900020
CH1      CLI       0(R4),SPAREN        SPECIAL SUBSCRIPT (              22920020
         BNE       DOOPR                                                22940020
         CLI       0(R10),COMMA                                         22960020
         BE        ADVSYS                                               22980020
         CLI       0(R10),RPAREN       )                                23000020
         BNE       ADVOP                                                23020020
*                                                                       23040020
*   PERFORM FUNCTION OF OPERATOR FORCED IN TABLE                        23060020
*                                                                       23080020
DOOPR    TM        SWITCH,X'01'                                         23100020
         BZ        DOOPRX                                               23120020
         CLI       0(R4),EQUAL                                          23140020
         BC        BE+BH,TEMPEX                                         23160020
DOOPRX   BCTR      R4,0                MOVE BACK R4                     23180020
         L         R12,0(0,R3)         LOAD ADDR. OF OPERAND B          23200020
         CLI       1(R4),VNOT                                           23220020
         BE        NOTOP                                                23240020
         S         R3,FOUR             MOVE BACK R3 POINTER             23260020
         L         R11,0(0,R3)         LOAD ADDR. OF OPERAND A          23280020
         CLI       1(R4),SPAREN        SPECIAL SUBSCRIPT (              23300020
         BE        SUBSC                                                23320020
         TM        MODESW,CREMSK       IS IT CHAR. EXPR. MODE           23340020
         BO        DOOPR1                                               23360020
         S         R2,FOUR             MOVE BACK GT POINTER             23380020
DOOPR1   CLI       1(R4),EQUAL         IS IT ARITHMETIC OPERATOR        23400020
         BL        ARITOP                                               23420020
         CLI       1(R4),VOR           RELAT. OR LOGICAL OPERATOR       23440020
         BL        RELAT                                                23460020
         BH        ANDOP                                                23480020
*                                                                       23500020
*    PROCESS OPERATORS- AND - OR - NOT                                  23520020
*                                                                       23540020
         OC        3(1,R11),3(R12)     'OR' CASE                        23560020
         B         ANDOP1                                               23580020
ANDOP    NC        3(1,R11),3(R12)     'AND' CASE                       23600020
ANDOP1   LA        R6,L1               ADDR OF STRING AREA 1            23620020
         NI        MODESW,X'F7'        TURN OFF PUTST SW. - BIT 4       23640020
         LR        R2,R11                                               23660020
         B         FORCE                                                23680020
NOTOP    XI        3(R12),TRUE         'NOT' CASE                       23700020
         B         FORCE                                                23720020
*                                                                       23740020
*    PROCESS ARITHMETIC OPERATORS  + - * /                              23760020
*                                                                       23780020
ARITOP   L         R1,0(0,R11)         GET CURRENT VALUE                23800020
         LA        R8,CONTIN                                            23820020
         CLI       1(R4),VMINUS                                         23840020
         BL        ADD                 OPR. IS +                        23860020
         BE        SUBTR               OPR. IS -                        23880020
         CLI       1(R4),VMULT                                          23900020
         BE        MULTY               OPR. IS *                        23920020
DIV      SR        R0,R0               OPR. IS /                        23940020
         CL        R0,0(0,R12)         IS DIVISOR ZERO .Q               23960020
         BNE       DIV1                BRANCH IF NOT                    23980020
         SR        R1,R1               USE ZERO RESULT                  24000020
         BR        R8                                                   24020020
DIV1     LTR       R1,R1               IS DIVIDEND MINUS .Q             24040020
         BNM       DIV2                BRANCH IF NOT                    24060020
         BCTR      R0,0                MAKE EVEN REGISTER -1            24080020
DIV2     D         R0,0(0,R12)         PERFORM DIVISION                 24100020
         BR        R8                                                   24120020
ADD      A         R1,0(0,R12)         PERFORM ADDITION                 24140020
         BO        OVF                 BRANCH IF OVERFLOW               24160020
         BR        R8                                                   24180020
SUBTR    S         R1,0(0,R12)         PERFORM SUBTRACTION              24200020
         BO        OVF                 BRANCH IF OVERFLOW               24220020
         BR        R8                                                   24240020
MULTY    M         R0,0(0,R12)         PERFORM MULTIPLICATION           24260020
*                                                                       24280020
*  TEST   PRODUCT FOR EXCEEDING LIMITS                                  24300020
*                                                                       24320020
         LA        R9,OVF                                               24340020
         LTR       R0,R0                                                24360020
         BCR       BP,R9               EVEN REG. GREATER THAN ZERO      24380020
         BZ        POS                 EVEN REG. EQUALS ZERO            24400020
         A         R0,ONE                                               24420020
         BCR       BNZ,R9                                               24440020
         LTR       R1,R1                                                24460020
         BCR       BM,R8               BRANCH ON MINUS                  24480020
         BR        R9                                                   24500020
POS      LTR       R1,R1                                                24520020
         BCR       BM,R9                                                24540020
*                                                                       24560020
*                                                                       24580020
CONTIN   ST        R1,0(0,R11)         STORE RESULT                     24600020
         B         FORCE                                                24620020
*                                                                       24640020
*   PROCESS RELATIONAL OPERATORS - EQ, NE, GT, LT, GE, LE               24660020
*                                                                       24680020
RELAT    SR        R5,R5               CLEAR REGISTER                   24700023
         IC        R5,1(,R4)                                            24710023
         IC        R8,CONCD-8(R5)      FETCH CONDITION CODE.            24720020
         TM        MODESW,CREMSK       IS IT A CHARACTER RELATIONAL     24740020
         BO        CRE                                                  24760020
*    RELATIONAL OPERATOR - ARITHMETIC EXESSION                          24780020
         L         R9,0(0,R11)                                          24800020
         C         R9,0(0,R12)         COMPARE OPND A + B               24820020
EXEC1    EX        R8,BRANCH                                            24840020
         MVC       0(4,R2),ZERO        FALSE                            24860020
         B         EXEC3                                                24880020
EXEC2    MVC       0(4,R2),ONE         TRUE CASE                        24900020
EXEC3    SR        R5,R5                                                24920020
         ST        R2,0(0,R3)                                           24940020
         B         SYMBLA                                               24960020
*    RELATIONAL OPERATOR - CHARACTER EXPRESSION                         24980020
CRE      LA        R2,GTLEN(0,R2)      UPDATE R2                        25000020
         LH        R5,L1                                                25020020
         CH        R5,L2               COMPARE LENGTH OF STRING         25040025
         BNE       EXEC1                                                25060020
         LTR       R5,R5               IS LENGTH ZERO .Q                25080020
         BZ        EXEC1               BRANCH IF ZERO                   25100020
         BCTR      R5,0                DECREMENT LENGTH BY ONE          25120020
         EX        R5,TRSLT1           OPND A - TRANSLATE TO ORIGINAL   25140020
         EX        R5,TRSLT2           OPND B - TRANSLATE TO ORIGINAL   25160020
         EX        R5,CLC1             COMPARE OPND A TO OPND B         25180020
         EX        R5,TRSLT1           TRANSLATE BACK TO INTERNAL       25200020
         EX        R5,TRSLT2           TRANSLATE BACK TO INTERNAL       25220020
         B         EXEC1                                                25240020
*                                                                       25260020
*    PROCESS SUBSCRIPTED SET VARIABLE - SPECIAL SUBSCRIPT (             25280020
*                                                                       25300020
SUBSC    LA        R10,1(0,R10)                                         25320020
         SR        R5,R5               ZERO R5                          25330025
         IC        R5,SCPCTR                                            25340020
         S         R5,ONE                                               25360020
         STC       R5,SCPCTR                                            25380020
         BC        BP,SUB3                                              25400020
         OC        MODESW(1),SUBSW     RESTORE A.R.E.-C.R.E             25420020
         MVI       SUBSW,X'01'         INITIALIZE SUBSCRIPT SWITCH      25440020
SUB2     TM        MODESW,X'80'        IS IT SYSLIST MODE               25460020
         BZ        SUB3                                                 25480020
         L         R5,0(0,R2)                                           25500020
         CH        R5,POSNOMAX         TOO MANY POS PARMS .Q            25520027
         BH        PARERR                                               25540020
         TM        MODESW,X'40'        WERE THERE 2 EXPRESSIONS         25560020
         BZ        ONEEXP              BRANCH IF ONE EXPR.              25580020
         S         R2,FOUR                                              25600020
         S         R3,FOUR                                              25620020
ONEEXP   L         R8,0(0,R2)                                           25640020
         CH        R8,POSNOMAX         TOO MANY POS PARMS .Q            25660027
         BH        PARERR                                               25680020
         A         R8,SIX              ADJUST FOR SYSTEM PARAMETERS     25700025
         STC       R8,3(0,R3)          STORE PAR. NO.                   25720020
         ST        R5,0(0,R2)                                           25740020
SUB3     S         R3,FOUR                                              25760020
         S         R2,FOUR                                              25780020
         CLI       4(R3),VATRREF       TYPE ATTRIBUTE REFERENCE         25800027
         BL        SUB1                                                 25820020
         SR        R5,R5               CLEAR REGISTER                   25830023
         IC        R5,7(0,R3)          FETCH PARAMETER NO.              25840020
         BAL       R11,POSPAR          LOCATE PARAMETER IN TABLE        25860020
         CLI       4(R3),NATT          N ATTRIBUTE                      25880020
         BE        SUB4                                                 25900020
         BAL       R9,POSSUB           LOCATE SUBLIST OPERAND           25920020
         CLI       SCPCTR,X'00'                                         25940020
         BNE       GETVAL                                               25960020
SUB4     NI        MODESW,X'3F'        TURN OFF SYSLIST AND EXPR. SW    25980020
         B         GETVAL              GET VALUE FROM TABLE             26000020
*  GET   SUBSCRIPTED VALUE                                              26020020
SUB1     L         R12,4(0,R2)         FETCH SUBSCRIPT VALUE (N)        26040020
         S         R12,ONE             N-1                              26060020
         BM        PARERR              TEST FOR 0 SUBSCRIPT             26080020
         SR        R5,R5               CLEAR REGISTER                   26090023
         IC        R5,0(,R11)          PICK UP DECLARED                 26100023
         SLL       R5,8                DIMENSION AND                    26110023
         IC        R5,1(,R11)          TEST FOR SUBSCRIPT NOT           26120023
         CR        R12,R5              WITHIN DECLARATION RANGE         26130023
         BNL       PARERR              OUT OF RANGE, GO LOG ERROR       26140023
         MVC       SUBADR(4),ZEROS     POINTER TO SUBSCRIPT VALUE       26150025
         CLI       4(R3),VSETB         WHAT TYPE OF SET VAR.            26160020
         BE        SETB                                                 26180020
         BH        SETC                                                 26200020
SETA     SLL       R12,2               4*(N-1)                          26220020
         LA        R12,2(R11,R12)      COMPUTE SUBSCRIPTED ADDRESS      26240023
         ST        R12,SAVADR          STORE RESULT ADDRESS             26260020
KEXTESTA BC        *-*,KATT1A          MOD FOR K' OF SETA         V7A56 26270028
         B         META3                                                26280020
SETB     LPR       R5,R12                                               26300020
         N         R5,SEVEN            DIVIDE VALUE BY 8                26320020
*                                       REMAINDER IN R5                 26340020
*                                       QUOTIENT IN R12                 26360020
         SRL       R12,3                                                26380020
         STC       R5,BITNO            STORE BIT NO.                    26400020
         LA        R12,2(R11,R12)      COMPUTE SUBSCRIPTED ADDRESS      26420023
         ST        R12,SAVADR          STORE RESULT ADDRESS             26440020
KEXTESTB BC        *-*,KATT1B          MOD FOR K' OF SETB         V7A56 26450028
         B         METB3                                                26460020
SETC     SR        R5,R5               CLEAR WORK REGISTER              26480025
         IC        R5,2(,R11)          GET MAX LENGTH OF SETC'S         26484025
         LA        R5,1(0,R5)          ADD 1 FOR LENGTH BYTES           26488025
         ST        R5,FWRD             STORE FOR USE IN MH              26492025
         MH        R12,FWRD+2          MULTIPLY SUBSCRIPT BY MAX LEN+1  26496025
         LA        R12,2(R11,R12)      COMPUTE SUBSCRIPTED ADDRESS      26500023
         ST        R12,SAVADR          STORE RESULT ADDRESS             26520020
         MVC       SAVLEN(1),2(R11)    SAVE MAX LENGTH SPECIFICATION    26530025
KEXTEST  BC        *-*,KATT1           MOD IN KATTBT FOR EXTENDED K'    26540025
         B         METC1               PROCESS SETC VARIABLE            26550025
*                                                                       26560020
*    OPERATOR IN TABLE WAS NOT FORCED                                   26580020
*                                                                       26600020
NOFOR    IC        R5,SCPCTR                                            26620020
         LA        R5,1(0,R5)                                           26640020
         STC       R5,SCPCTR                                            26660020
         TM        SUBSW,X'02'         HAS A.R.E. FLAG BEEN SAVED       26680020
         BO        ADVOP                                                26700020
         NC        SUBSW(1),MODESW     SAVE ARE-CRE FLAG                26720020
         NI        MODESW,X'FE'        SET A.R.E. FLAG                  26740020
         OI        SUBSW,X'02'                                          26760020
ADVOP    LA        R4,1(0,R4)          ADVANCE OPERATOR POINTER         26780020
         MVC       0(1,R4),0(R10)      ENTER OPERATOR INTO OP TABLE     26800020
         CLI       0(R10),VOR                                           26820020
         BL        ADVINP                                               26840020
         OI        MODESW,CREMSK                                        26860020
ADVINP   LA        R10,1(0,R10)        ADVANCE INPUT POINTER            26880020
         B         SYMBL                                                26900020
ADVSYS   OI        MODESW,X'40'        SET 2ND EXPR. SWITCH             26920020
ADVSS    MVI       OPTAB,DOT           RE-INITIALIZE                    26940020
         NI        SWITCH,X'FE'                                         26960020
         B         ADVINP                                               26980020
*                                                                       27000020
*     EXIT FOR VALUAT ROUTINE                                           27020020
*                                                                       27040020
TEMPEX   CLI       0(R10),VSBCOM                                        27060020
         BE        SBCOM                                                27080020
         CLI       0(R10),VSBCLS                                        27100020
         BE        SBCLS                                                27120020
TEMPX    LM        R1,R6,SVREG                                          27140020
         MVI       KEXTEST+1,X'00'     IN CASE KATTBT NOT RETURNED TO   27150025
         CLC       ERRBTS(2),ZERO      ARE THERE EVALUATION ERRORS      27160020
         BE        VALRTN                                               27180020
         BAL       R6,CHKERR                                            27200020
         CLC       ERRBTS(2),WARNG     ONLY WARNING MESSAGES            27220020
         BC        BE+BL,VALRTN        BRANCH IF ONLY WARNING           27240020
ISITMI   TM        MISWIT,X'20'                                         27260020
         BZ        PARAM               BRANCH IF NOT M-I OR PROTOTYPE   27280020
         L         R7,MHDR             RESTORE DICTIONARY BASE          27290023
         B         MENDST01                                             27300023
*                                                                       27320020
*    COMPUTED GO TO - FOR APPROPRIATE VALUE ROUTINE                     27340020
*                                                                       27360020
NOTOPR   CLI       0(R10),VDUMP        ABOVE RANGE                      27380020
         BH        SETEND                                               27400020
         SR        R5,R5               CLEAR REGISTER                   27410023
         IC        R5,0(0,R10)                                          27420020
         SH        R5,LOWLIM           REDUCE SYMBOL TO BASE 0          27440020
         AR        R5,R5               DOUBLE                           27460020
         LH        R9,EVALBR(R5)       FETCH BRANCH OFFSET              27480020
         B         ASMGF3(R9)          GO TO THE ROUTINE                27500020
*                                                                       27520020
EVALBR   DC        AL2(DECINT-ASMGF3)  22 HEX. STRING                   27540020
         DC        AL2(DECINT-ASMGF3)  23 BINARY STRING                 27560020
         DC        AL2(DECINT-ASMGF3)  24 DECIMAL INTEGER               27580020
         DC        AL2(CSD-ASMGF3)     25 CHAR. SELF-DEF. VALUE         27600020
         DC        AL2(ADVINP-ASMGF3)  26 SKIP A NULL SYMBOL            27620020
         DC        AL2(CHARST-ASMGF3)  27 CHAR. STRING                  27640020
         DC        AL2(META-ASMGF3)    28 SETA                          27660020
         DC        AL2(METB-ASMGF3)    29 SETB                          27680020
         DC        AL2(METC-ASMGF3)    2A SETC                          27700020
         DC        AL2(SETEND-ASMGF3)  2B COMMA                         27720020
         DC        AL2(BEGSUB-ASMGF3)  2C BEGIN SUBSTRING               27740020
         DC        AL2(SETARE-ASMGF3)  2D SUBSTRING LEFT PAREN          27760020
         DC        AL2(SBEND-ASMGF3)   2E CLOSING PAREN. OF EXPR.       27780020
         DC        AL2(SBEND-ASMGF3)   2F COMMA BETWEEN EXPR.           27800020
         DC        AL2(SETEND-ASMGF3)  30 ACTUAL ) VALUE                27820020
         DC        AL2(SETARE-ASMGF3)  31 A.R.E. FLAG                   27840020
         DC        AL2(SETEND-ASMGF3)  32 BLANK                         27860020
         DC        AL2(TATTBT-ASMGF3)  33 TYPE ATTRIBUTE                27880020
         DC        AL2(LATTBT-ASMGF3)  34 L ATTRIBUTE                   27900020
         DC        AL2(IATTBT-ASMGF3)  35 I ATTRIBUTE                   27920020
         DC        AL2(SATTBT-ASMGF3)  36 S ATTRIBUTE                   27940020
         DC        AL2(ATTPAR-ASMGF3)  37 N ATTRIBUTE                   27960020
         DC        AL2(ATTPAR-ASMGF3)  38 K ATTRIBUTE                   27980020
         DC        AL2(PARMTR-ASMGF3)  39 PARAMETER                     28000020
         DC        AL2(SYSLST-ASMGF3)  3A SYSLIST                       28020020
         DC        AL2(DUMP-ASMGF3)    3B DUMP                          28040020
DUMP     DC        X'0001'             FORCE DUMP OF CORE               28060020
*                                                                       28080020
*                                                                       28100020
SBEND    OI        SWITCH,X'01'        SET SBCOM, SBCLS SW.             28120020
SETEND   MVI       OPTAB,COMMA         SET END OPR. IN OPTAB            28140020
         B         TSTOP1                                               28160020
*                                                                       28180020
*                                                                       28200020
SETARE   NI        MODESW,X'FE'        SET MODE TO ARE                  28220020
         B         ADVINP                                               28240020
*                                                                       28260020
*  GET   INTEGER ATTRIBUTE                                              28280020
*                                                                       28300020
IATTBT   BAL       R9,ATTPAR           CHECK FOR PARAMETER              28320020
IATT1    BAL       R9,INCPTR                                            28340020
         BAL       R9,GETSC            GET L' AND S'                    28360020
         LCR       R9,R8               FETCH -S'                        28380020
*                                                                       28400020
*                                                                       28420020
*    GO TO TYPE OF INTEGER                                              28440020
         CLI       0(R12),ETYPE        IS TYPE MORE THAN E .Q           28450027
         BNH       FLOAT               BRANCH IF D OR E                 28460027
         CLI       0(R12),HTYPE        IS TYPE MORE THAN H .Q           28470027
         BNH       FIX                 BRANCH IF F, G OR H              28480027
         CLI       0(R12),LTYPE        IS TYPE MORE THAN L .Q           28490027
         BNH       EXTND               BRANCH IF K OR L                 28500027
         CLI       0(R12),PTYPE        IS IT PACKED .Q                  28510027
         BE        PACKED              BRANCH IF YES                    28520027
         CLI       0(R12),ZTYPE        IS IT ZONED .Q                   28530027
         BE        ZONED               BRANCH IF YES                    28540027
         B         DUMP                SAFETY FIRST                     28550027
*                                                                       28560020
*    COMPUTE  I (FLOATING) = 2(L-1)-S            -S-  SCALE             28580020
*    COMPUTE  I (EXT.FLTG) = 2(L-2)-S   L.GT.8   -L-  LENGTH            28600023
*    COMPUTE  I (PACKED)   = 2L-S-1              -I-  INTEGER           28620020
*                                                                       28640020
FLOAT    BCTR      R9,0                -S-1                             28660020
PACKED   A         R9,0(0,R2)          ADD L                            28680020
         A         R9,0(0,R2)          ADD L                            28700020
PACK1    BCTR      R9,0                ADD -1                           28720020
PACK2    ST        R9,0(0,R2)          STORE RESULT                     28740020
PACK3    ST        R2,0(0,R3)                                           28760020
         B         SYMBL                                                28780020
*                                                                       28782023
* IF K TYPE, WE CAN'T TELL WHAT THE TYPE REALLY IS.  IF LENGTH          28784023
*  EXCEEDS 8 BYTES, ASSUME IT IS L-CON.                                 28786023
*                                                                       28788023
EXTND    CLC       2(2,R2),NINEH       IF LENGTH LT 9 BYTES,            28790023
         BL        FLOAT               USE USUAL FLOAT FORMULA          28792023
         BCTR      R9,0                ADJUST FOR                       28794023
         BCTR      R9,0                LOW EXPONENT                     28796023
         B         FLOAT               GO COMPLETE CALC                 28798023
*                                                                       28800020
*    COMPUTE  I (ZONED) = L-S                                           28820020
*                                                                       28840020
ZONED    A         R9,0(0,R2)          L-S                              28860020
         B         PACK2                                                28880020
*./      DELETE    SEQ1=28885023,SEQ2=28895023                          28895027
*                                                                       28900020
*    COMPUTE I (FIXED) = 8L-S-1                                         28920020
*                                                                       28940020
FIX      L         R8,0(0,R2)          LOAD L                           28960020
         SLL       R8,3                8L                               28980020
         AR        R9,R8               8L-S                             29000020
         B         PACK1                                                29020020
*                                                                       29040020
*  GET   LENGTH ATTRIBUTE                                               29060020
*                                                                       29080020
LATTBT   BAL       R9,ATTPAR           CHECK FOR PARAMETER              29100020
LATT1    BAL       R9,INCPTR           ADVANCE POINTERS                 29120020
         BAL       R9,GETSL            GET ATTRIBUTES                   29140020
         B         PACK3                                                29160020
*                                                                       29180020
*  GET   TYPE ATTRIBUTE                                                 29200020
*                                                                       29220020
TATTBT   DS        0H                                                   29240027
         BAL       R9,ATTPAR           CHECK FOR PARAMETER              29260027
*                                                                       29270027
TYPEA    DS        0H                                                   29280027
         BCTR      R12,0               GET BYTE BEFORE TYPE CHAR        29300027
         LA        R5,1                SET THE LENGTH OF TYPE STRING    29320027
         B         CHST2                                                29340020
*                                                                       29360020
*  GET   SCALE ATTRIBUTE                                                29380020
*                                                                       29400020
SATTBT   BAL       R9,ATTPAR           CHECK FOR PARAMETER              29420020
SATT1    BAL       R9,INCPTR           READY POINTERS FOR ENTRY         29440020
         BAL       R9,GETSC            GET S'                           29460020
         ST        R8,0(0,R2)          STORE SCALE ATTRIBUTE            29480020
         B         PACK3                                                29500020
*                                                                       29502025
*        GET K' (COUNT) ATTRIBUTE OF VARIABLE SETC SYMBOL               29504025
*                                                                       29506025
KATTBT   LA        R10,1(0,R10)        BUMP INPUT POINTER               29508025
         MVI       KEXTEST+1,X'F0'     NO SUBSCRIPT SETC IN ARITH MODE  29509025
         BAL       R9,METINT           FIND THE VARIABLE                29510025
KATT1    MVI       KEXTEST+1,X'00'     REVERT BRANCH TO A NOP           29512025
         SR        R8,R8               ZERO A WORK REGISTER FOR K'      29514025
         IC        R8,1(,R12)          INSERT K' (COUNT) WE WANT        29516025
         B         METB1               CONTINUE                         29518025
*                                                                       29520020
*        GET K' (COUNT) ATTRIBUTE OF VARIABLE SETA SYMBOL         V7A56 29522028
*                                                                 V7A56 29522528
KATTBTA  DS        0H                                             V7A56 29523028
         LA        R10,1(,R10)         BUMP INPUT POINTER         V7A56 29523528
         MVI       KEXTESTA+1,X'F0'    NO SUBSCRIPT SETA IN ARITH V7A56 29524028
         BAL       R9,METINT           FIND THE VARIABLE          V7A56 29524528
KATT1A   DS        0H                                             V7A56 29525028
         MVI       KEXTESTA+1,X'00'    REVERT BRANCH TO NOP       V7A56 29525528
         MVC       SAV12(4),0(R12)     ALIGN THE SETA VALUE       V7A56 29526028
         L         R8,SAV12            GET SETA VALUE             V7A56 29526528
         BAL       R9,ABCD             CONVERT TO PRINTABLE       V7A56 29527028
         LR        R8,R5               RESULTING STRING LENGTH    V7A56 29527528
         B         METB1               CONTINUE                   V7A56 29528028
*                                                                 V7A56 29528528
*        GET K' (COUNT) ATTRIBUTE OF VARIABLE SETB SYMBOL         V7A56 29529028
*                                                                 V7A56 29529528
KATTBTB  DS        0H                                             V7A56 29530028
         LA        R10,1(,R10)         BUMP INPUT POINTER         V7A56 29530528
         MVI       KEXTESTB+1,X'F0'    NO SUBSCRIPT SETB IN ARITH V7A56 29531028
         BAL       R9,METINT           FIND THE VARIABLE          V7A56 29531528
KATT1B   DS        0H                                             V7A56 29532028
         MVI       KEXTESTB+1,X'00'    REVERT BRANCH TO NOP       V7A56 29532528
         LA        R8,1                ALWAYS, ALWAYS ONE         V7A56 29533028
         B         METB1               CONTINUE                   V7A56 29533528
*                                                                 V7A56 29534028
*    PROCESS DECIMAL INTEGER OR CHAR. SELF-DEF. VALUE                   29540020
*                                                                       29560020
CSD      TM        *,255               FORCE CC=1                       29580020
**NOTE** DECINT USES CONDITION CODE AS SWITCH. CC=1 FOR CSDT.           29600020
DECINT   LA        R12,1(0,R10)                                         29620020
         LA        R10,4(0,R10)        ADVANCE R10                      29640020
DECA     BAL       R9,INCPTR           READY POINTERS FOR ENTRY         29660020
         MVC       1(3,R2),0(R12)      STORE VALUE IN GT                29680020
         BNL       SYMBL               BR IF NOT CSDT                   29700020
         TR        1(3,R2),TRSLTB      TRANSLATE BACK TO EBCDIC         29720020
         B         SYMBL                                                29740020
DECADENT SR        R9,R9               GET TYPE BYTE FROM PARAM         29760020
         IC        R9,1(0,R12)         TABLE                            29780020
         LCR       R9,R9               SET CC=1 IF CSDT                 29800020
         AH        R9,HX24                                              29820020
         LA        R12,2(0,R12)        POINT TO BINDARY VALUE           29840020
         B         DECA                                                 29860020
*                                                                       29880020
*    PROCESS SETC VARIABLE                                              29900020
*                                                                       29920020
METC     BAL       R9,METINT                                            29940020
METC1    LA        R12,1(,R12)         POINT AT LENGTH BYTE             29950025
METC4    SR        R5,R5               ZERO REGISTER                    29960023
         IC        R5,0(,R12)          FETCH LENGTH OF STRING           29970023
         TM        MODESW,CREMSK       IS IT C.R.E.                     29980020
         BO        CHST1                                                30000020
*        PROCESS SETC VARIABLE IN ARITHMETIC MODE                       30020025
         LA        R12,1(,R12)         POINT AT START OF STRING         30021025
         LTR       R5,R5               TEST IF NULL STRING              30024025
         BZ        SETCER              ERROR IF SO                      30028025
         SR        R0,R0               CLEAR PICK-UP REG                30032025
         LR        R8,R0               CLEAR ACCUMULATOR                30036025
         CLI       0(R12),9            TEST IF DECIMAL                  30040025
         BNH       METCD               BR IF SO                         30044025
*        TEST EXTEN OPTION                                              30048025
         TM        PARBYT1,X'04'       WAS EXTEN SPECIFIED .Q           30052027
         BZ        SETCER              NO, THEN ONLY D.S.D.T VALID      30054027
*        ASSUME C, X, OR B SELF-DEFINING TERM                           30056025
         S         R5,THREE            COMPUTE LENGTH OF DATA           30060025
         BNH       SETCER              ERROR IF NO CHARS                30064025
         CLI       1(R12),X'31'        CHECK QUOTE AT START             30068025
         BNE       SETCER              ERROR IF NOT                     30072025
         LA        R9,2(R5,R12)        CHECK QUOTE AT END               30076025
         CLI       0(R9),X'31'                                          30080025
         BNE       SETCER              ERROR IF NOT                     30084025
         LR        R9,R12              SAVE PTR TO SETC START           30088025
         LA        R12,2(,R12)         POINT TO START OF DATA           30092025
         CLI       0(R9),X'0C'         TEST IF TYPE C                   30096025
         BE        METCC               BR IF SO                         30100025
         CLI       0(R9),X'0B'         TEST IF TYPE B                   30104025
         BE        METCB               BR IF SO                         30108025
         CLI       0(R9),X'21'         TEST IF TYPE X                   30112025
         BNE       SETCER              ERROR IF NOT                     30116025
*        HEX SELF DEFINING TERM                                         30120025
         C         R5,EIGHT            TEST FOR TOO BIG                 30124025
         BH        SETCER              ERROR IF SO                      30128025
METCX1   IC        R0,0(,R12)          PICK UP CHAR                     30132025
         C         R0,=F'15'           CHECK HEX CHAR                   30136025
         BH        SETCER              ERROR IF NOT                     30140025
         SLL       R8,4                SHIFT ACCUMULATOR                30144025
         AR        R8,R0               ADD CHAR TO ACCUMULATOR          30148025
         LA        R12,1(,R12)         POINT AT NEXT CHAR               30152025
         BCT       R5,METCX1           LOOP ALONG STRING                30156025
         B         METC9               DONE                             30160025
*        BINARY SELF DEFINING TERM                                      30164025
METCB    C         R5,=F'32'           TEST FOR TOO BIG                 30168025
         BH        SETCER              ERROR IF SO                      30172025
METCB1   IC        R0,0(,R12)          PICK UP CHAR                     30176025
         C         R0,ONE              TEST BINARY CHAR                 30180025
         BH        SETCER              ERROR IF NOT                     30184025
         SLL       R8,1                SHIFT ACCUMULATOR                30188025
         AR        R8,R0               ADD CHAR TO ACCUMULATOR          30192025
         LA        R12,1(,R12)         POINT AT NEXT CHAR               30196025
         BCT       R5,METCB1           LOOP ALONG STRING                30200025
         B         METC9               DONE                             30204025
*        CHARACTER SELF DEFINING TERM                                   30208025
METCC    LR        R9,R0               CLEAR PICKUP REGISTER            30212025
METCC1   IC        R9,0(,R12)          PICK UP ONE CHAR                 30216025
         CLI       0(R12),X'31'        TEST IF QUOTE                    30220025
         BE        *+12                                                 30224025
         CLI       0(R12),X'2D'        TEST IF AMPERSAND                30228025
         BNE       METCC2                                               30232025
         S         R5,ONE              DECREMENT LENGTH AGAIN           30236025
         BNH       SETCER              ERROR IF ZERO                    30240025
         CLC       0(1,R12),1(R12)     CHECK QUOTE OR AMPERSAND DOUBLE  30244025
         BNE       SETCER              ERROR IF NOT                     30248025
         LA        R12,1(,R12)         BUMP STRING PTR                  30252025
METCC2   IC        R0,TRSLTB(R9)       GET EBCDIC VALUE                 30256025
         CL        R8,=X'00FFFFFF'     TEST FOR OVERFLOW                30260025
         BH        SETCER              ERROR IF 4 CHARS ALREADY         30264025
         SLL       R8,8                SHIFT ACCUMULATOR                30268025
         AR        R8,R0               ADD CHAR TO ACCUMULATOR          30272025
         LA        R12,1(,R12)         POINT AT NEXT CHAR               30276025
         BCT       R5,METCC1           LOOP ALONG STRING                30280025
         B         METC9               DONE                             30284025
*        DECIMAL SELF DEFINING TERM                                     30288025
METCD    IC        R0,0(,R12)          PICK UP CHAR                     30290025
         C         R0,NINE             TEST DECIMAL                     30292025
         BH        SETCER              ERROR IF NOT                     30294025
         C         R8,=A((X'7FFFFF'*X'100'+X'FF')/10)  TEST OVERFLOW    30296025
         BH        SETCER              ERROR IF SHIFTING MAKES NEG      30298025
         MH        R8,TENH             SHIFT ACCUMULATOR BY 10          30300025
         AR        R8,R0               ADD CHAR TO ACCUMULATOR          30302025
         BO        SETCER              ERROR IF OVERFLOW                30304025
         LA        R12,1(,R12)         POINT AT NEXT INPUT CHAR         30306025
         BCT       R5,METCD            LOOP ALONG STRING                30308025
*        DONE PROCESSING SETC VARIABLE IN ARITHMETIC MODE               30310025
METC9    BAL       R9,INCPTR           INCREMENT POINTERS               30312025
         ST        R8,0(,R2)           STORE RESULT                     30314025
         B         SYMBL               DONE                             30316025
*                                                                       30320020
*    PROCESS SETA VARIABLE                                              30340020
*                                                                       30360020
META     BAL       R9,METINT                                            30380020
META3    TM        MODESW,CREMSK       IS IT C.R.E.                     30400020
         BZ        META2                                                30420020
         MVC       SAV12(4),0(R12)     FETCH BINARY ENTRY               30440020
         L         R8,SAV12            LOAD BINARY WORD                 30460020
META1    BAL       R9,ABCD             CONVERT TO DECIMAL               30480020
         B         CHST2                                                30500020
META2    BAL       R9,INCPTR           ADVANCE POINTERS                 30520020
         MVC       0(GTLEN,R2),0(R12)  STORE VALUE IN GT                30540020
         B         SYMBL                                                30560020
*                                                                       30580020
*    PROCESS SETB VARIABLE                                              30600020
*                                                                       30620020
METB     BAL       R9,METINT                                            30640020
         IC        R5,BITNO            STORE BIT NO.                    30660020
METB3    BAL       R9,FNDBIT           FIND SPECIFIED BIT               30680020
         TM        MODESW,CREMSK       IS IT C.R.E.                     30700020
         BO        META1                                                30720020
METB1    BAL       R9,INCPTR           READY POINTERS FOR ENTRY         30740020
         ST        R8,0(0,R2)          STORE RESULT IN GTLIST           30760020
         B         SYMBL                                                30780020
*                                                                       30800020
*  PROCESS PARAMETER                                                    30820020
*                                                                       30840020
PARMTR   MVC       5(3,R3),0(R10)                                       30860020
         MVI       4(R3),VPAR                                           30880020
         BCTR      R10,0               BACK UP INPUT PTR.               30900020
         B         ATTP                                                 30920020
*                                                                       30940020
*   PROCESS N ATTRIBUTE                                                 30960020
*                                                                       30980020
NATT1    LA        R10,2(0,R10)                                         31000020
         L         R8,PARADR           FETCH PAR. TABLE ADDR.           31020020
         IC        R5,0(0,R8)          FETCH N ATTRIB                   31040020
         LR        R8,R5                                                31060020
         B         METB1                                                31080020
*                                                                       31100020
*    STORE CHARACTER STRING                                             31120020
*                                                                       31140020
CHARST   IC        R5,1(0,R10)         FETCH LENGTH OF STRING           31160020
         LA        R12,1(0,R10)        GET ADDR. OF BYTE BEFORE STRING  31180020
         LA        R10,2(R10,R5)       ADVANCE INPUT POINTER            31200020
CHST2    BAL       R9,PUTST                                             31220020
         B         SYMBL                                                31240020
CHST1    EQU       CHST2                                                31260020
*                                                                       31280020
*   PROCESS SYSLIST                                                     31300020
*                                                                       31320020
SYSLST   MVI       4(R3),VPAR          SIMULATE PARAMETER               31340020
SYS1     OI        MODESW,X'80'        SET SYSLIST SWITCH               31360020
         LA        R10,1(0,R10)                                         31380020
         B         ATTP2                                                31400020
*                                                                       31420020
*    SUBROUTINES                                                        31440020
*                                                                       31460020
*                                                                       31480020
PUTST    TM        MODESW,CREMSK                                        31500020
         BZ        SETCER                                               31520020
         LH        R8,0(0,R6)          STORE PRESENT LENGTH OF BUFFER   31540020
         TM        MODESW,STRGSW       IS THERE CONCATENATION           31560020
         BO        ADDS                                                 31580020
         LA        R3,PTRLEN(0,R3)     PREPARE R3 FOR ENTRY             31600020
         ST        R6,0(0,R3)                                           31620020
         MVI       0(R3),VSETC                                          31640020
         OI        MODESW,STRGSW       SET FIRST TIME SWITCH            31660020
         B         ADDSTG                                               31680020
ADDS     OI        MODESW,CONCAT       SET CONCAT SWITCH                31700020
ADDSTG   LA        R11,2(R6,R8)        ADDR. FOR NEXT ENTRY             31720020
         AR        R8,R5                                                31740020
         LTR       R5,R5               IS IT NULL STRING                31760020
         BCR       BZ,R9                                                31780020
         TM        MODESW,X'04'        IS IT SUBSTRING MODE             31800020
         BO        ADDS1                                                31820020
         CH        R8,H255             STRING GREATER THAN 255          31840020
         BH        ERRST2                                               31860020
ADDS1    STH       R8,0(0,R6)                                           31880020
         BCTR      R5,0                TRUE L - 1                       31900020
         EX        R5,STORE            MOVE STRING TO BUFFER            31920020
         BR        R9                                                   31940020
*                                                                       31960020
*                                                                       31980020
*                                                                       32000020
*   ***  *  GETSL  ****                                                 32020020
*                                                                       32040020
*  FUNCTION - GET SCALE AND LENGTH ATTRIBUTE                            32060020
*  PARAMETERS-                                                          32080020
*                R12 - POINTS TO TYPE BYTE OF DICTIONARY ENTRY          32100020
*    RESULTS-    SCALE - IN R8                                          32120020
*                LENGTH - IN SPECIFIC GT (ASSIGNED BY R2)               32130027
*                                                                       32135027
*        TYPES DEFGH,KL,P AND Z ALLOWED FOR I' AND S' ATTRIBUTE         32140027
GETSC    DS        0H                                                   32145027
         CLI       3(R12),X'80'        IS THIS EXTENDED EQU .Q          32150027
         BE        SLIERR              YES, I' AND S' ARE MEANINGLESS   32155027
         CLI       0(R12),DTYPE        IS IT LESS THAN D .Q             32160027
         BL        SLIERR              ERROR IF SO                      32165027
         CLI       0(R12),HTYPE        IS IT MORE THAN H .Q             32170027
         BNH       GETSL1              BRANCH IF D,E,F,G OR H           32175027
         CLI       0(R12),KTYPE        IS IT LESS THAN K .Q             32180027
         BL        SLIERR              ERROR IF SO                      32185027
         CLI       0(R12),LTYPE        IS IT MORE THAN L .Q             32190027
         BNH       GETSL1              BRANCH IF K OR L                 32195027
         CLI       0(R12),PTYPE        IS IT PACKED .Q                  32200027
         BE        GETSL1              BRANCH IF P                      32205027
         CLI       0(R12),ZTYPE        IS IT ZONED .Q                   32210027
         BE        GETSL1              BRANCH IF Z                      32215027
         B         SLIERR              ELSE NOT ALLOWED, ERROR          32220023
*                                                                       32230023
*        GENUINE TYPES M,N,O,T,U,$ NEVER SUPPORTED FOR L' ATTRIBUTE     32232027
*        ALL OTHERS A-Z SUPPORTED IF NOEXTEN                            32234027
*        ALL OTHERS X'00'-X'FF' SUPPORTED IF EXTEN                      32236027
GETSL    DS        0H                                                   32238027
         CLI       0(R12),MTYPE        IS TYPE LESS THAN M .Q           32240027
         BL        GETSLOK             BRANCH IF YES                    32242027
         CLI       0(R12),OTYPE        IS TYPE MORE THAN O .Q           32244027
         BNH       GETSLERR            POSSIBLE ERROR IF M,N OR O       32246027
         CLI       0(R12),TTYPE        IS TYPE LESS THAN T .Q           32248027
         BL        GETSLOK             BRANCH IF YES                    32250027
         CLI       0(R12),UTYPE        IS TYPE MORE THAN U .Q           32252027
         BNH       GETSLERR            POSSIBLE ERROR IF T OR U         32254027
         CLI       0(R12),WETYPE       IS TYPE $ .Q                     32256027
         BNE       GETSLOK             CONTINUE IF NOT                  32258027
GETSLERR DS        0H                                                   32260027
         CLI       3(R12),X'80'        IS THIS EXTENDED EQU .Q          32262027
         BNE       SLIERR              ERROR IF NOT                     32264027
GETSLOK  DS        0H                                                   32266027
         TM        PARBYT1,X'04'       IS EXTEN ON .Q                   32268027
         BO        GETSL1              ALL ELSE OK IF YES               32270027
         CLI       0(R12),ATYPE        IS TYPE LESS THAN A .Q           32272027
         BL        SLIERR              ERROR IF YES                     32274027
         CLI       0(R12),ZTYPE        IS TYPE MORE THAN Z .Q           32276027
         BH        SLIERR              ERROR IF YES                     32278027
GETSL1   DS        0H                                                   32280027
         MVC       FWRD+2(2),1(R12)    ALIGN L' - 2 BYTES               32290027
         LH        R8,FWRD+2           GET LENGTH-1                     32300027
         A         R8,ONE              GET TRUE LENGTH                  32320027
         ST        R8,0(0,R2)                                           32340020
         SR        R8,R8               ZERO POTENTIAL SCALE             32345027
         CLI       3(R12),X'80'        NO SCALE FOR EXTENDED EQU  V7A03 32350028
         BCR       8,R9                RETURN NOW IF YES                32355027
         MVC       FWRD+2(2),3(R12)    STORE SCALE ATTRIBUTE            32360020
         LH        R8,FWRD+2           PROPAGATE SIGN                   32380020
         BR        R9                                                   32400020
*                                                                       32420020
*                                                                       32440020
*   ***  *  INCPTR  ****                                                32460020
*                                                                       32480020
*    FUNCTION-  1. ADVANCE R3 AND R2 FOR NEXT ENTRY                     32500020
*               3. SET GT TO ZERO                                       32520020
*               4. STORE POINTER TO GT IN R3                            32540020
*                                                                       32560020
INCPTR   LA        R3,PTRLEN(0,R3)     ADVANCE POINTER LIST             32580020
         LA        R2,GTLEN(0,R2)      ADVANCE GTLIST POINTER           32600020
         MVC       0(GTLEN,R2),ZERO    ZERO OUT GT                      32620020
         ST        R2,0(0,R3)          STORE ADDRESS OF GT              32640020
         BR        R9                                                   32660020
*                                                                       32680020
*   ***  *  FNDBIT  ****                                                32700020
*                                                                       32720020
*                 R5 - BIT NO. OF BOOLEAN VALUE                         32740020
*                  R12  -  ADDR. OF BYTE                                32760020
*  RESULT-                                                              32780020
*              R8 - CONTAINS DECIMAL 0 OR 1 IN LOW-ORDER BIT            32800020
*                                                                       32820020
FNDBIT   SR        R8,R8               ZERO OUT REG.                    32840020
         IC        R5,STG(R5)          STORE APPROPRIATE MASK           32860020
         EX        R5,TSTMSK                                            32880020
         BCR       BZ,R9                                                32900020
         LA        R8,1                                                 32920020
         BR        R9                                                   32940020
*                                                                       32960020
*                                                                       32980020
*   ***  *  ABCD   ****                                                 33000020
*                                                                       33020020
*  FUNCTION-   CONVERT BINARY TO DECIMAL                                33040020
*                                                                       33060020
*  PARAMETERS-                                                          33080020
*                R8 - CONTAINS BINARY VALUE                             33100020
*  RESULT-                                                              33120020
*            R12 - ADDR. OF BYTE BEFORE STRING                          33140020
*            R5 - LENGTH OF STRING                                      33160020
*                                                                       33180020
ABCD     CVD       R8,DBLWRD           CONVERT REGISTER                 33200020
         UNPK      UNPAKD(15),DBLWRD(8)  AND UNPACK                     33220020
         MVZ       UNPAKD(15),ZEROS    REMOVE ZONES                     33240020
         STM       R1,R2,SAV12         SAVE REGISTERS R1 AND R2         33260020
         LA        R1,UNPAKD                                            33280020
         TRT       UNPAKD(15),FINDEC   LOCATE FIRST NON-ZERO BYTE       33300020
         BZ        ALLZER                                               33320020
         LCR       R5,R1                                                33340020
         LA        R5,UNPAKD+15(R5)    TRUE L                           33360020
         CH        R5,H255             STRING GREATER THAN 255          33380020
         BH        ERRST2                                               33400020
ABCD1    LR        R12,R1                                               33420020
         BCTR      R12,0               ADDRESS BEFORE STRING            33440026
         LM        R1,R2,SAV12         RESTORE REGISTERS R1 AND R2      33460026
         BR        R9                                                   33480020
ALLZER   LA        R5,1                LENGTH IS ONE                    33500020
         B         ABCD1                                                33520020
*                                                                       33540020
*                                                                       33560020
*   ***  *  METINT  ****                                                33580020
*                                                                       33600020
*    FUNCTION-  1. INITIALIZE FOR SETA,  SETB, SETC, VALUES             33620020
*               2. CHECK FOR DIMENSIONED SET VARIABLES                  33640020
*                                                                       33660020
METINT   MVC       BITNO(1),3(R10)     STORE BIT NUMBER                 33680026
         BAL       R8,BASONE           COMPUTE TRUE ADDRESS             33700020
         ST        R12,SAVADR          STORE RESULT ADDRESS             33720020
         MVC       SAVLEN(1),0(R12)    SAVE MAX LENGTH SPEC FOR SETC    33730025
         IC        R5,1(0,R10)         STORE TYPE OF VARIABLE           33740020
         LA        R10,5(0,R10)        ADVANCE INPUT POINTER            33760020
         CLI       0(R10),SPAREN       IS IT DIMENSIONED SET VARIABLE   33780020
         BCR       BNE,R9              RETURN IF NOT DIMENSIONED        33800020
         LA        R3,PTRLEN(0,R3)     ADVANCE POINTER LIST             33820020
         ST        R12,0(0,R3)         STORE TRUE ADDR. AS POINTER      33840020
         STC       R5,0(0,R3)                                           33860020
         B         NOFOR                                                33880020
*                                                                       33900020
*                                                                       33920020
*    **  ** BASADR ****                                                 33940020
*                                                                       33960020
*    FUNCTION-   OBTAIN TRUE ADDRESS OF  2-BYTE POINTER USING GDBASE    33980020
*          BASADR ENTRY-  2-BYTE POINTER AT 2(R10)                      34000020
*                                                                       34020020
*    RESULT-                                                            34040020
*          R12-  CONTAINS TRUE ADDRESS                                  34060020
*                                                                       34080020
BASONE   BCTR      R10,0                                                34100020
         L         R12,GDP             INITIALIZE W/ GLOBAL BASE        34120020
         TM        BITNO,GLOBAL        GLOBAL SET VARIABLE              34140020
         BO        BAS                                                  34160020
BASADR   LR        R12,R7              FETCH LOCAL BASE                 34180020
BAS      MVC       FWRD+2(2),2(R10)                                     34200020
         A         R12,FWRD            TRUE ADDR.                       34220020
         NI        BITNO,BITSW         TURN OFF BIT SWITCH              34240020
         BR        R8                                                   34260020
*                                                                       34280020
*   ****  POSPAR  ****                                                  34300020
*                                                                       34320020
*  FUNCTION-   LOCATE PARAMETER ENTRY IN TABLE                          34340020
*  PARAMETER-                                                           34360020
*         R5 - CONTAINS PARAMETER NO.                                   34380020
*                                                                       34400020
* RESULT-                                                               34420020
*         R12 - ADDR. OF PARAMETER ENTRY                                34440020
*                                                                       34460020
POSPAR   ST        R1,STOREGS          SAVE AWAY REGISTERS              34480023
         STM       R6,R7,STOREGS+4                                      34482523
         ST        R9,STOREGS+12                                        34485023
         CLI       BUFFCB+7,8          IN OPEN CODE .Q            V7A49 34485528
         BNE       POSPAR01            BRANCH IF NOT              V7A49 34486028
         MVC       PAD(8),PADOP        ENTER THE OPEN CODE PTRS   V7A49 34486528
POSPAR01 DS        0H                                             V7A49 34487028
         L         R9,PAD              GET CORRECT PARLIST              34487523
         LH        R6,0(0,R9)          LENGTH PARAMETER PTR TABLE       34490023
         S         R6,TWO              BYTES FOR POS PAR COUNTS         34492523
         LA        R9,0(R6,R9)         END PARAMETER PTR TABLE -2       34495023
         SR        R7,R7               ZERO POS PARS IN PROTOTYPE       34497523
         SR        R1,R1               ZERO POS PARS IN MACRO CALL      34500023
         IC        R7,1(0,R9)          NO OF POS PARS IN PROTOTYPE      34502523
         IC        R1,0(0,R9)          NO OF POS PARS IN MACRO CALL     34505023
         A         R7,SIX              SYSTEM SYMBOLS                   34507525
         A         R1,SIX              SYS-NDX,ECT,DATE,TIME,STYP,PARM  34510025
         TM        MODESW,X'80'        TEST FOR SYSLIST MODE            34512523
         BO        SYSLPROC            GO PROCESS SYSLIST NO OF PARAM   34515023
         CR        R5,R7               COMP PAR NO TO NO POS IN PROTO   34517523
         BH        KYWDPROC            HIGH-PROCESS AS A KEYWORD        34520023
         CR        R5,R1               COMP PAR NO TO NO POS IN CALL    34522523
         BH        POSNULL             LO-NOT ENOUGH POS PAR IN CALL    34525023
         B         POSP                BR PAST KYWRDS PROCESS           34527523
KYWDPROC CR        R7,R1               SEE IF ENOUGH POS PAR IN CALL    34530023
         BH        POSP                NO-KEYWRD NO OK AS IS            34532523
         SR        R1,R7               EXCESS CALLED MINUS DEFINED POS  34535023
         AR        R5,R1               SET TO PROPER KYWRD PAR NO       34537523
         B         POSP                                                 34540023
SYSLPROC C         R5,SIX              SYSLIST MUST BE PAST SYSTEM AND  34542525
         BL        PARERR0             LABEL PARAMETERS                 34545026
         CR        R5,R1               SEE IF SYSLIST PAST POS CALLED   34547523
         BH        POSNULL             RETURN NULL STRING               34550023
POSP     L         R1,STOREGS          RESTORE REGISTERS                34552523
         LM        R6,R7,STOREGS+4                                      34555023
         L         R9,STOREGS+12                                        34557523
         L         R12,PARADR          BEGINNING ADDRESS OF PARAMETERS  34560023
         AR        R5,R5               DOUBLE PAR. NO.                  34580020
         BCR       BZ,R11                                               34600020
         BM        PARERR                                               34620020
         L         R8,PAD              GET CORRECT PARLST               34640020
         LH        R9,0(R8,R5)                                          34660020
         A         R5,TWO              ADD TWO BYTES FOR POS PAR COUNT  34670023
         N         R9,H01              DROP POSSIBLE PROPAGATED SIGN    34680020
         AR        R12,R9                                               34700020
         CH        R5,0(R8)                                             34720020
         BL        POSP1                                                34740020
*                                       TO RETURN NULL STRING           34744023
POSNULL  L         R1,STOREGS          RESTORE REGISTERS                34748023
         LM        R6,R7,STOREGS+4                                      34752023
         L         R9,STOREGS+12                                        34756023
         LA        R12,NULCON          USE NULL CHAR. STRING            34760020
POSP1    ST        R12,SUBADR                                           34780020
         SR        R5,R5                                                34800020
         BR        R11                                                  34820020
*                                                                       34840020
*   ****  POSSUB  ****                                                  34860020
*                                                                       34880020
*  FUNCTION -   LOCATE POSITION OF SUBLIST OPERAND                      34900020
*                                                                       34920020
*  PARAMETER-    R12 - ENTRY ADDR. OF PARAMETER                         34940020
*                                                                       34960020
*  RESULT-    R12 - POINTS TO TYPE OF N-TH PARAMETER                    34980020
*                                                                       35000020
POSSUB   TM        MODESW,X'C0'        SYSLIST W/ TWO EXPR.  BITS 0,1   35020020
         BO        POSS1                                                35040020
         BM        SUB4                                                 35060020
         CLI       5(R3),VPAR          IS IT SUBSCRIPT. PARAM.          35080020
         BNE       SUB4                                                 35100020
POSS1    L         R5,4(0,R2)                                           35120020
         LTR       R5,R5                                                35140020
         BNP       PARERR              BR IF SUBSCRIPT ZERO OR MINUS    35160026
         CLI       1(R12),VSUB         SUBLIST ENTRY                    35200020
         BNE       POSS3                                                35220020
         SR        R8,R8               INITIALIZE COUNTER TO ZERO       35240020
         LA        R12,7(0,R12)        ADV. TO FIRST PAR. OF SUBLIST    35260020
POSS     LA        R8,1(0,R8)          INCREMENT COUNTER                35280020
         CR        R8,R5               IS IT SOUGHT PARAMETER           35300020
         BE        POSSEX                                               35320020
         MVC       FWRD+2(2),1(R12)                                     35340020
         LH        R11,FWRD+2          FETCH LENGTH                     35360020
         LA        R12,3(R12,R11)      GET TO NEXT PARAMETER            35380020
         CLI       0(R12),X'30'        END OF PARAMETER ENTRY           35400020
         BNE       POSS                                                 35420020
*                                                                       35440020
*   SUBLIST REQUEST GREATER THAN NO. OF OPERANDS                        35460020
*   NULL STRING IS PRODUCED                                             35480020
*                                                                       35500020
POSS4    LA        R12,NULCON          USE NULL CHAR. STRING            35520020
         B         POSS2                                                35540020
POSSEX   LA        R12,3(0,R12)        ADV. TO TYPE BYTE                35560020
POSS2    ST        R12,SUBADR                                           35580020
         SR        R5,R5                                                35600020
         BR        R9                                                   35620020
POSS3    C         R5,ONE                                               35640020
         BCR       BE,R9                                                35660020
         B         POSS4                                                35680020
*                                                                       35780020
*   ****  ATTPAR  ****                                                  35800020
*                                                                       35820020
*  FUNCTION-   CHECK FOR PARAMETER                                      35840020
*      R10 - POINTS TO ATTRIBUTE FLAG                                   35860020
*                                                                       35880020
ATTPAR   MVC       4(4,R3),0(R10)      STORE FLAGS                      35900020
         CLI       1(R10),VSYLST       IS IT SYSLIST                    35920020
         BNE       ATPAR1                                               35940020
         CLI       0(R10),NATT         N ATTRIB                         35960020
         BNE       ATPAR2                                               35980020
         CLI       2(R10),SPAREN                                        36000020
         BNE       NATT1                                                36020020
ATPAR2   LA        R10,1(0,R10)                                         36040020
         B         SYS1                                                 36060020
ATPAR1   CLI       1(R10),VPAR         IS IT A SYMBOLIC REF .Q          36080025
         BE        ATTP                                                 36100020
         CLI       1(R10),VSETC        IS IT EXTENDED K' .Q             36110025
         BE        KATTBT              YES, EVALUATE EXTENDED K'        36115025
         CLI       1(R10),VSETA        EXTENDED K' OF SETA .Q     V7A56 36116028
         BE        KATTBTA             BRANCH IF YES              V7A56 36117028
         CLI       1(R10),VSETB        EXTENDED K' OF SETB .Q     V7A56 36118028
         BE        KATTBTB             BRANCH IF YES              V7A56 36119028
         BAL       R8,BASADR                                            36120020
         LA        R10,4(0,R10)                                         36140020
         BR        R9                                                   36160020
ATTP     LA        R10,5(0,R10)                                         36180020
         CLI       0(R10),SPAREN                                        36200020
         BNE       ATTP1                                                36220020
ATTP2    LA        R3,PTRLEN(0,R3)                                      36240020
         B         NOFOR                                                36260020
ATTP1    IC        R5,7(0,R3)          FETCH PAR. NO.                   36280020
         BAL       R11,POSPAR                                           36300020
*                                                                       36320020
*   ****  GETVAL  ****                                                  36340020
*                                                                       36360020
*  FUNCTION-   GET VALUE FROM PARAMETER TABLE                           36380020
*                                                                       36400020
GETVAL   CLI       4(R3),VATRREF       TYPE ATTRIBUTE REFERENCE         36420027
         BE        TYPEA                                                36440020
         CLI       4(R3),NATT          N ATTRIBUTE                      36460020
         BE        NFETCH                                               36480020
         BL        LSI                                                  36500020
         CLI       4(R3),KATT          K ATTRIB                         36520020
         BNE       PARCHK                                               36540020
KTEM     BAL       R9,POSK             POSITION FOR K ATTRIB            36560020
         B         METB1                                                36580020
PARCHK   CLI       7(R3),X'04'         IS IT A SYSTEM PARAMETER         36600023
         BH        PARCK3              BRANCH IF NOT                    36620023
         CLI       7(R3),X'00'         IS IT PAR. 0 - SYSNDX            36630023
         BNE       PARCK1              BRANCH IF NOT                    36640023
         TM        MODESW,CREMSK       IS IT C.R.E.                     36660020
         BO        PARCK1                                               36680020
         LA        R12,7(0,R12)        POINT TO L BYTE  SYSNDX A.R.E.   36700020
         B         META2                                                36720020
PARCK1   LA        R12,2(0,R12)        POINT TO L BYTE  SYSNDX C.R.E.   36740020
         B         METC4               OR CSECT                         36760020
PARCK3   CLI       1(R12),VSYM         SYMBOL ENTRY                     36780020
         BNE       PARCK4                                               36800020
         TM        MODESW,CREMSK                                        36820020
         BZ        SETCER                                               36840020
         LA        R12,8(0,R12)        POINT TO L BYTE                  36860020
         B         METC4                                                36880020
PARCK4   CLI       1(R12),VSUB         ENTRY A SUBLIST                  36900020
         BE        SUBVAL                                               36920020
         CLI       1(R12),VCHAR        CHAR. ENTRY                      36940020
         BE        PARCK1                                               36960020
         TM        MODESW,CREMSK                                        36980020
         BZ        DECADENT                                             37000020
         LA        R12,6(0,R12)                                         37020020
         B         METC4                                                37040020
SUBVAL   LA        R12,6(0,R12)        POINT TO N ATTRIB OF ENTRY       37060020
         MVC       SAV12(1),MODESW                                      37080020
SUBVL1   LA        R5,1                                                 37100020
         BAL       R9,PUTST            PUTOUT CHARACTER                 37120020
         CLI       1(R12),RPARVL       IS IT END OF SUBLIST             37140020
         BNE       SUBVL2                                               37160020
         NI        MODESW,X'DF'                                         37180020
         TM        SAV12,STRGSW                                         37200020
         BZ        SYMBL                                                37220020
         OI        MODESW,CONCAT                                        37240020
         B         SYMBL                                                37260020
SUBVL2   LA        R12,4(0,R12)                                         37280020
         BAL       R9,POSK             POSITION FOR NEXT OPERAND        37300020
         LR        R5,R8                                                37320020
         LTR       R5,R5                                                37340020
         BZ        SUBVL1                                               37360020
         BAL       R9,PUTST                                             37380020
*                  PUTST REDUCES R5 BY 1                                37400020
         LA        R12,1(R12,R5)                                        37420020
         B         SUBVL1                                               37440020
LSI      CLI       1(R12),VSUB         PARAM. ENTRY A SUBLIST           37460020
         BNE       LSISYM                                               37480020
         LA        R12,10(0,R12)       POINT TO FIRST OPERAND           37500020
LSISYM   CLI       1(R12),VSYM         PARAM. ENTRY A SYMBOL            37520020
         BNE       SLIERR                                               37540020
         LA        R12,2(0,R12)        POINT TO TYPE ATTRIB             37560020
         CLI       4(R3),IATT          L I S ATTRIBUTE                  37580020
         BE        IATT1                                                37600020
         BL        LATT1                                                37620020
         B         SATT1                                                37640020
NFETCH   SR        R8,R8               ZERO OUT REG.                    37660020
         CLI       1(R12),VSUB         SUBLIST ENTRY                    37680020
         BE        NSUB                BRANCH IF YES                    37700027
         CLI       0(R12),OTYPE        TYPE - OMITTED .Q                37720027
         BE        METB1               N' EQUALS ZERO FOR OMITTED       37740027
         LA        R8,1                OTHERWISE N' EQUALS ONE          37760027
         B         METB1                                                37780020
NSUB     IC        R8,6(0,R12)         FETCH N ATTRIB.                  37800020
         B         METB1                                                37820020
*                                                                       37840020
*   ****  POSK  ****                                                    37860020
*                                                                       37880020
* FUNCTION-   GET POSITION FOR K ATTRIBUTE                              37900020
*                                                                       37920020
*        R12 - CONTAINS ADDRESS                                         37940020
*        R8- CONTAINS VALUE                                             37960020
*                                                                       37980020
POSK     SR        R8,R8               ZERO THE EVENTUAL LENGTH         38000025
         CLI       1(R12),VSYM         ENTRY A SYMBOL                   38020020
         BE        POSK2                                                38040020
         CLI       1(R12),VSUB         ENTRY A SUBLIST                  38060020
         BE        POSK3                                                38080020
         CLI       1(R12),VCHAR        ENTRY A CHARACTER STRING         38100025
         BE        POSK1                                                38120020
         LA        R12,4(0,R12)                                         38140020
POSK1    LA        R12,2(0,R12)                                         38160020
POSK4    IC        R8,0(0,R12)                                          38180020
         BR        R9                                                   38200020
POSK2    LA        R12,8(0,R12)                                         38220020
         B         POSK4                                                38240020
POSK3    MVC       FWRD+2(2),4(R12)                                     38260020
         LH        R8,FWRD+2                                            38280020
         LA        R12,4(0,R12)                                         38300020
         BR        R9                                                   38320020
*                                                                       38340020
* WRITE TEXT ROUTINE                                                    38360020
*                                                                       38380020
*  ENTRY POINT FOR ADDITIONAL TEXT.                                     38400020
*                                                                       38420020
WRATXT   LTR       R5,R5               IS IT ZERO LENGTH                38440020
         BCR       BZ,R8               RETURN IF ZERO                   38460020
         STM       R5,R10,REGIST       SAVE CALLER'S REGISTERS          38480020
         LM        R6,R8,WRREG         RESTORE WRITE ROUTINE REGS       38500020
         BAL       R10,SIZET           GO CHECK MAX SIZE OF OUTPUT REC  38520020
FITST    LR        R9,R5                                                38900022
         BAL       R10,TXTMUV          MOVE IN TEXT                     38920020
         SR        R6,R5               AVAILABLE POSITION LEFT          38940020
         LR        R1,R7               SAVE FIELD R/L PTR.              38960020
         AR        R7,R5               NEXT AVAIL POS.                  38980020
         B         GOBAK               GO AND RETURN                    39000026
WRT1     STC       R5,0(0,R1)          STORE TRUNCATED FIELD R/L        39260020
GOBAK    EQU       *                                                    39280020
         STM       R6,R8,WRREG         SAVE WRITE ROUTINE REGISTERS     39300020
         LM        R5,R10,REGIST       RESTORE CALLER'S REGISTERS       39320020
         BR        R8                  RETURN TO CALLING ROUTINE.       39340020
TXTMUV   BCTR      R9,0                REDUCE COUNT FOR MOVE.           39360020
         EX        R9,EXMOVE           MOVE IN TEXT THAT WILL FIT.      39380020
         LA        R9,1(0,R9)                                           39400020
         AH        R9,RLCNT            UPDATE REC LENGTH COUNT.         39420020
         STH       R9,RLCNT                                             39440020
         MVC       0(2,R8),RLCNT       PUT REC LENGTH INTO RECORD       39460020
         BR        R10                 RETURN                           39480020
*                                                                       39500020
*  ENTRY POINT FOR START OF RECORD.                                     39520020
*                                                                       39540020
WRTRL    STM       R5,R10,REGIST       SAVE CALLER'S REGISTERS          39560020
         LM        R6,R8,WRREG         RESTORE WRITE ROUTINE REGISTERS  39580022
         SR        R9,R9               CLEAR REG                        39600020
         STH       R9,CURSIZ           ZERO OUT COUNT FOR NEW REC       39620020
         STH       R9,RLCNT            SET RL COUNT TO 0.               39630022
         BAL       R10,SIZET           GO CHECK MAX SIZE OF OUTPUT REC  39640020
         MVI       FLDSW+1,X'00'       SET TO ZERO                      39660020
         CH        R6,H255             ENSURE RECORD WILL FIT THIS BUFF 39680022
         BNL       RUMAV               GO USE.                          39700022
         OI        2(R8),X'08'         BREAK BIT                        39720022
         BAL       R10,RYTO            WRITE BUFFER                     39740022
         L         R7,WRADD            RESET BUFFER POINTER             39760022
         L         R6,OBSIZ            GET MAX BUF SIZE                 39770022
RUMAV    LR        R8,R7               SET NEW RL ADD.                  39780022
         B         FITST                                                39800022
*                                                                       39820022
*        WRITE ROUTINE                                                  39840022
*                                                                       39860022
RYTO     L         R9,OBSIZ            COMPUTE REAL BLOCK LENGTH        39880022
         SR        R9,R6                                                39900022
         ST        R9,WRLEN                                             39920022
         L         R1,BUFFENT          WRITE                            39940022
         CNOP      2,4                                                  39960022
         BALR      R0,R1                                                39980022
         DC        A(8,4)                                               40000022
WRADD    DC        F'0'                                                 40020022
WRLEN    DC        F'0'                                                 40040022
         L         R1,BUFFENT                                           40060022
         CNOP      2,4                                                  40080022
         BALR      R0,R1                                                40100022
         DC        A(28,4)                                              40120022
         BR        R10                 RETURN                           40240020
*                                                                       40260020
*   ENTRY POINT FOR END OF FILE                                         40280020
*                                                                       40300020
WREND    STM       R5,R10,REGIST       SAVE CALLER'S REGISTERS          40320020
         LM        R6,R8,WRREG         LOAD ROUTINE VALUES              40340020
         OI        2(R8),X'80'         SET LAST RECORD FLAG             40360020
         BAL       R10,RYTO            OUTPUT CURRENT BUFFER            40380020
         LM        R5,R10,REGIST       RESTORE CALLER'S REGISTERS       40600020
         BR        R8                  RETURN                           40620020
*                                                                       40630026
* *** CHECK MAXIMUM SIZE OF OUTPUT RECORD TO ASSEMBLER.                 40640020
*                                                                       40660020
*     IF OVER MAX, CHOP OFF AND FORGET EXTRA.                           40680020
*     SET RECORD LENGTH FOR MAXIMUM SIZE PLUS ONE BLANK,                40700020
*     WHICH IS ADDED.                                                   40720020
*                                                                       40740020
SIZET    LH        R9,FLDSW                                             40760020
         LA        R9,1(0,R9)          INCREMENT FLDSW                  40780020
         STH       R9,FLDSW                                             40800020
         LR        R9,R5               TRANSFER FIELD LENGTH            40820020
         AH        R9,CURSIZ           ADD OLD PARTIAL SUM TO NEW LENGT 40840020
         STH       R9,CURSIZ           AND RESTORE PARTIAL SUM          40860020
         CH        R9,MAXSIZ           CHECK AGAINST MAX                40880020
         BCR       BNH,R10             RETURN IF NOT OVER MAX           40900020
         SH        R9,MAXSIZ                                            40920020
         SR        R5,R9               REDUCE OUTPUT COUNT              40940020
         BP        SIZEX               OK IF POSITIVE                   40980020
         LA        R5,1                PUTOUT R/L=0                     41000020
SIZEX    OI        ERRBTS,MASK0        SET ERROR BIT                    41020020
         LR        R9,R5               TRANSFER NEW FIELD LENGTH        41030026
         BCTR      R9,0                DECREMENT BY ONE                 41031026
         STC       R9,0(,R11)          SET LENGTH OF FIELD              41032026
         CLI       FLDSW+1,X'04'       IS IT A COMMENT FIELD .Q         41033027
         BCR       8,R10               RETURN IF YES                    41034026
         LA        R9,0(R9,R11)        POINT TO LAST OUTPUT CHAR  V7A39 41035028
         MVI       0(R9),X'32'         REPLACE LAST CHAR WITH BLANK     41036026
         MVI       1(R9),X'00'         PLUS A ZERO TERMINATOR           41037026
         LA        R5,1(,R5)           BUMP FIELD LENGTH BY ONE         41038026
         BR        R10                 AND RETURN TO FITST              41039026
*                                                                       41080020
EXMOVE   MVC       0(*-*,R7),0(R11)                                     41100020
*                                                                       41120020
*                                                                       41140020
*   ***  *  SUBSTRING  ****                                             41260020
*                                                                       41280020
*  THIS IS A UNIQUE ROUTINE WHICH PROCESSES SUBSTRING OPTION            41300020
*    IT   CALLS ON THE -VALUAT- ROUTINE  FOR EXPRESSION VALUES          41320020
*                                                                       41340020
*                                                                       41360020
BEGSUB   MVC       ENDLEN(2),0(R6)     STORE LENGTH OF STRING IN BUFF.  41380020
         OI        MODESW,X'04'        SET SUBSTRING MODE               41400020
         B         ADVINP                                               41420020
*                                                                       41440020
*    CHECK VALUE OF EXPRESSION 1 FOR VALIDITY                           41460020
*                                                                       41480020
SBCOM    LH        R11,0(0,R6)         FETCH LENGTH OF BUFFER           41500020
         SH        R11,ENDLEN          COMPUTE LENGTH OF STRING         41520020
         STH       R11,STGLEN          STORE TRUE LENGTH                41540020
         L         R9,0(0,R2)          FETCH VALUE1                     41560020
         CR        R9,R11              IS VALUE1 GREATER THAN TRUE L    41580020
         BNH       SBCOM1                                               41600020
         OI        MODESW,NULLSW       SET NULL SWITCH                  41620020
SBCOM1   S         R9,ONE              IS VAL1 MINUS OR 0               41640020
         BM        ERRST3                                               41660020
         STH       R9,VAL1             STORE VALUE1-1                   41680020
         B         ADVSS               EVALUATE 2ND EXPR.               41700020
*                                                                       41720020
*    CHECK VALUE OF EXPRESSION 2 FOR VALIDITY                           41740020
*                                                                       41760020
SBCLS    TM        MODESW,NULLSW       WAS VAL1 TOO LARGE               41780020
         BZ        SBCLS1                                               41800020
         MVC       0(2,R6),ENDLEN                                       41820020
         OI        ERRBTS+1,MASK13                                      41840020
         B         NOSTRG                                               41860020
SBCLS1   L         R5,0(0,R2)                                           41880020
         S         R5,ONE              VALUE2 - 1                       41900020
         BM        ERRST4                                               41920020
         LH        R8,STGLEN                                            41940020
         SH        R8,VAL1             TRUE L - (VALUE1-1)              41960020
         LA        R11,254             MAX LENGTH-1 FOR EXTEN           41965027
         TM        PARBYT1,X'04'       WAS EXTEN SPECIFIED .Q           41970027
         BO        SBCLEX              BRANCH IF YES                    41975027
         LA        R11,7               MAX LENGTH-1 FOR NOEXTEN         41980027
SBCLEX   DS        0H                                                   41985027
         CR        R5,R11              TEST VALUE2 NOT TOO BIG          41990025
         BH        ERRST5                                               42000020
SBCLS2   CR        R5,R8               TRUE L - VALUE1 + 1  TEST        42020020
         BL        REMAIN                                               42040020
         LR        R5,R8               USE REMAINING CHAR.              42060020
         STH       R5,2(0,R2)                                           42080020
         BCTR      R5,0                                                 42100020
*                                                                       42120020
REMAIN   LH        R8,ENDLEN                                            42140020
         LA        R11,2(R6,R8)        ADDR. OF BEGIN OF STRING         42160020
         LR        R12,R11                                              42180020
         AH        R12,VAL1                                             42200020
         BCTR      R12,0               ADDR. TO START SUBSTRING         42220020
         EX        R5,STORE            STORE STRING IN BUFFER           42240020
         AH        R8,2(0,R2)          ADD LENGTH OF SUBSTRING          42260020
         STH       R8,0(0,R6)          RESULTING TOTAL LENGTH           42280020
         CH        R8,H255                                              42300020
         BH        ERRST2                                               42320020
NOSTRG   MVC       ENDLEN(2),ZERO                                       42340020
         S         R2,EIGHT                                             42360020
         S         R3,EIGHT                                             42380020
         NI        MODESW,X'EB'        TURN OFF ERROR & SUBST. SW.      42400020
         OI        MODESW,CREMSK       SET C.R.E. MODE                  42420020
         B         ADVSS                                                42440020
*                                                                       42800020
*                                                                       42820020
*    ****  ERROR ACTION  ****                                           42840020
*                                                                       42860020
*                                                                       42880020
*                                                                       42900020
*    STATEMENT TOO LONG  -   MASK0                                      42920020
*                                                                       42940020
*                                                                       42960020
ABT      OI        MISWIT,X'02'        SET ABORT SW.                    42980020
         ST        R2,TLADR                                             43000020
         BAL       R6,CHKERR                                            43020020
         B         MEND                                                 43040020
*                                                                       43060020
*    SYSLIST EXPRESSION GREATER THAN (POSNOMAX)                         43080027
*         OR SUBSCRIPT NOT WITHIN ALLOWABLE RANGE                       43100020
*                                                                       43120020
PARERR0  L         R1,STOREGS          RESTORE REGS                     43125023
         LM        R6,R7,STOREGS+4                                      43130023
*                                                                       43135023
PARERR   OI        ERRBTS,MASK2                                         43140020
         B         TEMPX                                                43160020
*                                                                       43180020
*    SEQUENCE SYMBOL UNDEFINED                                          43200020
*                                                                       43220020
NOSEQ    OI        ERRBTS,MASK4                                         43240020
         B         TEMPX                                                43260020
*                                                                       43280020
* LENGTH, SCALE, INTEGER ATTRIBUTE  -  VALID TYPE                       43300026
*          OR PARAMETER NOT A SYMBOL                                    43320026
*                                                                       43340020
SLIERR   OI        ERRBTS,MASK5                                         43360020
         B         TEMPX                                                43380020
*                                                                       43400020
*   LOOP COUNTER EXCEEDED                                               43420020
*                                                                       43440020
LOOPER   OI        ERRBTS,MASK6                                         43460020
         BAL       R6,CHKERR                                            43480020
         CLI       BUFFCB+7,8          INSIDE A MACRO .Q                43500022
         BE        ENDGEN              BRANCH IF IN OPEN CODE           43520022
*./      DELETE    SEQ1=43580022,SEQ2=43580022                    V7A25 43580028
         B         MENDST                                               43600020
ENDGEN   LA        R5,16               LENGTH OF GEN. END RECORD        43620020
         LA        R11,GENEND                                           43640020
         BAL       R8,WRTRL            WRITE GEN. END RECORD            43660020
         B         ENDST                                                43680020
*                                                                       43700020
*    GENERATED STRING EXCEEDS 255 CHARACTERS                            43720020
*                                                                       43740020
ERRST2   OI        ERRBTS,MASK7                                         43760020
         B         TEMPX                                                43780020
*                                                                       43800020
*  EXPR  .1 IS 0 OR MINUS                                               43820020
*                                                                       43840020
ERRST3   OI        ERRBTS+1,MASK8                                       43860020
         B         TEMPX                                                43880020
*                                                                       43900020
*  EXPR  .2 IS 0 OR MINUS                                               43920020
*                                                                       43940020
ERRST4   OI        ERRBTS+1,MASK9                                       43960020
         B         TEMPX                                                43980020
*                                                                       44000020
*   IN A.R.E. CHAR STRING NOT INTEGERS                                  44020020
*        OR PARAMETER NOT SELF-DEFINING TERM                            44040020
*                                                                       44060020
SETCER   OI        ERRBTS+1,MASK10                                      44080020
         B         TEMPX                                                44100020
*                                                                       44120020
*    INVALID OP CODE  -  MACRO INSTRUCTION                              44140020
*                                                                       44160020
MACERR   OI        ERRBTS+1,MASK11                                      44180020
         B         ABT                                                  44200020
*                                                                       44220020
*    UNUSED OR MULTIPLY-DEFINED MACRO INSTRUCTION PARAMETER             44240020
*                                                                       44260020
MIERR    OI        ERRBTS+1,MASK12                                      44280020
         ST        R2,TLADR                                             44300020
         B         TEMPX                                                44320020
*                                                                       44340020
*    EXPR. EXCEEDS LENGTH OF CHAR. EXPR. - SUBSTRING.                   44360020
*         MASK13                                                        44380020
*                                                                       44400020
*  PRODUCT EXCEEDS LIMITS                                               44420020
*                                                                       44440020
OVF      OI        ERRBTS+1,MASK14                                      44460020
         B         CONTIN                                               44480020
*                                                                       44500020
*  EXPR  .2 GREATER THAN 8 - SUBSTRING                                  44520020
*                                                                       44540020
ERRST5   OI        ERRBTS+1,MASK15                                      44560020
         LA        R5,7                TRUE L - 1                       44580020
         B         SBCLS2                                               44600020
MASK0    EQU       X'80'                                                44620020
MASK1    EQU       X'40'                                                44630027
MASK2    EQU       X'20'                                                44640020
MASK3    EQU       X'10'                                                44660020
MASK4    EQU       X'08'                                                44680020
MASK5    EQU       X'04'                                                44700020
MASK6    EQU       X'02'                                                44720020
MASK7    EQU       X'01'                                                44740020
MASK8    EQU       X'80'                                                44760020
MASK9    EQU       X'40'                                                44780020
MASK10   EQU       X'20'                                                44800020
MASK11   EQU       X'10'                                                44820020
MASK12   EQU       X'08'                                                44840020
MASK13   EQU       X'04'                                                44860020
MASK14   EQU       X'02'                                                44880020
MASK15   EQU       X'01'                                                44900020
*                                                                       44920020
*   ****  EXECUTED INSTRUCTIONS  ****                                   44940020
*                                                                       44960020
*                                                                       44980020
*                                                                       45000020
*    SUBSCRIPTED SET VARIABLES                                          45020020
*                                                                       45040020
STORE    MVC       0(*-*,R11),1(R12)   STORE CHARACTER STRING           45060020
*                                                                       45080020
*    RELATIONAL - ARITH. AND CHAR. EXPRESSIONS                          45100020
*                                                                       45120020
BRANCH   BC        *-*,EXEC2           CONDITION CODE PRESET            45140020
TRSLT1   TR        2(*-*,R11),TRSLTB                                    45160020
TRSLT2   TR        2(*-*,R12),TRSLTB                                    45180020
CLC1     CLC       2(*-*,R11),2(R12)                                    45200020
*                                                                       45220020
*    SUBROUTINE - ** FNDBIT **                                          45240020
*                                                                       45260020
TSTMSK   TM        0(R12),*-*                                           45280020
*                                                                       45300020
*  MACRO INSTRUCTION                                                    45320020
*                                                                       45340020
COMPR    CLC       12(*-*,R4),12(R10)                                   45360020
*                                                                       45460020
*        WORK - CONTAINS VALUE                                          45480020
*  MAKE PARAMETER ENRTY                                                 45500020
*                                                                       45520020
ENTER    MVC       0(*-*,R2),0(R12)                                     45540020
*                                                                       45560020
*                                                                       45580020
*  STORE PARAMETER TABLE FOR INNER MACRO                                45600020
*                                                                       45620020
MOVPAR   MVC       0(*-*,R2),0(R9)                                      45640023
*                                                                       45660020
*    STORE M-I IN INPUT3                                                45680020
*                                                                       45700020
MOVMI    MVC       0(*-*,R9),0(R10)    MOVE M-I                         45720020
*                                                                       45740020
*   ***    DECLARATIONS  ***                                            45760020
*                                                                       45780020
DOT      EQU       0                   END OF OPERATOR TABLE SYMBOL     45800020
RPAREN   EQU       DOT+1                                                45820020
LPAREN   EQU       RPAREN+1                                             45840020
SPAREN   EQU       LPAREN+1            SUBSCRIPT LPAREN                 45860020
VPLUS    EQU       SPAREN+1                                             45880020
VMINUS   EQU       VPLUS+1                                              45900020
VMULT    EQU       VMINUS+1                                             45920020
EQUAL    EQU       VMULT+2                                              45940020
VNOT     EQU       EQUAL+6                                              45960020
VOR      EQU       VNOT+1                                               45980020
VAND     EQU       VOR+1                                                46000020
HIOP     EQU       VAND                END OF OPERATORS                 46020020
VSETA    EQU       DOT+40                                               46030025
VSETB    EQU       VSETA+1                                              46040025
VSETC    EQU       VSETB+1                                              46060020
COMMA    EQU       DOT+43                                               46080020
VSBCOM   EQU       DOT+46                                               46100020
VSBCLS   EQU       DOT+47                                               46120020
NULSYM   EQU       DOT+38                                               46140020
VCHAR    EQU       DOT+39              CHAR. FLAG                       46160020
VATRREF  EQU       DOT+51                                               46180027
VPAR     EQU       DOT+57                                               46200020
KATT     EQU       DOT+56                                               46220020
IATT     EQU       DOT+53                                               46240020
NATT     EQU       DOT+55                                               46260020
VSYLST   EQU       DOT+58                                               46280020
VDUMP    EQU       DOT+59                                               46300020
CREMSK   EQU       1                   CONDITIONAL RELATION MASK        46320020
BITSW    EQU       X'7F'               TURNS OFF BITSW - BIT 0          46340020
         LIST1EQU                                                       46350025
         EJECT                                                          46360020
*                                                                       46369027
*        SAVE AREA FOR ASMGF3 AND BASE FOR FOLLOWING WORK AREA          46370027
*                                                                       46370527
F3SAVE   DC        18F'0'                                               46370627
         SPACE     2                                                    46370727
*                                                                       46371027
*        PATCH AREA FOR ASMGF3                                          46372027
*                                                                       46373027
PATCH    DC        10S(*)                                               46374027
         SPACE     2                                                    46375027
         LTORG                                                          46380020
         SPACE     2                                                    46400020
DUMCMNT  DC        X'005300292929320E1B1B181B32292929323232160A0C1B1832X46405027
               0E21190A171C1218173219110A1C0E32191B0E160A1D1E1B0E152232X46410027
               1D0E1B1612170A1D0E0D2E'                                  46415027
         DC        (X'53'-L'DUMCMNT)X'32'                               46418027
STG      DC        X'8040201008040201'                                  46420020
NULCON   DC        AL1(OTYPE),X'2700'  NULL (OMITTED) CHARACTER STRING  46440027
GENEND   DC        X'001040802100000000030E170D013200'                  46460020
TMBYTE   DC        X'00'               WORK SPACE FOR CORE ALLOCATION   46470020
ONE      DC        F'1'                                                 46480020
ONEH     EQU       ONE+2                                                46490026
TWO      DC        F'2'                                                 46500020
TWOH     EQU       TWO+2                                                46510026
THREE    DC        F'3'                                                 46511026
THREEH   EQU       THREE+2                                              46512026
FOUR     DC        F'4'                                                 46520020
FOURH    EQU       FOUR+2                                               46525026
SIX      DC        F'6'                                                 46530025
SIXH     EQU       SIX+2                                                46535025
SEVEN    DC        F'7'                                                 46540020
SEVENH   EQU       SEVEN+2                                              46545026
EIGHT    DC        F'8'                                                 46546026
EIGHTH   EQU       EIGHT+2                                              46547026
NINE     DC        F'9'                                                 46550023
NINEH    EQU       NINE+2                                               46551026
TEN      DC        F'10'                                                46552026
TENH     EQU       TEN+2                                                46553026
LOW2     DC        X'FFFFFFFC'                                          46560020
LOW3     DC        X'FFFFFFF8'                                          46580020
H01      DC        X'0000FFFF'                                          46600020
H255     DC        H'255'                                               46700020
H256     DC        H'256'                                               46720020
POSNOMAX DC        H'200'              MAX NUMBER OF POS PARMS          46740027
LOWLIM   DC        H'34'                                                46760020
WARNG    DC        H'7'                WARNING ERROR BITS ONLY          46780020
HX24     DC        H'36'                                                46800020
HIPTRMXL DC        H'416'              MAX BYTE LENGTH OF 'HIPTR' TABLE 46810025
ZEROS    DC        XL15'00'                                             46840020
ZERO     EQU       ZEROS                                                46860020
ATTLEN   EQU       5                                                    46880020
NULLSW   EQU       X'10'               USE NULL STRING                  46980020
GTFLAG   EQU       0                   PTRLST FLAG FOR GT               47040020
GTLEN    EQU       4                   LENGTH OF GT ENTRY               47060020
PTRLEN   EQU       4                   LENGTH OF PTRLST ENTRY           47080020
CONCAT   EQU       X'20'               CONCATENATION SWITCH             47100020
STRGSW   EQU       X'08'               PUTST SW.                        47120020
FLAGSVS  DC        AL1(UTYPE),X'2708'  FLAGS FOR SYSTEM VARIABLE SYMBOL 47130027
*                                      THIRD BYTE IMPLIES LENGTH OF 8   47131020
         SPACE     2                                                    47132020
         DS        0D                  ALIGN THE TRANSLATE TABLE        47135020
TRSLTB   DC        X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                  47140020
         DC        X'C7C8C9D1D2D3D4D5D6D7D8D9E2E3E4E5'                  47160020
         DC        X'E6E7E8E95B7B7C4E605C616B7E504B4D'                  47180020
         DC        X'5D7D40333435363738393A3B3C3D3E3F'                  47200020
         DC        X'324142434445464748494A2E4C2F274F'                  47220020
         DC        X'2D5152535455565758595A2429305E5F'                  47240020
         DC        X'282A62636465666768696A2B6C6D6E6F'                  47260020
         DC        X'707172737475767778797A2526312C7F'                  47280020
         DC        X'808182838485868788898A8B8C8D8E8F'                  47300020
         DC        X'909192939495969798999A9B9C9D9E9F'                  47320020
         DC        X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'                  47340020
         DC        X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'                  47360020
         DC        X'C00A0B0C0D0E0F101112CACBCCCDCECF'                  47380020
         DC        X'D0131415161718191A1BDADBDCDDDEDF'                  47400020
         DC        X'E0E11C1D1E1F20212223EAEBECEDEEEF'                  47420020
FINDEC   DC        X'00010203040506070809FAFBFCFDFEFF'                  47440020
FLGLEN   EQU       10                  TO GET BY ASS'BLY FLAGS          47480020
GLOBAL   EQU       X'80'               GLOBAL SE VARIABLE SWITCH        47500020
RPARVL   EQU       X'30'               )                                47520020
         SPACE     2                                                    47522527
*                                                                       47525027
*        DEFINED AS LABELS FOR DC AND DS INSTRUCTIONS                   47527527
ATYPE    EQU   X'0A'    A-TYPE, IMPLICIT LENGTH, ALIGNED AND CXD        47530027
BTYPE    EQU   X'0B'    BINARY CONSTANT                                 47532527
CTYPE    EQU   X'0C'    CHARACTER CONSTANT                              47535027
DTYPE    EQU   X'0D'    LONG FLOATING-POINT, IMPLICIT LENGTH, ALIGNED   47537527
ETYPE    EQU   X'0E'    SHORT FLOATING-POINT, IMPLICIT LENGTH, ALIGNED  47540027
FTYPE    EQU   X'0F'    FULLWORD FIXED-POINT, IMPLICIT LENGTH, ALIGNED  47542527
GTYPE    EQU   X'10'    FIXED-POINT CONSTANT, EXPLICIT LENGTH           47545027
HTYPE    EQU   X'11'    HALFWORD FIXED-POINT, IMPLICIT LENGTH, ALIGNED  47547527
KTYPE    EQU   X'14'    FLOATING-POINT CONSTANT, EXPLICIT LENGTH        47550027
LTYPE    EQU   X'15'    EXTENDED FLOATING-POINT, IMPLICIT LEN, ALIGN    47552527
PTYPE    EQU   X'19'    PACKED DECIMAL CONSTANT                         47555027
QTYPE    EQU   X'1A'    Q-TYPE ADDRESS, IMPLICIT LENGTH, ALIGNED        47557527
RTYPE    EQU   X'1B'    A-,S-,Q-,V- OR Y-TYPE ADDRESS, EXPLICIT LENGTH  47560027
STYPE    EQU   X'1C'    S-TYPE ADDRESS, IMPLICIT LENGTH, ALIGNED        47562527
VTYPE    EQU   X'1F'    V-TYPE ADDRESS, IMPLICIT LENGTH, ALIGNED        47565027
XTYPE    EQU   X'21'    HEXADECIMAL CONSTANT                            47567527
YTYPE    EQU   X'22'    Y-TYPE ADDRESS, IMPLICIT LENGTH, ALIGNED        47570027
ZTYPE    EQU   X'23'    ZONED DECIMAL CONSTANT                          47572527
*                                                                       47575027
*        DEFINED AS LABELS FOR ASSEMBLER STATEMENTS                     47577527
ITYPE    EQU   X'12'    MACHINE INSTRUCTION                             47580027
MTYPE    EQU   X'16'    MACRO INSTRUCTION                               47582527
WTYPE    EQU   X'20'    CCW INSTRUCTION                                 47585027
*                                                                       47587527
JTYPE    EQU   X'13'    IDENTIFIED AS CONTROL SECTION NAME              47590027
*                                                                       47592527
TTYPE    EQU   X'1D'    IDENTIFIED AS EXTERNAL SYMBOL BY EXTRN          47595027
WETYPE   EQU   X'24'    IDENTIFIED AS EXTERNAL SYMBOL BY WXTRN          47597527
*                                                                       47600027
NTYPE    EQU   X'17'    SELF-DEFINING MACRO INSTRUCTION OPERAND         47602527
OTYPE    EQU   X'18'    OMITTED MACRO INSTRUCTION OPERAND               47605027
*                                                                       47607527
UTYPE    EQU   X'1E'    UNDEFINED                                       47610027
         SPACE     2                                                    47615027
VEND     EQU       X'FF'               END OF STATEMENT FLAG            47620020
EOB      EQU       X'FE'               END OF BUFFER FLAG               47640020
CONSYM   EQU       EOB                 CONTINUE STATEMENT FLAG          47660020
VPUT     EQU       X'FD'               PUT OUT STRING FLAG              47680020
KEYFLG   EQU       X'FC'               KEYWORD PARAMETER FLAG           47700020
POSFLG   EQU       X'FB'               POSITIONAL PARAMETER FLAG        47720020
VSYM     EQU       X'FA'               SYMBOL FLAG                      47740020
VSUB     EQU       X'F0'               SUBLIST FLAG                     47760020
CONSUB   EQU       X'F9'               CONTINUE SUBLIST FLAG            47780020
EOFLD    EQU       X'F8'               END OF MACH. INSTR. FIELD        47800020
ENDREC   EQU       X'0C'               END OF MACRO OR PROTO. REC.      47820020
ERRFLG   EQU       X'0D'               ERROR STATEMENT FLAG             47840020
PARFLG   EQU       X'0B'                                                47860020
*                                                                       47880020
*    CONDITION CODES - LEFT JUSTIFIED IN BYTE                           47900020
*                                                                       47920020
CONCD    DC        X'80'               EQ                               47940020
         DC        X'70'               NE                               47960020
         DC        X'40'               LT                               47980020
         DC        X'20'               GT                               48000020
         DC        X'D0'               LE                               48020020
         DC        X'B0'               GE                               48040020
*                                                                       48060020
*    FOLLOWING IS A RATING LIST OF THE OPERATORS                        48080020
*    IN   THE HIERARCHY TABLE                                           48100020
*                                                                       48120020
RATING   DC        X'0A09080803030202'                                  48140020
         DC        6X'04'                                               48160020
         DC        X'050706'                                            48180020
*        PARM BYTES FROM ASMGASM                                        48200027
PARBYT1  DC        X'00'                                                48220027
PARBYT   DC        X'00'                                                48240027
PARBYT2  DC        X'00'                                                48260027
PARBYT3  DC        X'00'                                                48280027
         SPACE     2                                                    48320020
*        OUTPUT BUFFER CONTROL BLOCK                                    48330022
WRREG    DC        F'0'                AVAILABLE POSITIONS LEFT         48340022
         DC        F'0'                NEXT AVAILABLE POSITION          48350022
         DC        F'0'                POINTER TO START OF THIS RECORD  48360022
*        INPUT BUFFER CONTROL BLOCKS                                    48370022
*        BYTE 0    X'00' ENTRY    X'80' END OF TABLE                    48380022
*        BYTES 1-3 BUFFER ADDRESS                                       48390022
*        BYTES 4-6 N/P OF THIS RECORD                                   48400022
*        BYTE 7    UT NUMBER                                            48410022
*        THE 2ND BUFFCB ENTRY IS FOR M-I DURING M-I/PROTO PASS          48420022
*        THE 1ST BUFFCB ENTRY IS FOR ALL OTHER PURPOSES                 48430022
BUFFCB   DC        0D'0'                                                48440022
         DC        &UT3BUFF.X'00000000FFFFFF08'                         48450022
         DC        &UT1BUFF.X'00000000FFFFFF00'                         48460022
         DC        X'80',7X'00',X'80'  END OF TABLE                     48470022
R1SAVE   DC        F'0'                                                 48480022
RLCNT    DC        H'0'                WORK AREA - HAS CURRENT REC LENG 48500020
MAXSIZ   DC        H'248'              MAX. SIZE  FOR ASSEMBLER REC     48520020
FWRD     DC        F'0'                2 HI-ORDER BYTES MUST BE ZERO    48540020
NDXCNT   DC        F'0'                                                 48560020
SAVADR   DC        F'0'                SET STATEMENT RESULT ADDR.       48580020
SUBADR   DC        9X'00'                                               48600020
SUBLEN   EQU       SUBADR+4                                             48620020
SAVTYP   EQU       SUBADR+8                                             48640020
SAVBIT   DC        X'00'                                                48660020
SAVLEN   DC        AL1(0)              SETC VARIABLE MAXIMUM LENGTH     48670025
SETLEN   DC        AL1(0)              SETC STMT RESULT MAX LENGTH      48675025
STGLEN   DC        H'0'                                                 48700020
PARCNT   DC        XL9'00'                                              48720027
MACCNT   EQU       PARCNT+2                                             48740020
SWITCH   EQU       PARCNT+4                                             48760020
MISWIT   EQU       PARCNT+5                                             48780020
POSCTR   EQU       PARCNT+6                                             48800020
SCPCTR   EQU       PARCNT+8                                             48820027
BITNO    DC        X'00'               SAVE BIT NO.                     48840020
ERRREC   DC        X'0006'             R/L                              48860020
         DC        X'10010000'                                          48880020
ERRNO    EQU       ERRREC+4                                             48900020
SUBSW    DC        X'01'               SUBSCRIPT MODE SWITCH            48920020
HIPTROP  DC        H'14',AL2(11,22,32,43,51),AL1(0,0)  OPEN CODE  V7A49 48940028
HIPTR    DC        H'0',AL2(11,22,32,43,51,*-*)  OFFSET OF SYSTEM PARMS 48980027
         DS        (2*240+2)C          CONTIN FOR FIELD 'HIPTR'   V7A58 49000028
         DS        2C                  SPACE FOR NO OF POSNL PARAMS     49005023
*                                      IN CALL AND PROTOTYPE            49010023
PARLST   EQU       HIPTR+2             ACTUAL BEGINNING OF LIST         49010527
         SPACE                                                          49011026
STOREGS  DS        4F                  SAVE AREA FOR 4 REGISTERS        49015023
CURSIZ   DC        H'0'                CURRENT SIZE OF ASSEMBLER REC    49020020
*                                                                       49100020
*  LOAD   MULTIPLE CONSTANTS                                            49120020
REGCON   DC        A(GTLIST-4)                                          49140020
         DC        A(POINTR-4)                                          49160020
         DC        A(OPTAB)                                             49180020
         DC        F'0'                                                 49200020
*                                                                       49220020
*        COMMON WORK AREA - DOESNT NEED TO BE INITIALIZED               49240020
GTLIST   DS        13F                 INTERMEDIATE RESULT AREAS        49260022
POINTR   DS        13F                 POINTER LIST                     49280020
OPTAB    DS        20C                 OPERATOR LIST                    49300020
DBLWRD   DS        3D                                                   49320020
REGIST   EQU       DBLWRD                                               49340020
UNPAKD   EQU       DBLWRD+8                                             49360020
PAD      DS        2F                  PARAMETER PTR. ADDRESS           49380020
PARADR   EQU       PAD+4               ADDR. OF PARAMETER TABLE         49400020
PADOP    DC        A(*-*,*-*)          OPEN CODE POS PARM ADDRS   V7A49 49410028
PARADROP EQU       PADOP+4             ADDR OPEN PARM TABLE       V7A49 49412028
PARSAV   DS        F                                                    49420020
SVREG    DS        6F                                                   49440020
SAV2     DS        2F                                                   49460020
SAVINP   DS        F                   SAVE INPUT PTR.                  49480020
RTNVAL   DS        F                                                    49500020
SETADR   DS        F                                                    49520020
DELTA    DS        F                   SAVE ENTRY ADDR.                 49540020
MHDR     DS        F                                                    49560020
BEGADR   DS        F                                                    49580020
TLADR    DS        F                                                    49600020
SAV12    DS        2F                                                   49620020
LDICT1   DC        F'0'                ADDRESS OF 1ST MACRO DICT        49640022
MINOTE1  DC        F'0',H'0'           START OF M-I NOTE/POINT          49650022
MINOTE2  DC        F'0',H'0',X'00'     END OF M-I N/P AND SW INIT       49660022
SAVNOTE  DC        F'0'                                                 49680022
ERRBTS   DC        H'0'                16 BITS - ERROR SWITCHES         49700027
SAVRL    DS        H                                                    49720020
SECTNM   DC        9X'00'                                               49740020
SECTYP   DC        6X'00'                                               49750023
MODESW   DS        X'00'                                                49760020
STATYP   DS        C                   STATEMENT TYPE                   49780020
POSCNT   DC        H'0'                NO. OF POSIT. PARAM. - PROTO.    49800027
NUMKW    DC        H'0'                NUMBER OF KW .... M-I            49820027
KEYSWIT  DC        X'00'               M-I KEYWORD SCAN SWITCH    V7A53 49822028
KEYPASS2 EQU       X'80'               SECOND PASS, KEYWORDS ONLY V7A53 49824028
KEYFOUND EQU       X'40'               KEYWORD FOUND ON 1ST PASS  V7A53 49826028
RTNNO    DS        C                                                    49840020
ENDLEN   DS        H                                                    49860022
VAL1     DS        H                                                    49880022
*                                                                       49900027
INPBLK   DS        F                                                    49920020
FLDSW    DC        H'0'                FIELD COUNTER                    49940020
         SPACE     2                                                    50000020
*                                                                       50020020
GDP      DC        A(0)                BEGINNING OF DICTIONARY          50120020
DEND     DC        A(0)                END OF DICTIONARY                50140020
SSEG     DC        A(0)                UT1 BLOCKSIZE                    50160022
BOTGOT   DC        F'0'                BOTTOM OF CORE GOTTEN FROM BUFF  50180022
INPLEN   DS        F                   UT3 BLOCKSIZE                    50560022
OBSIZ    DS        F                   SIZE OF OUTPUT 1 AREA            50580020
BUFFENT  DS        F                   ADDRESS OF BUFFERING ROUTINE     50620020
ADLIST1  DS        F                   ADDRESS OF LIST1 IN ASM          50640020
         SPACE     2                                                    50662523
L1       DC        129H'0'             256 BYTES + 2                    50663023
L2       DC        129H'0'             256 BYTES + 2                    50663523
         SPACE     2                                                    50664025
*        THE FOLLOWING DS IS USED TO MAKE F3 ABOUT THE SAME SIZE AS     50666022
*            THE OTHER PHASES.                                          50668022
*        THE AREA OCCUPIED BY THE DS IS ALLOCATED TO AN OPTIUM          50670022
*            COMBINATION OF I/O BUFFERS AND POSSIBLY THE GLOBAL         50672022
*            DICTIONARY BY PHASE F3 INITIALIZATION.                     50673027
*                                                                       50674027
LWORKDS  DC        A(DUMLENF3)         LENGTH OF DUMMY WORK AREA        50675027
F3END    DC        0D'0'               ALIGN END OF ASMGF3              50676027
DUMLENF3 EQU       (26*1024-(F3END-ASMGF3))/256*256  MULT OF 256  V7A16 50677028
WORKDS   DS        (DUMLENF3)X         DIFF IN SIZE TWIXT F1 AND F3.    50678027
         DC        0D'0'               RESULT OF ALIGNMENT        V7A16 50678528
         SPACE     2                                                    50679026
         END       ASMGF3                                               50680020
./ ADD NAME=ASMGF7C
F7C      TITLE     'ASMG F7  MAIN LINE CONTROL'                         00020021
         ISEQ  73,78                                                    00040021
ASMGF7C  START                                                          00060020
         SPACE                                                          00080020
         PRINT      NOGEN                                               00100020
         FDIMEN                                                         00120020
         SPACE 2                                                        00140020
*TITLE   'ASMGF7C'  F7 MAIN LINE CONTROL                              * 00160021
*FUNCTION/OPERATION-                                                  * 00180020
*   PROCESS 'EDITED TEXT RECORDS' WRITTEN BY ASMGF3                   * 00200020
*   ADD APPENDED FIXED FIELD AND WORK BUCKETS (IF REQUIRED) TO EDITED * 00220020
*    TEXT RECORDS                                                     * 00240020
*   BUILD SYMBOL TABLE AND LITERAL TABLE                              * 00260020
*   BUILD EXTERNAL SYMBOL DICTIONARY (ESD)                            * 00280020
*   GENERATE CROSS-REFERENCE RECORDS                                  * 00300020
*   PROCESS LITERALS AND SELF-DEFINING TERMS IN EXPRESSIONS INVOLVING * 00320020
*    THE LOCATION COUNTER                                             * 00340020
*   MAINTAIN LOCATION COUNTER AND ASSIGN STORAGE LOCATIONS            * 00360020
*   DETECT AND LOG ERROR CONDITIONS                                   * 00380020
*   WRITE TEXT RECORDS FOR PROCESSING BY F8.                          * 00400020
*INPUT-                                                               * 00420020
*   REGISTER CRB- ADDRESS OF ASMGF7C                                  * 00440020
*   REGISTER ACT- ADDRESS OF ASSEMBLER CONTROL TABLE                  * 00460020
*ENTRY POINT-                                                         * 00480020
*  ASMGF7C                                                            * 00500020
*        CALLING SEQUENCE.                                            * 00520020
*        L     CRB,=A(ASMGF7C)                                        * 00540020
*        BR    CRB                                                    * 00560020
*OUTPUT_ NONE                                                         * 00580020
*EXTERNAL ROUTINES-                                                   * 00600020
*     NAME     ACT NAME  FUNCTION                                     * 00620020
*  ASMGF7N     CTESTR    GENERATE TESTRAN RECORD                      * 00640020
*  ASMGF7D     CDCVAL    EVALUATE LITERALS                            * 00660020
*  ASMGF7E     CEEVAL    EVALUATE EXPRESSIONS                         * 00680020
*  ASMGF7L     CLOGER    ERROR LOGGING                                * 00700020
*  ASMGF7I     CTXTIO    PROVIDE ACCESS TO SYSOUT, PUTLBT, AND PHCLS  * 00720020
*                        COMMON SUBROUTINES                           * 00740020
*  ASMGF7S               MAINTAIN AND EXAMINE SYMBOL TABLE            * 00760020
*  ASMGF7E               GENERATE ESD ENTRIES                         * 00780020
*EXIT_   BRANCH TO PHCLS (PHASE CLOSE) ROUTINE WITHIN ASMGF7I. PHCLS  * 00800020
*         TRANSFERS CONTROL TO ASMGFI (INTERLUDE)                     * 00820020
*TABLES_ AOPGO2...COMPUTED GO-TO VALUES FOR ASSEMBLER OP-CODES.       * 00840020
         SPACE   2                                                      00860020
* BIT MASKS                                                             00880020
         SPACE                                                          00900020
BIT0     EQU   X'80'                    MASKS WHICH...                  00920020
BIT1     EQU   X'40'                    ARE...                          00940020
BIT2     EQU   X'20'                    USED TO...                      00960020
BIT3     EQU   X'10'                    ACCESS...                       00980020
BIT4     EQU   X'08'                    BITS WITHIN...                  01000020
BIT5     EQU   X'04'                    A BYTE...                       01020020
BIT6     EQU   X'02'                    BY A MEANINGFUL...              01040020
BIT7     EQU   X'01'                    NAME...                         01060020
SETWX    EQU   X'02'                    INDICATES WXTRN                 01070025
SETEXT   EQU   X'FD'                    PATTERN TO TURN OFF SETWX       01075025
         EJECT                                                          01080020
*        ERRORS DETECTED BY F/7 MAIN-LINE CONTROL                       01100020
         SPACE 2                                                        01120020
ACER00   EQU   23                       MULTIPLY DEFINED NAME           01140020
ACER01   EQU   07                       LOCATION COUNTER WRAP-AROUND    01160020
         SPACE                                                          01180020
*                                       CNOP                            01200020
ACER10   EQU   39                       ILLEGAL DELIMITER               01220020
ACER11   EQU   30                       ILLEGAL VALUE                   01240020
ACER12   EQU   25                       RELOCATABLE VALUE               01260020
         SPACE                                                          01280020
*                                       EQU                             01300020
ACER20   EQU   39                       ILLEGAL DELIMITER               01320020
ACER21   EQU   25                       COMPLEX RELOCATABLE VALUE       01340020
ACER22   EQU   108                      INVALID 2ND,3RD EQU ARGUMENTS   01350027
         SPACE                                                          01360020
*                                       EXTRN, ENTRY                    01380020
ACER30   EQU   39                       ILLEGAL DELIMITER               01400020
ACER31   EQU   18                       INVALID SYMBOL IN OPERAND       01420020
         SPACE                                                          01440020
*                                       TITLE                           01460020
ACER40   EQU   73                       NAME ON TITLE CARD AFTER FIRST  01480020
ACER41   EQU   16                       NAME FIELD EXCEEDS 4 CHARACTERS 01500020
ACER42   EQU   17                       OPERAND EXCEEDS 100 CHARACTERS  01520020
         SPACE                                                          01540020
*                                       PUNCH, TITLE, MNOTE             01560020
ACER50   EQU   84                       OPERAND NOT ENCLOSED IN QUOTES  01580020
ACER51   EQU   87                       UNPAIRED QUOTE OR AMPERSAND     01600020
         SPACE                                                          01620020
*                                       PUNCH                           01640020
ACER60   EQU   17                       OPERAND EXCEEDS 80 CHARACTERS   01660020
         SPACE                                                          01680020
*                                       MNOTE                           01700020
ACER70   EQU   37                       MNOTE STATEMENT                 01720020
ACER71   EQU   91                       SEVERITY CODE GR 255            01740020
ACER72   EQU   39                       ILLEGAL DELIMITER               01760020
ACER73   EQU   17                       OPERAND EXCEEDS 100 CHARACTERS  01780020
         SPACE                                                          01800020
*                                       LTORG                           01820020
ACER80   EQU   58                       DEFINED IN CSECT OR COM         01840020
         EJECT                                                          01860020
* AC0 -                                                                 01880020
         SPACE 2                                                        01900020
         USING     ASMGF7C,CRB                                          01920020
         SPACE                                                          01940020
*********************************************************************** 01960020
         SPACE                                                          01980020
AC0      TM    CTTSTI(ACT),BIT7         CHECK TESTRAN OPTION            02000020
         BO    AC01                     ON, LEAVE TESTRAN GATE OPEN     02020020
         OI    AC1+1,X'F0'              OFF, MODIFY PROGRAM TO BYPASS   02040020
         OI    QUIT0+1,X'F0'            TESTRAN ROUTINE                 02060020
         SPACE                                                          02080020
AC01     TM    CTXRFI(ACT),BIT6         CHECK X-REF OPTION              02100020
         BO    AC02                     ON, LEAVE X-REF GATE OPEN       02120020
         OI    MOP2+1,X'F0'             OFF, MODIFY PROGRAM TO BYPASS   02140020
         OI    AOP30+1,X'F0'                 TYPE 2 X-REF ROUTINE       02160020
         MVI   MOP1D+1,X'00'            MODIFY INSTRUCTION MOP1D       X02170023
                                        NOT TO TURN ON XREF BIT         02175023
         SPACE                                                          02180020
AC02     B     AC2                      BYPASS TESTRAN FIRST TIME       02200020
*                                                                       02220020
         ORG       AC0                                                  02240020
ACTEMP0  DS        F                                                    02260020
ACTEMP1  DS        F                                                    02280020
         ORG                                                            02300020
         EJECT                                                          02320020
*                                                                       02340020
         SPACE 2                                                        02360020
AC1      BC    0,ACWRAP                 /MOD BY AC0/ BYPASS TESTRAN     02380020
*./      DELETE    SEQ1=02400020,SEQ2=02420020                          02420025
         L     FRB,CTESTR(ACT)          GET ASMGF7N ADDRESS, AND...     02440022
         BALR  CRR,ACT                  BRANCH TO GENERATE TESTRAN REC. 02460020
         SPACE                                                          02480020
ACWRAP   CLI   CTLOC+0(ACT),0           TEST FOR LOCATION COUNTER       02500020
         BE    AC2                                       WRAP-AROUND    02520020
         MVC   ACTEMP0,CTLOC(ACT)                                       02540020
         MVC   CTLOC(4,ACT),=X'00FFFFFF'     CALL ORG ROUTINE TO SET    02560020
         LA    GR1,=AL2(X'0100'+IBLANK)      HIGH LOC FOR THIS CSECT    02580020
         ST    GR1,CTXOFP(ACT)               EQ X'FFFFFF'               02600020
         L     GRX,CORG(ACT)                 IF CTLOC GQ X'1000000'     02620020
         BAL   CRR,CTLNK2(ACT)          BRANCH TO A.C.T. LINKAGE ALG'RM 02640020
         MVC   CTLOC(4,ACT),ACTEMP0          SET SEQ NO. IN CTWRAP7     02660020
         CLC   CTLOC+1(3,ACT),CTZERO(ACT)    IF CTLOC GR X'1000000'     02680020
         BE    AC2                      DON'T, IF EQ X'1000000'         02700020
         MVI   CTLOC+0(ACT),0           ZERO 1ST LOC COUNTER BYTE       02720020
         CLC   CTWRAP7(4,ACT),CTZERO(ACT)    IF NOT FIRST TIME HERE,    02740020
         BNE   AC2                      SKIP TO TXGET CALL              02760020
         MVC   CTWRAP7(4,ACT),CTSEQN(ACT)    ELSE, INSERT SEQ. NUMBER   02780020
         SPACE                                                          02800020
AC2      L     FRB,CTXGET(ACT)          CALL TXGET TO GET NEXT STATEMNT 02820020
         NI    CTEXENSW(ACT),X'FB'      RESET ACT-SWITCH FOR SAF        02830025
         BALR  CRR,ACT                  TXGET=ASMGF7X                   02840022
         SPACE                                                          02860020
         TM    TXTO(GRA),BIT0                                           02880020
         BO    AOP                      TXTO EQ ASSEMBLER OP            02900020
*        B     MOP                      TXTO EQ MACHINE OP              02920020
         EJECT                                                          02940020
*                                                                       02960020
         SPACE 2                                                        02980020
MOP      BC    0,MOP1                   /UPC/ BYPASS P.C. TEST          03000020
         BAL   CRR,UPC                  TEST UNINITIATED PRIVATE CODE   03020020
         SPACE                                                          03040020
MOP1     SR    SP1,SP1                  ALIGN LOC COUNTER TO HALF WORD  03060020
         LA    SP2,2                    AND SET CTLOC, TXLOC, TXALIN    03080020
         BAL   CRR,ALIGN                                                03100020
         CLI   TXHEX(GRA),X'B2'         POSSIBLY PTLB OR IPK .Q         03105027
         BNE   MOP0                     BRANCH IF NOT                   03110027
         CLI   TXR1M(GRA),X'6B'         IS IT IPK .Q                    03115027
         BE    MOP3                     NO ARGS AT ALL IF SO            03120027
         CLI   TXR1M(GRA),X'6D'         IS IT PTLB .Q                   03125027
         BE    MOP3                     NO ARGS AT ALL IF SO            03130027
MOP0     DS    0H                                                       03135027
         TM    TXESI(GRA),BIT6          TEST FOR LIT IN OPERAND         03140020
         BZ    MOP2                     NONE. SKIP LITERAL EVAL.        03160020
*./      DELETE    SEQ1=03180023,SEQ2=03220023                          03220025
         BAL   CRR,XREF                 MAKE TYPE 2 XREF                03230025
         L     FRB,CDCVAL(ACT)          CALL DCEVAL TO EVALUATE LITERAL 03240020
         BALR  CRR,ACT                  FUNCT. ROUT. LINKAGE TO ASMGF7D 03260023
MOP1D    OI    CTXRFI(ACT),BIT6         RESET XREF BIT                  03270023
         CLI       0(SP1),IBLANK       ARE WE AT END OF FIELD           03280020
         BE        MOP3                YES, DONT XREF                   03300020
*                                                                       03320020
*        SET UP TO GO INTO MIDDLE OF XREF ROUTINE                       03340020
*                                                                       03360020
         L         CRR,CTXOFP(0,ACT)   GET LAST BYTE OF                 03380020
         SR        FRB,FRB               OPERAND INTO REGISTER          03400020
         IC        FRB,TXOPNL(0,CRR)       FRB FOR XREF                 03420020
         AR        FRB,CRR                                              03440020
         BAL       CRR,XREF0           XREF TYPE TWO                    03460020
         B         MOP3                CONTINUE ON                      03480020
         SPACE                                                          03500020
MOP2     BC    0,MOP3                   /AC0/ BYPASS X-REF              03520020
         BAL   CRR,XREF                 GENERATE TYPE 2 X-REF RECORDS   03540020
         SPACE                                                          03560020
MOP3     LA    GRX,2                    TEST HEX CODE FOR OP LENGTH     03580020
         TM    TXHEX(GRA),BIT0+BIT1     LOOK AT FIRST TWO BITS          03600020
         BZ    AC5                      NO BITS, LEAVE OP. LENGTH TWO   03620020
         LR    GR1,GRX                  USE GR1 TO INCREMENT OP  LENGTH 03640020
         BM    MOP4                     ONLY ONE BIT, SKIP TO LAST INC. 03660020
         AR    GRX,GR1                  DO THIS ONLY FOR BOTH BITS ON   03680020
MOP4     AR    GRX,GR1                  GRX NOW HAS FOUR OR SIX         03700020
         SPACE                                                          03720020
*        GO TO AC5 WITH OP LENGTH IN GRX                                03740020
         EJECT                                                          03760020
*                                                                       03780020
         SPACE                                                          03800020
AC5      LR    GR0,GRX                  STEPLLOCATION COUNTER           03820020
         A     GR0,CTLOC(ACT)           WITH OP LENGTH CONTAINED IN GRX 03840020
         ST    GR0,CTLOC(ACT)                                           03860020
         SPACE                                                          03880020
AC6      CLI   TXNAML(GRA),0            TEST NAME FOR S.T. ENTRY        03900020
         BE    AC1                      NONE, GO FINISH STATEMENT       03920020
         SPACE                                                          03940020
         LTR   GRX,GRX                  SET LEGNTH ATTRIBUTE            03960020
         BZ    AC61                     FROM OP LENGTH CONTAINED IN GRX 03980020
         BCTR  GRX,0                    LEN ATTR. EQ LEN-1 IF LEN GR 0  04000020
AC61     STH   GRX,STLONG(ACT)                                          04020020
         MVC   STVALU+1(3,ACT),TXLOC(GRB)  SET VALUE ATTR FROM TXLOC    04030027
         SPACE                                                          04040020
AC62     DS    0H                                                       04050027
         MVC   ESDID(1,ACT),CESDID(ACT) SET ESDID EQ CURRENT ESD        04060020
         SPACE                                                          04080020
         MVI   ADJCOD(ACT),7            SET ADJECTIVE CODE              04100020
         CLI   CTYPE(ACT),7                 EQ 7 IF CTYPE EQ 5 OR 7     04120020
         BE    AC7                          EQ 3 IF CTYPE NQ 5 OR 7     04140020
         CLI   CTYPE(ACT),5                                             04160020
         BE    AC7                                                      04180020
         MVI   ADJCOD(ACT),3                                            04200020
         SPACE                                                          04220020
AC7      DS    0H                                                       04240027
         SPACE                                                          04260020
AC8      L     SRB,CSTPUT(ACT)          SET SRB FOR S.T. ENTRY          04280020
         SPACE 2                                                        04300020
AC9      TM    TXMDN(GRA),BIT3          IF MULT. DEFINED NAME FLAG SET, 04320020
         BO    AC1                      BYPASS S.T. ENTRY/CHECK         04340020
         SPACE                                                          04360020
         CLI   TXHEX(GRA),X'1F'         IS OPERATION EQU .Q             04370025
         BE    AC91                     YES                             04375025
         NI    CTEXENSW(ACT),X'FB'      NO, RESET SWITCH IN ACT         04380025
AC91     SR    SP2,SP2                  SET STPUT/STGET ENTRANCE PARAM  04385025
         IC    SP2,TXNAML(GRA)          SP2 EQ NAME FIELD LENGTH        04400020
         LA    SP1,TXNAME(GRA)          SP1 PT TO NAME IN NAME FIELD    04420020
         BALR  SRR,SRB                  CALL STPUT OR STGET             04440020
         NOP   0                        ABNORMAL EXIT /NOT USED BY MLC/ 04460020
         LTR   SP1,SP1                  IF NAME NOT PREVIOUSLY DEFINED, 04480020
         BZ    AC1                      SP1 WILL BE SET TO ZERO         04500020
         SPACE                                                          04520020
         OI    TXMDN(GRA),BIT3          MULTIPLY DEFINED, SET TXMDN,    04540020
         BAL   SRR,ERROR0               AND LOG ERROR                   04560020
         DC    AL2(ACER00)                                              04580020
         B     AC1                      BACK TO FINISHING POINT         04600020
         EJECT                                                          04620020
*                                                                       04640020
         SPACE 2                                                        04660020
AOP      TM    TXASC(GRA),BIT0          TEST ASC FOR UPC CHECK          04680020
AOP0     BC    8,AOP2                   /MOD BY UPC/ BYPASS UPC CHECK   04700020
         BAL   CRR,UPC                                                  04720020
         SPACE                                                          04740020
AOP2     TM    TXASC(GRA),BIT2          TEST ASC FOR LOC COUNTER REF.   04760020
         BZ    AOP3                                                     04780020
         MVC   TXLOC(3,GRB),CTLOC+1(ACT)  MOVE CURRENT LOC CTR TO TXLOC 04800020
         SPACE                                                          04820020
AOP3     TM    TXASC(GRA),BIT3          TEST ASC                        04840020
AOP30    BC    8,AOPGO                  /MOD BY AC0/ BYPASS X-REF       04860020
         BAL   CRR,XREF                 GENERATE TYPE 2 X-REF           04880020
         SPACE 2                                                        04900020
*                                                                       04920020
         SPACE                                                          04940020
AOPGO    SR    GR1,GR1                  USE HEX CODE TO CALC. DISPLCMNT 04960020
         IC    GR1,TXHEX(GRA)           OF POINTER TO ASSEMBLER OP RTN. 04980020
         SH    GR1,AOPGO2               HEX CODE LT X'OE', THEN...      05000020
         BM    AC2                      GO GET A NEW STATEMENT          05020020
         SLL   GR1,1                    MULT REMNANT BY 2               05040020
         LH    GR1,AOPGO2+2(GR1)        GET ADDRESS FROM TABLE          05060020
         B     AC0(GR1)                 BRANCH TO PROCESS OPERATION     05080020
         EJECT                                                          05100020
* ASSEMBLER OP COMPUTED GO-TO DISPLACEMENT VALUES (ASSIGNMENT MODE)     05120020
         SPACE 2                                                        05140020
AOPGO2   DC    X'000E'                  ASSIGNMENT MODE LOWER LIMIT     05160020
         SPACE                                                          05180020
         DC    AL2(MNOTE-AC0)           HEX 0E    MNOTE                 05200020
         DC    AL2(AC1-AC0)                 0F                          05220020
         DC    AL2(AC1-AC0)                 10                          05240020
         DC    AL2(AC1-AC0)                 11                          05260020
         DC    AL2(AC1-AC0)                 12                          05280020
         DC    AL2(AC1-AC0)                 13                          05300020
         DC    AL2(AC1-AC0)                 14                          05320020
         DC    AL2(AC1-AC0)                 15                          05340020
         DC    AL2(PUNCH-AC0)               16    PUNCH                 05360020
         DC    AL2(REPRO-AC0)               17    REPRO                 05380020
         DC    AL2(TITLE-AC0)               18    TITLE                 05400020
         DC    AL2(ENTRY-AC0)               19    ENTRY                 05420020
         DC    AL2(EXTRN-AC0)               1A    EXTRN                 05440020
         DC    AL2(START-AC0)               1B    START                 05460020
         DC    AL2(CSECT-AC0)               1C    CSECT                 05480020
         DC    AL2(DSECT-AC0)               1D    DSECT                 05500020
         DC    AL2(COM-AC0)                 1E    COM                   05520020
         DC    AL2(EQU-AC0)                 1F    EQU                   05540020
         DC    AL2(ORG-AC0)                 20    ORG                   05560020
         DC    AL2(END-AC0)                 21    END                   05580020
         DC    AL2(LTORG-AC0)               22    LTORG                 05600020
         DC    AL2(AC1-AC0)                 23    USING                 05620020
         DC    AL2(AC1-AC0)                 24    DROP                  05640020
         DC    AL2(DCDS-AC0)                25    LITR                  05660020
         DC    AL2(DCDS-AC0)                26    DC                    05680020
         DC    AL2(DCDS-AC0)                27    DS                    05700020
         DC    AL2(CCW-AC0)                 28    CCW                   05720020
         DC    AL2(CNOP-AC0)                29    CNOP                  05740020
         DC    AL2(QUIT-AC0)                2A    QUIT                  05760020
         DC    AL2(DXD-AC0)                 2B    DXD                   05780020
         DC    AL2(CXD-AC0)                 2C    CXD                   05800020
         DC    AL2(OPSYN-AC0)               2D    OPSYN                 05810023
         DC    AL2(WXTRN-AC0)               2E    WXTRN                 05815025
         DC    AL2(AC1-AC0)                 2F    POP                   05816027
         DC    AL2(AC1-AC0)                 30    PUSH                  05817027
         EJECT                                                          05820020
* PROCESS TITLE STATEMENTS (ASSIGNMENT MODE ONLY)                       05840020
         SPACE 2                                                        05860020
TITLE    CLC   CTSEQN(4,ACT),=F'1'      TEST SEQUENCE NUMBER            05880020
         BNE   TITLE0                   IF FIRST CARD IS TITLE CARD,    05900020
         MVI   EJCTSW(ACT),X'00'        CLEAR F/8 EJECT SWITCH          05920020
         SPACE                                                          05940020
TITLE0   CLI   TXNAML(GRA),0            TEST NAME FIELD LENGTH          05960020
         BNE   TITLE1                   BRANCH IF LABEL PRESENT   V7A02 05980028
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A02 05982028
         BO    TITLE5                   YES, ALLOW LATER TITLE    V7A02 05984028
         B     TITLE4                   NO FURTHER TITLE LABELS   V7A02 05986028
         SPACE                                                          06000020
TITLE1   BC    15,TITLE2                NOP /MOD BY TITLE4/ AFTER FIRST 06020020
         BAL   SRR,ERROR0               LOG ERROR IF NAME APPEARS ON    06040020
         DC    AL2(ACER40)              OTHER THAN FIRST TITLE CARD     06060020
         B     TITLE4                   AND DON'T PROCESS NAME          06080020
         SPACE                                                          06100020
TITLE2   IC    GR1,TXNAML(GRA)          SAVE NAME LEN IN GR1            06120020
         CLI   TXNAML(GRA),4            TEST NAME LEN GR 4              06140020
         BNH   TITLE3                   NAME LEN LQ 4, O.K.             06160020
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q                  06164027
         BO    TITLE3                   YES, USE WITHOUT COMPLAINT      06168027
         BAL   SRR,ERROR0               NAME LEN GR 4, LOG ERROR        06180020
         DC    AL2(ACER41)                             AND USE FIRST    06200020
         LA    GR1,4                                   FOUR CHARACTERS  06220020
         SPACE                                                          06240020
TITLE3   BCTR  GR1,0                    LENGTH MINUS ONE FOR MVC AND TR 06260020
         L     GR2,CTRTBP(ACT)          GR2 PTS TO TRANSLATE TABLE      06280020
         EX    GR1,TITLEM               MOVE NAME INTO CONTROL TABLE    06300020
         EX    GR1,TITLET               TRANSLATE TO EXTERNAL CODE      06320020
         SPACE                                                          06340020
TITLE4   NI    TITLE1+1,X'0F'           MODIFY FOR SUBSEQUENT TITLES    06360020
         SPACE                                                          06380020
TITLE5   DS    0H                                                 V7A02 06390028
         BAL   SRR,SQUASH               MOVE TITLE TO 2ND COMM FIELD    06400020
         CLI   0(GRY),100               TEST LENGTH                     06420020
         BNH   AC1                      GO FINISH, IF NOT TOO LONG      06440020
         BAL   SRR,ERROR0               TOOOO BIG, LOG ERROR            06460020
         DC    AL2(ACER42)              'DATA ITEM TOO LARGE'           06480020
         B     ABORT                    WIPE UP THE MESS                06500020
         SPACE                                                          06520020
TITLEM   MVC   CTITLE(0,ACT),TXNAME(GRA)                                06540020
         SPACE                                                          06560020
TITLET   TR    CTITLE(0,ACT),0(GR2)                                     06580020
         EJECT                                                          06600020
* PROCESS PUNCH AND REPRO (ASSIGNMENT MODE ONLY)                        06620020
         SPACE 2                                                        06640020
PUNCH    BAL   SRR,SQUASH               ENTRY FOR PUNCH - CALL SQUASH   06660020
         B     PUNCH0                    SR TO MOVE AND COMPRESS OPND   06680020
         SPACE                                                          06700020
REPRO    L     GRY,CTXABP(ACT)          ENTRY FOR REPRO - CALL SQUASH   06720020
         SR    GRX,GRX                   WITH POINTER TO 2ND COM IN GRY 06740020
         IC    GRX,0(GRY)                      LENGTH OF 2ND COM IN GRX 06760020
         BAL   SRR,SQUASH8               TO TRANSLATE TO EXTERNAL       06780020
         SPACE                                                          06800020
         SPACE                                                          06820020
         TM    TXERI(GRA),BIT5          TEST FOR PREV. LOGGED ERRORS    06840020
         BO    ABORT                    IF SO, ABORT PROCESSING         06860020
         L     GR1,CTSEQN(ACT)                                          06880020
         LA    GR1,1(GR1)                                               06900020
         ST    GR1,CTSEQN(ACT)          UPDATE THE SEQUENCE NUMBER      06920020
PUNCH0   CLI   0(GRY),80    TEST 2ND COM LENGTH                         06940020
         BH    PUNCHERR     ERROR IF GR 80                              06960020
         SPACE                                                          06980020
         CLI   CESDID(ACT),0            TEST FOR F/7 PROCESSING         07000020
         BNE   AC1                      BYPASS IF CODE HAS BEEN GENERTD 07020020
         SPACE                                                          07040020
         MVI   CTWORK+0(ACT),X'00'      MOVE CONTROL CHAR               07060020
         MVI   CTWORK+2(ACT),C' '       AND CARD IMAGE TO CTWORK        07080020
         MVC   CTWORK+3(78,ACT),CTWORK+2(ACT)                           07100020
         EX    GRX,PUNCHMVC                                             07120020
         SPACE                                                          07140020
         L     SRB,CTXTIO(ACT)          PUNCH CARD                      07160020
         LA    SP1,CTWORK(ACT)                                          07180020
         BAL   SRR,SYSOUT(SRB)          COMMON SUBR. LINKAGE TO ASMGF7I 07200022
         SPACE                                                          07220020
         B     TRUNCATE                 REMOVE 2ND COM FIELD            07240020
         SPACE                                                          07260020
PUNCHMVC MVC   CTWORK+1(0,ACT),1(GRY)                                   07280020
         SPACE                                                          07300020
PUNCHERR BAL   SRR,ERROR0               OPERAND EXCEEDS 80 CHAR         07320020
         DC    AL2(ACER60)              LOG ERROR                       07340020
         B     ABORT                    AND ABORT PROCESSING            07360020
         EJECT                                                          07380020
*  PROCESS MNOTE...COMPRESS OPERAND AND MOVE TO SPECIAL WORK BUCKET     07400020
    SPACE                                                               07420020
MNOTE    L     SP1,CTXOFP(ACT)          FIND OPERAND LENGTH FIELD       07440020
         IC    GR1,TXOPNL(SP1)          PICK UP OP'ND LENGTH BYTE       07460020
         STC   GR1,MNOTEMV1+1           INSERT INTO 'MVC'               07480020
         NI    MNOTESC+1,X'0F'          OPEN GATE TO MNOTE LOGGING      07500020
         SR    SP2,SP2                  SEVERITY CODE STARTS AT ZERO    07520020
MNOTEMV1 MVC   0(0,GRB),0(SP1)          MOVE OPERAND TO SPECIAL W.B.    07540020
         MVI   CTWORK(ACT),IQUOTE       WORK AREA STARTS WITH QUOTE     07560020
         MVC   CTWORK+1(33,ACT),1(SP1)  PUT OPERAND IN BEHIND THAT      07580020
         CLI   1(SP1),IASTER            IF STARTS WITH *, COMMENT ONLY  07600020
         BNE   MNOTE1                   NO, GO CHECK FOR QUOTE          07620020
         LA    SP1,2(SP1)               STEP POINTER UP TO THE COMMA    07640020
         OI    MNOTESC+1,X'F0'          CLOSE ERROR LOGGING GATE        07660020
         B     MNOTE2                   GO TEST REST OF OPERAND         07680020
         SPACE                                                          07700020
MNOTE1   CLI   1(SP1),IQUOTE            NOT *, MAYBE IT'S A QUOTE       07720020
         BNE   MNOTE1A                  BRANCH IF NOT             V7A41 07740028
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A41 07742028
         BNO   MNOTE3                   NO, SEVERITY CODE OMITTED V7A41 07744028
         OI    MNOTESC+1,X'F0'          CLOSE ERROR LOGGING GATE  V7A41 07746028
         B     MNOTE3                   SEVERITY CODE WAS OMITTED V7A41 07748028
MNOTE1A  DS    0H                                                 V7A41 07750028
         LA    SP1,1(SP1)               NO, STEP POINTER FORWARD        07760020
         LA    SP2,1                    SEV. CODE 1                     07780020
         CLI   0(SP1),9                 FIRST BYTE MIGHT BE NUMBER      07800020
         BH    MNOTE2                   NO, GO CHECK FOR COMMA          07820020
         L     SRB,CEEVAL(ACT)          YES, EVALUATE SEV. CODE         07840020
         OI    CTSDVI(ACT),BIT0         SET SELF-DEFINING ERM IND.      07860020
         BALR  SRR,SRB                  TO F7V THROUGH ACT LINKAGE      07880027
         BNZ   ABORT                    F7V LEAVES CC=0 IF ABS TERM     07900027
MNOTE2   CLI   0(SP1),ICOMMA            WE LIKE COMMA AT END OF OP'ND   07920020
         BNE   MNOTERR                  AND OBJECT, IF WE NO GET 'EM    07940020
         CLI   1(SP1),IQUOTE            ALSO WANT QUOTE TO COME NEXT    07960020
         BNE   MNOTERR                  GO REGISTER OBJECTION           07980020
         S     SP1,CTXOFP(ACT)          FIND HOW MANY BYTES IN FIRST OP 08000020
         EX    SP1,MNOTEMV2             FIRST OP'ND TO SPEC.WRK BUCKET  08020020
MNOTE3   ST    SP2,ACTEMP0             PUT DOWN SEV. CODE               08040020
         CLC   ACTEMP0(3),CTZERO(ACT)   CHECK LESS THAN 256             08060020
         BE    MNOTE4                   OK, DON'T COMPLAIN              08080020
         BAL   SRR,ERROR0               BAD SHOW, LOG ERROR             08100020
         DC    AL2(ACER71)              'INVALID SELF-DEFINING TERM'    08120020
         B     ABORT                    DISGUSTING, GIVE UP             08140020
MNOTE4   ST    GRB,CTXOFP(ACT)          SET TO POINT TO NEW W.B.        08160020
         BAL   SRR,SQUASH               SQUEEZE THE WORK BUCKET         08180020
MNOTESC  BC    0,MNOTE6                 LOGGING GATE SET UP ABOVE       08200020
         CLC   ACTEMP0+3,CTSEVCOD(ACT)  LOOK FOR HIGHEST SEV. CODE      08220020
         BNH   MNOTE5                   NOT THIS ONE, SO SKIP           08240020
         MVC   CTSEVCOD(1,ACT),ACTEMP0+3  FOUND A HIGHER ONE, KEEP IT   08260020
MNOTE5   BAL   SRR,ERROR0               LOG ERROR RECORD                08280020
         DC    AL2(ACER70)              'MNOTE STATEMENT'               08300020
         NI    TXERI(GRA),X'FF'-BIT5    TURN OFF 'ERROR RECORD FOLLOWS' 08320020
MNOTE6   NI    TXRT(GRA),X'FF'-BIT3     SET TO PRINT, 'GEN' OR 'NOGEN'  08340020
         B     AC2                      GO BACK FOR NEXT STATEMENT      08360020
         SPACE                                                          08380020
MNOTERR  BAL   SRR,ERROR                LOG ERROR                       08400020
         DC    AL2(ACER72)              'INVALID DELIMITER'             08420020
         B     ABORT                    GIVE UP ON THIS STATEMENT       08440020
         SPACE                                                          08460020
MNOTEMV2 MVC   1(0,GRB),CTWORK(ACT)     EXECUTED                        08480020
         EJECT                                                          08500020
*        SQUASH...ROUTINE TO REMOVE DOUBLE QUOTES AND AMPERSANDS        08520020
         SPACE                                                          08540020
SQUASH   L     SP1,CTXOFP(ACT)          ADDRESS OF OPERAND-1            08560020
         SR    SP2,SP2                  MAKE ZERO                       08580020
         IC    SP2,0(SP1)               LENGTH OF OPERAND               08600020
         AR    SP2,SP1                  END OF OPERAND, +1              08620020
SQUASH0  L     GRX,CTXABP(ACT)          ADDRESS OF SECOND COM FIELD     08640020
         LR    GRY,GRX                  ALSO IN GRY                     08660020
         BCTR  SP2,0                    ADDRESS LAST OPERAND BYTE       08680020
         LA    SP1,1(SP1)               ADDRESS FIRST OPERAND BYTE      08700020
         CLI   0(SP1),IQUOTE            FIRST BYTE SHOULD BE QUOTE      08720020
         BNE   SQUASHE1                 NO, LOG ERROR                   08740020
SQUASH01 CR    SP2,SP1                  OPND END SHOULD BE PAST START   08760020
         BNH   SQUASHE1                 NO, LOG ERROR                   08780020
         CLI   0(SP2),IQUOTE            LAST BYTE MAY BE QUOTE          08800020
         BE    SQUASH2                  YES,START PROCESSING            08820020
         BCT   SP2,SQUASH01             NO, MOVE END POINTER AND REPEAT 08840020
         SPACE                                                          08860020
SQUASHE1 BAL   SRR,ERROR                OPERAND NOT ENCLOSED IN QUOTES  08880020
         DC    AL2(ACER50)              LOG ERROR                       08900020
         B     ABORT                    AND ABORT PROCESSING            08920020
         SPACE                                                          08940020
SQUASH1  MVC   0(1,GRX),0(SP1)          MOVE BYTE FROM OPND TO 2ND COM  08960020
SQUASH2  LA    SP1,1(SP1)               STEP START POINTER              08980020
         CR    SP1,SP2                  MAY BE AT OPND END              09000020
         BNL   SQUASH4                  YES, GO SET LENGTH INDICATOR    09020020
         LA    GRX,1(GRX)               NO, POINT TO NEXT 2ND COM POS'N 09040020
         CLI   0(SP1),IQUOTE           MAY BE A QUOTE                   09060020
         BE    SQUASH3                 YES, GO SEE IF NEXT ONE IS TOO   09080020
         CLI   0(SP1),IAMPSD            MAY BE AN AMPERSAND             09100020
         BNE   SQUASH1                  NO, GO MOVE THE BYTE            09120020
SQUASH3  CLC   0(1,SP1),1(SP1)          NEXT BYTE MAY BE THE SAME       09140020
         BNE   SQUASHE2                 NO, UNPAIRED SOMETHING          09160020
         LA    SP1,1(SP1)               YES, SKIP THAT BYTE             09180020
         CR    SP1,SP2                  CAREFUL ABOUT OPERAND END       09200020
         BL    SQUASH1                  OK, NOW MOVE ANOTHER BYTE       09220020
         SPACE                                                          09240020
SQUASHE2 BCTR  SP1,0                    UNPAIRED QUOTE OR AMPSND        09260020
         BAL   SRR,ERROR                LOG ERROR                       09280020
         DC    AL2(ACER51)              AND ABORT                       09300020
         B     ABORT                                                    09320020
         SPACE                                                          09340020
SQUASH4  SR    GRX,GRY                  SET 2ND COM FIELD LENGTH        09360020
         BZ    SQUASHE2                 AND INC TXRL                    09380020
         STC   GRX,0(GRY)                                               09400020
         LA    GR1,1(GRX,GRY)                                           09420020
         SR    GR1,GRA                                                  09440020
         STH   GR1,TXRL(GRA)                                            09460020
         SPACE                                                          09480020
SQUASH8  L     GR1,CTRTBP(ACT)          ENTRY FOR REPRO                 09500020
         BCTR  GRX,0                    TRANSLATE 2ND COM FIELD         09520020
         EX    GRX,SQUASHTR             TO EXTERNAL CODE                09540020
         BR    SRR                                                      09560020
         SPACE                                                          09580020
SQUASHTR TR    1(0,GRY),0(GR1)                                          09600020
         EJECT                                                          09620020
* PROCESS EQU STATEMENTS (ASSIGNMENT MODE)                              09640020
         SPACE 2                                                        09660020
EQU      L     SRB,CEEVAL(ACT)          CALL EXPRESSION EVAL SUBROUTINE 09680020
         L     SP1,CTXOFP(ACT)          WITH POINTER TO FIRST BYTE      09700020
         LA    SP1,1(SP1)               OF OPERAND IN SP1               09720020
         OI    CTPDSI(ACT),BIT2         SET PREVIOUSLY DEF SYMB REQ IND 09740020
         BALR  SRR,SRB                  TO F7V THROUGH ACT LINKAGE      09760027
         SPACE                                                          09780020
         BC    8,EQUABS                 RETURN WITH CC EQ ABS           09800020
         BC    4,EQUREL                                   SIMPLY RELOC  09820020
         BC    1,EQUABORT                                 ERROR         09840020
         BAL   SRR,ERROR0               LOG ERROR         COMPLEX RELOC 09860020
         DC    AL2(ACER21)                                              09880020
         B     EQUABORT                 ABORT PROCESSING                09900020
         SPACE                                                          09920020
EQUREL   MVC   ESDID(1,ACT),5(SP2)      SIMPLY RELOC, SET ESDID         09940020
         L     SP2,0(SP2)               SET VALUE IN SP2                09960020
         CLC   ESDID(1,ACT),CTNDID+1(ACT) SET ADJ CODE EQ 7             09980020
         BH    EQUDSC                     IF DEFINED IN DSECT OR COM    10000020
         CLC   ESDID(1,ACT),CTCMSW(ACT)                                 10020020
         BNE   EQUNDC                                                   10040020
EQUDSC   LA    GR1,7                                                    10060020
         B     EQUSET                   OTHERWISE, ADJ CODE EQ 3        10080020
         SPACE                                                          10100020
EQUABS   MVI   ESDID(ACT),0             ABSOLUTE, SET ESDID EQ 0        10120020
         SPACE                                                          10140020
EQUNDC   LA    GR1,3                    ADJCOD EQ 3 IF ABS OR NOT DSCCM 10160020
         SPACE                                                          10180020
EQUSET   STC   GR1,ADJCOD(ACT)          SET ADJCODE FOR S.T. ENTRY      10200020
         ST    SP2,STVALU(ACT)          SET VALUE FOR S.T. ENTRY        10220020
*        MVC   TXLOC(3,GRB),STVALU+1(ACT) MOVCE VALUE TO TEXT           10240020
*        MVC   TXALIN(1,GRB),ESDID(ACT) MOVE ESDID TO TEXT              10260020
         SPACE                                                          10280020
         CLI   0(SP1),IBLANK            TEST TERM CHAR EQ BLANK         10300020
         BE    AC8                      PUT IN SYMBOL TABLE             10320020
         SPACE                                                          10321027
         TM    CTEXTENI(ACT),X'04'      WAS EXTEN SPECIFIED .Q          10322027
         BZ    EQUDLMER                 DELIM ERROR IF NOT              10323027
         CLI   0(SP1),ICOMMA            TEST TERM CHAR EQ COMMA         10324027
         BNE   EQUDLMER                 DELIM ERROR IF NOT              10325027
         LA    SP1,1(,SP1)              POINT TO NEXT CHAR              10326027
         CLI   0(SP1),ICOMMA            NULL SECOND OPND .Q             10327027
         BE    EQU3STRT                 LENGTH ONE IF YES               10328027
         MVC   STLONGSV,STLONG(ACT)     SAVE DEFAULT LENGTH             10329027
         L     SRB,CEEVAL(,ACT)         CALL EXPRESSION EVAL ROUTINE    10330027
         BALR  SRR,SRB                  TO F7V THROUGH ACT LINKAGE      10331027
         MVC   STLONG(2,ACT),STLONGSV   RESTORE DEFAULT LENGTH          10332027
         BNZ   EQUINVER                 BRANCH IF NOT ABSOLUTE          10333027
         LTR   SP2,SP2                  IS IT NEGATIVE .Q               10334027
         BM    EQUINVER                 ERROR IF YES                    10335027
         C     SP2,F65535               IS IT TOO BIG .Q                10336027
         BH    EQUINVER                 ERROR IF YES                    10337027
         BCTR  SP2,0                    DECREMENT LENGTH BY ONE         10338027
         STH   SP2,STLONG(,ACT)         SAVE RESULT                     10339027
         SPACE                                                          10340027
EQU3STRT DS    0H                                                       10341027
         CLI   0(SP1),IBLANK            TEST TERM CHAR EQ BLANK         10342027
         BE    AC8                      PUT IN SYMBOL TABLE IF SO       10343027
         CLI   0(SP1),ICOMMA            TEST TERM CHAR EQ COMMA         10344027
         BNE   EQUDLMER                 DELIM ERROR IF NOT              10345027
         LA    SP1,1(,SP1)              POINT TO 3RD ARGUMENT           10346027
         MVC   STLONGSV,STLONG(ACT)     SAVE DEFAULT LENGTH             10347027
         L     SRB,CEEVAL(,ACT)         CALL EXPRESSION EVAL ROUTINE    10348027
         BALR  SRR,SRB                  TO F7V THROUGH ACT LINKAGE      10349027
         MVC   STLONG(2,ACT),STLONGSV   RESTORE LENGTH                  10350027
         BNZ   EQUINVER                 BRANCH IF NOT ABSOLUTE          10351027
         LTR   SP2,SP2                  IS IT NEGATIVE .Q               10352027
         BM    EQUINVER                 ERROR IF YES                    10353027
         C     SP2,F255                 IS IT TOO BIG .Q                10354027
         BH    EQUINVER                 ERROR IF TOO LARGE              10355027
         CLI   0(SP1),IBLANK            TEST TERM CHAR EQ BLANK         10356027
         BE    AC8                      YES, PUT IN SYMBOL TABLE        10357027
         B     EQUDLMER                 DELIM ERROR IF NOT BLANK        10358027
         SPACE                                                          10359027
EQUINVER DS    0H                                                       10360027
         BAL   SRR,ERROR                LOG ERROR                       10361027
         DC    AL2(ACER22)              INVALID 2ND,3RD EQU ARGUMENT    10362027
         B     EQUABORT                 ABORT PROCESSING                10363027
         SPACE                                                          10364027
EQUDLMER DS    0H                                                       10365027
         BAL   SRR,ERROR                LOG ERROR                       10366027
         DC    AL2(ACER20)              INVALID TERM DELIM              10380020
         B     EQUABORT                 ABORT PROCESSING                10400020
EQUABORT B     ABORT                                                    10420020
         SPACE                                                          10424027
F65535   DC    F'65535'                 MAX EQU ARG TWO                 10428027
F255     DC    F'255'                   MAX EQU ARG THREE               10432027
STLONGSV DC    H'0'                     SAVE FOR EXTENDED EQU LENGTH    10436027
         SPACE                                                          10440020
         EJECT                                                          10460020
* PROCESS CNOP STATEMENTS (ASSIGNMENT MODE ONLY)                        10480020
         SPACE 2                                                        10500020
CNOP     L     SP1,CTXOFP(ACT)                                          10520020
         BAL   CRR,CNOPEVAL             EVALUATE B                      10540020
         CLI   0(SP1),ICOMMA            TEST FIRST DELIMITER            10560020
         BNE   CNOPERR1                 NQ COMMA                        10580020
         LR    FRB,SP2                  SAVE B VALUE IN FRB             10600020
         BAL   CRR,CNOPEVAL             EVALUATE W                      10620020
         CLI   0(SP1),IBLANK            TEST SECOND DELIMITER           10640020
         BE    CNOPGOGO                 EQ BLANK                        10660020
         SPACE                                                          10680020
CNOPERR1 BAL   SRR,ERROR                LOG ERROR,                      10700020
         DC    AL2(ACER10)              FIRST OR SECOND DELIMITER ERROR 10720020
         B     CNOPNOGO                 GO RESET AND GIVE UP            10740020
         SPACE                                                          10760020
CNOPGOGO BC    0,CNOPNOGO               /ALTERED BY CNOPERRX/           10780020
         LA    CRR,CNOPEXIT             SET RETURN REGISTER             10800027
         LA    GR0,1                    GET ONE IN A REGISTER           10805027
         N     GR0,CTLOC(,ACT)          1 IF ODD, 0 IF EVEN             10810027
         A     GR0,CTLOC(,ACT)          HALF WORD ALIGNED LOCATION      10815027
         LR    SP1,FRB                  SAVE B VALUE                    10820020
         N     FRB,=F'1'                FRB MODULO 2                    10840020
         BNZ   CNOPERR2                 GO LOG ERROR...B MUST BE EVEN   10860020
         CLR   SP1,SP2                  B SHOULD BE LT W VALUE          10880020
         BNL   CNOPERR2                 OR ELSE, LOG ERROR              10900020
         LA    GR1,4                    GR1 GETS FULL-WORD VALUE        10920020
         CR    SP2,GR1                  IF IT LOOKS LIKE W VALUE...     10940020
         BE    ALIGN                    ALIGN CTLOC, TXLOC, TXALIN      10960020
         AR    GR1,GR1                                                  10980020
         CR    SP2,GR1                                                  11000020
         BE    ALIGN                                                    11020020
         SPACE                                                          11040020
CNOPERR2 BAL   SRR,ERROR0               LOG ERROR,                      11060020
         DC    AL2(ACER11)              ILLEGAL VALUE FOR B OR W        11080020
         B     ABORT                    ABORT PROCESSING THIS STATEMENT 11100020
         SPACE                                                          11120020
CNOPEVAL LA    SP1,1(SP1)               STEP TO NEXT BYTE               11140020
         ST    SP1,ACTEMP0              STORE ADDRESS FOR A WHILE       11160020
         OI    CTPDSI(ACT),BIT2         SET 'DEFINED SYMBOLS REQUIRED'  11180020
         L     SRB,CEEVAL(ACT)          READY TO GO TO ASMGF7V          11200022
         BALR  SRR,SRB                  AND GO, THROUGH ACT             11220020
         BCR   8,CRR                    ABSOLUTE VALUE, OK TO RETURN    11240020
         LR    SP2,SP1                  DELIMITER POINTER TO SP2        11260020
         BC    1,CNOPERRX               EVAL FOUND SYNTAX ERROR..LOG IT 11280020
         L     SP1,ACTEMP0              RESTORE EVAL START POINTER      11300020
         BAL   SRR,ERROR                LOG ERROR,                      11320020
         DC    AL2(ACER12)              RELOCATABLE VALUE FOR B OR W    11340020
         SPACE                                                          11360020
CNOPERRX OI    CNOPGOGO+1,X'F0'         SET SWITCH TO ABORT PROCESSING  11380020
         LTR   SP1,SP2                                                  11400020
         BCR   7,CRR                    DELAYED ABORT                   11420020
         SPACE                                                          11440020
CNOPNOGO NI    CNOPGOGO+1,X'0F'         RESET SWITCH                    11460020
         B     ABORT                    WITHOUT DELAY                   11480020
         SPACE                                                          11482027
CNOPEXIT DS    0H                                                       11484027
         CLI   TXNAML(GRA),X'00'        IS THERE A CNOP LABEL .Q        11486027
         BE    AC1                      QUIT NOW IF NOT                 11488027
         ST    GR0,STVALU(,ACT)         SET FORMER LOCATION FOR VALUE   11490027
         B     AC62                     GO SET SYMBOL TABLE ENTRY       11492027
         EJECT                                                          11500020
* PROCESS DC,DS,LDC (ASSIGNMENT MODE)                                   11520020
         SPACE 2                                                        11540020
DCDS     L     FRB,CDCVAL(ACT)          CALL DCEVAL                     11560020
         BALR  CRR,ACT                  ASMGF7D THROUGH ACT             11580022
         SPACE                                                          11600020
         B     DCDS1                    NORMAL RETURN                   11620020
         SPACE                                                          11640020
         BAL   CRR,SUBWB                ABNORMAL RETURN FOR VCON        11660020
         B     DCDS                     SUBSTITUTE IN ASSIGNMENT        11680020
         SPACE                                                          11700020
DCDS1    L     GRX,CTLEN(ACT)           ASSIGNMENT, SAVE LEN IN GRX     11720020
         B     AC6                      AND MAKE S.T. ENTRY             11740020
         EJECT                                                          11760020
* PROCESS CCW STATEMENTS (ASSIGNMENT MODE ONLY)                         11780020
         SPACE 2                                                        11800020
CCW      SR    SP1,SP1                  SET B EQ 0                      11820020
         LA    SP2,8                    AND W EQ 8 FOR ALIGNMENT SUBR   11840020
         LR    GRX,SP2                  SAVE LENGTH IN GRX FOR INC.     11860020
         SPACE                                                          11880020
         BAL   CRR,ALIGN                ALIGN LOC COUNTER TO DOUBLE WD. 11900020
         SPACE                                                          11920020
         B     AC5                      MAKE S.T. ENTRY, INC CTLOC      11940020
         EJECT                                                          11960020
* PROCESS LTORG STATEMENTS                                              11980020
         SPACE 2                                                        12000020
LTORG    MVC   CTWORK(32,ACT),TXFAFL(GRB)   MOVE WORK BKTS TO WORK AREA 12020020
         CLI   TXURS(GRB),0             HAS THIS CARD BEEN PROCESSED    12040020
         BNE   LTORG1                   YES                             12060020
         OI    TXURS(GRB),X'FF'         NO,                             12080020
         LH    GR1,TXRL(GRA)            ADD 2 16 BYTE WORK BUCKETS      12100020
         LA    GR1,32(GR1)              TO TEXT AND INC REC LENGTH      12120020
         STH   GR1,TXRL(GRA)                                            12140020
         MVI   CTWORK(ACT),0            INITIALIZE WORK BUCKETS TO ZERO 12160020
         MVC   CTWORK+1(31,ACT),CTWORK(ACT)                             12180020
         SPACE                                                          12200020
LTORG1   SR    FRB,FRB                  USE FRB FOR TOTAL POOL LENGTH   12220020
         LA    GR1,12                   GR1 PTS TO LITA,LITB,WBKT ENTRY 12240020
         LA    GR0,4                    GR0 CONTAINS LOOP DEC, COMPARE  12260020
         SPACE                                                          12280020
LTORG2   L     GR2,CTLITA(ACT,GR1)      CURRENT LENGTH OF LITPOOL STRNG 12300020
         ST    GR2,CTWORK(ACT,GR1)      PUT IT IN WORK BUCKET           12320020
         AR    FRB,GR2                  UPDATE TOTAL LENGTH, IN FRB     12340020
         L     GR2,CTWORK+16(ACT,GR1)   WRK BKT 2. POOL STRING COUNT    12360020
         ST    GR2,CTLITA(ACT,GR1)      TO 'LENGTHS' AREA               12380020
         A     GR2,CTLITB(ACT,GR1)      ADD CURRENT 1. POOL STRING CNT  12400020
         ST    GR2,CTWORK+16(ACT,GR1)   TO WRK BKT 'COUNTS' AREA        12420020
         SPACE                                                          12440020
         CL    GR2,CTLITA(ACT,GR1)      ANY LITS IN THIS STRING?        12460020
         BE    LTORG3                   NO                              12480020
         OI    TXESI(GRA),BIT6          YES, SET TXESI FOR F/8          12500020
         MVI   CTLIT2(ACT),1            SET LIT2 IND EQ GEN LDC         12520020
LTORG3   SR    GR1,GR0                  ALL FOUR STRINGS CHECKED?       12540020
         BNL   LTORG2                   NO                              12560020
         CLI       CTLIT2(ACT),1       IF LIT GEN SWITCH                12565023
         BE        LTORGA                NOT ON,                        12570023
         XC        CTLITA(32,ACT),CTLITA(ACT)    THEN ZERO CTLITA       12575023
         SPACE                                                          12580020
LTORGA   MVC   TXFAFL(32,GRB),CTWORK(ACT)  MOVE WORK BKTS TO TEXT       12600023
         SPACE                                                          12620020
         SR    SP1,SP1                  ASSIGNMENT MODE...              12640020
         LA    SP2,8                    SET FOR DOUBLE-WORD ALIGNMENT   12660020
         BAL   CRR,ALIGN                AND ALIGN LOC CNTR FOR LIT POOL 12680020
LTORG31  TM    TXESI(GRA),BIT6          LOOK FOR LITERAL IN OPERAND     12700020
         BZ    LTORG4                   NO, GO CLEAN UP                 12720020
         L     SRB,CTXTIO(ACT)          YES, READY TO PUT LIT BASE TABL 12740020
         BAL   SRR,PUTLBT(SRB)          PUTLBT IS IN ASMGF7I            12760022
         MVC   0(1,SP1),CESDID(ACT)     ESDID TO LIT BASE TABLE BUFFER  12780020
         MVC   1(3,SP1),CTLOC+1(ACT)    RELATIVE ADDRESS OF 'LTORG'     12800020
         MVC   4(3,SP1),CTWORK+1(ACT)   LENGTH OF 8-BYTE STRING         12820020
         MVC   7(3,SP1),CTWORK+5(ACT)             4-BYTE STRING         12840020
         MVC  10(3,SP1),CTWORK+9(ACT)             2-BYTE STRING         12860020
         SPACE                                                          12880020
LTORG4   SR    GRX,GRX                  CLEAR GRX...                    12900020
         B     AC6                      GO TEST FOR S.T. ENTRY          12920020
         EJECT                                                          12940020
* PROCESS ORG STATEMENTS (ASSIGNMENT MODE ONLY)                         12960020
         SPACE 2                                                        12980020
ORG      L     GRX,CORG(ACT)            CALL ORG/ESD/ ROUTINE           13000020
         MVC   TXLOC+5(3,GRB),CTLOC+1(ACT) SAVE PREVIOUS LOC CTR IN EXT 13010025
         BAL   CRR,CTLNK2(ACT)          ASMGF7E VIA FUNC. ROUT. LINKAGE 13020025
         SPACE                                                          13040020
         MVC   TXLOC(3,GRB),CTLOC+1(ACT)  MOVE NEW LOC COUNTER TO TEXT  13060020
         SPACE                                                          13080020
ORGEXIT  DS    0H                                                       13090027
         CLI   TXNAML(GRA),X'00'        IS THERE AN ORG LABEL .Q        13095027
         BE    AC1                      QUIT NOW IF NOT                 13100027
         MVC   STVALU+1(3,ACT),TXLOC+5(GRB)  TAKE PREVIOUS LOCATION     13105027
         B     AC62                     GO SET SYMBOL TABLE ENTRY       13110027
         EJECT                                                          13120020
* PROCESS START, CSECT, DSECT, COM STATEMENTS                           13140020
         SPACE                                                          13160020
*********************************************************************** 13180020
START    L     GRX,CSTART(ACT)          START (ASSIGNMENT MODE)         13200020
         B     ESDWB0                   GRX IS READY FOR JUMP AT ESDWB2 13220020
CSECT    L     GRX,CCSECT(ACT)          CSECT (ASSIGNMENT MODE)         13240020
         B     ESDWB0                                                   13260020
DSECT    L     GRX,CDSECT(ACT)          DSECT (ASSIGNMENT MODE)         13280020
         B     ESDWB0                                                   13300020
COM      L     GRX,CCOM(ACT)            COM   (ASSIGNMENT MODE)         13320020
*        B     ESDWB0                                                   13340020
*********************************************************************** 13360020
         SPACE                                                          13380020
ESDWB0   LA    GR1,TXFAFL(GRB)          LOOK PAST APPENDED FIXED FIELD  13400020
         C     GR1,CTXWBP(ACT)          IF 1ST SYMB. WRK BKT IS THERE.. 13420020
         BE    ESDWB1                   GO SET DSECT-COM INDICATOR      13440020
         ST    GR1,CTXWBP(ACT)          SET 1ST SYMB WRK BKT POINTER    13460020
         MVI   TXWTYP(GR1),BIT0+BIT4    SET W.B. TYPE 2                 13480020
         MVC   1(5,GR1),CTZERO(ACT)     ZERO REST OF W.B.               13500020
         SR    GR1,GRA                  DISPLACEMENT OF WRK BKT...      13520020
         LA    GR1,6(GR1)               PLUS WRK BUCKET LENGTH...       13540020
         STH   GR1,TXRL(GRA)            IS TEXT RECORD LENGTH           13560020
         SPACE                                                          13580020
ESDWB1   NI    CTDORCI(ACT),X'FF'-BIT3  SET CURRENTLY IN DSECT OR COM   13600020
         CLI   TXHEX(GRA),X'1D'         INDICATOR                       13620020
         BL    ESDWB2                   OFF, IF CSECT OR START          13640020
         OI    CTDORCI(ACT),BIT3        ON, IF DSECT OR COM             13660020
         SPACE                                                          13680020
ESDWB2   BAL   CRR,CTLNK2(ACT)         ASMGF7E VIA FUNC. ROUT. LINKAGE  13700020
         B     AC1                      GO FINISH STATEMENT             13720020
         EJECT                                                          13740020
* PROCESS EXTRN, WXTRN AND ENTRY STATEMENTS                             13760025
         SPACE                                                          13780020
*********************************************************************** 13800020
EXTRN    L     CRR,CEXTRN(ACT)          EXTRN (ASSIGNMENT MODE)         13820020
         NI    CTSWXT(ACT),SETEXT       SET SWITCH TO NOT WXTRN         13825025
         B     EXT                                                      13830025
WXTRN    L     CRR,CEXTRN(,ACT)         WXTRN (ASSIGNMENT MODE)         13835025
         OI    CTSWXT(ACT),SETWX        SET SWITCH TO WXTRN             13840025
EXT      L     FRB,CTXWBP(,ACT)         POINTER TO FIRST SYMBOL WRK BKT 13845025
         LTR   FRB,FRB                  LOOK AT IT CLOSELY              13860020
         BNZ   EXTGO                    IF OK, SKIP SYMB. WRK BKT BUILD 13880020
         B     EXT0                     NOT YET, SO BUILD SWB           13900020
ENTRY    L     CRR,CENTRY(ACT)          ENTRY (ASSIGNMENT MODE)         13920020
*        B     EXT0                                                     13940020
*********************************************************************** 13960020
         SPACE                                                          13980020
EXT0     LA    FRB,TXFAFL(GRB)                                          14000020
         ST    FRB,CTXWBP(ACT)                                          14020020
         SPACE                                                          14040020
         MVC   CTWORK(IALPHA+1,ACT),CTWORK-1(ACT)  SET CTWORK FOR TRT   14060020
         MVI   CTWORK+IALPHA+1(ACT),X'FF'          ON NON A/N CHARACTER 14080020
         MVC   CTWORK+IALPHA+2(254-IALPHA,ACT),CTWORK+IALPHA+1(ACT)     14100020
         L     SP2,CTXOFP(ACT)          ADDRESS OF OPERAND-1            14120020
EXT1     MVC   1(5,FRB),CTZERO(ACT)     ZERO SYMB WRK BKT               14140020
         MVI   TXWTYP(FRB),BIT0         MAKE SWB TYPE 2                 14160020
         LA    SP1,1(SP2)               ADDRESS OPERAND FIELD           14180020
         TRT   0(256,SP1),CTWORK(ACT)   TEST OPERAND                    14200020
         LR    SP2,GR1                  GET ADDRESS OF DELIMITER        14220020
         SR    GR1,SP1                  RELATIVE TO OPND START          14240020
         BNH   EXTERR2                  FIRST NOT ALPHAMERIC, LOG ERROR 14260020
         STC   GR1,TXSBLN(FRB)          INSERT SYMBOL BYTE LENGTH       14280020
         CLI   TXSBLN(FRB),8            BEST BE LESS THAN 9             14300020
         BH    EXTERR1                  NO, LOG ERROR                   14320020
         CLI   0(SP1),IA                YES, FIRST BYTE SHOULD BE ALPHA 14340020
         BC    10,EXT2                  OK, CONTINUE                    14360020
EXTERR1  BAL   SRR,ERROR                BAD, LOG ERROR                  14380020
         DC    AL2(ACER31)              'INVALID SYMBOL'                14400020
         B     EXT3                     GO LOOK FOR COMMA AT END        14420020
EXT2     S     SP1,CTXOFP(ACT)          FROM CTXOFP TO SP1...           14440020
         BCTR  SP1,0                    -1, = RELATIVE POS'N OF SYMBOL  14460020
         STC   SP1,TXSPTR(FRB)          SET POINTER TO SYMBOL IN OPND   14480020
         LA    FRB,6(FRB)               NEXT SYMB WK BKT ADDRESS...     14500020
         LR    GR1,FRB                  TO GR1, THEN...                 14520020
         SR    GR1,GRA                  POS'N RELATIVE TO TEXT FBA...   14540020
         STH   GR1,TXRL(GRA)            BECOMES CURRENT TEXT REC. LNGTH 14560020
EXT3     CLI   0(SP2),ICOMMA            OPND MAY END WITH COMMA         14580020
         BE    EXT1                     YES, GO BACK, START ANOTHER SWB 14600020
         CLI   0(SP2),IBLANK            NO, LOOK FOR BLANK              14620020
         BE    EXT4                     BLANK, END OF OPND FIELD        14640020
         S     FRB,=F'6'                NOT BLANK OR COMMA, BACK UP FRB 14660020
         LH    GR1,TXRL(GRA)            ERASE LAST SYMB WK BKT...       14680020
         S     GR1,=F'6'                SHORTEN TEXT LENGTH...          14700020
         STH   GR1,TXRL(GRA)            AND RESTORE TO ACT              14720020
         LR    SP1,SP2                  POINT TO BAD CHARACTER WITH SP1 14740020
EXTERR2  BAL   SRR,ERROR                LOG ERROR                       14760020
         DC    AL2(ACER30)              ILLEGAL DELIMITER               14780020
EXT4     LA    GR1,6                    MAKE A 6...                     14800020
         SR    FRB,GR1                  SUBTRACT IT FROM SWB ADDRESS    14820020
         CR    FRB,GRB                  SEE IF ALL W.B.'S WERE ERASED   14840020
         BNH   AC2                      YES, GO PROCESS ANOTHER STATMNT 14860020
         OI    TXESI(GRA),BIT6          SET FLAG TO CALL ASMGF7E        14880022
         OI    TXSESL(FRB),BIT0         SET LAST ENTRY IN OPERAND       14900020
         SPACE                                                          14920020
EXTGO    TM    TXESI(GRA),BIT6          LOOK AT ASMGF7E FLAG            14940022
         BZ    AC2                      OFF, RETURN TO GET NEXT STATMNT 14960020
         LR    GRX,CRR                  SET ROUTINE SELECTED BY ENTRY.. 14980020
         BAL   CRR,CTLNK2(0,ACT)        TO ASMGF7E VIA FUNC. ROUT. LINK 15000021
         B     AC1                      RETURN TO FINISH STATEMENT      15020020
         EJECT                                                          15040020
* PROCESS END STATEMENT                                                 15060020
         SPACE 2                                                        15080020
END      L     GR1,CTLITB+00(ACT)       CHECK LITERAL POOL              15100020
         A     GR1,CTLITB+04(ACT)       FOR ACTIVE ENTRIES              15120020
         A     GR1,CTLITB+08(ACT)                                       15140020
         A     GR1,CTLITB+12(ACT)                                       15160020
         BZ    AC1                      NONE, GO FINISH UP              15180020
         SPACE                                                          15200020
         TM    TXESI(GRA),BIT6          HAS LTORG BEEN GENERATED        15220020
         BO    AC1                      YES, GO FINISH STATEMENT        15240020
         SPACE                                                          15260020
         MVI   CTLIT2(ACT),4            NO, SET FLAG TO GENERATE LTORG  15280020
         OI    TXESI(GRA),BIT6          FLAG TO INDICATE LTORG GEN'D    15300020
         CLC   CTESRN(2,ACT),CTZERO(ACT) DO WE HAVE A CSECT .Q          15320024
         BNE   END1                     YES                             15324024
         BAL   CRR,UPC1                 NO, WELL INITIATE ONE           15326024
END1     B     AC1                      GO FINISH STATEMENT             15328024
         EJECT                                                          15340020
* PHASE 7 WRAP-UP (QUIT STATEMENT GENERATED BY EOF IN ASSIGNMENT MODE)  15360020
         SPACE 2                                                        15380020
QUIT     OI    CTPH7C(ACT),BIT6         SET F/7 COMPLETE INDICATOR      15400020
         SPACE                                                          15420020
         L     GRX,CQUIT(ACT)           CALL ESD WRAP-UP ROUTINE        15440020
         BAL   CRR,CTLNK2(0,ACT)        ASMGF7E VIA FUNC. ROUT. LINKAGE 15460021
         SPACE                                                          15480020
QUIT0    BC    0,QUIT1                  /MOD BY AC0/                    15500020
         L     FRB,CTESTR(ACT)          TO CALL TESTRAN ROUTINE         15520020
         BALR  CRR,ACT                  IF TESTRAN OPTION BIT IS ON     15540020
         SPACE                                                          15560020
QUIT1    L     SRB,CTXTIO(ACT)          TRANSFER CONTROL TO NEXT PHASE  15580020
         B     PHCLS(SRB)               VIA PHASE CLOSE ROUTINE         15600020
         EJECT                                                          15620020
* PROCESS DXD, CXD                                                      15640020
         SPACE 2                                                        15660020
DXD      MVC   ACTEMP0(4),CTLOC(ACT)    SAVE LOC'N COUNTER              15680020
         MVC   CTLOC(4,ACT),=F'1'       AND PUT BACK 1                  15700020
         MVC   TXLOC(3,GRB),CTLOC+1(ACT) PUT THE 1 INTO TEXT RECORD TOO 15720020
         SPACE                                                          15740020
DXDS     L     FRB,CDCVAL(0,ACT)       CALL ASMGF7D VIA FUNCTIONAL ROU- 15760021
         BALR  CRR,ACT                  TINE LINKAGE IN ACT             15780020
         B     DXD1                     NORMAL RETURN, CONTINUE PROC'NG 15800020
         BAL   CRR,SUBWB                ABNORMAL, ATTACH SYMB WK BKT... 15820020
         B     DXDS                     AND TRY AGAIN                   15840020
         SPACE                                                          15860020
DXD1     L     GRX,CDXD(0,ACT)          CALL ASMGF7E VIA...             15880021
         BAL   CRR,CTLNK2(ACT)          FUNC. ROUT. LINKAGE             15900020
         MVC   CTLOC(4,ACT),ACTEMP0     RESTORE LOC COUNTER             15920020
         B     AC1                      FINISH STATEMENT                15940020
         SPACE 2                                                        15960020
CXD      SR    SP1,SP1                  SET PARAM REGS...SP1=0          15980020
         LA    SP2,4                    SP2=4                           16000020
         LR    GRX,SP2                  GRX=4  FOR 0,4 ALIGNMENT        16020020
         BAL   CRR,ALIGN                ALIGN LOC CNTR                  16040020
         B     AC5                      RETURN TO STEP LOC COUNTER      16040823
         EJECT                                                          16041623
* PROCESS OPSYN                                                         16042423
         SPACE 2                                                        16043223
         EXTRN OPC04                    OP-TABLE ACCESS, F7X            16044023
         SPACE ,                                                        16044823
OPSYN    L     SP1,CTXOFP(,ACT)         POINT TO OPND LENG FIELD        16045623
         SR    SP2,SP2                                                  16046423
         IC    SP2,0(,SP1)              ADJUST LENGTH FOR BLANK         16047223
         BCTR  SP2,0                                                    16048023
         SR    GRZ,GRZ                  PRE-SET TO ZERO                 16048823
         CLI   TXOPN(SP1),IBLANK        CHECK OMITTED OPND              16049623
         BE    OPS02                    YES, BYPASS LOOKUP              16050423
         BAL   SRR,OPSLUP               NO, LOOK IT UP                  16051223
         B     AC2                      NOT FOUND, OVERFLOWED           16052023
         LR    GRZ,SP2                  SAVE ATTRIBUTES PNTR            16052823
OPS02    LA    SP1,TXNAML(,GRA)         POINT TO NAME LENG FIELD        16053623
         SR    SP2,SP2                                                  16054423
         IC    SP2,0(,SP1)              GET LENGTH                      16055223
         BAL   SRR,OPSLUP               LOOK IT UP                      16056023
         B     OPS06                    NOT FOUND                       16056823
         LTR   GRZ,GRZ                  CHECK DELETE                    16057623
         BNZ   OPS04                    NO                              16058423
         MVI   0(SP1),0                 DELETE IT                       16059223
         B     AC2                      EXIT                            16060023
OPS04    MVC   0(3,SP2),0(GRZ)          CHANGE ATTRIBUTES               16060823
         B     AC2                                                      16061623
OPS06    LTR   GRZ,GRZ                  CHECK DELETE                    16062423
         BZ    AC2                      YES, OVERFLOWED                 16063223
         EX    0,OPS04                  SET ATTRIBUTES                  16064023
         SR    SP1,SP1                                                  16064823
         IC    SP1,CTWORK(,ACT)         GET LENGTH                      16065623
         LA    FRB,3(,SP1)              SAVE ITEM LENGTH - 1            16066423
         LA    SP1,7(,SP1)              FORM TOTAL NEEDED               16067223
         L     SRB,CSTROM(,ACT)         GO CHECK FOR ROOM               16068023
         BALR  SRR,SRB                                                  16068823
         NOP       0                    THIS RETURN NEVER TAKEN         16069623
         L     GR1,CTSYMP(,ACT)         SYMBOL TABLE PNTR               16070423
         L     GR2,CFREEP(,ACT)         REL FREE PNTR                   16071223
         LA    GRX,OPCPTR(,GR1)         OPSYN CHAIN PNTR                16072023
         ALR   GR1,GR2                  FULL FREE PNTR                  16072823
         MVC   0(3,GR1),0(GRX)          BACK CHAIN NEW ITEM             16073623
         MVC   0(3,GRX),CFREEP+1(ACT)   NEW OPSYN CHAIN PNTR            16074423
         EX    FRB,OPMOVE               MOVE IN NEW ITEM                16075223
         LA    GR2,4(FRB,GR2)           UPDATE FREE PNTR                16076023
         ST    GR2,CFREEP(,ACT)                                         16076823
         B     AC2                      EXIT                            16077623
OPMOVE   MVC   3(0,GR1),CTWORK(ACT)     DUMMY MOVE                      16078423
         EJECT                                                          16080020
* OP-CODE LOOKUP FOR OPSYN                                              16080823
* ENTRY-  SP1 POINTS TO LENGTH FIELD IN TEXT                            16081623
*         SP2 CONTAINS TRUE SYMBOL LENGTH                               16082423
* EXIT -  SP1 POINTS TO SYMBOL IN TABLE IF FOUND                        16083223
*         SP2 POINTS 1 PAST SYMBOL IN TABLE OR IN WORK AREA             16084023
*        BR    SRR     - NOT FOUND RETURN                               16084823
*        B     4(SRR)  - FOUND RETURN                                   16085623
         SPACE 2                                                        16086423
OPSLUP   STC   SP2,CTWORK(,ACT)         SET UP LENGTH                   16087223
         MVC   CTWORK+1(8,ACT),1(SP1)   AND SYMBOL                      16088023
         LA    GR1,5                                                    16088823
         CLR   SP2,GR1                  IF LONGER THAN 5                16089623
         BH    OPSL07                   SKIP OP TABLE SEARCH            16090423
         LR    GRY,SP2                                                  16091223
         BCTR  GRY,0                    FORM L - 1                      16092023
         STC   GRY,OPSL02+1             SET COMPARE                     16092823
         SLL   GRY,2                    4(L-1)                          16093623
         L     GR1,OPCAD                ACCESS 7X OPTABL POINTERS       16094423
         L     SP1,0(GRY,GR1)           SET START                       16095223
         L     GRY,4(GRY,GR1)           SET LIMIT                       16096023
         LA    GRX,3(,SP2)              SET INCREMENT                   16096823
OPSL02   CLC   CTWORK+1(0,ACT),0(SP1)   COMPARE SYMBOL                  16097623
         BH    OPSL06                   KEEP SEARCHING                  16098423
         BL    OPSL07                   FAR ENOUGH, TRY OPSYN TAB       16099223
OPSL04   LA    SP2,0(SP2,SP1)           STEP OVER SYMBOL                16100023
         B     4(,SRR)                  FOUND RETURN                    16100823
OPSL06   BXLE  SP1,GRX,OPSL02           CHECK NEXT IF ANY               16101623
OPSL07   MVI   CTWORK+16(ACT),0         SET UP CHAIN-LOADER             16102423
         L     GR1,CTSYMP(,ACT)         GET SYMBOL TABLE BASE           16103223
         LA    SP1,OPCPTR(,GR1)         ACCESS OPSYN CHAIN              16104023
         STC   SP2,OPSL09+1             SET COMPARE                     16104823
OPSL08   MVC   CTWORK+17(3,ACT),0(SP1)  GET CHAIN POINTER               16105623
         L     SP1,CTWORK+16(,ACT)                                      16106423
         LTR   SP1,SP1                  IS THIS END OF CHAIN            16107223
         BZ    OPSL12                   YES, GIVE UP                    16108023
         ALR   SP1,GR1                  FORM FULL POINTER               16108823
OPSL09   CLC   CTWORK(0,ACT),3(SP1)     COMPARE L AND SYMBOL            16109623
         BNE   OPSL08                   NO MATCH                        16110423
         LA    SP1,4(,SP1)              STEP OVER POINTER AND L         16111223
         B     OPSL04                   TO FOUND EXIT                   16112023
OPSL12   LA    SP2,CTWORK+1(SP2,ACT)    POINT PAST WORK SYMBOL          16112823
         BR    SRR                      NOT FOUND RETURN                16113623
OPCAD    DC    A(OPC04)                 OP TABLE POINTERS,FLAG          16114423
OPCPTR   EQU   28                       OPSYN CHAIN DISPLACEMENT        16115223
         EJECT                                                          16116023
* ALIGN - SUBROUTINE TO ALIGN LOC COUNTER FOR MOP, CNOP, CCW AND LTORG  16116823
*         ENTER WITH SP1 EQ B, SP2 EQ W, CRR EQ RETURN ADDR             16120020
*         SET CTLOC, TXLOC AND TXALIN                                   16140020
         SPACE 2                                                        16160020
ALIGN    LR    GR1,SP2                  W EQ 2,4 OR 8                   16180020
         BCTR  GR1,0                    SET MASK Q  1,3 OR 7            16200020
         N     GR1,CTLOC(ACT)           MASK LOW 1,2 OR 3 BITS OF CTLOC 16220020
         CLR   GR1,SP1                  COMPARE WITH B                  16240020
         BE    ALIGN3                   NO ALIGNMENT REQUIRED           16260020
         BL    ALIGN1                   B GR MASKED BITS                16280020
         LA    SP1,0(SP1,SP2)           B LS MASKED BITS, ADD W         16300020
ALIGN1   SR    SP1,GR1                  B MINUS MASKED BITS             16320020
         STC   SP1,ALIGN2+1             STORE NUMBER OF ALIGN BYTES     16340020
         A     SP1,CTLOC(ACT)           INC LOC COUNTER                 16360020
         ST    SP1,CTLOC(ACT)                                           16380020
ALIGN2   OI    TXALIN(GRB),0            SET NUMBER OF ALIGN BYTES       16400020
ALIGN3   MVC   TXLOC(3,GRB),CTLOC+1(ACT)  MOVE ALIGNED LOC CTR TO TEXT  16420020
         BR    CRR                      RETURN                          16440020
         EJECT                                                          16460020
* UPC - UNINITIATED PRIVATE CODE TEST (CALLED ONCE FROM MOP AND AOP0)   16480020
         SPACE 2                                                        16500020
UPC      OI    MOP+1,X'F0'              MODIFY MLC TO BYPASS UPC        16520020
         OI    AOP0+1,X'F0'                                             16540020
         SPACE                                                          16560020
         CLI   CESDID(ACT),0            TEST CURRENT ESD ID             16580020
         BCR   7,CRR                    IF NOT ZERO, BYPASS UPC         16600020
         SPACE                                                          16620020
UPC1     DS    0H                                                       16630024
         L     GRX,CUPC(ACT)            IF ESDID EQ ZERO,               16640020
         B     CTLNK2(ACT)              CALL UNINITIATE P.C. ROUTINE    16660020
         EJECT                                                          16680020
         SPACE 2                                                        16700020
ERROR0   SR    SP1,SP1                  NO ERROR POINTER TO F7L         16720027
ERROR    L     SRB,CLOGER(ACT)          GET ADDRESS OF ERROR LOGGER...  16740020
         BR    SRB                      AND GO THERE                    16760020
         SPACE 2                                                        16780020
ABORT    NI    TXTO(GRA),X'3F'          SET OP TYPE 'UNCHECKED'         16800020
         SPACE                                                          16820020
TRUNCATE L     GR1,CTXABP(ACT)          APPENDED FIXED FIELD POINTER    16840020
         MVI   0(GR1),0                 ZERO FIRST BYTE---              16860020
         SR    GR1,GRA                  CALCULATE DISTANCE TO           16880020
         LA    GR1,1(GR1)               LAST RECORD BYTE                16900020
*        STH   GR1,TXRL(GRA)            INSERT INTO TEXT RECORD LENGTH  16920020
         B     AC2                      GO GET NEXT STATEMENT           16940020
         EJECT                                                          16960020
* XREF - SUBROUTINE CALLED BY ACMOP  AND  ACAOP                         16980020
*        TO GENERATE TYPE 2 X-REF RECORDS                               17000020
*        FOR STATEMENTS WHICH ARE NOT EVALUATED BY PHASE 7              17020020
         SPACE 2                                                        17040020
XREF     L         SP1,CTXOFP(0,ACT)   SP1 POINTS TO OPERAND-1          17060020
         SR        FRB,FRB                                              17080020
         IC        FRB,TXOPNL(0,SP1)   FRB POINTS TO LAST BYTE          17100020
         AR        FRB,SP1               OF OPERAND                     17120020
XREF0    MVC   ACTEMP0(4),CLOGER(ACT)   DISABLE EEVAL ERROR LOGGING     17140020
         MVC   ACTEMP1(4),CTXWBP(ACT)   KEEP POINTER TO 1ST SYMB WK BKT 17160020
         LA    GR1,XREFX                GET ERROR HANDLING ADDRESS...   17180020
         ST    GR1,CLOGER(ACT)          AND INSERT IN ACT               17200020
         SPACE                                                          17220020
         L     SRB,CEEVAL(ACT)          SRB PTS TO EEVAL                17240020
         SPACE                                                          17260020
XREF1    LA    SP1,1(SP1)               SP1 PTS TO NEXT EXPRESSION      17280020
         CLR   SP1,FRB                                                  17300020
         BC    11,XREFEXIT              EXIT IF END OF OPERAND          17320020
         CLI   0(SP1),IALPHA            IF NEXT EXPRESSION STARTS ALPHA 17340020
         BNH   XREF2                    OK, MAKE XREF                   17360020
         CLI   0(SP1),IEQUAL            NO, LOOK FOR EQUAL              17380020
         BE    XREFEXAT                 YES, TO RESET ERROR RETURN      17400020
         B     XREF3                    MORE CHECKS TO BE MADE          17420027
         SPACE                                                          17440020
XREF2    DS    0H                                                       17460027
         BALR  SRR,SRB                  SCAN NEXT EXPRESSION            17464027
         BO    XREF4                    BRANCH IF ERROR                 17468027
XREF3    DS    0H                                                       17472027
         TM    TXTO(GRA),BIT0           IS THIS AN ASSEMBLER OP .Q      17476027
         BNO   XREF1                    BRANCH TO NEXT EXPRESSION IF NO 17480027
         CLI   TXHEX(GRA),X'21'         IS THIS AN END STATEMENT .Q     17484027
         BNE   XREF1                    NO, CHECK NEXT EXPRESSION       17488027
         B     XREFEXIT                 YES, FORGET FURTHER OPERANDS    17492027
XREF4    DS    0H                                                       17496027
         SPACE                                                          17500020
         LTR   SP1,SP1                  ERROR,                          17520020
         BNE   XREF1                    CONTINUE SCAN IF POSSIBLE       17540020
         SPACE                                                          17560020
XREFEXIT MVC   CTXWBP(4,ACT),ACTEMP1                                    17580020
XREFEXAT MVC   CLOGER(4,ACT),ACTEMP0    RESTORE ASMGF7L ADDRESS         17600022
         BR    CRR                      RETURN                          17620020
         SPACE                                                          17640020
XREFX    B     2(SRR)                  SUBSTITUTED ASMGF7V ERROR RETURN 17660020
         EJECT                                                          17680020
* SUBWB - S/R TO ATTACH AND FILL SYMBOL WORK BUCKETS                    17700020
         SPACE 2                                                        17720020
SUBWB    L     FRB,CTXWBP(ACT)          BYPASS SCAN IF WORK BUCKETS     17740020
         LTR   GRZ,FRB                  PREVIOUSLY ATTACHED             17760020
         BNZ   SUBWBA                   HAVE BUCKETS, WILL SKIP         17780020
         SPACE                                                          17800020
         MVC   CTWORK(256,ACT),CTWORK-1(ACT)  INITIALIZE TRT TABLE      17820020
         MVI   CTWORK+IQUOTE(ACT),X'FF'                                 17840020
         LA    GRY,2                    GRY CONTAINS LPARN COUNT (=2)   17860020
         L     GR1,CTXOFP(ACT)          GR1 PTS TO NEXT OPND BYTE-1     17880020
         IC    GRZ,0(GR1)                                               17900020
         AR    GRZ,GR1                                                  17920020
         SR    GRZ,GRY                  GRZ PTS TO FINAL OPND BYTE-2    17940020
         LH    FRB,TXRL(GRA)                                            17960020
         AR    FRB,GRA                  FRB PTS TO FIRST WORK BUCKET    17980020
         LR    GRX,FRB                  GRX PTS TO NEXT  WORK BUCKET    18000020
         SPACE                                                          18020020
         LA    SRR,SUBWB2               READY THE RETURN REG            18040020
         TM    TXTO(GRA),BIT0           INSPECT OPERATION TYPE          18060020
         BO    SUBWB0                   ASSEMBLER OP, SKIP              18080020
         MVI   CTWORK+IEQUAL(ACT),X'FF' PUT CHECK FOR = INTO TABLE      18100020
         B     SUBWB2                   GO RESET ALPHA CHECK            18120020
SUBWB0   TM    TXASC(GRA),BIT4          CHECK FOR SUBSITUTION REQUIRED  18140020
         BCR   1,SRR                    YES, TO 'RETURN'                18160020
         LA    SRR,SUBWB1               NO, RESET 'RETURN' POINT        18180020
         SR    GRY,GRY                  MAKE A ZERO                     18200020
         SPACE                                                          18220020
SUBWB1   XI    CTWORK+ILPARN(ACT),X'FF' SET TRT TABLE FOR COMPARE       18240020
         XI    CTWORK+IRPARN(ACT),X'FF' ON PARENS (IF DC,DS,LDC OR DXD) 18260020
SUBWB2   XI    CTWORK+IA(ACT),X'FF'     AND ALPHA CHARACTERS            18280020
         MVC   CTWORK+IB(28,ACT),CTWORK+IA(ACT)                         18300020
         SPACE                                                          18320020
SUBWB3   LR    GR2,GRZ                  CALC NUMBER OF BYTES TO SCAN    18340020
         SR    GR2,GR1                                                  18360020
         BM    SUBWB9                   NONE                            18380020
         EX    GR2,SUBWBT               EXECUTE TRT FOR ALPHA OR DELIMS 18400020
         BZ    SUBWB9                   NONE                            18420020
         SPACE                                                          18440020
         CLI   0(GR1),IALPHA            IF ALPHA, TEST FOR SYMBOL       18460020
         BNH   SUBWB4                                                   18480020
         CLI   0(GR1),IQUOTE            IF QUOTE, CHANGE TRT TABLE      18500020
         BCR   8,SRR                              AND RESUME SCAN       18520020
         CLI   0(GR1),IEQUAL            NOW TEST FOR EQUAL SIGN         18540020
         BNE   SUBWB300                 NO, GO LOOK FOR PAREN           18560020
         CLI   CTWORK+IA(ACT),0         YES, LOOK AT ALPHAS IN TRT TABL 18580020
         BE    SUBWB300                 NOT TESTED, GO LOOK FOR PAREN   18600020
SUBWB30  LA    GR1,1(GR1)               NEXT OPERAND BYTE               18620020
         CLI   1(GR1),IALPHA            TEST BYTE FOLLOWING FOR ALPHA   18640020
         BH    SUBWB3                   ALPHA, GO CALCULATE SCAN        18660020
         B     SUBWB30                  NUMERIC, TRY AGAIN              18680020
         SPACE                                                          18700020
SUBWB300 CLI   0(GR1),ILPARN            IF PAREN, SET PAREN COUNTER     18720020
         BNE   SUBWB31                            AND RESUME SCAN       18740020
         LA    GRY,1(,GRY)              BUMP LEFT PAREN COUNT           18760025
         B     SUBWB3                                                   18780020
SUBWB31  BCTR  GRY,0                    RIGHT PAREN--REDUCE PAREN COUNT 18800025
         B     SUBWB3                   RESUME SCAN                     18820020
         SPACE                                                          18840020
SUBWBT   TRT   1(0,GR1),CTWORK(ACT)     TRT USED BY SUBWB3              18860020
         EJECT                                                          18880020
SUBWB4   LR    GR2,GR1                  ALPHA CHAR FOUND OUTSIDE QUOTES 18900020
SUBWB41  LA    GR1,1(GR1)               SCAN FOR NON A/N DELIMETER      18920020
         CLI   0(GR1),IALPHA                                            18940020
         BNH   SUBWB41                                                  18960020
         CLI   0(GR1),IQUOTE                                            18980020
         BNE   SUBWB5                   DELIMITED BY NON-QUOTE, SYMBOL. 19000020
         CLI   0(GR2),IL                DELIMITED BY QUOTE,             19020020
         BCR   7,SRR                    RESET TRT TABLE IF NOT L-QUOTE  19040020
         SPACE                                                          19060020
         LA    GR2,1(GR1)               L-QUOTE                         19080020
SUBWB42  LA    GR1,1(GR1)               SCAN SYMBOL                     19100020
         CLI   0(GR1),IALPHA            LOOK FOR ALPHAMERICS            19120020
         BNH   SUBWB42                  A-N, CONTINUE SCAN              19140020
         CR    GR1,GR2                  NOT ALPHA...IF FIRST BYTE...    19160020
         BE    SUBWB9                   SYNTAX ERROR...GO TO.SCAN COMPL 19180020
         MVC   0(6,GRX),CTZERO(ACT)     CLEAR WORK BUCKET               19200020
         MVI   TXSESD(GRX),X'FF'        SET ESDID                       19220020
         B     SUBWB50                  GO ATTACH BUCKET                19240020
         SPACE                                                          19260020
SUBWB5   LTR   GRY,GRY                  SYMBOL FOUND IF NOT IN DC       19280020
         BNP   SUBWB51                  OUTSIDE OF PARENS               19300020
         MVC   0(6,GRX),CTZERO(ACT)     ATTACH SYMBOL WORK BUCKET       19320020
SUBWB50  MVI   TXWTYP(GRX),BIT0         SET WK BKT TYPE 2               19340020
         LR    GR0,GR1                  SYMBOL END...                   19360020
         SR    GR0,GR2                  - SYMBOL START...               19380020
         STC   GR0,TXSBLN(GRX)          BECOMES SYMBOL BYTE LENGTH      19400020
         S     GR2,CTXOFP(ACT)          SYMBOL START-OPND START...      19420020
         BCTR  GR2,0                    LESS ONE...                     19440020
         STC   GR2,TXSPTR(GRX)          BECOMES POINTER TO SYMB IN OPND 19460020
         LA    GRX,6(GRX)               ADVANCE POINTER TO NEXT W.B.    19480020
SUBWB51  BCT   GR1,SUBWB3                                               19500020
         SPACE                                                          19520020
SUBWB9   CR    GRX,FRB                  SCAN COMPLETE, TEST IF ANY WBS  19540020
         BCR   8,CRR                    NONE, EXIT                      19560020
         LA    GR1,6                    DECREMENT BY 6                  19580020
         SR    GRX,GR1                  ADDRESS LAST WORK BUCKET        19600020
         OI    TXSLAS(GRX),BIT4         SET 'LAST SYMBOL IN OPERAND'    19620020
         ST    FRB,CTXWBP(ACT)          SET SYMBOL W.B. POINTER IN ACT  19640020
         SR    GRX,GRA                                                  19660020
         LA    GRX,6(GRX)                                               19680020
         STH   GRX,TXRL(GRA)            INC REC LENGTH                  19700020
*        B     SUBWBA                   SUBSTITUTE VALUES IN WORK BKTS  19720020
         EJECT                                                          19740020
SUBWBA   TM    TXSUBS(FRB),X'10'        TEST PREVIOUSLY SUBSTITUTED     19760020
         BO    SUBWBX                   YES, TEST END OF W.B.S          19780020
*                                                                       19800020
         SR    SP1,SP1                  NO, CALL STGET                  19820020
         IC    SP1,TXSPTR(FRB)              WITH SP1 PT TO SYMB IN OPND 19840020
         A     SP1,CTXOFP(ACT)                                          19860020
         LA    SP1,1(SP1)                                               19880020
         SR    SP2,SP2                           SP2 EQ SYMB BYTE LEN   19900020
*        IC    SP2,TXSBLN(FRB)          FIND SYMBOL BYTE LENGTH         19920020
         L     SRB,CSTGET(,ACT)         CALL S.T. GET ROUTINE IN F7S    19940027
         BALR  SRR,SRB                  THROUGH COMMON SUBROUT. LINKAGE 19960020
*                                                                       19980020
         LTR   SP1,SP1                  RETURN WITH SP1 PT TO ST ENTRY  20000020
         BZ    SUBWBX                   OR ZERO INDICATES NOT IN ST     20020020
         CLI   TXSESD(FRB),0            LOOK FOR ESDID ZERO             20040020
         BE    SUBWBB                   FOUND, GO MOVE VALUE TO W.B.    20060020
         XI    TXSESD(FRB),0                                            20080020
         MVC   TXSVAL+1(2,FRB),6(SP1)   LENGTH, FROM S.T. TO W.B.       20100020
         B     SUBWBD                   GO MOVE ESDID TO W.B.           20120020
SUBWBB   NOP   0                                                        20140020
*                                                                       20160020
         MVC   TXSVAL(3,FRB),3(SP1)     MOVE VALUE TO W.B.              20180020
         CLI   6(SP1),0                 SET TXSEXI IF LEN GR 256        20200020
         BE    SUBWBC                   NO, GO MOVE LENGTH TO W.B.      20220020
         OI    TXSEXI(FRB),X'04'        SET 'IMPL'D LENGTH OVER 256'    20240020
         B     SUBWBD                   GO MOVE ESDID                   20260020
SUBWBC   MVC   TXSLEN(1,FRB),7(SP1)     MOVE LEN (LE 256) TO W.B.       20280020
SUBWBD   MVC   TXSESD(1,FRB),2(SP1)     MOVE ESD ID TO W.B.             20300020
         MVC   CTWORK(1,ACT),1(SP1)     SET TYPE FROM ADJ CODE          20320020
         NI    CTWORK(ACT),X'03'                                        20340020
         OC    TXSTPC(1,FRB),CTWORK(ACT)                                20360020
         TM    1(SP1),X'04'             SET DSECT/COM IND. FROM ADJCOD  20380020
         BZ    SUBWBE                   GO SET VALUE SUBSTITUTED        20400020
         OI    TXSDOC(FRB),X'20'        SYMBOL DEFINED IN DSECT OR COM  20420020
*                                                                       20440020
SUBWBE   OI    TXSUBS(FRB),X'10'        SET VALUE SUBSTITUTED INDICATOR 20460020
*                                                                       20480020
SUBWBX   TM    TXSLAS(FRB),X'08'        TEST FOR LAST SYMBOL W.B.       20500020
         BCR   7,CRR                    RETURN TO CALLING ROUTINE       20520020
         LA    FRB,6(FRB)               INC POINTER TO NEXT SYMB W.B.   20540020
         B     SUBWBA                   PROCESS NEXT SYMB W.B.          20560020
         LTORG                                                          20580020
         END   ASMGF7C                                                  20600020
./ ADD NAME=ASMGF7D
F7D      TITLE     'ASMG F7  DC EVALUATION'                             00020021
         ISEQ  73,78                                                    00040021
ASMGF7D  START                                                          00060020
         PRINT      NOGEN                                               00080020
         FDIMEN                                                         00100020
         USING *,FRB                                                    00120020
*                                                                     * 00140020
*TITLE 'ASMGF7D ' ...  DC EVALUATION                                  * 00160020
*FUNCTION/OPERATION-                                                  * 00180020
*   ASMGF7D PROCESSES DC'S, DS'S, DXD'S, LITERALS AND LITERAL DC'S, A * 00200025
*   COMPLETE SYNTAX CHECK IS DONE FOR ALL DC'S AND DS'S. A 15 BYTE    * 00220020
*   WORKBUCKET IS ATTACHED TO THE APPENDED FIXED FIELD FOR USE BY     * 00240020
*   ASMGF8D IN THE EVALUATION OF THE OPERAND. AN EXTERNAL SYMBOL ENTRY* 00260025
*   IS MADE FOR ALL VALID V-TYPE AND Q-TYPE DC'S.                     * 00280020
*ENTRY POINT- ASMGF7D                                                 * 00300020
*   ENTRY IS MADE VIA                                                 * 00320020
*        L     FRB,CDCVAL(ACT)          GET BASE/ENTRY ADDRESS        * 00340020
*        BALR  FRR,ACT                  CALL ASMGF7D                  * 00360022
*INPUT- NONE                                                          * 00380020
*OUTPUT- NONE                                                         * 00400020
*EXTERNAL ROUTINES-                                                   * 00420020
*   CVCON(ACT)      ESD PROCESSING OF V AND Q TYPE CONSTANTS          * 00440020
*   CLOGER(ACT)     LOG ERROR ROUTINE                                 * 00460020
*EXITS- NORMAL                                                        * 00480020
*   RETURNS TO CALLER VIA                                             * 00500020
*        B     CTRTRN(ACT)              RETURN                        * 00520020
*     - ERROR-- SAME AS NORMAL RETURN                                 * 00540020
*TABLES/WORKAREAS-                                                    * 00560020
*   ZRC01      ERROR ASSIGNMENT TABLE                                 * 00580020
*   TRTTAB     TYPE OF MODIFIERS FOR IEUF7D TO PROCESS                * 00600020
*   TYTABL     BRANCH TABLE FOR DC/DS MODIFIERS (SEE TEXT)            * 00620020
*   WFLAG      15 BYTE DC WORKBUCKET AREA                             * 00640020
*NOTES-                                                               * 00660020
*   THE FORMAT OF THE DC WORKBUCKET IS-                               * 00680020
*   LABEL  BYTE  BIT    CONTENTS                                      * 00700020
*                                                                     * 00720020
*   WFLAG    0    0     0 - TYPE 3 WORKBUCKET                         * 00740020
*            0    1     1 - WKBKT LENGTH = 15 BYTES                   * 00760020
*            0    2     DC PREVIOUSLY PROCESSED INDICATOR             * 00780020
*            0    3     LENGTH MODIFIER PRESENT INDICATOR             * 00800020
*            0    4     LAST OPERAND INDICATOR                        * 00820020
*   WTYP     1          TYPE (SEE TRTABL) 'FF' = ERROR                * 00840020
*   WTOTL   2-4         TOTAL LENGTH                                  * 00860020
*   WDUP    5-7         DUPLICATION FACTOR                            * 00880020
*   WCONS    8          NUMBER OF CONSTANTS                           * 00900020
*   WPTR1    9          RELATIVE POINTER FIRST BYTE OPERAND           * 00920020
*   WEXP    10          EXPONENT                                      * 00940020
*   WSCL    11   0-7    SCALE MODIFIER (11 BITS TOTAL)                * 00960020
*           12   0-2    PART OF ABOVE SCALE MODIFIER                  * 00980020
*           12    3     SYMBOL WORKBUCKET FLAG                        * 01000020
*           12   4-6    ALIGNMENT (BYTES)                             * 01020020
*           12    7     LENGTH MODIFIER TYPE (0=BYTE, 1= BIT)         * 01040020
*   WLMOD  13-14        LENGTH MODIFIER VALUE                         * 01060020
         EJECT                                                          01080020
DCEVL    MVI   OPCOD,0                   RESET INTERNAL OP CODE         01100020
         MVI   DCBKT,0                  RESET DC WORKBUCKET COUNTER     01120020
         L         GR2,ADLIST1(,ACT)   GET BASE FOR LIST1 IN ASMGASM    01123025
*./      DELETE    SEQ1=01124025,SEQ2=01124025                          01124026
         TM        L1PBYT1(GR2),X'40'  TEST DOS OPTION                  01126026
         BZ        DCEVL0              BRANCH IF DOS OPTION OFF         01129023
         MVI       LCONPTR,X'FF'       MAKE L-CON'S INVALID             01132023
         MVI       QCONPTR,X'FF'       MAKE Q-CON'S INVALID             01135023
DCEVL0   MVC   SAVWBP,CTXWBP(ACT)       SAVE SYMBOL BUCKET POINTER      01140023
         TM    TXESI(GRA),2             TEST IF LIT. ENTRY (MACH OP)    01160020
         BO    LITVAL                   YES,GO TO LITERAL ROUTINE       01180020
         L     GR1,CTXABP(ACT)          PTR TO APPENDED FIXED FIELD     01200020
         MVC   OPCOD(1),TXHEX(GRA)      GET HEX OPERATION CODE          01220020
         CLI   VSCNSW,X'FF'             IF V-CON SWITCH IS ON,          01240020
         BE    INTOT                    BRANCH.                         01260020
         CLI   OPCOD,X'25'              TRST IF LITERAL DC              01280020
         BE    INTOT                    YES,DON'T BULLDOG TXLOC         01300020
         MVC   TXLOC(3,GR1),CTLOC+1(ACT) SET LOC. CTR. IN TEXT RECORD   01320020
INTOT    MVC   TOTAL(4),CTLOC(ACT)      MOVE LOC. CTR. TO WORK AREA.    01340020
         LA    GRB,TXFAFL(GR1)          SAVE DC WORK BUCKET POINTER.    01360020
         L     GR1,CTXOFP(ACT)          GET OPERAND LENGTH POINTER.     01380020
         LA    GRA,1(GR1)               GET OPERAND FIELD POINTER.      01400020
         SR    GR2,GR2                                                  01420020
         IC    GR2,0(GR1)               GET OPERAND FIELD LENGTH        01440020
         AR    GR2,GRA                                                  01460020
         ST    GR2,FINADR               STORE PTR TO END OF OPND FIELD  01480020
LITENT   ST    GRA,SAVPTR               STORE PTR TO START OF OPND.     01500020
         XC    ERSW(FCONS+1-ERSW),ERSW                                  01520020
         MVI   BITREM+1,7               SET BIT REMAINDER = 7           01540020
         CLI   OPCOD,37                 STEP PAST                       01560020
         BNE   INIT                     = SIGN IF                       01580020
         LA    GRA,1(GRA)               A LITERAL DC                    01600020
INIT     LA    GR1,1                    INITIALIZE DUPFAC AND           01620020
         ST    GR1,DUPFAC                NOCONS TO 1.                   01640020
         STC   GR1,NOCONS                                               01660020
         XC    PZLNAT(FHEDSW-PZLNAT),PZLNAT                             01680020
         SR    GRC,GRC                  ZERO SWITCHES AND GRC           01700020
         LA    GRD,1                                                    01720020
         SPACE 2                                                        01740020
* CHECK DUPLICATION FACTOR                                              01760020
         SPACE 1                                                        01780020
         CLI   0(GRA),IA                TEST FOR NUMERIC.               01800020
         BL    DCEV1                    YES-EVALUATE DUPLICATION FACTOR 01820020
         CLI   0(GRA),ILPARN            CHECK FOR LEFT PAREN.           01840020
         BNE   NODUP                    NO,THEN NO DUP FACTOR PRESENT.  01860020
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A13 01870028
         BO    DCEV1                    YES, LIT EXPRESSION OK    V7A13 01872028
         CLI   LITSW,X'FF'              TEST FOR LITERAL.               01880020
         BE    ZRC01                    YES-DUP. FACTOR ERROR.          01900020
DCEV1    BAL   SRR,XPREV                TO EXPRESSION EVALUATION        01920020
         CL        SP2,=XL4'7FFFFF'    TEST FOR VALID BOUNDS            01923027
         BNH       DCEV1X              BRANCH IF OK                     01926023
         L         SRB,CLOGER(,ACT)    ELSE GO AND-                     01929023
         BALR      SRR,SRB               LOG THE-                       01932023
         DC        AL2(1)                  STUPID ERROR                 01935023
         SR        SP2,SP2             ZERO DUPLICATION FACTOR          01938023
DCEV1X   ST    SP2,DUPFAC               STORE DUPLICATION FACTOR        01940023
         TM    RSLT,X'30'                                               01960020
         BO    ZRC01                    DUPLICATION FACTOR ERROR        01980020
         BM    ZRC02                    RELOCATABLE DUPLICATION FACTOR  02000020
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A14 02010028
         BO    DCEV1Y                   YES, ALLOW * IN EXPRESS   V7A14 02012028
         TM    CTLCRI(ACT),X'40'        WAS AN * IN THE EXPRESSION      02020020
         BO    ZRC01                    YES - DUP FACTOR ERROR          02040020
DCEV1Y   DS    0H                                                 V7A14 02050028
         CLI   LITSW,X'FF'              TEST FOR LITERAL.               02060020
         BNE   NODUP                    NO, EVERYTHING OK.              02080020
         SR    GR1,GR1                  YES, DUP FACTOR ERROR           02100020
         CR    SP2,GR1                   IF DUP FACTOR = 0              02120020
         BE    ZRC01                                                    02140020
         SPACE 2                                                        02160020
* CHECK DC TYPE                                                         02180020
         SPACE 1                                                        02200020
NODUP    ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           02220020
         CLI   0(GRA),I9                TEST TYPE FOR NUMERIC           02240020
         BC    12,ZRC31                 UNKNOWN TYPE                    02260020
         CLI   0(GRA),IZ                TEST FOR ALPHABETIC             02280020
         BH    ZRC31                    UNKNOWN TYPE                    02300020
         MVC   DCTYP,0(GRA)             FETCH DC TYPE FROM TEXT RECORD  02320020
         TR    DCTYP,TRTABL-10          TRANSLATE TYPE                  02340020
         CLI   DCTYP,X'FF'              TEST FOR VALID TYPE             02360020
         BE    ZRC31                    UNKNOWN TYPE                    02380020
         IC    WR1,DCTYP                BUILD                           02400020
         SLL   WR1,2                    POINTER                         02420020
         AH    WR1,DCTYP1                                               02440020
         AH    WR1,DCTYP1                                               02460020
         IC    WR2,TYTABL(WR1)          TO TYPE                         02480020
         SRL   WR2,4                    TABLE                           02500020
         IC    WR2,ILTABLE(WR2)         LENGTH CODE INTO LENGTH         02510023
         LA    GRA,1(GRA)               KICK TEXT POINTER               02520020
         SPACE 2                                                        02540020
* CHECK LENGTH MODIFIER                                                 02560020
         SPACE 1                                                        02580020
LMSCAN   CLI   0(GRA),IL                TEST FOR LENGTH MODIFIER        02600020
         BE    LMS1                                                     02620020
         ST    WR2,LLNG                 IMPLIED LENGTH TO L-MOD         02640020
         MVI   BITREM+1,X'07'           SET REMAINDER=7                 02660020
         B     SMSCAN    TO SCALE MODIF SCAN                            02680020
LMS1     MVI   LMSW,X'FF'      SET L-MOD SWITCH                         02700020
         OI    WFLAG,X'10'              SET L-7OD PRESENT INDICATOR     02720020
         LA    GRA,1(GRA)               KICK TEXT POINTER               02740020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           02760020
         CLI   0(GRA),IPRIOD            TEST FOR BIT LENGTH             02780020
         BE    LMS2                                                     02800020
         MVI   BITREM+1,X'07'           SET REMAINDER=7                 02820020
         B     LMS3                                                     02840020
LMS2     LA    SAVE,TYTABL(WR1)                                         02860020
         TM    0(SAVE),X'04'            TEST IF BIT SPECS LEGAL         02880020
         BZ    ZRC03                    LENGTH ERROR.                   02900020
         MVI   BITSW,X'01'              SET BIT SWITCH                  02920020
         LA    GRA,1(GRA)               KICK TEXT POINTER               02940020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           02960020
LMS3     CLI   0(GRA),I9                TEST FOR NUMERIC                02980020
         BC    12,LMS4                                                  03000020
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A13 03010028
         BO    LMS3A                    YES, LIT EXPRESSION OK    V7A13 03012028
         CLI   LITSW,X'FF'              LENGTH ERROR IF LIT. LENGTH     03020020
         BE    ZRC03                    MOD. NOT DEC. SELF-DEF. TERM.   03040020
LMS3A    DS    0H                                                 V7A13 03050028
         CLI   0(GRA),ILPARN            TEST FOR LEFT PAREN.            03060020
         BNE   ZRC03                    LENGTH ERROR.                   03080020
LMS4     BAL   SRR,XPREV                TO EXPRESSION EVALUATION        03100020
         ST    SP2,LLNG                 STORE LENGTH MODIFIER           03120020
         TM    RSLT,X'30'                                               03140020
         BO    ZRC03                    LENGTH ERROR                    03160020
         BM    ZRC04                    RELOCATABLE LENGTH              03180020
         TM    CTEXTENI(ACT),X'04'      UNDER EXTEN .Q            V7A14 03190028
         BO    LMS4A                    YES, ALLOW * IN EXPRESS   V7A14 03192028
         TM    CTLCRI(ACT),X'40'        WAS AN * IN THE EXPRESSION      03200020
         BO    ZRC03                    YES - LENGTH MODIFIER ERROR     03220020
LMS4A    DS    0H                                                 V7A14 03230028
         L     SAVE,LLNG                                                03240020
         CLI   BITSW,X'01'                                              03260020
         BNE   LMS5                                                     03280020
         LA    SAVE,7(SAVE)                                             03300020
         SRL   SAVE,3                                                   03320020
LMS5     IC    WR2,TYTABL+1(WR1)       TEST MIN L-MOD VALUE             03340020
         CR    SAVE,WR2                                                 03360020
         BL    ZRC03                    LENGTH ERROR.                   03380020
         IC    WR2,TYTABL+2(WR1)       TEST MAX L-MOD VALUE             03400020
         LA    WR2,1(WR2)               GET UPPER LIMIT                 03420020
         CR    SAVE,WR2                                                 03440020
         BH    LMS6                                                     03460020
         B     SMSCAN                                                   03480020
LMS6     CLI   OPCOD,DS                                                 03500020
         BL    ZRC03                    LENGTH ERROR.                   03520020
         CLI   DCTYP,1                  LENGTH ERROR IF NOT CHARACTER   03540020
         BH    ZRC03                     OR HEXADECIMAL DS.             03560020
LMS7     CL    SAVE,DSMAX              TEST MAX L-MOD VALUE FOR DS      03580020
         BH    ZRC03                    LENGTH ERROR.                   03600020
         SPACE 2                                                        03620020
* CHECK SCALE MODIFIER                                                  03640020
         SPACE 1                                                        03660020
SMSCAN   MVI   SIGN,X'00'               INITIALIZE SIGN TO PLUS         03680020
         CLI   0(GRA),IS                TEST FOR SCALE MODIFIER         03700020
         BNE   EMSCAN                   TO EXPONENT MODIFIER SCAN       03720020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           03740020
         LA    SAVE,TYTABL(WR1)                                         03760020
         TM    0(SAVE),X'02'            IS SCALE MODIFIER LEGAL         03780020
         BZ    ZRC11                    SCALE MODIFIER ERROR.           03800020
         LA    GRA,1(GRA)               KICK TEXT POINTER               03820020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           03840020
         CLI   0(GRA),IPLUS             TEST FOR PLUS SIGN              03860020
         BE    SMS1                                                     03880020
         CLI   0(GRA),IMINUS            TEST FOR MINUS SIGN             03900020
         BNE   SMS2                                                     03920020
         CLI   DCTYP,X'07'              IF - TEST FOR D AND E TYPE      03940020
         BL    ZRC11                    SCALE MODIFIER ERROR.           03960020
         CLI   DCTYP,X'0E'              TEST FOR L-TYPE                 03966023
         BE    ZRC11                    DIE IF L CON                    03972023
         XI    SIGN,X'01'               SET SIGN MINUS                  03980020
SMS1     LA    GRA,1(GRA)               KICK TEXT POINTER               04000020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           04020020
SMS2     CLI   0(GRA),IA                TEST FOR NUMERIC.               04040020
         BL    SMS3                     YES-EVALUATE SCALE MODIFIER.    04060020
         CLI   LITSW,X'FF'              IF LITERAL, SCALE MOD. MUST BE  04080020
         BE    ZRC11                    DECIMAL SELF DEFINING TERM.     04100020
         CLI   0(GRA),ILPARN            TEST FOR LEFT PAREN.            04120020
         BNE   ZRC11                    NO-SCALE MODIFIER ERROR.        04140020
SMS3     BAL   SRR,XPREV                TO EXPRESSION EVALUATION        04160020
         LA    SAVE,0(SP2)              USE 3 BYTES ONLY                04180020
         TM    RSLT,X'30'               TEST CC FROM EEVAL              04200020
         BO    ZRC11                    CC=11, SCALE MODIFIER ERROR     04220020
         BM    ZRC12                    CC=10 OR 01, RELOC. SCALE MOD.  04240020
         TM    CTLCRI(ACT),X'40'        WAS AN * IN THE EXPRESSION      04260020
         BO    ZRC11                    YES - SCALE MODIFIER ERROR      04280020
         CLI   SIGN,1                   TEST SIGN                       04300020
         BE    SMS4                     BRANCH IF MINUS                 04320020
         CH    SAVE,=H'346'             CHECK SCALE MOD. AGAINST MAX.   04340020
         BH    ZRC11                    SCALE MODIFIER TOO LARGE        04360020
         B     SMS5                                                     04380020
SMS4     LCR   SAVE,SAVE                COMPLEMENT SCALE MODIFIER       04400020
         CH    SAVE,=H'-187'            CHECK SCALE MOD. AGAINST MIN.   04420020
         BL    ZRC11                    SCALE MODIFIER TOO SMALL        04440020
SMS5     CLI   DCTYP,X'07'                                              04460023
         BE    SMS8                     BR IF F CON                     04470023
         CLI   DCTYP,X'08'                                              04480023
         BE    SMS8                     BR IF H CON                     04490023
         CH    SAVE,=H'30'              FLOATING--CHECK MAX SCALE       04500023
         BH    ZRC11                    FLOATING PT. SCALE TOO LARGE    04520020
SMS8     SLL   SAVE,5                   POSITION SCALE MODIFIER         04540020
         STH   SAVE,SCMODF              STORE AS HALF WORD              04560020
         SPACE 2                                                        04580020
* CHECK EXTERNAL EXPONENT MODIFIER                                      04600020
         SPACE 1                                                        04620020
EMSCAN   CLI   0(GRA),IE                TEST FOR EXT. EXP. MODIFIER     04640020
         BNE   CONSCN                   NO,GO TO SCAN CONSTANT          04660020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           04680020
         MVI   SIGN,X'00'               SET SIGN PLUS                   04700020
         LA    SAVE,TYTABL(WR1)                                         04720020
         TM    0(SAVE),X'01'            IS EXPONENT MODIFIER LEGAL      04740020
         BZ    ZRC13                    EXOPNENT MODIFIER ERROR         04760020
         LA    GRA,1(GRA)               KICK TEXT POINTER               04780020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           04800020
         CLI   0(GRA),IPLUS             TEST FOR PLUS SIGN              04820020
         BE    EMS1                                                     04840020
         CLI   0(GRA),IMINUS            TEST FOR MINUS SIGN             04860020
         BNE   EMS2                                                     04880020
         XI    SIGN,1                   SET SIGN SWITCH MINUS.          04900020
EMS1     LA    GRA,1(GRA)               KICK TEXT POINTER               04920020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           04940020
EMS2     CLI   0(GRA),IA                TEST FOR NUMERIC.               04960020
         BL    EMS3                     YES-EVALUATE EXPONENT MODIFIER  04980020
         CLI   LITSW,X'FF'              IF LITERAL, EXP.MOD. MUST BE    05000020
         BE    ZRC13                    DECIMAL SELF DEFINING TERM.     05020020
         CLI   0(GRA),ILPARN            TEST FOR LEFT PAREN.            05040020
         BNE   ZRC13                    NO-EXPONENT MODIFIER ERROR.     05060020
EMS3     BAL   SRR,XPREV                TO EXPRESSION EVALUATION        05080020
         LA    SAVE,0(SP2)              USE 3 BYTES ONLY                05100020
         TM    RSLT,X'30'                                               05120020
         BO    ZRC13                    EXPONENT MODIFIER ERROR         05140020
         BM    ZRC14                    RELOCATABLE EXPONENT MODIFIER   05160020
         TM    CTLCRI(ACT),X'40'        WAS AN * IN THE EXPRESSION      05180020
         BO    ZRC13                    YES - EXPONENT MODIFIER ERROR   05200020
         CLI   SIGN,1                    TEST SIGN                      05220020
         BE    EMS4                     BRANCH IF MINUS                 05240020
         CH    SAVE,=H'75'              CHECK EXP. AGAINST MAX.         05260020
         BH    ZRC13                    EXPONENT TOO LARGE              05280020
         B     EMS5                                                     05300020
EMS4     LCR   SAVE,SAVE                COMPLEMENT EXP. MODIFIER        05320020
         CH    SAVE,=H'-85'             CHECK EXP. AGAINST MIN.         05340020
         BL    ZRC13                    EXPONENT TOO SMALL              05360020
EMS5     STC   SAVE,EXMODF              EXPONENT JUST RIGHT             05380020
         SPACE 2                                                        05400020
* CHECK VALIDITY OF LEFT DELIMETER, CALCULATE ALIGNMENT IF NECESSARY,   05420020
* AND EXECUTE A VARIABLE BRANCH BY TYPE FOR SYNTAX CHECKING.            05440020
         SPACE 1                                                        05460020
CONSCN   LA    GRC,TYTABL+3(GRC)                                        05480020
         MVC   ALWRD+1(3),0(GRC)        GET ADDR OF VARIABLE BRANCH     05500020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           05520020
         MVI   FHEDSW,0                 INITIALIZE SWITCHES             05540020
         L     ODDR,ALWRD               SET VARIABLE BRANCH             05560020
         CLI   0(GRA),IQUOTE            TEST FOR QUOTE                  05580020
         BE    CONS1                                                    05600020
         CLI   0(GRA),ILPARN            TEST FOR LEFT PAREN.            05620020
         BE    CONS2                                                    05640020
         CLI   0(GRA),ICOMMA            TEST FOR COMMA                  05660020
         BE    CONSDS                   YES-CHECK FOR DS                05680020
         CLI   0(GRA),IBLANK            TEST FOR BLANK                  05700020
         BNE   ZRC107                   INVALID OPERAND                 05720020
CONSDS   CLI   OPCOD,DS                 TEST FOR DS OPCODE              05740020
         BL    ZRC107                   NO-INVALID OPERAND              05760020
         BCTR  GRA,0                    ADJUST OPERAND POINTER          05780020
         CLI   LMSW,X'FF'               TEST IF LGTH MODIFIER PRESENT   05800020
         BE    ENOPND                   YES-END OF OPERAND, EXIT.       05820020
         BAL   SRR,ALIGN                NO-ALIGN PRIOR TO EXIT.         05840020
         B     ENOPND                   EXIT.                           05860020
CONS1    CLI   DCTYP,I9                 IF QUOTE, TEST FOR VALID TYPES  05880020
         BL    CONS3                                                    05900020
         CLI   DCTYP,X'0E'              IS THIS L CON                   05906023
         BE    CONS3                    YES.  QUOTE IS JUST FINE.       05912023
         B     ZRC107                   INVALID OPER AND.               05920020
CONS2    CLI   DCTYP,I8     IF LEFT PAREN TEST VALID TYPES              05940020
         BNH   ZRC107                   INVALID OPERAND                 05950023
         CLI   DCTYP,X'0E'              IS THIS L CON                   05960023
         BE    ZRC107                   INVALID OPERAND                 05970023
CONS3    S     GRA,SAVPTR               GET REL. PTR. TO 1ST BYTE OF    05980020
         STC   GRA,WPTR1                OPERAND AND PUT IT IN DC BKT.   06000020
         A     GRA,SAVPTR               RESTORE TEXT POINTER            06020020
         OI    WFLAG,2                  SET TEXT BIT                    06040020
         CLI   LMSW,X'FF'               TEST FOR LENG MODIFIER          06060020
         BE    ZROSAV                   SKIP ALIGNMENT IF YES           06080020
         CLI   LITSW,X'FF'              TEST IF LITERAL SCAN            06100020
         BE    ZROSAV                   SKIP ALIGNMENT IF YES           06120020
         CLI   OPCOD,X'25'              TEST FOR LITERAL DC             06140020
         BE    ZROSAV                   YES, ALREADY ALIGNED            06160020
         CLI   VSCNSW,X'FF'             TEST FOR 2ND V-TYPE SCAN        06180020
         BE    ZROSAV                   YES, ALIGNMENT ALREADY DONE     06200020
         BAL   SRR,ALIGN                ALIGN LOCATION COUNTER          06220020
ZROSAV   SR    SAVE,SAVE                                                06240020
CONBR    BR    ODDR                                                     06260020
         SPACE 2                                                        06280020
* END OF OPERAND PROCESSING --- COMPUTE TOTAL LENGTH OF OPERAND IN      06300020
* BYTES, FORM 15 BYTE DC WORK-BUCKET AND MOVE IT INTO TEXT RECORD. EXIT 06320020
* IF NO MORE OPERANDS TO FOLLOW, OTHERWISE BRANCH TO PROCESS NEXT       06340020
* OPERAND.                                                              06360020
         SPACE 1                                                        06380020
ENOPND   L     GRY,LLNG                 COMPUTE LENGTH TIMES NUMBER     06400020
         MH    GRY,NOCON1                OF CONSTANTS.                  06420020
         TM    FHEDSW,X'20'             TEST FOR P OR Z WITH NO LMV.    06440020
         BZ    ENOP1                    NO-BRANCH.                      06460020
         L     GRY,PZLNAT               YES-LOAD ACCUMULATED LENGTH.    06480020
ENOP1    M     GRX,DUPFAC               MULTIPLY BY DUP FACTOR.         06500020
         L     GRC,LLNG                 FETCH LMV.                      06520020
         CLI   BITSW,1                  TEST FOR BIT LENGTH.            06540020
         BNE   ENOP2                    NO-BRANCH.                      06560020
         LA    GRC,7(GRC)               CONVERT LMV TO BIT LENGTH.      06580020
         SRL   GRC,3                    ---                             06600020
         AH    GRY,BITREM               ADD BIT REMAINDER TO TOTAL LGTH 06620020
         LR    GRX,GRY                  SAVE RESULT.                    06640020
         LA    GRZ,7                    COMPUTE NEW BIT REMAINDER.      06660020
         NR    GRX,GRZ                  ---                             06680020
         STH   GRX,BITREM               ---                             06700020
         SRL   GRY,3                    COMPUTE NO.OF ADDITIONAL BYTES  06720020
ENOP2    ST    GRY,OPRNLN               AND STORE IN TOTAL OPND.LGTH.   06740020
         LA    GRA,1(GRA)               KICK TEXT POINTER               06760020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           06780020
         CLI   VSCNSW,X'FF'             TEST IF 1ST V-TYPE SCAN         06800020
         BE    PUTWB1                   NO,WBS WERE PUT IN 1ST SCAN     06820020
         A     ODDR,TOTAL                                               06840020
         ST    ODDR,TOTAL                                               06860020
         CLI   FOPND,0                  IS THIS 1ST OPERAND             06880020
         BNE   PUTWB                                                    06900020
         ST    WR1,CTLEN(ACT)           SET LENGTH ATTRIBUTE FOR MLC    06920020
         MVI   FOPND,X'FF'              SET 1ST OPND. SWITCH.           06940020
         CLI   ERSW,X'FF'                                               06960020
         BE    EXIT1                                                    06980020
PUTWB    CLI   DCBKT,32                 HAVE 32 OPNDS BEEN PROCESSED    07000020
         BE    ZRC100      YES - STATEMENT COMPLEXITY EXCEEDED ERROR    07020020
         OI    WFLAG,X'40'              SET DC WORKBUCKET INDICATOR     07040020
         MVC   WTYP,DCTYP               SET TRANSLATED TYPE             07060020
         MVC   WTOTL(3),OPRNLN+1        SET TOTAL OPERAND LENGTH        07080020
         MVC   WDUP(3),DUPFAC+1         SET DUP FACTOR                  07100020
         MVC   WNCONS(1),NOCONS         SET NUMBER OF CONSTANTS         07120020
         MVC   WEXP(1),EXMODF           SET EXP MODF                    07140020
         MVC   WSCL(2),SCMODF           SET SCL MODF                    07160020
         OC    WSCL+1(1),ALBYS          SET ALIGNMENT                   07180020
         OC    WSCL+1(1),BITSW          SET BIT-BYTE                    07200020
         MVC   WLMOD(2),LLNG+2          EET LENGTH MODIFIER VALUE       07220020
         CLI   LITSW,X'FF'                                              07240020
         BE    LTVL1                                                    07260020
         MVC   TXWTYP(15,WBPTR),WFLAG   MOVE WB INTO TEXT RECORD        07280020
         NI        TXWTYP(WBPTR),X'7F' SET AS A DC WORKBUCKET           07300020
         OI        TXWTYP(WBPTR),X'40'                                  07320020
         IC    GR1,DCBKT                INCREMENT DC WORKBUCKET CTR7000 07340020
         LA    GR1,1(GR1)               A MAXIMUM OF 32 IS ALLOWED PER  07360020
         STC   GR1,DCBKT                 DC/DS STATEMENT.               07380020
         CLI   OPCOD,X'25'              TEST FOR LITERAL DC.            07400020
         BE    PUTWB1                   YES-DONT INCREMENT REC.LGTH.    07420020
         L     GRC,CTEXTP(ACT)          FETCH POINTER TO TEXT RECORD.   07440020
         LH    GR1,TXRL(GRC)            FETCH RECORD LENGTH.            07460020
         LA    GR1,15(GR1)              ADD 15 AND                      07480020
         STH   GR1,TXRL(GRC)            PLACE BACK IN TEXT RECORD.      07500020
         MVI   RLSW,X'FF'               SET REC LENG UPDATE SWITCH      07520020
PUTWB1   CLI   0(GRA),IBLANK            TEST FOR BLANK                  07540020
         BE    DONE                                                     07560020
         C     GRA,FINADR               TEST FOR END OF OPERAND         07580020
         BE    DONE                                                     07600020
         CLI   0(GRA),ICOMMA            TEST FOR COMMA                  07620020
         BNE   ZRC39                    INVALID DELIMITER               07640020
         LA    WBPTR,15(WBPTR)          UPDATE POINTER FOR NEXT WB      07660020
         LA    GRA,1(GRA)               KICK TEXT POINTER               07680020
         MVI   FCONS,0                  RESET FIRST CONSTANT SWITCH     07700020
         B     INIT                                                     07720020
         SPACE 2                                                        07740020
* CHECK CHARACTER TYPE DC'S.                                            07760020
         SPACE 1                                                        07780020
CTYP     LA    GRA,1(GRA)               KICK TEXT POINTER               07800020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           07820020
         CL    GRA,FINADR               TEST FOR NO ENDING QUOTE        07824023
         BH    ZRC87                    BRANCH IF OPERAND DONE, NO '    07828023
         CH    SAVE,=H'256'             TEST IF MAX CHARACTERS HIT      07832023
         BH    ZRC107                   BRANCH IF MORE THAN 256         07836023
         CLI   0(GRA),IQUOTE            TEST FOR QUOTE                  07840020
         BE    CTYP4                    IF FOUND TEST IF NEXT CHAR QUOT 07860020
         CLI   0(GRA),IAMPSD            TEST FOR AMPERSAND              07880020
         BNE   CTYP3                                                    07900020
         LA    GRA,1(GRA)               KICK TEXT POINTER               07920020
         CLI   0(GRA),IAMPSD            TEST FOR PAIRED AMPERSAND       07940020
         BNE   ZRC107                   INVALID OPERAND                 07960020
CTYP3    LA    SAVE,1(SAVE)             ADD 1 TO COUNT OF CHARACTERS    07980020
         B     CTYP                     CONTINUE SCAN                   08000020
CTYP4    LA    GRA,1(GRA)               KICK TEXT POINTER               08020020
         CLI   0(GRA),IQUOTE            TEST FOR QUOTE                  08040020
         BE    CTYP3                    2 QUOTES MEAN 1 QUOTE IN CONST  08060020
         BCTR  GRA,0                    SUB. 1 FROM TEST POINTER        08080020
         B     XTYP4                                                    08100020
*./      DELETE    SEQ1=08120020,SEQ2=08140020                          08140023
CTYP5    CLI   LMSW,X'FF'               TEST IF LENGTH SPECIFIED        08160023
         BC    8,ENOPND                                                 08180020
         ST    SAVE,LLNG                STORE LENGTH OF CONSTANT        08200020
CEXIT    B     ENOPND                   TO END OPERAND                  08220020
         SPACE 2                                                        08240020
* CHECK HEXADECIMAL TYPE DC'S.                                          08260020
         SPACE 1                                                        08280020
XTYPE    LA    GRA,1(GRA)               KICK TEXT POINTER               08300020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           08320020
         CLI   0(GRA),X'0F'             TEST FOR VALID HEX DIGIT        08340020
         BH    XTYP3                    GO TO TEST FOR QUOTE IF NOT     08360020
         LA    SAVE,1(SAVE)             ADD 1 TO COUNT OF HEX DIGITS    08380020
         B     XTYPE                    CONTINUE SCAN                   08400020
XTYP3    CLI   0(GRA),IQUOTE            TEST FOR QUOTE                  08420020
         BNE   ZRC107                   INVALID OPERAND                 08440020
         LA    SAVE,1(SAVE)             ADD 1 TO COUNT                  08460020
         SRL   SAVE,1                   DIVIDE COUNT BY 2               08480020
XTYP4    LTR   SAVE,SAVE                TEST IF COUNT IS ZERO           08500020
         BZ    ZRC107                   INVALID OPERAND                 08520020
         CH    SAVE,=H'256'             TEST IF BYTE LIMIT EXCEEDED     08525023
         BH    ZRC107                   BRANCH IF MORE THAN 256         08535023
         B     CTYP5                    TEST LENGTH AND RETURN DC MAIN  08540020
         SPACE 2                                                        08560020
* CHECK BINARY TYPE DC'S.                                               08580020
         SPACE 1                                                        08600020
BTYPE    LA    GRA,1(GRA)               KICK TEXT POINTER               08620020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           08640020
         CLI   0(GRA),1                 TEST FOR VALID BINARY DIGIT     08660020
         BH    BTYP3                    NO,TEST FOR QUOTE               08680020
         LA    SAVE,1(SAVE)             ADD 1 TO COUNT                  08700020
         B     BTYPE                    CONTINUE SCAN                   08720020
BTYP3    CLI   0(GRA),IQUOTE            TEST FOR QUOTE                  08740020
         BNE   ZRC39                    INVALID DELIMITER               08760020
         LA    SAVE,7(SAVE)             ADD 7 TO COUNT                  08780020
         SRL   SAVE,3                   DIVIDE COUNT BY 8               08800020
         B     XTYP4                    TEST EXPLICIT LENG AND EXIT     08820020
         SPACE 2                                                        08840020
* CHECK FIXED AND FLOATING POINT DC'S.                                  08860020
         SPACE 1                                                        08880020
FHEDSCAN MVI   FHEDSW,0                 SET SIGN,EXP.,DOT SWITCHES = 0  08900020
FA       LA    GRA,1(GRA)               BUMP TEXT POINTER               08920020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           08940020
         CLI   0(GRA),IPLUS             IS 1ST CHAR. PLUS               08960020
         BE    FD                       YES                             08980020
         CLI   0(GRA),IMINUS            IS 1ST CHAR. MINUS              09000020
         BE    FD                       YES                             09020020
         CLI   0(GRA),IPRIOD            IS 1ST CHAR. DECIMAL POINT      09040020
         BE    FB                       YES                             09060020
         CLI   0(GRA),I9                IS 1ST CHAR. NUMERIC            09080020
         BH    ZRC107                   NO, LOG INVALID OPERAND ERROR   09100020
FC       LA    GRA,1(GRA)               YES, BUMP TEXT POINTER          09120020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           09140020
         CLI   0(GRA),I9                IS NEXT CHAR NUMERIC            09160020
         BNH   FC                       YES, CONTINUE SCAN              09180020
         CLI   0(GRA),IPRIOD            IS NEXT CHAR. DECIMAL POINT     09200020
         BE    FB                       YES                             09220020
         CLI   0(GRA),IE                CHECK FOR EXPONENT.             09240020
         BE    FE                       YES                             09260020
         CLI   0(GRA),ICOMMA            IS NEXT CHAR. COMMA             09280020
         BE    FF                       YES, END OF CONSTANT            09300020
         CLI   0(GRA),IQUOTE            IS NEXT CHAR. QUOTE             09320020
         BE    ENOPND                   YES, END OF OPERAND---EXIT.     09340020
         B     ZRC107                   NO, LOG INVALID OPERAND ERROR.  09360020
FB       TM    FHEDSW,1                 IS DOT SWITCH ON                09380020
         BO    ZRC107                   YES, TOO MANY DECIMAL POINTS.   09400020
         OI    FHEDSW,1                 TURN ON DOT SWITCH              09420020
         B     FC                       CONTINUE SCAN                   09440020
FD       TM    FHEDSW,4                 IS SIGN SWITCH ON               09460020
         BO    ZRC107                   YES, TOO MANY ALGEBRAIC SIGNS.  09480020
         OI    FHEDSW,4                 TURN ON SIGN SWITCH             09500020
         B     FA                       CONTINUE SCAN                   09520020
FE       TM    FHEDSW,2                 IS EXP. SWITCH ON               09540020
         BO    ZRC107                   YES, TOO MANY EXPONENTS.        09560020
         OI    FHEDSW,3                 TURN ON EXP. AND DOT SWITCHES   09580020
         NI    FHEDSW,X'FB'             TURN OFF SIGN SWITCH            09600020
         B     FA                       DO EXPONENT SCAN.               09620020
FF       IC    GR14,NOCONS              ADD 1 TO NUMBER OF CONSTANTS    09640020
         LA    GR14,1(GR14)                                             09660020
         STC   GR14,NOCONS                                              09680020
         B     FHEDSCAN                 BEGIN SCANNING NEXT CONSTANT.   09700020
         SPACE 2                                                        09720020
* CHECK PACKED AND ZONED DC'S.                                          09740020
         SPACE 1                                                        09760020
PTYPE    LA    GRA,1(GRA)               STEP OPERAND POINTER.           09780020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           09800020
         CLI   0(GRA),IPLUS             TEST FOR PLUS SIGN.             09820020
         BE    PTYP3                    YES-BRANCH                      09840020
         CLI   0(GRA),IMINUS            TEST FOR MINUS SIGN.            09860020
         BE    PTYP3                    YES-BRANCH                      09880020
PTYP2    CLI   0(GRA),I9                TEST FOR NUMERIC.               09900020
         BH    PTYP4                    NO-BRANCH.                      09920020
         LA    GRX,1(GRX)               ADD 1 TO LENGTH.                09940020
PTYP3    LA    GRA,1(GRA)               STEP OPERAND POINTER.           09960020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           09980020
         B     PTYP2                    BRANCH TO CONTINUE SCAN.        10000020
PTYP4    CLI   0(GRA),IPRIOD            TEST FOR DOT.                   10020020
         BNE   PTYP5                    NO-BRANCH.                      10040020
         TM    FHEDSW,8                 TEST DOT SWITCH.                10060020
         BO    ZRC107                   ON-TOO MANY DOTS IN CONSTANT.   10080020
         OI    FHEDSW,8                 OFF-TURN DOT SWITCH ON.         10100020
         B     PTYP3                    BRANCH TO CONTINUE SCAN.        10120020
PTYP5    CLI   0(GRA),IQUOTE            TEST FOR QUOTE.                 10140020
         BE    PTYP6                    YES-BRANCH                      10160020
         CLI   0(GRA),ICOMMA            TEST FOR COMMA.                 10180020
         BNE   ZRC39                    NO-INVALID DELIMITER.           10200020
         IC    GRZ,NOCONS               ADD 1 TO NUMBER OF CONSTANTS.   10220020
         LA    GRZ,1(GRZ)               ---                             10240020
         STC   GRZ,NOCONS               ---                             10260020
PTYP6    LTR   GRX,GRX                  TEST FOR ZERO LENGTH.           10280020
         BZ    ZRC39                    YES-INVALID DELIMITER.          10300020
         CLI   DCTYP,4                  CHECK DC TYPE.                  10320020
         BE    ZONED                    ZONED-BRANCH.                   10340020
         LA    GRX,2(GRX)               PACKED-COMPUTE PACKED LENGTH.   10360020
         SRL   GRX,1                    ---                             10380020
ZONED    CH    GRX,CON16                COMPARE LENGTH WITH MAXIMUM.    10400020
         BH    ZRC17                    DATA ITEM TOO LARGE-BRANCH.     10420020
         CLI   LMSW,X'FF'               TEST FOR LENGTH MODIFIER.       10440020
         BE    PTYP7                    YES-BRANCH.                     10460020
         CLI   FCONS,0                  TEST FOR 1ST CONSTANT IN OPND.  10480020
         BNE   PTYP8                    NO-BRANCH.                      10500020
         MVI   FCONS,X'FF'              SET 1ST CONSTANT SWITCH.        10520020
         OI    FHEDSW,X'20'             SET PZ, NO LMV SWITCH.          10540020
         ST    GRX,LLNG                 USE 1ST CONSTANT LGTH.FOR LMV.  10560020
PTYP8    A     GRX,PZLNAT               ACCUMULATE TOTAL LENGTH.        10580020
         ST    GRX,PZLNAT               ---                             10600020
PTYP7    CLI   0(GRA),IQUOTE            TEST FOR QUOTE.                 10620020
         BE    ENOPND                   YES-BRANCH.                     10640020
         SR    GRX,GRX                  NO-SET LENGTH COUNTER TO ZERO.  10660020
         NI    FHEDSW,X'F7'             RESET DOT SWITCH.               10680020
         B     PTYPE                    BRANCH TO PROCESS NEXT CONSTANT 10700020
         SPACE 2                                                        10720020
* CHECK A AND Y TYPE ADDRESS CONSTANTS.                                 10740020
         SPACE 1                                                        10760020
ATYPE    LA    GRA,1(GRA)               KICK TEXT POINTER               10780020
         BAL   SRR,XPREVA               TO EXPRESSION EVALUATION        10800020
         CLI   LITSW,X'FF'              CHECK FOR LITERAL               10820020
         BNE   ATYP1                    NO, BRANCH                      10840020
         TM    CTLCRI(ACT),X'40'        CHECK FOR LOC. CTR. REF.        10860020
         BZ    ATYP1                    NO, BRANCH                      10880020
         MVI   LOCSW,X'FF'              YES, SET SWITCH                 10900020
ATYP1    CLI   0(GRA),ICOMMA            TEST FOR COMMA                  10920020
         BNE   ATYP3                    NO,GO TO TEST FOR RIGHT PAREN   10940020
         IC    SAVE,NOCONS                                              10960020
         LA    SAVE,1(SAVE)             ADD 1 TO NO OF CONSTANTS        10980020
         STC   SAVE,NOCONS                                              11000020
         B     ATYPE                                                    11020020
ATYP3    CLI   0(GRA),IRPARN            TEST FOR RIGHT PAREN.           11040020
         BNE   ZRC39                    INVALID DELIMITER               11060020
         B     ENOPND                   TO END OPERAND                  11080020
         SPACE 2                                                        11100020
* CHECK S TYPE ADDRESS CONSTANTS.                                       11120020
         SPACE 1                                                        11140020
STYPE    CLI   LITSW,X'FF'                                              11160020
         BE    ZRC05                    ERROR-LITERAL IN S-CON.         11180020
STYP1    LA    GRA,1(GRA)               KICK TEXT POINTER               11200020
         BAL   SRR,XPREVA               TO EXPRESSION EVALUATION        11220020
         CLI   0(GRA),ILPARN            TEST FOR LEFT PAREN.            11240020
         BNE   STYP3                    NO, BRANCH                      11260020
         TM    FHEDSW,X'10'             LEFT PAREN SWITCH ON            11280020
         BO    ZRC107                    YES, TOO MANY LEFT PARENS      11300020
         OI    FHEDSW,X'10'             TURN ON LEFT PAREN SWITCH       11320020
         B     STYP1                    CHECK BASE REG. EXPRESSION.     11340020
STYP3    TM    FHEDSW,X'10'             TEST FOR BASE-DISP S-CON.       11360020
         BZ    STYP4                    NO-BRANCH                       11380020
         CLI   0(GRA),IRPARN            YES-TEST FOR RT. PAREN DELIM.   11400020
         BNE   ZRC39                    NO-INVALID DELIMITER            11420020
         LA    GRA,1(GRA)               YES-STEP OVER RIGHT PAREN.      11440020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           11460020
STYP4    CLI   0(GRA),IRPARN            TEST FOR RT. PAREN. DELIM.      11480020
         BE    ENOPND                   TO END OF OPERAND               11500020
         CLI   0(GRA),ICOMMA            TEST FOR COMMA                  11520020
         BNE   ZRC39                    INVALID DELIMITER               11540020
         IC    SAVE,NOCONS              ADD                             11560020
         LA    SAVE,1(SAVE)             1                               11580020
         STC   SAVE,NOCONS              TO NUMBER OF CONSTANTS          11600020
         NI    FHEDSW,X'EF'             TURN OFF LEFT PAREN SWITCH      11620020
         B     STYP1                    CONTINUE SCAN                   11640020
         SPACE 2                                                        11660020
* CHECK Q AND V TYPE ADDRESS CONSTANTS, AND MAKE ESD ENTRY FOR EACH.    11680020
         SPACE 1                                                        11700020
QTYPE    CLI   LITSW,X'FF'                                              11720020
         BE    ZRC15                    ERROR - QCON IN LITERAL.        11740020
         MVI   QFLAG,1                  SET QCON FLAG FOR ESD ROUTINE   11760020
         B     VQCOM                                                    11780020
VTYPE    MVI   QFLAG,0                  SET VCON FLAG FOR ESD ROUTINE   11800020
VQCOM    CLI   LITSW,X'FF'              TEST IF LITERAL VCON OR QCON    11820020
         BE    SCAN1                                                    11840020
VSCN1    CLI   VSCNSW,X'FF'             TEST IF 1ST SCAN                11860020
         BE    SCAN2                    NO,TO SCAN FOR ESD PROCESSING   11880020
         MVI   EXITSW,X'FF'             OTHERWISE,SET 1ST SCAN          11900020
SCAN1    LA    GRA,1(GRA)               KICK TEXT POINTER               11920020
         ST    GRA,ERRORPTR             USED ONLY FOR ERRORS.           11940020
         SR    GR2,GR2                  RESET SYMBOL CHAR. COUNTER      11960020
         CLI   0(GRA),I9                TEST FOR NUMERIC                11980020
         BC    12,ZRC107                INVALID OPERAND.                12000020
SCAN1A   CLI   0(GRA),ICOMMA            TEST FOR COMMA                  12020020
         BE    SCAN1B                                                   12040020
         CLI   0(GRA),IRPARN            TEST FOR RIGHT PAREN.           12060020
         BE    SCAN3                    YES,CHECK VALIDITY LAST SYMBOL  12080020
         CLI   0(GRA),IAT                                               12100020
         BH    ZRC107                   INVALID OPERAND.                12120020
         LA    GR2,1(GR2)               KICK SYMBOL CHAR. COUNTER       12140020
         LA    GRA,1(GRA)               KICK TEXT POINTER               12160020
         B     SCAN1A                   CONTINUE SCAN                   12180020
SCAN1B   IC    SAVE,NOCONS                                              12200020
         LA    SAVE,1(SAVE)                                             12220020
         STC   SAVE,NOCONS                                              12240020
SCAN3    CH    GR2,=H'8'                SYMBOL ERROR IF ANY V-CON IS    12260020
         BH    ZRC18                    MORE THAN 8 CHARACTERS LONG.    12280020
         LTR   GR2,GR2                  INVALID OPERAND IF ANY V-CON    12300020
         BZ    ZRC107                   IS MISSING - I.E. DC V()        12320020
         L     GR2,CTXWBP(ACT)          LOAD SYMBOL BUCKET POINTER      12340020
         LTR   GR2,GR2                  TEST FOR ZERO                   12360020
         BZ    VW                       YES, BRANCH                     12380020
         LA    GR2,6(GR2)               STEP SYMBOL BUCKET POINTER      12400020
         ST    GR2,CTXWBP(ACT)          STORE INCREMENTED BKT PTR.      12420020
VW       CLI   0(GRA),ICOMMA            IS DELIMITER A COMMA            12440020
         BE    SCAN1                    YES, CONTINUE SCAN              12460020
         B     ENOPND                   NO, END OF OPERAND.             12480020
SCAN2    TM    TXWTYP(WBPTR),4          TEST FOR ERROR                  12500020
         BO    DONE2                    BRANCH IF YES                   12520020
SCAN2AA  LA    SP1,1(GRA)               PTR TO 1ST BYTE OF CONSTANT     12540020
SCAN2A   LA    GRA,1(GRA)               KICK TEXT POINTER               12560020
         CLI   0(GRA),ICOMMA            TEST FOR COMMA                  12580020
         BE    SCAN2B                                                   12600020
         CLI   0(GRA),IRPARN            TEST FOR RIGHT PAREN.           12620020
         BNE   SCAN2A                   CONTINUE TO SCAN CONST          12640020
SCAN2B   TM    WFLAG,2                  DOES DS CONTAIN TEXT            12660020
         BZ    ENOPND                   NO,SKIP ESD PROCESSING          12680020
         LR    SP2,GRA                  MAKE                            12700020
         SR    SP2,SP1                  ESD                             12720020
         BCTR  SP2,0                    ENTRY                           12740020
         STM   GRA,GRY,REGSAV                                           12760020
         CLI   OPCOD,X'26'              SET COND. CODE FOR ESD PROCESS  12780020
         L     GR1,CVCON(ACT)           BRANCH TO DO ESD PROCESSING     12800020
         L     FRB,CBRNDA(ACT)           AND CROSS-REFERENCE.           12820020
         BALR  SRR,GR1                                                  12840020
         USING *,SRR                                                    12860020
QFLAG    DC    AL2(0)                   ESD ROUTINE FLAG -- 0=V --- 1=Q 12880020
         LM    GRA,GRY,REGSAV           RESTORE REGISTERS               12900025
         DROP  SRR                                                      12920020
NOESD    L     GR1,CTXWBP(ACT)          INCREMENT                       12940020
         LA    GR1,6(GR1)               SYMBOL WORK BUCKET              12960020
         ST    GR1,CTXWBP(ACT)          POINTER BY 6                    12980020
         CLI   0(GRA),ICOMMA            TEST FOR COMMA                  13000020
         BE    SCAN2AA                  YES, BRANCH.                    13020020
         B     ENOPND                                                   13040020
         SPACE 2                                                        13060020
*        ROUTINE TO ALIGN LOCATION COUNTER TO CORRECT BOUNDARY          13080020
*        R1 IS WORK REGISTER,LNKR IS LINK REGIATER                      13100020
         SPACE 1                                                        13120020
ALIGN    L     R1,TOTAL                 GET LOCATION COUNTER            13140020
         SR    SAVE,SAVE                SET SAVE = ALL ONES             13160020
         BCTR  SAVE,0                                                   13180020
         BCTR  WR2,0                    WR2 = ALIGNMENT                 13200020
         N     WR2,=XL4'7'                MAXIMUM OF DBLWD              13210023
         AR    R1,WR2                        1=BYTE, 2=HALF WORD        13220020
         XR    WR2,SAVE                      4=FULL WORD, 8=DOUBLE WRD  13240020
         NR    R1,WR2                   R1 IS LOC CNT ALIGNED           13260020
         S     R1,TOTAL                 FIND NUMBER BYTES OF ALIGNMENT  13280020
         SLL   R1,1                     SHIFT                           13300020
         STC   R1,ALBYS                 AND PUT IN                      13320020
         SRL   R1,1                                                     13340020
         A     R1,TOTAL                 SET THE NEW ALIGNED             13360020
         ST    R1,TOTAL                 LOCATION COUNTER                13380020
         CLI   FOPND,0                  IS THIS 1ST OPND.               13400020
         BCR   7,SRR                    NO, BRANCH                      13420020
         CLI   VSCNSW,X'FF'                                             13440020
         BCR   8,SRR                    BRANCH IF 2ND V-TYPE SCAN.      13460020
         L     R1,CTXABP(ACT)           GET POINTER TO TEXT RECORD      13480020
         MVC   TXLOC(3,R1),TOTAL+1      SET ALIGNED LOC CTR IN TEXT     13500020
ALIGN1   BR    SRR                      RETURN FROM WHENCE THOU CAME    13520020
DONE     OI    TXWTYP(WBPTR),X'08'      SET LAST DC WB INDICATOR        13540020
DONE1    MVC   CTLOC(4,ACT),TOTAL  SET NEW LOC CTR IN CENTRAL TABLE     13560020
DONE2    CLI   EXITSW,X'FF'             TEST IF ABNORMAL RETURN TO MLC  13580020
         BE    ABNEXT                   YES,BRANCH                      13600020
         MVI   VSCNSW,X'00'             NO,SET 1ST V-TYPE SCAN          13620020
         B     CTRTRN(ACT)              NORMAL RETURN TO MLC            13640020
ABNEXT   MVI   EXITSW,X'00'             SET NORMAL RETURN TO MLC        13660020
         MVI   VSCNSW,X'FF'             SET 2ND V-TYPE SCAN             13680020
         MVC   CTXWBP(4,ACT),SAVWBP     RESTORE SYMBOL BUCKET POINTER   13700020
         L     WR1,CTSAVE+12(ACT)       ABNORMAL                        13720020
         LA    WR1,4(WR1)               RETURN                          13740020
         ST    WR1,CTSAVE+12(ACT)       TO                              13760020
         B     CTRTRN(ACT)              MLC                             13780020
         SPACE 2                                                        13800020
* ERROR EXIT ROUTINE. LOG ASSIGNED ERROR MESSAGE AND VAMOOSE.           13820020
         SPACE 1                                                        13840020
EXIT     L     SP1,ERRORPTR             LOAD COLUMN POINTER FOR LOGERR  13860020
         CLI   LITSW,X'FF'              IS THIS A LITERAL               13880020
         BE    LOGERR                   YES, BRANCH.                    13900020
         MVI   TXWTYP(GRB),X'4C'        SET ERROR INDICATOR IN DC BKT.  13920020
         CLI   RLSW,X'FF'               TESTREC LENG UPDATE SWITCH      13940020
         BNE   UPRECL                   BRANCH IF OFF                   13960020
         L     WR1,TOTAL                SUBTRACT LENGTH                 13980020
         S     WR1,OPRNLN               OF ERRONEOUS OPERAND FROM       14000020
         ST    WR1,TOTAL                TOTAL LENGTH OF STATEMENT       14020020
         B     LOGERR                                                   14040020
UPRECL   L     WR1,CTEXTP(ACT)          POINTER TO TEXT RECORD          14060020
         LH    WR2,TXRL(WR1)            INCREMENT                       14080020
         LA    WR2,15(WR2)              RECORD LENGTH                   14100020
         STH   WR2,TXRL(WR1)            BY LENGTH OF WORK BUCKET        14120020
LOGERR   L     SRB,CLOGER(ACT)                                          14140020
         BALR  SRR,SRB                                                  14160020
KAPUT    DC    AL2(0)                   DIAGNOSTIC NUMBER STORED HERE   14180020
         CLI   LITSW,X'FF'              IS THIS A LITERAL               14200020
         BE    LTVL3                    YES, BRANCH.                    14220020
         CLI   FOPND,0                  IS THIS 1ST OPND.               14240020
         BNE   DONE1                                                    14260020
         CLI   NOCONS,X'01'                                             14280020
         BNE   STERSW                                                   14300020
EXIT1    L     GR1,CTXABP(ACT)     FETCH PTR TO APPENDED FIXED FIELD    14320020
         MVC   TOTAL+1(3),TXLOC(GR1)    GET LOC CNT                     14340020
         L     GR2,TOTAL                IN GR2                          14360020
         SR    WR1,WR1                                                  14380020
         IC    WR1,ALBYS                GET NUMBER OF BYTES             14400020
         SRL   WR1,1                    TO ALIGN                        14420020
         SR    GR2,WR1                  GET ORIGINAL LOC CNT            14440020
         ST    GR2,TOTAL                AND PUT BACK                    14460020
         MVC   TXLOC(3,GR1),TOTAL+1       (IF ERROR, DONT ALIGN)        14480020
         CLI   ERSW,X'FF'                                               14500020
         BE    DONE1                                                    14520020
         LA    GR1,1                                                    14540020
         ST    GR1,CTLEN(ACT)                                           14560020
         B     DONE1                                                    14580020
STERSW   MVI   ERSW,X'FF'                                               14600020
         B     ENOPND                                                   14620020
         SPACE 2                                                        14640020
* LITERAL EVALUATION AND PROCESSING ROUTINE.                            14660020
         SPACE 1                                                        14680020
LITVAL   L     1,CTXOFP(ACT)            GET OPRND LENGTH POINTER        14700020
         SR    GR2,GR2                  CLEAR WORK REGISTER             14704023
         IC    GR2,0(GR1)               GET OPERAND LENGTH              14708023
         AR    GR2,GR1                  GET END OF OPERAND POINTER      14712023
         ST    GR2,FINADR                    AND  SAVE                  14716023
         LA        2,=X'32'            SET AS A BLANK                   14720020
         ST        2,GRASAVE             IN CASE OF AN ERROR            14740020
         L     2,CTXABP(ACT)            GET PTR TO APPENDED FIXED FIELD 14760020
         SR    WR1,WR1                                                  14780020
         IC    WR1,TXLSTG(2)            GET RELATIVE PTR TO = SIGN      14800020
         STH   GRC,RELEQL                AND SAVE IT.                   14820020
         LA    GRA,2(GR1,GRC)           GET ABSOLUTE PTR. TO = SIGN+1   14840020
         MVI   LITSW,X'FF'              SET LITERAL SWITCH              14860020
         LR    WBPTR,2                  SAVE PTR TO WORK BUCKET         14880020
         TM    TXLEVI(GRB),2            LITERAL PREVIOUSLY EVALUATED    14900020
         BO    LTVL3A                   YES, BRANCH                     14920020
         B     LITENT                   OTHERWISE GO TO EVALUATE        14940020
LTVL1    OI    TXLEVI(GRB),2            SET LITERAL EVALUATED INDICATOR 14960020
         ST        GRA,GRASAVE         SAVE POINTER                     14980020
         SR    SAVE,SAVE                                                15000020
         TM    OPRNLN+3,X'07'           TEST LENGTH FOR MULTIPLE OF 8   15020020
         BZ    LTVL2                                                    15040020
         LA    SAVE,4(SAVE)                                             15060020
         TM    OPRNLN+3,X'03'           TEST LENGTH FOR MULTIPLE OF 4   15080020
         BZ    LTVL2                                                    15100020
         LA    SAVE,4(SAVE)                                             15120020
         TM    OPRNLN+3,X'01'           TEST LENGTH FOR MULTIPLE OF 2   15140020
         BZ    LTVL2                                                    15160020
         LA    SAVE,4(SAVE)             OTHERWISE 7ULTIPLE OF 1         15180020
LTVL2    SR    SP1,SP1                                                  15200020
         S     GRA,SAVPTR               GET DEFINITION LENGTH,          15220020
         BCTR  GRA,0                    SUBTRACT 1                      15240020
         STC   GRA,DEFLEN               AND STORE.                      15260020
         MVC   WLNAT(1),CTLEN+3(ACT)    SET LENGTH ATTRIBUTE            15280020
         SPACE 2                                                        15300020
*  THE FOLLOWING IS SYMBOL TABLE LOOK-UP FOR LITERALS.ENTERS LITERALS   15320020
*  IN TABLE,IF NO DUPLICATES FOUND AND IF ROOM IN TABLE.                15340020
         SPACE 1                                                        15360020
PUTLIT   IC    SP1,DEFLEN               GET DEFINITION LENGTH-1         15380020
         L     GRA,SAVPTR               GET PPINTER TO TEXT.            15400020
         L     WR1,CTSYMP(ACT)                                          15420020
         L     WR2,LITPTR(SAVE)         GET DISPLACEMENT OF POINTER     15440020
         AR    WR2,WR1                                                  15460020
NEXENT   ST    WR2,PREPTR               FOR FORWARD THREADING           15480020
         MVC   ALWRD+1(3),0(WR2)                                        15500020
         L     WR2,ALWRD                GET NEXT POINTER                15520020
         LTR   WR2,WR2                  ZERO POINTER MEANS              15540020
         BZ    NOSAME                   END OF THREAD                   15560020
         AR    WR2,WR1                  =ADDRESS OF ENTRY               15580020
         CLI   LOCSW,X'FF'              CHECK LITERAL-ASTERISK SWITCH   15600020
         BE    NEXENT                   BRANCH IF ON                    15620020
         CLC   DEFLEN,3(WR2)            IF DEFINITION LENGTHS UNEQUAL   15640020
         BNE   NEXENT                   TRY NEXT ENTRY                  15660020
         EX    SP1,LCOMP                EXECUTE COMPR WITH DEF LNG-1    15680020
         BNE   NEXENT                                                   15700020
         TM    CTLREF(ACT),X'80'        IS LREF ON .Q                   15703026
         BZ    DUPFOUND                 NO                              15706025
         S     WR2,=F'6'                BACKUP ADDRESS TO PREFIX        15709025
         ST    WR2,ALWRD                STORE TO CREATE REF CHAIN       15712025
         LA    WR2,6(,WR2)              RESTORE LITERAL'S ADDRESS       15715025
DUPFOUND AR    WR2,SP1                  DUPLICATE FOUND                 15720025
         MVC   WTOTL(3),8(WR2)          GET DISPLACEMENT FROM TABLE     15740020
         MVC   TXLDSP(3,WBPTR),8(WR2)   MOVE DISPLACEMENT IN WB         15760020
         B     SETWB1                                                   15780020
NOSAME   LA    SP1,21(SP1)              DEFINITION LENGTH + FIXED INFO  15800020
         CLI   LOCSW,X'FF'              CHECK LITERAL-ASTERISK SWITCH   15820020
         BNE   PEG                      BRANCH IF OFF, OTHERWISE        15840020
         LA    SP1,4(SP1)               ALLOW FOR TXLOC AND CESDID      15860020
PEG      XC    SAVLEN(4),SAVLEN         SET SAVLEN = 0                  15880020
         L     GR1,CTXWBP(ACT)          FETCH SYMBOL BUCKET POINTER     15900020
         LTR   GR1,GR1                  TEST FOR ZERO                   15920020
         BZ    NOSYMBKT                 YES, NO SYMBOL BUCKETS TO MOVE. 15940020
         CLI   DCTYP,I9                 IS THIS AN ADCON LITERAL        15960020
         BL    NOSYMBKT                 NO, THEN DONT MOVE SYMBOL BKTS. 15980020
         L     GR2,CTEXTP(ACT)          FETCH PTR TO CURR. TEXT REC.    16000020
         AH    GR2,TXRL(GR2)            ADD RECORD LENGTH.              16020020
         SR    GR2,GR1                  COMPUTE LGTH OF ALL SYM. BKTS.  16040020
         BZ    NOSYMBKT                 IF 0, THEN THERE ARE NONE.      16060020
         LA    SP1,0(SP1,GR2)           ADD LENGTH OF SYMBOL BKTS.      16080020
         ST    GR2,SAVLEN               SAVE LENGTH OF SYMBOL BUCKETS.  16100020
         OI    WTYP,X'40'               SET SWITCH FOR DCGETR ROUTINE.  16120020
         TM    CTLREF(ACT),X'80'        IS LREF ON .Q                   16125026
         BZ    NOSYMBKT                 NO                              16130025
         LA    SP1,6(,SP1)              EXTRA 6 BYTES FOR LREF PREFIX   16135025
NOSYMBKT ST    SAVE,REGSAV                                              16140020
         L     SRB,CSTROM(ACT)          TEST IF ROOM                    16160020
         BALR  SRR,SRB                  IN SYMBOL TABLE                 16180020
         DS        2H                                                   16200020
         L     SAVE,REGSAV              RETURN HERE IF ENOUGH ROOM      16220025
         TM    CTLREF(ACT),X'80'        IS LREF ON .Q                   16221026
         BZ    NOCHANGE                 NO                              16222025
         L     GR1,CFREEP(ACT)          GET DISPLACEMENT IN S. T.       16223025
         LR    GR2,GR1                  TRANSFER IT TO WORK REGISTER    16224025
         LA    GR2,6(,GR2)              INCREASE BY 6 BYTE PREFIX       16225025
         ST    GR2,CFREEP(ACT)          UPDATE WITH NEW DISPLACEMENT    16226025
         AR    GR1,WR1                  ABSOLUTE ADDRESS OF FREE CORE   16227025
         XC    0(3,GR1),0(GR1)          ZERO START OF LITERAL CHAIN     16228025
         ST    GR1,ALWRD                STORE FOR MOVE & REF CHAIN      16229025
         MVC   3(3,GR1),ALWRD+1         INITIALIZE END OF REF CHAIN     16230025
NOCHANGE L     WR2,PREPTR               RESTORE FOR FORWARD THREADING   16240025
         MVC   0(3,WR2),CFREEP+1(ACT)   THREAD NEW ENTRY                16260020
         L     WR2,CFREEP(ACT)                                          16280020
         AR    WR2,WR1                  = ADDRESS OF FREE STORAGE       16300020
         SR    WR1,WR1                                                  16320020
         XC    0(3,WR2),0(WR2)          ZERO AS POINTER                 16340020
         MVC   3(1,WR2),DEFLEN          MOVE IN DEFINITION LENGTH-1     16360020
         IC    WR1,DEFLEN               GET DEFINITION LENGTH-1         16380020
         EX    WR1,MOVTEX               FOR EXECUTED MOVE INSTRUCTION   16400020
         LA    WR2,5(WR1,WR2)           POINT PAST TEXT FORM            16420020
         LA    WR1,CTLITA(SAVE,ACT)                                     16440020
         MVC   WTOTL(3),1(WR1)                                          16460020
         MVC   0(16,WR2),WLNAT          MOVE FIXED INFO INTO TABLE      16480020
         CLI   LOCSW,X'FF'              CHECK LITERAL-ASTERISK SWITCH   16500020
         BNE   UPFREE                   BRANCH IF OFF                   16520020
         MVI   LOCSW,0                  RESET LITERAL-ASTERISK SWITCH   16540020
         OI    2(WR2),X'80'              SET MOVE INDICATOR IN DC BKT.  16560020
         MVC   16(3,WR2),TXLOC(GRB)     MOVE TXLOC.                     16580020
         MVC   19(1,WR2),CESDID(ACT)    MOVE CURRENT ESD-ID             16600020
         LA    WR2,4(WR2)               BUMP RECORD POINTER             16620020
         SPACE 2                                                        16640020
* AT THIS POINT TEST IF WORK BUCKETS ATTATCHED. IF YES MOVE THEM IN.    16660020
         SPACE 1                                                        16680020
UPFREE   LA    WR2,16(WR2)                                              16700020
         L     GR2,SAVLEN               FETCH TOTAL SYM.BKT. LENGTH     16720020
         LTR   GR2,GR2                  IF ZERO, THEN NO SYM.BKTS.      16740020
         BZ    IPA                       TO MOVE.                       16760020
         L     GR1,CTXWBP(ACT)          FETCH SYMBOL BUCKET PTR.        16780020
         BCTR  GR2,0                    DECREMENT LENGTH AND EXECUTE    16800020
         EX    GR2,MVSYMBKT             A MOVE OF SYMBOL BUCKETS.       16820020
ALVISO   TM    0(GRD),X'10'             TEST VALUE SUBSTITUTED SWITCH   16840020
         BO    MILPITAS                 BRANCH IF ON                    16860020
         SR    GRZ,GRZ                                                  16880020
         IC    GRZ,TXSPTR(GRD)          COMPUTE RELATIVE PTR TO         16900020
         SH    GRZ,RELEQL               SYMBOL IN OPERAND FIELD.        16920020
         STC   GRZ,TXSPTR(GRD)                                          16940020
MILPITAS TM    0(GRD),8                 TEST LAST SYMBOL INDICATOR      16960020
         BO    SANJOSE                  BRANCH IF  LAST SYMBOL.         16980020
         LA    GRD,6(GRD)               KICK PTR TO NEXT SYMBOL BKT.    17000020
         B     ALVISO                   AND CONTINUE.                   17020020
SANJOSE  LA    GRD,6(GRD)               KICK PTR PAST LAST SYM. BKT.    17040020
IPA      S     GRD,CTSYMP(ACT)          REDUCE POINTER TO               17060020
         ST    WR2,CFREEP(ACT)          A DISPLACEMENT AND STORE        17080020
         MVC   TXLDSP(3,WBPTR),1(WR1)   SET DISPLACEMENT IN WB          17100020
         L     WR2,0(WR1)                                               17120020
         A     WR2,OPRNLN               ADD CURRENT LENGTH TO           17140020
         ST    WR2,0(WR1)               APPROPRIATE STRING LENGTH       17160020
         L     WR2,CTLITB(SAVE,ACT)     ADD 1 TO LITERAL COUNT          17180020
         LA    WR2,1(WR2)               IN                              17200020
         ST    WR2,CTLITB(SAVE,ACT)     APPROPRIATE STRING              17220020
SETWB1   OI    TXLASI(WBPTR),X'01'      SET LITERAL ASSIGNED INDICATOR  17240020
         STC   SAVE,TXLSTG(WBPTR)       SET LITERAL STRING NUMBER       17260020
         IC    SP1,CTLEN+3(ACT)                                         17280020
         BCTR  SP1,0                                                    17300020
         STC   SP1,TXLLEN(WBPTR)                                        17320020
         TM    CTLREF(ACT),X'80'        IS LREF ON .Q                   17321026
         BZ    LTVL3                    NO                              17322025
         LA    SP1,5                    NEED 5 BYTES FOR LITERAL REF    17323025
         L     SRB,CSTROM(ACT)          TEST IF ROOM                    17324025
         BALR  SRR,SRB                  IN SYMBOL TABLE                 17325025
         DS    2H                       RETURN AFTER HERE IF ROOM       17326025
         L     GR1,CFREEP(ACT)          GET SYMBOL TABLE DISPLACEMENT   17327025
         LR    GR2,GR1                  TRANSFER IT TO WORK REGISTER    17328025
         LA    GR2,5(,GR2)              INCREASE DISPLACEMENT BY 5      17329025
         ST    GR2,CFREEP(ACT)          UPDATE S. T. DISPLACEMENT       17330025
         A     GR1,CTSYMP(ACT)          ABSOLUTE REFERENCE ADDRESS      17331025
         L     GR2,ALWRD                ABSOLUTE DEFINITION ADDRESS     17332025
         XC    0(3,GR1),0(GR1)          ZERO LAST REF CHAIN POINTER     17333025
         MVC   3(2,GR1),CTSEQN+2(ACT)   ENTER STATEMENT NUMBER          17334025
         MVC   ALWRD+1(3),3(GR2)        FORMER END OF REFERENCE CHAIN   17335025
         L     SP1,ALWRD                POINTS TO FORMER END OF CHAIN   17336025
         ST    GR1,ALWRD                STORE NEW END OF REF CHAIN      17337025
         MVC   0(3,SP1),ALWRD+1         NEW LAST LINK IN CHAIN          17338025
         MVC   3(3,GR2),ALWRD+1         DEF POINTS TO END OF CHAIN      17339025
LTVL3    MVI   LITSW,X'00'              RESET LITERAL SWITCH            17340020
         L         SP1,GRASAVE         RESTORE POINTER TO LAST CHAR     17360020
         B     CTRTRN(ACT)              BACK TO MAIN LINE               17380020
LTVL3A   TM    TXLASI(GRB),1                                            17400020
         BO    LTVL3                                                    17420020
         B     LITENT                                                   17440020
LCOMP    CLC   0(0,GRA),4(GRD)          EXECUTED COMPARE-SOURCE LITS.   17460020
MOVTEX   MVC   4(0,GRD),0(GRA)          EXECUTED MOVE-SOURCE LITS.      17480020
MVSYMBKT MVC   0(0,GRD),0(GR1)          EXEC. MOVE - SYMBOL BKTS.       17500020
         SPACE 2                                                        17520020
* TABLES, CONSTANTS, AND SWITCHES, AND TEMPORARY STORAGE.               17540020
         SPACE 1                                                        17560020
REGSAV   DC    12F'0'                   REGISTER SAVE AREA              17580020
LITPTR   DC    F'0'                     DISP FOR LITERAL POINTER        17600020
         DC    F'3'                                                     17620020
         DC    F'6'                                                     17640020
         DC    F'9'                                                     17660020
PREPTR   DC    F'0'                     SAVE AREA FOR WR2               17680020
SAVPTR   DS    F                        POINTER TO BEGINNING OF FIELD   17700020
FINADR   DS    F                                   END OF FIELD         17720020
OPRNLN   DC    F'0'                     OPERAND LENGTH                  17740020
DSMAX    DC    X'0000FFFF'              MAX LENGTH FOR DS               17760020
LOCSW    DC    X'00'                    SWITCH FOR LOCATION CNT REF     17780020
DUPFAC   DS    F                        DUPLICATION FACTOR              17800020
RSLT     DS    F                        SWITCH FOR ERRORS               17820020
LLNG     DS    F                        LENGTH                          17840020
ERRORPTR DS    F                        COLUMN NUMBER OF ERROR          17860020
TOTAL    DS    F                        LOCATION COUNTER                17880020
SAVWBP   DS    F                        TEMP STORAGE FOR CTXWBP         17900020
GRASAVE  DS        F                   SAVE AREA FOR POINTER            17920020
DEFLEN   DC    X'00'                    DEFINITION LENGTH               17940020
SIGN     DC    X'00'                    SIGN OF CONSTANT                17960020
ALWRD    DC    F'0'                     NO. BYTES OF ALIGNMENT          17980020
CON16    DC    H'16'                    MAX LENGTH FOR ZONED            18000020
BITREM   DC    H'00'                    BIT REMAINDER                   18020020
NOCON1   DC    X'00'                    NO. OF CONSTANTS - HALF WORD    18040020
NOCONS   DC    X'00'                                     - BYTE         18060020
LITSW    DC    X'00'                    SWITCH IF A LITERAL             18080020
OPCOD    DC    X'00'                    OPERATION                       18100020
DCBKT    DS    C                        DC WORKBUCKET COUNTER           18120020
*./      DELETE    SEQ1=18130025,SEQ2=18130025                          18130026
         SPACE 2                                                        18140020
* ERROR ASSIGNMENT TABLE                                                18160020
         SPACE 1                                                        18180020
ZRC01    MVI   KAPUT+1,1                DUPLICATION FACTOR ERROR.       18200020
         B     EXIT                                                     18220020
ZRC02    MVI   KAPUT+1,2                RELOCATABLE DUPLICATION FACTOR  18240020
         B     EXIT                                                     18260020
ZRC03    MVI   KAPUT+1,3                LENGTH ERROR                    18280020
         B     EXIT                                                     18300020
ZRC04    MVI   KAPUT+1,4                RELOCATABLE LENGTH              18320020
         B     EXIT                                                     18340020
ZRC05    MVI   KAPUT+1,5                S-TYPE CONSTANT IN LITERAL      18360020
         B     EXIT                                                     18380020
ZRC11    MVI   KAPUT+1,11               SCALE MODIFIER ERROR            18400020
         B     EXIT                                                     18420020
ZRC12    MVI   KAPUT+1,12               RELOCATABLE SCALE MODIFIER      18440020
         B     EXIT                                                     18460020
ZRC13    MVI   KAPUT+1,13               EXPONENT MODIFIER ERROR         18480020
         B     EXIT                                                     18500020
ZRC14    MVI   KAPUT+1,14               RELOCATABLE EXPONENT MODIFIER   18520020
         B     EXIT                                                     18540020
ZRC15    MVI   KAPUT+1,15               INVALID LITERAL USAGE.          18560020
         B     EXIT                                                     18580020
ZRC17    MVI   KAPUT+1,17               DATA ITEM TOO LARGE             18600020
         B     EXIT                                                     18620020
ZRC18    MVI   KAPUT+1,18               SYMBOL ERROR                    18640020
         B     EXIT                                                     18660020
ZRC31    MVI   KAPUT+1,31               UNKNOWN TYPE                    18680020
         B     EXIT                                                     18700020
ZRC39    MVI   KAPUT+1,39               INVALID DELIMITER               18720020
         B     EXIT                                                     18740020
ZRC87    MVI   KAPUT+1,87               NO ENDING APOSTROPHE            18746023
         B     EXIT                                                     18752023
ZRC100   MVI   KAPUT+1,100              STATEMENT COMPLEXITY EXCEEDED   18760020
         B     EXIT                                                     18780020
ZRC107   MVI   KAPUT+1,107              INVALID OPERAND                 18800020
         B     EXIT                                                     18820020
         DS    0F                                                       18840020
TRTABL   DC    X'09'                    A                               18860020
         DC    X'02'                    B                               18880020
         DC    X'00'                    C                               18900020
         DC    X'05'                                                    18920020
         DC    X'06'                    E                               18940020
         DC    X'07'                    F                               18960020
         DC    X'FF'                    G                               18980020
         DC    X'08'                    H                               19000020
         DC    X'FF'                    I                               19020020
         DC    X'FF'                    J                               19040020
         DC    X'FF'                    K                               19060020
LCONPTR  DC    X'0E'                    L                               19080023
         DC    X'FF'                    M                               19100020
         DC    X'FF'                    N                               19120020
         DC    X'FF'                    O                               19140020
         DC    X'03'                    P                               19160020
QCONPTR  DC    X'0D'                    Q                               19180023
         DC    X'FF'                    R                               19200020
         DC    X'0C'                    S                               19220020
         DC    X'FF'                    T                               19240020
         DC    X'FF'                    U                               19260020
         DC    X'0B'                    V                               19280020
         DC    X'FF'                    W                               19300020
         DC    X'01'                    X                               19320020
         DC    X'0A'                    Y                               19340020
         DC    X'04'                    Z                               19360020
         SPACE 2                                                        19380020
* TYTABL CONTAINS ONE SIX-BYTE ENTRY FOR EACH DC/DS TYPE AS FOLLOWS---  19400020
*        BYTE 1 --- 0-3  IMPLIED LENGTH CODE - SEE ILTABLE              19420023
*                   4    SOMETHING TO DO WITH ADCONS                    19440023
*                   5    BIT LENGTH LEGAL=1                             19460020
*                   6    SCALE MODIFIER LEGAL=1                         19480020
*                   7    EXPONENT MODIFIER LEGAL=1                      19500020
*        BYTE 2 --- 0-7  MINIMUM LENGTH MODIFIER VALUE                  19520020
*        BYTE 3 --- 0-7  MAXIMUM LENGTH MODIFIER VALUE MINUS ONE        19540020
*        BYTES 4-6       BRANCH ADDRESS FOR SCAN ROUTINE                19560020
         SPACE 1                                                        19580020
TYTABL   DC    X'0401FF'                CHARACTER                       19600023
         DC    AL3(CTYP)                                                19620020
         DC    X'0401FF'                HEXADECIMAL                     19640023
         DC    AL3(XTYPE)                                               19660020
         DC    X'0401FF'                BINARY                          19680023
         DC    AL3(BTYPE)                                               19700020
         DC    X'04010F'                PACKED                          19720023
         DC    AL3(PTYPE)                                               19740020
         DC    X'04010F'                ZONED                           19760023
         DC    AL3(PTYPE)                                               19780020
         DC    X'370107'                DBL. PRECISION FLT. PT.         19800023
         DC    AL3(FHEDSCAN)                                            19820020
         DC    X'270107'                SGL. PRECISION FLT. PT.         19840023
         DC    AL3(FHEDSCAN)                                            19860020
         DC    X'270107'                FULL WORD FIXED POINT           19880023
         DC    AL3(FHEDSCAN)                                            19900020
         DC    X'170107'                HALF WORD FIXED POINT           19920023
         DC    AL3(FHEDSCAN)                                            19940020
         DC    X'2C0103'                A-CON                           19960023
         DC    AL3(ATYPE)                                               19980020
         DC    X'1C0101'                Y-CON                           20000023
         DC    AL3(YTYPE)                                               20020020
         DC    X'280303'                V-CON                           20040023
         DC    AL3(VTYPE)                                               20060020
         DC    X'180201'                S-CON                           20080023
         DC    AL3(STYPE)                                               20100020
         DC    X'280103'                Q-CON                           20120023
         DC    AL3(QTYPE)                                               20140020
         DC    X'47010F'                L-CON                           20142023
         DC    AL3(FHEDSCAN)                                            20144023
         SPACE 2                                                        20146023
* ILTABLE CONTAINS A ONE-BYTE ENTRY FOR EACH DIFFERENT IMPLIED          20148023
*        LENGTH CODE FROM BYTE 1, BITS 0-3, OF TYTABL.  ITS             20150023
*        PURPOSE IS CONSERVE BITS IN TYTABLE.  THIS TABLE YIELDS        20152023
*        ACTUAL VALUE OF THE IMPLIED LENGTH.                            20154023
ILTABLE  DC    X'0102040810'            CODES 0 - 4                     20156023
         SPACE 2                                                        20158023
LNKSAV   DS    F                        DCEVAL BASE REGISTER            20160020
SAVLEN   DS    F                        LENGTH OF SYMBOL BUCKETS        20180020
RELEQL   DC    H'0'                     RELATIVE POINTER TO OPERAND     20200020
ADCSW    DC    X'00'                    ADDRESS CONSTANT SWITCH         20220020
VSCNSW   DC    X'00'                    V-TYPE CONSTANT SWITCH          20240020
EXITSW   DC    X'00'                    EXIT SWITCH FOR WHICH SCAN      20260020
ERSW     DS    X                        ERSW THRU FCONS INITIALIZED     20280020
FOPND    DS    X                         WITH ONE XC. DO NOT DISTURB.   20300020
FCONS    DS    X                                                        20320020
PZLNAT   DS    F                        PZLNAT THRU WLMOD INITIALIZED   20340020
SCMODF   DS    H                         WITH ONE XC. DO NOT DISTURB    20360020
DCTYP1   DC    X'00'                    DC TYPE - HALF WORD             20380020
DCTYP    DS    X                                - BYTE                  20400020
ALBYS    DS    X                        NO. BYTES FOR ALIGNMENT         20420020
RLSW     DS    X                        SWITCH TO UP-DATE RECORD LENGTH 20440020
LMSW     DS    X                        LENGTH MODIFIER PRESENT SWITCH  20460020
BITSW    DS    X                        BIT SWITCH                      20480020
EXMODF   DS    X                        EXPONENT RIGHT ADJUSTED         20500020
WLNAT    DS    X                        WKBKT LENGTH ATTRIBUTE          20520020
WFLAG    DS    X                              FLAG                      20540020
WTYP     DS    X                              TYPE                      20560020
WTOTL    DS    XL3                            OPERAND LENGTH            20580020
WDUP     DS    XL3                            DUP FACTOR                20600020
WNCONS   DS    X                              NUMBER OF CONSTANTS       20620020
WPTR1    DS    X                              POINTER FIRST BYTE OPERND 20640020
WEXP     DS    X                              EXPONENT                  20660020
WSCL     DS    XL2                            SCALE FACTOR              20680020
WLMOD    DS    XL2                            LENGTH MODIFIER           20700020
FHEDSW   DS    C                        SIGN, EXPONENT, POT SWITCH      20720020
         SPACE 2                                                        20740020
* THIS IS A CONNECTOR TO THE EXPRESSION EVALUATION SUBROUTINE.          20760020
         SPACE 1                                                        20780020
XPREVA   MVI   ADCSW,X'FF'              SET ADR CON SWITCH              20800020
         OI    F8YDC+1(ACT),1           SET EEVAL ADCON SWITCH          20820020
         B     XPREV2                                                   20840020
XPREV    OI    CTPDSI(ACT),X'20'        SET PREV. DEF. SYMBOL SWITCH    20860020
         CLI   0(GRA),ILPARN            TEST FOR LEFT PAREN.            20880020
         BE    XPREV1                                                   20900020
         CLI   0(GRA),I9                TEST FOR NUMERIC                20920020
         BH    XPREV2                                                   20940020
         OI    CTSDVI(ACT),X'80'        SET SELF DEFINING VALUE SWITCH  20960020
         B     XPREV2                                                   20980020
XPREV1   LA    GRA,1(GRA)               KICK TEXT POINTER               21000020
XPREV2   LR    SP1,GRA                  TEXT POINTER TO SP1 FOR EEVAL.  21020020
         ST    SP1,ERRORPTR             STORE COLUMN POINTER FOR LOGERR 21040020
         CLI   VSCNSW,X'FF'             TEST FOR SECOND SCAN            21060020
         BNE   FRSTSCN                  BRANCH IF FIRST SCAN.           21080020
         MVI   XREF+1,2                 SAVEXREF BIT FROM CENTRAL       21100020
         NC    XREF+1(1),CTXRFI(ACT)     TABLE AND THEN TURN IT OFF TO  21120020
         NI    CTXRFI(ACT),X'FD'         PREVENT DOUBLE XREF BY EEVAL.  21140020
FRSTSCN  ST    SRR,LNKSAV               SAVE DCEVAL BASE REGISTER.      21160020
         L     SRB,CEEVAL(ACT)                                          21180020
         BALR  SRR,SRB                                                  21200020
         LR    GRA,SP1                  TEXT PTR FROM EEVAL TO GRA.     21220020
         BALR  GR1,0                    SAVE RIGHTMOST 32 BITS          21240020
         ST    GR1,RSLT                  OF PSW IN RSLT.                21260020
         NI    F8YDC+1(ACT),X'FE'       RESET EEVAL ADCON SWITCH        21280020
         CLI   0(GRA),IRPARN            TEST FOR RIGHT PAREN.           21300020
         BNE   XPREV3                                                   21320020
         CLI   ADCSW,X'FF'              TEST ADDR CON SWITCH            21340020
         BE    XPREV3                                                   21360020
         LA    GRA,1(GRA)               KICK TEXT POINTER               21380020
XPREV3   L     SRR,LNKSAV               LOAD RETURN REGISTER            21400020
         MVI   ADCSW,X'00'                                              21420020
         CLI   LITSW,X'FF'              TEST FOR LITERAL                21440020
         BNE   XPREV3A                  NO,BRANCH                       21460020
         MVC   CTXWBP(4,ACT),SAVWBP     YES, RESTORE SYMBOL BKT PTR.    21480020
XPREV3A  CLI   VSCNSW,X'FF'             TEST FOR SECOND SCAN            21500020
         BCR   7,SRR                    RETURN NOW IF FIRST SCAN        21520020
XREF     OI    CTXRFI(ACT),0            RESTORE XREF BIT IN CENT. TBL.  21540020
         BR    SRR                      RETURN FROM WHENCE THOU CAME    21560020
WR1      EQU   GRC                      6                               21580020
WR2      EQU   GRD                      7                               21600020
EVENR    EQU   GRX                      14                              21620020
ODDR     EQU   GRY                      15                              21640020
R1       EQU   WR1                                                      21660020
SAVE     EQU   GRX                      14                              21680020
WBPTR    EQU   GRB                      5                               21700020
DS       EQU   X'27'                    DS OP-CODE                      21720020
GR14     EQU   14                                                       21740020
YTYPE    EQU   ATYPE                                                    21760020
         LTORG                                                          21780020
         END   DCEVL                                                    21800020
./ ADD NAME=ASMGF7E
F7E     TITLE      'ASMG F7  EXTERNAL SYMBOL DICTIONARY PROCESSOR'      00020021
         ISEQ  73,78                                                    00040021
ASMGF7E  CSECT                                                          00060020
         PRINT DATA,NOGEN                                               00080020
         FDIMEN                                                         00100020
         USING *,FRB                                                    00120020
 SPACE                                                                  00140020
*TITLE- ASMGF7E  EXTERNAL SYMBOL DICTIONARY PROCESSOR                 * 00160020
*FUNCTION/OPERATION-                                                  * 00180020
*   GENERATE EXTERNAL SYMBOL DICTIONARY ENTRIES                       * 00200020
*   UPDATE THE LOCATION COUNTER IN ESD ENTRIES                        * 00220020
*   GENERATE SYMBOL TABLE ENTRIES FOR NAMES IN THE NAME FIELD OF      * 00240020
*    STATEMENTS HANDLED BY ASMGF7E                                    * 00260021
*   SET AND MAINTAIN THE FOLLOWING ASSEMBLER CONTROL TABLE SWITCHES-  * 00280020
*        CBDNO...BLANK DSECT ESD NUMBER                               * 00300020
*        CBDSW...BLANK DSECT ID NUMBER                                * 00320020
*        CCMNO...COMMON ESD NUMBER                                    * 00340020
*        CESDID..CURRENT ESD ID NUMBER                                * 00360020
*        CESDNO..CURRENT ESD NUMBER                                   * 00380020
*        CNOESD..NUMBER OF ESD ENTRIES                                * 00400020
*        CPCNO...UNINITIATED PRIVATE CODE ESD NUMBER                  * 00420020
*        CTPCSW..PRIVATE CODE SWITCH                                  * 00440020
*        CSTVAL..VALUE FROM START CARD                                * 00460020
*        CSGCTR..ESD RESIDENT SEGMENT COUNTER                         * 00480020
*        CLASID..LAST ESD ID NUMBER                                   * 00500020
*        CNTDID..NEXT DSECT ID NUMBER                                 * 00520020
*        CTCMSW..COMMON SWITCH                                        * 00540020
*        CTESDP..ESD TABLE POINTER (FIRST BYTE)                       * 00560020
*        CTESRN..FIRST ESD NUMBER                                     * 00580020
*        CTESRP..ESD SEGMENT RESIDENCE TABLE ENTRY POINTER            * 00600020
*        CTFSTN..FIRST CSECT NAME                                     * 00620020
*        CTLOC...CURRENT LOCATION COUNTER                             * 00640020
*        CTYPE...CURRENT CSECT TYPE                                   * 00660020
*   DTECT AND LOG THE FOLLOWING ERRORS                                * 00680020
*        INVALID ORIGIN                                               * 00700020
*        EXTERNAL NAME ERROR                                          * 00720020
*        SYMBOL NOT PREVIOUSLY DEFINED                                * 00740020
*        ESD TABLE OVERFLOW                                           * 00760020
*        RELOCATABILITY ERROR                                         * 00780020
*        ALIGNMENT ERROR                                              * 00800020
*        ENTRY ERROR                                                  * 00820020
*        INVALID DELIMITER                                            * 00840020
*        ILLEGAL START CARD                                           * 00860020
*        ENTRY TABLE OVERFLOW                                         * 00880020
*ENTRY POINTS-                                                        * 00900020
*        UPC...PROCESS UNINITIATED PRIVATE CODE                       * 00920020
*        COM,START,CSECT,DSECT...PROCESS STATEMENTS OF SAME NAMES     * 00940020
*        ENTRY,EXTRN,WXTRN,ORG...PROCESS STATEMENTS OF SAME NAMES     * 00960025
*        QUIT...                                                      * 00980020
*        DXD...                                                       * 01000020
*        VCON...PROCESS VCON'S OR QCON'S                              * 01020020
*INPUT-  NONE                                                         * 01040020
*OUTPUT- NONE                                                         * 01060020
*   CALLING SEQUENCE-                                                 * 01080020
*        L     GRX,NAME(ACT)       NAME(ACT) CONTAINS DESIRED ADDRESS * 01100020
*        B     CTLNK2(ACT)         BRANCH TO LINKAGE CODE WITHIN ACT  * 01120020
*     CTLNK2(ACT) CONTAINS-                                           * 01140020
*        STM   GRA,GRD,SAVER                                          * 01160020
*        L     FRB,CBRNDA(ACT)     CBRNDA(ACT)CONTAINS ASMGF7E ADDRESS* 01180020
*        B     GRX                                                    * 01200020
*EXTERNAL ROUTINES-                                                   * 01220020
*  ASMGF7L (LOGERR)  RECORD ERRORS DETECTED                           * 01240020
*  ASMGF7V (EEVAL) OPERAND EVALUATION                                 * 01260020
*  ASMGF7I (STPUTR,STGETR,CRDESD,PUTXRF) PERFORM I/O FUNCTIONS        * 01280020
*EXIT-                                                                * 01300020
*   NORMAL-                                                           * 01320020
*        B     CTRTRN(ACT)         BRANCH TO RETURN LINKAGE OF ACT    * 01340020
*     CTRTRN(ACT) CONTAINS                                            * 01360020
*        LM    GRA,GRD,SAVER                                          * 01380020
*        BR    CRR                 RETURN TO CALLING PROGRAM          * 01400020
*   ERRORS-                                                           * 01420020
*        SAME SEQUENCE AS NORMAL RETURN                               * 01440020
*TABLES/WORK AREAS-                                                   * 01460020
*   ESD ENTRY WORK AREA...16 BYTES, STARTING AT LOCATION 'TYPE'       * 01480020
*NOTES-                                                               * 01500020
*                  THE  EXTERNAL SYMBOL DICTIONARY (ESD)  IS            01520020
*              SEGMENTED INTO BLOCKS OF 260 BYTES EACH, FULL            01540020
*              WORD ALIGNED.  THE FIRST BYTE OF EACH SEGMENT            01560020
*              IS SET TO X'03' TO IDENTIFY  THE BLOCK TO THE            01580020
*              I/O ROUTINES. 16 ITEMS,WORD-ALIGNED,OF LENGTH            01600020
*              16 BYTES EACH FILL THE SEGMENT,  BEGINNING AT            01620020
*              THE LAST (HIGHEST NUMBERED) BYTE.                        01640020
  SPACE 2                                                               01660020
*                   THE FORMAT OF EACH ITEM IS AS FOLLOWS               01680020
 SPACE                                                                  01700020
*             ************************************************          01720020
*             *                      *                       *          01740020
*             * ATTRIBUTES (8 BYTES) * NAME (8 BYTES,PADDED) *          01760020
*             *                      *                       *          01780020
*             ************************************************          01800020
 EJECT                                                                  01820020
*              THE ATTRIBUTE FIELD FORMAT IS ONE OF THE FOLLOWING       01840020
 SPACE                                                                  01860020
*                   CONTROL OR DUMMY SECTION (PC,CM,SD OR DS)           01880020
*                                                                       01900020
*       *********************************************************       01920020
*       *      *                    *      *                    *       01940020
*       * TYPE * CURRENT LOC. CTR.  *  ID  * HIGHEST LOC. CTR.  *       01960020
*       *      *                    *      *                    *       01980020
*       *********************************************************       02000020
*                                                                       02020020
*                   THE LOCATION COUNTERS ARE UPDATED BY THE            02040020
*              ROUTINES 'ORG' OR 'ESFIN' WHENEVER A CSECT,              02060020
*              DSECT,COM OR ORG INSTRUCTION IS ENCOUNTERED              02080020
*              IN ASSIGNMENT MODE.                                      02100020
  SPACE                                                                 02120020
*                   EXTERNAL SYMBOL (ER, WX OR VC)                      02140025
*                                                                       02160020
*       *********************************************************       02180020
*       *      *                    *      *                    *       02200020
*       * TYPE *        ZERO        *  ID  *        ZERO        *       02220020
*       *      *                    *      *                    *       02240020
*       *********************************************************       02260020
 SPACE                                                                  02280020
*                   ENTRY LABEL DEFINITION (LD)                         02300020
*                                                                       02320020
*       *********************************************************       02340020
*       *      *                    *      *                    *       02360020
*       * TYPE *      ADDRESS       * FLAG *    ZERO     * LDID *       02380020
*       *      *                    *      *                    *       02400020
*       *********************************************************       02420020
*                                                                       02440020
*                   THE FLAG IS SET TO ONE TO INDICATE THAT             02460020
*              THE ITEM IS COMPLETE. THE ADDRESS AND LDID               02480020
*              IDENTIFY THE RELATIVE LOCATION AND ESDID OF              02500020
*              THE SYMBOL REFERENCED                                    02520020
 SPACE                                                                  02540020
*                   EXTERNAL DUMMY SECTION (XD)                         02560020
*                                                                       02580020
*       *********************************************************       02600020
*       *      *             *      *      *                    *       02620020
*       * TYPE *    ESDNO    *ALIGN *  ID  *       LENGTH       *       02640020
*       *      *             *      *      *                    *       02660020
*       *********************************************************       02680020
*                                                                       02700020
*                   THE ESDNO IS USED TO POINT TO THE  DSECT            02720020
*              REFERENCED BY THE CORRESPONDING Q-CON.  IT IS            02740020
*              ZERO,AND THE LENGTH FIELD SET, WHEN THE ITEM             02760020
*              WAS CREATED BY A DXD INSTRUCTION. ALIGN GIVES            02780020
*              THE ALIGNMENT.                                           02800020
         SPACE 2                                                        02820020
*              PHASE 7 MAIN LINE PASSES CONTROL TO ONE OF THESE       * 02840020
*        ENTRY POINTS ON ANY STATEMENT WHICH AFFECTS THE EXTERNAL     * 02860020
*        SYMBOL DICTIONARY.  ITEMS ARE ENTERED IN THE DICTIONARY,     * 02880020
*        UPDATED WHEN NECESSARY,AND SYMBOL TABLE ENTRIES MADE.        * 02900020
*                                                                     * 02920020
 SPACE                                                                  02940020
         ENTRY UPC,COM,START,CSECT,DSECT,DXD                            02960020
         ENTRY ENTRY,EXTRN,ORG,QUIT,VCON                                02980020
         EJECT                                                          03000020
*********************************************************************** 03020020
***                 UNINITIATED PRIVATE CODE ROUTINE                *** 03040020
*    THE UNINITIATED PRIVATE CODE ROUTINE IS CALLED WHENEVER AN EQU,  * 03060020
*  ORG, LTORG, LITR, DC, DS, CCW, CNOP, OR MACHINE OP IS ENCOUNTERED  * 03080020
*  BEFORE THE FIRST CSECT, START, COMMON, OR DSECT.                   * 03100020
*                                                                     * 03120020
UPC      MVC   NAME(8),IBL2F            BLANK OUT NAME                  03140020
         BAL   LEV3,FSTNR               PROCESS IF FIRST ONE            03160020
         MVI   TYPE,PCCON               SET TYPE = PC                   03180020
         SR    ACC,ACC                                                  03200020
         ST    ACC,CTLOC(ACT)           SET CURRENT LOC CTR = 0         03220020
         BAL   LEV2,SETESD              PUT IN ESD                      03240020
         MVI   CTYPE(ACT),PCCON         SET TYPE = PC                   03260020
         MVC   CTPCSW(1,ACT),CESDID(ACT)    PC SWITCH AND FIRST CONTROL 03280020
         MVC   CPCNO(2,ACT),CESDNO(ACT)                                 03300020
         STM   GRA,CRR,SAVEREG          SAVE REGISTERS                  03302025
         L     GRB,CTEXTP(,ACT)         SAVE TEXT RECORD POINTER        03304025
         LA    GRA,TEXTREC              POINT TO SIMULATED CSECT        03306025
         ST    GRA,CTEXTP(,ACT)         AND TELL ACT                    03308025
         L     FRB,CTESTR(,ACT)         ADDRESS FOR TESTRAN ENTRY       03310025
         BALR  CRR,FRB                  MAKE THE TESTRAN ENTRY          03312025
         ST    GRB,CTEXTP(,ACT)         RESTORE TEXT RECORD POINTER     03314025
         LM    GRA,CRR,SAVEREG          RESTORE REGISTERS               03316025
         B     CTRTRN(ACT)              EXIT                            03320020
*                                                                     * 03340020
SAVEREG  DC    4F'0'                    REGISTER SAVE AREA              03345025
TEXTREC  DC    X'000000801B00000000'    SIMULATED CSECT RECORD          03350025
*********************************************************************** 03360020
 SPACE 2                                                                03380020
*********************************************************************** 03400020
***                          COM ROUTINE                            *** 03420020
*                                                                     * 03440020
COM      MVI    TYPE,CMCON              SET TYPE = CM                   03460020
         MVI       CTYPE(ACT),CMCON                                     03462023
         BAL       LEV3,GETNAME        IS IT NAMED COM ?                03464023
         B         COMBLANK            NO                               03466023
         L         SRR,ADLIST1(,ACT)   YES, TEST EXTEN OPTION           03468023
         TM        L1PBYT1(SRR),X'04'  WAS EXTEN SPECIFIED .Q           03470026
         BO        DSECTCOM            ON - TREAT LIKE DSECT            03472023
         BAL       SRR,LOGERR          OFF - ILLEGAL NAME               03474023
         DC        AL2(ERR15)                                           03476023
         B         DSECTCOM            PROCESS ANYWAY                   03478023
COMBLANK BAL    LEV1,ESFIN              FINISH PREVIOUS SECTION IF ANY  03480023
         MVC   CTLOC(4,ACT),CTZERO(ACT) SET CTLOC = 0                   03500020
*./      DELETE    SEQ1=03520020,SEQ2=03520020                          03520023
         CLI   CTCMSW(ACT),0            HAS COM BEEN PREVIOUSLY STARTED 03540020
         BC    7,CMCONT                   YES                           03560020
 SPACE                                                                  03580020
         BAL   LEV2,SETESD                NO - SET ESD                  03600020
*./      DELETE    SEQ1=03620020,SEQ2=03620020                          03620023
CMCNTR   MVC   CTCMSW(1,ACT),CESDID(ACT)   COM SWITCH                   03640023
         MVC   CCMNO(2,ACT),CESDNO(ACT)     COM ESD NO                  03660020
         B     SETWBK                   CREATE WORKBUCKET               03680020
 SPACE 2                                                                03700020
CMCONT   LH    SP2,CCMNO(ACT)                                           03720020
         STH   SP2,CESDNO(ACT)          SET CURR ESD NO FOR CM          03740020
         BAL   LEV2,PNTESD              POINT TO PREVIOUS ESD ITEM FOR  03760020
         MVC   ESDID(1,ACT),TID(SP1)      COM                           03780020
         MVC   CESDID(1,ACT),TID(SP1)   SET ESDID -ASSIGNED AND CURRENT 03800020
         MVC   CTLOC+1(3,ACT),TADDR(SP1) SET CURR LOC CTR               03820020
         B     CMCNTR                   CONTINUE WITH ESD SET           03840020
*                                                                     * 03860020
*********************************************************************** 03880020
         EJECT                                                          03900020
*********************************************************************** 03920020
***                            START ROUTINE                        *** 03940020
*                                                                     * 03960020
*                                                                     * 03980020
START    CLI   CESDID(ACT),0            IS THIS THE 1ST CONTROL SECTION 04000020
         BE    SRT1ST                   YES, CONTINUE                   04020020
 SPACE                                                                  04040020
SRTERR   BAL   SRR,LOGERR               NO, ERROR - ILLEGAL START CARD  04060020
         DC    AL2(ERR01)                                               04080020
         B     CSECT                    TREAT AS CSECT                  04100020
 SPACE 2                                                                04120020
SRT1ST   L     SP1,CTXOFP(ACT)            YES - IS THE OPERAND PRESENT  04140020
         BAL   LEV3,ISOPF               IS THERE AN OPERAND FIELD       04160020
         BC    8,CSECT                  NO, TREAT AS CSECT              04180020
 SPACE                                                                  04200020
         LA    SP1,1(SP1)                   YES - POINT TO OPERAND      04220020
         ST    SP1,ERRPTR               SAVE OPERAND COLUMN POINTER     04240020
         OI    CTSDVI(ACT),ONSDVI        AND SET SELF-DEFINING VALUE    04260020
         L     SRB,CEEVAL(ACT)            INDICATOR ON                  04280020
         BALR  SRR,SRB                  EVALUATE EXPRESSION             04300020
         TM    CTSDVI(ACT),ONSDVI       WAS SELF-DEFINING VALUE FOUND   04320020
         BZ    SRTABS                   YES, CONTINUE                   04340020
 SPACE                                                                  04360020
         BAL   SRR,ELOGER               NO, ERROR - RELOCATION ERROR    04380020
         DC    AL2(ERR03)                                               04400020
         B     CSECT                    AND TREAT AS CSECT              04420020
 SPACE 2                                                                04440020
SRTABS   CLI   0(SP1),IBLANK            IS NEXT CHARACTER A BLANK       04460020
         BE    SRTSET                   YES, CONTINUE                   04480020
 SPACE                                                                  04500020
         BAL   SRR,LOGERP               NO, ERROR - INVALID DELIMITOR   04520020
         DC    AL2(ERR02)                                               04540020
         B     CSECT                    AND TREAT AS CSECT              04560020
 SPACE                                                                  04580020
SRTSET   ST    SP2,CSTVAL(ACT)            YES - SET START VALUE         04600020
         TM    CSTVAL+3(ACT),MOD8       IS START VALUE = 0 MOD 8        04620020
         BZ    CSECT                      YES - GO TO CSECT             04640020
 SPACE                                                                  04660020
         LA    SP2,7(SP2)                 NO - SET START VALUE TO NEXT  04680020
         N     SP2,=F'-8'                   MULTIPLE OF 8               04700020
         ST    SP2,CSTVAL(ACT)                                          04720020
         BAL   SRR,ELOGER               LOG IT AS ERROR - ALIGNMENT     04740020
         DC    AL2(ERR04)                                               04760020
*        B     CSECT                    AND GO ON                       04780020
*                                                                     * 04800020
*********************************************************************** 04820020
         EJECT                                                 MMM      04840020
*********************************************************************** 04860020
***                          CSECT ROUTINE                          *** 04880020
CSECT    MVI   TYPE,SDCON               SET TYPE = SD                   04900020
         MVI   CTYPE(ACT),SDCON                                         04920020
         BAL   LEV1,ESFIN               FINISH PREVIOUS SECTION IF ANY  04940020
 SPACE                                                                  04960020
         MVC   CTLOC(4,ACT),CTZERO(ACT) SET CURRENT LOC. CTR TO ZERO    04980020
         BAL   LEV3,GETNAME             GET THE NAME                    05000020
         NOP   CSP3                     NAME BLANK                      05020020
 SPACE                                                                  05040020
CSP3     BAL   LEV3,FSTNR               SET FIRST ESDNO IF FIRST TIME   05060020
         L     ACC,CTXABP(ACT)          IS WORKBUCKET FILLED            05080020
         CLI   WBKSW(ACC),FILLED                                        05100020
         BZ    CWBKFL                   YES, SKIP                       05120020
 SPACE                                                                  05140020
         CLC   NAME(8),IBL2F            NO - IS NAME BLANK              05160020
         BZ    CSPC                         YES - PRIVATE CODE          05180020
 SPACE                                                                  05200020
         BAL   LEV3,STGET               GET SYMBOL                      05220020
         LA    LEV2,SETWBK              IF ABSENT,                      05240020
         BZ    SETESD                    SET ESD AND EXIT               05260020
 SPACE                                                                  05280020
         MVC   TEMPH(2),0(SP1)          SYMBOL FOUND IN ST - CHECK TYPE 05300020
         B     FNDTOG                                                   05320020
 SPACE                                                                  05340020
CWBKFL   MVC   TEMPH(2),WBKNO(ACC)      IF WKBKT IS FULL                05360020
FNDTOG   L     SP2,TEMPF                  FIND ADJ CODE AND             05380020
         SRL   SP2,7                    ESDNO                           05400020
         NI    ADJ,SDMSK                                                05420020
         CLI   ADJ,SDBITS               IS ADJ CODE = SD                05440020
         BNE   FNDERR                   NO, LOG ERROR                   05460020
 SPACE 2                                                                05480020
FNDENT   STH   SP2,CESDNO(ACT)          SET CURR ESD NO                 05500020
         BAL   LEV2,PNTESD                POINT TO ESD                  05520020
         IC    ACC,TID(SP1)             GET ID                          05540020
         STC   ACC,ESDID(ACT)           SET ASSIGNED AND                05560020
         STC   ACC,CESDID(ACT)          CURRENT ESDID                   05580020
         MVC   CTLOC+1(3,ACT),TADDR(SP1)    AND CURR LOC CTR            05600020
         BAL   LEV3,XREF1               REFERENCE                       05620020
         B     SETWBK                   SET WKBKT AND EXIT              05640020
 EJECT                                                                  05660020
FNDERR   BAL   SRR,LOGERR               LOG ERROR - EXTERNAL NAME       05680020
         DC    AL2(ERR05)                                               05700020
         BAL   LEV3,XREF2               CROSS REFERANCE - DUPLICATE     05720020
         MVC   NAME(8),IBL2F            BLANK OUT NAME                  05740020
CSPC     MVI   TYPE,PCCON               SET TYPE = PC                   05760020
         MVI   CTYPE(ACT),PCCON                                         05780020
         LH    SP2,CPCNO(ACT)           IS PC INITIATED                 05800020
         LTR   SP2,SP2                                                  05820020
         BNZ   FNDENT                   YES, GO TO FNDENT               05840020
         BAL   LEV2,SETESD              NO, SET ESD                     05860020
         MVC   CPCNO(2,ACT),CESDNO(ACT)  AND PCNO                       05880020
*                                                                     * 05900020
*                                                                     * 05920020
SETWBK   L     ACC,CTXABP(ACT)          GET PLACE TO PUT WORK BUCKET    05940020
         MVC   WBKTYP(1,ACC),TYPE       SET TYPE IN WKBKT               05960020
         MVC   WBKID(1,ACC),ESDID(ACT)  SET ID IN WKBKT                 05980020
         MVI   WBKSW(ACC),FILLED        SET SWITCH IN WKBKT = FILLED    06000020
         B     CTRTRN(ACT)              EXIT                            06020020
*                                                                     * 06040020
LOGERR   SR    SP1,SP1                  LOG ERROR                       06060020
LOGERP   L     SRB,CLOGER(ACT)                                          06080020
         BR    SRB                      AND QUIT                        06100020
 SPACE                                                                  06120020
*********************************************************************** 06140020
         EJECT                                                          06160020
*********************************************************************** 06180020
***                          DSECT ROUTINE  (ALSO NAMED COMMON)     *** 06200023
*                                                                     * 06220020
DSECT    MVI   TYPE,DSCON               SET TYPE = DS                   06240020
         MVI   CTYPE(ACT),DSCON                                         06260020
DSECTCOM BAL   LEV1,ESFIN               FINISH PREVIOUS SECTION IF ANY  06280023
         MVC   CTLOC(4,ACT),CTZERO(ACT) SET CURRENT LOCATION CTR = 0    06300020
 SPACE                                                                  06320020
         BAL   LEV3,GETNAME             GET NAME                        06340020
         B     DSBLNK                   NO NAME                         06360020
 SPACE                                                                  06380020
         L     SP1,CTXABP(ACT)                                          06400020
         CLI   WBKSW(SP1),FILLED         IF WORKBUCKET IS FULL          06420020
         BE    DSWBKFL                  YES, GO TO DSWBKFL              06440020
 SPACE                                                                  06460020
         BAL   LEV3,STGET               GET SYMBOL                      06480020
          LA   LEV2,SETWBK              SET ESD  AND EXIT               06500020
          BZ   SETESD                                                   06520020
 SPACE                                                                  06540020
         MVC   TEMPH(2),0(SP1)          SYMBOL WAS FOUND                06560020
         B     DSFNDT                                                   06580020
 SPACE                                                                  06600020
DSWBKFL  MVC   TEMPH(2),WBKNO(SP1)                                      06620020
DSFNDT   L     SP2,TEMPF                  FIND ADJ CODE AND             06640020
         SRA   SP2,7                    ESDNO                           06660020
         TM    ADJ,SDMSK                                                06680020
         BO    DSERR                    ERROR IF NAME TYPE              06700020
         STH   SP2,CESDNO(ACT)             SET CURR ESDNO               06720020
         BAL   LEV2,PNTESD                                              06740020
         CLC       TTYPE(1,SP1),TYPE   SAME TYPE AS BEFORE ?            06760023
         BNE   DSERR                                                    06780020
 SPACE                                                                  06800020
         MVC   CTLOC+1(3,ACT),TADDR(SP1)  SET CURRENT LOCATION COUNTER  06820020
         IC    ACC,TID(SP1)                                             06840020
         STC   ACC,ESDID(ACT)           SET ASSIGNED AND                06860020
         STC   ACC,CESDID(ACT)          CURRENT ESDID                   06880020
         BAL   LEV3,XREF1               REFERENCE                       06900020
          B    SETWBK                   EXIT                            06920020
 EJECT                                                                  06940020
DSERR    BAL   SRR,LOGERR                                               06960020
         DC    AL2(ERR05)                                               06980020
         BAL   LEV3,XREF2               DUPLICATE                       07000020
         MVC   NAME(8),IBL2F                                            07020020
DSBLNK   CLI   CBDSW(ACT),0             IS BLANK DSECT SWITCH = 0       07040020
         LA    LEV2,BDTYP               YES - SET ESD AND GO TO BDTYP   07060020
         BZ    SETESD                                                   07080020
 SPACE                                                                  07100020
         LH    SP2,CBDNO(ACT)           NO                              07120020
         STH   SP2,CESDNO(ACT)          SET CURRENT ESDNO               07140020
         BAL   LEV2,PNTESD              POINT TO ESD                    07160020
         MVC   CESDID(1,ACT),TID(SP1)     SET CURRENT ESDID             07180020
         MVC   ESDID(1,ACT),TID(SP1)      SET ESDID                     07200020
         MVC   CTLOC+1(3,ACT),TADDR(SP1)  SET CURRENT LOC CTR           07220020
BDTYP    MVC   CBDNO(2,ACT),CESDNO(ACT) SET CBDNO,CBDSW                 07240020
         MVC   CBDSW(1,ACT),CESDID(ACT)                                 07260020
          B    SETWBK                   EXIT                            07280020
*                                                                     * 07300020
*********************************************************************** 07320020
         EJECT                                                          07340020
*********************************************************************** 07360020
*                                                                     * 07380020
DXD      MVI   TYPE,DXCON               SET TYPE = DX                   07400020
         BAL   LEV3,GETNAME             GET THE NAME                    07420020
         B     CTRTRN(ACT)              NO NAME, EXIT                   07440020
 SPACE                                                                  07460020
         BAL   LEV3,STGET               GET SYMBOL                      07480020
         BNZ   DXERR                    MULTIPLE DEFINITION             07500020
 SPACE                                                                  07520020
         L     TXPTR,CTXABP(ACT)        GET ALIGNMENT                   07540020
         SR    ALN,ALN                   FROM TEXT                      07560020
         IC    ALN,ALNBYTE(TXPTR)        WORKBUCKET                     07580020
         N     ALN,=F'15'               AND SET ON                      07600020
         SRL   ALN,1                                                    07620020
         STC   ALN,ALIGN                ON                              07640020
         L     LTH,CTLOC(ACT)                                           07660020
         CLC   CTLOC+1(3,ACT),TXLOC(TXPTR)   IF ZERO LENGTH             07680020
         BE    CTRTRN(ACT)              TREAT AS COMMENT                07700020
 SPACE                                                                  07720020
         SR    LTH,ALN                  COMPUTE LENGTH                  07740020
         BCTR  LTH,0                                                    07760020
         ST    LTH,ALTH-1                                               07780020
         BAL   LEV2,SETESD              SET ESD                         07800020
         B     CTRTRN(ACT)              EXIT                            07820020
 SPACE 2                                                                07840020
DXERR    BAL   LEV3,XREF2               DUPLICATE                       07860020
         BAL   SRR,LOGERR               LOG ERROR                       07880020
         DC    AL2(ERR05)                                               07900020
         B     CTRTRN(ACT)              EXIT                            07920020
 SPACE                                                                  07940020
*********************************************************************** 07960020
         EJECT                                                          07980020
*********************************************************************** 08000020
***                        ENTRY ROUTINE                            *** 08020020
*                                                                     * 08040020
ENTRY    L     WBP,CTXWBP(ACT)          GET ADDRESS OF WKBKT            08060020
         BALR  ELOOPR,0                 LOOP REGISTER                   08080020
         LH    ECT,ECTR                 COUNT DOWN TABLE                08100020
         BCT   ECT,ECTROK               REDUCE BY ONE                   08120020
 SPACE                                                                  08140020
         BAL   LEV3,ENAMGET             SET COLUMN POINTER              08160020
         BAL   SRR,ELOGER               NONE LEFT, LOG ERROR            08180020
         DC    AL2(ERR08)                                               08200020
         B     CTRTRN(ACT)              END PROCESSING STATEMENT        08220020
 SPACE                                                                  08240020
ECTROK   STH   ECT,ECTR                 STORE UDDATED COUNTER           08260020
         TM    EWBCMP(WBP),ECMPLT       IS WKBKT COMPLETE               08280020
         BO    ENTEXX                   YES, EXIT                       08300020
 SPACE                                                                  08320020
         BAL   LEV3,ENAMGET             GET NAME AND SYMBOL TABLE ITEM  08340020
         MVI   TYPE,LDCON               SET TYPE = LD                   08360020
         BC    7,ENTFND                 BRANCH IF FOUND                 08380020
 SPACE                                                                  08400020
         TM   EWBKSW(WBP),FULL          TEST WORKBUCKET SWITCH          08420020
         BO    ENTFUL                   IF ON - USE WORKBUCKET          08440020
 SPACE                                                                  08460020
         BAL   LEV3,ESCRBL               OFF - CREATE BLANK ESD ITEM    08480020
         MVC   EWBKNO(2,WBP),CNOESD(ACT) SET ESDNO IN BUCKET            08500020
         B     ENTEXX                   SEE IF MORE                     08520020
 SPACE 2                                                                08540020
ENTFUL   MVI   AID,1                    SET ID                          08560020
         MVC   ADDR,EWBKVL(WBP)         MOVE IN ADDRESS                 08580020
         MVC   ALTH+2(1),EWBKID(WBP)    AND LENGTH                      08600020
         BAL   LEV3,ESCRBL              CREATE COMPLETE ESD ITEM        08620020
         B     ENTEX                                                    08640020
 SPACE 2                                                                08660020
ENTFND   TM    STADJ(SP1),ENTCMB        IF ENTRY COMPLETE,ER-O-         08680020
         BO    ENTERR                                                   08700020
 SPACE                                                                  08720020
         BAL   LEV3,ENTESTS                                             08740020
         MVC   ADDR,SYMVAL(SP1)                                         08760020
         MVI   AID,1                                                    08780020
         MVC   ALTH+2(1),STID(SP1)                                      08800020
         OI    STADJ(SP1),ENTCMB                                        08820020
         BAL   LEV3,ESCRBL              CREATE COMPLETE ESD ITEM        08840020
         B     ENTEX                    SET WKBKT COMPLETE & SEE IF MOR 08860020
 SPACE 2                                                                08880020
ENTERR   BAL   SRR,ELOGER               LOG ERROR - ENTRY ERROR         08900020
         DC    AL2(ERR06)                                               08920020
         B     ENTEX                    AND SEE IF MORE                 08940020
 EJECT                                                                  08960020
ENTESTS  CLI   STID(SP1),0              IS SYMBOL ABSOLUTE              08980020
         BE    ENTABS                   YES, LOG ERROR                  09000020
         TM    STADJ(SP1),DSOCM           NO - WAS IT DEFINED IN DS,CM  09020020
         BO    ENTERR                       YES - ERROR                 09040020
         TM    STADJ(SP1),SDBIT               NO - IS IT SECTION DEF    09060020
         BZ    ENTEX                    YES, ENTER WKBKT AND SEE IF MOR 09080020
         BM    ENTERR                   EXTRN OR DSECT, LOG ERROR       09100020
 SPACE                                                                  09120020
         MVC   TEMPH,EWBKNO(WBP)        GET ESDNO                       09140020
         LH    SP2,TEMPH                                                09160020
         LTR   SP2,SP2                                                  09180020
         BCR   8,LEV3                   RETURN IF ESDNO NOT SET         09200020
 SPACE                                                                  09220020
         LR    GRA,SP1                  FETCH INCOMPLETE ESD ITEM       09240020
         BAL   LEV2,PNTESD              POINT TO ESD                    09260020
         MVC   TADDR(3,SP1),SYMVAL(GRA) COMPLETE IT                     09280020
         MVC   TLTH+2(1,SP1),STID(GRA)                                  09300020
         MVI   TID(SP1),1                                               09320020
ENTEX    L     WBP,CTXWBP(ACT)                                          09340020
         OI    EWBCMP(WBP),ECMPLT       SET WORKBUCKET COMPLETE         09360020
EFULL    OI    EWBKSW(WBP),FULL         SET WORKBUCKET SWITCH           09380020
ENTEXX   TM   EWBKSW(WBP),LASTOP                                        09400020
         BO    CTRTRN(ACT)              EXIT IF LAST OPERAND            09420020
 SPACE                                                                  09440020
         LA    WBP,WBKLEN(WBP)          POINT TO NEXT WORKBUCKET        09460020
         ST    WBP,CTXWBP(ACT)                                          09480020
         BR    ELOOPR                   AND LOOP FOR NEXT OPERAND       09500020
 SPACE                                                                  09520020
ENTABS   BAL   SRR,ELOGER               LOG ERROR - RELOCATION          09540020
         DC    AL2(ERR13)                                               09560020
         B     ENTEX                    AND SEE IF MORE                 09580020
*                                                                     * 09600020
*********************************************************************** 09620020
         EJECT                                                          09640020
*********************************************************************** 09660020
***                      EXTRN/WXTRN ROUTINE                        *** 09680025
*                                                                     * 09700020
WXTRN    EQU   *                                                        09710025
EXTRN    L     WBP,CTXWBP(ACT)          SET WORK BUCKET POINTER         09720025
         BALR  ELOOPR,0                 LOOP REGISTER                   09740020
 SPACE                                                                  09760020
         MVI   TYPE,ERCON               SET TYPE = ER                   09780020
         TM    CTSWXT(ACT),SETWX        EXTRN OR WXTRN .Q               09790025
         BZ    EXTRN2                   SKIP IF EXTRN                   09795025
         MVI   TYPE,WXCONA              SET TYPE = WX                   09800025
EXTRN2   TM    EWBKSW(WBP),FULL         IS WKBKT FULL .Q                09805025
         BO    EFULL                    YES, GO SEE IF MORE             09820020
 SPACE                                                                  09840020
         BAL   LEV3,ENAMGET             GET NAME AND SYMBOL TABLE ITEM  09860020
         BC    7,EXERR                   ERROR IF IN SYBBOL TABLE       09880020
 SPACE                                                                  09900020
         OI    VMATCH,X'F0'                                             09920020
         BAL   LEV2,SCHESD              WAS ESD ITEM FOUND              09940020
         LA    LEV2,EFULL                IF NOT FOUND,                  09960020
         BNZ   SETESD                    GO TO SETESD AND EXEX          09980020
 SPACE                                                                  10000020
EXFND    CLI   TTYPE(BEGIN),VCCON       IS IT A V-TYPE                  10020020
         BNE   EXERR                    NO, LOG ERROR                   10040020
 SPACE                                                                  10060020
         MVI   TTYPE(BEGIN),ERCON       SET TYPE = ER                   10080025
         TM    CTSWXT(ACT),SETWX        EXTRN OR WXTRN .Q               10085025
         BZ    EXTRN3                   SKIP IF EXTRN                   10090025
         MVI   TTYPE(BEGIN),WXCONA      SET TYPE = WX                   10095025
EXTRN3   MVC   ESDID(1,ACT),TID(BEGIN)                                  10100025
         MVI   ADJCOD(ACT),1                                            10120020
         LA    SP1,NAME                                                 10140020
         SR    SP2,SP2                                                  10160020
         L     SRB,STPUT(ACT)           PUT IN NAME IN SYMBOL TABLE     10180020
         BALR  SRR,SRB                                                  10200020
         NOP   0                        IGNORE IF FOUND                 10220020
EXEX     B     EFULL                    GO SEE IF MORE                  10240020
 SPACE                                                                  10260020
EXERR    BAL   SRR,ELOGER               LOG ERROR - EXTERNAL NAME       10280020
         DC    AL2(ERR05)                                               10300020
         B     EXEX                     AND SEE IF MORE                 10320020
 EJECT                                                                  10340020
*********************************************************************** 10360020
 SPACE                                                                  10380020
*********************************************************************** 10400020
*                                       LEVEL 3 - FIND IN SYMBOL TABLE* 10420020
ENAMGET  SR    SP1,SP1                                                  10440020
         LR    SP2,SP1                  CLEAR PARAMETER REGISTERS       10460020
         IC    SP1,TXSPTR(WBP)                                          10480020
         A     SP1,CTXOFP(ACT)                                          10500020
         LA    SP1,1(SP1)               POINTER TO NEXT OPERAND         10520020
         IC    SP2,TXSBLN(WBP)                                          10540020
         N     SP2,=F'15'               NAME LENGTH                     10560020
         MVC   NAME,IBL2F               BLANK NAME                      10580020
         LR    ACC,SP2                                                  10600020
         BCTR  ACC,0                    MACHINE CODE LENGTH             10620020
         EX    ACC,MVNMEV               MOVE IN NAME                    10640020
         ST    SP1,ERRPTR               LOCATION FOR ERROR POINTER      10660020
         L     SRB,CSTGET(ACT)          LOAD BASE                       10680020
         BALR  SRR,SRB                  SYMBOL TABLE GET                10700020
         LTR   SP1,SP1                  SET CONDITION CODE ON RESULT    10720020
         BR    LEV3                     RETURN                          10740020
 SPACE                                                                  10760020
ELOGER   L     SP1,ERRPTR               CALL LOG ERROR                  10780020
         L     SRB,CLOGER(ACT)                                          10800020
         BR    SRB                      EXIT                            10820020
*                                                                     * 10840020
*********************************************************************** 10860020
         EJECT                                                          10880020
*********************************************************************** 10900020
***                           ORG ROUTINE                           *** 10920020
*                                                                     * 10940020
ORG      LH    SP2,CESDNO(ACT)                                          10960020
         BAL   LEV2,PNTESD              POINT ESD                       10980020
         CLC   CTLOC+1(3,ACT),TLTH(SP1) IS LOC CTR GTR TLTH             11000020
         BC    NOTHI,ORGEE              NO, GO AROUND                   11020020
 SPACE                                                                  11040020
         MVC   TLTH(3,SP1),CTLOC+1(ACT)   YES - SET TLTH = LOC CTR      11060020
 SPACE                                                                  11080020
ORGEE    BAL   LEV3,ISOPF               IS THERE AN OPERAND FIELD       11100020
         BZ    ORGNOP                   NO, SET LOC CTN = TLTH          11120020
 SPACE                                                                  11140020
         OI    CTPDSI(ACT),PDSI         OPERAND MUST BE PREVIOUSLY DEF  11160020
         L     SP1,CTXOFP(ACT)                                          11180020
         LA    SP1,1(SP1)                 YES                           11200020
         L     SRB,CEEVAL(ACT)             EVALUATE OPERAND             11220020
         BALR  SRR,SRB                  WHAT TYPE EXPRESSION            11240020
         BC    4,ORGID                  SIMPLE RELOCATABLE              11260020
         BC    10,ORGERR                COMPLEX OR ABSOLUTE - LOG ERROR 11280020
         L     ACC,CTEXTP(ACT)          EVALUATION IMPOSSIBLE           11300020
         NI    TXTO(ACC),X'3F'          LOG ERROR                       11320020
         B     CTRTRN(ACT)              AND EXIT                        11340020
 SPACE                                                                  11360020
ORGID    CLC   PARID(1,SP2),CESDID(ACT) CHECK CONTROL SECTION           11380020
         BNE   ORGERR                   NOT THE SAME, ERROR             11400020
 SPACE                                                                  11420020
         CLI   0(SP1),IBLANK            IS THERE ONLY ONE OPERAND       11440020
         BE    ORGLOC                   YES, CONTINUE                   11460020
 SPACE                                                                  11480020
         BAL   SRR,LOGERP               NO, LOG ERROR                   11500020
         DC    AL2(ERR02)               ONLY ONE OPERAND ALLOWED        11520020
         B     CTRTRN(ACT)              EXIT                            11540020
 SPACE 2                                                                11560020
ORGLOC   MVC   CTLOC+1(3,ACT),1(SP2)   SET LOCATION COUNTER             11580020
         B     CTRTRN(ACT)                   CTR TO VALUE AND EXIT      11600020
 SPACE 2                                                                11620020
ORGNOP   MVC   CTLOC+1(3,ACT),TLTH(SP1) SET LOC CTR = TLTH              11640020
         B     CTRTRN(ACT)                AND EXIT                      11660020
 SPACE 2                                                                11680020
ORGERR   BAL   SRR,LOGERR               LOG ERROR - INVALID ORIGIN      11700020
         DC    AL2(ERR10)                                               11720020
         B     CTRTRN(ACT)              AND EXIT                        11740020
*                                                                     * 11760020
*********************************************************************** 11780020
         EJECT                                                          11800020
*********************************************************************** 11820020
***                          QUIT ROUTINE                           *** 11840020
*                                                                     * 11860020
QUIT     BAL   LEV1,ESFIN               FINISH PREVIOUS SECTION IF ANY  11880020
         B       CTRTRN(ACT)            NO, EXIT                        11900020
*                                                                     * 11920020
*********************************************************************** 11940020
         EJECT                                                          11960020
*********************************************************************** 11980020
*        CALLED BY DC EVAL    0(SRR) IS FLAG  1=Q-TYPE, 0=V-TYPE        12000020
*                             2(SRR) IS RETURN ADDRESS                  12020020
*                                                                       12040020
VCON     STM   SRR,SP1,VSAVE            SAVE LINK AND OPERAND POINTER   12060020
         L     WBP,CTXWBP(ACT)          POINT TO WORKBUCKET             12080020
         MVI   ESDID(ACT),0             ZERO ID                         12100020
         MVI   TYPE,VCCON               SET TYPE = VC                   12120020
         MVC   NAME(8),IBL2F            BLANK NAME                      12140020
         EX    SP2,MVNMEV               GET NAME FROM TEXT              12160020
 SPACE                                                                  12180020
         TM    0(SRR),1                 IS IT A Q OR V-TYPE             12200020
         BO    QCON                     Q-TYPE                          12220020
 SPACE 2                                                                12240020
         TM    CTDORCI(ACT),BIT3        IS IN DSECT OR COM              12260020
         BO    VSHSET                   YES, EXIT                       12280020
         TM    VSAVE,CCHIGH             IS IN DS OR DXD OPERAND         12300020
         BO    VSHSET                   YES, EXIT                       12320020
 SPACE                                                                  12340020
         NI    VMATCH,X'0F'                                             12360020
         NI    DRTFIX,X'0F'             SET VCON RETURN                 12380020
         BAL   LEV2,SCHESD              FIND ESD                        12400020
         LA    LEV2,VCONDRT             SET ESD RETURN                  12420020
         BC    7,SETESD                 IF NOT FOUND, BUILD ESD         12440020
 SPACE                                                                  12460020
         MVC   ESDID(1,ACT),TID(BEGIN)   ELSE COPY EXISTING ID          12480020
VCONDRT  OI    DRTFIX,X'F0'             UPSET VCON RETURN               12500020
VSHSET   MVC   TXSLEN(5,WBP),CTZERO(ACT)                                12520020
         MVC   TXSESD(1,WBP),ESDID(ACT)                                 12540020
         NI    0(WBP),LASTWB+SDMSK      SET WORKBUCKET                  12560020
         OI    0(WBP),FILLED                                            12580020
         L     SRR,VSAVE                RESTORE                         12600020
         B     2(SRR)                   RETURN                          12620020
 EJECT                                                                  12640020
QCON     BAL   LEV3,XREF1               REFERENCE                       12660020
         TM    TXSUBS(WBP),X'10'        IS PREVIOUSLY DEFINED           12680020
         BZ    QCERRA                   NO, LOG ERROR                   12700020
 SPACE                                                                  12720020
         TM    TXSTPC(WBP),DSBITS       IS A DSECT OR DXD               12740020
         BZ    QCERRB              NOT DNO, LOG ERROR                   12760020
         TM    TXSTPC(WBP),SDMSK        IS A CSECT                      12780020
         BO    QCERRB              NAME YES, LOG ERROR                  12800020
 SPACE                                                                  12820020
         TM    CTDORCI(ACT),BIT3        IS CONSTANT DEFINED IN DSECT    12840020
         BO    VSHSET                   YES                             12860020
         TM    VSAVE,CCHIGH             IS IN DS OR DXD OPERAND         12880020
         BO    VSHSET                   YES, EXIT                       12900020
 SPACE                                                                  12920020
         MVC   ESDID(1,ACT),TXSESD(WBP) SET ESDID                       12940020
         CLC   CTNDID+1(1,ACT),TXSESD(WBP)    COMPARE WITH NEXT DSECT   12960020
         BH    VSHSET              DEF AS DXD                           12980020
 SPACE                                                                  13000020
         OI    VMATCH,X'F0'                                             13020020
         BAL   LEV2,SCHESD              SEARCH ESD FOR ITEM             13040020
         CLI   TTYPE(BEGIN),VCCON       IS IT A V-CON                   13060020
         BE    SESLP                    YES, CONTINUE SEARCH            13080020
         CLI   TTYPE(BEGIN),DSCON       IS IT A DSECT                   13100020
         BE    DXSET                    YES, UP-DATE DSECT              13120020
 SPACE                                                                  13140020
         MVC   ESDID(1,ACT),TID(BEGIN)  USE ID IF XD                    13160020
         B     VSHSET                   EXIT                            13180020
 SPACE 2                                                                13200020
DXSET    MVC   TNAME(8,BEGIN),IBL2F     OBLITERATE DSECT NAME           13220020
         STH   SP1,TEMPH                SAVE ESDNO OF DSECT             13240020
         BAL   LEV2,SETESD              CREATE ESD ITEM                 13260020
         MVC   TADDR(2,SP1),TEMPH       INSERT ESDNO OF DSECT           13280020
         MVI   TTYPE(SP1),DXCON         SET NEW TYPE FLAG IN ESD        13300020
         MVI   TALIGN(SP1),7            SET ALIGNMENT - DOUBLE WORD     13320020
         B     VSHSET                   EXIT                            13340020
 SPACE 2                                                                13360020
QCERRA   MVI   QERR,ERR11               LOG ERROR - SYMBOL NOT PREVIOUS 13380020
         B     QLGER                    DEFINED                         13400020
QCERRB   MVI   QERR,ERR12               LOG ERROR - NOT DXD OR DSECT    13420020
QLGER    BAL   SRR,ELOGER                                               13440020
         DC    AL1(0)                   CALL LOG ERROR                  13460020
QERR     DC    X'0'                                                     13480020
         B      VSHSET                  EXIT                            13500020
*********************************************************************** 13520020
 EJECT                                                                  13540020
*              THERE ARE THREE LEVELS OF INTERNAL SUBROUTINES.        * 13560020
 SPACE 2                                                                13580020
*                    LEVEL 1                                          * 13600020
 SPACE                                                                  13620020
*   ESFIN   -  UPDATES THE LOCATION COUNTER IN THE PREVIOUS CONTROL   * 13640020
*              SECTION.                                               * 13660020
  SPACE 2                                                               13680020
*                    LEVEL 2                                          * 13700020
 SPACE                                                                  13720020
*   SETESD  -  ASSIGNS AN ESD ID TO ITEM,AND PUTS SYMBOL TABLE ENTRY. * 13740020
 SPACE                                                                  13760020
*   SCHESD  -  SEARCHES ESD FOR ITEM WITH GIVEN NAME,AND FINDS ESDNO. * 13780020
 SPACE                                                                  13800020
*   PNTESD  -  OBTAINS ESD ITEM WITH GIVEN ESDNO.                     * 13820020
 SPACE   2                                                              13840020
*                    LEVEL 3                                          * 13860020
 SPACE                                                                  13880020
*   FSTNR   -  SETS ESDNO AND ADJECTIVE CODE OF FIRST SD OR PC TYPE   * 13900020
*              CONTROL SECTION IN CONTROL TABLE.USED FOR END LITERALS.* 13920020
 SPACE                                                                  13940020
*   STGET   -  INTERFACES WITH SYMBOL TABLE GET ROUTINE.              * 13960020
 SPACE                                                                  13980020
*   GETNAME -  GETS NAME FROM TEXT RECORD.                            * 14000020
 SPACE                                                                  14020020
*   ISOPF   -  SETS CONDITION CODE TO INDICATE PRESENCE OF OPERAND.   * 14040020
 SPACE                                                                  14060020
*   XREF1,2 -  MAKES REFERENCE OR DUPLICATE TYPE CROSS-REFERENCE.     * 14080020
 SPACE                                                                  14100020
*   ESCRBL  -  CREATES ESD ITEM.                                      * 14120020
    EJECT                                                               14140020
*              LEVEL 1 ROUTINES                                         14160020
*        THESE CALL LEVEL 2 ROUTINES AND MODIFY LEV2,LEV3, ETC.         14180020
*        RETURN REGISTER IS LEV1                                        14200020
 SPACE                                                                  14220020
*********************************************************************** 14240020
***                      ESD FINISH ROUTINE                         *** 14260020
 SPACE                                                                  14280020
ESFIN    CLI   CESDID(ACT),0            DOES CURRENT ESDID = 0          14300020
         BCR   8,LEV1                   YES, RETURN NONE TO FINISH      14320020
 SPACE                                                                  14340020
         LH    SP2,CESDNO(ACT)          NO -FINISH ESD FOR PREV SECTION 14360020
         BAL   LEV2,PNTESD              POINT TO THE LAST ESD ITEM      14380020
         MVC   TADDR(3,SP1),CTLOC+1(ACT)  SET TADDR = CURRENT LOC CTR   14400020
         CLC   CTLOC+1(3,ACT),TLTH(SP1)   IS CURR LOC CTR GTR TLTH      14420020
         BCR       13,LEV1              NO, DONT SET TLTH               14440020
 SPACE                                                                  14460020
         MVC   TLTH(3,SP1),CTLOC+1(ACT) SET TLTH = CURR LOC CTR AND     14480020
         BR    LEV1                     EXIT                            14500020
*                                                                     * 14520020
*********************************************************************** 14540020
 EJECT                                                                  14560020
*              LEVEL 2 ROUTINES                                         14580020
*        THESE CALL LEVEL 3 ROUTINES AND THEREFORE MODIFY LEV3          14600020
*        RETURN REGISTER IS LEV2                                        14620020
*********************************************************************** 14640020
         SPACE 3                                                        14660020
*   SETESD-  ASSIGN ESD IDENTIFICATION                                * 14680020
*FUNCTION-                                                            * 14700020
*   SETS ESD-ID TO EITHER-                                            * 14720020
*        NUMBER OF NEXT ESD, OR                                       * 14740020
*        NUMBER OF NEXT DSECT                                         * 14760020
*   UPDATES COUNT OF ESD'S OR DSECT'S, AS REQUIRED                    * 14780020
*   PUTS SYMBOL TABLE ENTRY, IF REQUIRED                              * 14800020
*                                                                     * 14820020
*INPUT-                                                               * 14840020
*   CLASID(ACT) CONTAINS ID NUMBER OF LAST ESD                        * 14860020
*   CTNDID(ACT) CONTAINS ID NUMBER OF NEXT DSECT                      * 14880020
*OUTPUT-                                                              * 14900020
*   CLASID(ACT) OR CTNDID(ACT) IS UPDATED                             * 14920020
*   ESDID(ACT) CONTAINS CURRENT ESD-ID                                * 14940020
*   ADJCOD(ACT) CONTAINS ADJECTIVE CODE FOR CORRESPONDING SYMBOL TABLE* 14960020
*    ENTRY                                                            * 14980020
*EXTERNAL ROUTINES-                                                   * 15000020
*  STPUTR (IN ASMGF7S) IS USED TO PUT ENTRY TO SYMBOL TABLE           * 15020020
*EXITS-                                                               * 15040020
*   NORMAL-    BR   LEV2                                              * 15060020
*   ERROR-                                                            * 15080020
*        EXIT FROM F7E,                                               * 15100020
*        OR RETURN TO VCONDRT (IN VCON SUBROUTINE) IF CALLED FROM VCON* 15120020
*NOTE-  VCON SUBROUTINE ALTERS ERROR RETURN                           * 15140020
*   DISCOVERS AND LOGS 'ESD TABLE OVERFLOW' ERROR IF ESD'S+DSECT'S=   * 15160020
*    MORE THAN 255                                                    * 15180020
         SPACE 2                                                        15200020
SETESD   LH    ACC,CLASID(ACT)          GET LAST ID                     15220020
         CH    ACC,CTNDID(ACT)          IS THIS = NEXT DSECT ID         15240020
         BE    STESDE                   YES, ERROR                      15260020
         SPACE                                                          15280020
         CLI   TYPE,DSCON               IS IT A DSECT                   15300020
         BE    STADJD                   YES, PUT IN                     15320020
 SPACE                                                                  15340020
         LA    ACC,1(ACC)                                               15360020
         STH   ACC,CLASID(ACT)          LAST ID = LAST ID +1            15380020
         STC   ACC,ESDID(ACT)           SET ID(ASSIGNED) = LAST ID      15400020
 SPACE                                                                  15420020
         CLI   TYPE,VCCON               IS IT A V-TYPE                  15440020
         BE    ESIDX                    YES, PROCESS                    15460020
         CLI   TYPE,ERCON               IS IT EXTERNAL                  15480020
         BE    STADJX                   YES, PROCESS                    15500020
         CLI   TYPE,WXCONA              IS IT WEAK EXTERNAL .Q          15510025
         BE    STADJX                   YES, PROCESS                    15515025
         CLI   TYPE,DXCON               IS IT DUMMY EXTERNAL            15520020
         BE    STADJDX                  YES, PROCESS                    15540020
 SPACE                                                                  15560020
         STC   ACC,CESDID(ACT)          SET ESD-ID OF CURRENT CONTROL   15580020
STADJSD  MVI   ADJCOD(ACT),SDBITS       IS CSECT, SET SD                15600020
         B     ESIDX                    CONTINUE                        15620020
STADJX   MVI   ADJCOD(ACT),ERBITS       SET  EXTERNAL                   15640020
         B     ESIDX                    CONTINUE                        15660020
STADJDX  MVI   ADJCOD(ACT),DSBITS+DXDFLAG+DSOCM                         15680020
         B     ESIDX                    SET FOR DUMMY EXTERNAL          15700020
 SPACE 2                                                                15720020
STADJD   MVI   ADJCOD(ACT),DSBITS+DSOCM                                 15740020
DSCTID   LH    ACC,CTNDID(ACT)          SET ID(ASSIGNED) = NEXT DSECT   15760020
         STC   ACC,ESDID(ACT)             ID                            15780020
         STC   ACC,CESDID(ACT)          SET ESD-ID OF CURRENT CONTROL   15800020
         BCTR  ACC,0                      SECTION = NEXT DSECT ID       15820020
         STH   ACC,CTNDID(ACT)          NEXT DSECT ID = NEXT DSECT ID-1 15840020
         SPACE 5                                                        15860020
*                  BUILD THE ESD ITEM FORMAT                            15880020
ESIDX    MVC   AID,ESDID(ACT)           GET ID                          15900020
         MVC   SVSDNO,CESDNO(ACT)       SAVE CURRENT ESDNO              15920020
         BAL   LEV3,ESCRBL              BUILD ESD                       15940020
         CLC   NAME(8),IBL2F            IF NAME IS NOT BLANK, PUT       15960020
         BCR   8,LEV2                   BLANK, RETURN                   15980020
 SPACE                                                                  16000020
         LA    SP1,NAME                 NONE BLANK, SO PUT              16020020
         SR    SP2,SP2                  SYMBOL IN SYMBOL TABLE          16040020
         L     SRB,STPUT(ACT)           SYMBOL TABLE PUT                16060020
         BALR  SRR,SRB                                                  16080020
         NOP   0                                                        16100020
         CLI   TYPE,ERCON                                               16120020
         BE    RESDNO                   IF TYPE = DX OR ER              16140020
         CLI   TYPE,WXCONA              OR                              16150025
         BE    RESDNO                   WEAK EXTERNAL                   16155025
         CLI   TYPE,DXCON               DONT RETURN YET                 16160020
         BCR   7,LEV2                   OTHER WISE RETURN               16180020
RESDNO   MVC   CESDNO(2,ACT),SVSDNO     RESTORE CURRENT ESDNO           16200020
         BR    LEV2                     NOW RETURN                      16220020
 SPACE 2                                                                16240020
STESDE   BAL   SRR,LOGERR                                               16260020
         DC    AL2(ERR14)               'ESD TABLE OVERFLOW'            16280020
DRTFIX   EQU   *+1                 ** BYTE IS ALTERED BY VCON **        16300020
         B     CTRTRN(ACT)              EXIT FROM THE FUNCTIONAL RTN.   16320020
         B     VCONDRT                  VCON RETURN                     16340020
SVSDNO   DC    H'0'                                                     16360020
*                                                                     * 16380020
*********************************************************************** 16400020
         EJECT                                                          16420020
*********************************************************************** 16440020
*        SEARCH FOR ESD ENTRY                                           16450023
*        ON EXIT   BEGIN POINTS AT ENTRY                                16455023
*                  SP1 CONTAINS ESDNO                                   16457023
 SPACE                                                                  16460020
SCHESD   LH        END,CNOESD(0,ACT)   LOAD NUMBER OF ESD'S             16480020
         LA        END,1(0,END)        ADD 1 FOR DUMMY 1ST ENTRY        16500020
         L     SEGAD,CTESRB(ACT)         SET BEGIN AND END FOR IN CORE  16520020
         SR    SP1,SP1             ESDNO=0                              16540020
         B         SES1                                                 16560020
 SPACE                                                                  16580020
SES3     BCT   ITEMCT,SES2              REDUCE NO. IN BLOCK BY ONE      16600020
         LA        SEGAD,4(0,SEGAD)    POINT AT NEXT BLOCK              16620020
 SPACE                                                                  16640020
SES1     LA    ITEMCT,16                SET UP FOR NEXT BLOCK           16660020
         L         BEGIN,0(0,SEGAD)    POINT AT 1ST ENTRY IN BLOCK      16680020
 SPACE 2                                                                16700020
*./      DELETE    SEQ1=16720020,SEQ2=16720020                          16720023
SES2     CLC   NAME(8),TNAME(BEGIN)     SEE IF SAME NAME                16740023
         BC    7,SESLP                    NO - LOOP                     16760020
 SPACE                                                                  16780020
VMATCH   EQU   *+1                                                      16800020
         BR    LEV2                     YES, EXIT                       16820020
 SPACE 2                                                                16840020
         CLI   TTYPE(BEGIN),VCCON       IS TYPE = VCON                  16860020
         BCR   8,LEV2                   YES, RETURN                     16880020
         CLI   TTYPE(BEGIN),ERCON       IS TYPE = ER                    16900020
         BCR   8,LEV2                   YES, RETURN                     16920020
         CLI   TTYPE(BEGIN),WXCONA      IS TYPE = WX .Q                 16930025
         BCR   8,LEV2                   YES, RETURN                     16940025
         SPACE 2                                                        16950025
SESLP    LA        BEGIN,16(0,BEGIN)   POINT AT NEXT ENTRY IN BLOCK     16960020
         LA        SP1,1(0,SP1)        ESDNO=ESDNO+1                    16970023
         BCT       END,SES3            CHECK FOR NO MO ENTRIES          16980020
 SPACE 2                                                                17000020
         LTR   ACT,ACT                  SET CC = 2 FOR NOT FOUND        17020020
         BR    LEV2                     AND EXIT                        17040020
 SPACE                                                                  17060020
*********************************************************************** 17080020
         EJECT                                                          17100020
*********************************************************************** 17120020
***                    POINT ESD ROUTINE                            *** 17140020
*    THIS ROUTINE POINTS AT THE ESD ITEM WHOSE NUMBER IS IN SP2,      * 17160020
*  WHETHER THIS ITEM IS IN CORE OR NOT.                               * 17180020
*                                                                     * 17200020
PNTESD   LA    SP1,15                   MASK                            17220020
         NR    SP1,SP2                  FIND OUT WHICH BLOCK            17240020
         SR    SP2,SP1                  ESD NO. IS IN                   17260020
         SRL   SP2,2                                                    17280020
         A     SP2,CTESRB(ACT)            SR TABLE ITEM                 17300020
 SPACE                                                                  17320020
         SLL   SP1,4                       SET SP1 TO POINT AT ESD ITEM 17340020
         A     SP1,0(0,SP2)                                             17360020
         BR    LEV2                     EXIT                            17380020
*                                                                     * 17400020
*********************************************************************** 17420020
 EJECT                                                                  17440020
*              LEVEL 3 ROUTINES                                         17460020
*        THESE MAY ONLY MODIFY THE VOLATILE AND PARAMETER REGISTRRS     17480020
*        RETURN REGISTER IS LEV3                                        17500020
 SPACE                                                                  17520020
*********************************************************************** 17540020
*                                                                     * 17560020
*   FSTNR- SET FIRST ESD NUMBER                                       * 17580020
*FUNCTION-                                                            * 17600020
*   SETS THE FOLLOWING VARIABLES IN THE ACT-                          * 17620020
*        CTFSTNO..SET TO ESD NUMBER AND AJECTIVE CODE OF FIRST        * 17640020
*                 CONTROL SECTION                                     * 17660020
*        CTFSTN...RECEIVES EIGHT-BYTE NAME OF FIRST CONTROL SECTION   * 17680020
*   THESE VALUES ARE USED IN GENERATING SYMBOL TABLE ENTRIES FOR THE  * 17700020
*    LITERALS WHICH FOLLOW THE 'END' STATEMENT.                       * 17720020
         SPACE 2                                                        17740020
FSTNR    CLC   CTFSTNO(2,ACT),CTZERO(ACT) IF ALREADY SET                17760020
         BCR   7,LEV3                    THEN RETURN                    17780020
         LH    ACC,CNOESD(ACT)                                          17800020
         LA    ACC,1(ACC)               SET ESDNO AND ADJ CODE          17820020
         SLL   ACC,7                     OF FIRST CONTROL SECTION       17840020
         STH   ACC,CTFSTNO(ACT)          IN CENTRAL TABLE               17860020
         MVC   CTFSTN(8,ACT),NAME       MOVE FIRST NAME                 17880020
CTFSTNO  EQU   CTESRN                   FIRST ESD NO                    17900020
         BR    LEV3                     RETURN                          17920020
*                                                                     * 17940020
*********************************************************************** 17960020
 SPACE 2                                                                17980020
*********************************************************************** 18000020
*                                                                     * 18020020
*   STGET- SCAN SYMBOL TABLE                                          * 18040020
*FUNCTION-                                                            * 18060020
*   PROVIDES INTERFACE WITH STGETR ROUTINE (IN ASMGF7S)               * 18080023
*   FINDS (IF POSSIBLE) A REQUESTED SYMBOL IN THE SYMBOL TABLE        * 18100020
*INPUT-                                                               * 18120020
*   NAME CONTAINS THE DESIRED EIGHT-BYTE SYMBOL                       * 18140020
*OUTPUT-                                                              * 18160020
*   SP1 CONTAINS THE ADDRESS OF THE FIRST BYTE FOLLOWING THE NAME     * 18180020
*                FIELD OF THE DESIRED SYMBOL TABLE ENTRY,             * 18200020
*            OR  ZERO, IF THE SYMBOL CAN NOT BE FOUND                 * 18220020
*   CONDITION CODE.. 0= SYMBOL NOT FOUND                              * 18240020
*                    2= SYMBOL FOUND                                  * 18260020
         SPACE 2                                                        18280020
STGET    LA    SP1,NAME                 POINT SP1 AT SYMBOL SOUGHT      18300020
         SR    SP2,SP2                                                  18320020
         L     SRB,CSTGET(ACT)          USE ACT AND FDIMEN TO           18340020
         BALR  SRR,SRB                  GET TO STGETR IN ASMGF7S        18360023
         LTR   SP1,SP1                  SET CC TO SHOW RESULT           18380020
         BR    LEV3                     RETURN                          18400020
*                                                                     * 18420020
*********************************************************************** 18440020
         EJECT                                                          18460020
*********************************************************************** 18480020
*   GETNAME-                                                          * 18500020
*FUNCTION-                                                            * 18520020
*   RETRIEVE NAME FIELD OF CURRENT INPUT TEXT RECORD                  * 18540020
*INPUT-                                                               * 18560020
*   CTEXTP(ACT) CONTAINS ADDRESS OF CURRENT INPUT TEXT RECORD         * 18580020
*OUTPUT-                                                              * 18600020
*   NAME CONTAINS SYMBOL IN THE TEXT NAME FIELD, OR BLANKS IF THE     * 18620020
*   SYMBOL HAS BEEN MULTIPLY-DEFINED                                  * 18640020
*EXITS-                                                               * 18660020
*   NORMAL...  B    4(LEV3)                                           * 18680020
*   IF NAME FIELD BLANK.. B LEV3                                      * 18700020
         SPACE                                                          18720020
 SPACE                                                                  18740020
GETNAME  MVC   NAME(8),IBL2F            BLANK NAME                      18760020
         L     ACC,CTEXTP(ACT)          ACC POINTS TO TEXT RECORD       18780020
         TM    TXMDN(ACC),BIT3                                          18800020
         BCR   1,LEV3                   ERROR IN NAME                   18820020
 SPACE                                                                  18840020
         SR    TEMPR,TEMPR                                              18860020
         IC    TEMPR,TXNAML(ACC)        TEMPR HAS NAME LENGTH           18880020
         LTR   TEMPR,TEMPR              IS THERE AN ERROR IN NAME       18900020
         BCR   8,LEV3                   YES EXIT - NO NAME              18920020
 SPACE                                                                  18940020
         BCTR  TEMPR,0                  REDUCE BY ONE                   18960020
         EX    TEMPR,MVNAME             MOVE NAME FROM TEXT TO BLNK FLD 18980020
         B     4(LEV3)                  NORMAL EXIT                     19000020
         SPACE                                                          19020020
*********************************************************************** 19040020
 SPACE 2                                                                19060020
*********************************************************************** 19080020
*   ISOPF-   IS THERE AN OPERAND                                      * 19100020
*FUNCTION- DETERMINES WHETHER THE CURRENT INPUT TEXT RECORD CONTAINS  * 19120020
*     AN OPERAND.  THERE IS NO OPERAND IF THE FIRST CHARACTER OF THE  * 19140020
*     OPERAND FIELD CONTAINS A BLANK OR COMMA.                        * 19160020
*INPUT-                                                               * 19180020
*   CTXOFP(ACT) CONTAINS ADDRESS OF OPERAND FIELD,-1                  * 19200020
*OUTPUT-                                                              * 19220020
*   CONDITION CODE.. 0= NO OPERAND                                    * 19240020
*                    1= IS OPERAND                                    * 19260020
*                    2= IS OPERAND                                    * 19280020
         SPACE                                                          19300020
ISOPF    L     ACC,CTXOFP(ACT)          FIND OPERAND FIELD              19320020
         CLI   1(ACC),IBLANK            IS IT A BLANK                   19340020
         BCR   8,LEV3                   YES, RETURN                     19360020
         CLI   1(ACC),ICOMMA            IS IT A COMMA                   19380020
         BCR   7,LEV3                   NO, RETURN                      19400020
         CLI   0(ACC),2                 SET CC NE 0                     19420020
         BR    LEV3                     RETURN                          19440020
*********************************************************************** 19460020
 SPACE                                                                  19480020
*********************************************************************** 19500020
 SPACE                                                                  19520020
*   XREF-  FORM CROSS-REFERENCE RECORDS                               * 19540020
*ENTRY POINTS-                                                        * 19560020
*   XREF1...FOR TYPE 2 CROSS-REFERENCE  (REFERENCE TO SYMBOL)         * 19580020
*   XREF2...FOR TYPE 3 CROSS-REFERENCE  (MULTIPLY DEFINED)            * 19600020
*INPUT-                                                               * 19620020
*   CTXRFI(ACT)...BIT 7... 1=CROSS REFERENCE DESIRED                  * 19640020
*OUTPUT-                                                              * 19660020
*FUNCTION-  WRITE XREF RECORD (VIA STREFR) AND FORM NEW XREF RECORD   * 19680020
*EXTERNAL ROUTINES-  STREFR(IN ASMGF7S) IS USED TO PERFORM RECORD OUT-* 19700020
*                    PUT AND BUFFER ALLOCATION.                       * 19720020
*NOTE-  STATEMENTS AT 'XREF1' AND 'XREF2' ALTER THE COMMAND AT XREF005* 19740020
         SPACE                                                          19760020
XREF2    MVI       XREF005+3,CSTPUT    PUT FOR DUPLICATE                19780020
         B     XREF                     WORK STARTS AT XREF             19800020
XREF1    MVI       XREF005+3,CSTREF    REF FOR REFERENCE                19820020
XREF     TM    CTXRFI(ACT),X'02'        XREF BIT ON   Q.                19840020
         BCR   8,LEV3                   NO, SKIP IT                     19860020
         CLI   NAME,IBLANK              NO XREF FOR BLANK NAMES, SO     19880020
         BCR   8,LEV3                   HERE'S ANOTHER CHANCE TO SKIP   19900020
         SPACE                                                          19920020
         L     ACC,CTEXTP(ACT)         TEXT RECORD ADDRESS TO ACC  6822 19940020
         MVC   XREFWK(1),TXRT(ACC)     PICK OUT RECORD TYPE        6822 19960020
         NI    XREFWK,X'70'            STRIP OFF EXTRA BITS        6822 19980020
         BZ    XREF005                 SKIP, IF TYPE IS ZERO       6822 20000020
         XI    XREFWK,X'50'            SEE ABOUT TYPE 5            6822 20020020
         BCR   8,LEV3                  NO XREF FOR TYPE 5          6822 20040020
XREF005  L     SRB,*-*(0,ACT)          SELECT STREFR OR STPUTR          20060020
         LA        SP1,NAME            POINT AT NAME                    20080020
         LA        SP2,8               SET LENGTH                       20100020
         BALR  SRR,SRB                STPUTR   RETURNS NEW ENTRY IN SP1 20120020
         CLI       XREF005+3,CSTREF    IS THIS DUP DEFN ENTRY           20140020
         BCR       8,LEV3              RETURN IF NOT                    20160020
         MVC    2(6,SP1),CTZERO(ACT)    CLEAR LENGTH, VALUE, ESDID FLDS 20180020
         BR    LEV3                     ALL DONE                        20200020
         SPACE                                                          20220020
XREFWK   DS    1C                      TEAR UP RECORD TYPE HERE    6822 20240020
         SPACE                                                          20260020
*********************************************************************** 20280020
         EJECT                                                          20300020
*********************************************************************** 20320020
*                                                                     * 20340020
*   ESCRBL-  FORM ESD ENTRY                                           * 20360020
*                                                                     * 20380020
*FUNCTION-                                                            * 20400020
*   FINDS ROOM TO PLACE ESD ENTRY (VIA STROOM IN ASMGF7S)             * 20420020
*   UPDATES POINTERS IN CONTROL TABLE, TO INDICATE ESD ENTRY HAS BEEN * 20440020
*    MADE.                                                            * 20460020
*INPUT/OUTPUT PARAMETERS                                              * 20480020
*   CTDESP(ACT)...POINTER TO START OF ESD TABLE                       * 20500020
*   CSGCTR(ACT)...COUNT OF ESD ENTRIES IN CURRENT SEGMENT             * 20520020
*   CNOESD(ACT)...NUMBER OF ESD'S                                     * 20540020
*   CESDNO(ACT)...CURRENT ESD NUMBER                                  * 20560020
*   CTESRP(ACT)...POINTER TO RESIDENT ESD                             * 20580020
*EXTERNAL ROUTINES-                                                   * 20600020
*   STROOM..(IN ASMGF7S) USED TO CHECK SYMBOL-ESD TABLE FOR POSSIBLE  * 20620023
*    OVERFLOW                                                         * 20640020
*EXITS-                                                               * 20660020
*   IF TYPE IS VCON OR QCON,                                          * 20680020
*        BR    LEV2                                                   * 20700020
*   OTHERWISE,                                                        * 20720020
*        BR    LEV3                                                   * 20740020
         SPACE                                                          20760020
ESCRBL   L     SP1,CTESDP(ACT)          POINTS TO START OF ESD          20780020
         LA        SP1,16(0,SP1)        CHANGE IT                       20800020
         LH    ACC,CSGCTR(ACT)          NO, UPDATE CURRENT SEG. POINTER 20820020
         BCT       ACC,SETESP          TEST IF LAST IN BLOCK            20840020
 SPACE                                                                  20860020
         L         SRB,CSTROM(0,ACT)   FIND ROOM FOR ANOTHER BLOCK      20880020
         LA        SP1,259             MAX ROOM A BLOCK CAN TAKE        20900020
         BALR      SRR,SRB                                              20920020
         DS        2H                                                   20940020
         L         SP1,CTSYMP(0,ACT)   CALCULATE ADDRESS IN SYM TAB     20960020
         A         SP1,CFREEP(0,ACT)                                    20980020
         LA        SP1,3(0,SP1)        ALIGN F                          21000020
         N         SP1,=F'-4'                                           21020020
         L     GRZ,CTESRP(ACT)          POINT TO ESD RESIDENT SEGMENT   21040020
         LA    GRZ,4(GRZ)               SKIP IDENTIFIER                 21060020
         ST    GRZ,CTESRP(ACT)          FRONT OF SEGMENT                21080020
         ST    SP1,0(GRZ)               POINTS TO PREVIOUS SEGMENT      21100020
         LA        ACC,256(0,SP1)      CALCULATE CFREEP                 21120020
         S         ACC,CTSYMP(0,ACT)                                    21140020
         ST        ACC,CFREEP(0,ACT)                                    21160020
         LA        ACC,16              RESET NUMBER OF ENTRIES/BLOCK    21180020
SETESP   STH   ACC,CSGCTR(ACT)          NOW UPDATED                     21200020
         ST    SP1,CTESDP(ACT)         REPLACE ESD POINTER              21220020
         MVC   TTYPE(16,SP1),TYPE       PUT ENTRY INTO ESD TABLE        21240020
         MVC   ADDR(7),CTZERO(ACT)      CLEAR WORK AREA                 21260020
         LH    ACC,CNOESD(ACT)          UPDATE ESD COUNT                21280020
         LA    ACC,1(ACC)                                               21300020
         STH   ACC,CNOESD(ACT)          NOW UPDATED                     21320020
         CLI   TYPE,LDCON               IF TYPE=LD,                     21340020
         BCR   8,LEV3                   RETURN                          21360020
         CLI   TYPE,VCCON               IF TYPE= VCON OR QCON,          21380020
         BCR   8,LEV2                   RETURN TO VCON CODE             21400020
         STH   ACC,CESDNO(ACT)          OTHERWISE, SET ESD NUMBER       21420020
         BR    LEV3                     AND RETURN                      21440020
*                                                                     * 21460020
*********************************************************************** 21480020
         EJECT                                                          21500020
MVNAME   MVC   NAME(0),TXNAME(ACC)                                      21520020
MVNMEV   MVC   NAME(0),0(SP1)           EXECUTED                        21540020
 SPACE                                                                  21560020
**                            AREAS NEEDED                           ** 21580020
         DS    0F                                                       21600020
TEMPF    DC    H'0'                     TEMPARY FULL WORD               21620020
TEMPH    DC    H'0'                             HALF WORD               21640020
ADJ      EQU   TEMPH+1                  ADJECTIVE CODE                  21660020
ECTR     DC    H'101'                   ENTRY COUNTER                   21680020
VSAVE    DC    F'0'                     V-CON SAVE AREA                 21700020
ERRPTR   DC    F'0'                     ERROR POINTER TO COLUMN         21720020
TEMPZF   DC    F'0'                     FULL WORD ZERO                  21740020
         DS    0F                        ESD ITEM FORMAT                21760020
TYPE     DC    X'0'                     *    TYPE                       21780020
ADDR     DC    XL3'0'                   *    ADDRESS                    21800020
ALIGN    EQU   ADDR+2                   *    ALIGNMENT                  21820020
AID      DC    X'0'                     *    ESD/ID                     21840020
ALTH     DC    XL3'0'                   *    LENGTH                     21860020
NAME     DC    CL8'0'                   *    NAME                       21880020
IBL2F    DC    8AL1(IBLANK)             8 BYTES OF BLANK                21900020
         LTORG                                                          21920020
         EJECT                                                          21940020
EWBKSW   EQU   TXSESL                   LAST OPERAND INDICATOR          21960020
EWBCMP   EQU   TXSPTR                                                   21980020
STPUT    EQU   CSTPUT                   POINTER TO SYMBOL IN OPERAND    22000020
STADJ    EQU   1                        SYMBOL TABLE PUT ROUTINE        22020020
ADJCD    EQU   STADJ                    POSITION OF ADJECTIVE           22040020
ALNBYTE  EQU   17                       POSITION OF ALIGNMENT           22060020
DSOCM    EQU   4                        DS OR COM MASK                  22080020
ESIOID   EQU   3                        ESD INDICATOR                   22100020
ENTCMB   EQU   8                        ENTRY COMPLETE CODE             22120020
EWBKID   EQU   0                        POSITION OF WKBKT ID            22140020
EWBKVL   EQU   1                                         VALUE          22160020
EWBKNO   EQU   EWBKVL+1                 PISITION OF BLOCK NO.           22180020
MOD8     EQU   7                        MASK FOR DOUBLE WORD BOUNDARY   22200020
NOTHI    EQU   13                       NOT HIGH                        22220020
PARID    EQU   5                        PARAMETER TABLE ID              22240020
STID     EQU   2                        POSITION OF ID                  22260020
SYMVAL   EQU   3                                    SYMBOL VALUE        22280020
CCHIGH   EQU   X'20'                    MASK FOR DS OR DXD              22300020
ECMPLT   EQU   X'FF'                             WKBKT COMPLETE         22320020
FILLED   EQU   X'90'                    WKBKT COMPLETE INDICATOR        22340020
FULL     EQU   X'40'                    MASK FOR WKBKT FULL             22360020
LASTOP   EQU   X'80'                             LAST OPERAND           22380020
ONSDVI   EQU   X'80'                    INDICATOR FOR SELF DEFINE VALUE 22400020
LASTWB   EQU   X'08'                                  LAST WKBKT        22420020
PDSI     EQU   X'20'                                  PREVIOUSLY DEFINE 22440020
SDBIT    EQU   3                                      CSECT OR START    22460020
SDMSK    EQU   3                                      CSECT OR START    22480020
SDBITS   EQU   X'00'                                  CSECT OR START    22500020
ERBITS   EQU   X'01'                                  EXTERNAL          22520020
DSBITS   EQU   X'02'                                  DSECT             22540020
DXDFLAG  EQU   X'10'                                  DXD               22560020
BIT3     EQU   X'10'                    MASK FOR DSECT OR COMMON        22580020
WBKLEN   EQU   6                        WKBKT LENGTH                    22600020
WBKSW    EQU   TXFAFL                   WKBKT SWITCH                    22620020
WBKTYP   EQU   TXFAFL+1                       TYPE                      22640020
WBKID    EQU   TXFAFL+TXSESD                  ESD/ID                    22660020
WBKNO    EQU   TXFAFL+4                 ESDNO AND ADJ CODE              22680020
SETWX    EQU   X'02'                    INDICATES WXTRN                 22690025
         SPACE                                                          22700020
ERR01    EQU   80                       ILLEGAL START                   22720020
ERR02    EQU   39                       INVALID DELIMITER               22740020
ERR03    EQU   25                       RELOCATABILITY                  22760020
ERR04    EQU   33                       ALIGNMENT                       22780020
ERR05    EQU   19                       EXTERNAL NAME                   22800020
ERR06    EQU   38                       EXTRN                           22820020
ERR08    EQU    95                      ENTRY TABLE OVERFLOW            22840020
ERR10    EQU     6                      INVALID ORIGIN                  22860020
ERR11    EQU   21                       SYMBOL NOT PREVIOUSLY DEFINED   22880020
ERR12    EQU   106                      NOT NAME OF DXD OR DSECT        22900020
ERR13    EQU   25                       RELOCATABILITY                  22920020
ERR14    EQU   22                       ESD TABLE OVERFLOW              22940020
ERR15    EQU       73                  ILLEGAL NAME FIELD               22950023
         EJECT                                                          22960020
**                       FIELDS IN ESD ITEMS                         ** 22980020
TTYPE    EQU   0                                  TYPE                  23000020
TADDR    EQU   1                                  ADDRESS               23020020
TID      EQU   4                                  ESD/ID                23040020
TLTH     EQU   5                                  LENGTH                23060020
TNAME    EQU   8                                  NAME                  23080020
TALIGN   EQU   TTYPE+3                            ALIGNMENT             23100020
         SPACE                                                          23120020
**                            TYPE CONSTANTS                         ** 23140020
SDCON    EQU   0                                  CSECT OR START        23160020
LDCON    EQU   1                                  ENTRY                 23180020
ERCON    EQU   2                                  EXTERN                23200020
PCCON    EQU   4                                  PRIVATE CODE          23220020
CMCON    EQU   5                                  COMMON                23240020
DXCON    EQU   6                                  DXD                   23260020
DSCON    EQU   7                                  DSECT                 23280020
VCCON    EQU   8                                  V-TYPE CONSTANT       23300020
WXCONA   EQU   10                                 WEAK EXTERNAL         23310025
         SPACE                                                          23320020
**                           REGISTER USAGE                          ** 23340020
ACC      EQU   GRX                      ACCUMULATOR                     23360020
TEMPR    EQU   GRY                      TEMPERARY                       23380020
ECT      EQU   GRZ                      NUMBER OF ENTRIES               23400020
LTH      EQU   GRZ                      LENGTH                          23420020
ALN      EQU   TEMPR                    ALIGNMENT                       23440020
SEGAD    EQU   SP2                      SEGMENT (BLOCK)                 23460020
BEGIN    EQU   TEMPR                    BEGINNING OF SEGMENT            23480020
END      EQU   ACC                      END OF SEGMENT                  23500020
ITEMCT   EQU   GRD                      ITEMS IN SEGMENT                23520020
TXPTR    EQU   ACC                      POINTER TO TEXT                 23540020
WBP      EQU   GRA                      POINTER TO WKBKT                23560020
LEV1     EQU   GRA                      RETURN LEVEL 1                  23580020
LEV2     EQU   GRB                      RETURN LEVEL 2                  23600020
LEV3     EQU   GRD                      RETURN LEVEL 3                  23620020
ELOOPR   EQU   GRC                      LOOP ADDRESS                    23640020
         SPACE                                                          23660020
         END                                                            23680020
./ ADD NAME=ASMGF7G
F7G      TITLE     'ASMG F7  LITERAL DC GENERATION SUBROUTINE (DCGETR)' 00020021
         ISEQ  73,78                                                    00040021
ASMGF7G  START                                                          00060020
         PRINT      NOGEN                                               00080020
         FDIMEN                                                         00100020
         PRINT GEN                                                      00120020
*                                                                     * 00140020
*TITLE 'ASMGF7G ' ... LITERAL DC GENERATION                           * 00160020
*FUNCTION/OPERATION-                                                  * 00180020
*  ASMGF7G BUILDS A LITERAL DC EDITED TEXT RECORD FOR A OUTSTANDING   * 00200020
*   LITERL ENTRY IN THE SYMBOL TABLE                                  * 00220020
*ENTRY POINTS- ASMGF7G                                                * 00240020
*   CALLING SEQUENCE                                                  * 00260020
*        L     SRB,CDCGET(ACT)          SET UP BASE                   * 00280020
*        BALR  SRR,SRB                  CALL ASMGF7G                  * 00300021
*INPUT- NONE                                                          * 00320020
*OUTPUT- NONE                                                         * 00340020
*EXTERNAL ROUTINES- NONE                                              * 00360020
*EXITS- NORMAL                                                        * 00380020
*       RETURNS TO CALLER VIA                                         * 00400020
*        BR    SRR                      EXIT                          * 00420020
*     - ERROR-- NONE                                                  * 00440020
*TABLES/WORKAREA-                                                     * 00460020
*   RL- FIXED FIELDS OF TEXT RECORD                                   * 00480020
*NOTES-                                                               * 00500020
*  ASMGF7G CREATES THE TEXT RECORD BY BUILDING IT AND/OR MOVING IT    * 00520020
*   FROM THE LITERAL DC RECORD AREA. GRZ POINTS TO THE FIELD IN THE   * 00540020
*   LITERAL DC RECORD AREA AND GRX POINTS TO THE TEXT RECORD.         * 00560020
*                                                                     * 00580020
         EJECT                                                          00600020
         USING *,SRB                                                    00620020
DCGTR    SR    GR1,GR1                  ZERO STRING COUNTER             00640020
         L     GRX,CTLDCP(ACT)          GET PTR TO LITERAL DC REC AREA  00660020
         ST    GRX,SAVPTR               SAVE IT                         00680020
GETLIT   L     GRY,CTSYMP(ACT)          GET PTR TO 1ST BYTE OF SYM TBL  00700020
GTLIT1   MVC   ALWRD+1(3),0(GRY)                                        00720020
         L     GRZ,ALWRD                GET NEXT STRING POINTER         00740020
         LTR   GRZ,GRZ                  TEST IF POINTER IS ZERO         00760020
         BNE   GTLIT2                   NO MEANS MORE LITERALS          00780020
         LA    GR1,1(GR1)               ADD 1 TO STRING COUNTER         00800020
         LA    GRY,3(GRY)               POSITION TO NEXT STRING POINTER 00820020
         CH    GR1,CON4                 TEST IF 4 STRINGS PROCESSED     00840020
         BNE   GTLIT1                   NO,GO TO PROCESS NEXT STRING    00860020
EXIT     BR    SRR                      BACK TO MAIN LINE               00880020
GTLIT2   A     GRZ,CTSYMP(ACT)          GET PTR TO LITERAL ENTRY        00900020
         ST    GRZ,ALITSAVE             SAVE FOR POSSIBLE LREF          00910025
         MVC   0(3,GRY),0(GRZ)          MOVE CHAIN PTR TO STRING PTR    00920020
         IC    GR1,3(GRZ)               GET DEF LENG-1 OF SOURCE LITRL  00940020
         EX    GR1,MVSRCE               MOVE SOURCE INTO TEXT RECORD    00960020
         LA    GRZ,6(GRZ,GR1)           POINT TO WORK BUCKET IN TABLE   00980020
* AT THIS POINT MOVE WBS IN IF PRESENT                                  01000020
         LA    GR1,3(GR1)               GET TRUE LGTH OF OPND. FIELD    01020020
         STC   GR1,OPNL                 STORE IN OPRND FIELD LENGTH     01040020
         LA    GRX,14(GRX,GR1)          POINT PAST OPRND FIELD          01060020
* AT THIS POINT TXLOC SHOULD BE SET PROPERLY IN CASE OF *               01080020
         MVC   0(7,GRX),BLNK            MOVE IN BLANK AND APP FIXED FLD 01100020
         LA    GRX,2(GRX)               POINT TO APPENDED FIXED FIELD   01120020
         S     GRX,SAVPTR               GET PTR TO APPENDED FIXED FIELD 01140020
         STH   GRX,ABP                  STORE IT                        01160020
         A     GRX,SAVPTR                                               01180020
         MVC   5(15,GRX),0(GRZ)         MOVE LDC WB FROM TABLE TO TEXT  01200020
         OI    5(GRX),X'08'             SET LAST OPERAND INDICATOR      01220020
         TM    6(GRX),X'80'             TEST IF LOC CTR IN TABLE ENTRY  01240020
         BZ    GTLIT3                   NO, BRANCH                      01260020
         MVC   0(4,GRX),15(GRZ)         YES,MOVE IT INTO TEXT RECORD    01280020
         LA    GRZ,4(GRZ)                                               01300020
GTLIT3   NI    6(GRX),X'3F'             SET LOC CTN NOT IN TABLE ENTRY  01320020
         LA    GRX,20(GRX)              SET POINTER BEYOND LDC WKBKT    01340020
         TM    1(GRZ),X'40'             ARE THERE WKBKTS                01360020
         BZ    GETLIT6                  NO, PUT IN TEXT RECORD AS IS    01380020
         ST    GRX,CTXWBP(ACT)          SAVE POINTER TO WKBKT           01400020
         LA    GRZ,9(GRZ)                                               01420020
GETLIT4  LA    GRZ,6(GRZ)               UP TO BEGINNING OF WKBKT        01440020
         MVC   0(6,GRX),0(GRZ)          MOVE IN WKBKT                   01460020
         LA    GRX,6(GRX)               UP POINTER PAST WKBKT JUST MOVE 01480020
         TM    TXSLAS(GRZ),X'08'        IS THIS LAST WKBKT              01500020
         BZ    GETLIT4                  NO, GET THE REST                01520020
GETLIT6  S     GRX,SAVPTR                GET RECORD LENGTH.             01540020
         STH   GRX,RL                   STORE IN FIXED BUILD AREA       01560020
         L     GRX,SAVPTR               POINT TO BEGINING OF RECORD     01580020
         MVC   0(16,GRX),RL             MOVE IN FIXED PART OF RECORD    01600020
         TM    CTLREF(ACT),X'80'        IS LREF ON .Q                   01602025
         BZ    EXIT                     NO                              01603025
         L     GRZ,ALITSAVE             POINT AGAIN TO LITERAL ENTRY    01604025
         MVC   0(3,GRZ),STLREF+1(ACT)   BUILD NEW CHAIN OF LITERALS     01605025
         ST    GRZ,STLREF(ACT)          UPDATE HEAD OF LITERAL CHAIN    01606025
         SR    GR1,GR1                  ZERO A WORK REGISTER            01607025
         IC    GR1,3(GRZ)               GET LENGTH-1 OF SOURCE LITERAL  01608025
         LA    GRZ,11(GRZ,GR1)          POINT TO NEW WORK AREA          01609025
         MVC   ALWRD+2(2),CTSEQN+2(ACT) ALIGN CURRENT SEQ NUMBER        01610025
         LH    GR1,ALWRD+2              LOAD SEQENCE NUMBER             01611025
         LA    GR1,1(GR1)               INCREASE BY ONE                 01612025
         ST    GR1,ALWRD                MOVE TO WORK AREA               01613025
         MVC   0(2,GRZ),ALWRD+2         STOW STATEMENT NUMBER           01614025
         MVC   2(1,GRZ),CESDID(ACT)     STOW CURRENT ESDID              01615025
         MVC   3(3,GRZ),CTLOC+1(ACT)    STOW CURRENT LOCATION COUNTER   01616025
         B     EXIT                                                     01620020
MVSRCE   MVC   16(0,GRX),4(GRZ)         EXECUTED MOVE OF SOURCE LITERAL 01640020
*FIXED FIELDS OF TEXT RECORD DEFINED INTERNAL TO THIS ROUTINE           01660020
RL       DC    H'0'                     RECORD LENGTH                   01680020
RT       DC    X'60'                    REC TYPE=EDITED GENERATED       01700020
TO       DC    X'80'                    TYPE OF OPERATION=ASSEMBLER     01720020
HEXOP    DC    X'25'                    HEX OPERATION CODE=25(LITR)     01740020
ASC      DC    X'01'                    ASSEMBLER SWITCH CODES          01760020
ABP      DC    2X'00'                   APPENDED FIXED FIELD POINTER    01780020
NAML     DC    X'00'                    NAME FIELD LENGTH=0             01800020
OPL      DC    X'04'                    OPERATION FIELD LENGTH=4        01820020
OP       DC    4AL1(IBLANK)             OPERATION FIELD = BLANK         01840020
OPNL     DC    X'00'                    OPERAND FIELD LENGTH INCLUDING  01860020
*                                       ONE TRAILING BLANK              01880020
         DC    AL1(IEQUAL)              EQUAL SIGN IN OPERAND FIELD     01900020
BLNK     DC    AL1(IBLANK)                                              01920020
COML     DC    X'00'                    COMMENTS FIELD LENGTH=0         01940020
LOC      DC    3X'00'                   LOCATION COUNTER                01960020
URS      DC    X'00'                    UNRESOLVED SYMBOL COUNTER=0     01980020
LES      DC    X'00'                                                    02000020
ALWRD    DC    F'0'                     TEMP FULL WORD                  02020020
SAVPTR   DC    F'0'                     TEMP SAVE AREA FOR GRX          02040020
ALITSAVE DS    F                        ADDRESS OF CURRENT LIT IN S. T. 02050025
CON4     DC    H'4'                     NO. OF LIT DC IN SYMBOL TABLE   02060020
         END   DCGTR                                                    02080020
./ ADD NAME=ASMGF7I
F7I      TITLE     'ASMG F7  INITIALIZATION AND I/O SUBROUTINES'        00020021
         ISEQ  73,78                                                    00040021
*./      DELETE    SEQ1=00060020,SEQ2=00140020                          00140022
         COPY      ASMGSET                                              00160020
ASMGF7I  START                                                          00180020
         SPACE 1                                                        00200020
*TITLE- ASMGF7I...PHASE F7 INITIALIZATION AND I/O ROUTINES            * 00220020
*FUNCTION/OPERATION-                                                  * 00240020
*   PERFORMS INITIALIZATION FOR F7.                                   * 00260020
*   CONTAINS I/O ROUTINES USED BY PHASE F7                            * 00280020
*ENTRY POINTS-                                                        * 00300020
*   ASMGF7... PERFORMS INITIALIZATION FUNCTIONS FOR PHASE F7          * 00320020
*   ASMGF7I..  PROVIDES ACCESS TO THE FOLLOWING SUBROUTINES-          * 00340020
*   ENTRY  NAME   FUNCTION                                            * 00360020
*   GTP  (GETPT) POINT ROUTINE FOR INPUT BUFFER                       * 00380020
*   GTM  (GETXTM) GET TEXT AND MOVE TO INPUT AREA                     * 00400020
*   PTX  (PUTXT)  PUT TEXT TO OUTPUT BUFFER                           * 00420020
*   CLT  (CLSTXT) CLOSE TEXT                                          * 00440020
*   RDE  (CRDESD) READ EXTERNAL SYMBOL DICTIONARY                     * 00460020
*   WTE  (CWRESD) WRITE EXTERNAL SYMBOL DICTIONARY                    * 00480020
*   PUTX (PUTXRF) PUT CROSS REFERENCE                                 * 00500020
*   PUTLB(PUTLBT) PUT LITERAL BASE TABLE                              * 00520020
*   SYSO (SYSOUT) SYSTEM OUTPUT                                       * 00540020
*   PHC  (PHCLS)  PHASE CLOSE, BRANCH TO ASMGFI                       * 00560020
*CALLING SEQUENCE-                                                    * 00580020
*   ASMGF7..                                                          * 00600020
*        LINK  DE=(SRR),MF=(E,(1))     I.E. EP=ASMGF7                 * 00620025
*   ASMGF7I ROUTINES..                                                * 00640020
*        L     SRB,CTXTIO(ACT)                                        * 00660020
*        BAL   SRR,NAME(SRB)                                          * 00680020
*              CTXTIO(ACT) CONTAINS THE ADDRESS OF ASMGF7I. 'NAME' IS * 00700020
*              EQUATED (IN FDIMEN MACRO) TO THE DISPLACEMENT, FROM    * 00720020
*              ASMGF7I, OF AN INSTRUCTION OF THE FORM-                * 00740020
*                        B    ENTRY                                   * 00760020
*              WHERE 'ENTRY' IS THE ENTRY POINT OF THE SUBROUTINE     * 00780020
*              SELECTED BY THE SELECTION OF A PARTICULAR 'NAME'.      * 00800020
*INPUT/OUTPUT PARAMETERS-  SEE INDIVIDUAL SUBROUTINES                 * 00820020
*EXTERNAL ROUTINES-                                                   * 00840020
*   THE ADDRESSES OF THE FOLLOWING EXTERNAL ROUTINES ARE PLACED IN THE* 00860020
*   ASSEMBLER CONTROL TABLE (ACT) FOR REFERENCE BY OTHER PHASE 7 ROUT-* 00880020
*   INES-                                                             * 00900020
*      (ROUTINE)        (DECK)         (ACT REFERENCE)                * 00920020
*        ASMGF7E        ASMGF7E         CBRNDA                        * 00940020
*        COM            ASMGF7E         CCOM                          * 00960020
*        CSECT          ASMGF7E         CCSECT                        * 00980020
*        DSECT          ASMGF7E         CDSECT                        * 01000020
*        ENTRY          ASMGF7E         CENTRY                        * 01020020
*        ENTRYS         ASMGF7E         CENTRS                        * 01040020
*        ESWBKR         ASMGF7E         CESWBK                        * 01060020
*        EXTRN          ASMGF7E         CEXTRN                        * 01080020
*        EXTRNS         ASMGF7E         CEXTRS                        * 01100020
*        ORG            ASMGF7E         CORG                          * 01120020
*        QUIT           ASMGF7E         CQUIT                         * 01140020
*        START          ASMGF7E         CSTART                        * 01160020
*        UPC            ASMGF7E         CUPC                          * 01180020
*        ASMGF7D        ASMGF7D         CDCVAL                        * 01200020
*        ASMGF7X        ASMGF7X         CTXGET                        * 01220020
*        ASMGF7N        ASMGF7N         CTESTR                        * 01240020
*        DXD            ASMGF7E         CDXD                          * 01260020
*        STGETR         ASMGF7S         CSTGET                        * 01280020
*        STPUTR         ASMGF7S         CSTPUT                        * 01300020
*        STREFR         ASMGF7S         CSTREF                        * 01320020
*        ASMGF7V        ASMGF7V         CEEVAL                        * 01340020
*        ASMGF7L        ASMGF7L         CLOGER                        * 01360020
*        ASMGF7G        ASMGF7G         CDCGET                        * 01380020
*        VCON           ASMGF7E         CVCDN                         * 01400020
*        STROOM         ASMGF7S         CSTROM                        * 01420020
*   THESE ROUTINES ARE SUBSEQUENTLY REFERENCED VIA THE ACT BY OTHER   * 01440020
*   PHASE F7 ROUTINES                                                 * 01460020
*EXITS-                                                               * 01480020
*   ASMGF7..BRANCH TO ASMGF7C                                         * 01500020
*   ASMGF7I.PHCLS BRANCH TO ASMGFI; OTHER SUBROUTINES RETURN TO CALL- * 01520020
*            ING PROGRAM.                                             * 01540020
*TABLES/WORK AREAS-                                                   * 01560020
*    ASSEMBLER CONTROL TABLE..(SEE ASMGRTA)                           * 01580020
*./      DELETE    SEQ1=01600020,SEQ2=01600020                          01600022
*    F7CT2...FUNCTIONAL ROUTINE BASE/ENTRY ADDRESSES                  * 01620020
*    F7CT3...COMMON SUBROUTINE BASE/ENTRY ADDRESSES                   * 01640020
         EJECT                                                          01660020
TEXTIO   EQU       ASMGF7I                                              01680020
         PRINT     NOGEN               SEE ASMGRTA FOR TABLE LISTING    01700020
         FDIMEN                                                         01720020
         PRINT GEN                                                      01740020
*   REGISTERS EQUATED TO VALUES DEFINED WITHIN FDIMEN                   01760020
GR3      EQU   GRX                      VOLATILE REGISTER               01780020
GR4      EQU   GRY                      VOLATILE REGISTER               01800020
GR5      EQU   GRZ                      VOLATILE REGISTER               01820020
GR12     EQU   GRA                      GRA-GRD ARE USED BY FUNCTIONAL  01840020
GR13     EQU   GRB                      SUBROUTINES...NOT ALTERED BY    01860020
GR14     EQU   GRC                      COMMON SUBROUTINES...           01880020
GR15     EQU   GRD                      FOUR CONTIGUOUS REGISTERS       01900020
         ENTRY     ASMGF7                                               01920020
*        EXTRNS FOR F/7 FUNCTIONAL ROUTINES                             01940020
         EXTRN ASMGF7E       ENTRIES IN EXTERNAL SYMBOL DICTIONARY...   01960020
         EXTRN COM                      'COM' STATEMENTS                01980020
         EXTRN CSECT                    'CSECT' STATEMENTS              02000020
         EXTRN DSECT                    'DSECT'                         02020020
         EXTRN ENTRY                    'ENTRY', ASSIGNMENT MODE        02040020
         EXTRN EXTRN                    'EXTRN' STATEMENT, ASSIGNMENT   02060020
         EXTRN ORG                      'ORG'                           02080020
         EXTRN QUIT                     'QUIT' (GENERATED AFTER 'END')  02100020
         EXTRN START                    'START'                         02120020
         EXTRN UPC                      UNINITIATED PRIVATE CODE        02140020
         EXTRN ASMGF7D                  DC EVALUATION                   02160020
         EXTRN ASMGF7X                  TEXT GET STATEMENT ROUTINE      02180020
         EXTRN ASMGF7N                  TESTRAN ENTRIES                 02200020
         EXTRN DXD                      'DXD' STATEMENT                 02220020
*                                                                       02240020
*                                                                       02260020
*      * EXTRNS FOR F/7 COMMON SUBROUTINES                              02280020
*                                                                       02300020
         EXTRN ASMGF7S                  SYMBOL TABLE PROCESSOR          02320020
         EXTRN STGETR                   GET SYMBOL TABLE ENTRY          02340020
         EXTRN STPUTR                   PUT SYMBOL TABLE ENTRY          02360020
         EXTRN     STREFR               PUT SYMBOL TABLE REFERENCE      02380020
         EXTRN ASMGF7V                  EXPRESSION EVALUATION           02400020
         EXTRN ASMGF7L                  ERROR RECORD GENERATION         02420020
         EXTRN ASMGF7G                  GENERATE LITERAL DC RECORDS     02440020
         EXTRN VCON                     'VCON' PROCESSING               02460020
         EXTRN STROOM                   CHECK SYM TABLE FOR SPACE       02480020
         EXTRN ASMGF7C                  PHASE 7 MAIN LINE CONTROL       02500020
         EXTRN     F7ABEND             ABEND ROUTINE IN ASMGFI          02520020
         EXTRN     SYSO1               OBJECT OUTPUT IN ASMGFI          02540020
         EXTRN     ASMGFI              INTERLUDE PHASE                  02560020
         EJECT                                                          02580020
         USING *,SRB                                                    02600020
*   THIS SERIES OF BRANCHES IS USED TO SELECT THE ENTRY POINT OF THE  * 02620020
*   DESIRED I/O SUBROUTINE.                                           * 02640020
*                                                                     * 02660020
         DC    X'FFFF'                  BASE REFERENCE                  02680020
         B     GTP                      GET POINT SUBROUTINE       D2   02700020
         B     GTM                      GET TEXT AND MOVE          D6   02720020
         B     PTX                      PUT TEXT SUBROUTINE        D10  02740020
         DC        2H'0'                                           D14  02760022
         DS    2H                       PHASE INITIALIZATION       D18  02780020
         B     PHC                      PHASE CLOSE                D22  02800020
         DS        2H                                              D26  02820020
         DS        2H                                              D30  02840020
         B     PUTX                     PUTXRF                     D34  02860020
         B     PUTLB                    PUTLBT                     D38  02880020
         DS    2H                       PUTRLD F/8                 D42  02900020
         DS    2H                       GETLAT F/8                 D46  02920020
         DS    2H                       WTERR F/8                  D50  02940020
         DS    2H                       SYSLST F/8                 D54  02960020
         B     SYSO                     SYSOUT                     D58  02980020
         EJECT                                                          03000020
*TITLE-  GETPT...GET POINT ROUTINE FOR F7                             * 03020020
*FUNCTION-  SUBROUTINE POINTS TO NEXT LOGICAL RECORD OF THE TEXT      * 03040020
*    STREAM IN THE INPUT BUFFER.                                      * 03060020
*INPUT-  NONE                                                         * 03080020
*OUTPUT-  SP1 CONTAINS POINTER TO FIRST (OR ONLY) TEXT SEGMENT,       * 03100020
*                  OR 0, IF END OF FILE WAS READ                      * 03120020
*./      DELETE    SEQ1=03140020,SEQ2=03160020                          03160022
*         CONDITION CODE IS SET TO SP1                                * 03180020
*TABLES/WORK AREAS-                                                   * 03200020
*        IBUFCPT..POINTER TO CURRENT INPUT RECORD                     * 03220022
*        RD1...'NEED NEW DATA' SWITCH                                 * 03240020
*        CS1...'POINTER ADVANCED' SWITCH                              * 03260020
         SPACE 2                                                        03280020
GTP      ST        GR12,SAVE            SAVE REG                        03300022
         L         GR12,IBUFCPT         LOAD POINTER                    03320022
         CLI   RD1,1                    NEW DATA SWITCH SET TO NO DATA  03340020
         BE    GT5                      IF YES GO TO GT5                03360020
         BH    GTA                      IF SET TO NEED-NEW-DATA  GO GTA 03380020
         MVC   RLI(2),0(GR12)           MOVE TO HALFWORD BOUNDARY       03400022
         AH    GR12,RLI                                                 03410022
GT1      LR    SP1,GR12                                                 03420022
         TM    2(GR12),X'08'            CONTINUATION BIT SET            03440022
         BO    GTB                      IF YES, GO GTB                  03460020
*./      DELETE    SEQ1=03480020,SEQ2=03500020                          03500022
         TM    2(GR12),X'80'            LAST REC BIT SET                03520020
         BNZ       GT4                 IF YES, GO GT4                   03540020
*./      DELETE    SEQ1=03560020,SEQ2=03680020                          03680022
GTX      MVI   CS1,1                    SET ADVANCED PTR SWITCH         03700020
         ST        GR12,IBUFCPT         UPDATE POINTER                  03720022
         L         GR12,SAVE            RESTORE GEN REG                 03740022
         LTR   SP1,SP1                  SET CONDITION CODE OF SP1       03760020
         BR    SRR                      EXIT TO USER                    03780020
GT4      MVI   RD1,1                    SET ENTR SW TO NO-DATA          03800020
         B     GTX                      EXIT                            03820020
GT5      SR    SP1,SP1                  EOF-NO DATA EXIT                03840020
         B     GTX                      EXIT                            03860020
GTA      MVI   RD1,0                    RESET NEED DATA SWITCH          03880020
         BAL   GR4,TEXTIN               READ DATA FILE                  03900022
         L         GR12,RDADD          RESET POINTER                    03920022
         B         GT1                 CONTINUE                         03940022
*./      DELETE    SEQ1=03960020,SEQ2=04480020                          04480022
GTB      MVI       RD1,2               NEED MORE DATA SW                04500022
         B     GTX                      EXIT                            04520020
         EJECT                                                          04540020
*TITLE-  GETXTM...GET TEXT AND MOVE                                   * 04560020
*FUNCTION-  SUBROUTINE TRANSFERS A LOGICAL RECORD FROM THE INPUT TEXT * 04580020
*    STREAM TO AN AREA SPECIFIED BY THE USER.                         * 04600020
*INPUT-  SP1 CONTAINS POINTER TO USER'S WORK AREA                     * 04620020
*OUTPUT- SP1 REMAINS UNCHANGED, (IF A RECORD WAS AVAILABLE)           * 04640022
*    OR  SP1 CONTAINS 0, INDICATING END OF FILE HAS BEEN READ         * 04660020
*TABLES/WORK AREAS-                                                   * 04680020
*        ICT...INPUT CONTROL TABLE                                    * 04700020
*        CS1...'POINTER ADVANCED' SWITCH                              * 04720020
*        RD1...'NEED NEW DATA' SWITCH                                 * 04740020
         SPACE 2                                                        04760020
GTM      CLI   CS1,0                    INPUT PTR ADVANCED              04780020
         BE    GTM7                     IF NO, TO GTM7                  04800020
GTM1     ST        GR12,SAVE            SAVE GEN REG                    04820022
         L         GR12,IBUFCPT         LOAD POINTER                    04840022
         MVI   CS1,0                    RESET GETPT CNTRL SWITCH        04860020
         MVC   RLI(2),0(GR12)           MOVE TO HALFWORD BOUNDARY       04880020
         LH    GR3,RLI                                                  04900020
*./      DELETE    SEQ1=04920020,SEQ2=05060020                          05060022
         CLI   CS4,1                    DESTINATION OUTPUT BUFFER       05080020
         BE    GTM5                     IF YES, TO GTM5                 05100020
         LR    GR2,SP1                                                  05120020
GTM3     NI    2(GR12),X'77'            RESET CONT AND LAST FLAG        05140020
         LH    GR3,RLI                  RLI                             05160022
         LR    GR1,GR12                 PTR                             05180022
         BAL   GR4,MOVE                 MOVE TO (GR2)                   05200020
*./      DELETE    SEQ1=05220020,SEQ2=05340020                          05340022
         L         GR12,SAVE            RESTORE REG                     05360022
         LTR   SP1,SP1                  SET SP1 CC                      05380020
         BR    SRR                      EXIT                            05400020
GTM5     BAL   GR5,OBM                  LOC ROOM IN OUTPUT BUFFER       05420020
         LR    SP1,GR2                  SET SP1 TO DEST PTR             05440020
         MVI   CS4,0                    RESET PUTEXT SWITCH             05460020
         B     GTM3                     RETURN TO MOVE DATA             05480020
GTM7     ST    SP1,DPT                  SAVE DEST PTR                   05500020
         ST    SRR,RET                  SAVE RETURN POINTER             05520020
         BAL   SRR,GTP                  GET POINTER IN INPUT BUFF       05540020
         L     SRR,RET                                                  05560020
         BCR   8,SRR                    EOF READ RETURN                 05580020
         L     SP1,DPT                  RESTORE DEST PTR                05600020
         B     GTM1                     RETURN TO MOVE                  05620020
         EJECT                                                          05640020
*TITLE-  PUTXT... PUT TEXT                                            * 05660020
*FUNCTION-  SUBROUTINE MOVES A LOGICAL RECORD FROM THE INPUT BUFFERS  * 05680020
*   OR FROM AN AREA SPECIFIED BY THE USER, TO THE OUTPUT BUFFER       * 05700020
*INPUT-  SP1 CONTAINS EITHER A POINTER TO THE USER'S WORK AREA, OR 0, * 05720020
*   INDICATING THE RECORD IS CONTAINED IN AN INPUT BUFFER.            * 05740020
*OUTPUT-  SP1 CONTAINS POINTER TO USER'S WORK AREA (UNCHANGED),       * 05760020
*                  OR POINTER TO RECORD WITHIN OUTPUT BUFFER (IF      * 05780020
*                      ENTRY WAS WITH SP1=0)                          * 05800020
*                  OR 0, IF END OF FILE WAS READ                      * 05820020
*NOTE-                                                                * 05840020
*   USES OBM FOR OUTPUT BUFFER MANAGEMENT                             * 05860020
*   BRANCHES TO GTM IF THE RECORD TO BE MOVED IS CONTAINED IN AN INPUT* 05880020
*        BUFFER.                                                      * 05900020
         SPACE 2                                                        05920020
PTX      LTR   SP1,SP1                  IS RECORD FROM INPUT BUFFER     05940020
         BZ    PT1                      IF YES, TO PT1                  05960020
         MVC   RLI(2),0(SP1)            MOVE RLI TO HALFWORD BOUNDARY   05980020
         LH    GR3,RLI                  BYTE COUNT                      06000020
         BAL   GR5,OBM                  OUTPUT BUFFER MANAGEMENT        06020020
         LR    GR1,SP1                  SOURCE PTR                      06040020
         BAL   GR4,MOVE                 MOVE RECORD                     06060020
         BR    SRR                      EXIT                            06080020
PT1      MVI   CS4,1                    SET PUTXT CONTROL SWITCH        06100020
         B     GTM                      GO TO GTM                       06120020
         EJECT                                                          06140020
*TITLE-  CLSTXT...CLOSE TEXT FILE                                     * 06160020
*FUNCTIONS-                                                           * 06180020
*   'TCLOSE'S INPUT TEXT FILE                                         * 06200020
*   INSERTS END OF FILE SYMBOL INTO OUTPUT TEXT STREAM                * 06220020
*   'TCLOSE'S OUTPUT TEXT FILE                                        * 06240020
*INPUT-  NONE                                                         * 06260020
*OUTPUT- NONE                                                         * 06280020
*./      DELETE    SEQ1=06300020,SEQ2=06320020                          06320022
*NOTE-                                                                * 06340020
*   BRANCHES TO OBM AND TEXTOT                                        * 06360020
         SPACE 2                                                        06380020
CLT      L         GR3,BLKSIZE          BLOCK LENGTH                    06400020
         BAL   GR5,OBM                  OUTPUT BUFFER MANAGEMENT        06420020
         MVC   0(4,GR2),EOF             EMBED AN EOF                    06440020
*./      DELETE    SEQ1=06460020,SEQ2=06460020                          06460021
         BAL   GR4,TEXTOT               TEXT OUTPUT SUBROUTINE          06480020
         SPACE 2                                                        06500020
*TCLOSE TEXT FILE---BUFF INTERFACE                                      06520020
         SPACE                                                          06540020
*./      DELETE    SEQ1=06560020,SEQ2=06560020                          06560022
*./      DELETE    SEQ1=06580020,SEQ2=06640020                          06640021
         L         GR1,BUFFPT(0,ACT)   TCLOSE INPUT                     06660020
         CNOP      2,4                                                  06680020
         BALR      GR0,GR1                                              06700020
         DC        A(24,4,1)                                            06720020
         L         GR1,BUFFPT(0,ACT)   TCLOSE OUTPUT                    06740020
         CNOP      2,4                                                  06760020
         BALR      GR0,GR1                                              06780020
         DC        A(24,8,1)                                            06800020
         BR    SRR                      EXIT                            06820020
EOF      DC    4X'7F'                   END OF TEXT FLAG                06840020
         EJECT                                                          06860020
*TITLE-  OBM...OUTPUT BUFFER MANAGEMENT                               * 06880020
*FUNCTION-                                                            * 06900020
*   WHEN THE BUFFER IS FILLED, IT IS WRITTEN OUT (BY TEXTOT).         * 06920022
*./      DELETE    SEQ1=06940020,SEQ2=06940020                          06940022
*INPUT-  GR3 CONTAINS LENGTH OF CURRENT LOGICAL RECORD                * 06960020
*OUTPUT-  GR2 CONTAINS ADDRESS OF NEXT AVAILABLE BUFFER LOCATION      * 06980020
*./      DELETE    SEQ1=07000020,SEQ2=07000020                          07000022
         SPACE 1                                                        07020020
OBM      STM   GR12,GR14,OBSAVE                                         07040020
         LM    GR12,GR14,OBUFREM                                        07060021
         CR    GR3,GR12                 RLI LTE OCT+2                   07080020
         BC    12,OB2                   YES TO OB2                      07100020
         L         GR12,BLKSIZE         BLOCK BYTE COUNT TO GR12        07120020
         OI    2(GR13),X'80'            SET LAST RECORD BIT             07140021
*./      DELETE    SEQ1=07160020,SEQ2=07160020                          07160021
         BAL   GR4,TEXTOT               WRITE UTILITY FILE              07180020
         L     GR14,WRADD              RESET NEXT RECORD POINTER        07200021
*./      DELETE    SEQ1=07220020,SEQ2=07240020                          07240021
OB2      SR    GR12,GR3                 DEC BYTE COUNT BY RLI           07260020
         LR    GR13,GR14                NEXT OUTPUT LOCATION            07280020
         AR    GR14,GR3                 ADVANCE NEXT OUT PTR            07300020
         STM   GR12,GR14,OBUFREM        PUT AWAY RESULTS                07320021
         LR    GR2,GR13                 CALLER GETS NEXT RECORD POSIT'N 07340020
         LM    GR12,GR14,OBSAVE                                         07360020
         BR    GR5                      EXIT                            07380020
         EJECT                                                          07400020
* SUBROUTINE TO MOVE ANY SIZE BLOCK FROM (GR1) TO (GR2)                 07420020
MOVE     SH    GR3,MAXCT                NO. OF BYTES GT 256             07440020
         BP    M1                       IF YES, TO M1                   07460020
         LA    GR3,255(GR3)             DESCREASE LITERAL COUNT BY 1    07480020
         EX    GR3,M2                   EXECUTE MVC                     07500020
         LA    GR3,1(GR3)               INC COUNT TO LITERAL COUNT      07520020
         AR    GR1,GR3                  ADVANCE SOURCE POINTER          07540020
         AR    GR2,GR3                  ADVANCE DESTINATION POINTER     07560020
         BR    GR4                      RETURN TO CALLER                07580020
M1       MVC   0(256,GR2),0(GR1)        MOVE 256 BYTES                  07600020
         LA    GR1,256(GR1)             ADVANCE SOURCE PTR BY 256       07620020
         LA    GR2,256(GR2)             ADVANCE DESTINATION PTR BY 256  07640020
         B     MOVE                     RETURN TO MOVE                  07660020
M2       MVC   0(0,GR2),0(GR1)                                          07680020
         EJECT                                                          07700020
*TITLE-  PUTXRF...PUT CROSS-REFERENCE RECORD                          * 07720020
*FUNCTION-  SUBROUTINE PROVIDES AN ADDRESS AT WHICH A CROSS-REFERENCE * 07740020
*   RECORD MAY BE BUILT.  AS THE CROSS-REFERENCE BUFFER IS FILLED,    * 07760020
*   PUTXRF WRITES THE BUFFER ONTO THE OVERFLOW FILE.                  * 07780020
*INPUT-  NONE                                                         * 07800020
*OUTPUT-  SP1 CONTAINS THE ADDRESS AT WHICH THE NEXT RECORD MAY BE    * 07820020
*   BUILT.                                                            * 07840020
         SPACE 1                                                        07860020
PUTX     L     SP1,XRFLRP               LAST LOGICAL REC POSITION       07880020
         LA    SP1,8(0,SP1)            ADVANCE PTR TO NEXT LOGICAL REC  07900020
         MVI   NULLXRF,0                TURN OFF NULL XRF SWITCH        07920020
         CL    SP1,XRFLBA               PTR EXCEED BUFFER               07940020
         BL    PUTX1                    NO TO PUTX1                     07960020
         BAL   SP1,WROF                 WRITE OVERFLOW FILE             07980020
         LA    SP1,XRFBUF+1             BUFFER POINTER                  08000020
PUTX1    ST    SP1,XRFLRP               SAVE PTR                        08020020
         BR    SRR                      EXIT PUTX                       08040020
XRFLRP   DC    A(XRFBUF+1-8)            XRF LOGICAL RECORD POINTER      08060020
XRFLBA   DC    A(XRFBUF+L'XRFBUF)       XRF LAST BYTE ADDRESS+1         08080020
NULLXRF  DC    X'FF'                    NULL XRF SWITCH                 08100020
         EJECT                                                          08120020
*TITLE-  PUTLBT...PUT LITERAL BASE TABLE                              * 08140020
*FUNCTION-  SUBROUTINE PROVIDES AN ADDRESS AT WHICH  LITERAL BASE     * 08160020
*   TABLE RECORD MAY BE BUILT.                                        * 08180020
*INPUT-NONE                                                             08200020
*OUTPUT-  SP1 CONTAINS ADDRESS OF NEXT AVAILABLE LOCATION IN SYMBOL   * 08220020
*              TABLE.                                                   08240020
PUTLB    ST        SRR,IOSAVE          SAVE RETURN ADDRESS              08260020
         LA        SP1,23              MAX LENGTH OF LBT/LAT ENTRY      08280020
         L         SRB,=A(STROOM)      CHECK ROOM IN SYMBOL TABLE       08300020
         DROP      SRB                                                  08320020
         BALR      SRR,SRB                                              08340020
         USING     *,SRR                                                08360020
         DS        2H                                                   08380020
         L         SRB,=A(TEXTIO)                                       08400020
         USING     TEXTIO,SRB                                           08420020
         DROP      SRR                                                  08440020
         L         SP1,CTSYMP(0,ACT)   CALCULATE ADDRESS FOR ENTRY      08460020
         A         SP1,CFREEP(0,ACT)                                    08480020
         LA        SP1,3(0,SP1)        ALIGN F                          08500020
         N         SP1,=F'-4'                                           08520020
         L         SRR,LBPTR           CHAIN TO LAST ENTRY              08540020
         ST        SP1,16(0,SRR)                                        08560020
         ST        SP1,LBPTR                                            08580020
         LA        SRR,20(0,SP1)       CALCULATE CFREEP                 08600020
         S         SRR,CTSYMP(0,ACT)                                    08620020
         ST        SRR,CFREEP(0,ACT)                                    08640020
         LA        SP1,3(0,SP1)        GO PAST UNUSED PART              08660020
         L         SRR,IOSAVE          RESTORE RETURN ADDRESS           08680020
         BR        SRR                 RETURN                           08700020
LBPTR    DS        F                   POINTS TO LAST LBT ENTRY         08720020
         EJECT                                                          08740020
*TITLE-  SYSO...SYSTEM OUTPUT                                         * 08760020
*FUNCTION-  SUBROUTINE OUTPUTS 80-CHARACTER LOGICAL RECORDS TO SYSGO  * 08780020
*   AND/OR SYSPUNCH DATA SETS.                                          08800020
*INPUT-  SP1 CONTAINS ADDRESS OF 81-BYTE LOGICAL RECORD...THE FIRST   * 08820020
*   BYTE CONTAINS AN INTERNAL CONTROL CHARACTER.                      * 08840020
*   CTPCH1(ACT) CONTAINS PUNCH/LOAD OPTION BITS                       * 08860020
*OUTPUT- NONE                                                         * 08880020
         SPACE 1                                                        08900020
SYSO     STM       SRR,FRB,IOSAVE      SAVE REGISTERS                   08920020
         L         FRB,=A(SYSO1)       GO TO SYSO1 IN ASMGFI            08940020
         BALR      SRR,FRB                                              08960020
         LM        SRR,FRB,IOSAVE                                       08980020
         BR        SRR                                                  09000020
         EJECT                                                          09020020
*TITLE-  PHCLS...PHASE CLOSE                                          * 09040020
*FUNCTION-  SUBROUTINE CLOSES  SYSUT1 AND SYSUT2 DATA SETS.           * 09060020
*   END OF FILE LABELS ARE INSERTED INTO XREF STREAM AND THE BUFFER   * 09080020
*   IS WRITTEN ONTO THE OVERFLOW FILE.                                * 09100020
*         THE FOLLOWING PARAMETERS ARE INSERTED INTO THE I/O PORTION  * 09120020
*   OF THE ASSEMBLER CONTROL TABLE:                                   * 09140020
*       CTCXRF..COUNT OF XREF TABLE BLOCKS                            * 09160020
*       CTDNWP..POINTER TO NEXT SEQUENTIAL FILE POSITION ON SYSUT3    * 09180020
*EXIT- BRANCH TO ASMGFI (INTERLUDE)                                   * 09200020
         SPACE 1                                                        09220020
PHC      BAL   SRR,CLT                  TCLOSE TEXT                     09240020
         CLI   NULLXRF,0                CLOSE XRF FILE UNLESS           09260020
         BNE   PHC11                    NULL.                           09280020
         BAL   SRR,PUTX                 PUT XRF                         09300020
         MVC   0(4,SP1),EOF             EMBED EOF                       09320020
         BAL   SP1,WROF                 WRITE OVERFLOW FILE             09340020
PHC11    MVC   CTCXRF(2,ACT),XRFCNT     XRF BLOCK COUNT                 09360020
         L         SP1,LBPTR           PLACE END OF CHAIN MARKER        09380020
         SR        SP2,SP2                                              09400020
         ST        SP2,16(0,SP1)                                        09420020
         L         SRB,=A(ASMGFI)      GO TO ASMGFI                     09440020
         BR        SRB                                                  09460020
*./      DELETE    SEQ1=09480020,SEQ2=09800020                          09800022
         EJECT                                                          09820020
*   TEXT I/O INTERFACE WITH BUFF ROUTINE                              * 09840020
*ENTRY POINTS-                                                        * 09860020
*   TEXTOT...TEXT OUTPUT                                              * 09880020
*   TEXTIN...TEXT INPUT                                               * 09900020
*FUNCTION-  SUBROUTINE WRITES OR READS TEXT THROUGH BUFF ROUTINE.     * 09920022
*./      DELETE    SEQ1=09940020,SEQ2=09960020                          09960022
         SPACE 1                                                        09980020
TEXTOT   ST        GR0,IOSAVE          SAVE GR0                         10000020
*./      DELETE    SEQ1=10020020,SEQ2=10140020                          10140021
         L         GR1,BUFFPT(0,ACT)   DO A WRITE ON OUTPUT             10160020
         CNOP      2,4                                                  10180020
         BALR      GR0,GR1                                              10200020
         DC        A(8,8)                                               10220020
WRADD    DS        F                                                    10240020
WRLGTH   DS        F                                                    10260020
         L         GR1,BUFFPT(0,ACT)   DO A CHECK ON OUTPUT             10270021
         CNOP      2,4                                                  10280021
         BALR      GR0,GR1                                              10290021
         DC        A(28,8)                                              10295021
         L         GR0,IOSAVE          RESTORE GR0                      10300020
         BR        GR4                 EXIT                             10320020
*                                                                       10340022
TEXTIN   ST        GR0,IOSAVE          SAVE GR0                         10360022
         L         GR1,BUFFPT(0,ACT)   DO A READ ON INPUT               10380020
         CNOP      2,4                                                  10400020
         BALR      GR0,GR1                                              10420020
         DC        A(4,4)                                               10440020
RDADD    DS        F                                                    10460020
         L         GR1,BUFFPT(0,ACT)   DO A CHECK ON INPUT              10470022
         CNOP      2,4                                                  10480022
         BALR      GR0,GR1                                              10490022
         DC        A(28,4,0)                                            10495022
         L         GR0,IOSAVE          RESTORE GR0                      10500020
         BR        GR4                 EXIT                             10520020
*./      DELETE    SEQ1=10540020,SEQ2=10540020                          10540022
*./      DELETE    SEQ1=10560020,SEQ2=10560020                          10560021
         EJECT                                                          10580020
*TITLE-  WROF...WRITE OVERFLOW FILE                                   * 10600020
*FUNCTION-  SUBROUTINE PERFORMS 'WRITE' AND 'CHECK'                   * 10620022
*   FUNCTIONS REQUIRED BY PUTXRF AND PHCLS SUBROUTINES                * 10640022
*INPUT-  GR1 CONTAINS ADDRESS OF OUTPUT TABLE                         * 10660020
*OUTPUT-  BLOCK COUNT IN XRFCNT UPDATED                               * 10680022
*./      DELETE    SEQ1=10700020,SEQ2=10700020                          10700022
         SPACE 1                                                        10720020
WROF     STM   GR0,GR1,IOSAVE                                           10740020
         L         GR1,BUFFPT(0,ACT)   DO A WRITE ON SYSUT1             10760020
         CNOP      2,4                                                  10780020
         BALR      GR0,GR1                                              10800020
         DC        A(8,0,XRFBUF,L'XRFBUF)                               10820020
         L         GR1,BUFFPT(0,ACT)   CHECK IT                         10840020
         CNOP      2,4                                                  10860020
         BALR      GR0,GR1                                              10880020
         DC        A(28,0)                                              10900020
         LH     GR1,XRFCNT              BLOCK COUNT                     10920020
         LA     GR1,1(GR1)              INCREMENT FOR LAST WRITE        10940020
         STH    GR1,XRFCNT              SAVE BLOCK COUNT                10960020
         LM    GR0,GR1,IOSAVE                                           10980020
         BR    SP1                      EXIT WROF                       11000020
*                                                                       11020020
XRFCNT   DC        H'0'                NUMBER OF XREF BLOCKS            11040020
         EJECT                                                          11060020
*        I/O ROUTINE COMMUNICATIONS FLAGS                             * 11080020
CS1      DC    X'00'               INPUT POINTER ADVANCED SWITCH        11100020
*                                  '00'=TEXT INPUT POINTER NOT READY    11120020
CS4      DC    X'00'               TEXT DESTINATION SWITCH              11140020
*                                  '01'=RECORD GOES TO OUTPUT BUFFER    11160020
RD1      DC    X'02'               NEW DATA SWITCH                      11180020
*                                  '00'=RECORD IN CURRENT BUFFER        11200020
*                                  '01'=END OF DATA                     11220020
*                                  '02'=NEED MORE DATA                  11240022
*./      DELETE    SEQ1=11260020,SEQ2=11320020                          11320022
MAXCT    DC    H'256'              MAX COUNT ALLOWED IN AN 'MVC'        11340020
  SPACE 5                                                               11360020
         LTORG                                                          11380020
         DROP  SRB                                                      11400020
         DS    0D                                                       11420020
         EJECT                                                          11440020
*TITLE- ASMGF7...F7 INITIALIZATION                                    * 11460020
*FUNCTION-                                                            * 11480020
*   OBTAIN AND ALLOCATE MAIN STORAGE FOR TEXT I/O BUFFERS, SYMBOL     * 11500020
*   TABLE, ETC.                                                       * 11520020
*   MOVE EXTRN/ADCON POINTERS,DEFINED IN F7CT2 AND F7CT3 TABLES, INTO * 11540020
*   ASSEMBLER CONTROL TABLE                                             11560020
*ENTRY- TO ASMGF7, VIA 'LINK' FROM RTA                                * 11580020
*INPUT-  GEN. REG. ACT CONTAINS ADDRESS OF ASSEMBLER CONTROL TABLE    * 11600020
*OUTPUT-  GEN. REG. 'ACT' UNCHANGED FROM VALUE AT ENTRY               * 11620020
*        GEN. REG. CRB CONTAINS ADDRESS OF ASMGF7C (F7 MAIN-LINE CON- * 11640021
*        TROL)                                                        * 11660020
*EXIT-  BRANCH TO ASMGF7C                                             * 11680020
         SPACE 3                                                        11700020
*BUFFERS WHICH OVERLAP VOLATILE INITIALIZATION LOGIC                    11720020
         SPACE                                                          11740020
XRFBUF   DS    XL(1+8*200)              XRF OUTPUT BUFFER               11760020
         SPACE     2                                                    11780022
IBUFCPT  DS        F         INPUT BUFFER CURRENT RECORD POINTER        11800022
*./      DELETE    SEQ1=11820020,SEQ2=11920020                          11920022
*./      DELETE    SEQ1=11940020,SEQ2=11980020                          11980021
OBUFREM  DS        F         COUNT OF BYTES REMAINING IN OUTPUT BUFFER  12000021
OBUFCPT  DS        F         POINTER TO CURRENT LOGICAL REC IN OUT BUFF 12020021
OBUFNPT  DS        F         NEXT AVAILABLE OUTPUT BUFFER LOCATION      12040021
         SPACE 1                                                        12060020
BLKSIZE  DS        F                   TEXT BLKSIZE                     12080020
RLI      DS    1H                  RECORD LENGTH..ALIGNED FOR CALC'LTNS 12100020
*./      DELETE    SEQ1=12120020,SEQ2=12120020                          12120022
RET      DS    1F                  RETURN REGISTER STORAGE              12140020
DPT      DS    1F                  GETXTM DESTINATION STORAGE           12160020
SAVE     DS        F               SUBROUTINE REGISTER SAVE AREA        12180022
*                                  GETPT AND GETXTM SAVE HERE           12200020
OBSAVE   DS    3F                  OBM ROUTINE REG. SAVE AREA           12220020
IOSAVE   DS        4F                   ASMGF7I I/O ROUTINES SAVE HERE  12240021
         ORG   XRFBUF             OVERLAP..CODE OK UNTIL BUFFERS FILL   12260020
         DC    X'07'                    XRF TYPE CODE.                  12280020
         SPACE 10                                                       12300020
ASMGF7   ST        14,CTMRSRTN(ACT)                                     12320020
         BALR  SRB,0                                                    12340020
         USING *,SRB                                                    12360020
         ENTRYOUT  F7                                                   12380020
         L     SRB,=A(TEXTIO)                                           12400020
         USING TEXTIO,SRB                                               12420020
*./      DELETE    SEQ1=12440020,SEQ2=12580020                          12580026
         MVI       CTLINECT+3(ACT),1   RESET LINE COUNTER.              12600020
         SPACE 5                                                        12620020
         LA        GR2,CTLBTP-16(0,ACT) SET LBPTR                       12640020
         ST        GR2,LBPTR                                            12660020
*COMPUTE MAIN STORAGE REQUIREMENTS AND ISSUE SHRINK.                    12680020
*TEXT BLOCKSIZE IS THAT SET BY F1 AND PASSED ON BY F3.                  12700020
         SPACE                                                          12720020
PR13A    LH    GR2,CTXLEN(ACT)          FIND TEXT BLOCK SIZE            12740020
         LR        GR3,GR2                                              12760020
*./      DELETE    SEQ1=12780021,SEQ2=12780021                          12780022
         LA        GR2,MIN(GR2,GR2)    BLOCK*2 + ADDITIONAL MIN REQ     12800022
         ST    GR2,STGREQ               TOTAL MINIMUM STORAGE REQUIRED  12820020
         L         GR1,BUFFPT(0,ACT)   ISSUE SHRINK CALL                12840020
         CNOP      2,4                                                  12860020
         BALR      GR0,GR1                                              12880020
         DC        A(36)                                                12900020
STGREQ   DS        F                                                    12920020
STGOT    DS        F                                                    12940020
         CLI       STGOT,X'FF'         TEST IF ENOUGH CORE              12960020
         L         FRB,=A(F7ABEND)     ABEND IF NOT                     12980020
         BCR       8,FRB                                                13000020
         SPACE                                                          13020020
*ALLOCATE BUFFERS COMMON TO F7,FI,F8.(SHRINK ACQUIRED)                  13040020
*        INSERT POINTERS INTO ASSEMBLER CONTROL TABLE                 * 13060020
         SPACE                                                          13080020
         L     GR1,STGOT                GETMAIN STORAGE PTR             13100020
         ST    GR1,CESIOA(0,ACT)       SAVE FOR F8 TO RELEASE           13120020
         ST        GR3,WRLGTH          BLOCKSIZE                        13140020
         ST        GR3,BLKSIZE                                          13160020
         ST        GR1,WRADD           OUTPUT BUFFER ADDRESS            13180021
         ST        GR1,OBUFNPT         INITIALIZE POINTER FOR 1ST REC   13200021
*./      DELETE    SEQ1=13220020,SEQ2=13240020                          13240021
         ST        GR3,OBUFREM         INITIALIZE NUMBER OF BYTES LEFT  13260021
         AR        GR1,GR3             INPUT BUFFER                     13280020
         ST        GR1,RDADD            INPUT BUFFER ADDRESS            13290027
         ST    GR1,CTXIO1(,ACT)         I-O BUFFER 1 IN ACT             13300027
         AR    GR1,GR3                  STEP PAST SECOND BUFFER         13310027
         ST    GR1,CTFVEVAL(,ACT)       START OF F7V/F8V TERMS WORK     13320027
         LA    GR1,FVEVAL(,GR1)         END OF F7V/F8V TERMS WORK       13330027
         LA    SP2,24*2                 2*(MAX-1) NUMBER OF TERMS       13340027
         LA    CRB,10                   MAX-1 NUMBER OF LEVELS OF '('   13350027
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q                  13360027
         BO    EXTENEV                  BRANCH IF YES                   13370027
         LA    SP2,15*2                 2*(MAX-1) NUMBER OF TERMS       13380027
         LA    CRB,4                    MAX-1 NUMBER OF LEVELS OF '('   13390027
EXTENEV  DS    0H                                                       13400027
         STH   SP2,CTTERMC(,ACT)        PASS BACK NUMBER OF TERMS       13410027
         STH   CRB,CTPARENC(,ACT)       PASS BACK LEVEL OF PARENS       13420027
         ST    GR1,CTXOFP(,ACT)         POSITIVE OPERAND ADDR     V7A23 13428028
         ST    GR1,CTERRP(,ACT)         ERROR BUFFER PTR                13430027
         LA    GR1,ERRBUF(GR1)          55-BYTE ERROR BUFFER            13440020
         ST    GR1,CTESRP(ACT)          ESD SEGMENT RESIDENCE TABLE PTR 13460020
         ST    GR1,CTESRB(ACT)          WILL LATER GET ESD SEG RES BASE 13480020
         LA    GR1,ESDSEGR(GR1)         ROOM FOR ESD SEG RES TABLE      13500020
         ST    GR1,CTSYMP(ACT)          SYMBOL TABLE PTR                13520020
         LA        GR1,FASH(0,GR1)     TOP OF HASH TABLE                13540020
         ST    GR1,CTESDP(ACT)          ESD BUFFER PTR                  13560020
         L     SP2,CTESRP(ACT)          FIND WHERE TO PUT ESD SEG RES.. 13580020
         ST    GR1,0(SP2)               BASE, AND PUT IT THERE          13600020
         LA        GR1,ESDSEG+MINSYM(0,GR1) TOP OF GOTTEN CORE          13620020
         ST        GR1,CESIOB(0,ACT)                                    13640020
*        SET SYMBOL TABLE GROW INCREMENT                                13643021
         L         GR1,=V(STSHLEN)     ADDRESS OF WORD TO HOLD LENGTH   13646021
         SRL       GR3,2               .25 * UT2&3 BLKSIZE              13649021
         N         GR3,=X'FFFFFFF8'    ROUND TO DOUBLE WORDS LONG       13652021
         ST        GR3,0(0,GR1)        PLACE IN ASMGF7S                 13655021
         SPACE 4                                                        13660020
* MOVE EXTRN/ADCON POINTERS TO CONTROL TABLE                            13680020
*                                                                       13700020
         MVC   CT2(CT2C*4,ACT),F7CT2   FUNCTIONAL ROUTINES              13720020
         MVC   CT3(CT3C*4,ACT),F7CT3   COMMON SUBROUTINES               13740020
*                                                                       13760020
* CLEAR HASH TABLE AND FIRST ENTRY OF FIRST ESD SEGMENT.                13780020
*                                                                       13800020
         MVI       ESDSEGR(SP2),0                                       13820020
         MVC       ESDSEGR+1(255,SP2),ESDSEGR(SP2)                      13840020
         MVC       ESDSEGR+256(256,SP2),ESDSEGR(SP2)                    13860020
         MVC       ESDSEGR+512(256,SP2),ESDSEGR(SP2)                    13880020
         MVC       ESDSEGR+768(208,SP2),ESDSEGR(SP2)              V7A19 13900028
*                                                                       13920020
         L     CRB,=A(ASMGF7C)          PASS CONTROL TO AC7MLC          13940020
         BR    CRB                      AND TEXT PROCESSING WILL BEGIN  13960020
         SPACE 5                                                        13980020
         LTORG                                                          14000020
         SPACE                                                          14020020
FVEVAL   EQU       224                 F7V/F8V TERM EVALUATION AREA     14030027
ERRBUF   EQU       56                  ERROR BUFFER                     14040020
ESDSEGR  EQU       96                  ESD RESIDENT SEGMENT POINTER TAB 14060020
LASH     EQU       31                  LITERAL HASH (28) + OPSYN PTR    14080023
HASH     EQU       3*307+LASH          HASH TABLE                       14100020
FASH     EQU       HASH/8*8+8          DOUBLE ALIGNED HASH              14120020
ESDSEG   EQU       256                 ESD SEGMENT                      14140020
MINSYM   EQU       2048-ESDSEG         MIN SYMBOL TABLE SIZE            14160020
MIN      EQU       FVEVAL+ERRBUF+ESDSEGR+FASH+ESDSEG+MINSYM             14180027
         EJECT                                                          14200020
*... ADCON DEFINITION FOR PHASE F7...THESE CONSTANTS ARE MOVED INTO   * 14220020
*    THE ASSEMBLER CONTROL TABLE DURING INITIALIZATION PORTION OF     * 14240020
*    ASMGF7I.                                                         * 14260020
*    CBRNDA, CCOM, CCSECT, ETC. ARE EQUATED (IN FDIMEN DECK, SEE LIST-* 14280020
*    ING IN ASMGRTA) TO DISPLACEMENT OF ADCONS RELATIVE TO ADDRESS OF * 14300020
*    ASSEMBLER CONTROL TABLE                                          * 14320020
         SPACE                                                          14340020
******** F7CT2 - FUNCTIONAL ROUTINE BASE/ENTRY ADDRESSES ************** 14360020
*                                                                       14380020
F7CT2    DS    0F                                                       14400020
*                                                                       14420020
         ORG   F7CT2-CT2+CBRNDA    CBRNDA EQU CT2+00 IN FDIMEN          14440020
         DC    A(ASMGF7E)                                               14460020
         ORG   F7CT2-CT2+CCOM                                           14480020
         DC    A(COM)                                                   14500020
         ORG   F7CT2-CT2+CCSECT                                         14520020
         DC    A(CSECT)                                                 14540020
         ORG   F7CT2-CT2+CDSECT                                         14560020
         DC    A(DSECT)                                                 14580020
         ORG   F7CT2-CT2+CENTRY                                         14600020
         DC    A(ENTRY)                                                 14620020
         ORG   F7CT2-CT2+CEXTRN                                         14640020
         DC    A(EXTRN)                                                 14660020
         ORG   F7CT2-CT2+CORG                                           14680020
         DC    A(ORG)                                                   14700020
         ORG   F7CT2-CT2+CQUIT                                          14720020
         DC    A(QUIT)                                                  14740020
         ORG   F7CT2-CT2+CSTART                                         14760020
         DC    A(START)                                                 14780020
         ORG   F7CT2-CT2+CUPC                                           14800020
         DC    A(UPC)                                                   14820020
         ORG   F7CT2-CT2+CDCVAL                                         14840020
         DC    A(ASMGF7D)                                               14860020
*./      DELETE    SEQ1=14880020,SEQ2=14900020                          14900022
         ORG   F7CT2-CT2+CTXGET                                         14920020
         DC    A(ASMGF7X)                                               14940020
         ORG   F7CT2-CT2+CTESTR                                         14960020
         DC    A(ASMGF7N)                                               14980020
         ORG   F7CT2-CT2+CDXD                                           15000020
         DC    A(DXD)                                                   15020020
*                                                                       15040020
         ORG   F7CT2+CT2C*4                                             15060020
         EJECT                                                          15080020
******** F7CT3 - COMMON SUBROUTINE BASE/ENTRY ADDRESSES *************** 15100020
*                                                                       15120020
F7CT3    DS    0F                                                       15140020
*                                                                       15160020
         ORG   F7CT3-CT3+CTXTIO                                         15180020
         DC    A(TEXTIO)                                                15200020
         ORG   F7CT3-CT3+CSTGET                                         15220020
         DC    A(STGETR)                                                15240020
         ORG   F7CT3-CT3+CSTPUT                                         15260020
         DC    A(STPUTR)                                                15280020
         ORG   F7CT3-CT3+CEEVAL                                         15300020
         DC    A(ASMGF7V)                                               15320020
         ORG   F7CT3-CT3+CLOGER                                         15340020
         DC    A(ASMGF7L)                                               15360020
         ORG   F7CT3-CT3+CDCGET                                         15380020
         DC    A(ASMGF7G)                                               15400020
         ORG   F7CT3-CT3+CVCON                                          15420020
         DC    A(VCON)                                                  15440020
         ORG   F7CT3-CT3+CSTROM                                         15460020
         DC    A(STROOM)                                                15480020
         ORG   F7CT3-CT3+CSTREF                                         15500020
         DC    A(STREFR)                                                15520020
*                                                                       15540020
         ORG   F7CT3+CT3C*4                                             15560020
         ORG   ,                                                        15580020
         SPACE                                                          15600020
         END       ASMGF7                                               15620020
./ ADD NAME=ASMGF7L
F7L      TITLE     'ASMG F7  LOG ERROR SUBROUTINE (LOGERR)'             00020021
         ISEQ  73,78                                                    00040021
ASMGF7L  START                                                          00060020
         SPACE                                                          00080020
         PRINT      NOGEN                                               00100020
         FDIMEN                                                         00120020
         SPACE                                                          00140020
*********************************************************************** 00160020
*                                                                     * 00180020
* LOGERR IS CALLED BY   ASMGF7    TO BUILD ERROR RECORD OR ADD ERROR  * 00200020
* MESSAGE TO EXISTING ERROR RECORD.                                   * 00220020
*                                                                     * 00240020
* MODEL CALLING SEQUENCE ---                                          * 00260020
*                                                                     * 00280020
*       L     SRB,CLOGER(ACT)           LOGERR BASE/ENTRY ADDRESS     * 00300020
*       L     SP1,POINTER               ABS POINTER TO ERROR (OR ZERO)* 00320020
*       BALR  SRR,SRB                                                 * 00340020
*       DC    AL2(ERRORCODE)            ERRORCODE EQU ERROR MSSG NUMBR* 00360020
*                                                                     * 00380020
* LOGERR WILL RETURN TO CALLING ROUTINE WITH SP1,SP2 UNCHANGED.       * 00400020
* GR0-GR2, GRX, GRY, AND GRZ ARE VOLATILE.                            * 00420020
*                                                                     * 00440020
*********************************************************************** 00460020
         SPACE                                                          00480020
ERRMAX   EQU   16                       MAX NUMBER OF ERRORS/STATEMENT  00500020
         SPACE                                                          00520020
         USING     ASMGF7L,SRB                                          00540020
         SPACE 2                                                        00560020
         STM   SP1,SP2,SAVE2            ENTER LOGERR, SAVE REGS         00580020
         L     SP2,CTERRP(ACT)          POINTER TO ERROR REC WORK AREA  00600020
         S     SP1,CTXOFP(ACT)          CALC RELATIVE POINTER         * 00620020
         BP    GETERR                   POINTER PRESENT                 00640020
         SR    SP1,SP1                  NOT PRESENT, CLEAR SP1          00660020
         EJECT                                                          00680020
GETERR   CLI   ERSWH(ACT),X'FF'         TEST ERROR REC IN CORE SWITCH   00700020
         BE    ADDERR                   SET, ADD ERROR MESSAGE TO REC   00720020
         MVI   ERSWH(ACT),X'FF'         NOT SET, SET                    00740020
         MVI   2(SP2),X'10'             INITIALIZE ERR REC IN WORK AREA 00760020
         MVI   3(SP2),X'00'             REC TYPE EQ 001, COUNT EQ ZERO  00780020
         L     GR1,CTEXTP(ACT)                                          00800020
         TM    TXERI(GR1),X'04'         TEST ERROR REC FOLLOWS IND      00820020
         BO    GETREC                   SET, GET ERROR REC FROM TEXT    00840020
         OI    TXERI(GR1),X'04'         NOT SET, SET IT                 00860020
         B     ADDERR                   THEN ADD ERR MESSAGE TO NES REC 00880020
         SPACE                                                          00900020
GETREC   STM   SRB,SP2,SAVE4            GET ERROR REC FROM TEXT FILE    00920020
         LR    SP1,SP2                                                  00940020
         L     SRB,CTXTIO(ACT)                                          00960020
         BAL   SRR,GETXTM(SRB)                                          00980020
         USING *,SRR                                                    01000020
         LM    SRB,SP2,SAVE4                                            01020020
         DROP  SRR                                                      01040020
         SPACE                                                          01060020
ADDERR   CLI   3(SP2),ERRMAX            TEST ERROR COUNT                01080020
         BE    RETURN                   EXIT IF MAX                     01100020
         SPACE                                                          01120020
         SR    GR1,GR1                  PUT ERROR COUNT IN GR1          01140020
         IC    GR1,3(SP2)                                               01160020
         LR    GR2,GR1                  POINT GR2 TO CURRENT MESSAGE-1  01180020
         SLL   GR2,1                                                    01200020
         LA    GR2,0(GR2,SP2)                                           01220020
         SPACE                                                          01240020
         STC   SP1,5(GR2)               PUT COL POINTER IN ERR MESSAGE  01260020
         MVC   4(1,GR2),1(SRR)          PUT ERROR CODE  IN ERR MESSAGE  01280020
         LH    SP1,4(GR2)               PUT ERROR MESSAGE IN SP1        01300020
         SPACE                                                          01320020
CHECKERR CLR   GR2,SP2                  COMPARE CURRENT ERROR MESSAGE   01340020
         BE    COUNTERR                 AGAINST PRIOR MESSAGES          01360020
         CH    SP1,2(GR2)                                               01380020
         BE    RETURN                   IGNORE IF PREVIOUSLY LOGGED     01400020
         BCTR  GR2,0                                                    01420020
         BCT   GR2,CHECKERR                                             01440020
         SPACE                                                          01460020
COUNTERR LA    GR1,1(GR1)               INC ERROR COUNT                 01480020
         STC   GR1,3(SP2)                                               01500020
         LA    GR1,4(GR1,GR1)           INC RECORD LENGTH               01520020
         STH   GR1,TXRL(SP2)                                            01540020
         SPACE                                                          01560020
RETURN   LM    SP1,SP2,SAVE2            RESTORE REGS                    01580020
         B     2(SRR)                   RETURN TO CALLING ROUTINE       01600020
         SPACE                                                          01620020
SAVE2    DS    2F                       SP1,SP2 SAVE AREA               01640020
SAVE4    DS    4F                       SRB-SP2 SAVE AREA               01660020
         SPACE                                                          01680020
         END   ASMGF7L                                                  01700020
./ ADD NAME=ASMGF7N
F7N      TITLE     'ASMG F7  TESTRAN ROUTINE (TSTRAN)'                  00020021
         ISEQ  73,78                                                    00040021
ASMGF7N  START                                                          00060020
         SPACE                                                          00080020
         PRINT      NOGEN                                               00100020
         FDIMEN                                                         00120020
         SPACE 2                                                        00140020
*TITLE 'ASMGF7N ',    TESTRAN                                         * 00160020
*FUNCTION/OPERATION-                                                  * 00180020
*   WHEN THE TESTRAN OPTION IS USED,ASMGF7C TRANSFERS CONTROL HERE.   * 00200020
*   THIS ROUTINE PRODUCES CARD ON SYSPUNCH AND/OR SYSGO DATA SETS.    * 00220020
*   THESE CARDS ARE TO BE USED IN SUBSEQUENT EXECUTION OF THE OBJECT  * 00240020
*   DECK WHEN EXECUTED IN THE TESTRAN. THIS DECK IS ESSENTIALLY AS    * 00260020
*   STORAGE MRP OF THE PROGRAM.                                       * 00280020
*ENTRY POINT- ASMGF7N                                                 * 00300020
*   CALLED BY ASMGF7C VIA                                             * 00320020
*        L     FRB,CTESTR(ACT)          GET ENTRY POINT               * 00340020
*        BALR  CRR,ACT                  CALL ASMGF7N                  * 00360021
*INPUT- NONE                                                          * 00380020
*OUTPUT-                                                              * 00400020
*   TESTRAN 'SYM' CARDS ARE PUT OUT ON SYSPUNCH AND/OR SYSGO. THE     * 00420020
*   FORMAT OF THE TESTRAN 'SYM' CARD IS-                              * 00440020
*       COLUMN      CONTENTS                                          * 00460020
*         1         T29 PUNCH                                         * 00480020
*         2-4       'SYM'                                             * 00500020
*         5-10      BLANK                                             * 00520020
*        11-12      NUMBER OF BYTES OF TEXT                           * 00540020
*        13-16      BLANK                                             * 00560020
*        17-72      VARIABLE FIELD                                    * 00580020
*        73-80      BLANK                                             * 00600020
*   THE GENERAL FORMAT IN ORDER OF AN INDIVIDUAL ITEM IS-             * 00620020
*      LENGTH(BYTES)  CONTENTS                                        * 00640020
*         1    ORGINIZATIONAL BYTE                                    * 00660020
*         3    ADDRESS-DISP FROM BASE OF CONTROL SECTION              * 00680020
*        0-8   SYMBOLIC NAME                                          * 00700020
*         1    DATA TYPE                                              * 00720020
*         1    LENGTH                                                 * 00740020
*         3    MULTIPLICITY                                           * 00760020
*         2    SCALE                                                  * 00780020
*EXTERNAL ROUTINES-                                                   * 00800020
*   SYSOUT- USED TO PUT OUT THE TESTRAN 'SYM' CARD. THIS ROUTINE IS IN* 00820020
*          ASMGF7I AND IS CALLED AS FOLLOWS-                          * 00840020
*                        LA   SP1,TEBFR      LOAD ADDRESS OF CRD IMAGE* 00860020
*                        L    SRB,CTXTIO(ACT)  BASE OF I/O ROUTINE    * 00880020
*                        BAL  SRR,SYSOUT(SRB)  CALL SYSOUT            * 00900020
*EXITS- NORMAL                                                        * 00920020
*   RETURNS TO CALLING ROUTINE VIA                                    * 00940020
*        BR    CRR                      RETURN                        * 00960020
*     - ERROR-- NONE                                                  * 00980020
*TABLES/WORKAREAS-                                                    * 01000020
*        NAME       FUNCTION                                          * 01020020
*        SAVMWD     SAVE AREA                                         * 01040020
*        TTN        OUTPUT CARD IMAGE BUFFER                          * 01060020
*        TBLHEX     DECIMAL TO HEX TRANSLATE TABLE                    * 01080020
         SPACE 3                                                        01100020
GR8      EQU   SRB                                                      01120020
GR9      EQU   SRR                                                      01140020
         SPACE                                                          01160020
         USING *,FRB                                                    01180020
         EJECT                                                          01200020
TESYM    STM   GRA,GRD,SAVMWD           SAVE REGISTERS                  01220020
         TM    CTPH7C(ACT),X'02'        IS PHASE COMPLETE               01240020
         BO    WRILST                   YES                             01260020
         LA    PTR,WKAREA               INITIALIZE WORK AREA POINTER    01280020
         MVI   FOPN,X'00'                                               01300020
TSTALN   L     GRA,CTEXTP(ACT)          SET POINTER TO TEXT RECORD      01320020
         L     GRB,CTXABP(ACT)          SET POINTER TO WORK BUCKETS     01340020
         MVC   LOCCTR+1(3),TXLOC(GRB)                                   01360020
         XC    REMSV(4),REMSV           CLEAR REMAINDER SAVE AREA       01380020
         MVI   BLDATA,0                                                 01400020
         MVI   STPFLG,0                                                 01420020
         TM    TXTO(GRA),X'40'          TEST FOR MACHINE OP ENTRY       01440020
         BO    OPALN                    BRANCH IF BITS ON               01460020
         CLI   TXHEX(GRA),X'26'         CHECK INSTRUCTION TYPE FOR A DC 01480020
         BE    CALNDC                   BRANCH IF EQUAL TO CHECK ALIGN  01500020
         CLI   TXHEX(GRA),X'27'         CHECK INSTRUCTION TYPE FOR A DS 01520020
         BE    CALNDC                   BRANCH IF EQUAL TO CHECK ALIGN- 01540020
*                                       MENT AS DC-DS.                  01560020
         CLI   TXHEX(GRA),X'22'         IS TEXT A LTORG                 01580020
         BE    OPALN                    YES                             01600020
         CLI   TXHEX(GRA),X'25'         IS TEXT A LITERAL               01620020
         BNE   ALRTN                    NO                              01640020
         MVC   LOCCTR(4),CTLOC(ACT)     YES, GET LOCATION COUNTER FOR   01660020
*                                       LITERALS                        01680020
         LA    GRB,5(GRB)                                               01700020
         MVC   SAVWD+1(3),TXDLEN(GRB)                                   01720020
         L     GR8,LOCCTR                                               01740020
         MVI   SAVWD,0                                                  01760020
         MVI   ORBYT,X'08'             INITIALIZE OR BYTE               01780020
         S     GR8,SAVWD                                                01800020
         ST    GR8,LOCCTR                                               01820020
         B     TEDC                                                     01840020
OPALN    TM    TXALIN(GRB),X'07'        TEST FOR ALIGNMENT BITS ON -OP- 01860020
         BZ    ALRTN                    BRANCH TO PROCESS ENTRY IF ZERO 01880020
         IC    GRY,TXALIN(GRB)          GET ALIGNMENT BITS              01900020
         B     TEALEN                   BRANCH TO MAKE ALIGNMENT ENTRY  01920020
*                                                                       01940020
CALNDC   TM    FOPN,X'FF'               CHECK WORK AREA POINTER SWITCH  01960020
         BO    TEDUDP                   IF ON, BRANCH                   01980020
         LA    GRB,5(GRB)                                               02000020
TEDUDP   TM    TXDALN(GRB),X'0E'        TEST FOR ALIGNMENT BITS ON -DC- 02020020
         BZ    ALRTN                    BRANCH TO PROCESS ENTRY IF ZERO 02040020
         IC    GRY,TXDALN(GRB)          GET ALIGNMENT BITS              02060020
         SRL   GRY,1                    ADJUST BITS TO REGISTER BOUNDRY 02080020
         TM    FOPN,X'FF'               IS THIS THE FIRST OPERAND       02100020
         BZ    TEALEN                   YES                             02120020
         LA    GR8,7                    NO, LOAD MASK                   02140020
         NR    GR8,GRY                  MASK ALIGNMENT BITS             02160020
         A     GR8,LOCCTR               ADD LOCATION COUNTER            02180020
         ST    GR8,LOCCTR               STORE AS NEW LOCATION           02200020
TEALEN   MVI   ORBYT,X'08'              INITIALIZE OR BYTE TO SPACE     02220020
         LA    GR8,7                    SET MASK TO CLEAR UNWANTED BITS 02240020
         NR    GRY,GR8                  CLEAR UNWANTED BITS             02260020
         L     GR8,LOCCTR               LOAD LOCATION COUNTER           02280020
         SR    GR8,GRY                  REDUCE ADDRESS BY BYTES SKIPPED 02300020
         ST    GR8,SAVWD                MOVE ADDRESS OF SPACE TO WORK   02320020
         MVC   ADDRES(3),SAVWD+1        AREA                            02340020
         STC   GRY,0(PTR)               STORE NO. BYTES SKIPPED AS LENG 02360020
         LA    PTR,1(PTR)               STEP POINTER TO WORK AREA       02380020
         BAL   GRY,STEN                 BRANCH TO STORE ENTRY           02400020
ALRTN    MVI   ORBYT,X'00'              INITIALIZE OR BYTE              02420020
         TM    FOPN,X'FF'               TEST THIS FOR FIRST OPERAND     02440020
         BO    NONAM                    BRANCH IF FLAG ON TO NO NAME.   02460020
         TM    TXNAML(GRA),X'FF'        CHECK NAME LENGTH INDICATOR     02480020
         BZ    NONAM                    BRANCH ON LENGTH ZERO TO NONAM  02500020
         SR    GRY,GRY                                                  02520020
         IC    GRY,TXNAML(GRA)          GET NAME LENGTH                 02540020
         AR    PTR,GRY                  STEP WORK AREA POINTER          02560020
         BCTR  GRY,0                                                    02580020
         L     SP2,CTRTBP(ACT)          LOAD TRANSLATE TABLE LOCATION   02600020
         EX    GRY,MVNAM                MOVE TRANSLATED NAME TO WORK    02620020
*                                       AREA                            02640020
         EX    GRY,TRANS                TRANSLATE NAME FOR SYMBOL TABLE 02660020
         EX    GRY,ORBOR                OR NAME LENGTH INTO OR BYTE     02680020
         B     NMRTN                                                    02700020
NONAM    MVI   ORBYT,X'08'              INDICATE NO NAME PRESENT        02720020
***********************************************                         02740020
*  TEST FOR MACHINE OP OR ASSEMBLER OP ENTRY  *                         02760020
***********************************************                         02780020
NMRTN    TM    TXTO(GRA),X'80'          TEST FOR DC-DS ENTRY            02800020
         BO    TEDCCT                   YES, BRANCH                     02820020
         TM    TXTO(GRA),X'40'          TEST FOR ASSEMBLER OP ENTRY     02840020
         BO    TEOPS                    YES, BRANCH                     02860020
         B     RETURN                   NO, RETURN TO MAINLINE          02880020
*********************************************************************** 02900020
*  THE FOLLOWING IS A TEST FOR TYPE OF ENTRY. DC AND DS ENTRIES HAVE  * 02920020
*  THE HEX CODES 26 AND 27. ANYTHING ELSE WITH A HEX CODE OF 28 OR    * 02940020
*  LESS IS A CONTROL SECTION ENTRY.                                   * 02960020
*********************************************************************** 02980020
TEDCCT   CLI   TXHEX(GRA),X'26'         TEST FOR DESIRED ENTRY          03000020
         BE    TEDC                     YES, BRANCH                     03020020
         CLI   TXHEX(GRA),X'27'                                         03040020
         BNE   TECTLS                   NOT DC-DS ENTRY, BRANCH         03060020
*                                                                       03080020
TEDC     CLI   TXDTYP(GRB),X'03'        IS ENTRY TYPE P                 03100020
         BE    PZCOD                    BRANCH IF CODE IS P             03120020
         CLI   TXDTYP(GRB),X'04'        CHECK FOR Z CODE                03140020
         BNE   LMPRS                    BRANCH IF CODE NOT Z            03160020
*                                                                       03180020
PZCOD    MVI   PZSWH,X'00'              ZERO P-Z SWITCH                 03200020
         TM    TXDLMP(GRB),X'10'        TEST FOR LENGTH MODIFIER PRES.  03220020
         BC    5,LMPRS                  YES, BRANCH                     03240020
         CLI   TXDCON(GRB),X'01'                                        03260020
         BE    LMPRS                    YES, BRANCH                     03280020
*                                                                       03300020
NOLNM    MVI   PZSWH,X'FF'              SET P-Z SWITCH ON               03320020
*                                                                       03340020
LMPRS    OI    ORBYT,X'80'              INDICATE DATA ENTRY IN OR BYTE  03360020
         MVC   ADDRES(3),LOCCTR+1       MOVE ADDRESS TO WORK AREA       03380020
*                                                                       03400020
         MVC   0(1,PTR),TXDTYP(GRB)     MOVE HEX TYPE TO WORK AREA      03420020
         TR    0(1,PTR),TBLHEX          TRANSLATE TO PROPER CODE        03440020
         LA    PTR,1(PTR)               STEP POINTER TO WORK AREA       03460020
         MVI   BCXIND,0                                                 03480020
*                                                                       03500020
CFBC     CLI   TXDTYP(GRB),X'02'        CHECK FOR B CODE                03520020
         BH    BLNTST                   BRANCH IF CODE HIGH             03540020
*                                                                       03560020
SFBCX    MVI   BCXIND,X'FF'             SET B, C OR X CODE FLAG ON      03580020
BLNTST   TM    TXDLMD(GRB),X'01'        TEST FOR BIT LENGTH CONSTANTS   03600020
         BO    BITLGN                   YES, BRANCH                     03620020
*                                                                       03640020
         TM    BCXIND,X'FF'             TEST B, C OR X FLAG             03660020
         BO    BCORX                    BRANCH IF ON TO MOVE BCX LENGTH 03680020
         TM    PZSWH,X'FF'              TEST P-Z FLAG                   03700020
         BO    PZCLR                    BRANCH IF ON TO MOVE P-Z LENGTH 03720020
*                                                                       03740020
         SR    GRX,GRX                  PUT CONSTANT LENGTH             03760020
         IC    GRX,TXDLNM+1(GRB)                                        03780020
         BCTR  GRX,0                                                    03800020
         STC   GRX,0(PTR)                                               03820020
         LA    PTR,1(PTR)               STEP POINTER TO WORK AREA       03840020
         B     DUPTST                   BRANCH TO TEST DUPLICATION      03860020
*                                                                       03880020
BCORX    MVC   CTWORK(2,ACT),TXDLNM(GRB) MOVE LENGTH MODIFIER TO ARRY   03900020
         LH    GRX,CTWORK(ACT)                                          03920020
         BCTR  GRX,0                                                    03940020
         STH   GRX,CTWORK(ACT)                                          03960020
         MVC   0(2,PTR),CTWORK(ACT)                                     03980020
         LA    PTR,2(PTR)               STEP POINTER TO WORK ARRY       04000020
*                                                                       04020020
DUPTST   MVC   SAVWD+1(3),TXDUPL(GRB)   ALIGN DUPLICATION FACTOR IN     04040020
         L     GRY,SAVWD                FULL WORD AND LOAD IN REGISTER  04060020
         LA    GRY,0(GRY)                                               04080020
         C     GRY,ONE                  IS DUPLICATION GREATER THAN ONE 04100020
         BNE   CKNOP                    YES, BRANCH                     04120020
*                                                                       04140020
         TM    TXDCON(GRB),X'FE'        IS NO. OF CONSTANTS GREATER     04160020
         BE    CKXOB                    THAN ONE.  NO, BRANCH           04180020
*                                                                       04200020
         SR    GRY,GRY                                                  04220020
         IC    GRY,TXDCON(GRB)          GET NO. OF CONSTANTS            04240020
         ST    GRY,SAVWD                BRANCH TO STORE AS MULTIPLICITY 04260020
         B     MVMLT                                                    04280020
*                                                                       04300020
CKNOP    TM    TXDCON(GRB),X'FF'        TEST NO. CONSTANTS.             04320020
         BZ    NOZRO                    NONE, BRANCH                    04340020
*                                                                       04360020
         SR    GR9,GR9                  GET NO CONSTANTS AND ZERO HIGH  04380020
         IC    GR9,TXDCON(GRB)          ORDER BYTES OF REGISTER.        04400020
         MR    GR8,GRY                  NO. CONSTANTS X DUPLICATION     04420020
         ST    GR9,SAVWD                                                04440020
MVMLT    MVC   0(3,PTR),SAVWD+1         STORE AS MULTIPLICITY FACTOR    04460020
         LA    PTR,3(PTR)               STEP POINTER TO WORK AREA       04480020
*                                                                       04500020
         OI    ORBYT,X'40'              INDICATE MULT. IN OR BYTE       04520020
         B     CKXOB                                                    04540020
*                                                                       04560020
NOZRO    ST    GRY,SAVWD                STORE DUP. FACTOR AS MULT. NO.  04580020
         B     MVMLT                    OF CONSTANTS IS ZERO.           04600020
*                                                                       04620020
CKXOB    TM    BCXIND,X'FF'             CHECK B, C OR X INDICATOR.      04640020
         BO    STDCEN                   ON, BRANCH                      04660020
*                                                                       04680020
         MVC   SAVWD+2(2),TXDSCM(GRB)   GET SCALE MODIFIER AND ALIGN IT 04700020
         LH    GR8,SAVWD+2              IN A REGISTER.                  04720020
         MVC   SAVWD+2(2),TXDSCM(GRB)                                   04740020
         LH    GR8,SAVWD+2                                              04760020
         SRA   GR8,5                                                    04780020
         LTR   GR8,GR8                  TEST FOR MODIFIER               04800020
         BZ    STDCEN                   IF NONE, BRANCH                 04820020
NOSOSM   ST    GR8,SAVWD                PUT SCALE MODIFIER              04840020
         MVC   0(2,PTR),SAVWD+2                                         04860020
*                                                                       04880020
         OI    ORBYT,X'10'              UPDATE ORBYT TO INDICATE SCALE  04900020
*                                       MODIFIER PRESENT                04920020
         LA    PTR,2(PTR)                                               04940020
*                                                                       04960020
STDCEN   BAL   GRY,STEN                 BRANCH TO STORE ENTRY           04980020
TSTNBK   MVC   SAVWD+1(3),TXDLEN(GRB)   GET OPERAND LENGTH              05000020
         TM    TXDLAS(GRB),X'08'        IS THIS THE LAST WORK BUCKET    05020020
         BO    RETURN                   YES, RETURN                     05040020
         LA    GRB,15(GRB)                                              05060020
         TM    TXWTYP(GRB),X'40'        TEST FOR ANOTHER OPERAND WORK   05080020
*                                       BUCKET                          05100020
         BZ    RETURN                   RETURN IF NOT FOUND             05120020
         TM    BLDATA,X'FF'                                             05140020
         BZ    STPLC1                   BRANCH IF SWITCH OFF            05160020
         TM    TXDLMD(GRB),X'01'        TEST FOR BIT LENGTH CONSTANTS   05180020
         BZ    STPLC1                   NO, BRANCH                      05200020
         L     GR1,STEPER                                               05220020
         B     STPLC2                                                   05240020
STPLC1   L     GR1,SAVWD                                                05260020
STPLC2   A     GR1,LOCCTR                                               05280020
         ST    GR1,LOCCTR                                               05300020
         MVI   FOPN,X'FF'               SET SWITCH THIS NOT FIRST OPND  05320020
         B     CALNDC                   BRANCH TO PROCESS NEXT OPERAND  05340020
*                                                                       05360020
*                                                                       05380020
BITLGN   SR    GR9,GR9                                                  05400020
         OI    BLDATA,X'FF'                                             05420020
         MVC   SAVWD+2(2),TXDLNM(GRB)   GET LENGTH MODIFIER             05440020
         LH    GR8,SAVWD+2                                              05460020
         N     GR8,=A(X'FFFF')                                          05480020
         A     GR8,REMSV                ADD REMAINING BITS FM LAST OPND 05500020
         SRDL  GR8,3                    DIVID BY 8 FOR NO. OF WORDS     05520020
         LTR   GR8,GR8                  TEST FOR BIT LENGTH LESS THAN 8 05540020
         BZ    BOTCD                    YES, BRANCH                     05560020
*                                                                       05580020
         LTR   GR9,GR9                  TEST FOR REMAINDER              05600020
         BC    6,BOTCD                  YES, BRANCH                     05620020
*                                                                       05640020
         BCTR  GR8,0                    DECREASE LENGTH INDICATOR BY 1  05660020
*                                                                       05680020
BOTCD    TM    BCXIND,X'FF'             TEST B-C-X TYPE CODE FLAG       05700020
         BO    MLTB                     FLAG OFF, BRANCH                05720020
         STC   GR8,0(PTR)               STORE LENGTH-1 IN WORK AREA     05740020
         LA    PTR,1(PTR)               STEP POINTER TO WORK AREA BY 1  05760020
*                                                                       05780020
SETSTP   XC    SAVWD(2),SAVWD           ZERO FIRST 2 BYTES              05800020
         MVC   SAVWD+2(2),TXDLEN(GRB)   GET CONSTANT LEN                05820020
         L     GR9,SAVWD                                                05840020
         MVC   SAVWD+1(3),TXDUPL(GRB)   GET DUP FACTOR                  05860020
         M     GR8,SAVWD                LEN X DFP FACTOR                05880020
         IC    GR8,TXDCON(GR8)          GET NO. CONSTANTS IN OPND       05900020
         MR    GR8,GR8                  LEN X DUP X NO. CONSTANTS       05920020
         LR    GR8,GR9                                                  05940020
         A     GR8,REMSV                                                05960020
         SRDL  GR8,3                                                    05980020
         ST    GR8,STEPER                                               06000020
         SR    GR8,GR8                                                  06020020
         SLDL  GR8,3                                                    06040020
         ST    GR8,REMSV                                                06060020
         B     DUPTST                                                   06080020
*                                                                       06100020
MLTB     STH   GR8,SAVWD+2              STORE LENGTH MODIFIER AS 2 BYTE 06120020
         MVC   0(2,PTR),SAVWD+2                                         06140020
         LA    PTR,2(PTR)               STEP POINTER TO WORK AREA BY 2  06160020
         B     SETSTP                                                   06180020
*                                                                       06200020
*                                                                       06220020
STEN     ST    GRY,STSAV                SAVE RETURN ADD-ESS             06240020
         LA    GR9,56                   LOAD NO. BYTE OF VARIABLE INFO. 06260020
         LA    GR8,ORBYT                GET ENTRY LOCATION              06280020
         SR    PTR,GR8                  FIND THE NO. OF BYTES IN ENTRY  06300020
         S     GR9,NOLEFT               GET NO. OF BYTES USED IN BUFFER 06320020
         LA    GRX,TEBFR+17(GR9)        GET PTR TO NEXT BYTE            06340020
         C     PTR,NOLEFT               COMPARE NO. LEFT TO NO.IN ENTRY 06360020
         BP    CHAREB                   BRANCH IF ANY LEFT              06380020
MCLN     BCTR  PTR,0                    REDUCE NO. OF CHARS. FOR MOVE   06400020
         EX    PTR,MOVEN                EXECUTE MOVE                    06420020
         LA    PTR,1(PTR)               STEP NO. OF CHARS. BY 1         06440020
         L     GR9,NOLEFT               GET NO. BYTE LEFT IN BUFFER.    06460020
         SR    GR9,PTR                  REDUCE BY NO. CHARS. MOVED      06480020
         BZ    RESET                    IF NO. LEFT = 0 BRANCH TO RESET 06500020
*                                                                       06520020
         ST    GR9,NOLEFT               STORE NO. LEFT FOR NEXT ENTRY   06540020
STRTN    LA    PTR,WKAREA               RESET POINTER TO WORK AREA      06560020
         L     GRY,STSAV                RESTORE RETURN ADDRESS          06580020
         BR    GRY                      RETURN                          06600020
*                                                                       06620020
CHAREB   L     GR9,NOLEFT               GET NO. LEFT                    06640020
         BCTR  GR9,0                                                    06660020
         EX    GR9,MOVEN                MOVE NO. CHARS. LEFT TO BUFFER. 06680020
         MVI   NLF,X'FF'                SET CHARS. LEFT FLAG            06700020
*                                                                       06720020
OUTSYM   TM    FPSWH,X'FF'              TEST FIRST PASS SWITCH          06740020
         BO    PUNOUT                   BRANCH IF ON                    06760020
         MVI   FPSWH,X'FF'              TURN ON FIRST PASS SWITCH       06780020
         MVC   TTLSEQ(4),CTITLE(ACT)    MOVE TITLE TO BE PUNCHED IN     06800020
*                                       OUTPUT CARDS                    06820020
         SR    GR2,GR2                                                  06840020
         ST    GR2,CCRDCT(ACT)          INITIALIZE CARD COUNT           06860020
PUNOUT   L     GR1,CCRDCT(ACT)          GET CARD SEQUENCE NUMBER        06880020
         LA    GR1,1(GR1)               ADD 1                           06900020
         ST    GR1,CCRDCT(ACT)          STORE                           06920020
         CVD   GR1,DBLWD                CONVERT SEQUENCE NO. TO DECIMAL 06940020
         UNPK  TTLSEQ+4(4),DBLWD+5(3)   UNPACK LOW ORDER 4 DIGITS       06960020
         OI    TTLSEQ+7,X'F0'           MASK SIGN                       06980020
         STM   SRB,SRR,DBLWD            SAVE REGISTERS                  07000020
         STM   0,15,CTWORK(ACT)         ********TEMP FIX*************** 07020020
         LA    SP1,TEBFR                LOAD I/O OUTPUT PARAMETER       07040020
         L     SRB,CTXTIO(ACT)          LOAD I/O ROUTINE ADDRESS        07060020
         BAL   SRR,SYSOUT(SRB)          BRANCH TO OUTPUT SYMBOL CARD    07080020
         LM    SRB,SRR,DBLWD            RESTORE REGISTERS               07100020
         LM    0,15,CTWORK(ACT)         ********TEMP FIX*************** 07120020
*                                                                       07140020
         MVC   TEBFR+17(56),TEBFR+16    BLANK OUTPUT BUFFER             07160020
         LA    GRX,TEBFR+17             RESET BUFFER POINTER            07180020
         LA    GRY,56                   RESET NO. LEFT INDICATOR        07200020
         ST    GRY,NOLEFT                                               07220020
         TM    NLF,X'FF'                TEST IF ANY CHARS LEFT TO ENTER 07240020
         BZ    STRTN                    BRANCH IF NONE.                 07260020
         LA    GR9,1(GR9)                                               07280020
*                                                                       07300020
         SR    PTR,GR9                  SET POINTERS TO MOVE REMAINING  07320020
         AR    GR8,GR9                  CHARSACTERS.                    07340020
         MVI   NLF,X'00'                RESET ADDITIONAL CHARACTERS     07360020
*                                       FLAG                            07380020
         B     MCLN                                                     07400020
*                                                                       07420020
RESET    LA    GR9,56                   RESET NOLEFT                    07440020
         B     OUTSYM                                                   07460020
*                                                                       07480020
TEOPS    TM    8(GRA),X'FF'             CHECK FOR NAME PRESENT          07500020
         BZ    RETURN                   RETURN TO MAIN LINE IF NO NAME  07520020
*                                                                       07540020
         OI    ORBYT,X'40'              UPDATE OR BYTE                  07560020
         MVC   ADDRES(3),LOCCTR+1       MOVE INSTR. LOC. TO WORK AREA   07580020
*                                                                       07600020
         BAL   GRY,STEN                 BRANCH TO STORE ENTRY           07620020
         B     RETURN                   RETURN TO MAIN LINE             07640020
*                                                                       07660020
*   START, CSECT, DSECT, CCW OR COM CODE ENTRY                          07680020
*   EQU, ORG, LTORG OR CNOP CODE (IF LABELLED AND EXTEN)          V7A31 07690028
*                                                                       07700020
TECTLS   CLI   TXHEX(GRA),X'1B'         CHECK FOR TYPE OF CODE          07720020
         BE    CSECT                    CSECT CODE, BRANCH              07740020
         BL    RETURN                   RETURN IF LOW                   07760020
         CLI   TXHEX(GRA),X'1D'         CHECK CODE FOR DSECT            07780020
         BL    CSECT                    IF IT IS A CSECT, BRANCH        07800020
         BE    DSECT                    BRANCH ON EQUAL TO DSECT        07820020
*                                                                       07840020
         CLI   TXHEX(GRA),X'1E'         CHECK FOR COM CODE              07860020
         BE    COM                      YES, BRANCH                     07880020
*                                                                       07900020
         CLI   TXHEX(GRA),X'28'         CHECK FOR CCW CODE              07920020
         BE    CCW                      BRANCH IF YES             V7A31 07940028
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A31 07941028
         BNO   RETURN                   RETURN NOW IF NOT         V7A31 07942028
         CLI   TXNAML(GRA),X'00'        IS LABEL FIELD NULL .Q    V7A31 07943028
         BE    RETURN                   BRANCH IF YES             V7A31 07944028
         CLI   TXHEX(GRA),X'1F'         CHECK FOR EQU CODE        V7A31 07945028
         BE    EQU                      BRANCH IF YES             V7A31 07946028
         CLI   TXHEX(GRA),X'20'         CHECK FOR ORG             V7A31 07947028
         BE    ORG                      BRANCH IF YES             V7A31 07948028
         CLI   TXHEX(GRA),X'22'         CHECK FOR LTORG           V7A31 07949028
         BE    ENTSIX                   BRANCH IF YES             V7A31 07950028
         CLI   TXHEX(GRA),X'29'         CHECK FOR CNOP            V7A31 07951028
         BE    CNOP                     BRANCH IF YES             V7A31 07952028
         B     RETURN                   ELSE RETURN               V7A31 07953028
*                                                                 V7A31 07954028
EQU      DS    0H                                                 V7A31 07955028
         CLI   ESDID(ACT),X'00'         ABSOLUTE EQU .Q           V7A31 07956028
         BE    RETURN                   YES, NO TESTRAN ENTRY     V7A31 07957028
         MVC   LOCCTR(4),STVALU(ACT)    VALUE OF RELOC EQU        V7A31 07958028
         B     ENTSIX                   GO SET TYPE               V7A31 07959028
*                                                                 V7A31 07960028
ORG      DS    0H                                                 V7A31 07961028
         MVC   LOCCTR+1(3),TXLOC+5(GRB) SET PREVIOUS ADDRESS      V7A31 07962028
         B     ENTSIX                   GO SET TYPE               V7A31 07963028
*                                                                 V7A31 07964028
CNOP     DS    0H                                                 V7A31 07965028
         MVC   LOCCTR(4),STVALU(ACT)    FORMER LOC'N VALUE        V7A31 07966028
*                                                                 V7A31 07967028
ENTSIX   DS    0H                                                 V7A31 07968028
         OI    ORBYT,X'60'              SET TYPE SIX              V7A31 07969028
         B     MDSO                     MAKE THE ENTRY            V7A31 07970028
*                                                                 V7A31 07971028
CCW      DS    0H                                                 V7A31 07972028
         OI    ORBYT,X'50'              RESET OR BYTE TO INDICATE CCW   07980020
MDSO     MVC   ADDRES(3),LOCCTR+1       MOVE LOCATION CTR AS ADDRESS    08000020
*                                                                       08020020
         BAL   GRY,STEN                 BRANCH TO STORE ENTRY.          08040020
         B     RETURN                   RETURN TO MAIN LINE             08060020
*                                                                       08080020
CSECT    OI    ORBYT,X'10'              RESET OR BYTE TO INDICATE CSECT 08100020
         B     MDSO                                                     08120020
*                                                                       08140020
DSECT    OI    ORBYT,X'20'              RESET OR BYTE TO INDICATE DSECT 08160020
         B     MDSO                                                     08180020
*                                                                       08200020
COM      DS    0H                                                       08220027
         CLI   TXNAML(GRA),X'00'        IS THERE A LABEL FIELD .Q       08222027
         BNE   COMEXT                   BRANCH IF YES                   08224027
         OI    ORBYT,X'38'              RESET OR BYTE TO UNLABELLED COM 08226027
         LA    PTR,WKAREA                                               08240020
         B     MDSO                                                     08260020
COMEXT   DS    0H                                                       08262027
         OI    ORBYT,X'30'              RESET OR BYTE TO LABELLED COM   08264027
         B     MDSO                     AND CONTINUE                    08266027
*                                                                       08280020
*                                                                       08300020
* PUT LAST TESTRAN SYMBOL CARD                                          08320020
*                                                                       08340020
*                                                                       08360020
WRILST   LA    GR8,56                   GET MAX. NO. BYTES IN VAR. TEXT 08380020
         C     GR8,NOLEFT               COMPARE WITH NO. LEFT           08400020
         BE    RETURN                   RETURN IF EQUAL                 08420020
         S     GR8,NOLEFT               DETERMINE THE NO. OF BYTES IN   08440020
*                                       THE LAST CARD                   08460020
         STH   GR8,SAVWD                MOVE NO. OF BYTES IN LAST CARD  08480020
         MVC   NCL(2),SAVWD                                             08500020
*                                                                       08520020
         LA    GRY,RETURN               SET RETURN ADDRESS              08540020
         ST    GRY,STSAV                SAVE RETURN ADDRESS             08560020
         B     OUTSYM                                                   08580020
*                                                                       08600020
RETURN   LM    GRA,GRD,SAVMWD           RESTORE REGISTERS               08620020
         BR    CRR                      RETURN                          08640020
*********************************************************************** 08660020
*  CLUSTER ENTRIES FOR P-Z TYPE CODE                                    08680020
*********************************************************************** 08700020
*                                                                       08720020
*                                                                       08740020
PZCLR    MVC   PZLOC(4),LOCCTR          SAVE LOCATION COUNTER           08760020
         MVI   SCFCN,IZERO              ZERO FIRST CONSTANT FLAG        08780020
         SR    GR8,GR8                  SAVE CLUSTER FIELD ENTRY        08800020
         IC    GR8,TXDLEN+2(GRB)                                        08820020
         BCTR  GR8,0                                                    08840020
         STC   GR8,0(PTR)                                               08860020
         MVC   1(3,PTR),TXDUPL(GRB)                                     08880020
         LA    PTR,4(PTR)                                               08900020
         OI    ORBYT,X'60'                                              08920020
         BAL   GRY,STEN                                                 08940020
*                                                                       08960020
SCANPZ   SR    GR8,GR8                  ZERO COUNTERS                   08980020
         STH   GR8,SCTTL                                                09000020
         STH   GR8,SCWHOL                                               09020020
         TM    SCFCN,X'FF'              TEST FIRST CONSTANT FLAG        09040020
         BO    SC12                     BRANCH IF ON                    09060020
*                                                                       09080020
         STH   GR8,PLENG                ZERO OPERAND LENGTH INDICATOR   09100020
*                                       OPERAND                         09120020
         SR    GRD,GRD                                                  09140020
         IC    GRD,TXDPTR(GRB)          GET POINTER TO OPERAND          09160020
         L     GR9,CTXOFP(ACT)                                          09180020
         LA    GRD,1(GRD,GR9)           ADD POINTER TO BEGIN OF OPERAND 09200020
SC10     CLI   0(GRD),IQUOTE            IS CHAR A QUOTE                 09220020
         BE    SC12                     YES, GO SCAN CONSTANT           09240020
         CLI   0(GRD),IBLANK            IS CHAR A BLANK                 09260020
         BE    TSTNBK                   YES GET OUT                     09280020
         LA    GRD,1(GRD)               STEP PTR TO NEXT CHAR           09300020
         B     SC10                     TEST NEXT CHAR                  09320020
SC12     LA    GRD,1(GRD)               STEP POINTER BY 1               09340020
*                                                                       09360020
         CLI   0(GRD),IMINUS            IS CHARACTER A MINUS SIGN       09380020
         BE    SC14                     YES                             09400020
         CLI   0(GRD),IPLUS             NO, IS CHARACTER A PLUS SIGN    09420020
         BE    SC14                     YES                             09440020
*                                                                       09460020
SC13     CLI   0(GRD),I9                NO, IS CHARACTER NUMERIC        09480020
         BH    SC15                     NO                              09500020
         LA    GR8,1(GR8)               YES, STEP COUNTER BY 1          09520020
SC14     LA    GRD,1(GRD)               STEP POINTER BY 1               09540020
         B     SC13                     LOOP BACK TO CHECK NEXT CHAR-   09560020
*                                       ACTER.                          09580020
SC15     CLI   0(GRD),IPRIOD            IS CHARACTER A PERIOD           09600020
         BNE   SC16                     NO                              09620020
         LA    GR8,1(GRB)                                               09640020
         STH   GR8,SCWHOL               YES, SAVE COUNT IN WHOLE        09660020
         SR    GR8,GR8                  ZERO COUNTER                    09680020
         B     SC14                     LOOP BACK TO CHECK NEXT CHAR-   09700020
*                                       ACTER.                          09720020
SC16     LH    GR9,SCWHOL               LOAD NO. CHARS. BEFORE PERIOD   09740020
         LTR   GR9,GR9                  CHECK FOR NONE                  09760020
         BZ    SC161                    IF NONE, BRANCH                 09780020
         BCTR  GR9,0                    DECREMENT                       09800020
SC161    AR    GR9,GR8                  ADD COUNT                       09820020
         CLI   TXDTYP(GRB),X'04'        IS ENTRY Z TYPE DC-DS           09840020
         BE    SC18                     YES                             09860020
*                                                                       09880020
*                                                                       09900020
SC17     SRL   GR9,1                    DIVIDE TOTAL BY 2               09920020
         LA    GR9,1(GR9)               NO, ADD 1 TO TOTAL              09940020
SC18     STH   GR9,SCTTL                STORE TOTAL                     09960020
         LA    GR9,16                                                   09980020
         CR    GR8,GR9                  IS COUNT GREATER THAN 16        10000020
         BH    SC19                     YES                             10020020
         CLI   SCTTL,X'10'              NO, IS TOTAL GREATER THAN 16    10040020
         BH    SC20                     YES                             10060020
*                                                                       10080020
         B     PZ10                     NO, BRANCH TO OUTPUT CONSTANT   10100020
*                                       DATA                            10120020
SC19     SR    GR8,GR8                  ZERO COUNT                      10140020
SC20     MVI   SCTTL+1,X'10'            RESET TOTAL TO 16               10160020
*                                                                       10180020
PZ10     MVI   ORBYT,X'A8'              INITIALIZE OR BYTE              10200020
         MVC   ADDRES(3),PZLOC+1        MOVE ENTRY ADDRESS TO WORK AREA 10220020
         L     GR9,PZLOC                LOAD LOCATION COUNTER           10240020
         AH    GR9,SCTTL                ADD LENGTH OF CURRENT CONSTANT  10260020
         ST    GR9,PZLOC                STORE AS NEXT ENTRY ADDRESS     10280020
*                                                                       10300020
         LH    GR9,PLENG                GET OPERAND LENGTH COUNTER      10320020
         AH    GR9,SCTTL                ADD LENGTH OF CURRENT CONSTANT  10340020
         STH   GR9,PLENG                STORE NEW LENGTH                10360020
         MVI   WKAREA,X'30'             MOVE DATA TYPE TO WORK AREA     10380020
         CLI   TXDTYP(GRB),X'03'        IS ENTRY TYPE P                 10400020
         BE    PZ11                     YES                             10420020
*                                                                       10440020
         OI    WKAREA,X'04'             NO, UPDATE DATA TYPE            10460020
PZ11     LA    PTR,WKAREA+2             SET POINTER TO WORK AREA        10480020
         LH    GR9,SCTTL                GET CONSTANT LENGTH             10500020
         BCTR  GR9,0                    REDUCE BY 1                     10520020
         STC   GR9,WKAREA+1             STORE LENGTH-1 IN WORK AREA     10540020
*                                                                       10560020
         LTR   GR8,GR8                  IS COUNT ZERO                   10580020
         BZ    PZ12                     YES                             10600020
         CLI   SCWHOL+1,X'00'           NO, IS WHOLE ZERO               10620020
         BE    PZ12                     YES                             10640020
*                                                                       10660020
         STH   GR8,SCWHOL               STORE IN ALIGNED WORD           10680020
         MVC   WKAREA+2(2),SCWHOL       MOVE TO WORK AREA AS SCALING    10700020
         LA    PTR,2(PTR)               STEP WORK AREA POINTER BY 2     10720020
         OI    ORBYT,X'10'              UPDATE OR BYTE TO INDICATE      10740020
*                                       SCALING                         10760020
*                                                                       10780020
PZ12     BAL   GRY,STEN                 BRANCH TO STORE ENTRY           10800020
         MVI   SCFCN,X'FF'              SET FIRST CONSTANT FLAG ON      10820020
         CLI   0(GRD),ICOMMA            TEST FOR LAST CONSTANT IN       10840020
*                                       THE OPERAND                     10860020
         BE    SCANPZ                   BRANCH IF EQUAL                 10880020
         MVI   PZSWH,0                  TURN OFF P-Z SWITCH             10900020
         B     TSTNBK                   BRANCH TO NEXT OPERAND          10920020
*                                                                       10940020
TRANS    TR    WKAREA(0),0(SP2)         TRANSLATE INSTRUCTION TO TRANS- 10960020
*                                       LATE NAME FOR SYMBOL TABLE      10980020
*                                       SYMBOL MOVE.                    11000020
MVNAM    MVC   WKAREA(0),TXNAME(GRA)    MOVE INSTRUCTION EXECUTED ABOVE 11020020
*                                       TO MOVE NAME TO WORK AREA       11040020
ORBOR    OI    ORBYT,X'00'              OR INSTR TO OR LENGTH SYMBOL    11060020
*                                       LENGTH INTO OR BYTE             11080020
*                                                                       11100020
MOVEN    MVC   0(0,GRX),0(GR8)          MOVE INSTR. EXECUTED ELSE WHERE 11120020
DBLWD    DC    D'0'                     TEMPORARY STORAGE AREA          11140020
STSAV    DC    F'0'                     RETURN ADDRESS SAVE AREA        11160020
PZLOC    DC    F'0'                     LOCATION COUNTER SAVE AREA      11180020
SVOBN    DC    12F'0'                                                   11200020
SAVMWD   DC    4F'0'                    SAVE AREA FOR GRA THROUGH GRD   11220020
REMSV    DC    F'0'                     STORE REMNDER FROM LAST OPERAND 11240020
STEPER   DC    F'0'                                                     11260020
ONE      DC    F'1'                     CONSTANT OF 'ONE'               11280020
NOLEFT   DC    F'56'                    NUMBER OF TEXT BYTES LEFT       11300020
SAVWD    DC    F'0'                     WORK AREA                       11320020
LNGCTR   DC    F'0'                                                     11340020
BITREM   DC    F'0'                                                     11360020
LOCCTR   DC    F'0'                     LOCATION COUNTER                11380020
SCTTL    DC    H'0'                     SCAN COUNTER                    11400020
SCWHOL   DC    H'0'                     WHOLE ZERO COUNTER              11420020
PLENG    DC    H'0'                     OPERAND LENGTH COUNTER          11440020
BLDATA   DC    X'0'                     SWITCH                          11460020
STPFLG   DC    X'0'                     SWITCH                          11480020
TTN      DC    X'00'                    OUTPUT BUFFER AREA              11500020
         DC    X'02'                                                    11520020
         DC    C'SYM'                                                   11540020
         DC    6C' '                                                    11560020
NCL      DC    X'0038'                                                  11580020
         DC    4C' '                                                    11600020
         DC    56C' '                                                   11620020
TTLSEQ   DC    8C' '                    OUTPUT BUFFER TITLE AREA        11640020
ORBYT    DC    X'00'                    OP CODE INDICATOR BYTE          11660020
ADDRES   DC    3X'00'                   WORK AREA--ADDRESS STORAGE      11680020
WKAREA   DC    16C' '                   WORK AREA FOR TRANSLATE         11700020
FPSWH    DC    X'00'                    FIRST PASS SWITCH               11720020
FOPN     DC    X'00'                    WORK AREA POINTER SWITCH        11740020
PZSWH    DC    X'00'                    P-Z SWITCH                      11760020
BCXIND   DC    X'00'                    BCX CODE FLAG                   11780020
PZLEN    DC    X'00'                                                    11800020
NLF      DC    X'00'                    CHARACTERS LEFT FLAG            11820020
BLANK    DC    X'40'                                                    11840020
SCFCN    DC    X'00'                    FIRST CONSTANT FLAG             11860020
TBLHEX   DC    X'00'                    TRANSLATE TABLE                 11880020
         DC    X'04'                                                    11900020
         DC    X'08'                                                    11920020
         DC    X'30'                                                    11940020
         DC    X'34'                                                    11960020
         DC    X'1C'                                                    11980020
         DC    X'18'                                                    12000020
         DC    X'10'                                                    12020020
         DC    X'14'                                                    12040020
         DC    X'20'                                                    12060020
         DC    X'24'                                                    12080020
         DC    X'2C'                                                    12100020
         DC    X'28'                                                    12120020
         DC    X'20'                                                    12140020
         DC    X'38'                    GARBAGE BYTE FOR L'CONS         12150026
TEBFR    EQU   TTN                                                      12160020
PTR      EQU   GRZ                                                      12180020
         LTORG                                                          12200020
         END   ASMGF7N                                                  12220020
./ ADD NAME=ASMGF7S
F7S      TITLE     'ASMG F7  SYMBOL TABLE PROCESSOR'                    00020021
         ISEQ  73,78                                                    00040021
ASMGF7S  START                                                          00060020
         PRINT        NOGEN                                             00080020
         FDIMEN                                                         00100020
         PRINT      GEN                                                 00120020
         SPACE 2                                                        00140020
*                                                                     * 00160020
*TITLE 'ASMGF7S ' ...  SYMBOL TABLE PROCESSOR                         * 00180020
*FUNCTION/OPERATION-                                                  * 00200020
*  ASMGF7S IS TO MAINTAIN THE SYMBOL TABLE. IT PUTS SYMBOLS INTO THE  * 00220020
*   TABLE, RETRIEVES SYMBOLS FROM THE TABLE, AND TESTS IF ROOM EXISTS * 00240020
*   FOR ANOTHER SYMBOL. BOTH THE SYMBOL TABLE AND EXTERNAL SYMBOL     * 00260020
*   DICTIONARY (ESD) AND LBT/LAT SHARE THE SAME AREA OF STORAGE.      * 00280020
*   CROSS REFERENCES TYPE 1 (BASE) , TYPE 2 (REFERENCE) AND TYPE 3    * 00300020
*   (DUPLICATE DEFN) ARE MADE.                                        * 00320020
*ENTRY POINTS-                                                        * 00340020
*   NAME   EXT NAME      FUNCTION                                     * 00360020
*   STGETR CSTGET(ACT)   GETS AN ITEM FROM THE SYMBOL TABLE           * 00380020
*   STPUTR CSTOUT(ACT)   PUTS AN ITEM INTO THE SYMBOL TABLE           * 00400020
*   STREFR CSTREF(ACT)   OUTPUTS CROSS REFERENCE TYPE 2 RECORDS       * 00420020
*                      INPUT PARAMETERS FOR STGETR,STREFR & STPUTR ARE* 00440020
*                             SP1- POINTS TO THE SYMBOL               * 00460020
*                             SP2- CONTAINS ZERO OR LENGTH OF SYMBOL  * 00480020
*                             SRB- CONTAINS BASE/ENTRY                * 00500020
*                             SRR- CONTAINS RETURN ADDRESS            * 00520020
*   STROOM CSTROM(ACT)   SEES IF ROOM LEFT IN SYMBOL TABLE            * 00540020
*                             SP1- NO. OF BYTES WANTED IN SYMBOL TABLE* 00560020
*                             SRB- CONTAINS BASE/ENTRY                * 00580020
*                             SRR- CONTAINS RETURN ADDRESS            * 00600020
*INPUT- NONE                                                          * 00620020
*OUTPUT- NONE                                                         * 00640020
*EXTERNAL ROUTINES-                                                   * 00660020
*   PUTXRF(ACT)     PUTS OUT CROSS REFERENCE                          * 00680020
*EXITS-                                                               * 00700020
*   STGETR                                                            * 00720020
*        B     0(SRR)    SP1=VALUE      SYMBOL FOUND                  * 00740020
*                        SP1=0          SYMBOL NOT FOUND              * 00760020
*                        SP2=  LENGTH OF SYMBOL - 1                   * 00780020
*   STREFR                                                            * 00800020
*        B     0(SRR)                                                 * 00820020
*   STPUTR                                                            * 00840020
*        B     0(SRR)    SP1=VALUE      SYMBOL FOUND                  * 00860020
*        B     4(SRR)    SP1=0          SYMBOL PUT IN                 * 00880020
*   STROOM                                                            * 00900020
*        B     4(SRR)    SP1=0          ENOUGH ROOM                   * 00920020
         EJECT                                                          00940020
*NOTES-                                                               * 00960020
*   SYMBOL TABLE LAYOUT AND ASSOCIATED POINTERS-                      * 00980020
         SPACE 2                                                        01000020
*   *  HASH     *          *                  NO SYMBOL ENTRIES     * * 01020020
*   *--POINTER--*--SYMBOL--*                  MAY BE MADE PAST      * * 01040020
*   *  TABLES   *  ENTRIES *                  THIS POINT            * * 01060020
*   *           *          *                  *                     * * 01080020
*   *-----------*----------*------//------*---*---------------------* * 01100020
*   *                      *                  *                     * * 01120020
*   *--------CFREEP--------*                  *----28---------------* * 01140020
*   *                                             BYTES             * * 01160020
*   CTSYMP                                                     CESIOB * 01180020
*                                                                     * 01200020
*        CTSYMP+CFREEP =                                              * 01220020
*          START OF NEXT SYMBOL ENTRY                                 * 01240020
*                                                                     * 01260020
*        THE FIRST FOUR ENTRIES IN                                    * 01280020
*        THE HASH TABLE ARE FOR                                       * 01300020
*        DC ENTRIES                                                   * 01320020
*        THE FIFTH ITEM IS FOR OPSYN                                  * 01330023
         EJECT                                                          01340020
*                THE SYMBOL TABLE IS A SERIES OF ITEMS OF THE           01360020
*              FORM DESCRIBED BELOW.  THESE ARE ACCESSED BY MEANS       01380020
*              OF A HASH TABLE OF 3-BYTE ADDRESS POINTERS.  ITEMS       01400020
*              WITH THE SAME HASH VALUE ARE CONNECTED BY BACKWARD       01420020
*              CHAINING.  THUS THE FIRST SYNONYM ENTERED HAS NO         01440020
*              CHAIN POINTER,THE SECOND POINTS TO IT,AND SO ON          01460020
*              UNTIL THE LAST OR MOST RECENT,TO WHICH THE HASH          01480020
*              TABLE ADDRESS POINTS.                                    01500020
 SPACE 3                                                                01520020
*                   SYMBOL TABLE ITEM FORMAT                            01540020
 SPACE                                                                  01560020
*       *************************************************************** 01580020
*       *                                   .                         * 01600020
*       *            SQUISHED   SYMBOL      .  ATTRIBUTES (SEE BELOW) * 01620020
*       *                                   .                         * 01640020
*       *************************************************************** 01660020
*                                                                       01680020
* LENGTH              6 BYTES                             11 BYTES      01700020
 SPACE 2                                                                01720020
*                     ATTRIBUTE FIELD FORMAT                            01740020
 SPACE                                                                  01760020
*       *************************************************************** 01780020
*       *        .                .        .        .        .        * 01800020
*       * ESD NO . ADJECTIVE CODE . ESD ID .  VALUE . LENGTH . CHAIN  * 01820020
*       *        .                .        .        .        .        * 01840020
*       *************************************************************** 01860020
*                                                                       01880020
* LENGTH= 9 BITS .      7 BITS    . 1 BYTE ,3 BYTES ,2 BYTES ,3 BYTES   01900020
 SPACE                                                                  01920020
* ESD NO       USED FOR POINTING TO ESD ITEM                            01940020
* ESD ID       USED TO IDENTIFY CONTROL SECTION                         01960020
* VALUE        ADDRESS RELATIVE TO CONTROL SECTION.                     01980020
* LENGTH       LENGTH ATTRIBUTE OF SYMBOL.MINUS ONE.                    02000020
*                        VALUE AND LENGTH VALID ONLY FOR NAME ITEMS     02020020
* CHAIN        POINTER TO PREVIOUS ITEM  WITH GIVEN HASH                02040020
*                        CHAIN = 0 MEANS END OF CHAIN                   02060020
* ADJECTIVE CODE - BITS.  MASK , MEANING                                02080020
*                   1    X'40'    SYMBOL IN ENTRY EQU-D TO EXT SYMBOL   02100025
*                   2    X'20'    SYMBOL REFERENCED BUT NOT YET DEFINED 02120020
*                   3    X'10'   'ENTRY'ITEM COMPLETED (INTERLUDE)      02140020
*                   4    X'08'   'ENTRY'ITEM COMPLETED (PHASES 7,8)     02160020
*                   5    X'04'    DEFINED IN DSECT,COM OR DXD           02180020
*                  6,7   X'03'   * 00 - CSECT OR START                  02200020
*                                * 01 - EXTRN                           02220020
*                                * 10 - DSECT OR DXD                    02240020
*                                * 11 - NAME ITEM                       02260020
*                                                                       02280020
 EJECT                                                                  02300020
         ENTRY STGETR         GETS AN ITEM FROM THE SYMBOL TABLE        02320020
         ENTRY STPUTR         PUTS AN ITEM INTO THE SYMBOL TABLE        02340020
         ENTRY STROOM         CONTROLS END OF SYMBOL TABLE STORAGE      02360020
         ENTRY     STREFR              OUTPUTS REF RECORDS              02380020
         ENTRY     STSHLEN   LENGTH OF SHRINK REQUEST WHEN SYM TAB FULL 02390021
         EXTRN     F7ABEND             ABEND ROUTINE IN ASMGFI          02400020
         SPACE 3                                                        02420020
FR0      EQU       0                   FLOATING REGISTER 0              02440020
*        *     SYMBOLIC DISPLACEMENTS                                   02460020
*                                                                       02480020
UNDEF    EQU       32                  UNDEFINED ENTRY                  02500020
LASH     EQU       31                  LTH OF LITERAL HASH (28) + OPSYN 02520023
ISYM     EQU       0                               Y+0                  02540020
ADJ      EQU       7                               Y+7                  02560020
IEPTR    EQU       6                               Y+6                  02580020
IESDID   EQU       8                              Y+8                   02600020
IVALUE   EQU       9                              Y+9                   02620020
ILENGT   EQU       12                             Y+12                  02640020
ICHAIN   EQU       14                             Y+14                  02660020
 EJECT                                                                  02680020
         USING *,SRB                                                    02700020
STREFR   MVI   FLAGS,REFSW              SET IN REF MODE                 02720020
         BAL   SRB,STGETR+8             SET UP BASE                     02740020
 SPACE                                                                  02760020
         USING *,SRB                                                    02780020
STGETR   MVI   FLAGS,GETSW              SET IN GET MODE                 02800020
         MVI       SETLEN+3,0          IN CASE NOT SYMBOL               02820020
         BAL   SRB,STPUTR+4             SET UP BASE                     02840020
 SPACE                                                                  02860020
         USING *,SRB                                                    02880020
STPUTR   MVI   FLAGS,PUTSW             SET IN PUT MODE                  02900020
         LTR   SP2,SP2                  IF PARAMETER SP2 WAS GIVEN,     02920020
         BP    KNOWN LENGTH SYMBOL.     BRANCH IF LENGTH IS KNOWN       02940020
         CLI   0(SP1),IALPHA            IS FIRST CHAR A SYMBOL          02960020
         BH    GETOUT                   NO, RETURN NOT FOUND            02980020
 SPACE                                                                  03000020
         LR    SP2,SP1                  SP2 = BEGINNING OF SYMBOL       03020020
SCAN     LA    SP2,1(SP2)               SET AT NEXT CHAR                03040020
         CLI   0(SP2),IALPHA            IS THIS CHAR PART OF SYMBOL     03060020
         BNH   SCAN                     YES, LOOP                       03080020
 SPACE                                                                  03100020
         SR    SP2,SP1                  =LENGTH OF SYMBOL               03120020
KNOWN    C         SP2,=F'8'           TEST IF LENGTH GREATER THAN 8    03140020
         BCTR  SP2,0                    REDUCE BY ONE FOR MOVE          03160020
         STC       SP2,SETLEN+3        SET LENGTH FOR GET EXIT          03180020
         BH      GETOUT                 SET 'NOT FOUND' AND EXIT.       03200020
 SPACE                                                                  03220020
         STC       SP2,MOVSYM+1        PUT LENGTH-1 IN MOVE INST        03240020
         STC       SP2,TRSYM+1           AND IN TRANSLATE INST          03260020
         SDR       FR0,FR0             CLEAR WORK BENCH                 03280020
         STD       FR0,BENCH                                            03300020
MOVSYM   MVC       BENCH(*-*),0(SP1)   MOVE SYMBOL TO BENCH             03320020
TRSYM    TR        BENCH(*-*),CODE2    TRANSLATE TO 2ND INTERNAL CODE   03340020
         L         SP1,BENCH+4         PACK THE SYMBOL TO 6 BYTES       03360020
         SRDL      SP1,6                                                03380020
         SRL       SP1,2                                                03400020
         SRDL      SP1,6                                                03420020
         SRL       SP1,2                                                03440020
         SRDL      SP1,6                                                03460020
         SRL       SP1,2                                                03480020
         SRDL      SP1,6                                                03500020
         ST        SP2,BENCH+4                                          03520020
         L         SP1,BENCH                                            03540020
         SRDL      SP1,6                                                03560020
         SRL       SP1,2                                                03580020
         SRDL      SP1,6                                                03600020
         SRL       SP1,2                                                03620020
         SRDL      SP1,6                                                03640020
         SRL       SP1,2                                                03660020
         SRDL      SP1,6+8                                              03680020
         ST        SP2,BENCH                                            03700020
 SPACE                                                                  03720020
         X            SP2,BENCH+4      FOLD SYMBOL INTO FULLWORD.       03740020
         SR      SP1,SP1                CLEAR 4 BYTES OF DIVIDEND.      03760020
         D       SP1,CPRIME(0,ACT)      PRIME IS HASH DIMENSION.        03780020
         LA     SP2,0(SP1,SP1)          MULTIPLY BY                     03800020
         AR     SP2,SP1                 THREE BYTES/POINTER.            03820020
         L      SP1,CTSYMP(0,ACT)       FIND SYMBOL TABLE BASE          03840020
         LA     SP2,LASH-ICHAIN(SP2,SP1) LASH = LENGTH OF LITERAL HASH. 03860020
         ST     SP2,SAVER               SAVE HASH TABLE ENTRY           03880020
         MVC    SETADJ+1(1),ADJCOD(ACT) INITIALIZE ADJ SET INST         03900020
         MVI       SKNAME+1,X'00'       INITIALIZE BRANCH SWITCH        03920020
 SPACE                                                                  03940020
FOLLOW   MVC   F0XXX+1(3),ICHAIN(SP2)   POINTER TO BOUNDARY             03960020
         L     SP2,F0XXX                POINTER TO REGISTER             03980020
         LTR   SP2,SP2                  IF POINTER IS ZERO,NO SYNONYMS. 04000020
         BZ    NOFIND                                                   04020020
 SPACE                                                                  04040020
         CLC       BENCH+1(6),ISYM(SP2) COMPARE SYMBOLS.                04060020
         BNE       FOLLOW              IF SYMBOLS ARE NOT EQUAL         04080020
 EJECT                                                                  04100020
DUPCHK   CLI   FLAGS,REFSW              ARE WE IN REF MODE              04120020
         BE        REFOUT               YES, CREATE REF RECORD          04140020
         TM        ADJ(SP2),UNDEF      TEST IF THIS SYMBOL NOT DEF YET  04160020
         BNO       FOUND               IF DEFINED THEN FOUND            04180020
         CLI       FLAGS,PUTSW         IS THIS DEF FOR PREVIOUS UNDEF   04200020
         BNE       GETOUT              IF NOT EXIT FOR UNSUCCESSFUL GET 04220020
         MVI       SKNAME+1,X'F0'      ALTER UNDEF ENTRY TO DEF         04240020
         TM        CTXRFI(ACT),X'02'   TEST FOR XREF                    04260020
         BZ        SETENTRY                                             04280020
         S         SP2,=F'2'           SET DEFN LINE NUMBER             04300020
         MVC       0(2,SP2),CTSEQN+2(ACT)                               04320020
         LA        SP2,2(0,SP2)                                         04340020
         B         SETENTRY                                             04360020
 SPACE                                                                  04380020
FOUND    CLI       FLAGS,GETSW         TEST FOR SUCCESSFUL GET          04400020
         BE        FOUNDGO                                              04420020
         ST        SRR,SAVE3           DUPLICATE PUT. CREATE NEW DEFN   04440020
         MVC       SAVER+1(3),DUMMY    NEW DEFN IS NOT CHAINED TO HASH  04460020
         BAL       SRR,CRENTRY         GO CREATE ENTRY                  04480020
         DS        2H                                                   04500020
         L         SRR,SAVE3           RESTORE REGS                     04520020
         B         FOUNDGO             EXIT POINTING TO DUP DEFN        04540020
 SPACE                                                                  04560020
GETOUT   L         SP2,=F'-6'          FORCE SP1=0                      04580020
FOUNDGO  LA        SP1,6(0,SP2)        SET SP1 PAST SYMBOL NAME         04600020
SETLEN   LA        SP2,*-*             SET SP2 TO LENGTH OF SYMBOL - 1  04620020
         BR        SRR                 RETURN                           04640020
 SPACE                                                                  04660020
NOFIND   CLI       FLAGS,REFSW         TEST FOR REF TO UNKNOWN SYMBOL   04680020
         BNE       NOFIND2                                              04700020
         MVI       SETADJ+1,UNDEF      CREATE AN UNDEFINED ENTRY        04720020
         ST        SRR,SAVE3                                            04740020
         BAL       SRR,CRENTRY         GO AND CREATE THE ENTRY          04760020
         DS        2H                                                   04780020
         L         SRR,SAVE3           RESTORE RETURN REG               04800020
 SPACE                                                                  04820020
REFOUT   S         SP2,=F'4'           POINT AT REF COUNT FIELD         04840020
         LH        SP1,0(0,SP2)        INCREMENT IT BY 1                04860020
         LA        SP1,1(0,SP1)                                         04880020
         STH       SP1,0(0,SP2)                                         04900020
         ST        SRR,SAVESR                                           04920020
         L         SRB,CTXTIO(0,ACT)   GO TO XREF WRITTING ROUTINE F7I  04940020
         DROP      SRB                                                  04960020
         BAL       SRR,PUTXRF(0,SRB)                                    04980020
         USING     *,SRR                                                05000020
         MVC       0(6,SP1),BENCH+1    PLACE NAME IN XREF ENTRY         05020020
         MVC       6(2,SP1),CTSEQN+2(ACT) AND PRESENT LINE NUMBER       05040020
         L         SRR,SAVESR          RESTORE RET REG                  05060020
         DROP      SRR                                                  05080020
         BR        SRR                 RETURN                           05100020
 SPACE                                                                  05120020
         USING     STPUTR,SRB                                           05140020
NOFIND2  CLI       FLAGS,GETSW         TEST IF GET OF UNKNOWN SYMBOL    05160020
         BE        GETOUT              EXIT UNSUCCESSFULLY IF SO        05180020
 EJECT                                                                  05200020
CRENTRY  L     SP2,CFREEP(0,ACT)        GET FREE STORAGE POINTER.       05220020
         AR    SP2,SP1                  GET ACTUAL CORE LOCATION        05240020
         TM        CTXRFI(ACT),X'02'   TEST FOR XREF                    05260020
         BNO       NOXREF                                               05280020
         L         SP1,CHAINPT(0,ACT)  POINT AT LAST ENTRY PLACED       05300020
         MVC       MVI+1(1),0(SP1)     SAVE OVERLAPED TOP BYTE          05320020
         LA        SP2,2(0,SP2)        F ALIGN THE NEW ENTRY            05340020
         N         SP2,=F'-4'           (MAY OVERLAP LAST ENTRY BY 1)   05360020
         ST        SP2,0(0,SP1)        FOREWARD CHAIN ALL ENTRIES       05380020
         ST        SP2,CHAINPT(0,ACT)                                   05400020
MVI      MVI       0(SP1),*-*          RESTORE OVERLAPED TOP BYTE       05420020
         L         SP1,CTSEQN(0,ACT)   SET NO. REFS = 0 AND             05440020
         ST        SP1,4(0,SP2)         DEFN LINE NUMBER                05460020
         LA        SP2,8(0,SP2)        POINT PAST XREF PREFIX           05480020
NOXREF   MVC       ISYM(6,SP2),BENCH+1  MOVE SYMBOL                     05500020
 SPACE                                                                  05520020
SETENTRY LH    SP1,CESDNO(ACT)          ESD ITEM POINTER                05540020
         SLL   SP1,7                                                    05560020
         ST        SP1,SAVESR                                           05580020
SETADJ   OI        SAVESR+3,*-*        SET ADJ BITS                     05600020
         TM        CTEXENSW(ACT),X'04' IS OPERAND CONT EXTERN SYMBOL    05604025
         BZ        SETADJ1             NO                               05608025
         OI        SAVESR+3,X'40'      YES, SET SWITCH TO TELL ENTRY    05612025
         NI        CTEXENSW(ACT),X'FB' RESET SWITCH IN ACT              05616025
SETADJ1  MVC   IEPTR(2,SP2),SAVESR+2   PUT ESD NO AND ADJ IN ENTRY      05620025
         MVC   IESDID(1,SP2),ESDID(ACT) ESD-ID TO TABLE ITEM.           05640020
         MVC   IVALUE(3,SP2),STVALU+1(ACT) MEANINGFUL ONLY              05660020
         MVC   ILENGT(2,SP2),STLONG(ACT) IN NAME ITEMS.                 05680020
SKNAME   BC        *-*,STNX            BRANCH IF DEFN OF PREVIOUS UNDEF 05700020
         L     SP1,SAVER                FIND HASH POINTER.              05720020
         MVC       ICHAIN(3,SP2),ICHAIN(SP1) BACKWARD CHAIN TO HASH     05740020
         ST        SP2,SAVER                                            05760020
         MVC       ICHAIN(3,SP1),SAVER+1                                05780020
 SPACE                                                                  05800020
         LA        SP1,ICHAIN+3(0,SP2) POINT PAST NEW ENTRY             05820020
         S         SP1,CTSYMP(0,ACT)   CALCULATE NEW CFREEP             05840020
         ST        SP1,CFREEP(0,ACT)                                    05860020
         SR    SP1,SP1                  NO BYTES REQUIRED FOR ROOM      05880020
         BALR  SRB,0                    RESET BASE AND CHECK FOR ROOM   05900020
 EJECT                                                                  05920020
*                STROOM IS CALLED WHEN SYMBOL TABLE SPACE IS            05940020
*              NEEDED.  THE NUMBER OF BYTES REQUIRED IS PUT             05960020
*              IN SP1 BY THE CALLER.                                    05980020
*                         IF USE OF THE REQUESTED SPACE WILL            06000020
*              LEAVE INSUFFICIENT SPACE FOR THE LARGEST                 06020020
*              POSSIBLE SYMBOL TABLE ITEM THEN A SHRINK IS              06040020
*              DONE.  IF THE SHRINK IS UNSUCCESSFULL THE                06060020
*              THE ASSEMBLY IS ABENDED.                                 06080020
         SPACE 2                                                        06100020
         USING *,SRB                                                    06120020
STROOM   L       SRB,=A(STPUTR)        SET UP NORMAL BASE               06140020
         USING     STPUTR,SRB                                           06160020
         A     SP1,CTSYMP(ACT)                                          06180020
         A     SP1,CFREEP(ACT)          SET SP1 = LAST OF ST + MAX SYMB 06200020
         LA    SP1,MAXSYM(0,SP1)          + REQUESTED BYTES = NEW POS   06220020
         C         SP1,CESIOB(0,ACT)    COMPARE                         06240020
         BNH   STNX                     BRANCH, ENOUGH ROOM             06260020
 SPACE                                                                  06280020
         L         SP1,CESIOB(0,ACT)   RESET TOP OF CORE                06300020
         A         SP1,STSHLEN                                          06320021
         ST        SP1,CESIOB(0,ACT)                                    06340020
         STM       GR0,GR1,SAVESR      SAVE R0 AND R1                   06360020
         L         GR1,BUFFPT(0,ACT)   ISSUE A SHRINK CALL              06380020
         CNOP      2,4                                                  06400020
         BALR      GR0,GR1                                              06420020
         DC        A(36)               CODE FOR SHRINK                  06440021
STSHLEN  DC        A(*-*)              LENGTH SET BY ASMGF7I            06450021
SHANS    DS        F                                                    06460020
         LM        GR0,GR1,SAVESR      UNSAVE REGISTERS                 06480020
         CLI       SHANS,X'FF'         TEST FOR NO MO CORE              06500020
         BNE       STNX                                                 06520020
         L         FRB,=A(F7ABEND)     KILL THE JOB                     06540020
         BR        FRB                                                  06560020
         DROP      SRB                                                  06580020
 SPACE                                                                  06600020
STNX     SR    SP1,SP1                  YES                             06620020
         B     4(SRR)                   NORMAL EXIT                     06640020
         EJECT                                                          06660020
MAXSYM   EQU       28                   MAXIMUM SYMBOL LENGTH           06680020
 SPACE                                                                  06700020
SAVESR   DS        F                    SUBROUTINE REGISTER SAVE AREA   06720020
SAVER    DS        F                    SAVE AREA FOR SRR               06740020
SAVE3    DS        F                                                    06760020
 SPACE                                                                  06780020
BENCH    DS    D                                                        06800020
F0XXX    DC        F'0'                                                 06820020
DUMMY    DC        AL3(SAVER-ICHAIN)   CAUSE SAVER TO CHAIN TO ITSELF   06840020
         LTORG                                                          06860020
 SPACE                                                                  06880020
*                  THIS CODE HAS THE FOLLOWING PROPERTIES.              06900020
*                  1. IT ONLY USES THE BOTTOM 6 BITS OF EACH BYTE       06920020
*                  2. IT HAS THE SAME COLLATING SEQUENCE AS EBCDIC      06940020
CODE2    DC        X'30313233343536373839'       NUMBERS                06960020
         DC        X'101112131415161718191A1B1C' LETTERS                06980020
         DC        X'1D1E1F20212223242526272829' LETTERS                07000020
         DC        X'0A0B0C'                     FUNNY LETTERS $ # @    07020020
         DC        X'000000000000000000000000'   BLANK                  07040020
 SPACE                                                                  07060020
FLAGS    DC    X'00'                    FLAG FOR FOLLOWIN INDICATORS    07080020
GETSW    EQU   X'0F'                         GET MODE                   07100020
REFSW    EQU   X'F0'                         REF MODE                   07120020
PUTSW    EQU   X'00'                         PUT MODE                   07140020
         END   STGETR                                                   07160020
./ ADD NAME=ASMGF7V
F7V      TITLE     'ASMG F7  EVALUATION ROUTINE'                        00020021
         ISEQ  73,78                                                    00040021
ASMGF7V  START                                                          00060020
EEVAL    EQU   ASMGF7V                                                  00080020
         PRINT     NOGEN                                                00100020
         FDIMEN                                                         00120020
         PRINT     GEN                                                  00140020
* SP1 AT ENTRY CONTAINS A POINTER TO THE FIRST CHARACTER OF THE         00160020
* EXPRESSION TO BE EVALUATED.                                           00180020
* SP1 AT EXIT CONTAINS A POINTER TO THE CHARACTER FOLLOWING THE         00200020
* EXPRESSION WHICH CAUSED EEVAL TO TERMINATE.                           00220020
* THE TERMINATING CHARACTER WILL ALWAYS BE A LEFT OR RIGHT PARENTHESIS  00240020
* OR A BLANK OR A COMMA, UNLESS THERE WAS A SYNTACTICAL ERROR.          00260027
* SP1 WILL CONTAIN ZERO IF A SYNTACTICAL ERROR IN THE EXPRESSION WAS    00280020
* FOUND.                                                                00300020
*                                                                       00320020
*                                                                       00340020
* BIT 0 OF CTSDVI(ACT) IS USED AS AN INPUT PARAMETER TO EEVAL.          00360020
*  IF THIS BIT IS 0, THERE IS NO EFFECT ON EEVAL.  HOWEVER, IF THIS     00380020
*  BIT IS 1, AND THE FIRST (OR ONLY) TERM IN THE EXPRESSION IS A SELF-  00400020
*  DEFINING VALUE,THE BIT IS THEN SET BACK TO 0, THE VALUE OF THE SELF- 00420020
*  DEFINING VALUE IS PLACED IN SP2, THE CONDITION CODE IS SET TO 0, AND 00440020
*  EEVAL EXITS TO THE CALLING ROUTINE.                                  00460020
*                                                                       00480020
*                                                                       00500020
* BIT 2 OF CTSDVI(ACT) IS ALSO USED AS AN INPUT PARAMETER TO EEVAL;     00520020
* THIS BIT(CTPDSI) IS USED AS A SWITCH TO INDICATE A PREVIOUSLY         00540020
* DEFINED SYMBOL ERROR.                                                 00560020
*                                                                       00580020
* SP2 AT EXIT CONTAINS THE RESULT, IF THE EXPRESSION WAS ABSOLUTE.      00600020
* SP2 AT EXIT CONTAINS A POINTER TO THE RESULTS, IF THE EXPRESSION WAS  00620020
* RELOCATABLE, AS FOLLOWS.                                              00640020
* ONE FULL-WORD CONTAINING THE VALUE OF THE EXPRESSION, FOLLOWED BY     00660020
* 25 HALF-WORDS,ONE FOR EACH POSSIBLE TERM IN AN EXPRESSION, WITH THE   00680027
*               FOLLOWING MEANING.                                      00700020
*               BOTH BYTES ZERO INDICATES AN ABSOLUTE TERM OR A         00720020
*               PAIRED RELOCATABLE TERM.  OTHERWISE, THE FIRST BYTE     00740020
*               INDICATES THE SIGN OF THE RELOCATABLE TERM (1 FOR +,    00760020
*               AND 2 FOR -), AND THE SECOND BYTE CONTAINS ITS          00780020
*               ESD-ID.                                                 00800020
* A SIMPLY RELOCATABLE EXPRESSION WILL HAVE A + SIGN AND THE ESD-ID     00820020
*               OF ITS UNPAIRED POSITIVE TERM IN THE FIRST HALF-WORD.   00840020
*               THE REMAINING HALF-WORDS WILL CONTAIN ZEROS.            00860027
* A COMPLEXLY RELOCATABLE EXPRESSION WILL HAVE A NON-ZERO HALF-WORD     00880020
*               FOR EACH UNPAIRED RELATIVE TERM. IN GENERAL, THE        00900020
*               NON-ZERO HALF-WORDS WILL BE SCATTERED IN THIS LIST,     00920020
*               NECESSITATING A SCAN FOR NON-ZERO HALF-WORDS WHEN       00940020
*               THE EXPRESSION IS COMPLEXLY RELOCATABLE.                00960020
*                                                                       00980020
* THE RESULT WILL ALWAYS BE A 3-BYTE VALUE (1ST BYTE ZERO) UNLESS       01000020
* F8YDC(ACT) IS SET, IN WHICH CASE, THE RESULT WILL BE 4 BYTES          01020020
*                                                                       01040020
* UPON EXIT FROM EEVAL, THE CONDITION CODE HAS THE FOLLOWING MEANING.   01060020
*               ABSOLUTE EXPRESSION                 CC = 0              01080020
*               SIMPLY RELOCATABLE EXPRESSION       CC = 1              01100020
*               COMPLEXLY RELOCATABLE EXPRESSION    CC = 2              01120020
*               EVALUATION IMPOSSIBLE (ERROR)       CC = 3              01140020
*                                                                       01160020
*                                                                       01180020
* THE FOLLOWING ERRORS ARE LOGGED.                                      01200020
*                   RELOCATABILITY ERROR                                01220020
*                   SELF-DEFINING VALUE TOO LARGE                       01240020
*                   ARITHMETIC ERROR                                    01260020
*                   SYMBOL NOT PREVIOUSLY DEFINED                       01280020
*                   TWO TERMS NOT SEPARATE                              01300020
*                   ILLEGAL CHARACTER                                   01320020
*                   TOO MANY TERMS                                      01340020
*                   TWO OPERATORS ILLEGALLY COUPLED                     01360020
*                   TOO MANY LEVELS OF PARENS                           01380020
*                   EXPRESSION END PREMATURE                            01400020
*                   INVALID SYMBOL                                      01420020
*               EXP. VALUE EXCEEDS RANGE                                01440020
* THE ERRORS ARE LOGGED IN ALL CASES.                                   01460020
*                                                                       01480020
* NORMAL PROCESSING IS CONTINUED AFTER LOGGING                          01500020
* EXP. VALUE EXCEEDS RANGE, EYMBOL-                                     01520020
* NOT-PREVIOUSLY DEFINED,ARITHMETIC,RELOCATABILITY,OR SELF-DEFINING-    01540020
* VALUE-TOO-LARGE ERRORS. FOR THESE ERRORS,SP1 WILL POINT TO THE        01560020
* TERMINATING CHARACTER,SP2 WILL BE ZERO,AND THE CONDITION CODE WILL BE 01580020
* 3 UPON EXIT FROM EVAL.                                                01600020
*                                                                       01620020
* THE OTHER ERRORS CAUSE IMMEDIATE EXIT FROM EEVAL WITH SP1 AND SP2 SET 01640020
* TO ZERO,AND THE CONDITION CODE 3.                                     01660020
* THE CONDITION CODE WILL NOT BE 3 FOR EXP. VALUE EXCEEDS RANGE         01680020
*                                                                       01700020
*  SYMBOLS ARE FIRST LOOKED FOR IN THE WORK BUCKETS, AND IF NOT THERE,  01720020
*  THEN IN THE SYMBOL TABLE.                                            01740020
*                                                                       01760020
*                                                                       01780020
* TYPE 1 CROSS REFERENCES ARE MADE FOR EACH SYMBOL                      01800020
*                                                                       01820020
*                                                                       01840020
*  THE LENGTH ATTRIBUTE OF THE FIRST TERM IN THE EXPRESSION IS PLACED   01860020
*  IN STLONG(ACT).                                                      01880020
*                                                                       01900020
*                                                                       01920020
* IF THERE WAS REFERENCE TO THE LOCATION COUNTER (I.E. AN ASTERISK) IN  01940020
*  THE EXPRESSION, BIT 1 IN CTLRCI(ACT) IS SET TO 1.  IF NOT, THIS      01960020
*  BIT IS SET TO 0.                                                     01980020
*                                                                       02000020
*                                                                       02020020
*  GRD USED FOR BASE OF TERMS WORK AREA                                 02030027
*  GRX USED FOR POINTER TO TERMS LIST                                   02040020
*  GRY USED FOR POINTER TO OPRNS LIST                                   02060020
*  GRZ USED FOR POINTER TO NTRMS LIST                                   02080020
*  GR2 USED FOR POINTER TO RLIST LIST                                   02100020
* GR0,GR1,GRA, AND GRB USED AS WORK REGISTERS                           02120020
         EJECT                                                          02140020
         USING *,SRB                    USING SRB                       02160020
*                                                                       02180020
*  INITIALIZE                                                           02200020
*                                                                       02220020
         STM   GRA,GRD,REGSAV           SAVE SOME VOLATILE REGS         02230027
         L     GRD,CTFVEVAL(,ACT)       GET ADDR OF TERMS WORK AREA     02240027
         USING TERMSWK,GRD              AND SET THE BASE                02250027
         SR    GR0,GR0                  ZERO A WORK REGISTER            02260027
         STH   GR0,STLONG(,ACT)         ZERO TO STLONG(ACT)             02280027
         MVI   TERMS,X'00'              ZERO TO TERMS                   02300027
         MVC   TERMS+1(TERMSLEN-1),TERMS  ZERO ALL OF TERM WORK AREA    02320027
         NI    CTLCRI(ACT),X'BF'        SET BIT FOR LOC. CNTR. REF. OFF 02340020
         LA    GRZ,NTRMS                GET ADDRESS OF NTRMS            02350027
         LA    GRX,TERMS                GET ADDRESS OF TERMS            02360027
         LA    GRY,OPRNS                GET ADDRESS OF OPRNS            02370027
         LA    GR2,RLIST                GET ADDRESS OF RLIST            02380027
         ST    SP1,FTXPPT              SAV PT TO FIRST BYTE OF EXP      02400020
*                                                                       02420020
*  SCAN OF THE EXPRESSION FOR TERMS OR OPERATORS                        02440020
*                                                                       02460020
LOOK     CLI   0(SP1),IALPHA            IS CHAR. ALPHANUMERIC           02480020
         BH    NOTAM                                                    02500020
         ST    SP1,ERRPT               SAV PT TO FIRST BYTE OF TERM     02520020
         STM   GRZ,GRY,SAVE             SAVE 3 WORK REGISTERS           02540020
         CLI   0(SP1),IA                IS CHAR. A NUMBER               02560020
         BL    DEC                                                      02580020
         CLI   1(SP1),IQUOTE            IS NEXT CHAR. A QUOTE           02600020
         BE    NEXTQ                                                    02620020
*                                                                       02640020
*  SYMBOL IN THE EXPRESSION                                             02660020
*                                                                       02680020
SYM      DS    0H                                                       02690027
         CLI   COND,CONDE               TWO TERMS IN A ROW .Q           02700027
         BNL   ERR10                    ERROR IF YES                    02720027
         SR    GR0,GR0                                                  02740020
         ST    GR0,0(GRX)               ZERO TO TERMS LIST              02760020
         CLI   LREF,0                  IS L'SYMBOL                      02780020
         BE    TRYSWB                  NO                               02800020
         CLI   0(SP1),IMULT            IS L'*                           02820020
         BNE   TRYSWB                  NO                               02840020
         MVI   3(GRX),1                1 TO TERMS LIST                  02860020
         MVI   LREF,0                  CLEAR LREF                       02880020
         MVN   LREF(1),F8INST+15(ACT)  MOVE IN LENGTH ATTRIBUTE         02900020
         CLI   LREF,2                                                   02920020
         BL    ATTR1                   0,1 = VALUE OF 1                 02940020
         CLI   LREF,8                                                   02960020
         BH    ATTR1                   GTR 8 = VALUE OF 1               02980020
         MVC   3(1,GRX),LREF           PUT L'* VALUE IN TERMS LIST      03000020
ATTR1    LA    SP1,1(SP1)              POSITION SP1 TO CHAR. AFTER *    03020020
         B     LSTAR                                                    03040020
*                                                                       03060020
*  LOOK FOR SYMBOL VALUE IN WORK BUCKET                                 03080020
*                                                                       03100020
*                                                                       03120020
* CTXWBP(ACT), FULL WORD ALIGNED, POINTS TO 'NEXT' SYMBOL WORK BUCKET.  03140020
* WHEN ZERO, THERE IS NO 'NEXT' SYMBOL WORK BUCKET.                     03160020
*                                                                       03180020
TRYSWB   L     SP2,CTXWBP(ACT)         POINTER TO NEXT SYM. WK-BUCKET   03200020
         LTR   SP2,SP2                  IS THERE A NEXT SYM. WK-BUCKET  03220020
         BZ    TRYST                                                    03240020
         LR    GR1,SP2                                                  03260020
         LA    GR1,6(GR1)               BUMP POINTER TO SYM. WK-BUCKET  03280020
         ST    GR1,CTXWBP(ACT)                    BY 6                  03300020
         TM    TXSUBS(SP2),X'10'        IS VALUE IN WORK-BUCKET         03320020
         BO    WBFND                                                    03340020
*                                                                       03360020
*  LOOK FOR SYMBOL VALUE IN SYMBOL TABLE                                03380020
*                                                                       03400020
TRYST    STM   SRB,SP2,NCOMP                                            03420020
         SR    SP2,SP2                  SET LENGTH UNKNOWN              03440020
         L     SRB,CSTGET(ACT)                                          03460020
         BALR  SRR,SRB                  TO STGET ROUTINE                03480020
         DROP  SRB                                                      03500020
         USING *,SRR                                                    03520020
         LTR   GR1,SP1                  POINTER TO GR1 AND TEST         03540020
         LR    GR0,SP2                  LENGTH OF SYMBOL TO GR0         03560020
         LM    SRB,SP2,NCOMP                                            03580020
         DROP  SRR                                                      03600020
         USING EEVAL,SRB                                                03620020
         BC    7,FOUND                  HAS SYMBOL BEEN FOUND           03640020
*                                                                       03660020
*  SYMBOL NOT FOUND IN EITHER A WORK BUCKET OR THE SYMBOL TABLE         03680020
*                                                                       03700020
         MVI   TERMS,0                                                  03720020
         MVC   TERMS+1(RCNTR-TERMS),TERMS  ZERO TERMS, RLIST AND RCNTR  03740027
         LA    GR1,X'08'                                                03760020
         CLR   GR0,GR1                  TEST SYMBOL LENGTH              03780020
         BNL   ERR3                     MORE THAN 8 CHARACTERS          03800020
         STM   SRB,GR2,NCOMP            1-8 CHARACTERS IN SYM, SAVE REC 03820020
         LR    FRB,GR0                                                  03840020
         BAL   GR2,XREF                 LOG CROSS-REF                   03860020
         LM    FRB,GR2,NCOMP+16        RESTORE REGS                     03880020
         B     ERR15                    SYMBOL NOT FOUND                03900020
SCANE    LA    SP1,1(SP1)               SCAN TO END OF SYMBOL           03920020
COND3    EQU   SCANE                                                    03940020
         CLI   0(SP1),IPLUS                                             03960020
         BL    SCANE                                                    03980020
         B     COMPT4                                                   04000020
*                                                                       04020020
*  SYMBOL VALUE FOUND IN SYMBOL TABLE                                   04040020
*                                                                       04060020
FOUND    STM   SRB,GR2,NCOMP            SAVE REGS                       04080020
         LR    FRB,GR0                                                  04100020
         BAL   GR2,XREF                 LOG CROSS-REF.                  04120020
         LM    FRB,GR2,NCOMP+16        RESTORE REGS                     04140020
         AR    SP1,GR0                  ADD SYMBOL LENGTH TO POINTER    04160020
         LA    SP1,1(SP1)                                               04180020
         CLI   LREF,0                   IS L'SYMBOL                     04200020
         BH    LSYM                                                     04220020
         TM    1(GR1),3                 IS THIS A NAME                  04240020
         BC    14,ESDMV                NO                               04260020
         CLI   SYMBL,0                  IS THIS THE FIRST TERM          04280020
         BH    MOVE                                                     04300020
         MVC   STLONG(2,ACT),6(GR1)     LENGTH TO STLONG                04320020
MOVE     MVC   1(3,GRX),3(GR1)          VALUE TO TERMS LIST             04340020
         CLI   2(GR1),0                 IS ABSOLUTE TERM                04360020
         BE    COMPT4                                                   04380020
ESDMV    TM    1(GR1),X'03'             IS SYMBOL EXTERNAL .Q           04390025
         BNM   ESDMV1                   BRANCH IF NOT MIXED             04395025
         OI    CTEXENSW(ACT),X'04'      SET SWITCH TO TELL ENTRY        04400025
ESDMV1   MVC   1(1,GR2),2(GR1)          ESD-ID TO RLIST                 04405025
*                                                                       04420020
OUT      DS    0H                                                       04430027
         MVI   COND,CONDF               SET RELOCATABLE TERM            04440027
         MVI   0(GR2),1                 CODE FOR + SIGN = 1 TO RLIST    04460020
         IC    GR1,RCNTR                BUMP RCNTR BY 1 (RELOCATABLE)   04480020
         LA    GR1,1(GR1)                                               04500020
         STC   GR1,RCNTR                                                04520020
         B     COMPT                                                    04540020
*                                                                       04560020
*  SYMBOL VALUE FOUND IN WORK BUCKET                                    04580020
*                                                                       04600020
WBFND    SR    GRA,GRA                                                  04620020
         STM   SRB,GR2,NCOMP           SAVE REGS                        04640020
WBFNDX   LA    SP1,1(SP1)               SCAN TO END OF SYMBOL           04660020
         LA    GRA,1(GRA)              CNTR FOR LENGTH OF SYM MINUS 1   04680020
         CLI   0(SP1),IPLUS                                             04700020
         BL    WBFNDX                                                   04720020
         BCTR    GRA,0                 DECREMENT SYMBOL LENGTH BY 1     04740020
         ST    SP1,REGSAV1             SAVE PTR TO END OF SYMBOL        04760020
         LR    FRB,GRA                                                  04780020
         BAL   GR2,XREF                 LOG CROSS-REF                   04800020
         L     SP1,REGSAV1             RESTORE PTR TO END OF SYMBOL     04820020
         LM    FRB,GR2,NCOMP+16        RESTORE REGS                     04840020
         CLI   LREF,0                   IS L'SYMBOL                     04860020
         BH    LSYMWB                                                   04880020
         TM    TXSTPC(SP2),X'03'       IS THIS A NAME                   04900020
         BC    14,WBESDMV              NO                               04920020
         CLI   SYMBL,0                  IS THIS THE FIRST TERM          04940020
         BH    WBFNDY                                                   04960020
         MVC   STLONG+1(1,ACT),TXSLEN(SP2)                              04980020
         TM    TXSEXI(SP2),X'04'        IS LENGTH GR THAN 256           05000020
         BZ    WBFNDY                                                   05020020
         MVI   STLONG(ACT),255          SET FIRST BYTE OF STLONG =255   05040020
WBFNDY   MVC   1(3,GRX),TXSVAL(SP2)     VALUE TO TERMS LIST             05060020
         CLI   TXSESD(SP2),0           IS ABSOLUTE TERM                 05080020
         BE    COMPT4                                                   05100020
WBESDMV  MVC   1(1,GR2),TXSESD(SP2)    ESD-ID TO RLIST                  05120020
         B     OUT                                                      05140020
*                                                                       05160020
* BUILD TYPE 2  CROSS-REFERENCE RECORD                                  05180020
*                                                                       05200020
XREF     TM    CTXRFI(ACT),X'02'       X-REF OPTION?                    05220020
         BZ    NOXREF                  OFF                              05240020
         LA        SP2,1(0,FRB)        PUT SYMBOL LENGTH IN SP2         05260020
         L     SRB,CSTREF(ACT)         OUTPUT THE REF RECORD            05280020
         BALR  SRR,SRB                                                  05300020
         DROP  SRB                                                      05320020
         USING *,SRR                                                    05340020
         LM    SRB,SP2,NCOMP                                            05360020
*                                               GRX,GRY,GR0             05380020
         DROP  SRR                                                      05400020
         USING EEVAL,SRB                                                05420020
NOXREF   LM    SRB,SP2,NCOMP                                            05440020
         BR    GR2                                                      05460020
*                                                                       05480020
*  L'SYMBOL VALUE FOUND IN SYMBOL TABLE                                 05500020
*                                                                       05520020
LSYM     TM    1(GR1),3                 IS THIS A NAME                  05540020
         BC    14,UPLSYM                                                05560020
MOVEL    MVC   2(2,GRX),6(GR1)          LENGTH TO TERMS LIST            05580020
         B     UPLSYM                                                   05600020
*                                                                       05620020
*  L'SYMBOL VALUE FOUND IN WORK BUCKET                                  05640020
*                                                                       05660020
LSYMWB   MVC   3(1,GRX),TXSLEN(SP2)    LENGTH TO TERMS LIST             05680020
UPLSYM   L     GR1,0(GRX)                                               05700020
         LA    GR1,1(GR1)                                               05720020
         N     GR1,LOW16                CLEAR TOP HALFWORD        V7A51 05730028
         ST    GR1,0(GRX)               BUMP VALUE OF L'SYMBOL BY 1     05740020
LSTAR    MVI   LREF,0                  SET LREF TO ZERO                 05760020
         B     COMPT4                                                   05780020
*                                                                       05800020
*  DECIMAL SELF-DEFINING VALUE IN THE EXPRESSION                        05820020
*                                                                       05840020
DEC      LA    SHFR,3                   DEC. TYPE INDICATOR TO SHFR     05860020
         BAL   RETR,SDVCF               TO SELF-DEFINING VALUE ROUTINE  05880020
         LA    GR0,8                    MAX. NO. OF CHAR. TO GR0        05900020
         LM    GRZ,GRY,SAVE             RE-LOAD SAVED REGISTERS         05920020
         ST    VALR,0(GRX)              VALUE TO TERMS LIST             05940020
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15 05942028
         BNO   DECNEX                   BRANCH IF NOT             V7A15 05944028
         LA    GR0,10                   MAX NO OF DIGITS          V7A15 05946028
         B     ABSD                     GO AND CHECK RESULT       V7A15 05948028
DECNEX   DS    0H                                                 V7A15 05950028
         CLI   0(GRX),0                 IS FIRST BYTE ZERO              05960020
         BH    ERR0                                                     05980020
         B     ABSD                                                     06000020
*                                                                       06020020
*  1ST CHARACTER IS ALPHABETIC AND 2ND IS A QUOTE                       06040020
*                                                                       06060020
NEXTQ    CLI   0(SP1),IB                IS BINARY SELF-DEF. VALUE       06080020
         BE    BINRY                                                    06100020
         CLI   0(SP1),IC                IS CHARACTER SELF-DEF. VALUE    06120020
         BE    CHARS                                                    06140020
         CLI   0(SP1),IX                IS HEXADECIMAL SELF-DEF. VALUE  06160020
         BE    HEX                                                      06180020
         CLI   0(SP1),IL                IS L'SYMBOL                     06200020
         BNE   ERR9                                                     06220020
*                                                                       06240020
*  L'SYMBOL IN THE EXPRESSION                                           06260020
*                                                                       06280020
         LA    SP1,2(SP1)               POINT SP1 TO 1ST CHAR. OF SYM.  06300020
         MVI   LREF,X'FF'               SET L'SYMBOL FLAG NON-ZERO      06320020
         CLI   0(SP1),IALPHA           IS CHAR. ALPHANUMERIC            06340020
         BNH   ALPHA                   YES                              06360020
MAYLCNTR CLI   0(SP1),IMULT            IS CHAR. *                       06380020
         BNE   ERR9                    NO                               06400020
ALPHA    CLI   0(SP1),IA               IS CHAR. ALPHABETIC              06420020
         BL    ERR9                    NO                               06440020
*                                                                       06460020
* IN WORK BUCKET, VALUE = LENGTH.                                       06480020
* IN SYMBOL TABLE, PICK UP LENGTH ATTRIBUTE PART OF SYMBOL.             06500020
*                                                                       06520020
         B     SYM                                                      06540020
*                                                                       06560020
*  BINARY SELF-DEFINING VALUE IN THE EXPRESSION                         06580020
*                                                                       06600020
BINRY    LA    SHFR,1                   BINARY TYPE INDICATOR TO SHFR   06620020
         LA    SP1,2(SP1)               POSITION SP1 TO FIRST CHAR.     06640020
         BAL   RETR,SDVCF               TO SELF-DEFINING VALUE ROUTINE  06660020
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15 06662028
         BNO   BINNEX                   BRANCH IF NOT             V7A15 06664028
         LA    GR0,32                   MAX NO OF BITS            V7A15 06666028
         B     LM                       GO AND CHECK RESULT       V7A15 06668028
BINNEX   DS    0H                                                 V7A15 06670028
         LA    GR0,24                   MAX. NO. OF CHAR. TO GR0        06680020
         B     LM                                                       06700020
*                                                                       06720020
*  CHARACTER SELF-DEFINING VALUE IN THE EXPRESSION                      06740020
*                                                                       06760020
CHARS    LA    SP1,2(SP1)               POSITION SP1 TO FIRST CHAR.     06780020
         LA    SHFR,8                   CHAR. TYPE INDICATOR TO SHFR    06800020
         BAL   RETR,SDVCF               TO SELF-DEFINING VALUE ROUTINE  06820020
         LA    GR0,4                    MAX NO OF CHARACTERS      V7A15 06840028
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15 06842028
         BO    CHANEX                   BRANCH IF YES             V7A15 06844028
         LA    GR0,3                    MAX NO OF CHARACTERS      V7A15 06846028
CHANEX   DS    0H                                                 V7A15 06848028
         LM    GRZ,GRY,SAVE             RE-LOAD SAVED REGISTERS         06860020
         ST    VALR,0(GRX)              VALUE TO TERMS LIST             06880020
         L     SP2,CTRTBP(ACT)          POINTER TO TRANSLATE TABLE      06900020
         TR    0(4,GRX),0(SP2)          TRANSLATE CHAR. VALUE           06920020
         B     CKQ                                                      06940020
*                                                                       06960020
*  HEXADECIMAL SELF-DEFINING VALUE IN THE EXPRESSION                    06980020
*                                                                       07000020
HEX      LA    SHFR,4                   HEX TYPE INDICATOR TO SHFR      07020020
         LA    SP1,2(SP1)               POSITION SP1 TO FIRST CHAR.     07040020
         BAL   RETR,SDVCF               TO SELF-DEFINING VALUE ROUTINE  07060020
         LA    GR0,8                    MAX NO OF HEX DIGITS      V7A15 07062028
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15 07064028
         BO    LM                       BRANCH IF YES             V7A15 07066028
         LA    GR0,6                    MAX. NO. OF CHAR. TO GR0        07080020
LM       LM    GRZ,GRY,SAVE             RE-LOAD SAVED REGISTERS         07100020
         ST    VALR,0(GRX)              VALUE TO TERMS LIST             07120020
CKQ      CLI   0(SP1),IQUOTE            IS ENDING CHAR. A QUOTE         07140020
         BNE   ERR9                                                     07160020
         LA    SP1,1(SP1)               POSITION SP1 TO CHAR. AFTER '   07180020
         LTR   CNTR,CNTR                IS CNTR ZERO                    07200020
         BZ    ERR9                                                     07220020
ABSD     CLR   CNTR,GR0                 IS CNTR GR THAN MAX.            07240020
         BH    ERR0                                                     07260020
         CLI   COND,CONDA               IS COND UNCHANGED .Q            07280027
         BH    ABSCK                                                    07300020
         TM    CTSDVI(ACT),X'80'        IS BIT FOR SELF-DEF. VALUE ON   07320020
         BZ    ABSCK+8                                                  07340020
         NI    CTSDVI(ACT),X'7F'        SET THE BIT OFF                 07360020
         B     FINIS                                                    07380020
ABSCK    DS    0H                                                       07390027
         CLI   COND,CONDE               TWO TERMS IN A ROW .Q           07400027
         BNL   ERR10                    ERROR IF YES                    07420027
COMPT4   DS    0H                                                       07430027
         MVI   COND,CONDE               SET ABSOLUTE TERM               07440027
COMPT    DS    0H                                                       07450027
         LA    GR0,RLIST                START OF RELOC LIST             07460027
         LR    GRB,GR2                  THIS IS WHERE WE'RE AT          07465027
         SR    GRB,GR0                  THIS IS THE DIFFERENCE          07470027
         CH    GRB,CTTERMC(,ACT)        TOO MANY TERMS .Q               07475027
         LA    GRB,MNYERR               DIAGNOSTIC IF SO                07480027
         BH    FATLER1                                                  07500020
         OI    SYMBL,1                  OR SYMBL WITH 1                 07520020
         MVI   0(GRZ),2                 2 TO NTRMS LIST                 07540020
         LA    GRZ,1(GRZ)               BUMP GRZ BY 1 (FOR NTRMS)       07560020
         LA    GRX,4(GRX)               BUMP GRX BY 4 (FOR TERMS)       07580020
         LA    GR2,2(GR2)               BUMP GR2 BY 2 (FOR RLIST)       07600020
         B     LOOK                                                     07620020
*                                                                       07640020
*  1ST CHARACTER IS NOT ALPHANUMERIC                                    07660020
*                                                                       07680020
NOTAM    CLI   0(SP1),ICOMMA            IS CHAR. A COMMA                07700020
         BL    LTCOM                                                    07720020
         BE    BLCOM                                                    07740020
         CLI   0(SP1),ILPARN            IS CHAR. A LEFT PAREN.          07760020
         BE    LPAR                                                     07780020
         BL    ERR9                                                     07800020
         CLI   0(SP1),IQUOTE            IS CHAR. A ' OR ( OR BLANK      07820020
         BL    RPAR                                                     07840020
         BH    BLCOM                                                    07860020
         B     ERR9               ' IS ILLEGAL FIRST CHAR.              07880020
*                                                                       07900020
*  RIGHT PARENTHESIS IN THE EXPRESSION                                  07920020
*                                                                       07940020
RPAR     DS    0H                                                       07950027
         CLI   COND,CONDE               DOES RIGHT PAREN FOLLOW TERM .Q 07960027
         BL    ERR12                    ERROR IF NOT                    07980027
         MVI   COND,CONDE               SET RIGHT PAREN COND            08000027
         CLI   PCNTR,0                  IS PCNTR =0                     08020020
         BH    NOEND                                                    08040020
         B     ENDNG                                                    08060020
*                                                                       08080020
*  1ST CHARACTER IS EITHER +,-,*, OR /.                                 08100020
*                                                                       08120020
LTCOM    CLI   0(SP1),IASTER            IS CHAR. AN ASTERISK            08140020
         BE    STAR                                                     08160020
         BH    SLASH                                                    08180020
*                                                                       08200020
*  + OR - IN THE EXPRESSION                                             08220020
*                                                                       08225027
PLMIN    DS    0H                                                       08230027
         CLI   COND,CONDE               WAS LAST ENTRY A TERM .Q        08235027
         BNL   PLMIN3                   BRANCH IF YES                   08240027
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q                  08245027
         BZ    ERR12                    NO UNARY +,- IF NOT             08250027
         CLI   COND,CONDA               1ST OPERATOR/TERM .Q            08260027
         BE    COMPT4                   ENTER ZERO OPERAND IF YES       08270027
         MVI   COND,CONDC               UNARY OPERATOR                  08280027
PLMIN2   DS    0H                                                       08285027
         LA    GR0,IALPHA-2             BUMP OPERATOR BY TWO            08290027
         B     SET1                     AND ENTER SAME                  08295027
PLMIN3   DS    0H                                                       08300027
         MVI   COND,CONDB               BINARY + OR -                   08305027
SET      DS    0H                                                       08310027
         LA    GR0,IALPHA                                               08315027
SET1     DS    0H                                                       08320027
         IC    GR1,0(SP1)                                               08340020
         SR    GR1,GR0                                                  08360020
         STC   GR1,NEWOP                HIERARCHY CODE TO NEWOP         08380020
*                                                                       08400020
*  MAIN LOOP TO PERFORM ARITHMETIC                                      08420020
*                                                                       08440020
LOOP     DS    0H                                                       08450027
         LA    GR1,OPRNS                POINT TO FIRST OPERATOR ENTRY   08460027
         CR    GRY,GR1                  ARE THERE PREVIOUS OPERATORS .Q 08470027
         BH    ONZ                                                      08480020
         CLI   ENDOE,0                  IS ENDOE=0                      08500020
         BH    FINIS                                                    08520020
PUT      MVC   0(1,GRY),NEWOP           NEWOP TO OPRNS LIST             08540020
BUMPY    LA    GRY,1(GRY)               BUMP GRY BY 1 (FOR OPRNS)       08560020
BUMPR    LA    SP1,1(SP1)               BUMP SP1 BY 1 (FOR NON-ALFNUM)  08580020
         B     LOOK                                                     08600020
ONZ      BCTR  GRY,0                    POINT GRY TO PREVIOUS OPERATOR  08620020
         CLC   0(1,GRY),NEWOP           IS NEW HIERARCHY LT-EQ PREVIOUS 08640020
         BNL   LE                                                       08660020
         CLI   NEWOP,OPSLASH            TEST NEW OP /                   08680027
         BNE   STEPUP                   NO                              08700020
         CLI   0(GRY),OPSTAR            TEST PREV OP *                  08720027
         BE    WORK                     YES, DO * FIRST                 08740020
STEPUP   LA    GRY,1(GRY)               ADD 1 BACK TO GRY               08760020
         B     PUT                                                      08780020
LE       DS    0H                                                       08790027
         CLI   NEWOP,OPUMINUS           IS THIS UNARY - .Q              08792027
         BE    STEPUP                   JUST ENTER IT IF YES            08794027
         CLI   NEWOP,OPUPLUS            IS THIS UNARY + .Q              08796027
         BE    STEPUP                   JUST ENTER IF YES               08798027
         CLI   0(GRY),OPEND             IS OLD HIERARCHY ZERO .Q        08800027
         BH    WORK                                                     08820020
         IC    GR1,PCNTR                SUBTRACT 1 FROM PCNTR           08840020
         BCTR  GR1,0                                                    08860020
         STC   GR1,PCNTR                                                08880020
         B     BUMPR                                                    08900020
*                                                                       08920020
*  LEFT PARENTHESIS IN THE EXPRESSION                                   08940020
*                                                                       08960020
LPAR     DS    0H                                                       08970027
         CLI   COND,CONDE               WAS A TERM LAST ENTRY .Q        08980027
         BNL   LPEND                    POSSIBLE END OF EXP IF YES      09000027
         MVI   COND,CONDB               SET LEFT PAREN COND             09020027
         SR    GR1,GR1                  ZERO WORK REGISTER              09030027
         IC    GR1,PCNTR                GET CURRENT LEVEL OF PARENS     09040027
         CH    GR1,CTPARENC(,ACT)       ARE THERE TOO MANY LEFT PARENS  09060027
         LA    GRB,PARERR               TOO MANY LEVELS OF PARENS       09080027
         BH    FATLER2                  BRANCH IF TOO MANY              09100027
         LA    GR1,1(,GR1)              INCREMENT LEVEL OF PARENS       09120027
         STC   GR1,PCNTR                                                09140020
         MVI   0(GRY),0                 ZERO TO OPRNS LIST              09160020
         B     BUMPY                                                    09180020
*                                                                       09200020
*  ASTERISK IN THE EXPRESSION                                           09220020
*                                                                       09240020
STAR     DS    0H                                                       09250027
         CLI   COND,CONDD               FORMER STAR OR SLASH .Q         09260027
         BE    ERR12                    ERROR IF YES                    09280027
         BL    LCNTR                    BRANCH IF LOC CNTR REFERENCE    09300020
*                                                                       09320020
*  ASTERISK IS MULTIPLICATION OPERATOR                                  09340020
*                                                                       09360020
FORD1    DS    0H                                                       09370027
         MVI   COND,CONDD               SET MULT/DIV COND               09380027
         B     PLMIN2                   GO ADJUST OPERATION             09400027
*                                                                       09420020
*  SLASH IN THE EXPRESSION                                              09440020
*                                                                       09460020
SLASH    DS    0H                                                       09470027
         CLI   COND,CONDE               DOES A TERM PRECEDE .Q          09480027
         BL    ERR12                    ERROR IF NOT                    09500027
         B     FORD1                    ENTER THE SLASH                 09520027
*                                                                       09540020
*  BLANK OR COMMA IN THE EXPRESSION                                     09560020
*                                                                       09580020
BLCOM    DS    0H                                                       09590027
         CLI   COND,CONDE               TERM PRECEDE BLANK OR COMMA .Q  09600027
         BL    ERR17                    ERROR IF NOT                    09620027
*                                                                       09640020
*  LEFT PARENTHESIS END CONDITION                                       09660020
*                                                                       09680020
LPEND    CLI   PCNTR,0                  IS PCNTR =0                     09700020
         BH    ERR17                                                    09720020
ENDNG    MVI   ENDOE,15                 SET ENDOE NON-ZERO              09740020
NOEND    DS    0H                                                       09750027
         MVI   NEWOP,OPEND              SET NEWOP ZERO                  09760027
         B     LOOP                                                     09780020
*                                                                       09800020
*  ASTERISK IS LOCATION COUNTER                                         09820020
*                                                                       09840020
LCNTR    OI    CTLCRI(ACT),X'40'        SET BIT FOR LOC. CNTR. REF. ON  09860020
         LA    SP1,1(SP1)               POSITION SP1 TO NEXT CHAR.      09880020
         L     SP2,CTXABP(ACT)          POINTER TO LOC. CNTR.           09900020
         MVC   1(3,GRX),TXLOC(SP2)      LOC. CNTR VALUE TO TERMS LIST   09920020
         MVI   0(GRX),0                                                 09940020
         CLI   SYMBL,0                 IS THIS THE FIRST TERM           09960020
         BH    LCNTR2                  NO                               09980020
         MVN   LREF(1),F8INST+15(ACT)  MOVE IMPLIED EXPRESSION LENGTH   10000020
         CLI   LREF,0                  DONT DECREMENT LREF IF ZERO      10020020
         BZ    LCNTR1                                                   10040020
         IC    GR1,LREF                TO TEMP LOC                      10060020
         BCTR  GR1,0                   DECREMENT BY 1                   10080020
         STC   GR1,LREF                AND MOVE                         10100020
LCNTR1   MVC   STLONG+1(1,ACT),LREF         TO STLONG                   10120020
         MVI   LREF,0                  SET LREF TO ZERO                 10140020
LCNTR2   MVC   1(1,GR2),CESDID(ACT)    CURRENT ESD-ID TO RLIST          10160020
         B     OUT                                                      10180020
*                                                                       10200020
*  PERFORM ARITHMETIC AND RELOCATABILITY WORK                           10220020
*                                                                       10240020
WORK     ST    GR2,NCOMP                STORE GR2 IN NCOMP              10260020
         LA    GR0,8                    POINT GRX TO 1ST OF THE 2       10280020
         SR    GRX,GR0                       TERMS ENTRIES              10300020
         LA    GR0,2                    POINT GRZ TO 1ST OF THE 2       10320020
         SR    GRZ,GR0                       NTRMS ENTRIES              10340020
         IC    GR0,1(GRZ)               2ND NTRMS  ENTRY TO GR0         10360020
         SR    GR2,GR0                  SUBT. 2ND NTERMS ENTRY FRM GR2  10380020
         SR    GR1,GR1                  ZERO A WORK REGISTER            10385027
         IC    GR1,0(,GRY)              GET OPERATOR FUNCTION           10390027
         AR    GR1,GR1                  DOUBLE IT                       10395027
         LH    GR1,OPBRANCH(GR1)        GET INDEX BRANCH VALUE          10400027
         B     ASMGF7V(GR1)             THE APPROPRIATE ROUTINE         10405027
OPBRANCH DC    H'1'                     ZERO ERROR                      10410027
         DC    AL2(OPPLS-ASMGF7V)       BINARY PLUS                     10415027
         DC    AL2(OPMINS-ASMGF7V)      BINARY MINUS                    10420027
         DC    AL2(OPUPLS-ASMGF7V)      UNARY PLUS                      10425027
         DC    AL2(OPUMINS-ASMGF7V)     UNARY MINUS                     10430027
         DC    AL2(MULDV-ASMGF7V)       MULTIPLICATION                  10435027
         DC    AL2(MULDV-ASMGF7V)       DIVISION                        10440027
*                                                                       10460020
*  OPERATOR IS SUBTRACTION.  COMPLEMENT 2ND VALUE AND CHANGE THE        10480020
*  RELOCATION SIGN BYTE OF THE TERMS IN THE 2ND VALUE.                  10500020
*                                                                       10502027
OPUMINS  DS    0H                                                       10504027
         CLI   0(GR2),OPPLUS            IS SIGN BYTE + .Q               10506027
         BL    NOCHGU                   BRANCH IF ABSOLUTE              10508027
         BE    PLCHGU                   BRANCH IF SIGN +                10510027
         MVI   0(GR2),OPPLUS            CHANGE - SIGN TO +              10512027
         B     NOCHGU                   AND CONTINUE                    10514027
PLCHGU   DS    0H                                                       10516027
         MVI   0(GR2),OPMINUS           CHANGE + SIGN TO -              10518027
NOCHGU   DS    0H                                                       10520027
         L     GR1,4(,GRX)              GET CURRENT VALUE               10522027
         LCR   GR1,GR1                  COMPLEMENT 2ND TERMS LIST ENTRY 10524027
OPUSET   DS    0H                                                       10526027
         LA    GRX,4(,GRX)              BUMP OPND POINTER               10528027
         L     GR2,NCOMP                RESTORE RLIST POINTER           10530027
         LA    GRZ,1(,GRZ)              UNARY HAS BUT ONE TERM          10532027
         B     STORE                    AND CONTINUE                    10534027
OPUPLS   DS    0H                                                       10536027
         L     GR1,4(,GRX)              GET CURRENT VALUE               10538027
         B     OPUSET                   AND REENTER IT                  10540027
*                                                                       10542027
OPMINS   DS    0H                                                       10544027
         L     GR1,4(,GRX)              GET 2ND TERMS LIST ENTRY        10546027
         LCR   GR1,GR1                  COMPLEMENT 2ND TERMS LIST ENTRY 10560020
         ST    GR1,4(GRX)                                               10580020
CHG      DS    0H                                                       10590027
         CLI   0(GR2),OPPLUS            TEST SIGN BYTE IN 2ND RLIST     10600027
         BL    NOCHG                    BRANCH IF ABS. VALUE            10620020
         BE    PLCHG                    BRANCH IF SIGN +                10640020
         MVI   0(GR2),OPPLUS            CHANGE SIGN TO +                10660027
         B     NOCHG                                                    10680020
PLCHG    DS    0H                                                       10690027
         MVI   0(GR2),OPMINUS           CHANGE SIGN TO -                10700027
NOCHG    DS    0H                                                       10710027
         LA    GR2,2(,GR2)              POINT GR2 TO NEXT ENTRY         10720027
         CL    GR2,NCOMP                                                10740020
         BL    CHG                      BRANCH BACK IF MORE ENTRIES     10760020
         SR    GR2,GR0                  SUBT. 2ND NTERMS ENTRY FRM GR2  10780020
*                                                                       10800020
*  OPERATION IS ADDITION OR SUBTRACTION.  SCRATCH ENTRIES IN THE        10820020
*  RELOCATION LIST WHERE POSSIBLE.                                      10840020
*                                                                       10860020
OPPLS    IC    GR0,0(GRZ)               1ST NTRMS  ENTRY TO GR0         10880020
         LR    GR1,GR2                  POINT GR1 TO 2ND NTRMS LIST     10900020
         SR    GR2,GR0                  POINT GR2 TO 1ST NTRMS LIST     10920020
         LR    SP2,GR1                  SAVE GR1 IN SP2                 10940020
BCOMP    DS    0H                                                       10950027
         CLI   0(GR2),OPPLUS            IS FIRST SIGN +                 10960027
         BL    NSCR                     BRANCH IF ABS. VALUE (CODE =0)  10980020
         BH    F2MIN                    BRANCH IF FIRST SIGN -          11000027
         CLI   0(GR1),OPMINUS           IS SECOND SIGN -                11020027
         BL    NSCR                     BRANCH IF SIGN NOT -            11040020
OPP      CLC   1(1,GR2),1(GR1)          COMPARE FIRST TO SECOND ESD-ID  11060020
         BNE   NSCR                     BRANCH IF NOT THE SAME          11080020
         MVI   0(GR2),0                 ZERO TO FIRST SIGN              11100020
         MVI   1(GR2),0                 ZERO TO FIRST ESD-ID            11120020
         MVC   0(2,GR1),0(GR2)          ZERO TO 2ND SIGN AND ESD-ID     11140020
         IC    GR0,RCNTR                SUBTRACT 2 FROM RCNTR           11160020
         BCTR  GR0,0                                                    11180020
         BCTR  GR0,0                                                    11200020
         STC   GR0,RCNTR                                                11220020
         B     NSCR                                                     11240020
F2MIN    DS    0H                                                       11250027
         CLI   0(GR1),OPPLUS            IS SECOND SIGN +                11260027
         BE    OPP                                                      11280020
NSCR     LA    GR1,2(GR1)               POINT GR1 TO NEXT IN 2ND RLIST  11300020
         CL    GR1,NCOMP                                                11320020
         BL    BCOMP                    BRANCH BACK IF MORE IN 2ND LIST 11340020
         LA    GR2,2(GR2)               POINT GR2 TO NEXT IN 1ST LIST   11360020
         LR    GR1,SP2                  START OF 2ND LIST BACK TO GR1   11380020
         CLR   GR1,GR2                                                  11400020
         BH    BCOMP                    BRANCH BACK IF MORE IN 1ST LIST 11420020
         L     GR2,NCOMP                NCOMP BACK TO GR2               11440020
         LCR   GR1,GR1                  COMPLEMENT GR1                  11460020
         AR    GR1,GR2                  2ND NTRMS ENTRY TO GR1          11480020
         IC    GR0,0(GRZ)               1ST NTRMS ENTRY TO GR0          11500020
         AR    GR1,GR0                  ADD THE 2 NTRMS ENTRIES         11520020
         STC   GR1,0(GRZ)               SUM TO POSITION OF THE 1ST      11540020
*                                                                       11560020
*  PERFORM ADDITION                                                     11580020
*                                                                       11600020
         L     GR1,0(GRX)               1ST TERMS LIST ENTRY TO GR1     11620020
         A     GR1,4(GRX)               ADD 2ND ENTRY                   11640020
         BO    ERR13             -DUMMY-APPROP. OVERFLOW ROUTINE TO SYS 11660020
STORE    ST    GR1,0(GRX)               RESULT TO 1ST TERMS LIST ENTRY  11680020
         LA    GRX,4(GRX)               BUMP GRX BY 4 (FOR TERMS LIST)  11700020
         LA    GRZ,1(GRZ)               BUMP GRZ BY 1 (FOR NTRMS LIST)  11720020
         B     LOOP                                                     11740020
*                                                                       11760020
*  OPERATOR IS MULTIPLICATION OR DIVISION.  CHECK THAT NO RELOCATABLE   11780020
*  TERMS REMAIN IN THE 2 VALUES.                                        11800020
*                                                                       11820020
MULDV    SR    GR1,GR1                  CLEAR GR1                       11840020
         IC    GR1,0(GRZ)               1ST NTERMS ENTRY TO GR1         11860020
         AR    GR0,GR1                  ADD THE 2 NTRMS ENTRIES         11880020
         STC   GR0,0(GRZ)               SUM TO 1ST ENTRY LOCATION       11900020
         SR    GR2,GR1                  SUBT. 1ST NTRMS ENTRY FROM GR2  11920020
         LA    GR0,2                    2 TO GR0                        11940020
         L     GR1,NCOMP                                                11960020
         SR    GR1,GR0                  C(NCOMP)-2 TO GR1               11980020
MORE     CLI   0(GR2),0                                                 12000020
         BH    ERR11                                                    12020020
MORE1    BXLE  GR2,GR0,MORE                                             12040020
         SR    GR1,GR1                  ZERO GR1                        12060020
         C     GR1,4(GRX)                                               12080020
         BE    STORE                    BRANCH IF 2ND TERMS ENTRY =0    12100020
         L     GR0,0(GRX)               1ST TERMS ENTRY TO GR0          12120020
         SRDA  GR0,32                   PROPAGATE SIGN BIT              12140020
         CLI   0(GRY),OPSTAR            IS OPERATOR * OR /              12160027
         BH    DIV                      BRANCH IF /                     12180020
*                                                                       12200020
*  PERFORM MULTIPLICATION                                               12220020
*                                                                       12240020
         M     GR0,4(GRX)               MULTIPLY BY 2ND TERMS ENTRY     12260020
         LTR   GR1,GR1                                                  12280020
         BNL   CHK0                     BRANCH IF LOW-ORDER NON-NEG     12300020
         LCR   GR0,GR0                  COMPLEMENT HIGH-ORDER           12320020
         BCTR  GR0,0                    SUBTRACT 1 FROM THE COMPLEMENT  12340020
CHK0     LTR   GR0,GR0                                                  12360020
         BC    7,ERR13                  ERROR  IF HIGH-ORDER NOW NOT=0  12380020
         B     STORE                                                    12400020
*                                                                       12420020
*  PERFORM DIVISION                                                     12440020
*                                                                       12460020
DIV      D     GR0,4(GRX)               DIVIDE 1ST BY 2ND TERMS ENTRY   12480020
         B     STORE                                                    12500020
*                                                                       12520020
*  END OF EXPRESSION FOUND                                              12540020
*                                                                       12560020
FINIS    TM    F8YDC+1(ACT),X'01'       IS THIS ADCON                   12580020
         BO    NOTST                    YES,ADCON MAY BE 4 BYTES        12600020
         BAL   GRZ,DATATST              RESULT MUST NOT EXCEED 3 BYTES  12620020
NOTST    DS    0H                                                       12640027
         L     SP2,TERMS                MOVE RESULT TO SP2              12660027
         ST    SP2,RLIST-4              RESULT TO HEAD RLIST            12680027
         NI    CTPDSI(ACT),X'DF'        TURN OFF                        12700020
         CLI   ERROR,0                                                  12720020
         BH    SETE                                                     12740020
         CLI   RCNTR,0                                                  12760020
         BE    SETRET                   RETURN WITH CC=0 (ABSOLUTE EXP) 12780027
         LA    SP2,RLIST-4              POINTER TO RESULT TO SP2        12800020
         CLI   RCNTR,1                                                  12820020
         BH    SETRET                   RETURN WITH CC=2 (COMPLX REL.)  12840027
         LA    GR1,RLIST-2              FIND FIRST AND ONLY RLIST ENTRY 12860020
FIND     LA    GR1,2(GR1)                    WHERE SIGN BYTE NON-ZERO   12880020
         CLI   0(GR1),1                                                 12900020
         BL    FIND                                                     12920020
         BH    SETRET                   RETURN WITH CC=2 (COMPLX REL.)  12940027
         MVC   RLIST(2),0(GR1)          MOVE ENTRY TO TOP OF LIST       12960020
         CLI   0(GR1),2                                                 12980020
         B     SETRET                   RETURN WITH CC=1 (SIMPLY REL.)  13000027
*                                                                       13020020
DATATST  TM    TERMS,X'FF'              VALUE EXCEEDS 3 BYTES           13040020
         BCR   11,GRZ                   (BNM) NO                        13060027
         STM   SRB,GR2,NCOMP                                            13080020
         L     SP1,FTXPPT               SET COL PTR TO 1ST BYTE         13100020
         L     SRB,CLOGER(ACT)          TO LOGERR                       13120020
         BALR  SRR,SRB                                                  13140020
         DROP  SRB                                                      13160020
         USING *,SRR                                                    13180020
         DC    AL2(VALTOLG)             ERROR CODE                      13200020
         LM    SRB,GR2,NCOMP                                            13220020
         DROP  SRR                                                      13240020
         USING EEVAL,SRB                                                13260020
DATAOK   MVI   TERMS,0                  ZERO 1ST BYTE OF RESULT         13280020
         BR    GRZ                                                      13300020
*                                                                       13320020
*                                                                       13340020
*  ERROR FOUND                                                          13360020
*                                                                       13380020
* TABLE OF ERROR CODES USED IN EEVAL                                    13400020
INVALID  EQU   18                       INVALID SYMBOL                  13420020
RELERR   EQU   25                  RELOCATABILITY ERROR                 13440020
SELFDEF  EQU   91                  SELF-DEF. VALUE TOO LARGE            13460020
ARITHER  EQU   56                  ARITHMETIC ERROR-OVERFLOW            13480020
PDSERR   EQU   21                  SYMBOL MUST BE PREVIOUSLY DEFINED    13500020
ILORDER  EQU   85                  TWO TERMS NOT SEPARATE               13520020
ILLCHAR  EQU   85                  ILLEGAL CHARACTER                    13540020
MNYERR   EQU   27                  EXP. CONTAINS MORE THAN CTTERMC TRMS 13560027
OPERR    EQU   85                  TWO OPERATORS ILLEGALLY COUPLED      13580020
PARERR   EQU   26                  TOO MANY LEVELS OF PARENS            13600020
ENDERR   EQU   39                  EXP. END PREMATURE-UNPAIRED PAREN    13620020
VALTOLG  EQU   110              VALUE EXCEEDS RANGE                     13640020
* NON-FATAL ERROR FOUND                                                 13660020
* LOG ERROR, CONTINUE NORMAL PROCESSING                                 13680020
*                                                                       13700020
*  ERROR IS RELOCATABLE TERM INVOLVED IN A MULT. OR DIV. OPERATION      13720020
*                                                                       13740020
ERR11    LA    GRA,MORE1                                                13760020
         TM    CTPDSI(ACT),X'20'       PREV.DEF. SYM. SWITCH ON         13780020
         BO    ERR11A                  YES                              13800020
         BR    GRA                     NO, DONT LOG ERROR               13820020
ERR11A   LA    GRB,RELERR              RELOCATABILILTY ERROR            13840020
         B     NFATLER1                                                 13860020
*                                                                       13880020
*  ERROR IS SELF-DEFINING VALUE TOO LARGE                               13900020
*                                                                       13920020
ERR0     LA    GRA,ABSD+6                                               13940020
         LA    GRB,SELFDEF         SELF-DEF. VALUE TOO LARGE            13960020
         B     NFATLER2                                                 13980020
*                                                                       14000020
* ERROR IS SYMBOL LENGTH                                                14020020
*                                                                       14040020
ERR3     LA    GRA,SCANE                                                14060020
         LA    GRB,INVALID              SYMBOL TOO LONG                 14080020
         B     ERRXXX                                                   14100020
*                                                                       14120020
*                                                                       14140020
*  ERROR IS ARITHMETIC                                                  14160020
*                                                                       14180020
ERR13    LA    GRA,STORE                                                14200020
         LA    GRB,ARITHER         ARITHMETIC ERROR                     14220020
         B     NFATLER1                                                 14240020
*                                                                       14260020
* ERROR IS SYMBOL NOT FOUND OR SYMBOL MUST BE PREVIOUSLY DEFINED        14280020
*                                                                       14300020
ERR15    LA    GRA,SCANE                                                14320020
         TM    CTPDSI(ACT),X'20'        YES,PREV.-DEF. SYM. SWITCH ON ? 14340020
         BO    ERR15C                  YES                              14360020
         BR    GRA                 NO,DONT LOG ERROR                    14380020
ERR15C   LA    GRB,PDSERR          SYMBOL MUST BE PREVIOUSLY DEFINED    14400020
         B     ERRXXX                                                   14420020
*                                                                       14440020
*                                                                       14460020
NFATLER1 MVC   ERRPT(4),FTXPPT         SET COL PTR TO 1ST BYTE          14480020
NFATLER2 STM   SRB,GR2,NCOMP                                            14500020
         L     SP1,ERRPT                                                14520020
         B     ERRXX                                                    14540020
*                                                                       14560020
* FATAL ERROR FOUND                                                     14580020
* LOG ERROR, EXIT FROM EEVAL WITH SP1 AND SP2 EQUAL 0                   14600020
*                                                                       14620020
*                                                                       14640020
*ERROR IS ILLEGAL CHARACTER                                             14660020
*                                                                       14680020
ERR9     LA    GRB,ILLCHAR         ILLEGAL CHARACTER                    14700020
         B     FATLER2                                                  14720020
*                                                                       14740020
* ERROR IS TWO CONSECUTIVE OPERATORS                                    14760020
*                                                                       14780020
ERR12    LA    GRB,OPERR           ILLEGAL ORDER OF OPERATORS           14800020
         B     FATLER2                                                  14820020
*                                                                       14840020
*ERROR IS ILLEGAL END OF EXPRESSION OR UNPAIRED PARENS                  14860020
*                                                                       14880020
ERR17    LA    GRB,ENDERR          EXPRESSION END PREMATURE             14900020
         B     FATLER2                                                  14920020
*                                                                       14940020
* ERROR IS TWO CONSECUTIVE TERMS                                        14960020
*                                                                       14980020
ERR10    LA    GRB,ILORDER         ILLEGAL ORDER OF TERMS               15000020
*                                                                       15020020
FATLER1  STM   SRB,GR2,NCOMP                                            15040020
         L     SP1,ERRPT               PT TO 1ST OF TERM OR EXP.        15060020
         LA    GRA,EXERR                                                15080020
         B     ERRXX                                                    15100020
FATLER2   LA   GRA,EXERR                                                15120020
*                                                                       15140020
*                                                                       15160020
ERRXXX   STM   SRB,GR2,NCOMP                                            15180020
ERRXX    STH   GRB,ERCODE                                               15200020
         MVI   ERROR,X'FF'         TURN ON ERROR SWITCH                 15220020
ERRLOG   L     SRB,CLOGER(ACT)                                          15240020
         BALR  SRR,SRB             TO LOGERR                            15260020
         DROP  SRB                                                      15280020
         USING *,SRR                                                    15300020
ERCODE   DS    AL2                 ERROR CODE                           15320020
         LM    SRB,GR2,NCOMP                                            15340020
         DROP  SRR                                                      15360020
         USING EEVAL,SRB                                                15380020
         BR    GRA                 NO,CONTINUE PROCESSING EXPRESSION    15400020
EXERR    SR    SP1,SP1               SET SP1 TO ZERO                    15420020
SETE     SR    SP2,SP2             SET SP2 TO ZERO                      15440020
         NI    CTPDSI(ACT),X'DF'        TURN OFF                        15460020
         TM    ERROR,X'FF'              SET CC=3 FOR ERROR CONDITION    15480027
SETRET   DS    0H                                                       15490027
         LM    GRA,GRD,REGSAV           RESTORE VOLATILE REGISTERS      15500027
         BR    SRR                      RETURN TO CALLER                15520027
         EJECT                                                          15530027
*                                                                       15540020
* CONVERT SELF-DEFINING VALUES - FENDALL                                15560020
* ENTER WITH REGISTER COLR POINTING TO 1ST CHARACTER OF CONSTANT.       15580020
* LOAD REGISTER SHFR WITH CONSTANT TYPE INDICATOR-                      15600020
*        1 = BINARY                                                     15620020
*        3 = DECIMAL                                                    15640020
*        4 = HEX                                                        15660020
*        8 = CHARACTER                                                  15680020
* BRANCH WITH RETURN REGISTER RTNR.                                     15700020
* RETURNS WITH CONVERTED VALUE IN REGISTER VALR, RIGHT JUSTIFIED,       15720020
* SIGNIFICANT CHARACTER COUNT IN REGISTER CNTR, COLR AT 1ST             15740020
* NON-CONSTANT CHARACTER.                                               15760020
* REGISTERS SAVR AND CHAR ARE SCRATCHED.                                15780020
* SINGLE + CAUSES IMMEDIATE RETURN WITH CNTR = 0 AND COLR AT +.         15800020
* LEADING BITS MAY BE LOST IF VALUE TOO LARGE.                          15820020
RETR     EQU    GRZ                                                     15840020
COLR     EQU    SP1                                                     15860020
SHFR     EQU   GRX                                                      15880020
VALR     EQU   SP2                                                      15900020
SAVR     EQU    GRY                                                     15920020
CHAR     EQU    GR0                                                     15940020
CNTR     EQU    GR1                                                     15960020
SDVCF    SR    VALR,VALR                CLEAR VALUE                     15980020
         LR    CHAR,VALR                CLEAR CHAR                      16000020
         LR    CNTR,VALR                CLEAR COUNT                     16020020
         STC   SHFR,SDV08+1             STORE SHIFT                     16040020
         CLI   SDV08+1,8                TEST FOR C-CONSTANT             16060020
         BNE   SDV01                    NO                              16080020
         L     VALR,SDV09               YES, LOAD EXTERNAL ZEROES       16100020
SDV01    LA    SAVR,SDV08-1(SHFR)       TEST CHAR RANGE                 16120020
         CLC   0(1,COLR),0(SAVR)                                        16140020
         BH    SDV07                    EXIT ON TOO HIGH                16160020
         IC    CHAR,0(COLR)                                             16180020
         LR    SAVR,VALR                SAVE CUMULATIVE VALUE           16200020
         CLI   SDV08+1,8                TEST FOR C-CONSTANT             16220020
         BNE   SDV04                    NO, TO SHIFT                    16240020
         CLI   0(COLR),IQUOTE           TEST '                          16260020
         BNE   SDV02                    NO                              16280020
         CLI   1(COLR),IQUOTE           TEST ''                         16300020
         BE    SDV03                    YES, TO SKIP                    16320020
         B     SDV07                    NO, EXIT                        16340020
SDV02    CLI   0(COLR),IAMPSD           TEST +                          16360020
         BNE   SDV04                    NO, TO SHIFT                    16380020
         CLI   1(COLR),IAMPSD           TEST ++                         16400020
         BNE   SDV06                    NO, ERROR                       16420020
SDV03    LA    COLR,1(COLR)             SKIP ' OR +                     16440020
SDV04    DS    0H                                                 V7A15 16460028
         CLI   SDV08+1,3                TEST FOR DECIMAL CONSTANT V7A15 16462028
         BNE   SDV05                    BRANCH IF NOT             V7A15 16464028
         SLA   VALR,0(SHFR)             OLD VALUE TIMES EIGHT     V7A15 16466028
         BO    SDVOFLO                  ERROR IF OVERFLOW         V7A15 16468028
         AR    SAVR,SAVR                TWICE OLD VALUE           V7A15 16470028
         AR    VALR,SAVR                TEN TIMES OLD VALUE       V7A15 16472028
         BO    SDVOFLO                  BRANCH IF OVERFLOW        V7A15 16474028
         AR    VALR,CHAR                PLUS NEXT DIGIT           V7A15 16480028
         BNO   SDV05A                   BRANCH IF NO OVERFLOW     V7A15 16490028
SDVOFLO  DS    0H                                                 V7A15 16500028
         LA    CNTR,10                  TOO MANY DECIMAL DIGITS   V7A15 16510028
         B     SDV05A                   AND CONTINUE              V7A15 16520028
SDV05    DS    0H                                                 V7A15 16530028
         SLL   VALR,0(SHFR)             SHIFT OLD VALUE           V7A15 16540028
         ALR   VALR,CHAR                ADD CHAR TO VALUE         V7A15 16550028
SDV05A   DS    0H                                                 V7A15 16560028
         LA    CNTR,1(CNTR)             STEP COUNT                      16580020
         LA    COLR,1(COLR)             STEP COLUMN POINTER             16600020
         B     SDV01                    TO NEXT CHAR                    16620020
SDV06    SR    CNTR,CNTR                CLEAR COUNT FOR ERROR           16640020
SDV07    BR    RETR                     EXIT                            16660020
*                                                                       16680020
*                                                                       16700020
SDV08    DC    X'0100090F000000FF'      LIMITS                          16720020
         DS    0F                                                       16740020
SDV09    DC    X'F0F0F0F0'              EBCDIC ZEROES                   16760020
LOW16    DC    F'65535'                 LAST SIXTEEN BITS ON      V7A51 16770028
REGSAV   DS    4F                       SAVE AREA FOR F7V VOLATILE REGS 16780027
REGSAV1   DS   F                                                        16800020
ERRPT    DS    F                       SAV AREA FOR COL PTR             16820020
FTXPPT   DS    F                       SAV AREA FOR PTR TO 1ST BYTE     16840020
OTHERR   DC    X'00'                   SWITH FOR ERR PATH,0-OFF,1-ON    16860020
FATAL    DC    X'00'               FATAL ERR SWH (0=NON-FATAL,1=FATAL)  16880020
*        START OF TERMS WORK AREA                                       16890027
TERMSWK  DSECT                                                          16895027
TERMS    DS    25F                      LIST OF VALUES                  16900027
RLIST    DS    25H                      RELOCATABILITY LIST             16920027
RCNTR    DS    C                        COUNTER OF RELOCATABLE TERMS    16940020
ERROR    DS    C                        ON(1), OFF(0)                   16960020
PCNTR    DS    C                        COUNTER OF LEVEL OF '('         16980027
SYMBL    DS    C         0=SYM 1ST TERM,1=NOT 1ST TERM,255=SYM NOT FND  17000020
NTRMS    DS    25C                      NUMBER OF TERMS PER TERMS ENTRY 17020027
OPRNS    DS    40C                      LIST OF OPERATIONS              17040027
COND     DS    C                        VALIDITY INDICATOR              17060020
ENDOE    DS    C                        END EXPRESSION FLAG             17080020
NEWOP    DS    C                        LATEST OPERATION FOUND          17100020
LREF     DS    C                        L'SYM REF  ON(1) OFF(0)         17120020
TERMSLEN EQU   *-TERMS                  LENGTH OF TERMS WORK AREA       17130027
ASMGF7V  CSECT                          AS YOU WERE                     17135027
NCOMP    DS    11F                                                      17140020
SAVE     EQU   NCOMP                                                    17160020
         EJECT                                                          17165027
*********************************************************************** 17170027
*         *PREVIOUS*                                                  * 17172027
*  CHAR   *  COND  *     ACTION                                       * 17174027
*********************************************************************** 17176027
* START   *   --   * SET COND = 0                                       17178027
*********************************************************************** 17180027
*  (      *0/1/2/3 * SET COND = 1                                       17182027
*         *4/5     * IF PCNTR GT CTTERMC, LOG ASMG026                   17184027
*********************************************************************** 17186027
*  )      *0/1/2/3 * LOG ASMG085                                        17188027
*         *4/5     * SET COND = 4, IF PCNTR=0 END EXPRESSION            17190027
*********************************************************************** 17192027
*  +-     *0       * SET INITIAL ZERO TERM                              17194027
*         *1/2/3   * SET COND = 2                                       17196027
*         *4/5     * SET COND = 1                                       17198027
*********************************************************************** 17200027
*  *      *0/1/2   * SET COND = 5, * IS LOCATION COUNTER                17202027
*         *3       * LOG ASMG085                                        17204027
*         *4       * SET COND = 3, * IS MULT                            17206027
*         *5       * LOG ASMG025                                        17208027
*********************************************************************** 17210027
*  /      *0/1/2/3 * LOG ASMG085                                        17212027
*         *4       * SET COND =3                                        17214027
*         *5       * LOG ASMG025                                        17216027
*********************************************************************** 17218027
*ABSOLUTE *0/1/2/3 * SET COND = 4                                       17220027
*TERM     *4/5     * LOG ASMG085                                        17222027
*********************************************************************** 17224027
*RELOCAT- *0/1/2   * SET COND = 5                                       17226027
*ABLE TERM*3       * LOG ASMG025                                        17228027
*         *4/5     * LOG ASMG085                                        17230027
*********************************************************************** 17232027
*,OR BLANK*0/1/2/3 * LOG ASMG039                                        17234027
*         *4/5     * IF PCNTR GT 0, LOG ASMG039                         17236027
*********************************************************************** 17238027
*                                                                       17240027
CONDA    EQU   0                        INITIAL COND SETTING            17242027
CONDB    EQU   1                        LEFT PAREN, BINARY + OR -       17243027
CONDC    EQU   2                        UNARY + OR -                    17244027
CONDD    EQU   3                        ASTERISK OR SLASH               17245027
CONDE    EQU   4                        ABSOLUTE TERM OR RIGHT PAREN    17246027
CONDF    EQU   5                        RELOCATABLE TERM                17247027
*                                                                       17248027
*        HEIRARCHY CODES FOR OPRNS                                      17249027
OPEND    EQU   0                        BLANK OR COMMA                  17250027
OPPLUS   EQU   1                        BINARY PLUS                     17251027
OPMINUS  EQU   2                        BINARY MINUS                    17252027
OPUPLUS  EQU   3                        UNARY PLUS                      17253027
OPUMINUS EQU   4                        UNARY MINUS                     17254027
OPSTAR   EQU   5                        MULTIPLICATION                  17255027
OPSLASH  EQU   6                        DIVISION                        17256027
*                                                                       17257027
         END                                                            17260020
./ ADD NAME=ASMGF7X
F7X      TITLE     'ASMG F7  GET STATEMENT ROUTINE (TXGET)'             00020027
         ISEQ  73,78                                                    00040027
         COPY  ASMGSET                                                  04600027
         EJECT                                                          04620027
ASMGF7X  START                                                          04640027
         SPACE                                                          04660027
         PRINT DATA,NOGEN                                               04680027
         FDIMEN                                                         04700027
         PRINT     ON,GEN                                               04720027
         SPACE 2                                                        04740027
*                                                                     * 04760027
*TITLE ASMGF7X  F7 GET STATEMENT ROUTINE                              * 04780027
*FUNCTION/OPERATION-                                                  * 04800027
*   MOVE EDITED TEXT RECORDS FROM TEXT INPUT STREAM TO TEXT WORK AREA * 04820027
*   INSERT PROCESSED RECORDS FROM WORK AREA INTO TEXT STREAM          * 04840027
*   INSERT ERROR RECORDS INTO TEXT STREAM                             * 04860027
*   MOVE LITERAL RECORDS INTO WORK AREA, FROM SYMBOL TABLE            * 04880027
*   CONVERT 'EDITED-GENERATED' TYPE RECORDS TO FORM SUITABLE FOR F7   * 04900027
*   PROCESSING                                                        * 04920027
*   SET POINTERS TO THE OPERAND FIELD AND SYMBOL WORK BUCKETS         * 04940027
*   APPEND FIXED FIELD TO TEXT RECORD                                 * 04960027
*   APPEND LITERAL WORK BUCKETS FOR LITERALS IN OPERAND               * 04980027
*   TEST LEGALITY OF STATEMENT FIELDS-                                * 05000027
*        NAME FIELD IS TESTED FOR LEGAL CHARACTERS, TOO MANY CHAR-    * 05020027
*         ACTERS, AND LEADING CHARACTER ALPHABETIC                    * 05040027
*        ASSEMBLER OPERATIONS ARE TESTED FOR NAME FIELD AND/OR OPERAND* 05060027
*         FIELD REQUIRED OR NOT ALLOWED                               * 05080027
*ENTRY POINT-                                                         * 05100027
*   ASMGF7X...FIRST CALL ONLY                                         * 05120027
*   TXGET1...AFTER FIRST CALL                                         * 05140027
*        CALLING SEQUENCE-                                            * 05160027
*        L     FRB,CTXGET(ACT)                                        * 05180027
*        BALR  CRR,ACT                                                * 05200027
*   THE CODE AT ENTRY POINT ASMGF7X INSERTS THE ADDRESS OF TXGET1 INTO* 05220027
*    CTXGET (ACT)...SUBSEQUENT CALLS ENTER AT TXGET1                  * 05240027
*INPUT-                                                               * 05260027
*   REGISTER ACT CONTAINS ADDRESS OF ASSEMBLER CONTROL TABLE          * 05280027
*   TEXT WORK AREA CONTAINS PROCESSED RECORD                          * 05300027
*OUTPUT-                                                              * 05320027
*   REGISTER GRA CONTAINS FBA OF TEXT RECORD                          * 05340027
*   REGISTER GRB CONTAINS ADDRESS OF TEXT APPENDED FIXED FIELD        * 05360027
*   REGISTER GRC CONTAINS ADDRESS OF TEXT OPERAND LENGTH FIELD        * 05380027
*EXTERNAL ROUTINES-                                                   * 05400027
*   PUTXT...IN ASMGF7I..PUT OUT TEXT RECORD                           * 05420027
*   GETPT...IN ASMGF7I..GET POINTER TO NEXT TEXT RECORD               * 05440027
*   CLSTXT..IN ASMGF7I..TCLOSE TEXT FILES                             * 05460027
*   GETXTM..IN ASMGF7I..GET TEXT AND MOVE RECORD                      * 05480027
*   CLOGER..IN ASMGF7I..GENERATE, OR ADD TO, ERROR RECORDS            * 05500027
*EXIT-                                                                * 05520027
*   BRANCH TO CTRTRN(ACT), RETURN LINKAGE ALGORITHM IN ASSEMBLER      * 05540027
*    CONTROL TABLE                                                    * 05560027
*                                                                     * 05580027
         ENTRY OPC04                    FOR OPSYN REFERENCE             05600027
         EJECT                                                          05620027
         USING TXGET0,FRB               BASE FOR FIRST ENTRY            05640027
         SPACE                                                          05660027
TXGET0   L     GRA,CTXWAP(ACT)          FIND TEXT WORK AREA             05680027
         ST    GRA,CTEXTP(ACT)          SET TEXT POINTER                05700027
         ST    GRA,CTSAVE(ACT)          IN ASSMBLR CNTRL TABLE, TOO     05720027
         LA    FRB,TXGET1-TXGET0(FRB)   INCREMENT BASE REGISTER...      05740027
         ST    FRB,CTXGET(ACT)          AND ALTER ENTRY ADDRESS IN ACT  05760027
         USING TXGET1,FRB               CHANGE OF BASE                  05780027
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q                  05800027
         BO    TXGET3                   YES, FIRST TIME SO DON'T 'PUT'  05820027
         OI    ##CNOP+4,BIT5            CNOP LABEL INVALID              05840027
         OI    ##COM+3,BIT5             COM LABEL INVALID               05860027
         OI    ##DROP+4,BIT6            DROP OPERAND REQUIRED           05880027
         OI    ##DSECT+5,BIT4           DSECT LABEL REQUIRED            05900027
         OI    ##ORG+3,BIT5             ORG LABEL INVALID               05920027
         B     TXGET3                   FIRST TIME, DONT 'PUT'          05940027
         SPACE 2                                                        05960027
* ERRORS DETECTED BY TXGET                                              05980027
         SPACE                                                          06000027
TXGERR00 EQU   84                       GENERATED OPERAND FORMAT ERROR  06020027
         SPACE                                                          06040027
TXGERR12 EQU   34                       OP CODE INVALID                 06060027
TXGERR13 EQU   32                               ILLEGAL IF GEN.         06080027
TXGERR14 EQU   88                               UNDEFINED               06100027
         SPACE                                                          06120027
TXGERR20 EQU   73                       AOP NAME REQUIRED               06140027
TXGERR21 EQU   73                           NAME NOT ALLOWED            06160027
TXGERR22 EQU   39                       OPERAND REQUIRED                06180027
TXGERR23 EQU   36                           OPERAND NOT ALLOWED         06200027
         SPACE                                                          06220027
TXGERR30 EQU   16                       INVALID NAME                    06240027
         SPACE 2                                                        06260027
* BIT MASKS                                                             06280027
         SPACE                                                          06300027
BIT0     EQU   X'80'                    MASKS USED...                   06320027
BIT1     EQU   X'40'                    TO TEST...                      06340027
BIT2     EQU   X'20'                    OR SET...                       06360027
BIT3     EQU   X'10'                    INDIVIDUAL...                   06380027
BIT4     EQU   X'08'                    BITS...                         06400027
BIT5     EQU   X'04'                    WITHIN...                       06420027
BIT6     EQU   X'02'                    A...                            06440027
BIT7     EQU   X'01'                    BYTE...                         06460027
         EJECT                                                          06480027
* ENTER FROM MAIN-LINE WITH PROCESSED RECORD IN TEXT WORK AREA          06500027
         SPACE 2                                                        06520027
TXGET1   DS    0H                                                       06540027
         LR    SP1,GRA                  PUT RECORD FROM TEXT WORK AREA  06560027
         SPACE                                                          06580027
TXGET2   DS    0H                                                       06600027
         SR    SP2,SP2                  PUT RECORD ONTO TEXT-OUT BUFFER 06620027
         L     SRB,CTXTIO(ACT)          FROM TEXT WORK AREA, TEXT-IN,   06640027
         BAL   SRR,PUTXT(SRB)           OR ERROR RECORD BUILD AREA      06660027
         SPACE                                                          06680027
         CLI   ERSWH(ACT),0             TEST ERROR SWITCH               06700027
         BE    TXGET3                   OFF                             06720027
         MVI   ERSWH(ACT),0             IF ERROR SWITCH SET,            06740027
         L     SP1,CTERRP(ACT)          CLEAR SWITCH,                   06760027
         B     TXGET2                   AND PUT REC FROM ERROR WRK AREA 06780027
         SPACE                                                          06800027
TXGET3   DS    0H                                                       06820027
         CLI   CTLIT2(ACT),0            TEST LIT GEN SWITCH             06840027
         BE    TXGET4                   OFF                             06860027
         BAL   GRD,TXGLIT               ON, GET NEXT REC FROM LIT POOL  06880027
         B     TXGETA                   THEN GO TEST TYPE OF OPERATION  06900027
         SPACE                                                          06920027
TXGET4   DS    0H                                                       06940027
         L     SRB,CTXTIO(,ACT)         GET POINTER TO NEXT TEXT RECORD 06960027
         BAL   SRR,GETPT(SRB)                                           06980027
         BNZ   TXGET5                   NOT EOF                         07000027
         SPACE                                                          07020027
*********EOF*********************************************************** 07040027
         MVC   0(L'TXGQUIT,GRA),TXGQUIT  EOF, MOVE QUIT REC TO WRK AREA 07060027
         B         TXGETA                                               07080027
         SPACE                                                          07100027
TXGQUIT  DS    0CL18                                                    07120027
         DC    AL2(TXGQUIT0-*),X'50802A00',AL2(TXGQUIT0-TXGQUIT-TXFAFL) 07140027
         DC    X'000001',AL1(IBLANK),(TXFAFL+1)X'00'                    07160027
TXGQUIT0 EQU   *                                                        07180027
*********************************************************************** 07200027
         SPACE                                                          07220027
TXGET5   DS    0H                                                       07240027
         L     GR1,CTSEQN(ACT)                                          07260027
         LA    GR1,1(GR1)                                               07280027
         TM    TXRT(SP1),BIT1           TEST RECORD TYPE                07300027
         BO    TXGET10                  EDITTED                         07320027
         SPACE                                                          07340027
         TM    TXRT(SP1),BIT2           NOT EDITTED,                    07360027
         BO    TXGET6                   STEP SEQUENCE NUMBER            07380027
         TM    TXRT(SP1),BIT3           IF TXRT EQ 000, 010 OR 011      07400027
         BO    TXGET7                   AND CONTINUATION BIT NOT SET    07420027
TXGET6   DS    0H                                                       07440027
         TM    2(SP1),BIT6                                              07460027
         BO    TXGET7                                                   07480027
         ST    GR1,CTSEQN(ACT)                                          07500027
         SPACE                                                          07520027
TXGET7   DS    0H                                                       07540027
         SR    SP1,SP1                  PUT RECORD FROM INPUT BUFFER    07560027
         B     TXGET2                   GO PUT RECORD OUT               07580027
         EJECT                                                          07600027
* PROCESS EDITTED TEXT RECORD                                           07620027
         SPACE 2                                                        07640027
TXGET10  DS    0H                                                       07660027
         TM    TXRT(SP1),BIT2+BIT3      STEP SEQUENCE NUMBER            07680027
         BC    14,TXGET11               IF TXRT EQ 111                  07700027
         ST    GR1,CTSEQN(ACT)                                          07720027
         SPACE                                                          07740027
TXGET11  DS    0H                                                       07760027
         L     SRB,CTXTIO(,ACT)         MOVE EDITED RECORD              07780027
         LR    SP1,GRA                  TO TEXT WORK AREA               07800027
         BAL   SRR,GETXTM(SRB)          ASMGF7I GET TEXT AND MOVE       07820027
         SPACE                                                          07840027
         SPACE                                                          07860027
         BAL   SRR,TXGETSET             SET FIELD POINTERS              07880027
         SPACE                                                          07900027
         LR    GR1,GRB                  SET TXABP,                      07920027
         SR    GR1,GRA                  INC REC LENGTH,                 07940027
         STH   GR1,TXABP(GRA)           CLEAR APPENDED FIXED FIELD      07960027
         LH    GR1,TXRL(GRA)                                            07980027
         LA    GR2,0(GRA,GR1)                                           08000027
         MVI   0(GR2),0                                                 08020027
         MVC   1(11,GR2),0(GR2)                                         08040027
         LA    GR1,TXFAFL(GR1)                                          08060027
         STH   GR1,TXRL(GRA)                                            08080027
         SPACE                                                          08100027
         TM    TXRT(GRA),BIT2           TEST FOR SUBSTITUTED FIELDS     08120027
         BZ    TXGET13                  IF RECORD TYPE EQ 110 OR 111    08140027
         BAL   GRD,TXGEDIT              EDIT SUBSTITUTED FIELDS         08160027
         TM    TXTO(GRA),BIT0+BIT1      SEE IF AOP OR MACH OP ALREADY   08180027
         BNZ   TXGET13                  YES, NOT 'UNCHECKED', TEST NAME 08200027
         BAL   GRD,OPCCF                CONVERT OP CODE                 08220027
         SPACE                                                          08240027
TXGET13  DS    0H                                                       08260027
         BAL   GRD,TXGNAME              TEST FOR LEGAL NAME FIELD       08280027
         TM    TXTO(GRA),BIT1           MAYBE MACH OP                   08300027
         BO    TXGET14                  YES, GO TEST FOR LITERAL        08320027
         BAL   GRD,TXGOPND              IF ASSEMBLER OP, TEST OPERAND   08340027
         CLI   TXHEX(GRA),X'20'         TEST IF ORG                     08360027
         BNE   TXGETRTN                 BRANCH IF NOT                   08380027
         LH    GR1,TXRL(,GRA)           GET RECORD LENGTH               08400027
         LA    GR1,3(,GR1)              EXTEND BY 3 BYTES               08420027
         STH   GR1,TXRL(,GRA)           SAVE IT BACK AGAIN              08440027
         B     TXGETRTN                 GO SET OPERAND POINTERS         08460027
         SPACE                                                          08480027
TXGET14  DS    0H                                                       08500027
         BAL   GRD,SCANLIT              IF MACHINE OP, TEST FOR LITERAL 08520027
         SPACE                                                          08540027
TXGETRTN DS    0H                                                       08560027
         ST    GRC,CTXOFP(,ACT)         SET POINTERS TO OPERAND         08580027
         ST    GRB,CTXABP(ACT)          AND APPENDED FIXED FIELD        08600027
         ST    GRB,CTSAVE+4(ACT)        IN CONTROL TABLE                08620027
         B     CTRTRN(ACT)              RETURN TO MAIN-LINE             08640027
         EJECT                                                          08660027
*                                                                       08680027
         SPACE 2                                                        08700027
TXGETA   DS    0H                                                       08720027
         TM    TXTO(GRA),BIT0+BIT1      TEST TYPE OF OPERATION          08740027
         BZ    TXGET1                   BYPASS IF ZERO                  08760027
         SPACE                                                          08780027
         BAL   SRR,TXGETSET             SET FIELD POINTERS              08800027
         SPACE                                                          08820027
         LR    GR1,GRA                  FBA OF TEXT RECORD PLUS...      08840027
         AH    GR1,TXRL(GRA)            RECORD LENGTH, IS END OF RECORD 08860027
         LA    GR2,TXFAFL(GRB)          LOOK PAST APPENDED FIXED FIELD  08880027
TXGETB   DS    0H                                                       08900027
         CLR   GR2,GR1                  THAT MAY BE END OF RECORD       08920027
         BNL   TXGETRTN                 YES, GO SET POINTERS TO OPND    08940027
         TM    TXWTYP(GR2),BIT0         NO, HAVE WB...CHECK TYPE        08960027
         BO    TXGETD                   SYMB WB, GO SET POINTER IN ACT  08980027
         TM    TXWLEN(GR2),BIT1         TEST WB LENGTH                  09000027
         BZ    TXGETC                   LENGTH 6, SKIP THE 9-BUMP       09020027
         LA    GR2,9(,GR2)              STEP WB POINTER AS MUCH...      09040027
TXGETC   DS    0H                                                       09060027
         LA    GR2,6(,GR2)              AS NEEDED TO GET PAST THIS WB   09080027
         B     TXGETB                   GO SEE IF THERE IS ANOTHER WB   09100027
TXGETD   DS    0H                                                       09120027
         ST    GR2,CTXWBP(,ACT)         SET POINTER TO FIRST SYMB WB    09140027
         B     TXGETRTN                 GO SET OPERAND POINTERS         09160027
         EJECT                                                          09180027
* SUBROUTINE TO SET FIELD POINTERS                                      09200027
*  GRA CONTAINS FIRST BYTE ADDRESS OF TEXT RECORD                       09220027
         SPACE 2                                                        09240027
TXGETSET DS    0H                                                       09260027
         SR    GR1,GR1                  ZERO WORK REGISTER              09280027
         ST    GR1,CTXWBP(ACT)          CLEAR WORK BUCKET POINTER       09300027
         IC    GR1,TXNAML(GRA)          NAME FIELD LENGTH PLUS...       09320027
         LA    GRC,TXNAME(GR1,GRA)      NAME FIELD DISPLACEMENT PLUS... 09340027
         IC    GR1,TXOPL(GRC)           OPERATION LENGTH, PLUS OP...    09360027
         LA    GRC,TXOP(GR1,GRC)        DISP= OPERAND DISP-1 IN GRC     09380027
         IC    GR1,TXOPNL(GRC)          GET OPERAND LENGTH PLUS...      09400027
         LA    GRB,TXOPN(GR1,GRC)       OPERAND DISP (FROM GRC)...      09420027
         IC    GR1,TXCOML(GRB)          ADD COMMENT LENGTH AND DISP...  09440027
         LA    GRB,TXCOM(GR1,GRB)       TO LEAVE GRB AT APPNDED FIX FLD 09460027
         BR    SRR                     RETURN                           09480027
         EJECT                                                          09500027
* SCAN MACHINE OP FOR LITERAL IN OPERAND                                09520027
         SPACE 2                                                        09540027
SCANLIT  DS    0H                                                       09560027
         MVC   CTWORK(256,ACT),CTWORK-1(ACT) CLEAR THE TRT TABLE        09580027
         MVI   CTWORK+IQUOTE(ACT),X'FF'       STOPPER FOR QUOTES        09600027
         SR    GRX,GRX                  GET READY TO COUNT              09620027
         IC    GRX,TXOPNL(GRC)          PICK UP OPERAND LENGTH          09640027
         LA    GRX,TXOPNL(GRC,GRX)      ADDRESS OF LAST OPERAND BYTE... 09660027
         BCTR  GRX,0                    MINUS ONE                       09680027
         LR    GR1,GRC                  ADDRESS OF FIRST OPND BYTE-1    09700027
         SPACE                                                          09720027
SCANLIT1 DS    0H                                                       09740027
         XI    CTWORK+IEQUAL(ACT),X'FF'      RESET STOPPER FOR EQUAL    09760027
         SPACE                                                          09780027
SCANLIT2 DS    0H                                                       09800027
         LR    GR2,GRX                  END OPERAND-1                   09820027
         SR    GR2,GR1                  FIND HOW FAR TO END OF OPND FLD 09840027
         BCR   4,GRD                    DONE, RETURN TO CALLING ROUT.   09860027
         EX    GR2,SCANLITT             GR2 IS ONE LOW, FOR TRT USE     09880027
         BCR   8,GRD                    NO STOPPER, RETURN TO CALLER    09900027
         CLI   0(GR1),IEQUAL            SEE IF STOPPED ON EQUAL SIGN... 09920027
         BE    SCANLITF                 YES, GO WORK ON LITERAL...      09940027
         CLI   CTWORK+IEQUAL(ACT),0     NO, SEE IF WE COULD HAVE        09960027
         BE    SCANLIT1                 NO, END OF QUOTE STRING..RESET  09980027
         LR    GR2,GR1                  ADDRESS OF QUOTE                10000027
         BCTR  GR2,0                    BACK ONE BYTE                   10020027
         CLR   GR2,GRC                  MAY HAVE STOPPED ON FIRST BYTE  10040027
         BE    SCANLIT1                 YES, START OF QUOTE-STRING      10060027
         CLI   0(GR2),IL                MAY BE L-QUOTE                  10080027
         BNE   SCANLIT1                 NO, START OF QUOTE-STRING       10100027
         B     SCANLIT2                 YES, QUOTE UNPAIRED...NO RESET  10120027
         SPACE                                                          10140027
SCANLITF DS    0H                                                       10160027
         LH    GR2,TXRL(,GRA)           INCREMENT REC LENGTH            10180027
         LA    GR2,6(GR2)                                               10200027
         STH   GR2,TXRL(GRA)                                            10220027
         MVC   TXFAFL(6,GRB),CTZERO(ACT) CLEAR LITERAL WORK BUCKET      10240027
         SPACE                                                          10260027
         SR    GR1,GRC                  SET RELATIVE POINTER TO EQ SIGN 10280027
         BCTR  GR1,0                    MAKE UP FOR OFFSET              10300027
         STC   GR1,TXLSTG(GRB)          LEAVE IT IN WRK BKT             10320027
         CLI   TXLSTG(GRB),0            SEE IF = WAS FIRST BYTE         10340027
         BE    SCANLITG                 YES, GO SET EQUAL SIGN IND      10360027
         AR    GR1,GRC                  NO, GET ADDRESS OF PREVIOUS BYT 10380027
         CLI   0(GR1),ICOMMA            MAYBE WAS COMMA                 10400027
         BCR   7,GRD                    NO, RETURN                      10420027
         SPACE                                                          10440027
SCANLITG DS    0H                                                       10460027
         OI    TXESI(GRA),BIT6          SET EQUAL SIGN INDICATOR        10480027
         BR    GRD                      RETURN                          10500027
         SPACE                                                          10520027
SCANLITT TRT   1(*-*,GR1),CTWORK(ACT)                                   10540027
         EJECT                                                          10560027
* SUBROUTINE TO TEST FOR LEGAL AND VALID NAME FIELD                     10580027
         SPACE 2                                                        10600027
TXGNAME  DS    0H                                                       10620027
         TM    TXTO(GRA),BIT0           IS THIS TYPE ASSEM .Q           10640027
         BZ    TXGNAME2                 BRANCH IF NOT                   10660027
         LA    SRR,TXGNONE              LOAD BRANCHING ADDRESS          10680027
         CLI   TXHEX(GRA),X'29'         IS THIS CNOP .Q                 10700027
         BE    TXGCNOP                  BRANCH IF YES                   10720027
         CLI   TXHEX(GRA),X'1E'         IS THIS COM .Q                  10740027
         BE    TXGCOM                   BRANCH IF YES                   10760027
         CLI   TXHEX(GRA),X'24'         IS THIS DROP .Q                 10780027
         BE    TXGDROP                  BRANCH IF YES                   10800027
         CLI   TXHEX(GRA),X'1D'         IS THIS DSECT .Q                10820027
         BE    TXGDSECT                 BRANCH IF YES                   10840027
         CLI   TXHEX(GRA),X'20'         IS THIS ORG .Q                  10860027
         BCR   7,SRR                    THAT'S ALL IF NOT               10880027
         MVN   TXR1M(1,GRA),##ORG+3     RESET SPECIAL SWITCHES          10900027
         BR    SRR                      AND CONTINUE                    10920027
TXGDSECT DS    0H                                                       10940027
         MVN   TXR1M(1,GRA),##DSECT+5   RESET SPECIAL SWITCHES          10960027
         BR    SRR                      AND CONTINUE                    10980027
TXGDROP  DS    0H                                                       11000027
         MVN   TXR1M(1,GRA),##DROP+4    RESET SPECIAL SWITCHES          11020027
         BR    SRR                      AND CONTINUE                    11040027
TXGCOM   DS    0H                                                       11060027
         MVN   TXR1M(1,GRA),##COM+3     RESET SPECIAL SWITCHES          11080027
         BR    SRR                      AND CONTINUE                    11100027
TXGCNOP  DS    0H                                                       11120027
         MVN   TXR1M(1,GRA),##CNOP+4    RESET SPECIAL SWITCHES          11140027
TXGNONE  DS    0H                                                       11160027
         CLI   TXNAML(GRA),0            AOP, MAY HAVE NAME              11180027
         BE    TXGNAME0                 NO, GO SEE IF REQUIRED          11200027
         SPACE                                                          11220027
         TM    TXR1M(GRA),BIT5          NAME PRESENT, TEST IF ALLOWED   11240027
         BO    TXGNAME1                 NOT ALLOWED, LOG ERROR          11260027
         CLI   TXHEX(GRA),X'18'         IS AOP 'TITLE'                  11280027
         BNE   TXGNAME3                 NO, GO TEST NAME VALIDITY       11300027
         BR    GRD                      YES, RETURN                     11320027
         SPACE                                                          11340027
TXGNAME0 DS    0H                                                       11360027
         TM   TXR1M(GRA),BIT4           NAME MISSING, TEST IF REQUIRED  11380027
         BCR   8,GRD                    NOT REQUIRED                    11400027
         SPACE                                                          11420027
TXGNAME1 DS    0H                                                       11440027
         BAL   SRR,ERROR0               LOG ERROR                       11460027
         DC    AL2(TXGERR20)            'ILLEGAL NAME FIELD'            11480027
         B     TXGNAME6                 SET BAD NAME INDICATOR          11500027
         SPACE 2                                                        11520027
TXGNAME2 DS    0H                                                       11540027
         CLI   TXNAML(GRA),0            TEST VALID NAME                 11560027
         BCR   8,GRD                    NO NAME, RETURN                 11580027
         SPACE                                                          11600027
TXGNAME3 DS    0H                                                       11620027
         CLI   TXNAML(GRA),8            TOO MANY CHARACTERS, NON A/N,   11640027
         BH    TXGNAME5                 NON ALPHA FIRST CHARACTER       11660027
         SPACE                                                          11680027
         SR    GR1,GR1                  READY TO COUNT                  11700027
         IC    GR1,TXNAML(GRA)          GET NAME FIELD LENGTH           11720027
TXGNAME4 DS    0H                                                       11740027
         LA    GR2,TXNAML(GRA,GR1)      START AT END OF NAME            11760027
         CLI   0(GR2),IALPHA            CHECK FOR ALPHA-NUMERICS        11780027
         BH    TXGNAME5                 SPECIAL CHARACTER, GO LOG ERROR 11800027
         BCT   GR1,TXGNAME4             REPEAT, WORKING TO FIRST BYTE   11820027
         CLI   TXNAME(GRA),9            SEE IF FIRST BYTE IS ALPHA      11840027
         BCR   2,GRD                    YES, OK TO RETURN               11860027
         SPACE                                                          11880027
TXGNAME5 DS    0H                                                       11900027
         BAL   SRR,ERROR0               LOG ERROR (INVALID NAME)        11920027
         DC    AL2(TXGERR30)            'INVALID NAME'                  11940027
         SPACE                                                          11960027
TXGNAME6 DS    0H                                                       11980027
         OI    TXMDN(GRA),BIT3          SET BAD NAME INDICATOR          12000027
         BR    GRD                      AND RETURN                      12020027
         EJECT                                                          12040027
* SUBROUTINE TO TEST FOR LEGAL OPERAND FIELDS                           12060027
         SPACE 2                                                        12080027
TXGOPND  DS    0H                                                       12100027
         TM    TXR1M(GRA),BIT6+BIT7     SEE IF OPERAND IS OPTIONAL      12120027
         BCR   8,GRD                    YES, MAY AS WELL RETURN         12140027
         CLI   TXOPN(GRC),IBLANK        LOOK FOR END OF OPND FIELD      12160027
         BE    TXGOPND0                 YES, GO SEE IF WE NEED OPND     12180027
         CLI   TXOPN(GRC),ICOMMA        MAY BE OMITTED OPERAND          12200027
         BE    TXGOPND0                 YES, GO SEE IF WE NEED OPND     12220027
         CLI   TXOPNL(GRC),0            ANOTHER WAY TO OMIT OPND        12240027
         BNE   TXGOPND1                 HAVE OPND, SEE IF THAT'S OK     12260027
         SPACE                                                          12280027
TXGOPND0 DS    0H                                                       12300027
         TM    TXR1M(GRA),BIT6          OPERAND MISSING                 12320027
         BCR   8,GRD                    LOG ERROR IF REQUIRED           12340027
         BAL   SRR,ERROR0               TO ERROR LOGGING ROUTINE        12360027
         DC    AL2(TXGERR22)            'INVALID DELIMITER'             12380027
         B     ABORT                    ABORT PROCESSING                12400027
         SPACE                                                          12420027
TXGOPND1 DS    0H                                                       12440027
         TM    TXR1M(GRA),BIT7          OPERAND PRESENT                 12460027
         BCR   8,GRD                    LOG ERROR IF NOT ALLOWED        12480027
         BAL   SRR,ERROR0               TO ERROR LOGGING ROUTINE        12500027
         DC    AL2(TXGERR23)            'OPERAND FIELD MUST BE BLANK'   12520027
         BR    GRD                      RETURN                          12540027
         EJECT                                                          12560027
* EDIT SUBSTITUTED FIELDS                                               12580027
         SPACE 2                                                        12600027
TXGEDIT  DS    0H                                                       12620027
         SR    GRZ,GRZ                  START FRESH...COUNTS BLANKS     12640027
         LH    GRY,TXRL(GRA)            LET TXGEDL MOVE ALL OF RECORD   12660027
         LR    SP1,GRC                  POINT TO OPND LENGTH FIELD      12680027
         BAL   SRR,TXGEDL               EDIT LEADING BLANKS OF OPND     12700027
         SPACE                                                          12720027
         SR    SP1,SP1                  READY TO COUNT                  12740027
         IC    SP1,TXNAML(GRA)          USE LENGTH OF NAME FIELD...     12760027
         LA    SP1,TXNAME(GRA,SP1)      TO POINT TO OPERATION LENGTH    12780027
         BAL   SRR,TXGEDT               EDIT TRAILING BLANKS OF OPER'N  12800027
         BAL   SRR,TXGEDL               EDIT LEADING BLANKS OF OPERAT'N 12820027
         SPACE                                                          12840027
         LA    SP1,TXNAML(GRA)          POINT TO NAME LENGTH FIELD      12860027
         BAL   SRR,TXGEDT               EDIT TRAILING BLANKS OF NAME    12880027
         LTR   GRZ,GRZ                  TEST THE 'BLANK' COUNTER        12900027
         BZ    TXGEDITA                 NONE REMOVED, GO TEST IMBEDDED  12920027
         SR    GRY,GRZ                  ADJUST REC. LENGTH FOR BLANKS   12940027
         STH   GRY,TXRL(GRA)            AND UPDATE TXRL                 12960027
         BAL   SRR,TXGETSET             THEN RESET THE FIELD POINTERS   12980027
         LR    GR1,GRB                  ADDRESS OF APP. FIXED FIELD     13000027
         SR    GR1,GRA                  LESS ADDRESS OF TEXT BEGIN      13020027
         STH   GR1,TXABP(GRA)           RELATIVE POS'N OF APP. FIXED F  13040027
         SPACE                                                          13060027
TXGEDITA DS    0H                                                       13080027
         LR    SP1,GRC                  GET OPND LENGTH FIELD ADDRESS   13100027
         SR    SP2,SP2                  READY                           13120027
         IC    SP2,TXOPNL(SP1)          OPND LENGTH TO SP2              13140027
         LTR   GRX,SP2                  MIGHT NOT BE ANY OPERAND        13160027
         BCR   8,GRD                    IF NONE, RETURN                 13180027
         SPACE                                                          13200027
TXGEDITB DS    0H                                                       13220027
         LA    SP1,1(,SP1)              CHOOSE AN OPERAND BYTE          13240027
         CLI   0(SP1),IBLANK            SEE IF IT'S BLANK               13260027
         SPACE                                                          13280027
TXGEDITC BC    (8),TXGEDITD             /ALTERED/ BLANK CHECK GATE      13300027
         CLI   0(SP1),IQUOTE            NO, MAYBE IT'S A QUOTE          13320027
         BE    TXGEDITQ                 QUOTE, GO SEE IF PAIRED         13340027
         SPACE                                                          13360027
TXGEDITG DS    0H                                                       13380027
         BCT   SP2,TXGEDITB             BACK TO CHECK REST OF OPERAND   13400027
         OI    TXGEDITC+1,X'80'         SET GATE TO CHECK FOR BLANKS    13420027
         B     TXGEDITE                 LOG ERROR IN OPND FIELD         13440027
         SPACE                                                          13460027
TXGEDITF DS    0H                                                       13480027
         LA    SP1,1(,SP1)              STEP TO NEXT BYTE               13500027
         CLI   0(SP1),IBLANK            SEE IF IT'S A BLANK, TOO        13520027
         BNE   TXGEDITX                 NO, GO SEE IF IT CAN BE FIXED   13540027
         SPACE                                                          13560027
TXGEDITD DS    0H                                                       13580027
         BCT   SP2,TXGEDITF             TEST REST OF OPERAND            13600027
         SR    SP1,GRC                  OPERAND LENGTH COUNTED          13620027
         CR    SP1,GRX                  SHOULD BE SAME AS ORIGINAL      13640027
         BCR   8,GRD                    YES, CAN RETURN                 13660027
         SPACE                                                          13680027
TXGEDITE DS    0H                                                       13700027
         BAL   SRR,ERROR0               LOG ERROR IN OPERAND            13720027
         DC    AL2(TXGERR00)            'ILLEGAL OPERAND FIELD FORMAT'  13740027
         BR    GRD                      AND RETURN                      13760027
         SPACE                                                          13780027
TXGEDITQ DS    0H                                                       13800027
         TM    TXGEDITC+1,X'80'         SEE IF WE WERE CHECKING BLANKS  13820027
         BZ    TXGEDITR                 NO, WERE INSIDE QUOTE STRING    13840027
         LR    GR1,SP1                  YES, GET ADDRESS OF QUOTE       13860027
         BCTR  GR1,0                    BACK UP ONE                     13880027
         CR    GR1,GRC                  MIGHT BE FIRST OPND BYTE        13900027
         BE    TXGEDITR                 YES, GO TURN OF TEST FOR BLANKS 13920027
         CLI   0(GR1),IL                WAS IT AN L-QUOTE               13940027
         BNE   TXGEDITR                 NO, GO TO QUOTE MODE            13960027
         CLI   1(SP1),IA                DOES NUMBER FOLLOW L'           13980027
         BL    TXGEDITR                 YES, GO START QUOTE MODE        14000027
         CLI   1(SP1),IALPHA            IS IT A LETTER                  14020027
         BNH   TXGEDITG                 YES, IT IS L ATTR               14040027
         CLI   1(SP1),IASTER            TEST FOR L'*                    14060027
         BE    TXGEDITG                 BRANCH IF YES                   14080027
         SPACE                                                          14100027
TXGEDITR DS    0H                                                       14120027
         XI    TXGEDITC+1,X'80'         NO, RESET THE BLANK TEST SWITCH 14140027
         B     TXGEDITG                 AND KEEP TESTING                14160027
         SPACE                                                          14180027
TXGEDITX DS    0H                                                       14200027
         TM    CTEXTENI(ACT),X'04'      WAS 'EXTEN' SPECIFIED .Q        14220027
         BZ    TXGEDITE                 NO, LOG 'OPND FIELD ERROR'      14240027
         LA    SP1,TXOPN(GRX,GRC)       POINT TO COMMENT LENGTH         14260027
         SR    GR1,GR1                  ZERO A WORK REGISTER            14280027
         IC    GR1,TXCOML(,SP1)         GET COMMENTS LENGTH             14300027
         AR    GR1,SP2                  UPDATED COMMENTS LENGTH         14320027
         CH    GR1,H255                 HOW LONG WILL IT BE .Q          14340027
         BH    TXGEDITE                 BRANCH IF TOO LONG              14360027
         SR    GRX,SP2                  DECREMENT OPND LENGTH           14380027
         STC   GRX,TXOPNL(,GRC)         SAVE NEW LENGTH BACK            14400027
TXGEDITY DS    0H                                                       14420027
         BCTR  SP1,0                    POINT BACK IN OPND              14440027
         IC    GR0,TXCOM-1(,SP1)        GET A BYTE                      14460027
         STC   GR0,TXCOM+1(,SP1)        PUT A BYTE                      14480027
         BCT   SP2,TXGEDITY             LOOP TILL ALL IS DONE           14500027
         L     SP2,ADLIST1(,ACT)        POINT TO LIST1 IN ASMGASM       14520027
         STC   GR1,TXCOML(,SP1)         SET NEW COMMENT LENGTH          14540027
         MVC   TXCOM(1,SP1),L1CALIGN(SP2)  ENTER DEFAULT COMMENT OFFSET 14560027
         CLI   TXCOM(SP1),X'00'         IS THE DEFAULT ZERO .Q          14580027
         BCR   7,GRD                    RETURN IF NOT                   14600027
         MVI   TXCOM(SP1),X'01'         SET TO ONE FOR FORMATTING       14620027
         BR    GRD                      AND RETURN                      14640027
H255     DC    H'255'                   FOR COMPARISON PURPOSES         14660027
         EJECT                                                          14680027
* EDIT TRAILING BLANKS                                                  14700027
         SPACE 2                                                        14720027
TXGEDT   DS    0H                                                       14740027
         SR    GRX,GRX                  CLEAR WORKING REG.              14760027
         IC    GRX,0(SP1)               PICK UP FIELD LENGTH FROM REC.  14780027
         LTR   GR2,GRX                  ALSO TO GR2                     14800027
         BCR   8,SRR                    ZERO LENGTH MEANS WE RETURN     14820027
         SPACE                                                          14840027
TXGEDT1  DS    0H                                                       14860027
         LA    GR1,0(SP1,GR2)           CHOOSE A BYTE AT END OF THE FLD 14880027
         CLI   0(GR1),IBLANK            MAYBE IS'S A BLANK              14900027
         BNE   TXGEDT2                  NO, GET READY TO RETURN         14920027
         BCT   GR2,TXGEDT1              YES, TEST REST OF FIELD         14940027
         BCTR  GR1,0                    ALL BLANKS,                     14960027
         SPACE                                                          14980027
TXGEDT2  DS    0H                                                       15000027
         LA    SP2,1(GRX,SP1)           END OF ORIGINAL FIELD           15020027
         SR    GRX,GR2                  SEE HOW MANY TRAILING BLANKS-   15040027
         BCR   8,SRR                    NO BLANKS, RETURN               15060027
         STC   GR2,0(SP1)               UPDATE FIELD LENGTH IN RECORD   15080027
         AR    GRZ,GRX                  GRZ GETS TOTAL OF BLANKS        15100027
         EX    GRY,TXGEDTM              MOVE RECORD OVER  GRY=TXRL      15120027
         BR    SRR                      RETURN                          15140027
TXGEDTM  MVC   1(*-*,GR1),0(SP2)        EXECUTED MOVE                   15160027
*                                                                     * 15180027
*        GR1 CONTAINS ADDRESS OF LAST NON-BLANK BYTE                    15200027
*        SP2 CONTAINS ADDRESS OF ORIGINAL FIELD END+1                   15220027
         EJECT                                                          15240027
* EDIT LEADING BLANKS                                                   15260027
         SPACE 2                                                        15280027
*INPUT-  SP1 CONTAINS ADDRESS OF FIELD LENGTH BYTE IN TEXT RECORD     * 15300027
*        GRY CONTAINS LENGTH OF TEXT RECORD                           * 15320027
*        GRZ CONTAINS THE NUMBER OF BLANKS PREVIOUSLY DELETED         * 15340027
*OUTPUT- FIELD LENGTH BYTE IS UPDATED                                 * 15360027
*        GRX CONTAINS NUMBER OF BLANKS DELETED                        * 15380027
*        GRZ CONTAINS NEW TOTAL NUMBER OF BLANKS DELETED              * 15400027
*        GR1 CONTAINS ADDRESS OF FIRST NON-BLANK CHARACTER DISCOVERED * 15420027
*                                                                     * 15440027
TXGEDL   DS    0H                                                       15460027
         SR    GRX,GRX                  GET READY                       15480027
         IC    GRX,0(SP1)               FIND FIELD LENGTH               15500027
         LTR   GR2,GRX                  ALSO IN GR2                     15520027
         BCR   8,SRR                    LENGTH ZERO, WE GO BACK         15540027
         LR    GR1,SP1                  POINT JUST IN FRONT OF FIELD    15560027
         SPACE                                                          15580027
TXGEDL1  DS    0H                                                       15600027
         CLI   1(GR1),IBLANK            CHECK FOR A BLANK               15620027
         BNE   TXGEDL2                  NO, GET READY TO LEAVE          15640027
         LA    GR1,1(GR1)               YES, POINT TO NEXT BYTE         15660027
         BCT   GR2,TXGEDL1              AND CONTINUE ACROSS THE FIELD   15680027
         CR    SP1,GRC                  ALL BLANKS, SEE IF OPND FIELD   15700027
         BNE   TXGEDL2                  NO, GET READY TO RETURN         15720027
         BCTR  GR1,0                    OPERAND, ADJUST MOVE POINTER... 15740027
         LA    GR2,1(GR2)                                               15760027
         SPACE                                                          15780027
TXGEDL2  DS    0H                                                       15800027
         SR    GRX,GR2                  FIND HOW MANY BLANKS DELETED    15820027
         BCR   8,SRR                    NONE, DO NO MORE...RETURN       15840027
         STC   GR2,0(SP1)               UPDATE FIELD LENGTH IN RECORD   15860027
         AR    GRZ,GRX                  GRZ GETS TOTAL BLANKS           15880027
         EX    GRY,TXGEDLM              GRY CONTAINS TEXT RECORD LENGTH 15900027
         BR    SRR                      ALL DONE, RETURN                15920027
         SPACE                                                          15940027
TXGEDLM  MVC   1(*-*,SP1),1(GR1)        MOVE 'EM OVER                   15960027
*        SP1 POINTS JUST IN FRONT OF ORIGINAL FIELD                     15980027
*        GR1 POINTS TO FIRST NON-BLANK BYTE                             16000027
         EJECT                                                          16020027
* GET LITERALS FROM SYMBOL TABLE AND GENERATE LDC RECORDS               16040027
*        COME HERE WHEN CTLIT2(ACT) IS NON-ZERO                       * 16060027
*        CTLIT2(ACT) IS SET =1 WHEN ASMGF7C PROCESSES 'LTORG'         * 16080027
*                           =4 WHEN ASMGF7C PROCESSES 'END'           * 16100027
         SPACE 2                                                        16120027
TXGLIT   DS    0H                                                       16140027
         CLI   CTLIT2(ACT),2            TEST CTLIT2                     16160027
         BL    TXGLITA                  EQ 1, GET LIT DC FROM SYM. TAB. 16180027
         LA    GR1,TXGLIT2              ADDR. OF DUMMY 'LTORG'          16200027
         BE    TXGLIT1                  CTLIT2 EQ 2, LTORG              16220027
         LA    GR1,TXGLIT3              ADDR. OF DUMMY 'ORG'            16240027
         CLI   CTLIT2(ACT),3            LOOK AT LIT SWITCH AGAIN        16260027
         BE    TXGLIT1                  EQ 3, ORG                       16280027
         SPACE                                                          16300027
         MVC   TXGLIT4W+4(2),CTESRN(ACT)     EQ 4, CSECT                16320027
         MVC   TXGLIT4+TXNAME(8),CTFSTN(ACT) USE FIRST CSECT NAME, NUM. 16340027
         LA    GR0,8                         EDIT TRAILING BLANKS FROM  16360027
         LR    GR1,GR0                       NAME FIELD AND CORRECT     16380027
TXGLIT0  DS    0H                                                       16400027
         LA    GR2,TXGLIT4+TXNAML(GR1)       FIELD COUNT                16420027
         CLI   0(GR2),IBLANK            CHECK END OF NAME FOR BLANK     16440027
         BNE   TXGLIT00                 NON-BLANK, GO ON                16460027
         BCT   GR1,TXGLIT0              STEP POINTER AND GO CHECK NEXT  16480027
         SPACE                                                          16500027
TXGLIT00 DS    0H                                                       16520027
         STC   GR1,TXGLIT4+TXNAML       INSERT NAME LENGTH IN REC.      16540027
         SR    GR0,GR1                  FIND NUMBER OF TRAILING BLANKS  16560027
         STC   GR0,TXGLIT4+TXNAME(GR1)  INSERT IN OPERATION LENGTH FLD  16580027
         LA    GR1,TXGLIT4              GET READY TO MOVE DUMMY CSECT   16600027
         SPACE                                                          16620027
TXGLIT1  DS    0H                                                       16640027
         MVC   0(TXGLIT5-TXGLIT4,GRA),0(GR1)  MOVE CSECT, ORG OR LTORG  16660027
         IC    GR1,CTLIT2(ACT)                INTO TEXT WORK AREA       16680027
         BCTR  GR1,0                          REDUCE CTLIT2 BY ONE      16700027
         STC   GR1,CTLIT2(ACT)                                          16720027
         BR    GRD                            RETURN                    16740027
         SPACE                                                          16760027
TXGLIT2  DC    AL2(TXGLIT3-*),X'50802200',AL2(TXGLIT3-TXGLIT2-TXFAFL)   16780027
         DC    X'000001',AL1(IBLANK),6X'00'                   **LTORG** 16800027
         SPACE                                                          16820027
TXGLIT3  DC    AL2(TXGLIT4-*),X'50802000',AL2(TXGLIT4-TXGLIT3-TXFAFL)   16840027
         DC    X'000001',AL1(IBLANK),6X'00'                   **ORG**   16860027
         SPACE                                                          16880027
TXGLIT4  DC    AL2(TXGLIT5-*),X'50801C00',AL2(TXGLIT4W-TXGLIT4-TXFAFL)  16900027
         DC    X'08',8AL1(IBLANK),X'0001',AL1(IBLANK),6X'00'  **CSECT** 16920027
TXGLIT4W DC    X'90000000FFFF'   **CSECT WORK BUCKET FOR ESD NUMBER**   16940027
         SPACE                                                          16960027
TXGLIT5  EQU   *                                                        16980027
         EJECT                                                          17000027
*                                                                       17020027
*        GET   LITERAL DC FROM SYMBOL TABLE                           * 17040027
* LITERALS ARE SEPARATED INTO FOUR STRINGS...LITERALS WHOSE LENGTHS   * 17060027
*   ARE MULTIPLES OF 8 GO IN THE 8-BYTE STRING.  4,2, AND 1-BYTE      * 17080027
*   STRINGS ARE FORMED ACCORDINGLY.                                   * 17100027
* CTLITA(ACT)  CONTAINS FOUR ENTRIES GIVING THE NUMBER OF LITERALS IN * 17120027
*   EACH STRING, FOR WHICH TEXT RECORDS HAVE BEEN GENERATED.          * 17140027
* CTLITB(ACT)  CONTAINS THE NUMBER OF LITERALS IN EACH STRING, FOR    * 17160027
*   WHICH TEXT RECORDS HAVE NOT BEEN GENERATED.                       * 17180027
         SPACE 1                                                        17200027
TXGLITA  DS    0H                                                       17220027
         SR    GR1,GR1                  GR1 SET FOR 8-BYTE STRING       17240027
         SPACE                                                          17260027
TXGLITB  DS    0H                                                       17280027
         L     GR2,CTLITA(ACT,GR1)      GET COUNT OF STRING 'IN TEXT'   17300027
         LTR   GR2,GR2                  LOOK CLOSELY                    17320027
         BZ    TXGLITC                  STRING DONE, GO LOOK IN SYM TAB 17340027
         BCTR  GR2,0                    NOT DONE, REDUCE STRING COUNT   17360027
         ST    GR2,CTLITA(ACT,GR1)      PUT BACK IN 'INTEXT' AREA       17380027
         L     GR1,CTSEQN(ACT)          GET SEQUENCE NUMBER             17400027
         LA    GR1,1(GR1)               UPDATE IT                       17420027
         ST    GR1,CTSEQN(ACT)          AND RESTORE                     17440027
         B     4(GRD)                   RETURN TO GETTING TEXT RECORD   17460027
         SPACE                                                          17480027
TXGLITC  DS    0H                                                       17500027
         L     GR2,CTLITB(ACT,GR1)      GET COUNT OF STRING 'IN SY TAB' 17520027
         LTR   GR2,GR2                  EXAMINE                         17540027
         BZ    TXGLITD                  NONE IN SYM TAB, TRY NEXT STRNG 17560027
         BCTR  GR2,0                    FOUND ONE, REDUCE COUNT         17580027
         ST    GR2,CTLITB(ACT,GR1)      PUT BACK IN 'IN SYMB TABLE'     17600027
         L     SRB,CDCGET(ACT)          DCGET TURNS SYM TABLE ENTRIES   17620027
         BALR  SRR,SRB                  TO LDC TEXT REC'S...ASMGF7G     17640027
         L     GR1,CTSEQN(ACT)          GET SEQUENCE NUMBER             17660027
         LA    GR1,1(GR1)               STEP IT                         17680027
         ST    GR1,CTSEQN(ACT)          REPLACE                         17700027
         BR    GRD                      RETURN WITH RECORD 'GOT'        17720027
         SPACE                                                          17740027
TXGLITD  DS    0H                                                       17760027
         LA    GR1,4(,GR1)              STEP TO NEXT STRING             17780027
         CH    GR1,H16                  ONLY FOUR STRINGS ALLOWED       17800027
         BL    TXGLITB                  MORE LEFT, LOOK IN TEXT FIRST   17820027
         MVI   CTLIT2(ACT),0            CLEAR LIT GEN SWITCH            17840027
         B     4(GRD)                   RETURN, TO GET NEXT RECORD      17860027
H16      DC    H'16'                    HALFWORD SIXTEEN                17880027
         SPACE 2                                                        17900027
ERROR0   DS    0H                                                       17920027
         SR    SP1,SP1                  PARAMETER REG FOR ASMGF7L       17940027
ERROR    DS    0H                                                       17960027
         L     SRB,CLOGER(,ACT)         CLOGER BUILDS ERROR MESS. REC'D 17980027
         BR    SRB                      TO ASMGF7L                      18000027
         SPACE                                                          18020027
ABORT    DS    0H                                                       18040027
         NI    TXTO(GRA),X'FF'-(BIT0+BIT1) SET TYPE OPERATION UNCHCKD   18060027
         B     TXGET1                   FLUSH RECORD, GET ANOTHER       18080027
         EJECT                                                          18100027
* OP CODE CONVERSION S/R FOR GENERATED RECORDS                          18120027
         SPACE 2                                                        18140027
REGP     EQU   GR1                      WORKING REGISTER                18160027
COLR     EQU   GRA                      POINTS TO TEXT RECORD BEGIN     18180027
RTNR     EQU   GRD                      RETURN REG.                     18200027
LREG     EQU   GR2                      LENGTH OP CODE-1                18220027
TABR     EQU   GRZ                      TABLE POINTER                   18240027
INCR     EQU   GRX                      STEP THROUGH TABLE              18260027
LIMR     EQU   GRY                      LIMIT OF SEARCH                 18280027
OPINC    EQU   28                       OPSYN CHAIN PTR ST INCRMT       18300027
OPTR     EQU   CTWORK+16                POINTER SLOT                    18320027
         SPACE                                                          18340027
OPCCF    DS    0H                                                       18360027
         SR    REGP,REGP                GET READY                       18380027
         IC    REGP,TXNAML(COLR)        GET NAME FIELD LENGTH           18400027
         LA    REGP,TXNAME(COLR,REGP)   POINT TO OP LENGTH FIELD        18420027
         SR    LREG,LREG                GET OP LENGTH                   18440027
         IC    LREG,TXOPL(REGP)                                         18460027
         CLI   TXOP(REGP),I9            IF 1ST CHAR. DIGIT              18480027
         BNH   OPCERR3                  LOG ERROR                       18500027
         CLI   TXOPL(REGP),8            IF LONGER THAN 8                18520027
         BH    OPCERR3                  LOG ERROR                       18540027
         CLI   TXOPL(REGP),5            IF LONGER THAN 5                18560027
         BH    OPC08                    CHECK OPSYN TABLE               18580027
         BCTR  LREG,0                                                   18600027
         LTR   TABR,LREG                                                18620027
         BM    OPCERR2                       TEST OP LEN EQ 0           18640027
         STC   LREG,OPC02+1             /ALTERS LENGTH IN CLC INSTR./   18660027
         SLL   TABR,2                        4(L-1) ADDRESS TABLE ACCES 18680027
         LA    INCR,4(LREG)                  L+3 INCREMENT              18700027
         L     LIMR,OPC04+4(TABR)       SET LIMIT                       18720027
         L     TABR,OPC04(TABR)         SET START                       18740027
         SPACE 2                                                        18760027
OPC02    CLC   TXOP(*-*,REGP),0(TABR)   /LENGTH INSERTED ABOVE/         18780027
         BH    OPC01                    TRY NEXT                        18800027
         BL    OPC05                    NOT FOUND, TRY OPSYN TABL       18820027
         LA    TABR,1(TABR,LREG)        FOUND                           18840027
OPC03    DS    0H                                                       18860027
         MVC   3(3,COLR),0(TABR)        TYPE, HEX OP, ASC TO TEXT       18880027
         TM    TXTO(COLR),BIT0          TEST LEGAL IF GEN IF AOP        18900027
         BCR   8,RTNR                   OK, RETURN                      18920027
         TM    TXEMF(COLR),BIT2         CHECK FOR EXTENDED MNEMONIC     18940027
         BCR   8,RTNR                   OK, RETURN                      18960027
OPCERR1  DS    0H                                                       18980027
         BAL   SRR,ERROR0               OP CODE ILLEGAL IF GEN          19000027
         DC    AL2(TXGERR13)            'OP CODE NOT ALLOWED TO BE GEN' 19020027
         B     ABORT                    GIVE UP THIS STATEMENT          19040027
OPCERR2  DS    0H                                                       19060027
         BAL   SRR,ERROR0               OP LEN EQ ZERO                  19080027
         DC    AL2(TXGERR12)            'INVALID OP.CODE'               19100027
         B     ABORT                    GIVE UP                         19120027
OPCERR3  EQU   OPCERR2                  OP LEN GR 8                     19140027
OPCERR4  DS    0H                                                       19160027
         BAL   SRR,ERROR0               OP NOT FOUND                    19180027
         DC    AL2(TXGERR14)            'OP CODE UNDEFINED'             19200027
         B     ABORT                    GIVE UP                         19220027
OPC01    DS    0H                                                       19240027
         BXLE  TABR,INCR,OPC02          CHECK NEXT IF ANY               19260027
OPC05    DS    0H                                                       19280027
         LA    LREG,1(,LREG)            FORM FULL LENGTH                19300027
OPC08    DS    0H                                                       19320027
         STC   LREG,CTWORK(,ACT)        SET UP SEARCH ARGUMENT          19340027
         MVC   CTWORK+1(8,ACT),TXOP(REGP)                               19360027
         MVI   OPTR(ACT),0                                              19380027
         L     REGP,CTSYMP(,ACT)        ACCESS SYMBOL TABLE             19400027
         LA    TABR,OPINC(,REGP)        OPSYN CHAIN POINTER             19420027
         STC   LREG,OPC07+1                                             19440027
OPC06    DS    0H                                                       19460027
         MVC   OPTR+1(3,ACT),0(TABR)    GET NEXT POINTER                19480027
         L     TABR,OPTR(,ACT)                                          19500027
         LTR   TABR,TABR                CHECK END OF CHAIN              19520027
         BZ    OPCERR4                  YES, UNDEFINED                  19540027
         ALR   TABR,REGP                FORM FULL POINTER               19560027
OPC07    CLC   CTWORK(*-*,ACT),3(TABR)  COMPARE L AND SYMBOL            19580027
         BNE   OPC06                    NOPE, KEEP SEARCHING            19600027
         LA    TABR,4(TABR,LREG)        STEP PAST PTR, L, NAME          19620027
         B     OPC03                    TO FOUND                        19640027
         EJECT                                                          19660027
*        OP-CODE TABLE DELIMITERS...BY OP-CODE LENGTH                 * 19680027
         SPACE                                                          19700027
OPC04    DC    A(OPL1)                  START OF 1-BYTE OP-CODES        19720027
         DC    A(OPL2)                  START OF 2-BYTE OP-CODES        19740027
         DC    A(OPL3)                  START OF 3-BYTE OP-CODES        19760027
         DC    A(OPL4)                  START OF 4-BYTE OP-CODES        19780027
         DC    A(OPL5)                  START OF 5-BYTE OP-CODES        19800027
         DC    A(OPFN)                  END OF OP-CODE TABLE            19820027
         SPACE                                                          19840027
* TABLE OF SYMBOLIC OP CODES (INTERNAL CODE) BY LENGTH,                 19860027
* WITH TYPE FLAG AND HEX CODES - FENDALL                                19880027
         SPACE                                                          19900027
*                                                                     * 19920027
* TABLE ENTRIES CONSIST OF-                                           * 19940027
*        OP-CODE, IN ASSEMBLER INTERNAL CODE...ONE TO FIVE BYTES      * 19960027
*        SECOND BYTE OF FLAGA... ONE BYTE, BITS USED AS FOLLOWS       * 19980027
*                TXTO   .O - OPERATION TYPE ON IF TYPE=ASSEM          * 20000027
*                       .1 - OP TYPE, ON IF TYPE=MACH OR EXTEN        * 20020027
*                TXEMF  .2 - EXTENDED MNEMONIC FLAG...ILLEGAL IF GEN'D* 20040027
*                TXMDN  .3 - MULTIPLY DEFINE NAME INDICATOR           * 20060027
*                 TXR1M .4 - NAME REQUIRED                              20080027
*                       .5 - NAME NOT ALLOWED                           20100027
*                       .6 - OPERAND REQUIRED                           20120027
*                       .7 - OPERAND NOT ALLOWED                        20140027
*        TXHEX... ONE BYTE, MACH. OP CODE OR INTERNAL ASSMBLR OP CODE * 20160027
*        TXASC...ONE BYTE, ASSEMBLER SWITCH CODE..BITS USED THUSLY... * 20180027
*                 TXASC .0 - UNINITIATED PRIVATE CODE                   20200027
*                       .1 - POSSIBLE SYMBOL TABLE ENTRY                20220027
*                       .2 - LOCATION COUNTER REFERENCE                 20240027
*                       .3 - SPECIAL PHASE 7 X-REFERENCE                20260027
*                       .4 - SUBSTITUTION REQUIRED                      20280027
*                       .5 -                                            20300027
*                       .6 -                                            20320027
*                       .7 - PHASE 8 UNINITIATED PRIVATE CODE           20340027
*                                                                       20360027
*             ...OR THUSLY FOR MACHINE OPERATION CODES                  20380027
*                       .0   0 - NO FLOATING REGISTER                   20400027
*                            1 - FLOATING REGISTER REQURIED             20420027
*                       .1   0 - NO EVEN REGISTER                       20440027
*                            1 - EVEN REGISTER REQUIRED                 20460027
*                       .23  00- NO BOUNDARY ALIGNMENT                  20480027
*                            01- HALF WORD ALIGNMENT                    20500027
*                            10- FULL WORD ALIGNMENT                    20520027
*                            11- DOUBLE WORD ALIGNMENT                  20540027
*                       .45  XX- TYPE OF CLASS WITHIN INST (XX+1)       20560027
*                       .6   1 - LITERAL PERMITTED IN 2ND & 3RD OPERAND 20580027
*                       .7   1 - LITERAL PERMITTED IN 1ST OPERAND       20600027
*                                                                       20620027
*                                                                       20640027
*        THE FOLLOWING IS AN EXPLANATION OF THE PARMS ON THE OPCD MACRO 20660027
*                                                                       20680027
*        0P=XX     OPCODE (MACHINE OR ASSEMBLER INTERNAL) IN HEX        20700027
*        TYPE=ASSEM     ASSEMBLER OP-CODE  EXAMPLE START,DC,ACTR        20720027
*        TYPE=MACH      MACHINE OP-CODE    EXAMPLE BC,LTR,BXLE          20740027
*        TYPE=EXTEN     EXTENDED MNEMONIC  EXAMPLE BE,NOPR,BM           20760027
*                       ALSO SI EX. INSTS  EXAMPLE HDV,SCK,STIDP        20780027
*        ILLGEN=NO/YES      OPCODE ILLEGAL IF GENERATED                 20800027
*        NAME=NULL/YES/NO   IF NAME FIELD OPTIONAL/MANDATORY/ILLEGAL    20820027
*        OPND=NULL/YES/NO   IF OPERAND FIELD OPTIONAL/MANDATORY/ILLEGAL 20840027
*        IS=XX     TO IDENTIFY AN OPCODE FOR GIVEN INSTRUCTION SET(S)   20860027
*        MASK=XX   MASK BYTE NEEDED ONLY FOR ASSEM OR EXTEN OPS         20880027
******  FOLLOWING PARAMETERS NEEDED ONLY FOR MACH OR EXTEN OPS          20900027
*        ALIGN=C/H/F/D  CHARACTER,HALFWORD,FULLWORD,DOUBLEWORD ALIGN    20920027
*        CLASS=(0,1,2,3)     TOGETHER WITH OP= DETERMINES OPERAND TYPES 20940027
*                            OP   CLASS          OPERAND FORMAT         20960027
*                            --   -----          --------------         20980027
*                            RR     0       AR    R1,R2                 21000027
*                                   1       SPM   R1                    21020027
*                                   2       SVC   I                     21040027
*                                   3       BR    R2                    21060027
*                            RX     0       D     R1,ADDRX              21080027
*                                   1       B     ADDRX                 21100027
*                            RS/SI  0       LM    R1,R3,ADDR            21120027
*                                   1       SRDA  R1,ADDR               21140027
*                                   2       CLI   ADDR,I                21160027
*                                   3       HIO   ADDR                  21180027
*                            SS     0       AP    ADDR1(L1),ADDR2(L2)   21200027
*                                   1       MVC   ADDR1(L),ADDR2        21220027
*                                   2       XIO   ADDR1(I),ADDR2        21240027
*                                   3       SRP   ADDR1(L1),ADDR2,I3    21260027
*        EVEN=YES/NO    IF REGISTER SPECS MUST BE EVEN  EXAMPLE M,D     21280027
*            =DOUBLE    IF REGISTER MUST BE 0 OR 4 (ONLY FOR FLOATING)  21300027
*        FLOAT=YES/NO   IF REGISTER SPECS MUST BE .LE. 6                21320027
*        LIT1=YES/NO    IF FIRST OPERAND MAY BE A LITERAL               21340027
*        LIT23=YES/NO   IF SECOND AND THIRD OPERANDS MAY BE LITERALS    21360027
******  FOLLOWING PARAMATERS NEEDED ONLY FOR ASSEM OPS                  21380027
*        F7XREF=YES/NO  SPECIAL PHASE F7 CROSS-REFERENCE                21400027
*        F8UPC=YES/NO   PHASE F8 UNINITIATED PRIVATE CODE               21420027
*        LCR=YES/NO     LOCATION COUNTER REFERENCE                      21440027
*        STE=YES/NO     POSSIBLE SYMBOL TABLE ENTRY                     21460027
*        SUB=YES/NO     SUBSTITUTION REQUIRED                           21480027
*        UPC=YES/NO     UNINITIATED PRIVATE CODE                        21500027
*                                                                       21520027
*********************************************************************** 21540027
*                                                                       21560027
*                  IMPORTANT NOTE                                       21580027
*                                                                       21600027
*        TO ADD A NEW INSTRUCTION TO THE ASSEMBLER YOU                  21620027
*        MUST NOT ONLY ADD AN NEW INST TO AN ASMGISXX MODULE,           21640027
*        BUT YOU SHOULD ALSO ADD THE NEW INSTRUCTION TO THE TABLE       21660027
*        HERE AT THE END OF DECK ASMGF7X.                               21680027
*********************************************************************** 21700027
         EJECT                                                          21720027
A        OPCD      OP=5A,TYPE=MACH,                                    *21740027
               ALIGN=F,CLASS=0,LIT23=YES                                21760027
ACTR     OPCD      OP=25,TYPE=ASSEM,                                   *21780027
               ILLGEN=YES                                               21800027
AD       OPCD      OP=6A,TYPE=MACH,                                    *21820027
               ALIGN=D,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             21840027
ADD      OPCD      OP=66,TYPE=MACH,IS=67,                              *21860027
               ALIGN=D,CLASS=0,EVEN=DOUBLE,FLOAT=YES,LIT23=YES          21880027
ADDR     OPCD      OP=26,TYPE=MACH,IS=67,                              *21900027
               CLASS=0,EVEN=DOUBLE,FLOAT=YES                            21920027
ADR      OPCD      OP=2A,TYPE=MACH,                                    *21940027
               CLASS=0,EVEN=YES,FLOAT=YES                               21960027
AE       OPCD      OP=7A,TYPE=MACH,                                    *21980027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             22000027
AER      OPCD      OP=3A,TYPE=MACH,                                    *22020027
               CLASS=0,EVEN=YES,FLOAT=YES                               22040027
AGO      OPCD      OP=0A,TYPE=ASSEM,                                   *22060027
               ILLGEN=YES                                               22080027
AGOB     OPCD      OP=0A,TYPE=ASSEM,                                   *22100027
               ILLGEN=YES                                               22120027
AH       OPCD      OP=4A,TYPE=MACH,                                    *22140027
               ALIGN=H,CLASS=0,LIT23=YES                                22160027
AIF      OPCD      OP=09,TYPE=ASSEM,                                   *22180027
               ILLGEN=YES                                               22200027
AIFB     OPCD      OP=09,TYPE=ASSEM,                                   *22220027
               ILLGEN=YES                                               22240027
AL       OPCD      OP=5E,TYPE=MACH,                                    *22260027
               ALIGN=F,CLASS=0,LIT23=YES                                22280027
ALR      OPCD      OP=1E,TYPE=MACH,                                    *22300027
               CLASS=0                                                  22320027
ANOP     OPCD      OP=0B,TYPE=ASSEM,                                   *22340027
               ILLGEN=YES                                               22360027
AP       OPCD      OP=FA,TYPE=MACH,                                    *22380027
               ALIGN=C,CLASS=0,LIT23=YES                                22400027
AR       OPCD      OP=1A,TYPE=MACH,                                    *22420027
               CLASS=0                                                  22440027
AU       OPCD      OP=7E,TYPE=MACH,                                    *22460027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             22480027
AUR      OPCD      OP=3E,TYPE=MACH,                                    *22500027
               CLASS=0,EVEN=YES,FLOAT=YES                               22520027
AW       OPCD      OP=6E,TYPE=MACH,                                    *22540027
               ALIGN=D,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             22560027
AWR      OPCD      OP=2E,TYPE=MACH,                                    *22580027
               CLASS=0,EVEN=YES,FLOAT=YES                               22600027
AX       OPCD      OP=76,TYPE=MACH,IS=67,                              *22620027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             22640027
AXR      OPCD      OP=36,TYPE=MACH,                                    *22660027
               CLASS=0,EVEN=DOUBLE,FLOAT=YES                            22680027
B        OPCD      OP=47,TYPE=EXTEN,MASK=F,                            *22700027
               ALIGN=H,CLASS=1,LIT23=YES                                22720027
BAL      OPCD      OP=45,TYPE=MACH,                                    *22740027
               ALIGN=H,CLASS=0,LIT23=YES                                22760027
BALR     OPCD      OP=05,TYPE=MACH,                                    *22780027
               CLASS=0                                                  22800027
BAS      OPCD      OP=4D,TYPE=MACH,IS=(20,67),                         *22820027
               ALIGN=H,CLASS=0,LIT23=YES                                22840027
BASR     OPCD      OP=0D,TYPE=MACH,IS=(20,67),                         *22860027
               CLASS=0                                                  22880027
BC       OPCD      OP=47,TYPE=MACH,                                    *22900027
               ALIGN=H,CLASS=0,LIT23=YES                                22920027
BCR      OPCD      OP=07,TYPE=MACH,                                    *22940027
               CLASS=0                                                  22960027
BCT      OPCD      OP=46,TYPE=MACH,                                    *22980027
               ALIGN=H,CLASS=0,LIT23=YES                                23000027
BCTR     OPCD      OP=06,TYPE=MACH,                                    *23020027
               CLASS=0                                                  23040027
BE       OPCD      OP=47,TYPE=EXTEN,MASK=8,                            *23060027
               ALIGN=H,CLASS=1,LIT23=YES                                23080027
BER      OPCD      OP=07,TYPE=EXTEN,MASK=8,                            *23100027
               CLASS=3                                                  23120027
BH       OPCD      OP=47,TYPE=EXTEN,MASK=2,                            *23140027
               ALIGN=H,CLASS=1,LIT23=YES                                23160027
BHR      OPCD      OP=07,TYPE=EXTEN,MASK=2,                            *23180027
               CLASS=3                                                  23200027
BL       OPCD      OP=47,TYPE=EXTEN,MASK=4,                            *23220027
               ALIGN=H,CLASS=1,LIT23=YES                                23240027
BLR      OPCD      OP=07,TYPE=EXTEN,MASK=4,                            *23260027
               CLASS=3                                                  23280027
BM       OPCD      OP=47,TYPE=EXTEN,MASK=4,                            *23300027
               ALIGN=H,CLASS=1,LIT23=YES                                23320027
BMR      OPCD      OP=07,TYPE=EXTEN,MASK=4,                            *23340027
               CLASS=3                                                  23360027
BNE      OPCD      OP=47,TYPE=EXTEN,MASK=7,                            *23380027
               ALIGN=H,CLASS=1,LIT23=YES                                23400027
BNER     OPCD      OP=07,TYPE=EXTEN,MASK=7,                            *23420027
               CLASS=3                                                  23440027
BNH      OPCD      OP=47,TYPE=EXTEN,MASK=D,                            *23460027
               ALIGN=H,CLASS=1,LIT23=YES                                23480027
BNHR     OPCD      OP=07,TYPE=EXTEN,MASK=D,                            *23500027
               CLASS=3                                                  23520027
BNL      OPCD      OP=47,TYPE=EXTEN,MASK=B,                            *23540027
               ALIGN=H,CLASS=1,LIT23=YES                                23560027
BNLR     OPCD      OP=07,TYPE=EXTEN,MASK=B,                            *23580027
               CLASS=3                                                  23600027
BNM      OPCD      OP=47,TYPE=EXTEN,MASK=B,                            *23620027
               ALIGN=H,CLASS=1,LIT23=YES                                23640027
BNMR     OPCD      OP=07,TYPE=EXTEN,MASK=B,                            *23660027
               CLASS=3                                                  23680027
BNO      OPCD      OP=47,TYPE=EXTEN,MASK=E,                            *23700027
               ALIGN=H,CLASS=1,LIT23=YES                                23720027
BNOR     OPCD      OP=07,TYPE=EXTEN,MASK=E,                            *23740027
               CLASS=3                                                  23760027
BNP      OPCD      OP=47,TYPE=EXTEN,MASK=D,                            *23780027
               ALIGN=H,CLASS=1,LIT23=YES                                23800027
BNPR     OPCD      OP=07,TYPE=EXTEN,MASK=D,                            *23820027
               CLASS=3                                                  23840027
BNZ      OPCD      OP=47,TYPE=EXTEN,MASK=7,                            *23860027
               ALIGN=H,CLASS=1,LIT23=YES                                23880027
BNZR     OPCD      OP=07,TYPE=EXTEN,MASK=7,                            *23900027
               CLASS=3                                                  23920027
BO       OPCD      OP=47,TYPE=EXTEN,MASK=1,                            *23940027
               ALIGN=H,CLASS=1,LIT23=YES                                23960027
BOR      OPCD      OP=07,TYPE=EXTEN,MASK=1,                            *23980027
               CLASS=3                                                  24000027
BP       OPCD      OP=47,TYPE=EXTEN,MASK=2,                            *24020027
               ALIGN=H,CLASS=1,LIT23=YES                                24040027
BPR      OPCD      OP=07,TYPE=EXTEN,MASK=2,                            *24060027
               CLASS=3                                                  24080027
BR       OPCD      OP=07,TYPE=EXTEN,MASK=F,                            *24100027
               CLASS=3                                                  24120027
BXH      OPCD      OP=86,TYPE=MACH,                                    *24140027
               ALIGN=H,CLASS=0,LIT23=YES                                24160027
BXLE     OPCD      OP=87,TYPE=MACH,                                    *24180027
               ALIGN=H,CLASS=0,LIT23=YES                                24200027
BZ       OPCD      OP=47,TYPE=EXTEN,MASK=8,                            *24220027
               ALIGN=H,CLASS=1,LIT23=YES                                24240027
BZR      OPCD      OP=07,TYPE=EXTEN,MASK=8,                            *24260027
               CLASS=3                                                  24280027
C        OPCD      OP=59,TYPE=MACH,                                    *24300027
               ALIGN=F,CLASS=0,LIT23=YES                                24320027
CCW      OPCD      OP=28,TYPE=ASSEM,                                   *24340027
               F7XREF=YES,F8UPC=YES,LCR=YES,STE=YES,SUB=YES,UPC=YES     24360027
CD       OPCD      OP=69,TYPE=MACH,                                    *24380027
               ALIGN=D,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             24400027
CDR      OPCD      OP=29,TYPE=MACH,                                    *24420027
               CLASS=0,EVEN=YES,FLOAT=YES                               24440027
CDS      OPCD      OP=BB,TYPE=MACH,IS=70,                              *24460027
               ALIGN=D,CLASS=0                                          24480027
CE       OPCD      OP=79,TYPE=MACH,                                    *24500027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             24520027
CER      OPCD      OP=39,TYPE=MACH,                                    *24540027
               CLASS=0,EVEN=YES,FLOAT=YES                               24560027
CH       OPCD      OP=49,TYPE=MACH,                                    *24580027
               ALIGN=H,CLASS=0,LIT23=YES                                24600027
CHPM     OPCD      OP=B3,TYPE=MACH,IS=44,                              *24620027
               ALIGN=F,CLASS=2,LIT1=YES                                 24640027
CIO      OPCD      OP=9B,TYPE=MACH,IS=20,                              *24660027
               ALIGN=C,CLASS=2                                          24680027
CL       OPCD      OP=55,TYPE=MACH,                                    *24700027
               ALIGN=F,CLASS=0,LIT23=YES                                24720027
CLC      OPCD      OP=D5,TYPE=MACH,                                    *24740027
               ALIGN=C,CLASS=1,LIT1=YES,LIT23=YES                       24760027
CLCL     OPCD      OP=0F,TYPE=MACH,IS=70,                              *24780027
               CLASS=0,EVEN=YES                                         24800027
CLI      OPCD      OP=95,TYPE=MACH,                                    *24820027
               ALIGN=C,CLASS=2,LIT1=YES                                 24840027
CLM      OPCD      OP=BD,TYPE=MACH,IS=70,                              *24860027
               ALIGN=C,CLASS=0,LIT23=YES                                24880027
CLR      OPCD      OP=15,TYPE=MACH,                                    *24900027
               CLASS=0                                                  24920027
CLRIO    OPCD      OP=9D,TYPE=EXTEN,IS=70,MASK=1,                      *24940027
               ALIGN=C,CLASS=3                                          24960027
CNOP     OPCD      OP=29,TYPE=ASSEM,ILLGEN=YES,OPND=YES,               *24980027
               F8UPC=YES,LCR=YES,SUB=YES,UPC=YES                        25000027
COM      OPCD      OP=1E,TYPE=ASSEM,                                   *25020027
               STE=YES,F8UPC=YES                                        25040027
COPY     OPCD      OP=0C,TYPE=ASSEM,                                   *25060027
               ILLGEN=YES                                               25080027
CP       OPCD      OP=F9,TYPE=MACH,                                    *25100027
               ALIGN=C,CLASS=0,LIT1=YES,LIT23=YES                       25120027
CR       OPCD      OP=19,TYPE=MACH,                                    *25140027
               CLASS=0                                                  25160027
CS       OPCD      OP=BA,TYPE=MACH,IS=70,                              *25180027
               ALIGN=F,CLASS=0                                          25200027
CSECT    OPCD      OP=1C,TYPE=ASSEM,ILLGEN=YES,                        *25220027
               F8UPC=YES,STE=YES                                        25240027
CVB      OPCD      OP=4F,TYPE=MACH,                                    *25260027
               ALIGN=D,CLASS=0,LIT23=YES                                25280027
CVD      OPCD      OP=4E,TYPE=MACH,                                    *25300027
               ALIGN=D,CLASS=0                                          25320027
CXD      OPCD      OP=2C,TYPE=ASSEM,OPND=NO,                           *25340027
               F8UPC=YES,STE=YES,UPC=YES                                25360027
D        OPCD      OP=5D,TYPE=MACH,                                    *25380027
               ALIGN=F,CLASS=0,EVEN=YES,LIT23=YES                       25400027
DC       OPCD      OP=26,TYPE=ASSEM,OPND=YES,                          *25420027
               F8UPC=YES,LCR=YES,STE=YES,UPC=YES                        25440027
DD       OPCD      OP=6D,TYPE=MACH,                                    *25460027
               ALIGN=D,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             25480027
DDR      OPCD      OP=2D,TYPE=MACH,                                    *25500027
               CLASS=0,EVEN=YES,FLOAT=YES                               25520027
DE       OPCD      OP=7D,TYPE=MACH,                                    *25540027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             25560027
DER      OPCD      OP=3D,TYPE=MACH,                                    *25580027
               CLASS=0,EVEN=YES,FLOAT=YES                               25600027
DP       OPCD      OP=FD,TYPE=MACH,                                    *25620027
               ALIGN=C,CLASS=0,LIT23=YES                                25640027
DR       OPCD      OP=1D,TYPE=MACH,                                    *25660027
               CLASS=0,EVEN=YES                                         25680027
DROP     OPCD      OP=24,TYPE=ASSEM,NAME=NO,                           *25700027
               F7XREF=YES,F8UPC=YES,LCR=YES,SUB=YES,UPC=YES             25720027
DS       OPCD      OP=27,TYPE=ASSEM,OPND=YES,                          *25740027
               F8UPC=YES,LCR=YES,STE=YES,UPC=YES                        25760027
DSECT    OPCD      OP=1D,TYPE=ASSEM,ILLGEN=YES,                        *25780027
               F8UPC=YES,STE=YES                                        25800027
DX       OPCD      OP=73,TYPE=MACH,IS=67,                              *25820027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             25840027
DXD      OPCD      OP=2B,TYPE=ASSEM,NAME=YES,OPND=YES,                 *25860027
               STE=YES,F8UPC=YES                                        25880027
ED       OPCD      OP=DE,TYPE=MACH,                                    *25900027
               ALIGN=C,CLASS=1,LIT23=YES                                25920027
EDMK     OPCD      OP=DF,TYPE=MACH,                                    *25940027
               ALIGN=C,CLASS=1,LIT23=YES                                25960027
EJECT    OPCD      OP=15,TYPE=ASSEM,                                   *25980027
               NAME=NO                                                  26000027
END      OPCD      OP=21,TYPE=ASSEM,ILLGEN=YES,NAME=NO,                *26020027
               F7XREF=YES,LCR=YES,SUB=YES                               26040027
ENTRY    OPCD      OP=19,TYPE=ASSEM,NAME=NO,OPND=YES,                  *26060027
               F7XREF=YES,LCR=YES                                       26080027
EQU      OPCD      OP=1F,TYPE=ASSEM,NAME=YES,OPND=YES,                 *26100027
               LCR=YES,STE=YES,SUB=YES,UPC=YES                          26120027
EX       OPCD      OP=44,TYPE=MACH,                                    *26140027
               ALIGN=H,CLASS=0,LIT23=YES                                26160027
EXTRN    OPCD      OP=1A,TYPE=ASSEM,                                   *26180027
               NAME=NO,OPND=YES                                         26200027
GBLA     OPCD      OP=00,TYPE=ASSEM,                                   *26220027
               ILLGEN=YES                                               26240027
GBLB     OPCD      OP=01,TYPE=ASSEM,                                   *26260027
               ILLGEN=YES                                               26280027
GBLC     OPCD      OP=02,TYPE=ASSEM,                                   *26300027
               ILLGEN=YES                                               26320027
HDR      OPCD      OP=24,TYPE=MACH,                                    *26340027
               CLASS=0,EVEN=YES,FLOAT=YES                               26360027
HDV      OPCD      OP=9E,TYPE=EXTEN,MASK=1,                            *26380027
               ALIGN=C,CLASS=3                                          26400027
HER      OPCD      OP=34,TYPE=MACH,                                    *26420027
               CLASS=0,EVEN=YES,FLOAT=YES                               26440027
HIO      OPCD      OP=9E,TYPE=MACH,                                    *26460027
               ALIGN=C,CLASS=3                                          26480027
HPR      OPCD      OP=99,TYPE=MACH,IS=20,                              *26500027
               CLASS=2                                                  26520027
HVC      OPCD      OP=83,TYPE=MACH,IS=71,                              *26540027
               ALIGN=F,CLASS=0                                          26560027
IC       OPCD      OP=43,TYPE=MACH,                                    *26580027
               ALIGN=C,CLASS=0,LIT23=YES                                26600027
ICM      OPCD      OP=BF,TYPE=MACH,IS=70,                              *26620027
               ALIGN=C,CLASS=0,LIT23=YES                                26640027
ICTL     OPCD      OP=11,TYPE=ASSEM,                                   *26660027
               ILLGEN=YES                                               26680027
IPK      OPCD      OP=B2,TYPE=EXTEN,MASK=B,                            *26700027
               ALIGN=C,CLASS=3                                          26720027
ISEQ     OPCD      OP=12,TYPE=ASSEM,                                   *26740027
               ILLGEN=YES                                               26760027
ISK      OPCD      OP=09,TYPE=MACH,                                    *26780027
               ALIGN=C,CLASS=0                                          26800027
L        OPCD      OP=58,TYPE=MACH,                                    *26820027
               ALIGN=F,CLASS=0,LIT23=YES                                26840027
LA       OPCD      OP=41,TYPE=MACH,                                    *26860027
               ALIGN=C,CLASS=0,LIT23=YES                                26880027
LCDR     OPCD      OP=23,TYPE=MACH,                                    *26900027
               CLASS=0,EVEN=YES,FLOAT=YES                               26920027
LCER     OPCD      OP=33,TYPE=MACH,                                    *26940027
               CLASS=0,EVEN=YES,FLOAT=YES                               26960027
LCLA     OPCD      OP=03,TYPE=ASSEM,                                   *26980027
               ILLGEN=YES                                               27000027
LCLB     OPCD      OP=04,TYPE=ASSEM,                                   *27020027
               ILLGEN=YES                                               27040027
LCLC     OPCD      OP=05,TYPE=ASSEM,                                   *27060027
               ILLGEN=YES                                               27080027
LCR      OPCD      OP=13,TYPE=MACH,                                    *27100027
               CLASS=0                                                  27120027
LCTL     OPCD      OP=B7,TYPE=MACH,IS=70,                              *27140027
               ALIGN=F,CLASS=0,LIT23=YES                                27160027
LD       OPCD      OP=68,TYPE=MACH,                                    *27180027
               ALIGN=D,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             27200027
LDR      OPCD      OP=28,TYPE=MACH,                                    *27220027
               CLASS=0,EVEN=YES,FLOAT=YES                               27240027
LE       OPCD      OP=78,TYPE=MACH,                                    *27260027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             27280027
LER      OPCD      OP=38,TYPE=MACH,                                    *27300027
               CLASS=0,EVEN=YES,FLOAT=YES                               27320027
LH       OPCD      OP=48,TYPE=MACH,                                    *27340027
               ALIGN=H,CLASS=0,LIT23=YES                                27360027
LM       OPCD      OP=98,TYPE=MACH,                                    *27380027
               ALIGN=F,CLASS=0,LIT23=YES                                27400027
LMC      OPCD      OP=B8,TYPE=MACH,IS=67,                              *27420027
               ALIGN=F,CLASS=0,LIT23=YES                                27440027
LNDR     OPCD      OP=21,TYPE=MACH,                                    *27460027
               CLASS=0,EVEN=YES,FLOAT=YES                               27480027
LNER     OPCD      OP=31,TYPE=MACH,                                    *27500027
               CLASS=0,EVEN=YES,FLOAT=YES                               27520027
LNR      OPCD      OP=11,TYPE=MACH,                                    *27540027
               CLASS=0                                                  27560027
LPDR     OPCD      OP=20,TYPE=MACH,                                    *27580027
               CLASS=0,EVEN=YES,FLOAT=YES                               27600027
LPER     OPCD      OP=30,TYPE=MACH,                                    *27620027
               CLASS=0,EVEN=YES,FLOAT=YES                               27640027
LPR      OPCD      OP=10,TYPE=MACH,                                    *27660027
               CLASS=0                                                  27680027
LPSW     OPCD      OP=82,TYPE=MACH,                                    *27700027
               ALIGN=D,CLASS=3,LIT1=YES                                 27720027
LPSX     OPCD      OP=B2,TYPE=MACH,IS=44,                              *27740027
               ALIGN=D,CLASS=3,LIT1=YES                                 27760027
LR       OPCD      OP=18,TYPE=MACH,                                    *27780027
               CLASS=0                                                  27800027
LRA      OPCD      OP=B1,TYPE=MACH,IS=(67,70),                         *27820027
               ALIGN=C,CLASS=0,LIT23=YES                                27840027
LRDR     OPCD      OP=25,TYPE=MACH,                                    *27860027
               CLASS=0,EVEN=YES,FLOAT=YES                               27880027
LRER     OPCD      OP=35,TYPE=MACH,                                    *27900027
               CLASS=0,EVEN=YES,FLOAT=YES                               27920027
LTDR     OPCD      OP=22,TYPE=MACH,                                    *27940027
               CLASS=0,EVEN=YES,FLOAT=YES                               27960027
LTER     OPCD      OP=32,TYPE=MACH,                                    *27980027
               CLASS=0,EVEN=YES,FLOAT=YES                               28000027
LTORG    OPCD      OP=22,TYPE=ASSEM,                                   *28020027
               F8UPC=YES,LCR=YES,STE=YES,SUB=YES,UPC=YES                28040027
LTR      OPCD      OP=12,TYPE=MACH,                                    *28060027
               CLASS=0                                                  28080027
LX       OPCD      OP=74,TYPE=MACH,IS=67,                              *28100027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             28120027
M        OPCD      OP=5C,TYPE=MACH,                                    *28140027
               ALIGN=F,CLASS=0,EVEN=YES,LIT23=YES                       28160027
MACRO    OPCD      OP=0D,TYPE=ASSEM,                                   *28180027
               ILLGEN=YES                                               28200027
MC       OPCD      OP=AF,TYPE=MACH,IS=70,                              *28220027
               ALIGN=C,CLASS=2,LIT1=YES                                 28240027
MD       OPCD      OP=6C,TYPE=MACH,                                    *28260027
               ALIGN=D,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             28280027
MDD      OPCD      OP=65,TYPE=MACH,IS=67,                              *28300027
               ALIGN=D,CLASS=0,EVEN=DOUBLE,FLOAT=YES,LIT23=YES          28320027
MDDR     OPCD      OP=25,TYPE=MACH,IS=67,                              *28340027
               CLASS=0,EVEN=DOUBLE,FLOAT=YES                            28360027
MDR      OPCD      OP=2C,TYPE=MACH,                                    *28380027
               CLASS=0,EVEN=YES,FLOAT=YES                               28400027
ME       OPCD      OP=7C,TYPE=MACH,                                    *28420027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             28440027
MEND     OPCD      OP=10,TYPE=ASSEM,                                   *28460027
               ILLGEN=YES                                               28480027
MER      OPCD      OP=3C,TYPE=MACH,                                    *28500027
               CLASS=0,EVEN=YES,FLOAT=YES                               28520027
MEXIT    OPCD      OP=0F,TYPE=ASSEM,                                   *28540027
               ILLGEN=YES                                               28560027
MH       OPCD      OP=4C,TYPE=MACH,                                    *28580027
               ALIGN=H,CLASS=0,LIT23=YES                                28600027
MNOTE    OPCD      OP=0E,                                              *28620027
               TYPE=ASSEM                                               28640027
MP       OPCD      OP=FC,TYPE=MACH,                                    *28660027
               ALIGN=C,CLASS=0,LIT23=YES                                28680027
MR       OPCD      OP=1C,TYPE=MACH,                                    *28700027
               CLASS=0,EVEN=YES                                         28720027
MVC      OPCD      OP=D2,TYPE=MACH,                                    *28740027
               ALIGN=C,CLASS=1,LIT23=YES                                28760027
MVCL     OPCD      OP=0E,TYPE=MACH,IS=70,                              *28780027
               CLASS=0,EVEN=YES                                         28800027
MVI      OPCD      OP=92,TYPE=MACH,                                    *28820027
               ALIGN=C,CLASS=2                                          28840027
MVN      OPCD      OP=D1,TYPE=MACH,                                    *28860027
               ALIGN=C,CLASS=1,LIT23=YES                                28880027
MVO      OPCD      OP=F1,TYPE=MACH,                                    *28900027
               ALIGN=C,CLASS=0,LIT23=YES                                28920027
MVZ      OPCD      OP=D3,TYPE=MACH,                                    *28940027
               ALIGN=C,CLASS=1,LIT23=YES                                28960027
MX       OPCD      OP=72,TYPE=MACH,IS=67,                              *28980027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             29000027
MXD      OPCD      OP=67,TYPE=MACH,                                    *29020027
               ALIGN=D,CLASS=0,EVEN=DOUBLE,FLOAT=YES,LIT23=YES          29040027
MXDR     OPCD      OP=27,TYPE=MACH,                                    *29060027
               CLASS=0,EVEN=DOUBLE,FLOAT=YES                            29080027
MXR      OPCD      OP=26,TYPE=MACH,                                    *29100027
               CLASS=0,EVEN=DOUBLE,FLOAT=YES                            29120027
N        OPCD      OP=54,TYPE=MACH,                                    *29140027
               ALIGN=F,CLASS=0,LIT23=YES                                29160027
NC       OPCD      OP=D4,TYPE=MACH,                                    *29180027
               ALIGN=C,CLASS=1,LIT23=YES                                29200027
NI       OPCD      OP=94,TYPE=MACH,                                    *29220027
               ALIGN=C,CLASS=2                                          29240027
NOP      OPCD      OP=47,TYPE=EXTEN,MASK=0,                            *29260027
               ALIGN=H,CLASS=1,LIT23=YES                                29280027
NOPR     OPCD      OP=07,TYPE=EXTEN,                                   *29300027
               CLASS=3,MASK=0                                           29320027
NR       OPCD      OP=14,TYPE=MACH,                                    *29340027
               CLASS=0                                                  29360027
O        OPCD      OP=56,TYPE=MACH,                                    *29380027
               ALIGN=F,CLASS=0,LIT23=YES                                29400027
OC       OPCD      OP=D6,TYPE=MACH,                                    *29420027
               ALIGN=C,CLASS=1,LIT23=YES                                29440027
OI       OPCD      OP=96,TYPE=MACH,                                    *29460027
               ALIGN=C,CLASS=2                                          29480027
OPSYN    OPCD      OP=2D,TYPE=ASSEM,                                   *29500027
               ILLGEN=YES,NAME=YES                                      29520027
OR       OPCD      OP=16,TYPE=MACH,                                    *29540027
               CLASS=0                                                  29560027
ORG      OPCD      OP=20,TYPE=ASSEM,                                   *29580027
               F8UPC=YES,LCR=YES,STE=YES,SUB=YES,UPC=YES                29600027
PACK     OPCD      OP=F2,TYPE=MACH,                                    *29620027
               ALIGN=C,CLASS=0,LIT23=YES                                29640027
POP      OPCD      OP=2F,TYPE=ASSEM,                                   *29660027
               NAME=NO,OPND=YES                                         29680027
PRINT    OPCD      OP=13,TYPE=ASSEM,                                   *29700027
               NAME=NO                                                  29720027
PTLB     OPCD      OP=B2,TYPE=EXTEN,IS=70,MASK=D,                      *29740027
               ALIGN=C,CLASS=3                                          29760027
PUNCH    OPCD      OP=16,TYPE=ASSEM,                                   *29780027
               NAME=NO,OPND=YES                                         29800027
PUSH     OPCD      OP=30,TYPE=ASSEM,                                   *29820027
               NAME=NO,OPND=YES                                         29840027
RDD      OPCD      OP=85,TYPE=MACH,                                    *29860027
               ALIGN=C,CLASS=2                                          29880027
RDDW     OPCD      OP=B5,TYPE=MACH,IS=44,                              *29900027
               ALIGN=F,CLASS=2                                          29920027
REPRO    OPCD      OP=17,TYPE=ASSEM,                                   *29940027
               ILLGEN=YES,NAME=NO                                       29960027
RRB      OPCD      OP=B3,TYPE=EXTEN,IS=70,MASK=3,                      *29980027
               ALIGN=C,CLASS=3                                          30000027
S        OPCD      OP=5B,TYPE=MACH,                                    *30020027
               ALIGN=F,CLASS=0,LIT23=YES                                30040027
SCK      OPCD      OP=B2,TYPE=EXTEN,IS=70,MASK=4,                      *30060027
               ALIGN=C,CLASS=3,LIT1=YES                                 30080027
SCKC     OPCD      OP=B2,TYPE=EXTEN,IS=70,MASK=6,                      *30100027
               ALIGN=D,CLASS=3,LIT1=YES                                 30120027
SD       OPCD      OP=6B,TYPE=MACH,                                    *30140027
               ALIGN=D,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             30160027
SDD      OPCD      OP=67,TYPE=MACH,IS=67,                              *30180027
               ALIGN=D,CLASS=0,EVEN=DOUBLE,FLOAT=YES,LIT23=YES          30200027
SDDR     OPCD      OP=27,TYPE=MACH,IS=67,                              *30220027
               CLASS=0,EVEN=DOUBLE,FLOAT=YES                            30240027
SDR      OPCD      OP=2B,TYPE=MACH,                                    *30260027
               CLASS=0,EVEN=YES,FLOAT=YES                               30280027
SE       OPCD      OP=7B,TYPE=MACH,                                    *30300027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             30320027
SER      OPCD      OP=3B,TYPE=MACH,                                    *30340027
               CLASS=0,EVEN=YES,FLOAT=YES                               30360027
SETA     OPCD      OP=06,TYPE=ASSEM,                                   *30380027
               ILLGEN=YES                                               30400027
SETB     OPCD      OP=07,TYPE=ASSEM,                                   *30420027
               ILLGEN=YES                                               30440027
SETC     OPCD      OP=08,TYPE=ASSEM,                                   *30460027
               ILLGEN=YES                                               30480027
SH       OPCD      OP=4B,TYPE=MACH,                                    *30500027
               ALIGN=H,CLASS=0,LIT23=YES                                30520027
SIGP     OPCD      OP=AE,TYPE=MACH,IS=70,                              *30540027
               ALIGN=C,CLASS=0                                          30560027
SIO      OPCD      OP=9C,TYPE=MACH,                                    *30580027
               ALIGN=C,CLASS=3                                          30600027
SIOF     OPCD      OP=9C,TYPE=EXTEN,MASK=1,                            *30620027
               ALIGN=C,CLASS=3                                          30640027
SL       OPCD      OP=5F,TYPE=MACH,                                    *30660027
               ALIGN=F,CLASS=0,LIT23=YES                                30680027
SLA      OPCD      OP=8B,TYPE=MACH,                                    *30700027
               ALIGN=C,CLASS=1                                          30720027
SLDA     OPCD      OP=8F,TYPE=MACH,                                    *30740027
               ALIGN=C,CLASS=1,EVEN=YES                                 30760027
SLDL     OPCD      OP=8D,TYPE=MACH,                                    *30780027
               ALIGN=C,CLASS=1,EVEN=YES                                 30800027
SLL      OPCD      OP=89,TYPE=MACH,                                    *30820027
               ALIGN=C,CLASS=1                                          30840027
SLR      OPCD      OP=1F,TYPE=MACH,                                    *30860027
               CLASS=0                                                  30880027
SLT      OPCD      OP=A2,TYPE=MACH,IS=67,                              *30900027
               ALIGN=F,CLASS=0                                          30920027
SP       OPCD      OP=FB,TYPE=MACH,                                    *30940027
               ALIGN=C,CLASS=0,LIT23=YES                                30960027
SPACE    OPCD      OP=14,TYPE=ASSEM,                                   *30980027
               NAME=NO                                                  31000027
SPKA     OPCD      OP=B2,TYPE=EXTEN,IS=70,MASK=A,                      *31020027
               ALIGN=C,CLASS=3                                          31040027
SPM      OPCD      OP=04,TYPE=MACH,                                    *31060027
               ALIGN=C,CLASS=1                                          31080027
SPSW     OPCD      OP=81,TYPE=MACH,IS=20,                              *31100027
               ALIGN=H,CLASS=3,LIT1=YES                                 31120027
SPT      OPCD      OP=B2,TYPE=EXTEN,IS=70,MASK=8,                      *31140027
               ALIGN=D,CLASS=3,LIT1=YES                                 31160027
SPX      OPCD      OP=B3,TYPE=EXTEN,IS=70,MASK=0,                      *31180027
               ALIGN=F,CLASS=3,LIT23=YES                                31200027
SR       OPCD      OP=1B,TYPE=MACH,                                    *31220027
               CLASS=0                                                  31240027
SRA      OPCD      OP=8A,TYPE=MACH,                                    *31260027
               ALIGN=C,CLASS=1                                          31280027
SRDA     OPCD      OP=8E,TYPE=MACH,                                    *31300027
               ALIGN=C,CLASS=1,EVEN=YES                                 31320027
SRDL     OPCD      OP=8C,TYPE=MACH,                                    *31340027
               ALIGN=C,CLASS=1,EVEN=YES                                 31360027
SRL      OPCD      OP=88,TYPE=MACH,                                    *31380027
               ALIGN=C,CLASS=1                                          31400027
SRP      OPCD      OP=F0,TYPE=MACH,                                    *31420027
               ALIGN=C,CLASS=3                                          31440027
SSK      OPCD      OP=08,TYPE=MACH,                                    *31460027
               ALIGN=C,CLASS=0                                          31480027
SSM      OPCD      OP=80,TYPE=MACH,                                    *31500027
               ALIGN=C,CLASS=3,LIT1=YES                                 31520027
ST       OPCD      OP=50,TYPE=MACH,                                    *31540027
               ALIGN=F,CLASS=0                                          31560027
STAP     OPCD      OP=B3,TYPE=EXTEN,IS=70,MASK=2,                      *31580027
               ALIGN=H,CLASS=3                                          31600027
START    OPCD      OP=1B,TYPE=ASSEM,ILLGEN=YES,                        *31620027
               F8UPC=YES                                                31640027
STC      OPCD      OP=42,TYPE=MACH,                                    *31660027
               ALIGN=C,CLASS=0                                          31680027
STCK     OPCD      OP=B2,TYPE=EXTEN,IS=70,MASK=5,                      *31700027
               ALIGN=C,CLASS=3                                          31720027
STCKC    OPCD      OP=B2,TYPE=EXTEN,IS=70,MASK=7,                      *31740027
               ALIGN=D,CLASS=3                                          31760027
STCM     OPCD      OP=BE,TYPE=MACH,IS=70,                              *31780027
               ALIGN=C,CLASS=0                                          31800027
STCTL    OPCD      OP=B6,TYPE=MACH,                                    *31820027
               ALIGN=F,CLASS=0                                          31840027
STD      OPCD      OP=60,TYPE=MACH,                                    *31860027
               ALIGN=D,CLASS=0,EVEN=YES,FLOAT=YES                       31880027
STE      OPCD      OP=70,TYPE=MACH,                                    *31900027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES                       31920027
STH      OPCD      OP=40,TYPE=MACH,                                    *31940027
               ALIGN=H,CLASS=0                                          31960027
STIDC    OPCD      OP=B2,TYPE=EXTEN,IS=70,MASK=3,                      *31980027
               ALIGN=C,CLASS=3                                          32000027
STIDP    OPCD      OP=B2,TYPE=EXTEN,IS=70,MASK=2,                      *32020027
               ALIGN=C,CLASS=3                                          32040027
STM      OPCD      OP=90,TYPE=MACH,                                    *32060027
               ALIGN=F,CLASS=0                                          32080027
STMC     OPCD      OP=B0,TYPE=MACH,IS=67,                              *32100027
               ALIGN=F,CLASS=0                                          32120027
STNSM    OPCD      OP=AC,TYPE=MACH,                                    *32140027
               ALIGN=C,CLASS=2                                          32160027
STOSM    OPCD      OP=AD,TYPE=MACH,                                    *32180027
               ALIGN=C,CLASS=2                                          32200027
STPT     OPCD      OP=B2,TYPE=EXTEN,IS=70,MASK=9,                      *32220027
               ALIGN=D,CLASS=3                                          32240027
STPX     OPCD      OP=B3,TYPE=EXTEN,IS=70,MASK=1,                      *32260027
               ALIGN=F,CLASS=3                                          32280027
SU       OPCD      OP=7F,TYPE=MACH,                                    *32300027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             32320027
SUR      OPCD      OP=3F,TYPE=MACH,                                    *32340027
               CLASS=0,EVEN=YES,FLOAT=YES                               32360027
SVC      OPCD      OP=0A,TYPE=MACH,                                    *32380027
               ALIGN=C,CLASS=2                                          32400027
SW       OPCD      OP=6F,TYPE=MACH,                                    *32420027
               ALIGN=D,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             32440027
SWPR     OPCD      OP=A3,TYPE=MACH,IS=67,                              *32460027
               CLASS=0,EVEN=YES                                         32480027
SWR      OPCD      OP=2F,TYPE=MACH,                                    *32500027
               CLASS=0,EVEN=YES,FLOAT=YES                               32520027
SX       OPCD      OP=77,TYPE=MACH,IS=67,                              *32540027
               ALIGN=F,CLASS=0,EVEN=YES,FLOAT=YES,LIT23=YES             32560027
SXR      OPCD      OP=37,TYPE=MACH,                                    *32580027
               CLASS=0,EVEN=DOUBLE,FLOAT=YES                            32600027
TCH      OPCD      OP=9F,TYPE=MACH,                                    *32620027
               ALIGN=C,CLASS=3                                          32640027
TIO      OPCD      OP=9D,TYPE=MACH,                                    *32660027
               ALIGN=C,CLASS=3                                          32680027
TIOB     OPCD      OP=9A,TYPE=MACH,IS=20,                              *32700027
               ALIGN=H,CLASS=2,LIT1=YES                                 32720027
TITLE    OPCD      OP=18,                                              *32740027
               TYPE=ASSEM                                               32760027
TM       OPCD      OP=91,TYPE=MACH,                                    *32780027
               ALIGN=C,CLASS=2,LIT1=YES                                 32800027
TR       OPCD      OP=DC,TYPE=MACH,                                    *32820027
               ALIGN=C,CLASS=1,LIT23=YES                                32840027
TRT      OPCD      OP=DD,TYPE=MACH,                                    *32860027
               ALIGN=C,CLASS=1,LIT1=YES,LIT23=YES                       32880027
TS       OPCD      OP=93,TYPE=MACH,                                    *32900027
               ALIGN=C,CLASS=3                                          32920027
UNPK     OPCD      OP=F3,TYPE=MACH,                                    *32940027
               ALIGN=C,CLASS=0,LIT23=YES                                32960027
USING    OPCD      OP=23,TYPE=ASSEM,NAME=NO,OPND=YES,                  *32980027
               F7XREF=YES,F8UPC=YES,LCR=YES,SUB=YES,UPC=YES             33000027
WRD      OPCD      OP=84,TYPE=MACH,                                    *33020027
               ALIGN=C,CLASS=2,LIT1=YES                                 33040027
WRDW     OPCD      OP=B4,TYPE=MACH,IS=44,                              *33060027
               ALIGN=F,CLASS=2,LIT1=YES                                 33080027
WXTRN    OPCD      OP=2E,TYPE=ASSEM,                                   *33100027
               NAME=NO,OPND=YES                                         33120027
X        OPCD      OP=57,TYPE=MACH,                                    *33140027
               ALIGN=F,CLASS=0,LIT23=YES                                33160027
XC       OPCD      OP=D7,TYPE=MACH,                                    *33180027
               ALIGN=C,CLASS=1,LIT23=YES                                33200027
XI       OPCD      OP=97,TYPE=MACH,                                    *33220027
               ALIGN=C,CLASS=2                                          33240027
XIO      OPCD      OP=D0,TYPE=MACH,IS=20,                              *33260027
               ALIGN=C,CLASS=2                                          33280027
XR       OPCD      OP=17,TYPE=MACH,                                    *33300027
               CLASS=0                                                  33320027
ZAP      OPCD      OP=F8,TYPE=MACH,                                    *33340027
               ALIGN=C,CLASS=0,LIT23=YES                                33360027
         EJECT                                                          33380027
         OPCDGEN                                                        33400027
         SPACE     2                                                    33420027
         END       ASMGF7X                                              33440027
./ ADD NAME=ASMGF8A
F8A      TITLE     'ASMG F8  ASSEMBLER OPERATOR PROCESSOR (F8AOP)'      00020021
         ISEQ  73,78                                                    00040021
ASMGF8A  START     ,                   ASSEMBLER OP PROCESSOR           00060020
         PRINT     NOGEN                                                00080020
         FDIMEN                                                         00100020
         PRINT      GEN                                                 00120020
*                                                                     * 00140020
*TITLE 'ASMGF8A ' ...  ASSEMBLER OPERATION PROCESSOR                  * 00160020
*FUNCTION/OPERATION-                                                  * 00180020
*  ASMGF8A PROCESSES THE FOLLOWING ASSEMBLER OPERATIONS- PRINT, SPACE,* 00200020
*   EJECT, MNOTE, PUNCH, REPRO, TITLE, ENTRY, EXTERN, START, CSECT,   * 00220020
*   DSECT, COMMON, EQU, ORG, LITORG, USING, DROP, CNOP, DXD, CXD, CCW,* 00240020
*   LITERAL DC, DC, AND DS. IT IS CALLED BY ASMGF8C AND USES DC EVAL  * 00260022
*   TO EVALUATE EXPRESSIONS, AND DCVAL TO EVALUATE DC STATEMENTS. THE * 00280020
*   FOLLOWING ERRORS ARE FOUND AND LOGGED-                            * 00300020
*        LOCATION COUNTER               WRAP AROUND                   * 00320020
*        EXPRESSION TOO LARGE           REGISTER SPECIFICATION        * 00340020
*        UNDEFINED SYMBOL               RELOCATABILITY                * 00360020
*        REGISTER NOT USED              CCW ERRORS                    * 00380020
*        ALIGNMENT                      ENTRY ERRORS                  * 00400020
*        OPERAND TOO COMPLEX            LENGTH                        * 00420020
*        INVALID DELIMITER              PRINT PARAMETER ERRORS        * 00440020
*ENTRY POINTS                                                         * 00460020
*  ASMGF8A   ASOPRO(ACT)      PROCESS ASSEMBLER OPERATIONS            * 00480020
*     CALLING SEQUENCE-                                               * 00500020
*        L     FRB,ASOPRO(ACT)          LOAD BASE/ENTRY               * 00520020
*        BALR  CRR,ACT                  CALL ASMGF8A                  * 00540020
*   SETSEC                    SETS CURRENT ADJUSTMENT BASE- INTERNAL  * 00560020
*   SECSET   F8STSC(ACT)      SETS CURRENT ADJUSTMENT BASE- EXTERNAL  * 00580020
*     CALLING SEQUENCE                                                * 00600020
*        L     FRB,ASOPRO(ACT)          LOAD BASE                     * 00620020
*        L     GR1,F8STSC(ACT)          LOAD ENTRY                    * 00640020
*        BALR  SRR,GR1                  CALL SET ADJUSTMENT           * 00660020
*INPUT- RECORDS TYPE 4, 6, AND 7                                      * 00680020
*OUTPUT-ASMGF8P IS CALLED TO PRINT OUT THE LISTING AND CARDS WHEN     * 00700022
*        NECESSARY                                                    * 00720020
*EXTERNAL ROUTINES-                                                   * 00740020
*   NAME           ROUTINE    USE                                     * 00760020
*   PRNT(ACT)      ASMGF8P    TO PRINT AND/OR PUNCH                   * 00780020
*   CEEVAL(ACT)    ASMGF8E    EXPRESSION EVALUATION                   * 00800020
*   CSTGER(ACT)    ASMGF8C    FIND SYMBOL IN SYMBOL TABLE             * 00820020
*   GETLAT(ACT)    ASMGF8I    GET LITERAL ADDRESS TABLE               * 00840020
*   CDCVAL(ACT)    ASMGF8D    DC EVALUATION                           * 00860020
*   CLOGER(ACT)    ASMGF8L    LOG ERROR                               * 00880020
*   RLDRTN         ASMGF8D    RLD PROCESSING                          * 00900020
*   STLOC          ASMGF8D    FOR CCW RLD PROCESSING                  * 00920020
*EXITS- NORMAL AND ERROR                                              * 00940020
*   RETURN FROM ASMGF8A VIA                                           * 00960020
*        B     CTRTRN(ACT)              EXIT                          * 00980020
*   RETURN FROM SECSET VIA                                            * 01000020
*        BR    SRR                      EXIT                          * 01020020
*TABLES/WORKAREAS                                                     * 01040020
*   ASMOPR- TRANSFER TABLE FOR ASSEMBLER OP-CODES                     * 01060020
*   F8REGS- SAVE AREA FOR REGISTER IN SECSET                          * 01080020
*   ERRREGS- SAVE AREA FOR REGISTER ON ERRORS                         * 01100020
*NOTES                                                                * 01120020
***   F8AOP   ***                                                       01140020
*ASSEMBLER OP PROCESSOR                                                 01160020
* THIS ROUTINE PROCESSES THE ASSEMBLY OPS WHICH HAVE NOT BEEN           01180020
* PREVIOUSLY COMPLETELY PROCESSED.                                      01200020
*                                                                     * 01220020
         EJECT                                                          01240020
         USING *,FRB                                                    01260020
         SR    GRZ,GRZ                                                  01280020
         L     GRX,CTWRAPX(ACT)         LOCATION COUNTER ADJUSTED VALUE 01300020
         ST    GRZ,CTWRAPX(ACT)         ZERO OUT ADJUSTED LOC CTR       01320020
         IC    GRZ,F8WORK+4(ACT)        GET HEX CODE                    01340020
         MVI   F8INST+15(ACT),X'0F'     DONT PRINT LEFT HAND SIDE       01360020
         MVI   ERRSW,X'00'              INITIALIZE ERROR SWITCH         01380020
         S     GRZ,NINEEN               SET DISP OF INST RELATIVE TO 0  01400020
         BM    MNOTST                   MINUS, PROCESS MNOTE            01420020
         OC    PYRSW(1,ACT),F8WORK+5(ACT)  GET ASSEMBLER SWITCH CODE    01440020
         SR    GRY,GRY                  ZERO INDEX                      01460020
         AR    GRZ,GRZ                  FIX FOR HALF WORD GET           01480020
         LH    GRZ,ASMOPR(GRZ)          GET RELATIVE ADDRESS            01500020
         B     AOPTBL(GRZ)             INDEXED BRANCH TO INSTRUCTION    01520020
MNOTST   CLI   F8WORK+4(ACT),KMNOTE     IS THIS RECORD AN MNOTE         01540020
         BNE   CTRTRN(ACT)              IF NOT, EXIT                    01560020
         MVI   REPSW(ACT),X'0F'         SET FOR MNOTE                   01580020
         B     CTRTRN(ACT)              RETURN                          01600020
*********************************************************************** 01620020
***   ASMOPR   ***                                                      01640020
*TABLE OF ASSEMBLER OPS TO BE USED IN COMPUTED GO TO                    01660020
*********************************************************************** 01680020
ASMOPR   DS    0H                                                       01700020
         DC    AL2(PRINTB-AOPTBL)       PRINT DISPLACEMENT              01720020
         DC    AL2(SPACE-AOPTBL)        SPACE DISPLACEMENT              01740020
         DC    AL2(EJECT-AOPTBL)        EJECT DISPLACEMENT              01760020
         DC    AL2(PUNCHB-AOPTBL)       PUNCH DISPLACEMENT              01780020
         DC    AL2(REPRO-AOPTBL)        REPRO DISPLACEMENT              01800020
         DC    AL2(TITLEB-AOPTBL)       TITLE DISPLACEMENT              01820020
         DC    AL2(ENTRYB-AOPTBL)       ENTRY DISPLACEMENT              01840020
         DC    AL2(EXTRNB-AOPTBL)       EXTERN DISPLACEMENT             01860020
         DC    AL2(STARTB-AOPTBL)       START DISPLACEMENT              01880020
         DC    AL2(CSECTB-AOPTBL)       CSECT DISPLACEMENT              01900020
         DC    AL2(DSECTB-AOPTBL)       DSECT DISPLACEMENT              01920020
         DC    AL2(COMB-AOPTBL)         COMMON DISPLACEMENT             01940020
         DC    AL2(EQUB-AOPTBL)         EQUIVALENCE DISPLACE,ENT        01960020
         DC    AL2(ORGB-AOPTBL)         ORIGIN DISPLACEMENT             01980020
         DC    AL2(ENDB-AOPTBL)         END DISPLACEMENT                02000020
         DC    AL2(LTORGB-AOPTBL)       LITORG DISPLACEMENT             02020020
         DC    AL2(USINGB-AOPTBL)       USING DISPLACEMENT              02040020
         DC    AL2(DROPB-AOPTBL)        DROP DISPLACEMENT               02060020
         DC    AL2(LITERB-AOPTBL)       LITERAL DISPLACEMENT            02080020
         DC    AL2(DCB-AOPTBL)          DC DISPLACEMENT                 02100020
         DC    AL2(DSB-AOPTBL)          DS DISPLACEMENT                 02120020
         DC    AL2(CCWB-AOPTBL)         CCW DISPLACEMENT                02140020
         DC    AL2(CNOPB-AOPTBL)        CNOP DISPLACEMENT               02160020
         DC    AL2(ASERRB-AOPTBL)       QUIT EXIT  2A                   02180020
         DC    AL2(DSB-AOPTBL)          DXD  2B                         02200020
         DC    AL2(DCDSLT-AOPTBL)       CXD   2C                        02220020
         DC    AL2(RETURN-AOPTBL)       OPSYN 2D                        02230023
         DC    AL2(EXTRNB-AOPTBL)       WXTRN DISPLACEMENT              02235025
         DC    AL2(POPB-AOPTBL)         POP 2F                          02236027
         DC    AL2(PSHB-AOPTBL)         PUSH 30                         02237027
         DC    AL2(ASERRB-AOPTBL)      ASSEMBLY ERROR DISPLACEMENT      02240020
         DC    AL2(RETURN-AOPTBL)       RETURN TO MAIN LINE CONTROL     02260020
AOPTBL   DS    0H                       1ST ASSEMBLER OP LOCATION       02280020
*********************************************************************** 02300020
***   PRINTB   ***                                                      02320020
*THIS ROUTINE SCANS THE OPERAND FIELD OF ALL PRINT STATEMENTS AND SETS  02340020
* SWITCHES TO BE USED BY THE PRINT AND PUNCH PORTION OF F8OP.           02360020
*********************************************************************** 02380020
PRINTB   MVI   F8INST+15(ACT),X'0F'     DONT PRINT LOCATION COUNTER     02400020
         MVC   PNTSAV(12),F8PON(ACT)    SAVE OLD SETTINGS               02420020
         MVI   PRNTFLAG,X'00'           TURN ALL FLAGS OFF              02440020
         ST    ACT,F8TEMP               SAVE ACT REG.                   02460020
         L     FRB,PRNT(ACT)            LOAD F8OP BASE REG.             02480020
         BALR  SRR,FRB                  CALL PRINT                      02500020
         L     FRB,ASOPRO(ACT)     LOAD F8AOP BASE REG.                 02520020
         L     ACT,F8TEMP              RESTORE ACT REG.                 02540020
         LA    GRY,3                   INITIALIZE PARAMETER COUNT       02560020
         SR    GRX,GRX                  ZERO CELL                       02580020
         L     SP1,F8OPRN(ACT)          OPERAND POINTER                 02600020
PRNTB1   CLC   0(2,SP1),ONC                                             02620020
         BE    DON                      IF OPERAND 'ON'                 02640020
         CLC   0(3,SP1),OFFC                                            02660020
         BE    DOFF                     IF OPERAND 'OFF'                02680020
         CLC   0(3,SP1),GENC                                            02700020
         BE    DGEN                     IF OPERAND 'GEN'                02720020
         CLC   0(5,SP1),NOGENC                                          02740020
         BE    DNOGEN                   IF OPERAND 'NOGEN'              02760020
         CLC   0(4,SP1),DATAC                                           02780020
         BE    DDATA                    IF OPERAND 'DATA'               02800020
         CLC   0(6,SP1),NDATAC                                          02820020
         BE    DNDATA                   IF OPERAND 'NODATA'             02840020
         BAL   SRR,ERRZRO               LOG AN ERRORSWITCH SETTINGS     02860020
         DC    AL2(ERRPNT)              UNRECOGNIZABLE PRINT PRAMTR     02880020
         MVC   F8PON(12,ACT),PNTSAV     RESTORE OLD SETTINGS            02900020
RETURN   B     CTRTRN(ACT)              EXIT                            02920020
DON      LA    SP2,F8PON(ACT)           SWITCH LOCATION FOR ON          02940020
         SR    GRX,GRX                  SET ON                          02960020
         LA    SP1,2(SP1)               BUMP OPERAND POINTER BY 2       02980020
         TM    PRNTFLAG,X'02'           OFF                             03000020
         BO    PNTOPNER                 CONFLICTING PRINT OPERANDS      03020020
         OI    PRNTFLAG,X'01'           ON                              03040020
         B     CPRNTB                   BRANCH TO COMMON POINT          03060020
DOFF     LA    SP2,F8PON(ACT)                                           03080020
         LA    GRX,255                  SET OFF                         03100020
         LA    SP1,3(SP1)                                               03120020
         TM    PRNTFLAG,X'01'           ON                              03140020
         BO    PNTOPNER                 CONFLICTING PRINT OPERANDS      03160020
         OI    PRNTFLAG,X'02'           OFF                             03180020
         B     CPRNTB                                                   03200020
DGEN     LA    SP2,F8PGEN(ACT)                                          03220020
         SR    GRX,GRX                  SET ON                          03240020
         LA    SP1,3(SP1)                                               03260020
         TM    PRNTFLAG,X'08'           NOGEN                           03280020
         BO    PNTOPNER                 CONFLICTING PRINT OPERANDS      03300020
         OI    PRNTFLAG,X'04'           GEN                             03320020
         B     CPRNTB                                                   03340020
DNOGEN   LA    SP2,F8PGEN(ACT)         ADDRESS OF GEN SWOTCH            03360020
         LA    GRX,255                  SET OFF                         03380020
         LA    SP1,5(SP1)                                               03400020
         TM    PRNTFLAG,X'04'           GEN                             03420020
         BO    PNTOPNER                 CONFLICTING PRINT OPERANDS      03440020
         OI    PRNTFLAG,X'08'           NOGEN                           03460020
         B     CPRNTB                                                   03480020
DDATA    LA    SP2,F8PDAT(ACT)                                          03500020
         SR    GRX,GRX                  SET ON                          03520020
         LA    SP1,4(SP1)                                               03540020
         TM    PRNTFLAG,X'20'           NODATA                          03560020
         BO    PNTOPNER                 CONFLICTING PRINT OPERANDS      03580020
         OI    PRNTFLAG,X'10'           DATA                            03600020
         B     CPRNTB                                                   03620020
         LA    SP1,1(SP1)               BUMP PAST FIRST QUOTE           03640020
DNDATA   LA    SP2,F8PDAT(ACT)                                          03660020
         LA    GRX,255                  SET OFF                         03680020
         LA    SP1,6(SP1)                                               03700020
         TM    PRNTFLAG,X'10'           DATA                            03720020
         BO    PNTOPNER                 CONFLICTING PRINT OPERANDS      03740020
         OI    PRNTFLAG,X'20'           NODATA                          03760020
         B     CPRNTB                                                   03780020
PNTOPNER BAL   SRR,ERRZRO               LOG ERROR ETC                   03800020
         DC    AL2(ERRPNT)              ILLEGAL PRINT OPERAND           03820027
         MVC   F8PON(12,ACT),PNTSAV     RESTORE OLD SETTINGS            03840020
         B     CTRTRN(ACT)              PRINT NOW FOOL (}) PROOF        03860020
CPRNTB   CLI   0(SP1),ICOMMA            IF COMMA, OK                    03880020
         BE    PDELOK                                                   03900020
         CLI   0(SP1),IBLANK            IF BLANK,OK                     03920020
         BNE   DLMERR                   IF NOT, SYNTAX ERROR            03940020
PDELOK   STC   GRX,0(SP2)               SET APPROPRIATE FLAG IN APP LOC 03960020
         CLI   0(SP1),ICOMMA            IF COMMA, MORE                  03980020
         BNE   CTRTRN(ACT)              IF NOT COMMA RETURN TO MLC      04000020
         LA    SP1,1(SP1)               IF COMMA BUMP OPERAND POINTER   04020020
         BCT   GRY,PRNTB1              IF NOT 3, CONTINUE               04040020
         MVC   F8PON(12,ACT),PNTSAV     RESTORE OLD SETTINGS            04060020
         B     DLMERR                  3 IS ERROR                       04080020
*********************************************************************** 04100020
***   SPACE   ***                                                       04120020
*THIS ROUTINE SETS A SWITCH TO BE USED IN THE PRINT PORTION OF F8OP.    04140020
*********************************************************************** 04160020
SPACE    TM    F8PON(ACT),X'FF'         IS PRINT SWITCH ON              04180020
         BNZ   SPAC03                   IF NON ZERO, OFF                04200020
         TM    F8PGEN(ACT),X'FF'        IS GEN SWITCH ON                04220020
         BZ    SPACE00                  YES                             04240020
         TM    F8WORK+2(ACT),X'10'      IS THIS A GENERATED STATEMENT   04260020
         BZ    SPACE00                  NO                              04280020
SPAC03   SR    SP2,SP2                  ZERO REGISTER                   04300020
         B     SPAC02                   SET TO SPACE 0 TIMES            04320020
SPACE00  CLI   0(SP1),ICOMMA            IS OPERAND BLANK                04340020
         BE    SPAC01                   IF COMMA SET TO DO 1 SPACE      04360020
         CLI   0(SP1),IBLANK            IF OPERAND BLANK SET TO DO 1    04380020
         BE    SPAC01                   BRANCH TO DO 1 SPACE            04400020
         CLI   0(SP1),I9                TEST FIRST CHAR FOR DECIMAL     04420020
         BH    OPNERR                   IF NOT DECIMAL ERROR            04440020
         MVI   CTSDVI(ACT),X'80'        TURN SELF DEFINING SWITCH ON    04460020
         L     SRB,CEEVAL(ACT)          BASE FOR EXPRESSION EV ALUATIO  04480020
         BALR  SRR,SRB                  EXIT TO EXPRESSION EVALUATION   04500020
         BC    1,SPACER                 BRANCH IF ERR IN EVAL           04520020
         CLI   0(SP1),IBLANK            IS EXPRESSION DELIMETER BLANK   04540020
         BE    SPAC02                   IF YES, SKIP ERROR ROUTINE      04560020
         MVI   SPACSW(ACT),X'AA'        TURN SPACE SWITCH HALF ON ERR   04580020
         B     DLMERR                   EXIT TO DELIMETER ERROR RTN     04600020
SPAC01   LA    SP2,1                    SER TO SPACE ONCE               04620020
SPAC02   MVI   SPACSW(ACT),X'FF'        TURN SPACE SWITCH ON            04640020
         B     CTRTRN(ACT)              EXIT FROM F8AOP                 04660020
OPNERR   BAL   SRR,ERRZRO               GO TO LOG ERROR                 04680020
         DC    AL2(ERROPN)              OPERAND ERROR CODE              04700020
SPACER   MVI   SPACSW(ACT),X'AA'        SET SPACE SWITCH FOR ERROR      04720020
         XC    F8INST(3,ACT),F8INST(ACT)   ZERO INSTRUCTION COUNTER     04740020
         MVI   F8INST+15(ACT),X'00'     PRINT LEFT HALF                 04760020
         SR    SP2,SP2                  SET TO NOT SPACE                04780020
         B     CTRTRN(ACT)              EXIT FROM F8AOP                 04800020
*********************************************************************** 04820020
***   EJECT   ***                                                       04840020
*THIS ROUTINE SETS A SWITCH TO BE USED IN THE PRINT PORTION OF F8OP.    04860020
*********************************************************************** 04880020
EJECT    TM    F8PGEN(ACT),X'FF'        IS GEN SWITCH ON                04900020
         BZ    EJECT01                  IF ZERO DO EJECT                04920020
         TM    F8WORK+2(ACT),X'10'      IS THIS A GENERATED STATEMENT   04940020
         BNZ   EJECT02                  ITS GENERATED DONT EJECT        04960020
EJECT01  MVI   EJCTSW(ACT),X'FF'        SET TO EJECT                    04980020
EJECT02  B     CTRTRN(ACT)              EXIT TO MAIN LINE CONTROL       05000020
*********************************************************************** 05020020
***   PUNCHB   ***                                                      05040020
*THIS ROUTINE SETS A SWITCH TO BE USED IN F8OP.                         05060020
*********************************************************************** 05080020
PUNCHB   MVI   REPSW(ACT),X'01'         TURN ON PUNCH                   05100020
         B     CTRTRN(ACT)              EXIT                            05120020
*********************************************************************** 05140020
***   REPRO   ***                                                       05160020
*THIS ROUTINE SETS A SWITCH TO BE USED IN F8OP.                         05180020
*********************************************************************** 05200020
REPRO    MVI   REPSW(ACT),X'03'         TURN ON REPRO                   05220020
         B     CTRTRN(ACT)              EXIT                            05240020
*********************************************************************** 05260020
***   TITLEB   ***                                                      05280020
*THIS ROUTINE CHANGES THE TITLE TO BE PRINTED AT THE TOP OF EACH PAGE   05300020
* AND THEN CALLS THE EJECT ROUTINE                                      05320020
*********************************************************************** 05340020
TITLEB   MVI   REPSW(ACT),X'07'         SET TITLE SWITCH                05360020
         TM        F8PGEN(ACT),X'FF'   IS GEN SW ON                     05365023
         BZ        EJECT01             BRANCH IF NOT                    05370023
         TM        F8WORK+2(ACT),X'10' IS THIS A GENERATED RECORD       05375023
         BNO       EJECT01             BRANCH IF NOT                    05380023
         LH        SP2,CTSEQ8+2(,ACT)  GET STMT CTR                     05385023
         BCTR      SP2,0               DECREMENT IT                     05390023
         STH       SP2,CTSEQ8+2(,ACT)  STORE UPDATED STMT COUNTER       05393023
         B         CTRTRN(,ACT)        RETURN                           05396023
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 05400020
***      ENTRYB   ***                                                   05420020
*THIS ROUTINE ONLY MAKES A VALIDITY CHECK OF THE OPERAND FIELD OF ALL   05440020
* ENTRY STATEMENTS, OTHER PROCESSING WAS COMPLETED IN INTERLUDE         05460020
*********************************************************************** 05480020
ENTRYB   MVC   WKBKPT(4,ACT),CTXWBP(ACT) SET WORK BUCKET POINTER        05500020
ENTRYC   L     ACC,WKBKPT(ACT)          CURRENT WORK BUCKER POINTER     05520020
         LTR   ACC,ACC                  IS THERE A BUCKET               05540020
         BZ    CTRTRN(ACT)              IF ZERO, NO BUCKET              05560020
         CLI   TXSPTR(ACC),ECMPLT       IS WORKBUCKET COMPLETE          05580020
         BE    ENSEX                    YES - IGNORE                    05600020
         SR    SP1,SP1                  NO, ZERO LENGTH                 05620020
         LR    SP2,SP1                  AND PREPARE FOR ADDRESS OF NAME 05640020
         IC    SP1,TXSPTR(ACC)          GET                             05660020
         A     SP1,F8OPRN(ACT)           NAME POINTER                   05680020
         ST    SP1,ENTSAVE              SAVE POINTER                    05700020
         IC    SP2,TXSESL(ACC)          GET                             05720020
         N     SP2,LENMSK                NAME LENGTH                    05740020
         L     SRB,CSTGET(ACT)          GET SYMBOL ATTRIBUTES           05760020
         BALR  SRR,SRB                  CALL STGETR - ASMGF8S           05780027
         LTR   SP1,SP1                  WAS SYMBOL FOUND                05800020
         BZ    ENSER1                   NO, LOG ERROR                   05820020
*./      DELETE    SEQ1=05830025,SEQ2=05835025                          05835028
         CLI   STID(SP1),0              IS SYMBOL ABSOLUTE              05840020
         BE    ENSER2                   YES, LOG ERROR                  05860020
         TM    ADJCD(SP1),DSOCM         DEFINED IN DSECT OR COM         05880020
         BO    ENSER3                   YES, LOB ERROR                  05900020
         TM    ADJCD(SP1),ENTCMB        IS ENTRY COMPLETE               05920020
         BO    ENSER3                   YES, LOG ERROR                  05940020
         OI    ADJCD(SP1),ENTCMB         SET ADJ CODE COMPLETE          05960020
         TM    ADJCD(SP1),SDBIT         IS ADJ CODE = SD                05980020
         BM    ENSER3                   ERROR IF DSECT OR EXTRN         06000020
ENSEX    L     ACC,WKBKPT(ACT)                                          06020020
         TM    EWBKSW(ACC),LASTOP       IS THIS THE LAST OPERAND        06040020
         BO    CTRTRN(ACT)              YES - EXIT                      06060020
         LA    ACC,WBKLEN(ACC)          SET FOR NEXT WKBKT              06080020
         ST    ACC,WKBKPT(ACT)          SAVE POINTER                    06100020
         B     ENTRYC                   TRY FOR NEXT                    06120020
ENSER1   L     SP1,ENTSAVE              LOAD OPERAND POINTER            06140020
         BAL   SRR,ERRNO0               LOG ERROR                       06160020
         DC    AL2(ERRUDF)             UNDEFINED SYMBOL                 06180020
         B     ENSEX                    LOOK FOR OPERANDS               06200020
ENSER2   L     SP1,ENTSAVE              LOAD OPERAND POINTER            06220020
         BAL   SRR,ERRNO0               LOG ERROR                       06240020
         DC    AL2(ERRLOC)              EXTERNAL NAME ERROR             06260020
         B     ENSEX                    LOOK FOR MORE OPERANDS          06280020
ENSER3   L     SP1,ENTSAVE              LOAD OPERAND POINTER            06300020
         BAL   SRR,ERRNO0               LOG ERROR                       06320020
         DC    AL2(ERRNTY)             ENTRY ERROR                      06340020
         B     ENSEX                    LOOK FOR MORE OPERANDS          06360020
ACC      EQU   GRX                      ACCUMULATOR                     06380020
ADJCD    EQU   1                        POSITION OF ADJECTIVE CODE      06400020
DSOCM    EQU   4                        DSECT OR COMMON MASK            06420020
ECMPLT   EQU   X'FF'                    WORKBUCKET COMPLETE FLAG        06440020
ENTCMB   EQU   X'08'                    ENTRY COMPLETE FLAG             06460020
EWBKSW   EQU   TXSESL                   SYMBOL LENGTH POINTER           06480020
LASTOP   EQU   X'80'                    LAST OPERAND MASK               06500020
SDBIT    EQU   3                        CSECT MASK                      06520020
STID     EQU   2                        POSITION OF SYMBOL ID           06540020
WBKLEN   EQU   6                        LENGTH OF WORKBUCKETS           06560020
         DS    0F                                                       06580020
LENMSK   DC    X'0000000F'              MASK FOR MAX LENGTH OF SYMBOL   06600020
*********************************************************************** 06620020
***   EXTRNB   ***                                                      06640020
*THIS ROUTINE RETURNS TO F8MLC, PROCESSING WAS DONE IN INTERLUDE        06660020
*********************************************************************** 06680020
EXTRNB   B     CTRTRN(ACT)              EXIT                            06700020
*********************************************************************** 06720020
***   STARTB   ***                                                      06740020
*THIS ROUTINE SETS CURRENT TYPE, CURRENT ESD-ID, CURRENT ADJUSTMENT     06760020
* BASE (BY CALLING SETSEC)                                              06780020
*********************************************************************** 06800020
STARTB   TM    CTPCSW(ACT),X'FF'                                        06820020
         MVI   F8INST+15(ACT),X'00'     PRINT LOCATION                  06840020
         BNZ   CSECTB                   PROCESS AS CSECT                06860020
         L     SP2,WKBKPT(ACT)          WORK BUCKET POINTER             06880020
START01  MVC   CTYPE(1,ACT),1(SP2)     WK BKT TO CURRENT TYPE CELL      06900020
         SR    GRY,GRY                  ZERO CELL                       06920020
         IC    GRY,2(SP2)               CURRENT ESD-ID FROM WORK BUCKET 06940020
         STC   GRY,CESDID(ACT)          TO TABLE                        06960020
         STC   GRY,CESDIDPS(ACT)        SET ESDID SW ON                 06980020
         L     SP1,CADJBS(ACT)          ADJUSTMENT TABLE BASE           07000020
         LR    SP2,GRY                                                  07020020
         BAL   SRR,SETSEC               CSECT SETTING ROUTINE           07040020
         B     CTRTRN(ACT)              EXIT                            07060020
*********************************************************************** 07080020
***   CSECTB   ***                                                      07100020
*THIS ROUTINE SETS CURRENT TYPE, CURRENT ESD-ID AND CURRENT ADJUSTMENT  07120020
* BASE (VIA SETSEC ROUTINE)                                             07140020
*********************************************************************** 07160020
CSECTB   MVC   TSTYPE(1),F8WORK+2(ACT)  MOVE TYPE OF OP FOR ALTERATION  07180020
         NI    TSTYPE,X'70'             KEEP JUST TYPE OF OPERATION     07200020
         CLI   TSTYPE,X'50'             IS THIS AFTER END CARD          07220020
         BE    CSECT2                   IF EQUAL SET FLAG FF            07240020
         MVI   F8INST+15(ACT),X'00'     JUST EJECT CARD AND PRINT LOC   07260020
CSECT2   OI    F8INST+15(ACT),X'F0'     SET FLAG TO EJECT CARD          07280020
         L     SP2,WKBKPT(ACT)          WORK BUCKET POINTER             07300020
         CLC   2(1,SP2),CESDID(ACT)     WORK BUCKET ESD-ID VS CURRENT   07320020
         BNE   START01                 COMMON CODE FOR START AND CSECT  07340020
         B     CTRTRN(ACT)             IF CSECT SAME NO ACTION NEEDED   07360020
*********************************************************************** 07380020
***   DSECTB   ***                                                      07400020
*THIS ROUTINE SETS CURRENT TYPE, CURRENT ESD-ID AND SETS CURRENT        07420020
* ADJUSTMENT BASE EQUAL TO ZERO.                                        07440020
*********************************************************************** 07460020
DSECTB   L     SP2,WKBKPT(ACT)          WORK BUCKET POINTER             07480020
         MVI   F8INST+15(ACT),X'F0'     START A NEW CARD                07500020
         MVI   CESDIDPS(ACT),X'00'      SET ESDID FLAG OFF              07510022
         CLC   2(1,SP2),CESDID(ACT)     WORK BUCKET ESD-ID VS CURRENT   07520020
         BE    CTRTRN(ACT)              RETURN TO MAIN LINE CONTROL     07540020
         SR    GRY,GRY                  ZERO CELL                       07560020
         IC    GRY,1(SP2)               CURRENT TYPE FROM WORK BUCKET   07580020
         STC   GRY,CTYPE(ACT)           TO CURRENT TYPE CELL            07600020
         IC    GRY,2(SP2)                                               07620020
         STC   GRY,CESDID(ACT)          CURRENT ESD-ID                  07640020
         SR    SP2,SP2                                                  07660020
         ST    SP2,F8CADJ(ACT)                                          07680020
         MVC   F8INST(3,ACT),F8CADJ(ACT)  ZERO TO LOCATION              07700020
*./      DELETE    SEQ1=07720020,SEQ2=07720020                          07720022
         B     CTRTRN(ACT)              EXIT                            07740020
*********************************************************************** 07760020
***   COMB   ***                                                        07780020
*SEE DSECT, THE FUNCTIONS ARE THE SAME                                  07800020
*********************************************************************** 07820020
COMB     EQU   DSECTB                   COMMON IS HANDLED LIKE DSECT    07840020
*********************************************************************** 07860020
***   EQUB   ***                                                        07880020
*THIS ROUTINE PUTS THE EQUATED VALUE FOR PRINTING, IF THE VALUE IS      07900020
* NOT ABSOLUTE, IT IS COMPUTED VIA F8AREX.                              07920020
*********************************************************************** 07940020
EQUB     L     GRZ,CTXABP(ACT)          GET FIRST BYTE OF TEXT APPENDED 07960020
         MVI   F8INST+15(ACT),X'00'     PRINT LOCATION                  07980020
         MVC   F8INST(3,ACT),0(GRZ)     EQUATED VALUE TO ADDR FLD       08000020
*        TM    4(GRZ),X'FF'             IS IT ABSOLUTE                  08020020
*        BZ    CTRTRN(ACT)              YES, RETURN                     08040020
         BAL   SRR,F8AREX               NO, EVALUATE                    08060020
         TM    EVLERF,X'FF'             IS EXPRESSION EVAL ERROR ON     08080020
         BO    EQUERR                   YES, LOG ERROR                  08100020
         MVC   F8INST(3,ACT),VALUEB+1   MOVE IN INSTRUCTION COUNTER     08120020
         MVI   F8INST+3(ACT),X'32'      BLANK OUT REST OF LINE          08140020
         MVC   F8INST+4(11,ACT),F8INST+3(ACT)                           08160020
         B     CTRTRN(ACT)              RETURN TO MAIN LINE             08180020
*********************************************************************** 08200020
***   ORGB   ***                                                        08220020
*THIS ROUTINE SETS A SPECIAL FLAG FOR F8OP ROUTINE.                     08240020
*********************************************************************** 08260020
ORGB     MVC   TSTYPE(1),F8WORK+2(ACT)  MOVE TYPE OF OP FOR ALTERATION  08280020
         ST    GRX,CTWRAPX(ACT)         REPLACE ADJUSTED LOCATION CTR   08300020
         L     GRX,CTXABP(,ACT)         POINT AT EXTENDED INT RECORD    08302025
         MVC   ALIGNT+1(3),5(GRX)       ALIGN PREV RELATIVE LOCATION    08304025
         MVI   ALIGNT,X'00'             ZERO IN FIRST BYTE              08306025
         L     GRZ,ALIGNT               LOAD RELATIVE LOCATION          08308025
         A     GRZ,F8CADJ(,ACT)         CURRENT ESD-ID ADJUSTMENT       08310025
         ST    GRZ,ALIGNT               STORE ABSOLUTE LOCATION         08312025
         MVC   F8INST(3,ACT),ALIGNT+1   PLACE PREV LOC CTR FROM REC     08314025
         MVC   F8INST+3(3,ACT),CTWRAPX+1(ACT) PRINT NEW LOC COUNTER     08316025
         NI    TSTYPE,X'70'             KEEP JUST TYPE OF OPERATION     08320020
         CLI   TSTYPE,X'50'             IS THIS AFTER END CARD          08340020
         BE    ORG1                     YES, DONT PRINT LOC             08360020
         MVI   F8INST+15(ACT),X'00'     JUST EJECT CARD AND PRINT LOC   08380020
ORG1     OI    F8INST+15(ACT),X'F0'     SET FLAG TO EJECT CARD          08400020
         SR    SP1,SP1                  LOG ERROR WITHOUT COL PTR       08420020
         TM    CTWRAPX(ACT),X'FF'       TEST FOR ORG ERROR              08440020
         BC    5,ORGERR                 IF MIXED, ORG ERROR             08460020
         B     CTRTRN(ACT)              EXIT                            08480020
ORGERR   BAL   SRR,ERRZRO               LOG ORG ERROR                   08500020
         DC    AL2(ERRORG)              ORG ERROR CODE                  08520020
*./      DELETE    SEQ1=08540020,SEQ2=08540020                          08540025
         LA    GR0,1                                                    08560020
         ST    GR0,CTWRAPX(ACT)         FIX SO DECREMENT WONT HURT      08580020
         B     CTRTRN(ACT)              RETURN TO MAIN LONE CONTROL     08600020
*********************************************************************** 08620020
***   ENDB   ***                                                        08640020
*THIS ROUTINE TURNS ON THE END SWITCH AND PUTS THE ADDRESS IN THE       08660020
* OPERAND FIELD OF THE END CARD                                         08680020
*********************************************************************** 08700020
ENDB     MVI   CTIDR(ACT),C'1'          SET 1 IDR FIELD                 08710026
         CLI   0(SP1),IBLANK            IS DELIMETER BLANK .Q           08720026
         MVI       CTENDSW(ACT),X'FF'  TURN ON END SWITCH               08730023
         BNE   END04                    NO, TRY A COMMA                 08740020
END00    XC    ENDSWH(4,ACT),ENDSWH(ACT)  YES, ZERO TO ESD-ID & COUNT   08760020
         MVI   F8INST+15(ACT),X'0F'     SUPPRESS PRINTIOG OF LOC CTR    08780020
         B     CTRTRN(ACT)              EXIT                            08800020
END01    BAL   SRR,F8AREX               EVALUATE EXPRESSION             08820020
         TM    SREXP,X'01'              IS IT SIMPLY RELOCATABLE        08840020
         BNZ   END02                    IF NOT, ERROR                   08860020
         CLC   CTNDID+1(1,ACT),VALUEB+5 NEXT DSECT ESDID VS THIS ESDID  08880020
         BL    END02                    IF NOT LOWER, CSECT OR COMMON   08900020
END03    CLC   CTCMSW(1,ACT),VALUEB+5   IS THIS COMMON                  08920020
         BE    END02                    IF COMMOM, ERROR                08940020
         MVC   ENDSWH(4,ACT),0(SP2)     IF YES, SET VALUE               08960020
         MVC   ENDSWH(1,ACT),5(SP2)     ESD-ID TO FIRST BYTE            08980020
         MVC   F8INST(3,ACT),1(SP2)     SET CORRECT LOC FOR LISTING     09000020
         TM    F8INST+2(ACT),X'01'      IS END ALIGNED CORRECTLY        09020020
         BZ    END05                    IF ZERO, YES                    09040020
         BAL   SRR,ERRNO0               LOG ALIGNMENT ERROR             09060020
         DC    AL2(ERRLIN)              ALIGNMENT ERROR                 09080020
END05    CLI   0(SP1),IBLANK            IS DELIMETER A BLANK            09100020
         BE    END06                    YES, 2ND FIELD OMITTED          09110026
         CLI   0(SP1),ICOMMA            COMMA FOLLOWS .Q                09120026
         BNE   DLMERR                   NO, THEN ERROR                  09130026
         B     END07                    YES, SCAN 2ND FIELD             09140026
END06    MVI   F8INST+15(ACT),X'00'     ZERO TO PRINT LOCATION COUNTER  09150026
         B     AOPRTN                   NORMAL EXIT                     09160020
END04    CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              09180020
         BNE   END01                    IF NOT, EVALUATE EXPRESSION     09200020
         CLI   1(SP1),IBLANK            IS COMMA FOLLOWED BY BLANK      09220020
         MVI   F8INST+15(ACT),X'0F'     SUPPRESS PRINTING OF LOC CTR    09240026
         BNE   END075                   IF NOT, GET OPERAND             09260026
         B     END00                   TREAT AS BLANK END CARD          09280020
END02    BAL   SRR,ERRNO0               LOG ERROR                       09300020
         DC    AL2(ERRLOC)              RELOCATABILITY ERROR            09320020
         B     AOPRTN                  ZERO LOCATION                    09340020
END07    MVI   F8INST+15(ACT),X'00'     ZERO TO PRINT LOC CTR           09341026
END075   CLI   1(SP1),ILPARN            LPAREN SHOULD FOLLOW            09342026
         BE    END077                   PROCESS IF SO                   09343026
         CLI   1(SP1),IBLANK            ALSO OK IF BLANK FOLLOWS        09344026
         BNE   DLMERR                   ANY OTHER CHAR IS ERROR         09345026
         B     END06                    GO PRINT                        09346026
END077   LA    SP1,2(,SP1)              STEP PAST DELIMITERS            09347026
         LA    GRZ,10                   1ST SUBFIELD MAX OF 10 BYTES    09348026
         LR    GRY,ACT                  INIT TO MOVE FIELD              09349026
END08    CLI   0(SP1),ICOMMA            HAVE WE FOUND A COMMA .Q        09350026
         BE    END09                    BRANCH AT END OF FIRST          09351026
         MVC   CT2IDR(1,GRY),0(SP1)     SAVE BYTE FOR END CARD          09352026
         LA    GRY,1(,GRY)              BUMP CT2IDR POINTER             09353026
         LA    SP1,1(,SP1)              AND CARD POINTER                09354026
         BCT   GRZ,END08                BRANCH IF STILL POSITIVE        09355026
         CLI   0(SP1),ICOMMA            COMMA SHOULD DELIMIT            09356026
         BNE   DLMERR                   ERROR IF NOT                    09357026
         LTR   GRZ,GRZ                  WAS IT EXACTLY 10 CHARS .Q      09358026
         BZ    END10                    BRANCH IF YES                   09359026
END09    MVI   CT2IDR(GRY),IBLANK       NO, FILL FIELD WITH BLANKS      09360026
         LA    GRY,1(,GRY)              BUMP C2IDR POINTER              09361026
         BCT   GRZ,END09                BRANCH IF STILL POSITIVE        09362026
END10    MVC   CT2IDR(4,GRY),1(SP1)     SAVE VLML FOR END CARD          09363026
         CLI   5(SP1),ICOMMA            SHOULD BE A COMMA               09364026
         BNE   DLMERR                   ERROR IF NOT                    09365026
         LA    GRY,4(,GRY)              UPDATE CT2IDR POINTER           09366026
         LA    SP1,6(,SP1)              UPDATE CARD POINTER             09367026
         MVC   CT2IDR(5,GRY),0(SP1)     SAVE JULIAN DATE FOR END CARD   09368026
         CLI   5(SP1),IRPARN            SHOULD END WITH RPAREN          09369026
         BNE   DLMERR                   ERROR IF NOT                    09370026
         MVI   CTIDR(ACT),C'2'          INDICATE 2 IDR'S IN END CARD    09373026
         L     GRZ,CTRTBP(,ACT)         LOAD TRANSLATE TABLE POINTER    09374026
         TR    CT2IDR(19,ACT),0(GRZ)    TRANSLATE TO EXTERNAL CODE      09375026
         CLI   F8INST+15(ACT),X'00'     PRINT LOC CTR .Q                09376026
         BNE   END00                    BRANCH IF NOT                   09377026
         B     AOPRTN                   OTHERWISE, YES                  09378026
*********************************************************************** 09380026
***   LTORGB   ***                                                      09390026
*THIS ROUTINE TESTS TO SEE IF ANY LITERALS NEED BE OUTPUT. IF LITERALS  09400020
* ARE TO BE OUTPUT, THE ADJUSTED LOCATION OF THE FIRST LITERAL IS       09420020
* PUT FOR OUTPUT IN THE LOCATION FIELD. IF NO LITERALS ARE TO BE OUTPUT 09440020
* CONTROL IS RETURNED TO F-, MAIN LINE CONTROL. LOCATION COUNTER        09460020
* REMAINS CURRENT LOCATION COUNTER.                                     09480020
*********************************************************************** 09500020
LTORGB   MVC   TSTYPE(1),F8WORK+2(ACT)  MOVE TYPE OF OP FOR ALTERATION  09520020
         ST    GRX,CTWRAPX(ACT)         REPLACE ADJUSTED LOCATION CTR   09540020
         NI    TSTYPE,X'70'             KEEP JUST TYPE OF OPERATION     09560020
         CLI   TSTYPE,X'50'             IS THIS AFTER END CARD          09580020
         BE    LTORG0                   YES, DONT PRINT LOC             09600020
         MVI   F8INST+15(ACT),X'00'     JUST EJECT CARD AND PRINT LOC   09620020
LTORG0   OI    F8INST+15(ACT),X'F0'     SET FLAG TO EJECT CARD          09640020
         TM    TXESI(GRA),LITQ          DOES LAT HAVE TO BE READ IN     09660020
         BZ    LTORG1                   NO                              09680020
         L     SRB,CTXTIO(ACT)            YES - GET NEXT LIT ADJ TABLE  09700020
         BAL   SRR,GETLAT(SRB)          CALL LAT GET                    09720020
         ST    SP1,LATP(ACT)            SAVE POINTER                    09740020
LTORG1   L     ACC,CTXABP(ACT)                                          09760020
         MVC   TEMPF+1(3),TXLOC(ACC)    GET LOC CTR FROM TEXT           09780020
         L     ACC,TEMPF                                                09800020
         A     ACC,F8CADJ(ACT)            ADJUST                        09820020
         ST    ACC,CTLOC(ACT)           SET CURRENT LOC CNT             09840020
         B     CTRTRN(ACT)              EXIT                            09860020
LITQ     EQU   2                                                        09880020
TEMPF    DC    F'0'                     FULL WORD FOR ALIGNMENT         09900020
*********************************************************************** 09920020
***   USINGB   ***                                                      09940020
*THIS ROUTINE SETS AN INDICATOR FLAG TO INDICATE A REGISTER MAY BE USED 09960020
* AS A BASE REGISTER.  THE VALUE FOR DECOMPOSITION IS HELD IN THE THREE 09980020
* LOW ORDER BYTES AND THE ESD-ID IS LOGICALLY ADDED INTO THE HIGH ORDER 10000020
* BYTE.                                                                 10020020
*********************************************************************** 10040020
USINGB   MVI   BUSING,X'00'             TURN USING OFF                  10060020
         MVI   USINGR0,X'00'            SET 1ST TIME V REG SWITCH TO 0  10080020
         MVI   F8INST+15(ACT),X'00'     PRINT LOCATION                  10100020
         LA    GRB,16                  PROCESS ONLY 16 REGISTERS        10120020
         SR    GRD,GRD                 ZERO ESD-ID REGISTER             10140020
         ST    SP1,DWORD                START OF USING OPERAND    V7A29 10150028
         L     SRB,CEEVAL(ACT)          EEVAL ENTRY AND BASE            10160020
         BALR  SRR,SRB                  EVALUATE EXPRESSION             10180020
         BC    8,VALUEK                 ABSOLUTE EXPRESSION             10200020
         BC    4,SIMREL                 SIMPLY RELOCATABLE EXPR         10220020
         BC    2,ERRUSG                 COMPLEXLY RELOCATABLE EXPR      10240020
         BC    1,EREVL                  EXPRESSION EVALUATION ERROR     10260020
SIMREL   CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              10280020
         BNE   DLMERR                   IF NOT COMMA, SYNTAX ERROR      10300020
         LR    GRY,SP2                                                  10320020
         IC    GRD,5(SP2)              ESD-ID                           10340020
         L     GRX,0(SP2)              VALUE                            10360020
         B     US01                                                     10380020
VALUEK   LR    GRX,SP2                  ABSOLUTE VALUES                 10400020
         SR    GRD,GRD                  ZERO GRD FOR ESD-ID             10420020
US01     CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              10440020
         BNE   DLMERR                   NO, ERROR                       10460020
         ST    SP1,DWORD+4              END+1 OF USING OPERAND    V7A29 10470028
         STC   GRD,ESDUSG               TEMP STORE ESD-ID               10480020
         ST    GRX,VALUEB               VALUE TO VALUEB                 10500020
         MVI   BUSING,X'FF'             TURN USING OFF                  10520020
         MVI   USGFLG,X'FF'             FF INDICATES USING, NOT DROP    10540020
         MVC   F8INST(3,ACT),VALUEB+1   VALUE TO F8INST                 10560020
         LA    SP1,1(SP1)               POINT AT NEXT OPRN ARG          10580020
US02     ST    GRX,F8TEMP               STORE LOC FOR USING             10600020
USIROP   BAL   SRR,F8AREX               EXPRESSION SEIVE                10620020
         IC    GRZ,BUSING                                               10640020
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              10660020
         BE    DELOKB                   IF COMMA,OK                     10680020
         CLI   0(SP1),IBLANK            IS DELIMETER BLANK              10700020
         BNE   DLMERR                   IF NOT BLANK, OR COMMA, ABORT   10720020
DELOKB   TM    AEXP1,X'01'              SIZE AND ABLOLUTE TEST          10740020
         BZ    QUANOKQ                  IF 0, QUANTITY OK, CHECK REG 0  10760020
         B     ERQNDU                   REGISTER ERROR                  10780020
QUANOKT  TM    USGFLG,X'FF'             IS THIS USING STMNT             10800020
         BZ    QUANOK                   IF ZERO, ITS A DROP             10820020
         CLI   VALUEB+3,X'00'           IS REGISTER ZERO                10840020
         BE    ERQNDU                   IF ZERO REGISTER ERROR          10860020
         B     QUANOK                   BRANCH OK                       10880020
QUANOKQ  OC    USINGR0(1),VALUEB+3      CURRENT REGISTER V 1ST TIME SW  10900020
         TM    USINGR0,X'FF'            IS THIS 1ST TIME & REG 0        10920020
         BNZ   QUANOKT                  IF NON-ZERO TEST REGISTER       10940020
         TM    ESDUSG,X'FF'             IS THIS ABSOLUTE                10960020
         BNZ   QUANOO                   IF NOT, DONT CHECK FURTHER      10980020
         L     GR0,F8TEMP               VALUE FOR USING                 11000020
         LTR   GR0,GR0                  IS IT ABSOLUTE ZERO             11020020
         BNZ   ERQNDU                   IF NOT, ERROR                   11040020
QUANOO   SR    GR0,GR0                  ZERO TO REGISTER 0              11060020
         ST    GR0,F8TEMP               REG 0 VALUE ALWAYS 0            11080020
QUANOK   L     GRY,VALUEB               QUANTITY (REG)                  11100020
         L     GRC,USNGPP(ACT)                                          11120020
         TM    USGFLG,X'FF'             IS THIS USING, OR DROP          11140020
         BO    USGSKP                   IF 1, IT IS USING               11160020
         LA    GR1,0(GRY,GRC)           ADDR OF THIS USING TBL FLAG     11180020
         TM    0(GR1),X'FF'             IS THIS BEING USED              11200020
         BO    USGSKP                   YES                             11220020
         BAL   SRR,ERRZRO               ERROR ROUTINE BRANCH            11240020
         DC    AL2(ERDROP)              REGISTER TO BE DROPED NOT USED  11260020
USGSKP   STC   GRZ,0(GRY,GRC)           STORE FLAG IN USING POINTER     11280020
         SLL   GRY,2                                                    11300020
         L     GRX,F8TEMP               PICK UP SUMMED VALUE AND ESDID  11320020
         L     GR2,USNGTP(ACT)                                          11340020
         ST    GRX,0(GRY,GR2)           VALUE TO USING TABLE            11360020
         IC    GRD,ESDUSG               ESD-ID THIS VALUE               11380020
         STC   GRD,0(GRY,GR2)          ESD-ID TO 1ST BYTE OF VALUE      11400020
         BAL   SRB,USDPTBL              SET UMAP ENTRY                  11410027
TESNDU   CLI   0(SP1),IBLANK            IS IT A BLANK                   11420020
         MVI   USINGR0,X'FF'            SET FIRST TIME SWITCH OFF       11440020
         BE    CTRTRN(ACT)              IF BLANK, EXIT                  11460020
         LA    SP1,1(SP1)               NO                              11480020
         AL    GRX,K4096                BUMP TO NEXT AVAILABEL          11500020
         BCT   GRB,US03                 DO 16 TIMES                     11520020
LNGERR   BAL   SRR,ERRZRO               CALL LOG ERROR                  11540020
         DC    AL2(ERRLNG)             OPERAND LENGTH ERROR             11560020
         MVI   F8INST+15(ACT),X'0F'     DONT PRINT LOCATION COUNTER     11580020
         B     CTRTRN(ACT)              EXIT                            11600020
ERRUSG   BAL   SRR,ERRZRO               ERROR ROUTINE BRANCH            11620020
         DC    AL2(ERRLOC)              RELOCATABILITY ERROR            11640020
         MVI   F8INST+15(ACT),X'0F'     DONT PRINT LOCATION COUNTER     11660020
         B     CTRTRN(ACT)              EXIT                            11680020
US03     ST    GRX,F8TEMP               PUT FOR FUTURE USE              11700020
US04     NI    F8TEMP,X'00'             ZERO TO BYTE                    11720020
         B     USIROP                   DO NEXT REGISTER                11740020
*********************************************************************** 11760020
***   DROPB   ***                                                       11780020
*THIS ROUTINE SETS AN INDICATOR FLAG TO INDICATE A REGISTER MAY NOT BE  11800020
* USED AS A BASE REGISTER.                                              11820020
*********************************************************************** 11840020
DROPB    MVI   USGFLG,X'00'             TURN USING FLAG OFF             11860020
         MVI   BUSING,X'00'             USING POINTER FLAG TO 0         11880020
         LA    GRB,16                  PROCESS ONLY 16 REGISTERS        11900020
         SR    GRD,GRD                 ZERO ESD-ID REGISTER             11920020
         SR    GRX,GRX                 ZERO VALUE                       11940020
         STC   GRD,ESDUSG               ZERO ESD-ID FOR ABSOLUTE        11960020
         TM    CTEXTENI(ACT),X'04'      IS 'EXTEN' ON .Q                11961027
         BNO   US02                     COMMON ENTRY IF NOT             11962027
         CLI   0(SP1),IBLANK            IS OPND A BLANK .Q              11963027
         BE    DROPB1                   EXTENDED DROP IF YES            11964027
         CLI   0(SP1),ICOMMA            IS OPND A COMMA .Q              11965027
         BNE   US02                     NO EXTENDED DROP IF NOT         11966027
DROPB1   DS    0H                                                       11967027
         BAL   SRR,DROPEX               DO ALL APPROPRIATE DROPS        11968027
         B     CTRTRN(,ACT)             AND EXIT                        11969027
DROPEX   DS    0H                                                       11970027
         L     GRC,USNGPP(,ACT)         USING STATUS TABLE POINTER      11971027
         SR    GRB,GRB                  START WITH REGISTER ZERO        11972027
DROPEX1  DS    0H                                                       11973027
         LA    GR1,0(GRB,GRC)           USING TABLE STATUS ENTRY        11974027
         CLI   0(GR1),X'FF'             IS REGISTER IN USE .Q           11975027
         BNE   DROPEX2                  BRANCH IF NOT                   11976027
         ST    GRB,VALUEB               PASS ON THE REGISTER            11977027
         BAL   SRB,USDPTBL              SET UMAP ENTRY                  11978027
         MVI   0(GR1),X'00'             DROP THE REGISTER               11979027
         L     GR2,USNGTP(,ACT)         USING TABLE POINTER             11980027
         LR    GRY,GRB                  REGISTER JUST DROPPED           11981027
         SLL   GRY,2                    4 BYTES PER ENTRY               11982027
         ST    GRX,0(GRY,GR2)           ZERO ESD-ID, DISPLACEMENT       11983027
DROPEX2  DS    0H                                                       11984027
         LA    GRB,1(,GRB)              NEXT REGISTER                   11985027
         C     GRB,K16                  ALL DONE REGISTERS .Q           11986027
         BL    DROPEX1                  AGAIN IF NOT DONE               11987027
         BR    SRR                      EXIT WHEN DONE                  11988027
*********************************************************************** 11989027
***   POP   ***                                                         11990027
* THIS ROUTINE SCANS THE OPERAND FIELD OF ALL POP STATEMENTS            11991027
* AND RESTORES ANY APPROPRIATE VALUES.                                  11992027
*********************************************************************** 11993027
POPB     DS    0H                                                       11994027
         MVI   F8INST+15(ACT),X'0F'     DON'T PRINT LOCATION COUNTER    11995027
         L     SP1,F8OPRN(,ACT)         OPERAND POINTER                 11996027
POPB1    DS    0H                                                       11997027
         CLC   PRINTC,0(SP1)            IS OPERAND 'PRINT' .Q           11998027
         BE    POPPRINT                 BRANCH IF YES                   11999027
         CLC   USINGC,0(SP1)            IS OPERAND 'USING' .Q           12000027
         BE    POPUSING                 BRANCH IF YES                   12001027
         BAL   SRR,ERRZRO               LOG AN ERROR                    12002027
         DC    AL2(ERRPOP)              UNRECOGNIZABLE POP OPERAND      12003027
         B     CTRTRN(,ACT)             AND EXIT                        12004027
POPPRINT DS    0H                                                       12005027
         LH    GR1,CTPRPP(,ACT)         CURRENT PRINT PUSH/POP COUNT    12006027
         BCTR  GR1,0                    DECREMENT BY ONE                12007027
         LTR   GR1,GR1                  IS IT NON-NEGATIVE .Q           12008027
         BM    DBALERR                  BRANCH IF NEGATIVE              12009027
         STH   GR1,CTPRPP(,ACT)         SET NEW PRINT PUSH/POP COUNT    12010027
         MH    GR1,LENPNTSK             TIMES LENGTH OF ONE ENTRY       12011027
         LA    GR1,PNTSTAK(GR1)         ADDR OF SAVED PRINT STATUS      12012027
         MVC   F8PON(L'PNTSTAK,ACT),0(GR1)  RESTORE OLD SETTINGS        12013027
         LA    SP1,L'PRINTC(,SP1)       POINT PAST ARGUMENT             12014027
         B     CPOPB                    AND CONTINUE                    12015027
POPUSING DS    0H                                                       12016027
         MVI   USGFLG,X'00'             TURN USING FLAG OFF             12017027
         SR    GRX,GRX                  ZERO VALUE                      12018027
         LH    GR1,CTUSPP(,ACT)         CURRENT USING PUSH/POP COUNT    12019027
         BCTR  GR1,0                    DECREMENT BY ONE                12020027
         LTR   GR1,GR1                  IS IT NON NEGATIVE .Q           12021027
         BM    DBALERR                  BRANCH IF NEGATIVE              12022027
         STH   GR1,CTUSPP(,ACT)         SET NEW PUSH/POP COUNT          12023027
         BAL   SRR,DROPEX               DO ALL APPROPRIATE DROPS        12024027
         LH    GR1,CTUSPP(,ACT)         RESTORE USING PUSH/POP COUNT    12025027
         SLL   GR1,L'USGSTAK/4          TIMES LENGTH USING STATUS       12026027
         LA    GRB,USGSTAK(GR1)         ADDR OF USING STATUS BYTES      12027027
         L     GRC,USNGPP(,ACT)         USING STATUS TABLE              12028027
         MVC   0(L'USGSTAK,GRC),0(GRB)  RESTORE USING STATUS INFO       12029027
         SLL   GR1,2                    NOW UP TO 64 TIMES              12029227
         LA    GRB,USGAREA(GR1,ACT)     POINT TO USING SAVED AREA       12029427
         L     GRC,USNGTP(,ACT)         USING TABLE ADDRESS             12030027
         MVC   0(64,GRC),0(GRB)         RESTORE USING TABLE             12031027
         MVI   USGFLG,X'FF'             TURN USING FLAG ON              12032027
         L     GRC,USNGPP(,ACT)         USING STATUS TABLE              12033027
         SR    GRB,GRB                  START WITH REGISTER ZERO        12034027
POPUS1   DS    0H                                                       12035027
         LA    GR1,0(GRB,GRC)           USING TABLE STATUS ENTRY        12036027
         CLI   0(GR1),X'FF'             IS REGISTER IN USE              12037027
         BNE   POPUS2                   BRANCH IF NOT                   12038027
         ST    GRB,VALUEB               PASS ON REGISTER                12039027
         XC    DWORD,DWORD              CLEAR USING LABEL         V7A29 12039528
         BAL   SRB,USDPTBL              SET UMAP ENTRY                  12040027
POPUS2   DS    0H                                                       12041027
         LA    GRB,1(,GRB)              NEXT REGISTER                   12042027
         C     GRB,K16                  ALL DONE REGISTERS .Q           12043027
         BL    POPUS1                   AGAIN IF NOT DONE               12044027
         LA    SP1,L'USINGC(,SP1)       POINT PAST ARGUMENT             12045027
CPOPB    DS    0H                                                       12046027
         CLI   0(SP1),ICOMMA            IS A COMMA NEXT .Q              12047027
         BE    POPDELOK                 BRANCH IF YES                   12048027
         CLI   0(SP1),IBLANK            IS A BLANK NEXT .Q              12049027
         BE    CTRTRN(,ACT)             RETURN IF SO                    12050027
         B     DLMERR                   OTHERWISE, SYNTAX ERROR         12051027
POPDELOK DS    0H                                                       12052027
         LA    SP1,1(,SP1)              BUMP TO NEXT OPND               12053027
         B     POPB1                    AND CONTINUE                    12054027
*********************************************************************** 12055027
***   PUSH   ***                                                        12056027
* THIS ROUTINE SCANS THE OPERAND FIELD OF ALL PUSH                      12057027
* STATEMENTS AND STACKS APPROPRIATE TABLES.                             12058027
*********************************************************************** 12059027
PSHB     DS    0H                                                       12060027
         MVI   F8INST+15(ACT),X'0F'     DON'T PRINT LOCATION COUNTER    12061027
         L     SP1,F8OPRN(,ACT)         OPERAND POINTER                 12062027
PSHB1    DS    0H                                                       12063027
         CLC   PRINTC,0(SP1)            IS OPERAND 'PRINT' .Q           12064027
         BE    PSHPRINT                 BRANCH IF YES                   12065027
         CLC   USINGC,0(SP1)            IS OPERAND 'USING' .Q           12066027
         BE    PSHUSING                 BRANCH IF YES                   12067027
         BAL   SRR,ERRZRO               LOG AN ERROR                    12068027
         DC    AL2(ERRPSH)              UNRECOGNIZABLE PUSH OPND        12069027
         B     CTRTRN(,ACT)             AND EXIT                        12070027
PSHPRINT DS    0H                                                       12071027
         LH    GR1,CTPRPP(,ACT)         CURRENT PRINT PUSH/POP COUNT    12072027
         LA    GR1,1(,GR1)              BUMP BY ONE                     12073027
         C     GR1,NESTPSPO             IS NESTING LEVEL OK .Q          12074027
         BH    DBALERR                  BRANCH IF NOT                   12075027
         STH   GR1,CTPRPP(,ACT)         SET NEW PRINT PUSH/POP COUNT    12076027
         MH    GR1,LENPNTSK             TIMES LENGTH OF ONE ENTRY (12)  12077027
         LA    GR1,PNTSTAK-L'PNTSTAK(GR1)  ADDR OF SAVE PRINT AREA      12078027
         MVC   0(L'PNTSTAK,GR1),F8PON(ACT)  SAVE OLD SETTINGS           12079027
         LA    SP1,L'PRINTC(,SP1)       POINT PAST ARGUMENT             12080027
         B     CPSHB                    AND CONTINUE                    12081027
DBALERR  DS    0H                                                       12082027
         BAL   SRR,ERRZRO               LOG THE ERROR                   12083027
         DC    AL2(ERRPSPO)             UNBALANCED PUSH/POP REQUESTS    12084027
         B     CTRTRN(,ACT)             AND RETURN                      12085027
PSHUSING DS    0H                                                       12086027
         LH    GR1,CTUSPP(,ACT)         CURRENT USING PUSH/POP COUNT    12087027
         LA    GR1,1(,GR1)              BUMP BY ONE                     12088027
         C     GR1,NESTPSPO             IS NESTING OK .Q                12089027
         BH    DBALERR                  BRANCH IF NOT                   12090027
         STH   GR1,CTUSPP(,ACT)         SET NEW USING PUSH/POP COUNT    12091027
         SLL   GR1,L'USGSTAK/4          TIMES LENGTH OF USING SAVE      12092027
         LA    GRB,USGSTAK-L'USGSTAK(GR1)  ADDR OF USING STATUS SAVE    12093027
         L     GRC,USNGPP(,ACT)         USING STATUS TABLE              12094027
         MVC   0(L'USGSTAK,GRB),0(GRC)  SAVE USING STATUS               12095027
         SLL   GR1,2                    NOW UP TO 64 TIMES              12095227
         LA    GRB,USGAREA-64(GR1,ACT)  POINT TO USING SAVE AREA        12095427
         L     GRC,USNGTP(,ACT)         USING TABLE ADDRESS             12096027
         MVC   0(64,GRB),0(GRC)         SAVE USING TABLE                12097027
         LA    SP1,L'USINGC(,SP1)       POINT PAST ARGUMENT             12098027
CPSHB    DS    0H                                                       12099027
         CLI   0(SP1),ICOMMA            IS A COMMA NEXT .Q              12100027
         BE    PSHDELOK                 BRANCH IF YES                   12101027
         CLI   0(SP1),IBLANK            IS A BLANK NEXT .Q              12102027
         BE    CTRTRN(,ACT)             RETURN IF SO                    12103027
         B     DLMERR                   OTHERWISE, SYNTAX ERROR         12104027
PSHDELOK DS    0H                                                       12105027
         LA    SP1,1(,SP1)              BUMP TO NEXT OPND               12106027
         B     PSHB1                    AND CONTINUE                    12107027
USDPTBL  DS    0H                                                       12108027
*                  USGFLG   --   X'FF' IF USING                         12109027
*                           --   X'00' IF DROP                          12110027
*                  VALUEB   --   REGISTER BEING ALTERED                 12111027
         TM    CTUMAPI(ACT),X'80'       WAS UMAP SPECIFIED .Q           12112027
         BCR   8,SRB                    RETURN IMMEDIATELY IF NOT       12113027
         STM   SP2,SP1,F8REGS           SAVE ALL REGISTERS              12114027
         LA    SP2,STUMAP(,ACT)         POINT TO START OF USING CHAIN   12115027
         L     SP1,STUMAP(,ACT)         GET START OF CHAIN              12116027
         LTR   SP1,SP1                  IS IT THE FIRST TIME .Q         12117027
         BZ    USDPDRPT                 BRANCH IF YES                   12118027
         USING USNGMAP,SP1              FOR A BASE                      12119027
USDPREGZ DS    0H                                                       12120027
         CLC   USNGREG,VALUEB+3         IS THIS THE REGISTER .Q         12121027
         BNE   USDPPTRZ                 BRANCH IF NOT                   12122027
         OC    USNGDROP,USNGDROP        IS REGISTER ALREADY DROPPED .Q  12123027
         BNZ   USDPPTRZ                 BRANCH IF YES                   12124027
         MVC   USNGDROP,CTSEQ8+2(ACT)   SET STATEMENT DROPPED           12125027
USDPPTRZ DS    0H                                                       12126027
         LR    SP2,SP1                  REMEMBER LAST AREA              12127027
         L     SP1,USNGCHN              GET NEXT AREA                   12128027
         LA    SP1,0(,SP1)              CLEAR HIGH BYTE                 12129027
         LTR   SP1,SP1                  IS CHAIN PTR ZERO .Q            12130027
         BNZ   USDPREGZ                 BRANCH IF NOT                   12131027
USDPDRPT DS    0H                                                       12132027
         CLI   USGFLG,X'00'             IS THIS A DROP .Q               12133027
         BE    USDPRETN                 RETURN NOW IF YES               12134027
         BAL   SRR,USDPBLKG             GET NEXT USING BLOCK            12135027
         O     SP1,USNGCHN-USNGMAP(,SP2)  OR IN LAST REGISTER NUMBER    12136027
         ST    SP1,USNGCHN-USNGMAP(,SP2)  CHAIN THE LAST USING BLOCK    12137027
         XC    USNGMAP(USNGLEN),USNGMAP CLEAR NEW USING BLOCK           12138027
         L     GR1,VALUEB               GET REGISTER NUMBER             12139027
         STC   GR1,USNGREG              PUT IN USING MAP BLOCK          12140027
         SLL   GR1,2                    FOUR BYTES PER ENTRY            12141027
         A     GR1,USNGTP(,ACT)         PLUS BASE OF USING TABLE        12142027
         MVC   USNGDISP+1(3),1(GR1)     ENTER RESOLVED DISPLACEMENT     12143027
         MVC   USNGSTRT(2),CTSEQ8+2(ACT)  USING STATEMENT NUMBER        12144027
         L     GR1,DWORD                START OF USING LABEL      V7A29 12144228
         LTR   GR1,GR1                  IS ANYTHING THERE .Q      V7A29 12144328
         BZ    USDPPOP                  BRANCH IF NOT             V7A29 12144428
         MVI   USNGLBEL,IBLANK          BLANK TARGET LABEL        V7A29 12144528
         MVC   USNGLBEL+1(L'USNGLBEL-1),USNGLBEL  ALL OF IT       V7A29 12144628
         L     SP2,DWORD+4              END OF USING LABEL        V7A29 12144728
         SR    SP2,GR1                  LENGTH OF LABEL           V7A29 12144828
         BNP   USDPNUL                  JUST IN CASE              V7A29 12144928
         LA    SRR,L'USNGLBEL           MAX ALLOWED               V7A29 12145028
         CR    SP2,SRR                  ARE WE LESS .Q            V7A29 12145128
         BNH   USDPLNOK                 BRANCH IF YES             V7A29 12145228
         LA    SP2,L'USNGLBEL-1         USING MAXIMUM-1 INSTEAD   V7A29 12145328
         MVI   USNGLBEL+L'USNGLBEL-1,IPRIOD  WITH DOT AT END      V7A29 12145428
USDPLNOK DS    0H                                                 V7A29 12145528
         BCTR  SP2,0                    LENGTH-1                  V7A29 12145628
         EX    SP2,USDPMVC              MOVE ARGUMENT             V7A29 12145728
USDPNUL  DS    0H                                                 V7A29 12145828
         L     GR1,CTRTBP(,ACT)         EXTERNAL TRANSLATE TABLE  V7A29 12145928
         TR    USNGLBEL,0(GR1)          TRANSLATE LABEL TO EXT    V7A29 12146028
         B     USDPRETN                 GO TO RETURN              V7A29 12146128
USDPMVC  MVC   USNGLBEL(*-*),0(GR1)     EXECUTED MOVE LABEL       V7A29 12146228
USDPPOP  DS    0H                                                 V7A29 12146328
         MVC   USNGLBEL,USNGPOP         THIS IS A POP USING       V7A29 12146428
USDPRETN DS    0H                                                 V7A29 12146528
         LM    SP2,SP1,F8REGS           RESTORE CALLER'S REGS     V7A29 12146628
         BR    SRB                      AND RETURN                      12147027
         DROP  SP1                      NO USE FOR USING MAP BLOCK      12148027
USDPBLKG DS    0H                                                       12149027
         L     GR1,ABLKOFF              CURRENT BLOCK OFFSET            12150027
         C     GR1,USDPLEN              ANY LEFT .Q                     12151027
         BL    USDPAVIL                 BRANCH IF YES                   12152027
         L    GR1,BUFFPT(,ACT)          POINT TO BUFF IN ASM            12153027
         CNOP  2,4                      ALIGN OPERANDS                  12154027
         BALR  GR0,GR1                  DO THE SHRINK                   12155027
         DC    A(36)                    SHRINK CODE                     12156027
USDPLEN  DC    A(USNGLEN*USNGDUP)       LENGTH OF ONE UMAP AREA         12157027
USDPADDR DC    A(0)                     RETURNED ADDRESS                12158027
         CLI   USDPADDR,X'FF'           DID WE GET CORE .Q              12159027
         BE    USNGABND                 ABEND IF NOT                    12160027
         SR    GR1,GR1                  USE 1ST USING MAP BLOCK         12161027
USDPAVIL DS    0H                                                       12162027
         LR    SP1,GR1                  TRANSFER USABLE OFFSET          12163027
         A     SP1,USDPADDR             PLUS BASE                       12164027
         LA    GR1,USNGLEN(,GR1)        POINT TO NEXT OFFSET AREA       12165027
         ST    GR1,ABLKOFF              SAVE IT BACK                    12166027
         BR    SRR                      AND RETURN                      12167027
USNGABND DS    0H                                                       12168027
         NI    CTUMAPI(ACT),X'FF'-X'80' TURN OFF UMAP OPTION      V7A35 12169028
         BAL   SRR,ERRZRO               ERROR ROUTINE             V7A35 12170028
         DC    AL2(ERRUSNG)             UMAP EXHAUSTED            V7A35 12171028
         B     USDPRETN                 BRANCH TO RETURN          V7A35 12172028
*********************************************************************** 12180027
***   LITERB   ***                                                      12181027
* THIS ROUTINE PLACES THE ADDRESS OF THE LITERAL FOR OUTPUT AND         12182027
* BRANCHES TO A COMMON EXIT FOR LITERAL, DC AND DS.                     12183027
*********************************************************************** 12184027
LITERB   DS    0H                                                       12185027
         MVC   F8INST(3,ACT),CTLOC+1(ACT)  PUT IN LOCATION COUNTER      12186027
         LA    GRZ,10                   MIXED VALUE                     12187027
         B     DCDSLT                   COMMON EXIT                     12188027
*********************************************************************** 12189027
***   DSB   ***                                                         12190027
*THIS ROUTINE SETS GRZ TO ZERO CONTINUES WITH COMMON ROUTINE TO LITERAL 12200020
* DC AND DS.                                                            12220020
*********************************************************************** 12240020
DSB      SR    GRZ,GRZ                 SET DS FLAG                      12260020
DCDSLT   L     SRB,CDCVAL(ACT)          GET BASE/ENTRY OF DC EVAL       12280020
         ST    GRX,CTWRAPX(ACT)         PUT BACK ADUSTED LOC CTR        12300020
         MVI   F8INST+15(ACT),X'00'     PRINT LOCATION COUNTER          12320020
         BALR  SRR,SRB                  CALL DC EVAL ASMGF8D            12340025
         B     CTRTRN(ACT)              EXIT                            12360020
SAVER    EQU   206                                                      12380020
*********************************************************************** 12400020
***   DCB   ***                                                         12420020
*THIS ROUTINE STARTS AT THE COMMON BRANCH FOR LITERAL, DC, AND DS.  GRZ 12440020
* WILL ALWAYS CONTAIN A NON-ZERO VALUE.                                 12460020
*********************************************************************** 12480020
DCB      LA    GRZ,255                  ALL BITS                        12500020
         B     DCDSLT                   GO TO COMMON EXIT               12520020
*********************************************************************** 12540020
***   CCWB   ***                                                        12560020
*THIS ROUTINE PROCESS THE OPERAND FIELD OF A CCW STATEMENT.  DATA IS    12580020
* SET FOR THE F8OP ROUTINE TO OUTPUT.  RLD ENTRIES ARE MADE IF          12600020
* NECESSARY                                                             12620020
*********************************************************************** 12640020
CCWB     ST    GRX,CTWRAPX(ACT)         REPLACE ADJUSTED LOC CTR        12660020
         L     GRX,CTXABP(ACT)          GET APPENDED FIXED FIELD PTR    12680020
         LA    GR0,8                    CCW LENGTH FOR WRAP TEST        12700020
         ST    GR0,CTF8LNGT(ACT)        LENGTH FOR WRAP TEST            12720020
CCWB0A   MVI   F8INST+15(ACT),X'48'     SET DC AND LENGTH OF 8          12740020
         LA    GR0,8                                                    12760020
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 12780020
         CLI   0(SP1),IBLANK           IS OPERAND BLANK                 12800020
         BE    DLMERR                   IF SO, DELIMETER ERROR          12820020
         CLI   0(SP1),IEQUAL            IS NEXT CHAR EQUAL              12840020
         BE    DLMERR                   IF SO, DELIMETER ERROR          12860020
         BAL   SRR,F8AREX               PROCESS EXPRESSION              12880020
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              12900020
         BNE   DLMERR                   DELIMETER ERROR, ABORT          12920020
         TM    ERRSW,X'FF'               WAS EXPRESSION IN ERROR        12940020
         BO    CCW02                     IF SO SKIP FIRST OPERAND       12960020
         TM    AEXP2,X'01'              IS ABSOLUTE AND SIZE OK         12980020
         BZ    CCW01                    YES, CONTINUE                   13000020
         TM    AEXP3,X'01'              IS THIS RELOCATABILITY ERROR    13020020
         BZ    CCWR01                   IF ZERO, NO                     13040020
         BAL   SRR,ERRZRO               LOG ERROR AND ZERO INSTRUCTION  13060020
         DC    AL2(ERRLOC)              RELOCATABILITY ERROR            13080020
         B     CCW02                    SCAN NEXT OPERAND FIELD         13100020
CCWR01   BAL   SRR,ERRZRO               LOG ERROR                       13120020
         DC    AL2(ERRLAR)              TOO LARGE EXPRESSION            13140020
         B     CCW02                    SCAN NEXT OPERAND FIELD         13160020
CCW01    STC   SP2,F8INST+3(ACT)        MACHINE OP CCW                  13180020
CCW02    LA    SP1,1(SP1)               LOOK AT NEXT CHAR               13200020
         CLI   0(SP1),IEQUAL            IS DELIMETER EQUAL              13220020
         BE    DLMERR                   DELIMETER ERROR                 13240020
         CLI   0(SP1),IBLANK            IS NEXT OPERAND CHARACTER BLANK 13260020
         BE    DLMERR                   IF SO, DELIMETER ERROR          13280020
         BAL   SRR,F8AREX               PROCESS 2ND EXPRESSION          13300020
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              13320020
         BNE   DLMERR                   NO, ERROR                       13340020
         TM    AEXP3,X'01'              IS ABSOLUTE AND SIZE OK         13360020
         BZ    CCW03                    YES, OK                         13380020
         TM    SREXP,X'01'              IS IT RELOCATABLE               13400020
         BZ    RLDRTN00                 YES, RELOCATE                   13420020
         TM    CREXP,X'01'              IS IT COMPLEX RELOCATABLE       13440020
         BZ    RLDRTN00                 YES, RELOCATE                   13460020
         TM    VALUEB,X'FF'             SIZE CHECK                      13480020
         BZ    CCW03                    OK, CONTINUE                    13500020
         BAL   SRR,ERRZRO               LOG ERROR                       13520020
         DC    AL2(ERRLAR)              EXPRESSION TOO LARGE            13540020
         B     CCW04                    SKIP RLD ENTRY RTN FOR ABSOLUTE 13560020
CCW03    MVC   F8INST+4(3,ACT),VALUEB+1 DATA ADDRESS FOR CCW            13580020
         B     CCW04                    SKIP RLD ENTRY RTN FOR ABSOLUTE 13600020
*                                                                     * 13620020
***                   RLD ROUTINE                                   *** 13640020
*                                                                     * 13660020
RLDRTN00 MVC   F8INST+4(3,ACT),VALUEB+1 DATA ADDRESS FOR CCW            13680020
         STM   SP2,SP1,F8REGS           OPERAND REGISTERS FOR LATER     13700020
         L     SRB,STLOCADR             ADDRESS OF DC STLOC DATA        13720020
         MVC   1(3,SRB),F8INST(ACT)     MOVE CURRENT LOCATION COUNTER/  13740020
         OI    3(SRB),X'01'             OR IN LOW ORDER BIY FOR RLD     13760020
         LR    SP1,SP2                  POINTER TO VALUE & TABLE OF ESD 13780020
         LA    SP2,X'08'                SET FOR THREE                   13800020
         L     SRB,CDCVAL(ACT)          DCEVAL BASE                     13820020
         L     GR1,RLDRTNAD             RLD ROUTINE ADDRESS             13840020
         BALR  SRR,GR1                  PROCESS RLD                     13860020
         LM    SP2,SP1,F8REGS           GET BACK REGISTERS              13880020
CCW04    LA    SP1,1(SP1)               LOOK AT NEXT CHAR               13900020
         CLI   0(SP1),IBLANK            IS NEXT OPERAND CHARACTER BLANK 13920020
         BE    DLMERR                   IF SO, DELIMETER ERROR          13940020
         CLI   0(SP1),IEQUAL            IS NEXT CHAR EQUAL              13960020
         BE    DLMERR                   IF SO, DELIMETER ERROR          13980020
         BAL   SRR,F8AREX               PROCESS 3RD EXPRESSION          14000020
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              14020020
         BNE   DLMERR                   NO, LOG ERROR                   14040020
         TM    AEXP2,X'01'              SIZE AND ABSOLUTE TEST          14060020
          BO   CCW04A                    IF 1, ERROR                    14080020
         TM    VALUEB+3,X'07'           BOTTOM 3 BITS CHECK             14100020
         BZ    CCW06                    OK                              14120020
CCW05    BAL   SRR,ERRNO0               LOG ERROR                       14140020
         DC    AL2(ERRCCW)              CCW ERROR                       14160020
         B     CCW06                    PUT IN FLAGS ANYWAY             14180020
CCW04A   TM    AEXP3,X'01'              IS THIS RELOCATABILITY ERROR    14200020
         BZ    CCWR02                   IF ZERO, NO                     14220020
         BAL   SRR,ERRZRO               LOG ERROR                       14240020
         DC    AL2(ERRLOC)              RELOCATABILITY ERROR            14260020
         B     CCW07                    SCAN NEXT OPERAND FIELD         14280020
CCWR02   BAL   SRR,ERRZRO               LOG ERROR                       14300020
         DC    AL2(ERRLAR)              EXPRESSION TO LARGE             14320020
         B     CCW07                    SCAN NEXT OPERAND FIELD         14340020
CCW06    MVC   F8INST+7(1,ACT),VALUEB+3 FLAGS FOR CCW                   14360020
CCW07    LA    SP1,1(SP1)               LOOK AT NEXT CHAR               14380020
         CLI   0(SP1),IBLANK            IS NEXT OPERAND CHARACTER BLANK 14400020
         BE    DLMERR                   IF SO, DELIMETER ERROR          14420020
         CLI   0(SP1),IEQUAL            IS NEXT CHAR EQUAL              14440020
         BE    DLMERR                   IF SO, DELIMETER ERROR          14460020
         BAL   SRR,F8AREX               PROCESS 4TH EXPRESSION          14480020
         CLI   0(SP1),IBLANK            IS DELIMETER BLANK              14500020
         BNE   DLMERR                   NO, ERROR                       14520020
         TM    AEXP3,X'01'              ABSOLUTE CHECK                  14540020
         BO    CCW08                    NOT, ERROR                      14560020
          CLC  VALUEB(2),KX0000          CHECK IF SIZE IS RIGNT         14580020
         BNE   CCWR03                   ERROR                           14600020
        MVC   F8INST+9(2,ACT),VALUEB+2 COUNT FOR CCW                    14620020
         B     AOPRTN                   EXIT FROM AOP RTN               14640020
CCWR03   BAL   SRR,ERRZRO               LOG ERROR                       14660020
         DC    AL2(ERRLAR)              EXPRESSION TOO LARGE            14680020
         B     AOPRTN                   RETURN TO MAIN LINE             14700020
CCW08    BAL   SRR,ERRZRO               LOG ERROR                       14720020
         DC    AL2(ERRLOC)              RELOCATABILITY ERROR            14740020
         B     AOPRTN                   EXIT FROM AOP RTN               14760020
*********************************************************************** 14780020
***   CNOPB   ***                                                       14800020
*THIS ROUTINE OUTPUTS A VARIABLE NUMBER OF BC 0,0 INSTRUCTIONS.         14820020
*********************************************************************** 14840020
CNOPB    ST    GRX,CTWRAPX(ACT)         REPLACE ADJUSTED LOCATION CTR   14860020
         L     GRX,CTXABP(ACT)          APPENDED FIXED FIELD POINTER    14880020
         MVI   F8INST+15(ACT),X'00'     FIX FOR NO OUTPUT               14900020
         TM    4(GRX),X'06'             IF ZERO, NO BCT OUTPUT          14920020
         BZ    CTRTRN(ACT)              EXIT TO MLC                     14940020
         LA    GRY,6                    MASK TO REGISTER                14960020
         IC    GRZ,4(GRX)               ALIGNMENT TO REGISTER           14980020
         NR    GRY,GRZ                  KEEP JUST EVEN ALIGNMENT        15000020
         STC   GRY,F8INST+15(ACT)       PUT NUMBER OF BYTES FOR OUTPUT  15020020
         OI    F8INST+15(ACT),X'40'     PUT OUT AS DC                   15040020
         MVC   ALIGNT+1(3),F8INST(ACT)  REPLACE LOCATION                15060020
         MVI   ALIGNT,X'00'             ZERO FIRST BYTE                 15080020
         L     GRZ,ALIGNT               GET LOCATION IN REGISTER        15100020
         SR    GRZ,GRY                  BACK UP TO LOCATION             15120020
         ST    GRZ,ALIGNT               REPLACE                         15140020
         MVC   F8INST(3,ACT),ALIGNT+1   PUT FOR OUTPUT                  15160020
         EX    GRY,BCTRMV               BCR TO OUTPUT AREA              15180020
         B     CTRTRN(ACT)              RETURN TO MAIN LINE CONTROL     15200020
BCTRMV   MVC   F8INST+3(0,ACT),BCTROP   INDEXED MOVE, THRU EXECUTE      15220020
*********************************************************************** 15240020
***   SETSEC   ***                                                      15260020
*THIS ROUTINE SETS CURRENT ADJUSTMENT BASE BY USING CURRENT ESD-ID FOR  15280020
* TABLE SEARCH OF ADJUSTMENT TABLE ENTRIES.                             15300020
*********************************************************************** 15320020
SECSET   STM   GRB,GRA,F8REGS           STUFF ALL REGISTERS             15340020
         BAL   SRR,SETSEC               GO TO SET SECTION NUMBER        15360020
         LM    GRB,GRA,F8REGS           RESTORE REGISTERS               15380020
         BR    SRR                      RETURN TO MAIN PROGRAM          15400020
SETSEC   STC   SP2,*+9                  CURRENT ESD-ID                  15420020
         L     GRX,CTADJEND(0,ACT)      END OF TABLE + 1                15440020
         CLI             0(SP1),*-*     COMP. TO ADJ TABLE ENTRIES      15460020
         BE    SECFND                   FOUND, SET FOUND                15480020
         LA    SP1,4(SP1)               NOT FOUND, BUMP BY 4            15500020
         CR    SP1,GRX                  IS TABLE EXHAUSTED              15520020
         BL    SETSEC+8                 EXIT WHEN TABLE EXHAUSTED       15540020
         L     SP2,CTZERO(ACT)          ZERO CELL TO SHOW ERROR         15560020
         B     SECFNX                    ERR O                          15580020
SECFND   L     SP2,0(0,SP1)                                             15600020
         LA    SP2,0(0,SP2)             EXTRACT CSECT ORG               15620020
SECFNX   ST    SP2,F8CADJ(ACT)          STORE                           15640020
         MVC   F8INST(3,ACT),F8CADJ+1(ACT)                              15660020
         BR    SRR                      RETURN                          15680020
*********************************************************************** 15700020
***   F8AREX   ***                                                      15720020
*THIS ROUTINE IN AOP USES EEVAL FOR GETTING VALUES.  A CHECK IS MADE    15740020
* FOR SIZE.  IF SIZE IS OK BIT 7 IS SET TO ZERO IN PROPER FLAG WORD.    15760020
*********************************************************************** 15780020
F8AREX  L      GRZ,ALBITS                                               15800020
         ST    SRR,HLDSRR               SAVE RETURN ADDRESS             15820020
        ST     GRZ,EXFLGS               SET EXPRESION FLAGS ONES        15840020
         MVI   CREXP,X'FF'              TURN OFF COMPLEXLY RELOCATABLE  15860020
         XC    VALUEB(6),VALUEB         ZERO VALUE AND SIGN AND ESD-ID  15880020
         MVI   EVLERF,X'00'             TURN EVAL ERR FLAG OFF          15900020
        L      SRB,CEEVAL(ACT)          GET BASE/ENTRY OF EVAL          15920020
         BALR  SRR,SRB                  CALL EVAL - ASMGF8V             15940027
        BC     8,AEXP                   ABSOLUTE EXPRESSION             15960020
        BC     4,JSREXP                 SIMPLE RELOCATABLE              15980020
         BC    2,JCREXP                 COMPLEXLY RELOCATABLE           16000020
        BC     1,EREVAL                 COULD NOT EVALUATE              16020020
         B     ASERRB                   STATEMENT TOO COMPLEX           16040020
AEXP     LTR   GRY,SP2                  CURRENT EXP VALUE TEST NEGATIVE 16060020
        ST     GRY,VALUEB               SAVE VALUE                      16080020
         TM    VALUEB,X'FF'             TEST FOR WRAP AROUND            16100020
         BM    EXWRAP                   IF MIXED, WRAP AROUND OCCURRED  16120020
         MVI   VALUEB,X'00'             ZERO FIRST BYTE OF VALUE        16140020
         SL    GRY,K16                  IF LESS THAN +16, OK            16160020
        BM     SEXP1                    OK                              16180020
         L     GRY,VALUEB               RESTORE VALUE TO GRY            16200020
         SL    GRY,K256                 IF LESS THAN 256, OK            16220020
        BM     SEXP2                    OK                              16240020
         B     SEXP3                    SET ABSOLUTE OK                 16260020
EXWRAP   BAL   SRR,ERRZRO               ZERO INSTRUCTION AND LOG ERROR  16280020
         DC    AL2(ERRWRP)              WRAP AROUND ERROR CODE          16300020
         XC    VALUEB(4),VALUEB         ZERO VALUE                      16320020
         B     SEXP3                    SET ABSOLUTE                    16340020
JCREXP   MVI   CREXP,X'00'              TURN ON COMPLEXLY RELOCATABLE   16360020
         MVC   VALUEB(4),0(SP2)         VALUE TO VALUEB                 16380020
         B     PASSRE                   EXIT                            16400020
JSREXP   NI    SREXP,X'FE'              SET SIMPLY RELOC SWTCH          16420020
         MVC   VALUEB(6),0(SP2)         EXPRESSION VALUE, SIGN & ESD-ID 16440020
        B      PASSRE                   EXIT                            16460020
SEXP1    NI    AEXP1,X'FE'               ET ABS. < 16 OK                16480020
SEXP2    NI    AEXP2,X'FE'               SET ABS. < 256 OK              16500020
SEXP3    NI    AEXP3,X'FE'               SET ABSOLUTE EXP OK            16520020
PASSRE   L     SRR,HLDSRR               GET SUBROUTINE RETURN           16540020
        BR     SRR                      RETURN                          16560020
EREVAL   SR    GR0,GR0                 ZERO A REGISTER                  16580020
         ST    GR0,EXFLGS               TURN OTHER ERRORS OFF           16600020
         LTR   SP1,SP1                 IF ZERO, ABORT                   16620020
         MVI   ERRSW,X'FF'              TURN ON LOCAL ERROR SWITCH      16640020
         BZ    AOPRTN                  IF ZERO BRANCH                   16660020
         MVI   EVLERF,X'FF'             TURN EVAL ERR FLAG ON           16680020
         L     SRR,HLDSRR               GET SUBROUTINE RETURN           16700020
         BR    SRR                      EXIT F8AREX                     16720020
ASERRB   BAL   SRR,ERRZRO               LOG ERROR                       16740020
         DC    AL2(ERRASM)              STATEMENT COMPLEXITY EXCEEDED   16760020
         B     AOPRTN                   EXIT                            16780020
ERQNDU   BAL   SRR,ERRZRO               LOG ERROR                       16800020
         DC    AL2(ERRREG)              REGISTER ERROR                  16820020
         LM    GR0,GRY,ERRREGS          PICK UP ALL REGISTERS           16840020
         B     TESNDU                   GO BACK FOR MORE                16860020
DLMERR   BAL   SRR,ERRZRO               DELIMETER ERROR                 16880020
         DC    AL2(ERRDLM)              LOG ERROR                       16900020
ZEROINST MVI   ERRSW,X'FF'             TURN ON ERROR SWITCH             16920020
AOPRTN   TM    ERRSW,X'FF'              ASSEMBLER OP PROCESSOR RETURN   16940020
         BZ    DNTZRO                   NO ERROR, SKIP                  16960020
         XC    F8INST+3(12,ACT),F8INST+3(ACT) ZERO INSTRUCTION          16980020
         SR    SP2,SP2                  ZERO SP2 FOR NO SPACING         17000020
DNTZRO   B     CTRTRN(ACT)              DONT ZERO INSTRUCTION           17020020
ERRZRO   MVI   ERRSW,X'FF'              SET ERROR SWITCH ON             17040020
ERRNO0   L     SRB,CLOGER(ACT)          LOAD LOGERR BASE AND ENTRY      17060020
         STM   GR0,GRY,ERRREGS          SAVE ALL REGISTERS              17080020
         BR    SRB                      EXIT TO LOGERR                  17100020
         ENTRY SECSET                   SETS CURRENT ADJUSTMENT BASE SV 17120020
         ENTRY SETSEC                   SAME AS ABOVE BUT DOESNT SAVE   17140020
FWORD    DS    2D                       2 DOUBLE WORDS TEMP             17160020
DWORD    DS    D                        DOUBLE WORD TEMP                17180020
RLDRTNAD DC    V(RLDRTN)                EXTERNAL ADDRESS OF DC RLD RTN  17200020
STLOCADR DC    V(STLOC)                 LOCATION ADDRESSED IN DC RTN    17220020
PNTSAV   DC    3F'0'                    THREE PRINT SWITCH SETTINGS     17240020
FOURB    DC    F'4'                     CONSTANT FOUR                   17260020
NESTPSPO EQU   FOURB                    MAX PUSH/POP NESTING LEVEL      17270027
ENTSAVE  DC    F'0'                     ENTRY ERROR OPERAND POINTER     17280020
ABLKOFF  DC    A(USNGLEN*USNGDUP)       OFFSET IN USING MAP AREA (FULL) 17290027
USNGPOP  DC    CL12'*** POP ***'        LABEL OF POPPED REGISTER  V7A29 17295028
F8TEMP   DS    F                        HOLE FOR TEMP STORAGE           17300020
F8REGS   DS    16F                      SAVE AREA FOR SECSET            17320020
ERRREGS  DS    16F                      SAVE REGISTERS ON ERRORS        17340020
VALUEB   DS    F                        EVALUATED VALUE FROM F8AREX     17360020
EXPESD   DC    X'0000'                  EXPRESSION SIGN AND ESD-ID      17380020
BCTROP   DC    X'070007000700'          THREE BCR COMMANDS              17400020
NDATAC   DC    X'17180D0A1D0A'          NODATA                          17420020
DATAC    DC    X'0D0A1D0A'              DATA                            17440020
NOGENC   DC    X'1718100E17'            NOGEN                           17460020
GENC     DC    X'100E17'                GEN                             17480020
OFFC     DC    X'180F0F'                OFF                             17500020
ONC      DC    X'1817'                  ON                              17520020
PRINTC   DC    X'191B12171D'            TRANSLATED PRINT                17530027
USINGC   DC    X'1E1C121710'            TRANSLATED USING                17535027
RLDFLG   DC    X'08'                    INDICATES 2 WHICH MEANS 3       17540020
EQUAL    DC    X'2C'                    HEX FOR EQU AL SIGN             17560020
NINEEN   DC    F'19'                    CONSTANT OF 19                  17580020
K16     DC     F'16'                    DECIMAL 16                      17600020
K256     DC    F'256'                   DECIMAL 265                     17620020
K4096    DC    F'4096'                  DECIMAL 4096                    17640020
LENPNTSK DC    AL2(L'PNTSTAK)           LENGTH OF ONE PRINT SAVE AREA   17650027
KX0000    DC    X'0000'                  TWO BYTES OF ZERO              17660020
ZEROM    DC    F'0'                     FULL WORD OF ZERO               17680020
ALBITS   DC    X'FFFFFFFF'              FULL WORD OF BITS               17700020
ALIGNM   DC    F'0'                     FOR ALIGNING HALF AND FULL WORD 17720020
ALIGNT   DS    F                        FOR ALIGNMENT HALF AND FULL WRD 17740020
TOOBIG   DC    X'00003000'              *                               17760020
HLDSRR   DS    F                        RETURN ADDRESS FOR F8AREX       17780020
CREXPC   DS    F                        COMPLEXLY RELOCATABLE SWITCH    17800020
EXFLGS   DS    0F                       EXPRESSION FLAGS                17820020
AEXP1    DC    X'00'                    FLAG- ABSOLUTE LT 16            17840020
AEXP2    DC    X'00'                    FLAG- ABSOLUTE LT 256           17860020
AEXP3    DC    X'00'                    FLAG- ABSOLUTE LT 4096          17880020
SREXP    DC    X'00'                    FLAG- SIMPLE RELOCATABLE        17900020
CREXP    DC    X'00'                    COMPLEX RELOCATABLE FLAG        17920020
EVLERF   DC    X'00'                    F8AREX ERROR FLAG               17940020
BUSING   DC    X'00'                    USING SWITCH                    17960020
BIT6     DC    X'02'                    BIT 6                           17980020
BIT7     DC    X'01'                    BIT 7                           18000020
TEN      DC    X'0A'                    10                              18020020
BITS45   DC    X'0C'                    BITS 4 AND 5                    18040020
USINGR0  DC    X'FF'                    SWITCH FOR USING REGISTER 0     18060020
USGFLG   DC    X'00'                   USING FLAG                       18080020
ESDUSG   DC    X'00'                    ESD-ID USED IN USING STATEMENT  18100020
ERRSW    DC    X'00'                   ERROR SWITCH                     18120020
PRNTFLAG DC    X'00'                    FLAG FOR DUPLICATE PRNT SWITCH  18140020
ABSRX    DS    C                        ABSOLUTE FLAG                   18160020
FRSTIM   DS    C                        FIRST TIME SWITCH FOR F8AREX    18180020
TSTYPE   DC    X'00'                    TYPE OF OPERATION SLOT          18200020
USNGPP   EQU   CTXIO3                   I/O BUFFER 3                    18220020
USNGTP   EQU   CTXIO4                   I/O BUFFER 4                    18240020
QUOTE    EQU   X'31'                    TRANSLATED QUOTE                18260020
WKBKPT   EQU   CTXOFP                   PHASE 8 WORK BUCKET POINTER     18280020
LATP     EQU   CTXWAP                   LITERAL ADDRESS TABLE POINTER   18300020
SIGN     EQU   0                        SIGN                            18320020
PID      EQU   0                        POSITION ID                     18340020
RID      EQU   1                        RELOCATION ID (PARAM TABLE)     18360020
VAL      EQU   2                        V OR A, LENGTH INDICATOR        18380020
ADDR     EQU   3                        ADDRESS                         18400020
RELID    EQU   1                        RELOCATION ID (RLD)             18420020
PLSCON   EQU   1                        PLUS CONSTANT                   18440020
PNEXT    EQU   2                                                        18460020
ERRORG   EQU   6                        ERROREOUS ORG STATEMENT FLAG    18480020
ERRWRP   EQU   7                        WRAP AROUND ERROR CODE          18500020
ERRDIS   EQU   8                        EXPRESSION TOO LARGE            18520020
ERRREG   EQU   10                       REGISTER SPECIFICATION ERROR    18540020
ERRLAR   EQU   17                       EXPRESSION TOO LARGE            18560020
ERRUDF   EQU   24                       UNDEFINED SYMBOL                18580020
ERRLOC   EQU   25                       RELOCATABILITY ERRORS           18600020
ERDROP   EQU   28                       REGISTER NOT USED               18620020
ERRCCW   EQU   29                       BITS 37-39 OF CCW NON-ZERO      18640020
ERRLIN   EQU   33                       ERROR CODE FOR ALIGNMENT ERROR  18660020
ERRNTY   EQU   38                       ENTRY ERROR                     18680020
ERRDLM   EQU   39                       INVALID DELIMITER               18700020
ERRLNG   EQU   98                       LENGTH ERROR                    18720020
ERRASM   EQU   100                     OPERAND TOO COMPLES(ASSEMBLER ER 18740020
ERROPN   EQU   107                      OPERAND ERROR                   18760020
ERRPSH   EQU   111                      UNRECOGNIZABLE PUSH PARAMETER   18770027
ERRPOP   EQU   111                      UNRECOGNIZABLE POP PARAMETER    18780027
ERRPSPO  EQU   112                      UNBALANCED PUSH/POP REQUEST     18790027
ERRPNT   EQU   111                      UNRECOGNIZABLE PRINT PARAMETER  18795027
ERRUSNG  EQU   114                      NO STORAGE FOR UMAP       V7A35 18798027
EREVL    EQU   AOPRTN                   EXPRESSION EVALUATION ERROR     18800020
EQUERR   EQU   ASERRB                   STATEMENT TOO COMPLEX ERROR     18820020
PPTR     EQU   GRA                      PARAMETER TABLE POINTER         18840020
RLDPTR   EQU   SP1                      RLD POINTER                     18860020
COUNT    EQU   GRB                      COUNTER REGISTER                18880020
KMNOTE   EQU   X'0E'                   HEXOP FOR MNOTE                  18900020
PNTSTAK  DC    4XL12'00'                PRINT PUSH/POP STACK            18920027
USGSTAK  DC    4XL16'00'                USING PUSH/POP STATUS STACK     18940027
USGAREA  EQU   CTWORK                   USING PUSH/POP ESDID/DISP STACK 18960027
         SPACE 2                                                        18980027
USNGMAP  DSECT                                                          19000027
USNGREG  DS    0AL1                     REGISTER NUMBER                 19020027
USNGCHN  DS    A                        CHAIN OF USING BLOCKS           19040027
USNGSTRT DS    H                        START USING STATEMENT NUMBER    19060027
USNGDROP DS    H                        DROP USING STATEMENT NUMBER     19080027
USNGLBEL DS    CL12                     LABEL OF USING LOCATION   V7A29 19100028
USNGESD  DS    0XL1                     ESD-ID OF USING LOCATION        19120027
USNGDISP DS    F                        OFFSET OF USING LOCATION        19140027
USNGLEN  EQU   *-USNGMAP                LENGTH OF CONTROL BLOCK         19160027
USNGDUP  EQU   5                        NUM USING MAP BLOCKS PER AREA   19180027
         SPACE 2                                                        19200027
         END   ASMGF8A                                                  19220027
./ ADD NAME=ASMGF8C
F8C      TITLE     'ASMG F8  MAIN LINE CONTROL (F8MLC)'                 00020021
         ISEQ  73,78                                                    00040021
ASMGF8C  START     ,                    MAIN LINE CONTROL PHASE 8       00060020
         PRINT        NOGEN                                             00080020
         FDIMEN                                                         00100020
         PRINT      GEN                                                 00120020
*                                                                     * 00140020
*TITLE 'ASMGF8C ' ... PHASE F8,MAIN LINE CONTROL                      * 00160021
*FUNCTION/OPERATION-                                                  * 00180020
*   PROCESS EDITED TEXT RECORDS FROM ASMGF7. CONTROL THE CALLING OF   * 00200020
*  ASMGF8 ROUTINES FOR THE FINAL PROCESSING OF THE ASSEMBLY.          * 00220020
*ENTRY POINTS-                                                        * 00240020
*  ASMGF8C- MAIN LINE CONTROL                                         * 00260020
*     INVOKED BY ASMGF8I BY                                           * 00280020
*        B     CTRTRN(ACT)              CALL MAIN LINE CONTROL        * 00300020
*   SRLINE- ALIGNMENT ROUTINE                                         * 00320020
*     CALLED INTERNALLY BY                                            * 00340020
*        BAL   SRR,SRLIGN               ALIGN                         * 00360020
*INPUT- NONE                                                          * 00380020
*OUTPUT- NONE                                                         * 00400020
*EXTERNAL ROUTINES-                                                   * 00420020
*        NAME     ROUTINE     FUNCTION                                * 00440020
*                                                                     * 00460020
*        ASOPRO   ASMGF8A     PROCESS ASSEMBLER INSTRUCTIONS          * 00480020
*        GETXTM   ASMGF8I     GET TEXT AND MOVE                       * 00500020
*        PHCLS    ASMGF8I     PHASE 8 CLOSE                           * 00520020
*        CLOGER   ASMGF8L     LOG ERROR                               * 00540020
*        MACHOP   ASMGF8M     PROCESS MACHINE OPERATIONS              * 00560020
*        BLDIMG   ASMGF8P     BUILD SOURCE IMAGE                      * 00580020
*        PRNT     ASMGF8P     PRINT ROUTINE                           * 00600020
*EXITS- NORMAL--                                                      * 00620020
*   AT END OF PROCESSING, CONTROL IS RETURN TO ASMGF8I VIA            * 00640020
*        L     SRB,CTXTIO(ACT)          SET UP BASE                   * 00660020
*        BAL   SRR,PHCLS(SRB)           CLOSE PHASE 8                 * 00680020
*     - ERROR-- NONE                                                  * 00700020
*TABLES/WORKAREAS-                                                    * 00720020
*   F8REGS- SAVE AREA FOR ALL REGISTERS                               * 00740020
*                                                                     * 00760020
         EJECT                                                          00780020
         USING *,CRB                    CONTROL ROUTINE BASE            00800020
F8NTRY   MVI   CTEMERR(ACT),X'FF'     SET MNOTE ERR FLAG OFF            00820020
F8NTRY1  XC    F8INST(16,ACT),F8INST(ACT)  ZERO INST. BLDG. AREA        00840020
         MVI   REPSW(ACT),X'00'         TURN OFF TITLE,REPRO,PUNCH,MNOT 00860020
         CLI       CTENDSW(ACT),X'FF'  TEST IF END PROCESSED            00865023
         BNE       *+8                                                  00870023
         MVI       F8PON(ACT),X'00'    TURN ON PRINT SW IN CASE FULLLST 00875023
         CLI   ERSWH(ACT),X'FF'                                         00880020
         BE    ERLOD8                   IF ERROR, SKIP                  00900020
         LA    SP1,F8WORK(ACT)          MOVE RECORD TO WORK AREA        00920020
         L     SRB,CTXTIO(ACT)          I/O BASE ADDRESS                00940020
         BAL   SRR,GETXTM(SRB)          GET TEXT AND MOVE               00960020
         BZ    ENDOFF                                                   00980020
F8OPND   LA    SP1,F8WORK(ACT)          RELOAD SP1 FOR TESTS            01000020
         TM    TXRT(SP1),PCGREC         PROCESS & CONSTRUCT IF GEN 7    01020020
         BO    PC001                                                    01040020
         TM    TXRT(SP1),PCREC          PROCESS & CONSTRUCT 6           01060020
         BO    PC001                                                    01080020
         TM    TXRT(SP1),PROCREC        PROCESS ONLY 4                  01100020
         BO    SETWBP                                                   01120020
         B     PRINTE                  GO TO PRINTE FOR ALL OTHERS      01140020
*                                                                       01160025
PC001    ST    ACT,ACTREG              SAVE ACT REGISTER                01180025
         L     FRB,PRNT(ACT)            PRINT ROUTINE BALE              01200020
         L     GRX,ADBLDMG             F8PRINT BLDIMG                   01220020
         BALR  SRR,GRX                  BRANCH TO BUILD IMMAGE          01240020
         L     ACT,ACTREG              LOAD ACT REGISTER                01260020
* SETWBP - SET CTXWBP(ACT) PT TO FIRST SYMBOL WORK BUCKET               01280020
*                                IN CURRENT TEXT RECORD                 01300020
*          ENTER WITH GRA PT TO TXRL, USE GRY, GRZ                      01320020
*                                                                       01340020
SETWBP   LA    GRA,F8WORK(ACT)          RECORD WORK AREA ADDRESS        01360020
         LR    GRY,GRA                  SET GRY PT TO 1ST BYTE FOLLOWNG 01380020
         AH    GRY,TXABP(GRA)                      APPENDED FIXED FIELD 01400020
         LA    GRY,TXFAFL(GRY)                                          01420020
         LR    GRZ,GRA                  SET GRZ PT TO BYTE FOLLOWING    01440020
         AH    GRZ,TXRL(GRA)                       LAST BYTE OF TEST    01460020
SETWB1   CLR   GRY,GRZ                  END OF REC                      01480020
         BC    10,SETWB3                CLEAR CTXWBP                    01500020
         TM    TXWTYP(GRY),X'80'        W.B. TYPE EQ SYMBOL             01520020
         BO    SETWB4                   SET CTXWBP PT TO 1ST SYMBOL WB  01540020
         TM    TXWLEN(GRY),X'40'        W.B. LEN                        01560020
         BZ    SETWB2                        EQ 6                       01580020
         LA    GRY,9(GRY)                    EQ 15                      01600020
SETWB2   LA    GRY,6(GRY)               STEP W.B. PTR                   01620020
         B     SETWB1                   THEN CHECK NEXT W.B.            01640020
SETWB3   SR    GRY,GRY                  NO XYMBOL W.B. SET CTXWBP EQ 0  01660020
SETWB4   ST    GRY,CTXWBP(ACT)          SET CTXWBP PT TO 1ST SYMBOL W.B 01680020
         SR    SP2,SP2                                                  01700020
         SR    GRZ,GRZ                  ZERO REGISTER                   01720020
         LA    SP2,8(SP2)               BUMP 8                          01740020
         IC    GRZ,F8WORK(SP2,ACT)      INPUT NAME LENGTH               01760020
         AR    SP2,GRZ                  ADD TO 8                        01780020
         LA    SP2,1(SP2)               BUMP BY 1                       01800020
         IC    GRZ,F8WORK(SP2,ACT)      INPUT OPERATOR LENGTH           01820020
         AR    SP2,GRZ                  SUM                             01840020
         LA    SP2,2(SP2)               BUMP BY 2                       01860020
         LA    SP2,F8WORK(SP2,ACT)      OPERAND POINTER                 01880020
         ST    SP2,F8OPRN(ACT)          SAVE OPERAND POINTER            01900020
F8WBPC   MVC   ALIGNT(2),6(GRA)         APPENDED FIXED FIELD POINTER    01920020
         LH    SP1,ALIGNT               LOAD POINTER                    01940020
         LA    GRX,F8WORK(SP1,ACT)      TXLOC POINTER                   01960020
         ST    GRX,CTXABP(ACT)          APPENDED FIXED FIELD POINTER    01980020
         LA    SP1,F8WORK+5(SP1,ACT)                                    02000020
         ST    SP1,WKBKPT(ACT)                                          02020020
         MVC   ALIGNT+1(3),0(GRX)       ALIGN RELATIVE LOCATION         02040020
         L     GRZ,BYTES3               ZERO IN FIRST BYTE              02060020
         N     GRZ,ALIGNT               THREE BYTE LOC                  02080020
       A     GRZ,F8CADJ(ACT)          CURRENT ESD-ID ADJUSTMENT VALUE   02100020
         ST    GRZ,CTWRAPX(ACT)         STORE ADJUSTED LOCATION CTR     02120020
         ST    GRZ,ALIGNT               PUT FOR MOVE TO UNALIGNED       02140020
         MVC   0(3,GRB),ALIGNT+1        CURRENT ADJUSTED LOCATION       02160020
MOPALN   TM    TXTO(GRA),X'C0'          IS STATEMENT VALID STMNT        02180020
         BZ    PPRNT                    IF ZERO, NOT VALID              02200020
         L     GRX,CTXABP(ACT)          POINTER TO APPENDED FIXED FIELD 02220020
         TM    4(GRX),X'07'                                             02240020
         BZ    MOPTST                   IF ZERO, ALIGNMENT              02260020
         TM    F8WORK+3(ACT),X'40'      IS THIS A MACHINE OPERATION     02280020
         BO    MLC01                    IF 1, IT IS A MACINE OP         02300020
         CLI   F8WORK+4(ACT),LITRHEX    NO HXOP BELO LITRL NEED ALIGNMN 02320020
         BL    MOPTST                                                   02340020
MLC01    NC    4(1,GRX),F8SEVN          JUST KEEP ALIGNMENT BITS        02360020
         SR    GRY,GRY                                                  02380020
         IC    GRY,4(GRX)               BYTES TO ALIGN                  02400020
         SR    GRZ,GRY                                                  02420020
         ST    GRZ,ALIGNT               ZERO THE BYTES TO ALIGN         02440020
         MVC   ALIGNM(7),F8INST(ACT)    ADDRESS AND HEXOP               02460020
         STM   GRA,GRD,CTSAVE(ACT)      SAVE MLC REGISTERS              02480020
         CLI   F8WORK+4(ACT),X'29'      HEX FOR CNOP                    02500020
         BE    CNOPRE                   EF EQUAL SPECIAL ALIGNMENT      02520020
         BAL   SRR,SRLIGN                                               02540020
         MVC   F8INST(7,ACT),ALIGNM     ALIGNED LOC AND HEXOP           02560020
MOPTST   TM    F8WORK+3(ACT),X'80'                                      02580020
         L     SP1,F8OPRN(ACT)          ADDRESS OF OPERAND FIELD        02600020
         BZ    MOPROC                   IF ZERO, PROCESS MACHINE OPS    02620020
         L     FRB,ASOPRO(ACT)          ASSEMBLY INSTRUCTION PROCESSOR  02640020
         MVI   EJCTSW(ACT),X'57'       SET LEFT HALF RECORD FLAG ON     02660020
         BALR  CRR,ACT                                                  02680020
         CLI   F8WORK+4(ACT),X'0E'      IS THIS A MNOTE                 02700020
         BE    MPRNT       YES, DONT PRINT                              02720020
         CLI   F8WORK+4(ACT),X'13'     IS THIS A PRINT STATEMENT        02740020
         BE    PPRNT                   IF SO, DONT PRINT                02760020
         CLI   F8WORK+4(ACT),X'25'                                      02780020
         BL    PRINT              IS LESS THAN 25 PRINT                 02800020
         CLI   F8WORK+4(ACT),X'28'     IF LITR(25), DC(26),             02820020
         BL    PPRNT              DS(27) SKIP PRINTING                  02840020
         CLI   F8WORK+4(ACT),X'29'      IF ABOVE CNOP, DONT GO TO PRINT 02860020
         BH    PPRNT                    IF HI, CHECK WRAP AROUND        02880020
PRINT    L     FRB,PRNT(ACT)            PRINT ROUTINE USES FRB          02900020
         ST    ACT,ACTREG              SAVE ACT REGISTER                02920020
         BALR  SRR,FRB                                                  02940020
         L     ACT,ACTREG              LOAD ACT REGISTER                02960020
         B     PPRNT                    CHECK WRAP AROUND               02980020
PRINTE   L     FRB,PRNT(ACT)            PRINT ROUTINE BASE              03000020
         L     GRX,CTCOMT(ACT)         F8PRINT SOURCE AND COMMENT ENTRY 03020020
         ST    ACT,ACTREG               SAVE ACT TABLE POINTER          03040020
         BALR  SRR,GRX                                                  03060020
         L     ACT,ACTREG               LOAD ACT TABLE POINTER          03080020
        B     PPRNT                                                     03100020
CNOPRE   TM    4(GRX),X'01'             IF NOT 1, NO ALIGNMENT          03120020
         BZ    MOPTST                   BYPASS ALIGNMENT FOR CNOP       03140020
         LA    GRY,1                    ALIGN ONLY ONE BYTE             03160020
         XI    4(GRX),X'01'             DROP LOW BIT                    03180020
         BAL   SRR,SRLIGN               PUT OUT ALIGNMENT BYTE          03200020
         MVC   F8INST(7,ACT),ALIGNM     KEEP OLD LOCATION               03220020
         B     MOPTST                   RETURN POST ALIGNMENT           03240020
ENDOFF   L     FRB,PRNT(ACT)           BASE FOR PRINT ROUTINE           03260020
         MVI   F8PGEN(ACT),X'00'       SET TO PRINT ANY ERRORS          03280020
         MVC       F8WORK(4,ACT),DUMMYCOM PLACE A DUMMY COMMENT RECORD  03290023
         L         GRX,CTCOMT(ACT)     CALL PRINT ROUTINE TO FLUSH LAST 03300023
         BALR  SRR,GRX                 EXECUTE PRINT ROUTINE            03320020
         L     SRB,CTXTIO(ACT)         I/O BASE ADDRESS                 03340020
         BAL   SRR,PHCLS(SRB)           CLASE PHASE 8                   03360020
MOPROC   TM    F8WORK+3(ACT),X'40'                                      03380020
         BO    MOPOK                   OK TO CONTINUE IF 1              03400020
        B     PPRNT                     PRINT RECORD                    03420020
MOPOK    L     FRB,MACHOP(ACT)                                          03440020
         MVI   EJCTSW(ACT),X'57'       SET LEFT HALF RECORD FLAG ON     03460020
         BALR  CRR,ACT                                                  03480020
         B     PRINT                    GO TO COMMON EXIT THRU PRNT     03500020
ERLOD8   L     SP2,CTERRP(ACT)          ERROR WORK AREA ADDRESS         03520020
         MVC   F8WORK(36,ACT),0(SP2)    MOVE 36 ERROR REC CHARACTERS    03540020
         MVI   ERSWH(ACT),X'00'         TURN OFF ERROR WITCH            03560020
         B     F8OPND                   BYPASS TAPE INPUT               03580020
SRLIGN   LM    GRA,GRD,CTSAVE(ACT)                                      03600020
         STM   GRB,GRA,F8REGS                                           03620020
         STC   GRY,F8INST+15(ACT)                                       03640020
         OI    F8INST+15(ACT),X'C0'     ALIGNMENT AND DC FORMAT BITS    03660020
         MVC   F8INST(3,ACT),ALIGNT+1   UNALIGNED ADDRESS               03680020
         XC    F8INST+3(12,ACT),F8INST+3(ACT) XERO FOR ALIGNMENT        03700020
         L     FRB,PRNT(ACT)                                            03720020
         BALR  SRR,FRB                                                  03740020
         LM    GRB,GRA,F8REGS                                           03760020
         BR    SRR                                                      03780020
PPRNT    TM    WRAPT,X'FF'              WAS THERE WRAP AROUND           03800020
         BM    MLC10                    IF MIXED, WRAP AROUND OCCURRED  03820020
         TM    CTWRAPX(ACT),X'FF'       CHECK FOR WRAPAROUND            03840020
         BM    MLC10                    BRANCH IF NOT MIXED             03860020
         L         GR0,CTSEQ8(0,ACT)   TEST FOR STATEMENT 0             03865021
         LTR       GR0,GR0                                              03870021
         BZ        F8NTRY                                               03875021
         C         GR0,CTWRAP7(0,ACT)  DID THIS WRAP IN F7              03880021
         BNE   MLC11                    IF IT DID LOG AN ERROR          03900020
MLC10   L     SRB,CLOGER(ACT)          IF SO, LOG AN ERROR              03920020
         LA    SP1,0                                                    03940020
        BALR  SRR,SRB                  BRANCH TO LOGERROR               03960020
        DC    AL2(ERRWRP)              WRAP AROUND ERROR                03980020
        MVC   PPRNT(4),WRAPBLOT        DONT TEST ANY MORE WRAP AROUND   04000020
WRAPBLOT B    F8NTRY                   TRY NEXT RECORD                  04020020
MLC11    L     GR0,CTWRAPX(ACT)         CURRENT LOCATION COUNTER        04040020
         LTR   GR0,GR0                  TEST CTWRAPX FOR ZERO           04060020
         BZ    F8NTRY                   IF CTWRAPX ZERO, OK             04080020
         BCTR  GR0,0                    DID IT WRAP THIS TIME           04100020
         A     GR0,CTF8LNGT(ACT)        CURRENT INSTRUCTION LENGTH      04120020
         ST    GR0,CTWRAPX(ACT)         STORE FOR WRAP AROUND TEST      04140020
         TM    CTWRAPX(ACT),X'FF'       TEST HI ORDER BYTE              04160020
        BM    MLC10                    IF MIXED, WRAP AROUND ERROR      04180020
         LA    GR0,1(GR0)               WILL IT WRAP NEXT TIME          04200020
         ST    GR0,WRAPT                STORE TO TEST ON NEXT RECORD    04220020
        XC    CTF8LNGT(4,ACT),CTF8LNGT(ACT) ZERO INSTRUCTION LENGTH     04240020
        B     F8NTRY                   PROCESS NEXT RECORD              04260020
WRAPT    DC    F'0'                     LOCAL WRAP AROUND HOLDER        04280020
WRAPVALU DC   F'0'                                                      04300020
DUMMYCOM DC        X'00040029'         DUMMY COMMENT RECORD             04320023
ACTREG   DC    F'0'                    SAVE HOLE FOR ACT REGISTER       04340020
ALIGNT   DC    F'0'                     FOR ALLIGNMENT                  04360020
SECORG   DC    F'0'                     ORIGIN OF SECTION               04380020
WORDBB   DC    F'0'                                                     04400020
BYTES3   DC    X'00FFFFFF'             THREE BYTE MASK                  04420020
F8SEVN   DC    X'07'                    LOW THREE BITS OR SEVEN         04440020
F8REGS   DS    16F                      SAVE AREA FOR ALL 16 REGISTERS  04460020
ALIGNM   DS    2F                       TWO FULL WDS FOR LIGNMENT       04480020
*./      DELETE    SEQ1=04500020,SEQ2=04500020                          04500023
         ENTRY SRLINE                   ALIGNMENT ROUTINE               04520020
WKBKPT   EQU   CTXOFP                   PHASE 8 WORK BUCKET POINTER     04540020
SRLINE   EQU   SRLIGN             EQUATE INTERNAL/EXTERNAL NAMES        04560020
MPRNT    EQU   F8NTRY1                                                  04580020
ERRREC   EQU   X'10'                   ERROR RECORD TYPE 1              04600020
COMREC   EQU   X'20'                   COMMENT RECORD TYPE 2            04620020
COMGREC  EQU   X'30'                   GENERATED COMMENT RECORD TYPE 3  04640020
PROCREC  EQU   X'40'                   PROCESS ONLY RECORD TYPE 4       04660020
PCREC    EQU   X'60'                    TYPE 2 AND 4 RECORDS            04680020
PCGREC   EQU   X'70'                    TYPE 1,2,AND 3 RECORDS          04700020
SOURCE   EQU   X'70'                    SOURCE RECORDS                  04720020
LITRHEX  EQU   X'25'                    HEX OP FOR LITRAL               04740020
ERRWRP  EQU   7                         LOCATION COUNTER ERROR          04760020
ADBLDMG  DC    V(BLDIMG)               ADDR OF BUILD IMAGE IN F8PRINT   04780020
         END   ASMGF8C                                                  04800020
./ ADD NAME=ASMGF8D
F8D      TITLE     'ASMG F8  DC AND DS EVALUATION (DCEVAL)'             00020021
         ISEQ  73,78                                                    00040021
ASMGF8D  START     ,                    START OF DCEVAL FOR F8          00060020
         PRINT      NOGEN                                               00080020
         FDIMEN                                                         00100020
         PRINT GEN                                                      00120020
*                                                                     * 00140020
*TITLE 'ASMGF8D ' ...  DC AND DS EVALUATION                           * 00160020
*FUNCTION/OPERATION-                                                  * 00180020
*  ASMGF8D PROCESSES DC'S, DS'S, CXD'S, AND LITERAL DC'S. IT PROCESSES* 00200020
*   THE ENTIRE STATEMENT AND CALLS ASMGF8P TO PUT OUT THE RESULTS AS  * 00220020
*   MANY TIMES AS NECESSARY. ASMGF8D PROCESSES MULTIPLE CONSTANTS FOR * 00240020
*   ALL OPERANDS EXCEPT 'C', 'H', AND 'B'. RELOCATION DICTIONARY (RLD)* 00260020
*   ENTRIES ARE MADE FOR 'A', 'Y', 'V', AND 'Q' TYPE RELOCATABLE      * 00280020
*   CONSTANTS. THE FOLLOWING ERRORS ARE FOUND AND LOGGED-             * 00300020
*              INVALID DISPLACEMENT          INVALID REGISTER         * 00320020
*              DATA ITEM TOO LARGE           RELOCATABILITY           * 00340020
*              INVALID DELIMITER                                      * 00360020
*ENTRY POINTS-                                                        * 00380020
*  ASMGF8D- DC EVALUATION. CALLED VIA-                                * 00400020
*        L     SRB,CDCVAL(ACT)                                        * 00420020
*        BALR  SRR,SRB                                                * 00440020
*   RLDRTN- ENTER INTO RLD DICTIONARY. CALLED VIA-                    * 00460020
*        L     SRB,CDCVAL(ACT)                                        * 00480020
*        L     GR1,=V(RLDRTN)                                         * 00500020
*        BALR  SRR,GR1                                                * 00520020
*   STLOC- CONTAINS THE LOCATION COUNTER WHEN RLDRTN IS CALLED        * 00540020
*INPUT-                                                               * 00560020
*  FOR ASMGF8D, THE RIGHTMOST BYTE OF REGISTER GRZ IS SET AS FOLLOWS- * 00580020
*           00 = DS ---- FF = DC ---- MIXED = LITERAL DC              * 00600020
*           BYTES 0,1, AND 2 OF THE 16 WORD OUTPUT BUFFER, F8INST(ACT)* 00620020
*           CONTAINS THE CURRENT ALIGNED LOCATION COUNTER.            * 00640020
*   FOR RLDRTN- SEE THE RLD ROUTINE.                                  * 00660020
*OUTPUT- DONE BY ASMGF8P(PRNT) AND ASMGF8I(PUTRLD).                   * 00680020
*EXTERNAL ROUTINES-                                                   * 00700020
*   NAME         ROUTINE      USE                                     * 00720020
*   CEEVAL(ACT)  ASMGF8V      EXPRESSION EVALUATION                   * 00740020
*   CTRRTN(ACT)  ASMGRTA      RETURN                                  * 00760020
*   PRNT(ACT)    ASMGF8P      PRINT AND/OR PUNCH                      * 00780020
*   F8DCMP(ACT)  ASMGF8M      DE-COMPILE ROUTINE                      * 00800020
*   CCONV(ACT)   ASMGF8N      FIXED-FLOATING POINT CONVERSION         * 00820020
*   PUTRLD(ACT)  ASMGF8I      PUT OUT RELOCATION DICTIONARY           * 00840020
*   CLOGER(ACT)  ASMGF8L      LOG ERROR                               * 00860020
*EXITS- NORMAL                                                        * 00880020
*  FROM ASMGF8D VIA  B  CTRTRN(ACT)                                   * 00900020
*   FROM RLDRTN VIA  BR SRR                                           * 00920020
*   -ERROR-- NONE                                                     * 00940020
*TABLES/WORKAREAS-                                                    * 00960020
*   DCBRANCH   BRANCH TABLE TO PROCESS THE TYPE DC                    * 00980020
*   TEMP       RLD TABLE                                              * 01000020
*NOTES-                                                               * 01020020
*   IN THE GENERAL FLOW, ASMGF8D IS CALLED BY ASMGF8M AND RETURNS TO  * 01040020
*   ASMGF8C.                                                          * 01060020
*                                                                       01080020
* DCEVAL WILL PROCESS AN ENTIRE DC STATEMENT EACH PASS. THE PRINT       01100020
* ROUTINE, F8PRNT WILL BE CALLED BY DCEVAL AS MANY TIMES AS NECESSARY.  01120020
* THERE WILL BE ONE DC WORKBUCKET PER OPERAND IN THE STATEMENT AND EACH 01140020
* OPERAND MAY CONTAIN ONE OR MORE CONSTANTS. EXCEPTIONS ARE C,X, AND B  01160020
* TYPE DC'S WHICH MAY CONTAIN ONLY ONE CONSTANT PER OPERAND.            01180020
*                                                                       01200020
* RLD ENTRIES ARE REQUIRED FOR A,Y, AND V TYPE RELOCATABLE CONSTANTS.   01220020
* HOWEVER, NO RLD ENTRIES ARE MADE FOR ADCONS WITHIN A DSECT OR COMMON  01240020
* OR FOR ADCONS WHOSE OPERAND ADDRESS IS WITHIN A DSECT. RLD ENTRIES    01260020
* ARE NOT MADE FOR A AND V TYPE CONSTANTS WITH A LENGTH MODIFIER        01280020
* LESS THAN 3 BYTES, NOR FOR Y TYPE CONSTANTS WITH A LENGTH MODIFIER    01300020
* LESS THAN 2 BYTES. BIT LENGTHS ARE NOT ALLOWED WITH RELOCATABLE       01320020
* ADCONS.                                                               01340020
*                                                                       01360020
         EJECT                                                          01380020
         USING ENTER,SRB                                                01400020
         SPACE 2                                                        01420020
         ENTRY RLDRTN                   TO ALLOW FOR CCW ENTRIES        01440020
         ENTRY STLOC                       TO ALLOW FOR CCW ENTRIES     01460020
         SPACE 2                                                        01480020
R0       EQU   0                        REGISTER EQUATES                01500020
R1       EQU   1                        THE REGISTER RXX IS EQUATED     01520020
R2       EQU   2                        TO THE ACTUAL REGISTER XX       01540020
R3       EQU   ACT                      SOME ARE FOR FUTURE USE         01560020
R4       EQU   GRA                                                      01580020
R5       EQU   GRB                                                      01600020
R6       EQU   GRC                                                      01620020
R7       EQU   GRD                                                      01640020
R8       EQU   SRB                                                      01660020
R9       EQU   SRR                                                      01680020
R10      EQU   SP1                                                      01700020
R11      EQU   SP2                                                      01720020
R12      EQU   FRB                                                      01740020
R13      EQU   GRZ                                                      01760020
R14      EQU   GRX                                                      01780020
R15      EQU   GRY                                                      01800020
INVDPERR EQU   8                        INVALID DISPLACEMENT ERROR      01820020
INVRGERR EQU   10                       INVALID REGISTER SPECIFICATION  01840020
TOOBIGER EQU   17                       DATA ITEM TOO LARGE.            01860020
RELOCERR EQU   25                       RELOCATABILITY ERROR            01880020
ADDRERR  EQU   35                       ADDRESSABILITY ERROR            01890026
INVDELIM EQU   39                       INVALID DELIMITER ERROR         01900020
         EJECT                                                          01920020
ENTER    XC    BIT(5),BIT               SET BIT,BYTE,SW TO ZERO.        01940020
         MVI   RR+1,7                   SET BIT REMAINDER = 7           01960020
         LA    GRC,F8INST(ACT)          SET O/P PTR TO LOC CTR          01980020
         MVC   STLOC+1(3),0(GRC)        MOVE LOC CTR TO WORK AREA       02000020
         LA    GRC,3(GRC)               SET O/P PTR TO DATA BUFFER      02020020
         L     R1,CTEXTP(ACT)            GET PTR TO CURRENT TEXT RECORD 02040020
         CLI   4(R1),X'2C'               IS THIS A CXD INSTRUCTION      02060020
         BNE   NOCXD                     NO-BRANCH TO PROC. DC,DS OR LT 02080020
         LA    SP2,X'3C'                 SET RLD FLAG FOR CXD.          02100020
         XC    TEMP(36),TEMP             SET UP 4-BYTE VALUE AND 16     02120020
         MVI   TEMP+4,1                  2-BYTE PAIRS FOR RLD ROUTINE.  02140020
         MVI   TEMP+5,1                                                 02160020
         L     SP1,ADTEMP               LOAD POINTER TO VALUE           02180020
         BAL   SRR,RLDRTN                MAKE RLD ENTRY                 02200020
         LTR   R1,R1                     WAS RLD ENTRY MADE             02220020
         BZ    *+8                       NO, BRANCH                     02240020
         MVI   1(R1),0                   YES, SET REL-ID = 0            02260020
         MVI   LMV+3,32                  SET LMV = 32 BITS.             02280020
         BAL   FRB,KZERO                 MOVE LMV BITS TO O/P BUFF      02300020
         B     ZWEI25                    BRANCH TO DO O/P AND EXIT.     02320020
NOCXD    L     SP1,CTXOFP(ACT)           LOAD PTR TO 1ST DC BUCKET      02340020
         TM    0(SP1),4                  DOES 1ST OPND CONTAIN AN ERROR 02360020
         BO    CTRTRN(ACT)               YES, EXIT.                     02380020
         STC   GRZ,BYTEX                 00=DS FF=DC MIXED=LITERAL      02400020
         OI    F8YDC+1(ACT),1           SET EEVAL ADCON SWITCH.         02420020
         BAL   GRA,HSKP                 ALIGN DATA FROM DC BUCKET.      02440020
         TM    BYTEX,X'FF'                                              02460020
         BZ    DSCHECK                  BRANCH IF DS STATEMENT          02480020
         IC    R1,12(SP1)                GET ALIGN. FROM DC BUCKET      02500020
         SRL   R1,1                      POSITION ALIGNMENT BITS.       02520020
         N     R1,MASK3                  MASK ALIGNMENT BITS.           02540020
         LTR   R1,R1                                                    02560020
         BZ    EIN8                     BRANCH IF NO ALIGNMENT          02580020
         L     R2,STLOC                 SUBTRACT ALIGNMENT FROM         02600020
         SR    R2,R1                     LOCATION COUNTER AND STORE     02620020
         ST    R2,STLOC                   RESULT.                       02640020
         LA    GRC,F8INST(ACT)          RESET O/P POINTER.              02660020
AL2      MVC   0(3,GRC),STLOC+1         ALIGNMENT LOC CTR TO O/P BUFFER 02680020
         XC    3(7,GRC),3(GRC)          SET BYTES 4-10 OF O/P TO ZERO   02700020
         STC   R1,15(GRC)               NO. ALIGN. BYTES TO O/P BUFFER  02720020
         OI    15(GRC),X'80'            SET ALIGNMENT FLAG              02740020
         AR    R2,R1                    RESTORE ALIGNED                 02760020
         ST    R2,STLOC                  LOCATION COUNTER               02780020
         BAL   SRR,TSBPRT               PRINT ALIGNMENT LINE            02800020
         EX    R0,AL2                   ALIGNED LOC CTR TO O/P BUFFER   02820020
         LA    GRC,3(GRC)               SET O/P PTR TO DATA AREA.       02840020
EIN8     TM    12(SP1),1                TEST LENGTH MODIFIER TYPE       02860020
         BO    EIN19                    BRANCH IF BIT LENGTH            02880020
         TM    SW,1                     TEST 1ST OPERAND SWITCH         02900020
         BZ    EIN15                    BRANCH IF 1ST OPERAND           02920020
         CLI   RR+1,7                                                   02940020
         BE    EIN15                    BRANCH IF R = 7                 02960020
         BAL   R13,SUB1                 FILL O/P BYTE                   02980020
         MVI   RR+1,7                   SET R=7                         03000020
EIN15    L     R0,LMV                   CONVERT BYTE LENGTH TO BIT      03020020
         SLL   R0,3                     LENGTH                          03040020
         ST    R0,LMV                                                   03060020
         ST    R0,LMV+4                                                 03080020
EIN19    MVC   SAVWBP(4),CTXWBP(ACT)   UPDATE SYMBOL BKT PTR            03100020
         CLC   DUP(3),DUP+1            IS DUP. FACTOR INITIALLY ZERO    03120020
         BNE   EIN20                    NO                              03140020
         OI    SW,X'10'                 YES, SET ZERO DUP FAC SWITCH    03160020
         B     DSCHECK                  BRANCH TO DS ERROR CK. ROUTINE  03180020
EIN20    L     R1,LMV                                                   03200020
         M     R0,NN                    COMPUTE NEW R = (DNL+R)/8       03220020
         M     R0,DUP                    AND STORE RESULT.              03240020
         AH    R1,RR                                                    03260020
         LA    R2,7                                                     03280020
         NR    R1,R2                                                    03300020
         STC   R1,RR+1                                                  03320020
GETLMV   MVC   LMV(4),LMV+4             RESTORE LENGTH MODIFIER.        03340020
         SR    GRB,GRB                                                  03360020
         IC    GRB,9(SP1)               RELATIVE POINTER TO GRB         03380020
         A     GRB,F8OPRN(ACT)          ADD OPERAND POINTER             03400020
         L     R1,CTXWBP(ACT)           FETCH SYMBOL BUCKET POINTER.    03420020
         LTR   R1,R1                    ARE THERE ANY SYMBOL BUCKETS    03440020
         BZ    PTROK1                   NO, BRANCH.                     03460020
         SPACE 1                                                        03480020
* THIS ROUTINE USES EXPRESSION EVALUATION TO ADVANCE THE SYMBOL BUCKET  03500020
* POINTER PAST ALL MODIFIER SYMBOL BUCKETS IF THERE ARE ANY.            03520020
         SPACE 1                                                        03540020
         STM   SRB,SP1,SRBGRY           SAVE DCEVAL BASE & DCBKT PTR.   03560020
         L     SP1,F8OPRN(ACT)          FETCH OPERAND POINTER.          03580020
         NI        DURHAM1+1,X'0F'     SET LOOK FOR QUOTE=YES           03600020
RALEIGH  CR    SP1,GRB                  COMPARE OPND. PTR. TO ADJ. PTR. 03620020
         BE    PTROK                    BRANCH IF EQUAL.                03640020
         CLI       0(SP1),IQUOTE       IS IT A QUOTE                    03660020
         BE        DURHAM3             YES REVERSE SEARCH FOR QUOTE     03680020
DURHAM1  BC        0,DURHAM4           IF LOOK FOR QUOTE=NO,BRANCH      03700020
         CLI       0(SP1),ILPARN       IS IT A LEFT PARN                03720020
         BNE       DURHAM4             NO, CONTINUE SCAN                03740020
DURHAM2  LA        SP1,1(0,SP1)        SKIP OVER DELIMITER              03760020
         ST        GRX,SAV14           SAVE R14 FOR BIT LENGTHS         03770025
         L         SRB,CEEVAL(0,ACT)   LOAD EVAL BASE                   03780020
         BALR      SRR,SRB             CALL EVAL                        03800020
         USING     *,SRR               SET UP A TEMP BASE               03820020
         L         SRB,SRBGRY          RESTORE OUR BASE                 03840020
         DROP      SRR                 NO LONGER NEED SRR AS A BASE     03860020
         L         GRX,SAV14           RESTORE R14                      03870025
         CLI       0(SP1),IRPARN       IS IT A RIGHT PARN               03880020
         BNE       DURHAM2             NO, CALL EVAL AGAIN              03900020
         B         RALEIGH             YES, CONTINUE SCAN               03920020
DURHAM3  XI        DURHAM1+1,X'F0'     REVERSE LOOK FOR QUOTE           03940020
DURHAM4  LA        SP1,1(0,SP1)        STEP OPERAND POINTER             03960020
         B         RALEIGH             CONTINUE SCAN                    03980020
         SPACE 1                                                        04000020
PTROK    L     SP1,SRBGRY+8             RESTORE DCBKT POINTER.          04020020
PTROK1   LA    GRB,1(GRB)               STEP PAST LEFT DELIMITER.       04040020
         ST    GRB,POINT                STORE INCREMENTED POINTER       04060020
         NI    1(SP1),X'0F'             MASK 2ND BYTE OF DC BUCKET      04080020
         SR    R1,R1                                                    04100020
         IC    R1,1(SP1)                CODED DC TYPE TO R1             04120020
         AR    R1,R1                    MULTIPLY BY 2                   04140020
         LH    FRB,DCBRANCH(R1)         LOAD OFFSET RELATIVE TO CT      04160020
         BAL   SRR,CT(FRB)              BRANCH TO PROCESS DC BY TYPE    04180020
         OI    SW,1                     SET 1ST OPERAND SWITCH.         04200020
         TM    BYTEX,X'FF'                                              04220020
         BZ    ZWEI3                    BRANCH IF DS.                   04240020
         L     R1,DUP                                                   04260020
         BCTR  R1,0                     DECREMENT DUP FACTOR            04280020
         ST    R1,DUP                                                   04300020
         LTR   R1,R1                    ITER ATE UNTIL DUP FACTOR = 0   04320020
         MVC   CTXWBP(4,ACT),SAVWBP     RESTORE SYMBOL BUCKET POINTER.  04340020
         BNZ   GETLMV                  BRANCH IF DUP FACTOR NOT ZERO    04360020
ZWEI3    TM    0(SP1),X'48'             ANOTHER OPERAND TO FOLLOW       04380020
         BO    ZWEI4                    NO                              04400020
         LA    SP1,15(SP1)              YES, GET POINTER TO NEXT BUCKET 04420020
         TM    0(SP1),4                 DOES NEXT OPND HAVE AN ERROR    04440020
         BO    ZWEI4                    YES, PREPARE TO EXIT            04460020
         BAL   GRA,HSKP                 ALIGN DATA FROM DC BUCKET       04480020
         TM    BYTEX,X'FF'              IF DS STATEMENT, BRANCH TO DO   04500020
         BZ    DSCHECK                  DS PROCESSING. OTHERWISE,       04520020
         NI    SW,X'FD'                 ENABLE PRINT SWITCH.            04540020
         TM    12(SP1),X'0E'            TEST ALIGNMENT                  04560020
         BZ    EIN8                     BRANCH IF ZERO                  04580020
         CLI   RR+1,7                   FILL NEEDED                     04600020
         BE    ZWEI19                   NO, BRANCH                      04620020
         BAL   R13,SUB1                 YES, FILL O/P BYTE              04640020
         MVI   RR+1,7                   SET R=7                         04660020
ZWEI19   IC    GRY,12(SP1)              FETCH ALIGNMENT FROM DC BUCKET  04680020
         SRL   GRY,1                    RIGHT JUSTIFY                   04700020
         N     GRY,MASK3                MASK                            04720020
         SR    R14,R14                  SET WORKING BYTE TO ZERO        04740020
ZWEI20   BAL   R13,SUB2                 ONE ALIGNMENT BYTE TO O/P.      04760020
         BCT   GRY,ZWEI20               CONTINUE UNTIL DONE             04780020
         B     EIN15                    PROCESS NEXT OPERAND            04800020
ZWEI4    TM    BYTEX,X'FF'              IS THIS A DS STATEMENT          04820020
         BZ    DSPROC                   YES                             04840020
         TM    SW,X'10'                 WAS DUP FACTOR INITIALLY ZERO   04860020
         BO    DUPZERO                  YES, BRANCH.                    04880020
         CLI   RR+1,7                   DOES LAST BYTE NEED FILL        04900020
         BE    ZWEI25                   NO                              04920020
         BAL   R13,SUB1                 FILL LAST BYTE                  04940020
ZWEI25   LA    GRC,F8INST(ACT)          RESET O/P POINTER               04960020
         MVC   15(1,GRC),BYTE+1         MOVE BYTE COUNT TO O/P BUFFER   04980020
         L     R1,CTEXTP(ACT)           FETCH PTR TO CURRENT TEXT REC.  05000020
         CLI   4(R1),X'2B'              IS THIS A DXD INSTRUCTION.      05020020
         BNE   NODXD                    NO-BRANCH                       05040020
         MVI   15(GRC),X'0F'            YES-DONT PRINT LOCATION CTR.    05060020
NODXD    BAL   SRR,TSBPRT               PRINT O/P BUFFER.               05080020
         NI    F8YDC+1(ACT),X'FE'     RESET EEVAL ADCON SWITCH.         05100020
         MVC   CTLOC(4,ACT),STLOC       UPDATE CTLOC TO CURRENT VALUE   05120020
         B     CTRTRN(ACT)              EXIT FROM DCEVAL.               05140020
HSKP     MVC   DUP+1(3),5(SP1)          MOVE DUP FACTOR,NUMBER OF       05160020
         MVC   NN+3(1),8(SP1)            CONSTANTS, AND LENGTH MODIFIER 05180020
         MVC   LMV+2(2),13(SP1)           VALUE FROM DC WORK BUCKET TO  05200020
         MVC   LMV+6(2),13(SP1)            ALIGNED LOCATIONS AND        05220020
         BR    GRA                          RETURN TO USER.             05240020
         EJECT                                                          05260020
* THIS ROUTINE PROCESSES ALL OPERANDS IN A DS STATEMENT AND IN DC       05280020
* STATEMENTS WITH INITIAL DUP. FACTOR EQUAL ZERO. ERROR CHECKING IS     05300020
* DONE ONLY ON F,H,E,D,A,Y, AND S TYPE OPERANDS WHICH CONTAIN TEXT.     05320020
* ALL OTHER NECESSARY ERROR CHECKING HAS BEEN DONE IN PRIOR PHASES.     05340020
         SPACE 1                                                        05360020
DSCHECK  OI    SW,2                     SET SWITCH TO DISABLE PRINT     05380020
         TM    SW,1                     IS THIS 1ST OPERAND             05400020
         BO    DSCHECK1                 NO, BRANCH                      05420020
         MVC   HOLDLCTR(3),F8INST(ACT)  SAVE ALIGNED LOCATION COUNTER   05440020
DSCHECK1 TM    0(SP1),2                 DOES DS CONTAIN TEXT            05460020
         BZ    ZWEI3                    NO, LOOK FOR NEXT OPERAND.      05480020
         CLI   1(SP1),5                 IS THIS F,H,E,D,A,Y,V,OR S      05500020
         BL    ZWEI3                    NO, LOOK FOR NEXT OPERAND       05520020
         CLI   1(SP1),11                IS THIS A V-CON                 05540020
         BE    ZWEI3                    YES, LOOK FOR NEXT OPERAND      05560020
         TM    SW,X'10'                 IS THIS DC WITH DUP FAC = 0     05580020
         BZ    EIN8                     NO, BRANCH TO ERROR CHECK DS.   05600020
         MVI   DUP+3,1                  SET DUP FACTOR = 1              05620020
         B     GETLMV                   BRANCH TO CHECK DC, DUP FAC = 0 05640020
DSPROC   MVI   BYTE+1,X'F0'              SET DS FLAG FOR PRINT ROUTINE  05660020
         MVC   F8INST(3,ACT),HOLDLCTR   RESTORE ALIGNED LOCATION CTR.   05680020
DUPZERO  NI    SW,X'FD'                  ENABLE PRINT SWITCH            05700020
         B     ZWEI25                   BRANCH TO TERMINATE DS PROC.    05720020
         EJECT                                                          05740020
* PRINT ONE LINE AND RETURN ONLY IF THE PRINT SWITCH IS ENABLED.        05760020
         SPACE 1                                                        05780020
TSBPRT   TM    SW,2                     IS PRINT SWITCH ENABLED         05800020
         BCR   1,SRR                    NO, RETURN IMMEDIATELY.         05820020
         STM   SRB,GRY,SRBGRY           SAVE REGISTERS 8 THRU 15        05840020
         OI    15(GRC),X'40'            THIS IS A DC STATEMENT          05860020
         L     FRB,PRNT(ACT)            PRINT ROUTINE USES BASE FRB     05880020
         BALR  SRR,FRB                  AND RETURNS VIA SRR.            05900020
         USING *,SRR                    USE SRR AS BASE UNTIL           05920020
         LM    SRB,GRY,SRBGRY           WE CAN RESTORE OUR BASE         05940020
         DROP  SRR                      NO LONGER NEED SRR AS BASE      05960020
         BR    SRR                      EXIT                            05980020
         EJECT                                                          06000020
* THIS SUBROUTINE MOVES ONE WORK BYTE TO THE OUTPUT BUFFER. IF THE      06020020
* OUTPUT BUFFER IS ALREADY FULL, IT IS PRINTED FIRST, AND THE SUBJECT   06040020
* BYTE STARTS TO FILL THE OUTPUT BUFFER AGAIN. SUB1 IS SELF-EXPLANATORY 06060020
*                                                                       06080020
SUB1     LA    R1,7                7 TO R1                              06100020
         SH    R1,RR                    7-R                             06120020
         SLL   R14,0(R1)           PAD WORK BYTE WITH (7-R) ZERO BITS   06140020
SUB2     ST    SRR,TSBSRR               TO KEEP FROM GETTING LOST.      06160020
         CLI   BYTE+1,8                 IS OUTPUT BUFFER FULL           06180020
         BE    ZWEI8               YES - BRANCH                         06200020
ZWEI11   STC   R14,0(GRC)          WORK BYTE TO OUTPUT BUFFER           06220020
         LA    GRC,1(GRC)          INCREMENT OUTPUT POINTER             06240020
         IC    R2,BYTE+1                INCREMENT BYTE COUNT            06260020
         LA    R2,1(R2)                                                 06280020
         STC   R2,BYTE+1                SAVE BYTES IN F8INST            06300020
         L     R2,STLOC                 ADD 1 TO INTERNAL LOC. COUNTER  06320020
         LA    R2,1(R2)                                                 06340020
         ST    R2,STLOC                 SAVE INTERNAL LOCATION COUNTER  06360020
         L     SRR,TSBSRR               RESTORE SRR                     06380020
DIXON    MVI   BIT+1,0                  SET BIT COUNT = 0               06400020
         SR    R14,R14                  SET WORKING BYTE = 0            06420020
         BR    R13                      VAMOOSE *********************** 06440020
ZWEI8    LA    GRC,F8INST(ACT)          RESET OUTPUT POINTER            06460020
         MVI   15(GRC),8           8 TO OUTPUT COUNT                    06480020
         BAL   SRR,TSBPRT               PRINT OUTPUT BUFFER             06500020
         EX    R0,AL2                   LOC. CTR. TO O/P BUFFER         06520020
         LA    GRC,3(GRC)          ADD 3 TO OUTPUT COUNT                06540020
         MVI   BYTE+1,0                 SET BYTE COUNT=0                06560020
         B     ZWEI11                   CONTINUE PUTTING IN BYTE        06580020
         EJECT                                                          06600020
* THE KZERO SUBROUTINE CREATES OUTPUT FROM THE REVISED EDITED TEXT      06620020
* TRUNCATION HAS ALREADY BEEN DONE.                                     06640020
*                                                                       06660020
KZERO    TM    SW,2                     TEST PRINT SWITCH               06680020
         BCR   1,FRB                    BRANCH IF ON.                   06700020
KKZERO   LA    GRB,TEMP                 FETCH POINTER TO TEMP BUFFER.   06720020
SVN02    MVC   FULL(4),0(GRB)           ALIGN NEXT FOUR WORDS OF OPND   06740020
         L     R15,FULL                 FULL WORD TO ODD REGISTER       06760020
         XC    TSHIFT(2),TSHIFT         SET TOTAL SHIFT = 0             06780020
SVN03    LA    GRB,4(GRB)               ADD 4 TO TEMP POINTER.          06800020
SVN04    LA    R11,8               IS (8-BIT- GREATER THAN              06820020
         SH    R11,BIT              OR EQUAL TO LMV                     06840020
         L     R1,LMV                                                   06860020
         CR    R11,R1                                                   06880020
         BL    SVN10                    NO,BRANCH                       06900020
SVN05    SLDL  R14,0(R1)           YES, SHIFT LMV BITS TO WORK BYTE     06920020
         AH    R1,BIT                   LMV+BIT                         06940020
         STH   R1,BIT                   STORE NEW BIT COUNT             06960020
         CLI   BIT+1,8                  DOES BIT COUNT=8                06980020
         BNE   SVN09                    NO,BRANCH                       07000020
         BAL   R13,SUB2                 PUT IN BYTE                     07020020
SVN09    BR    FRB                      EXIT FROM OUTPUT ALGORITHM***** 07040020
SVN10    SLDL  R14,0(R11)          SHIFT (8-BIT) BITS TO WORK BYTE      07060020
         SR    R1,R11              LMV-(8-BIT)                          07080020
         ST    R1,LMV                   STORE NEW LMV                   07100020
         AH    R11,TSHIFT          TSHIFT+(8-BIT)                       07120020
         STH   R11,TSHIFT          STORE NEW TOTAL SHIFT                07140020
         BAL   R13,SUB2                 PUT IN BYTE                     07160020
         LA    R2,32                    (32-TSHIFT) GREATER THAN OR     07180020
         SH    R2,TSHIFT                 EQUAL TO 8                     07200020
         LA    R1,8                                                     07220020
         CR    R2,R1                                                    07240020
         BNL   SVN04                    YES,BRANCH                      07260020
         L     R1,LMV                   NO,(32-TSHIFT) GREATER THAN OR  07280020
         CR    R2,R1                     EQUAL TO LMV                   07300020
         BNL   SVN05                    YES,BRANCH                      07320020
         SLDL  R14,0(R2)           NO,SHIFT (32-TSHIFT) BITS            07340020
         SR    R1,R2                    LMV-(32-TSHIFT)                 07360020
         ST    R1,LMV                   STORE NEW LMV                   07380020
         AH    R2,BIT                   (32-TSHIFT)+BIT                 07400020
         STH   R2,BIT                   STORE NEW BIT COUNT             07420020
         B     SVN02                    AND CONTINUE PROCESSING         07440020
         EJECT                                                          07460020
* THE KNEG SUBROUTINE TRUNCATES THE REVISED EDITED TEXT **ON THE LEFT** 07480020
* IF NEEDED AND BRANCHES TO KZERO.                                      07500020
*                                                                       07520020
KNEG     TM    SW,2                     TEST PRINT SWITCH.              07540020
         BCR   1,FRB                    BRANCH IF ON.                   07560020
         STM   R6,R7,SAV2               SAVE                            07580020
         LH    R6,KX               KX TO EVEN REGISTER                  07600020
         LPR   R6,R6               SET KX POSITIVE                      07620020
         SRDL  R6,3                DIVIDE BY 8, REMAINDER TO R7         07640020
         LA    GRB,TEMP                 SET OPERAND POINTER             07660020
         AR    GRB,R6                   TRUNCATE OPERAND KX/8 BYTES     07680020
         SR    R6,R6                    CLEAR KX/8                      07700020
         SLDL  R6,3                     SHIFT IN REMAINDER              07720020
         EX    R0,SVN02                 FULL WORD TO ODD REGISTER       07740020
         L     R15,FULL                 FULL WORD TO ODD REGISTER       07760020
         SLL   R15,0(R6)           TRUNCATE BY KX/8 REMAINDER           07780020
         STC   R6,TSHIFT+1              TSHIFT=NO. OF TRUNC. BITS       07800020
         LM    R6,R7,SAV2               RESTORE                         07820020
         MVI   TSHIFT,0                 FIX FOR THE PHANTOM BULLDOGGER  07840020
         B     SVN03                    BRANCH TO CONTINUE PROCESSING.  07860020
         SPACE 3                                                        07880020
* THE KPOS SUBROUTINE PADS THE REVISED EDITED TEXT **ON THE LEFT**      07900020
* IF NEEDED AND BRANCHES TO KZERO.                                      07920020
*                                                                       07940020
KPOS     TM    SW,2                     TEST PRINT SWITCH               07960020
         BCR   1,FRB                    BRANCH IF ON.                   07980020
         LH    GRA,KX                   LOAD NUMBER OF BITS TO PAD.     08000020
         LA    R1,8                                                     08020020
         SH    R1,BIT                                                   08040020
         CR    R1,GRA                   IS KX LESS THAN (8-BIT)         08060020
         BNL   NINE04                   YES, BRANCH                     08080020
         SLL   R14,0(R1)                SHIFT WORK BYTE LEFT (8-BIT)    08100020
         SR    GRA,R1                   SUBTRACT AMT OF SHIFT FROM KX   08120020
         STH   GRA,KX                   STORE DECREMENTED KX            08140020
         L     R2,LMV                   SUBTRACT AMT OF SHIFT FROM LMV  08160020
         SR    R2,R1                                                    08180020
         ST    R2,LMV                   STORE DECREMENTED LMV           08200020
         BAL   R13,SUB2                 WORK BYTE TO TEMP BUFFER        08220020
         B     KPOS                     BRANCH TO CONTINUE PADDING      08240020
NINE04   SLL   R14,0(GRA)               SHIFT WORK BYTE LEFT KX BITS    08260020
         L     R2,LMV                   SUBTRACT AMT OF SHIFT FROM LMV  08280020
         SR    R2,GRA                                                   08300020
         ST    R2,LMV                   STORE DECREMENTED LMV           08320020
         AH    GRA,BIT                  ADD AMT OF SHIFT TO BIT COUNT   08340020
         STH   GRA,BIT                  STORE INCREMENTED BIT COUNT     08360020
         CLI   BIT+1,8                  DOES BIT COUNT = 8              08380020
         BNE   KKZERO                   NO,LEFT SIDE PADDING COMPLETE   08400020
         BAL   R13,SUB2                 YES, WORK BYTE TO TEMP BUFFER   08420020
         B     KKZERO                   BRANCH TO CONTINUE PROCESSING.  08440020
         EJECT                                                          08460020
* THIS SUBROUTINE PROCESSES CHARACTER TYPE DC STATEMENTS*************** 08480020
*                                                                       08500020
CT       LA    GRA,HEXBIN               COLLAPSE, TRANSLATE CHAR STRING 08520020
CLPSE    LA    GRD,TEMP                 LOAD PTR. TO TEMP BUFFER        08540020
TEN02    CLI   0(GRB),IQUOTE            IS 1ST CHAR. QUOTE              08560020
         BNE   AMP                      NO                              08580020
         CLI   1(GRB),IQUOTE            YES,IS 2ND CHAR. QUOTE          08600020
         BNE   LVN00                    NO, END OF CHARACTER STRING.    08620020
STOCH    MVC   0(1,GRD),0(GRB)          MOVE OPND. CHAR. TO TEMP BUFFER 08640020
         LA    GRB,2(GRB)               ADD 2 TO OPND. PTR.             08660020
TEN05    LA    GRD,1(GRD)               ADD 1 TO TEMP BUFFER PTR.       08680020
         B     TEN02                    LOOK AT NEXT CHAR. OF OPND.     08700020
AMP      CLI   0(GRB),IAMPSD            IS 1ST CHAR. AMPERSAND          08720020
         BE    STOCH                    YES, ASSUME 2ND AND CONTINUE.   08740020
NOAMP    EX    R0,STOCH                 STORE CHAR. NOT AMP. OR QUOTE   08760020
         LA    GRB,1(GRB)               ADD 1 TO OPND. PTR.             08780020
         B     TEN05                    BRANCH TO LOOK AT NEXT CHAR.    08800020
LVN00    ST    GRD,TPOINT               SAVE TEMP POINTER               08820020
         S     GRD,ADTEMP               GET TOTAL LENGTH                08840020
         LR    R1,GRD                   SAVE TOTAL LENGTH               08860020
         SLL   GRD,3                    MULTIPLY BY 8                   08880020
         L     R11,LMV             COMPUTE LMV-8(TOTAL LENGTH) = KX     08900020
         SR    R11,GRD                                                  08920020
         STH   R11,KX                   KEEP KX                         08940020
         BP    LVN05               BRANCH TO PAD                        08960020
TRNSLT   BCTR  R1,0                     DECR. TOTAL LENGTH TO TRANSLATE 08980020
         L     R2,CTRTBP(ACT)           LOAD POINTER TO TRANSLATE TABLE 09000020
         EX    R1,INTEXT                TRANSLATE TEMP BUFFER           09020020
         BR    GRA                      EXIT CLPSE SUBROUTINE********** 09040020
LVN05    LA    R11,7(R11)               ADD 7 TO KX                     09060020
         SRL   R11,3                    DIVIDE BY 8                     09080020
         L     GRD,TPOINT               LOAD TEMP POINTER               09100020
LOOPC    MVI   0(GRD),IBLANK            PAD TEMP BUFFER ON RIGHT SIDE   09120020
         LA    GRD,1(GRD)               WITH BLANKS                     09140020
         BCT   R11,LOOPC                LOOP TO COMPLETE PAD            09160020
         S     GRD,ADTEMP               GET TOTAL LENGTH                09180020
         LR    R1,GRD                   PADDED LENGTH TO REG. 1         09200020
         B     TRNSLT                   BRANCH TO TRANSLATE             09220020
INTEXT   TR    TEMP(0),0(R2)            INTERNAL TO EXTERNAL EBCDIC     09240020
         EJECT                                                          09260020
* THIS SUBROUTINE PROCESSES HEXADECIMAL TYPE DC STATEMENTS ************ 09280020
*                                                                       09300020
XT       LA    GRD,TEMP                 LOAD PTR. TO TEMP BUFFER        09320020
SIX00    CLI   0(GRB),IQUOTE            END QUOTE                       09340020
         BE    SVN00                    YES, BRANCH                     09360020
         SR    R0,R0                    CLEAR R0                        09380020
         IC    R0,0(GRB)                SOURCE CHAR. TO R0              09400020
         SLL   R0,4                     SHIFT LEFT 4                    09420020
         CLI   1(GRB),IQUOTE            NEXT CHAR. END QUOTE            09440020
         BE    SIX10                    YES, BRANCH                     09460020
         IC    R1,1(GRB)                LOGICAL OR                      09480020
         OR    R0,R1                     WITH PREVIOUS CHARACTER        09500020
         STC   R0,0(GRD)                STORE 2 HEX CHARS.              09520020
         LA    GRB,2(GRB)               ADD 2 TO SOURCE POINTER         09540020
         LA    GRD,1(GRD)               ADD 1 TO EDITED HEX. POINTER    09560020
         B     SIX00                    LOOP UNTIL OPERAND EXHAUSTED    09580020
SIX10    STC   R0,0(GRD)                STORE 1 HEX CHAR.               09600020
         LA    GRB,1(GRB)               ADD 1 TO SOURCE POINTER         09620020
SVN00    S     GRB,POINT                COMPUTE SOURCE LENGTH           09640020
         SLL   GRB,2                    MULTIPLY BY 4                   09660020
COMPKX   L     R11,LMV                   COMPUTE KX                     09680020
         SR    R11,GRB                                                  09700020
         STH   R11,KX                                                   09720020
         BP    NINE00                   KX IS PLUS, PAD                 09740020
         BM    SVN18                    KX IS MINUS, TRUNCATE           09760020
HEXBIN   BAL   FRB,KZERO                 NO PADDING OR TRUNCATION       09780020
         BR    SRR                      EXIT HEXADECIMAL SUBROUTINE**** 09800020
SVN18    BAL   FRB,KNEG                 NEGATIVE, TRUNCATE              09820020
         BR    SRR                      EXIT*************************** 09840020
NINE00   BAL   FRB,KPOS                 POSITIVE, PAD                   09860020
         BR    SRR                      EXIT*************************** 09880020
         EJECT                                                          09900020
* THIS SUBROUTINE PROCESSES BINARY TYPE DC STATEMENTS                   09920020
*                                                                       09940020
BT       LA    GRD,TEMP                 LOAD PTR. TO TEMP BUFFER        09960020
         SR    GRA,GRA                  SET BIT COUNTER = 0             09980020
SEARCH   CLI   0(GRB),IQUOTE            SEARCH OPERAND FOR END QUOTE    10000020
         BE    FOUND                    BRANCH WHEN FOUND               10020020
         CH    GRA,=H'8'                DOES BIT COUNT = 8              10040020
         BNE   FVE05                    NO                              10060020
         STC   R0,0(GRD)                YES, STORE WKBYTE IN TEMP BUFF. 10080020
         LA    GRD,1(GRD)               INCREMENT TEMP BUFFER PTR.      10100020
         SR    R0,R0                    SET WORKING BYTE = 0            10120020
         SR    GRA,GRA                  SET BIT COUNTER = 0             10140020
FVE05    SLL   R0,1                     SHIFT WKBYTE LEFT 1             10160020
         IC    R1,0(GRB)                LOGICAL OR OPERAND CHARACTER    10180020
         OR    R0,R1                    TO WORKING BYTE                 10200020
         LA    GRB,1(GRB)               INCREMENT OPERAND PTR.          10220020
         LA    GRA,1(GRA)               INCREMENT BIT COUNTER           10240020
         B     SEARCH                   GET NEXT CHARACTER              10260020
FOUND    LCR   GRA,GRA                  LEFT JUSTIFY WORKING BYTE       10280020
         SLL   R0,8(GRA)                                                10300020
         STC   R0,0(GRD)                STORE LAST BYTE IN TEMP         10320020
         S     GRB,POINT                COMPUTE LENGTH OF OPERAND       10340020
         B     COMPKX                   REST OF BINARY ROUTINE          10360020
*                                       SAME AS HEX ROUTINE             10380020
         EJECT                                                          10400020
* THIS SUBROUTINE PROCESSES PACKED AND ZONED TYPE DC STATEMENTS         10420020
*                                                                       10440020
PZ       NI    SW,X'F7'                 SET LAST CONSTANT SWITCH = 0    10460020
TWV00    L     GRD,=A(TEMP+20)          LOAD POINTER                    10480020
         MVI   CHTEMP+1,0               RESET PACKING SWITCH            10500020
         CLI   0(GRB),IPLUS             IS CHAR. +                      10520020
         BE    TWV04                    YES                             10540020
         CLI   0(GRB),IMINUS            NO, IS CHAR. -                  10560020
         BE    TWV04                    YES                             10580020
         B     TWV03                    NO                              10600020
TWV04    LA    GRB,1(GRB)               INCREMENT OPERAND PTR.          10620020
TWV03    CLI   0(GRB),IPRIOD            IS CHAR. DECIMAL POINT          10640020
         BNE   TWV06                    NO                              10660020
         LA    GRB,1(GRB)               YES, IGNORE IT                  10680020
TWV06    CLI   0(GRB),IQUOTE            IS CHAR. QUOTE                  10700020
         BE    TWV09                    YES                             10720020
         CLI   0(GRB),ICOMMA            NO, IS CHAR. COMMA              10740020
         BE    TWV10                    YES                             10760020
         MVC   0(1,GRD),0(GRB)          NO, MOVE CHAR. TO TEMP BUFFER   10780020
         LA    GRD,1(GRD)               INCREMENT TEMP BUFFER PTR.      10800020
         B     TWV04                    LOOP TO END OF CONSTANT.        10820020
TWV09    OI    SW,8                     SET LAST CONSTANT SWITCH = 1    10840020
TWV10    LA    GRB,1(GRB)               SET OP.PTR. TO START NEXT CONST 10860020
         L     GRA,POINT                LOAD PRESENT OPERAND PTR.       10880020
         ST    GRB,POINT                SAVE NEXT PTR.                  10900020
         CLI   1(SP1),I3                IS THIS DC PACKED OR ZONED      10920020
         BNE   ZONED                    BRANCH IF ZONED                 10940020
         SPACE 2                                                        10960020
* PROCESS PACKED DC. COLLAPSED TEXT STARTS AT TEMP+20                   10980020
* AND GETS PACKED INTO TEMP THRU TEMP+15.                               11000020
         SPACE 2                                                        11020020
         BCTR  GRD,0                    DECR. TEMP PTR. TO STORE SIGN   11040020
         BAL   FRB,TWV12                SET PROPER SIGN                 11060020
         S     GRD,=A(TEMP+20)          UNPACKED LENGTH - 1             11080020
         LA    GRD,1(GRD)               ADD 1                           11100020
         LA    GRA,15                   IS UNPACKED LENGTH > 15?        11120020
         CR    GRD,GRA                                                  11140020
         BNH   WEEP                     NO, BRANCH.                     11160020
         STC   GRD,CHTEMP+2             YES, SAVE TOTAL LENGTH,         11180020
         SR    GRD,GRA                  COMPUTE TL - 15,                11200020
         STC   GRD,CHTEMP+1             AND STORE.                      11220020
WEEP     LR    GRA,GRD                  SAVE LENGTH TO BE PACKED FIRST  11240020
         LA    GRD,2(GRD)               PACKED LENGTH =                 11260020
         SRL   GRD,1                    (UNPACKED LENGTH+2)/2           11280020
         STC   GRD,CHTEMP               SAVE PACKED LENGTH              11300020
         BCTR  GRD,0                    PACKED LENGTH-1                 11320020
         BCTR  GRA,0                    UNPACKED LENGTH-1               11340020
         SLL   GRD,4                    POSITION PACKED LENGTH          11360020
         OR    GRA,GRD                  LOGICAL OR TWO LENGTHS          11380020
         LA    GRD,TEMP                 PTR. TO TEMP BUFFER             11400020
         CLI   CHTEMP+1,0               IS SOURCE LENGTH > 15?          11420020
         BNE   BIGPACK                  YES, BRANCH TO PACK IT.         11440020
         EX    GRA,PACK                 NO, PACK FROM TEMP+20 TO TEMP.  11460020
         B     THTN00                                                   11480020
BIGPACK  MVI   TEMP,0                   SET TEMP = 0                    11500020
         EX    GRA,PACKA                PACK FROM TEMP+20 TO TEMP+1     11520020
         IC    GRA,CHTEMP               FETCH LENGTH ALREADY PACKED     11540020
         LR    GRD,GRA                  SET UP LENGTHS FOR EXECUTING    11560020
         SLL   GRD,4                    MVO INSTRUCTION.                11580020
         OR    GRA,GRD                                                  11600020
         EX    GRA,OFFSET               MOVE WITH OFFSET TEMP TO TEMP+1 11620020
         SR    GRA,GRA                  ZERO BOTH REGISTERS SO          11640020
         SR    GRD,GRD                    CHARACTER CAN BE INSERTED     11660020
         IC    GRD,CHTEMP               GET READY TO PACK REMAINING     11680020
         A     GRD,ADTEMP               15 SOURCE BYTES                 11700020
         IC    GRA,CHTEMP+1                                             11720020
         A     GRA,=A(TEMP+20)                                          11740020
         PACK  1(8,GRD),0(15,GRA)       PACK REMAINING 15 BYTES         11760020
         SR    R2,R2                                                    11780020
         IC    R2,CHTEMP+2              COMPUTE TOTAL PACKED LENGTH     11800020
         LA    R2,2(R2)                  AND STORE FOR FUTURE           11820020
         SRL   R2,1                     REFERENCE BY                    11840020
         STC   R2,CHTEMP                PACKING ROUTINE.                11860020
MOVAGAIN MVC   TEMP(17),TEMP+1          IF LENGTH OF 1ST PACK IS ODD,   11880020
         TM    CHTEMP+1,1               MOVE O/P DATA FROM TEMP+1 TO    11900020
         BO    THTN00                   TEMP. IF EVEN, MOVE O/P DATA    11920020
         EX    R0,MOVAGAIN              FROM TEMP+2 TO TEMP.            11940020
THTN00   TM    0(SP1),X'10'             DOES TEXT CONTAIN LMV           11960020
         BZ    THTN03                   NO                              11980020
         SR    R2,R2                    YES, COMPUTE KX,LMV-8(TL)       12000020
         IC    R2,CHTEMP                                                12020020
         SLL   R2,3                                                     12040020
         L     R1,LMV                                                   12060020
         SR    R1,R2                    R1 NOW = KX                     12080020
         STH   R1,KX                                                    12100020
         BM    THTN05                   BRANCH TO TRUNCATE ON LEFT      12120020
         BP    THTN06                   BRANCH TO PAD ON LEFT           12140020
THTN04   BAL   FRB,KZERO                NO PADDING OR TRUNCATION        12160020
THTN07   TM    SW,8                     IS DELIMITER QUOTE              12180020
         BCR   1,SRR                    YES, EXIT PZ ROUTINE*********** 12200020
         L     GRB,POINT                NO,LOAD PTR. TO NEXT CONSTANT   12220020
         EX    R0,GETLMV                RESTORE LENGTH MODIFIER.        12240020
         B     TWV00                    BRANCH TO PROCESS NEXT CONSTANT 12260020
THTN03   SR    GRD,GRD                                                  12280020
         IC    GRD,CHTEMP               SET LMV = TOTAL LENGTH IN BITS  12300020
         SLL   GRD,3                              FOR PACKED DC         12320020
         ST    GRD,LMV                  KEEP LENGTH OF MOVE             12340020
         B     THTN04                   BRANCH TO OUTPUT PACKED DC.     12360020
THTN05   BAL   FRB,KNEG                 GO TO LEFT TRUNCATION ROUTINE   12380020
         B     THTN07                   GO BACK TO MAIN FLOW            12400020
THTN06   BAL   FRB,KPOS                 GO TO LEFT PADDING ROUTINE      12420020
         B     THTN07                   GO BACK TO MAIN FLOW            12440020
TWV12    CLI   0(GRA),IMINUS            IS SIGN MINUS                   12460020
         BE    TWV14                    YES                             12480020
         OI    0(GRD),X'C0'             NO, SET SIGN PLUS               12500020
         BR    FRB                      RETURN                          12520020
TWV14    OI    0(GRD),X'D0'             SET SIGN MINUS                  12540020
         BR    FRB                      RETURN                          12560020
PACK     PACK  0(0,GRD),20(0,GRD)       VARIABLE LENGTH PACK            12580020
PACKA    PACK  1(0,GRD),20(0,GRD)       VARIABLE LENGTH PACK            12600020
OFFSET   MVO   TEMP+1(0),TEMP(0)      VARIABLE LENGTH MOVE WITH OFFSET  12620020
         SPACE 2                                                        12640020
* PROCESS ZONED DC. COLLAPSED TEXT STARTS AT TEMP+20.                   12660020
         SPACE 2                                                        12680020
ZONED    XC    TEMP(16),TEMP            SET 1ST 16 BYTES OF TEMP = 0    12700020
         S     GRD,=A(TEMP+20)          COMPUTE AND STORE TOTAL         12720020
         ST    GRD,LAST                 LENGTH FOR ZONED DC.            12740020
         LCR   R2,GRD                                                   12760020
          LA   R2,TEMP+16(R2)            RIGHT JUSTIFY ZONED DATA IN    12780020
         BCTR  GRD,0                    1ST 16 BYTES OF TEMP BUFFER.    12800020
         EX    GRD,MOVEX                                                12820020
         L     GRD,CTRTBP(ACT)          POINTER TO TRANSLATE TABLE      12840020
         TR    TEMP(16),0(GRD)          TRANSLATE 1ST 16 BYTES OF TEMP  12860020
         LA    GRD,TEMP+15                                              12880020
         NI    0(GRD),X'0F'             SET PROPER SIGN FOR ZONED DC.   12900020
         BAL   FRB,TWV12                PUT IN SIGN                     12920020
         TM    0(SP1),X'10'             DOES TEXT CONTAIN LMV           12940020
         BO    THTN08                   YES,BRANCH                      12960020
         L     GRD,LAST                 NO,SET LMV = TOTAL LENGTH IN    12980020
         SLL   GRD,3                    BITS FOR ZONED DC.              13000020
         ST    GRD,LMV                                                  13020020
THTN08   LA    R1,128                   TRUNCATE LMV-128 BITS OF 1ST    13040020
         L     GRD,LMV                  16 BYTES OF TEMP BUFFER AND     13060020
         SR    GRD,R1                   OUTPUT REMAINDER.               13080020
         STH   GRD,KX                                                   13100020
         BZ    THTN04                   NO PADDING OR TRUNCATION        13120020
         B     THTN05                   TRUNCATE                        13140020
MOVEX    MVC   0(0,R2),TEMP+20          VARIABLE LENGTH MOVE            13160020
         EJECT                                                          13180020
*        THIS SUBROUTINE PROCESSES A AND Y TYPE ADDRESS CONSTANTS       13200020
*                                                                       13220020
*                         -SPECIFICATIONS-                              13240020
*                                                                       13260020
*                                             A               Y         13280020
*                                                                       13300020
* IMPLIED LENGTH (BYTES)                4               2               13320020
* ALIGNMENT                             WORD            HALF WORD       13340020
* LENGTH MODIFIER RANGE (RELOCATABLE)   3-4             2-4             13360020
* LENGTH MODIFIER RANGE (ABSOLUTE)      .1-4            .1-4            13380020
* SPECIFIED BY                          ANY EXPRESSION  ANY EXPRESSION  13400020
* NUMBER OF CONSTANTS PER OPERAND       MULTIPLE        MULTIPLE        13420020
* TRUNCATION SIDE (NO PADDING ALLOWED)  LEFT            LEFT            13440020
*                                                                       13460020
AY       STM   SRR,SP1,SAVSRR           SAVE REGISTERS 9 AND 10.        13480020
         LR    SP1,GRB                  SET SP1 = PTR. TO 1ST CHAR.     13500020
AYE2     ST    SP1,ERRORPTR             SAVE PTR TO CONSTANT            13520020
         BAL   GRY,EXPRES               EVALUATE EXPRESSION.            13540020
         TM    ACONPT,X'30'             TEST CONDITION CODE FROM EEVAL  13560020
         BC    1,AYK1                   BRANCH IF CC=3 (EEVAL ERROR)    13580020
         BC    8,AYC3                   BRANCH IF CC=0 (ABS. EXP.)      13600020
         TM    ACONPT,X'20'            BRANCH IF EXPRESSION IS          13620020
         BC    1,AYE3                   COMPLEXLY RELOCATABLE           13640020
          XC   6(30,SP2),6(SP2)         SIMP.RELOC.,ZERO 2-16 RLD LIST  13660020
AYE3     L     SP1,SAVSP1               FETCH POINTER TO DC BUCKET.     13680020
         TM    12(SP1),1                EXPRESSION IS RELOCATABLE       13700020
         BO    AYA5                     BRANCH TO ERROR IF BIT LENGTH   13720020
AYD4     CLI   1(SP1),I9                IS THIS AN A-TYPE CONSTANT.     13740020
         BNE   AYC4                     NO, BRANCH TO Y-TYPE LOGIC.     13760020
         CLI   14(SP1),I3                YES, LOG ERROR IF LENGTH       13780020
         BL    AYC5                     MODIFIER LESS THAN 3 BYTES.     13800020
AYD5     SR    SP2,SP2                  PREPARE ARGUMENTS FOR RLD ENTRY 13820020
         IC    SP2,14(SP1)              GET LENGTH                      13840020
         BCTR  SP2,0                      MINUS ONE                     13860020
         SLL   SP2,2                      AND SHIFT OVER 2 BITS FOR RLD 13880020
         L     SP1,SPEVAL+4             POINTER TO PARAMETER TABLE      13900020
         BAL   SRR,RLDRTN               MAKE RLD ENTRY                  13920020
AYD6     LM    SP1,SP2,SPEVAL           RESTORE INFO FROM EEVAL         13940020
         L     SP2,0(SP2)               RELOC. VALUE TO SP2             13960020
AYC3     ST    SP2,TEMP                 ABS. OR RELOC. VALUE TO TEMP    13980020
         L     R2,SAVSP1                FETCH POINTER TO DC BUCKET.     14000020
         CLI   1(R2),I9                 IF THIS IS AN A-CON, DON'T      14020020
         BE    AYC2                      DARE FLAG IT. FLAG Y-CONS ONLY 14040020
         SLA   SP2,16                     IF LARGER THAN + OR -         14060020
         BC    14,AYC2                     HEX 7FFF.                    14080020
         MVI   XY+1,TOOBIGER            GOD HELP THE MAN WHO ACCIDENT-  14100020
         BAL   SRR,ERRLOG                LY GETS AN A-CON TRUNCATED.    14120020
AYC2     L     R2,LMV                   COMPUTE KX=LMV-32               14140020
         SH    R2,XXXII                                                 14160020
         STH   R2,KX                    STORE KX                        14180020
         BM    AYE4                     PADDING NOT POSSIBLE FOR ADCONS 14200020
         BAL   FRB,KZERO                NO TRUNCATION                   14220020
         B     AYK2                     BRANCH TO NEXT CONSTANT OR EXIT 14240020
AYE4     BAL   FRB,KNEG                 TRUNCATE                        14260020
         B     AYK2                     BRANCH TO NEXT CONSTANT OR EXIT 14280020
AYK1     SR    R1,R1                    PLACE LMV ZERO BITS IN          14300020
         ST    R1,TEMP                   OUTPUT STREAM.                 14320020
         BAL   FRB,KZERO                                                14340020
AYK2     CLI   0(SP1),ICOMMA            IS DELIMITER A COMMA            14360020
         BNE   AYK3                     NO, BRANCH TO EXIT              14380020
         LA    SP1,1(SP1)               YES, ADD 1 TO OPND PTR          14400020
         EX    R0,GETLMV                RESTORE LMV.                    14420020
         B     AYE2                     GO TO PROCESS NEXT CONSTANT.    14440020
AYA5     MVI   XY+1,RELOCERR            RELOCATABLE ADCON SPECIFIED BY  14460020
         BAL   SRR,ERRLOG               BIT LENGTH, LOG RELOC. ERROR    14480020
         B     AYK1                     ZERO BITS TO OUTPUT.            14500020
AYC5     MVI   XY+1,RELOCERR            LMV TOO SMALL FOR RELOCATABLE   14520020
         BAL   SRR,ERRLOG               ADCON, LOG RELOC. ERROR AND     14540020
         B     AYD6                     SKIP RLD ENTRY.                 14560020
AYC4     MVI   F8YDC(ACT),X'FF'         SET RELOCATABLE Y-CON IND.      14580020
         CLI   14(SP1),I2               PROCESS Y-TYPE RELOC. DC.       14600020
         BL    AYC5                      LOG AN ERROR MESSAGE AND SKIP  14620020
         B     AYD5                     RLD ENTRY IIF LMV LESS THAN 2.  14640020
AYK3     LM    SRR,SP1,SAVSRR           RESTORE REGISTERS 9 AND 10.     14660020
         BR    SRR                      EXIT AY ROUTINE**************** 14680020
         EJECT                                                          14700020
* THIS SUBROUTINE PROCESSES V AND Q TYPE ADDRESS CONSTANTS              14720020
*                                                                       14740020
VT       STM   SRR,SP1,SAVSRR           SAVE REGISTERS 9 AND 10         14760020
         LR    SP1,GRB                  SET SP1 = PTR. TO 1ST. CHAR.    14780020
VT1      ST    SP1,ERRORPTR             SAVE PTR TO NEXT CONSTANT       14800020
         BAL   GRY,EXPRES               EVALUATE EXPRESSION             14820020
         TM    ACONPT,X'30'             TEST CONDITION CODE FROM EEVAL  14840020
         BC    8,VT2                    TO PREVENT RLD FOR INVALID QCON 14860020
         SPACE 1                                                        14880020
* PREPARE ARGUMENTS FOR RLD ENTRY                                       14900020
         SPACE 1                                                        14920020
         L     R2,SAVSP1                RESTORE PTR. TO DC BUCKET       14940020
         LR    SP1,SP2                  PTR TO VALUE TO SP1             14960020
         SR    SP2,SP2                                                  14980020
         IC    SP2,14(R2)               GET LENGTH FROM DC BKT.         15000020
         BCTR  SP2,0                    SUBTRACT 1                      15020020
         CLI   1(R2),13                 TEST FOR QCON.                  15040020
         LA    R1,4                     SET FLAG = 1 = VCON             15050023
         BNE   VCONRLD                  VCON, SO EXIT                   15060023
         LA    R1,8                     SET FLAG = 2 = QCON             15080023
VCONRLD  OR    SP2,R1                   COMBINE TYPE & LENGTH           15100023
         SLL   SP2,2                    POSITION RLD FLAG               15120023
         BAL   SRR,RLDRTN               MAKE RLD ENTRY                  15140020
VT2      XC    TEMP(4),TEMP             SET 1ST 4 BYTES OF TEMP = 0     15160020
         BAL   FRB,KZERO                OUTPUT LMV ZERO BITS            15180020
         L     SP1,SPEVAL               RESTORE DELIMITER POINTER       15200020
         CLI   0(SP1),ICOMMA            IS DELIMITER A COMMA            15220020
         BNE   VT4                      NO, PREPARE TO EXIT             15240020
         LA    SP1,1(SP1)               YES, STEP OVER COMMA            15260020
         EX    R0,GETLMV                RESTORE LENGTH MODIFIER.        15280020
         B     VT1                       AND PROCESS NEXT CONSTANT.     15300020
VT4      LM    SRR,SP1,SAVSRR                                           15320020
         BR    SRR                      EXIT VT ROUTINE**************** 15340020
         EJECT                                                          15360020
*              THIS SUBROUTINE PROCESSES S TYPE ADDRESS CONSTANTS       15380020
*                                                                       15400020
*                               -SPECIFICATIONS-                        15420020
*                                                                       15440020
*                   IMPLIED LENGTH (BYTES)     2                        15460020
*                   ALIGNMENT              HALF WORD                    15480020
*                   LENGTH MODIFIER RANGE  2 ONLY                       15500020
*                   SPECIFIED BY           ONE ABSOLUTE OR RELOCATABLE  15520020
*                                          EXPRESSION, OR TWO ABSOLUTE  15540020
*                                          EXPRESSIONS                  15560020
*                   # CONSTANTS PER OPND   MULTIPLE                     15580020
*                   PADDING AND TRUNCATION NOT ALLOWED                  15600020
*                                                                       15620020
ST       STM   SRR,SP1,SAVSRR           SAVE REGISTERS 9 AND 10.        15640020
         LR    SP1,GRB                  SET SP1 = PTR TO 1ST EXPRESSION 15660020
STD2     ST    SP1,ERRORPTR             SAVE EXPRESSION POINTER         15680020
         BAL   GRY,EXPRES               EVALUATE EXPRESSION             15700020
         TM    ACONPT,X'30'             TEST CONDITION CODE FROM EEVAL  15720020
         BC    9,STA5                   BRANCH IF ABSOLUTE OR ERROR     15740020
         TM    ACONPT,X'20'                                             15760020
         BC    8,STA3                   BRANCH IF SIMPLY RELOCATABLE    15780020
         MVI   XY+1,RELOCERR            LOG RELOCATABILITY ERROR        15800020
         BAL   SRR,ERRLOG                                               15820020
         XC    TEMP(2),TEMP             SET 1ST 2 BYTES OF TEMP = 0.    15840020
         CLI   0(SP1),ILPARN            IS DELIMETER A LEFT PAREN       15860020
         BNE   STC4                     NO, ZERO TWO O/P BYTES NOW.     15880020
         SR    SP2,SP2                  YES, SET DISP=0, AND BRANCH TO  15900020
         B     STJ2                     PROCESS BASE-DISP. S-CON.       15920020
         SPACE 2                                                        15940020
* PROCESS ABSOLUTE S-CON.                                               15960020
         SPACE 2                                                        15980020
STA5     CLI   0(SP1),ILPARN            IF LEFT PAREN DELIMETER, ABS.   16000020
         BE    STJ2                     S-CON IS IN BASE-DISP FORM.     16020020
         SR    SP1,SP1                  IF NOT, ABS. S-CON MUST BE      16040020
         B     STB3                     DECOMPOSED.                     16060020
         SPACE 2                                                        16080020
* PROCESS SIMPLY RELOCATABLE S-CON.                                     16100020
         SPACE 2                                                        16120020
STA3     CLI   0(SP1),ILPARN            IF RELOC. S-CON DELIMITED BY    16140020
         BE    STJ3                      LEFT PAREN, BRANCH.            16160020
         LA    SP1,1                    SP1=1,RELOC---SP1=0,ABSOLUTE    16180020
STB3     STM   GRC,R14,TEMP             SAVE REGISTERS                  16200020
         OI    CTSCON(ACT),X'08'        INDICATE S-CON CALL TO DECOMP   16210026
         L     GRY,ERRORPTR             FETCH COLUMN PTR FOR DCMPSE.    16220020
         L     FRB,MACHOP(ACT)          PREPARE TO ENTER DECOMPOSITION  16240020
         L     SRB,F8DCMP(ACT)          ROUTINE.                        16260020
         BALR  SRR,SRB                  DECOMPOSE EXPRESSION            16280020
         USING *,SRR                                                    16300020
         LR    R1,SP2                   SAVE DECOMPOSED VALUE           16320020
         LM    GRC,R14,TEMP             RESTORE REGISTERS               16340020
         DROP  SRR                                                      16360020
         LR    SP2,R1                   DECOMPOSED VALUE TO SP2         16380020
         TM    CTSCON(ACT),X'04'        IS ADDR ERROR INDICATED .Q      16382026
         BZ    STC2                     BRANCH IF NOT                   16384026
         SR    SP2,SP2                  ZERO OUT DECOMP VALUE           16386026
         MVI   XY+1,ADDRERR             SET ERROR NUMBER                16388026
         BAL   SRR,ERRLOG               ADDRESSABILITY ERROR            16390026
STC2     NI    CTSCON(ACT),X'F3'        RESET S-CON SWITCH              16392026
STC3     STH   SP2,TEMP                 STORE IN TEMP BUFFER            16400020
STC4     BAL   FRB,KZERO                TEMP BUFFER TO O/P.             16420020
         L     SP1,SPEVAL               LOAD TEXT PTR. FROM EEVAL       16440020
STD3     CLI   0(SP1),ICOMMA            IS DELIMETER A COMMA            16460020
         BNE   STE4                     NO, PREPARE TO EXIT             16480020
         LA    SP1,1(SP1)               YES, STEP OVER COMMA, RESTORE   16500020
         EX    R0,GETLMV                 LMV AND BRANCH TO PROCESS      16520020
         B     STD2                       NEXT CONSTANT.                16540020
STE4     LM    SRR,SP1,SAVSRR           RESTORE REGISTERS 9 AND 10 AND  16560020
         BR    SRR                       EXIT S-CON ROUTINE************ 16580020
         SPACE 2                                                        16600020
* PROCESS S-CON WITH BASE-DISPLACEMENT SOURCE FORMAT.                   16620020
         SPACE 2                                                        16640020
STJ2     CL    SP2,=F'4095'             COMPARE DISPLACEMENT WITH MAX.  16660020
         BNH   STF2                     BRANCH IF OK.                   16680020
STJ3     MVI   XY+1,INVDPERR            OTHERWISE, LOG INVALID DIS-     16700020
         BAL   SRR,ERRLOG                PLACEMENT ERROR AND SET        16720020
         SR    SP2,SP2                    DISPLACEMENT=0.               16740020
STF2     ST    SP2,TEMP+100             SAVE DISPLACEMENT               16760020
         L     SP1,SPEVAL               LOAD TEXT POINTER FROM EEVAL.   16780020
         LA    SP1,1(SP1)               STEP OVER LEFT PAREN DELIMETER  16800020
         ST    SP1,ERRORPTR             SAVE TEXT POINTER.              16820020
         BAL   GRY,EXPRES               EVALUATE BASE REG. EXPRESSION   16840020
         TM    ACONPT,X'30'             TEST CONDITION CODE FROM EEVAL  16860020
         BC    8,STF1                   BRANCH IF BASE REG. ABSOLUTE.   16880020
         MVI   XY+1,INVRGERR            OTHERWISE LOG INVALID REGISTER  16900020
         BAL   SRR,ERRLOG                SPECIFICATION ERROR AND SET    16920020
         XC    SPEVAL+4(4),SPEVAL+4       REGISTER = 0.                 16940020
STF1     L     SP1,SPEVAL               LOAD TEXT POINTER FROM EEVAL.   16960020
         LA    SP1,1(SP1)               STEP OVER RIGHT PAREN.          16980020
         ST    SP1,SPEVAL               STORE TEXT POINTER              17000020
         L     SP2,SPEVAL+4             LOAD EVALUATED BASE REG. VALUE  17020020
         CL    SP2,=F'15'               COMPARE WITH MAXIMUM            17040020
         BNH   STB5                     BRANCH IF OK.                   17060020
         MVI   XY+1,INVRGERR            OTHERWISE LOG INVALID REGISTER  17080020
         BAL   SRR,ERRLOG                SPECIFICATION ERROR            17100020
         SR    SP2,SP2                    AND SET BASE = 0.             17120020
STB5     SLL   SP2,12                   POSITION BASE AND               17140020
         O     SP2,TEMP+100             LOGICAL OR WITH DISPLACEMENT    17160020
         B     STC3                     BRANCH TO O/P VALUE.            17180020
         EJECT                                                          17200020
* THIS SUBROUTINE PROCESSES ALL FIXED AND FLOATING POINT CONSTANTS      17220020
*                                                                       17240020
FHED     STM   SRR,SP1,SAVSRR           SAVE REGISTERS 9 AND 10         17260020
         LR    R1,GRB                   SET R1 = PTR TO 1ST CHARACTER   17280020
FHED01   ST    R1,ERRORPTR              SAVE TEXT POINTER               17300020
         STM   GRC,SRB,SRBGRY           SAVE BASE                       17320020
         L     SRB,CCONV(ACT)           LOAD CONVERSION RTN. BASE REG.  17340020
         BALR  SRR,SRB                  BRANCH TO CONVERSION ROUTINE    17360020
         USING *,SRR                    USE SRR AS BASE UNTIL           17380020
         LM    GRC,SRB,SRBGRY             SRB CAN BE RESTORED           17400020
         DROP  SRR                      SRB NOW RESTORED, DROP SRR BASE 17420020
         ST    R1,ACONPT                SAVE TEXT POINTER               17440020
         TM    0(GRZ),X'FF'             ERROR FLAG SET                  17460020
         BZ    FHED02                   NO                              17480020
         MVC   XY+1(1),0(GRZ)           YES, MOVE ERROR FLAG, SAVE PTR. 17500020
         ST    SP2,TEMP                 TO CONVERTED VALUE, AND BRANCH  17520020
         BAL   SRR,ERRLOG               TO ERROR ROUTINE.               17540020
         L     SP2,TEMP                 RESTORE PTR. TO CONVERTED VALUE 17560020
FHED02   MVC   TEMP(16),0(SP2)          MOVE CVT'D VALUE TO TEMP        17580023
         LA    R2,128                   SET KX TO TRUNCATE CVT'D        17600023
         S     R2,LMV                   VALUE ON THE LEFT.              17620020
         LCR   R2,R2                                                    17640020
         STH   R2,KX                                                    17660020
         BAL   FRB,KNEG                 TRUNCATE AND OUTPUT VALUE.      17680020
         L     R1,ACONPT                RESTORE TEXT POINTER            17700020
         CLI   0(R1),ICOMMA             IS DELIMETER A COMMA            17720020
         BNE   FHED03                   NO, PREPARE TO EXIT.            17740020
         LA    R1,1(R1)                 YES, STEP OVER COMMA.           17760020
         EX    R0,GETLMV                RESTORE LMV.                    17780020
         L     SP1,SAVSP1               RESTORE PTR TO DC BUCKET        17800020
         B     FHED01                   PROCESS NEXT CONSTANT.          17820020
FHED03   LM    SRR,SP1,SAVSRR           RESTORE REGISTERS 9 AND 10.     17840020
         BR    SRR                      EXIT FHED ROUTINE************** 17860020
         EJECT                                                          17880020
*                                                                     * 17900020
***                   RLD ROUTINE                                   *** 17920020
*                                                                     * 17940020
* SP1 = POINTER TO PARAMETER TABLE CREATED BY EXPRESSION EVALUATION   * 17960020
**      WHICH CONTAINS 16 2-BYTE ENTRIES AS FOLLOWS,                 ** 17980020
***         BYTES 0-3   ABSOLUTE VALUE OF RELOCATABLE EXPRESSION,   *** 18000020
****                    FULL WORD ALIGNED SIGNED INTEGER, FOLLOWED **** 18020020
*****                   BY ONE 2-BYTE ENTRY FOR EACH RELOCATABLE  ***** 18040020
****                    VALUE, CONTAINING                          **** 18060020
***                         BYTE 0 = SIGN                           *** 18080020
**                          BYTE 1 = ESD ID                          ** 18100020
* SP2 = 00XXLL00 WHERE XX = 00 FOR A & Y TYPE DC'S & CCW'S              18120023
*                         = 01 FOR V TYPE DC'S                          18140023
**                        = 10 FOR Q TYPE DC'S                          18150023
***                       = 11 FOR CXD'S                            *** 18160020
**                 AND LL = LENGTH OF CONSTANT MINUS ONE (IN BYTES)  ** 18180020
*                                                                     * 18200020
RLDRTN   CLC   CESDID(1,ACT),CTNDID+1(ACT)   IS DATA IN A DSECT         18220020
         BCR   2,SRR                          YES, RETURN NOW.          18240020
         CLC   CTCMSW(1,ACT),CESDID(ACT)    IS DATA IN COMMON           18260020
         BCR   8,SRR                          YES, RETURN NOW.          18280020
         TM    SW,2                     IS PRINT SWITCH ENABLED         18300020
         BCR   1,SRR                    NO, RETURN NOW.                 18320020
         STM   GRA,SP2,TEMP+100         SAVE REGISTERS 4 THRU 11        18340020
         LA    GRA,4(SP1)   ADJ PTR TO 16 PAIRS OF VALUES,MOVE TO GRA   18360020
         LA    GRB,16                   SET COUNT FOR LOOP              18380020
RLOOP    SR    GRC,GRC                                                  18400020
         CLI   1(GRA),0                 IS THIS ITEM TO BE IGNORED      18420020
         BE    RLOOPS                     YES                           18440020
         CLC   1(1,GRA),CTNDID+1(ACT)   IS ESD-ID IN A DSECT            18460020
         BH    RLDGOOF                       YES, LOG ERROR AND EXIT.   18480020
         L     SRB,CTXTIO(ACT)                                          18500020
         BAL   SRR,PUTRLD(SRB)          CALL PUTRLD FOR RLDPTR          18520020
         USING *,SRR                                                    18540020
         L     SRB,TEMP+116             RESTORE DCEVAL BASE REGISTER    18560020
         DROP  SRR                                                      18580020
ESDOK    MVC   0(1,SP1),CESDID(ACT)     SET POS.ID = CURRENT ID         18600020
ESDAOK   MVC   3(3,SP1),STLOC+1         SET RLD ADDR. = CURRENT LOC.CTR 18620020
         MVC   2(1,SP1),TEMP+131        SET FLAG IN RLD ENTRY           18640020
         CLI   0(GRA),1                  IS SIGN PLUS                   18660020
         BE    SKIP2                     YES                            18680020
         OI    2(SP1),2                 NO - SET MINUS INDICATOR        18700020
SKIP2    MVC   1(1,SP1),1(GRA)          SET REL ID(RLD) = REL ID(PAR)   18720020
RLOOPS   LA    GRA,2(GRA)               SET PAR PTR TO NEXT PAIR VALUES 18740020
         BCT   GRB,RLOOP                BRANCH TO PROCESS NEXT PAIR     18760020
         LR    R1,SP1                    RLD POINTER TO REG 1.          18780020
RLDEXIT  LM    GRA,SP2,TEMP+100         RESTORE REGISTERS 4 THRU 11     18800020
         BR    SRR                      EXIT RLD ROUTINE*************** 18820020
RLDGOOF   MVI   XY+1,RELOCERR            LOG RELOCATABILITY ERROR, SET  18840020
         BAL   SRR,ERRLOG                 R1 TO ZERO, AND EXIT.         18860020
         LA    R1,0                      R1=0 MEANS NO RLD ENTRY.       18880020
         B     RLDEXIT                                                  18900020
         EJECT                                                          18920020
* THIS IS A COMMON LINKAGE TO THE ERROR ROUTINE, LOGERR.                18940020
         SPACE 2                                                        18960020
ERRLOG   STM   SRB,SP1,SDW                                              18980020
         L     SP1,ERRORPTR             LOAD POINTER TO ERROR           19000020
         L     SRB,CLOGER(ACT)          LOAD LOGERR BASE REGISTER       19020020
         BALR  SRR,SRB                                                  19040020
XY       DC    AL2(0)                   ARGUMENT CONTAINING ERROR NO.   19060020
         USING XY,SRR                                                   19080020
         LM    SRB,SP1,SDW                                              19100020
         DROP  SRR                                                      19120020
         BR    SRR                      RETURN TO LOGERR USER.          19140020
         SPACE 2                                                        19160020
* THIS IS A COMMON LINKAGE TO THE EXPRESSION EVALUATION ROUTINE, EEVAL. 19180020
* CURRENT ESD-ID AND LITERAL ADJUSTMENT VALUE ARE ADJUSTED FOR LITERAL  19200020
* DC'S CONTAINING REFERENCE TO THE LOCATION COUNTER.                    19220020
         SPACE 2                                                        19240020
EXPRES   ST    SRB,SRBGRY               SAVE REGISTERS                  19260020
         STM   GRX,GRY,TEMP                                             19280020
         TM        BYTEX,X'FF'         WHAT TYPE OPERATOR               19300020
         BZ        NOLITDC             DS STATEMENT                     19320020
         L         GRD,CTXABP(0,ACT)   GET POINTER TO APPENDED FLD      19340020
         BM        LITDC               LITERAL DC                       19360020
*        A DC STATEMENT... CHANGE TXLOC SO EXPRESSION EVALUATION        19380020
*        WILL USE CORRECT VALUE FOR REFERENCES TO THE LOCATION          19400020
*        COUNTER WHEN EVALUATING ADCONS.                                19420020
         L         GRD,STLOC           GET ADJUSTED VALUE OF *          19440020
         S         GRD,F8CADJ(0,ACT)   REDUCE SO IT IS NOT ADJUST       19460020
         ST        GRD,ASTERISK        SAVE IT SO CAN MOVE IN           19480020
         L         GRD,CTXABP(0,ACT)   GET POINTER TO TXLOC             19500020
         MVC       0(3,GRD),ASTERISK+1 PUT IN CORRECT TXLOC             19520020
         B         NOLITDC             CONTINUE                         19540020
*                                                                       19560020
LITDC    CLI       3(GRD),0            DOES LIT HAVE AN *               19580020
         BE    NOLITDC                  NO, BRANCH.                     19600020
         MVC   CADJSAV(4),F8CADJ(ACT)     SAVE CUR. LIT. ADJ. VAL.      19620020
         MVC   F8CADJ(4,ACT),CTZERO(ACT)  SET IT TO ZERO.               19640020
         MVC   ESDIDSAV(1),CESDID(ACT)    SAVE CURRENT ESD-ID.          19660020
         MVC   CESDID(1,ACT),3(GRD)     SET CESDID = ESDID OF LITERAL   19680020
         L     R2,CADJBS(ACT)           SET CURRENT ADJUSTMENT VALUE    19700020
MCKAY    C     R2,CTADJEND(0,ACT)        EQUAL ADJUSTMENT VALUE FOR     19720020
         BNL   NOLITDC                    ASTERISK'S ESD.               19740020
         CLC   0(1,R2),CESDID(ACT)      IS THIS THE RIGHT ESD           19760020
         BE    MCKAYY                   YES, CONTINUE                   19780020
         LA    R2,4(R2)                 NO, LOOK AT NEXT ONE            19800020
         B     MCKAY                    BY LOOPING                      19820020
MCKAYY   MVC   F8CADJ+1(3,ACT),1(R2)    MOVE IN ESD BASE                19840020
NOLITDC  L     SRB,CEEVAL(ACT)          LOAD EEVAL BASE REGISTER AND    19860020
         BALR  SRR,SRB                  BRANCH TO EVALUATE EXPRESSION.  19880020
         USING *,SRR                    USE AS TEMP. BASE               19900020
         STM   SP1,SP2,SPEVAL           SAVE INFO FROM EEVAL.           19920020
         L     SRB,SRBGRY               RESTORE BASE                    19940020
         LM    GRX,GRY,TEMP             RESTORE REGISTER                19960020
         DROP  SRR                      DROP TEMP. BASE, SRB RESTORED   19980020
         BALR  R1,R0                    SAVE CONDITION CODE FROM        20000020
         ST    R1,ACONPT                 EEVAL.                         20020020
         TM    BYTEX,X'FF'              IS THIS A LITERAL DC.           20040020
         BCR   11,GRY                   NO, RETURN NOW.                 20060020
         CLI   3(GRD),0                 YES,DOES LIT. HAVE AN ASTERISK  20080020
         BCR   8,GRY                    NO, RETURN NOW.                 20100020
         MVC   CESDID(1,ACT),ESDIDSAV   YES, RESTORE CURRENT ESD-ID     20120020
         MVC   F8CADJ(4,ACT),CADJSAV    AND ADJUSTMENT VALUE.           20140020
         BR    GRY                      RETURN TO USER.                 20160020
         EJECT                                                          20180020
DCBRANCH DC    AL2(CT-CT)               CHARACTER DC.                   20200020
         DC    AL2(XT-CT)               HEXADECIMAL DC.                 20220020
         DC    AL2(BT-CT)                BINARY DC.                     20240020
         DC    AL2(PZ-CT)                PACKED DC.                     20260020
         DC    AL2(PZ-CT)               ZONED DC.                       20280020
         DC    AL2(FHED-CT)             DBL. PRECISION FLT. PT.         20300020
         DC    AL2(FHED-CT)             SNG. PRECISION FLT. PT.         20320020
         DC    AL2(FHED-CT)             FULL WORD DC.                   20340020
         DC    AL2(FHED-CT)             HALF WORD DC.                   20360020
         DC    AL2(AY-CT)               A-CON DC.                       20380020
         DC    AL2(AY-CT)               Y-CON DC.                       20400020
         DC    AL2(VT-CT)               V-CON DC.                       20420020
         DC    AL2(ST-CT)               S-CON DC.                       20440020
         DC    AL2(VT-CT)               Q-CON DC.                       20460020
         DC    AL2(FHED-CT)             EXTENDED FLT.PT L-CON           20470023
DUP      DC    F'0'           DUPLICATION FACTOR                        20480020
NN       DC    F'0'                     NUMBER OF CONSTANTS             20500020
LMV      DC    2F'0'                    LENGTH IN BITS                  20520020
ACONPT   DC    F'0'                     CONDITION CODE RETURNED - EVAL  20540020
STLOC    DC    F'0'                     LOCATION COUNTER FOR CCW RLD    20560020
POINT    DS    F                        PRESENT PNTER TO START OF OPRND 20580020
TPOINT   DC    F'0'                     TEMPARY POINTER SAVE AREA       20600020
ERRORPTR DC    F'0'                     POINTER TO ERRONEOUS EXPRESS.   20620020
ASTERISK DC    F'0'                     USED FOR INCREMENTING TXLOC.    20640020
CADJSAV  DS    F                        SAVE AREA FOR F8CADJ(ACT)       20660020
TEMP     DS    256C                     TEMPARY AREA - RLD TABLE        20680020
ADTEMP   DC    A(TEMP)                  ADDRESS OF TEMPARY AREA         20700020
MASK3    DC    F'7'                     MASK WITH 3 LOW ORDER BITS ON   20720020
TSBSRR   DS    F                        SUB1 AND SUB2 SAVE AREA FOR SRR 20740020
SDW      DS    2F                       SAVE AREA FOR ERROR LOG         20760020
FULL     DS    F                        FOR FULL WORD ALIGNMENT         20780020
SAV2     DS    2F                       RNEG REGISTER SAVE AREA         20800020
SRBGRY   DS    8F                       SAVE AREA FOR SRB THROUGH GRY   20820020
SAVSRR   DS    F                        SAVE AREA FOR RETURN            20840020
SAVSP1   DS    F                        SAVE AREA FOR POINTER           20860020
SAV14    DS    F                        SAVE AREA FOR REGISTER 14       20870025
LAST     DC    F'0'                     LENGTH FOR ZONED DC             20880020
SPEVAL   DS    2F                       RESULTS FROM EVAL               20900020
SAVWBP   DS    F                        SYMBOL BUCKET PTR. SAVE AREA    20920020
KX       DS    H                        LENGTH - 8 TIMES TOTAL LENGTH   20940020
TSHIFT   DC    H'0'                     NO. OF POSITIONS TO SHIFT       20960020
XXXII    DC    H'32'                    CONSTANT OF 32                  20980020
EIGHT    DC    H'8'                     CONSTANT OF 8                   21000020
RR       DC    H'0'                     BIT POSITION FOR NEXT BITS      21020020
BIT      DS    H                        BIT POSITION COUNTER            21040020
BYTE     DS    H                        BYTE POSITION COUNTER           21060020
SW       DC    X'00'                    GENERAL SWITCH                  21080020
*                                            01=FIRST OPERAND           21100020
*                                            02=DONT PRINT              21120020
*                                            08=NOT LAST CONSTANT       21140020
*                                            10=ZERO DUP FACTOR         21160020
CHTEMP   DS    CL3                      PACKING SWITCH                  21180020
HOLDLCTR DS    CL3                      ALIGNED LOCATION COUNTER        21200020
BYTEX    DS    C                        00=DS, FF= DC, MIXED= LITERAL   21220020
ESDIDSAV DS    C                        SAVE AREA FOR CESDID(ACT)       21240020
         LTORG                                                          21260020
         END   ASMGF8D                                                  21280020
./ ADD NAME=ASMGF8I
F8I      TITLE     'ASMG F8  INITIALIZATION AND I/O'                    00020021
         ISEQ      73,78                                                00030021
*./      DELETE    SEQ1=00040020,SEQ2=00120020                          00120022
         COPY      ASMGSET                                              00140020
ASMGF8I  START                                                          00160020
TEXTIO   EQU       ASMGF8I                                              00180020
         PRINT NOGEN                                                    00200025
         FDIMEN                                                         00220020
         PRINT GEN                                                      00240020
*TITLE- 'ASMGF8I '..PHASE F8 INITIALIZATION AND I/O ROUTINES          * 00260021
*FUNCTION/OPERATION                                                   * 00280020
*   PERFORMS INITIALIZATION FOR PHASE F8                              * 00300020
*   CONTAINS I/O ROUTINES FOR PHASE F8                                * 00320020
*ENTRY POINTS-                                                        * 00340020
*  ASMGF8....PERFORMS INITIALIZATION FUNCTIONS FOR PHASE F8           * 00360020
*  ASMGF8I...PROVIDES ACCESS TO THE FOLLOWING SUBROUTINES             * 00380020
*       (ENTRY) (NAME) (FUNCTION)                                     * 00400020
*        GTM   GETXTM   GET TEXT AND MOVE FOR F8                      * 00420020
*        GTP   GETP    POINT ROUTINE FOR INPUT BUFFER                 * 00440020
*        GETLA GETLAT   GET LITERAL ADJUSTMENT TABLE                  * 00460020
*        PUTRL PUTRLT   PUT RELOCATION TABLE                          * 00480020
*        PUTER PUTERR   PUT LOGICAL ERROR RECORD                      * 00500020
*        SYSL  SYSLIST  SYSTEM LIST FOR F8                            * 00520020
*        SYSO  SYSOUT   SYSTEM OUTPUT OF SYSPUNCH AND SYSGO           * 00540020
*        PHC   PHCLS    PHASE F8 CLOSE                                * 00560020
*    CALLING SEQUENCE FOR ASMGF8                                      * 00580020
*        XCTL  ,DE=(SRR)     I.E. EP=ASMGF8     CALL PHASE F8         * 00600025
*    CALLING SEQUENCE FOR ASMGF8I ROUTINES                            * 00620020
*        L     SRB,CTXIO(ACT)           SET UP BASE                   * 00640020
*        BAL   SRR,NAME(SRB)            CALL ROUTINE 'NAME'           * 00660020
*                                                                     * 00680020
*              CTXIO(ACT) CONTAINS THE ADDRESS OF ASMGF8I.'NAME' IS   * 00700020
*              EQUATED (IN FDIMEN MACRO) TO A DISPLACEMENT FROM IEUF8I* 00720020
*              AT THIS DISPLACEMENT IS A BRANCH INSTRUCTION TO THE    * 00740020
*              PARTICULAR ROUTINE IMPLIED BY THE 'NAME                * 00760020
*INPUT/OUTPUT PARAMETERS- SEE INDIVIDUAL ROUTINES                     * 00780020
*EXTERNAL ROUTINES-                                                   * 00800020
*   THE ADDRESSES OF THE FOLLOWING ROUTINES ARE PLACED IN THE         * 00820020
*   ASSEMBLER CONTROL TABLE (ACT)                                     * 00840020
*        (ROUTINE)   (DECK)         (ACT REFERENCE)                   * 00860020
*         ASMGF8D    ASMGF8D         CDVAL                            * 00880020
*         ASMGF8A    ASMGF8A         ASOPRO                           * 00900020
*         ASMGF8M    ASMGF8M         MACHOP                           * 00920020
*         ASMGF8P    ASMGF8P         PRNT                             * 00940020
*         TEXTIO     ASMGF8I         CTXTIO                           * 00960020
*         ASMGF8S    ASMGF8S         CSTGET                           * 00980020
*         ASMGF8V    ASMGF8V         CEEVAL                           * 01000020
*         ASMGF8L    ASMGF8L         CLOGER                           * 01020020
*         SRLINE     ASMGF8C         F8LIGN                           * 01040020
*         DCCOMP     ASMGF8D         F8DCMP                           * 01060020
*         F8AREX     ASMGF8M         F8EXPX                           * 01080020
*         SECSET     ASMGF8A         F8STSC                           * 01100020
*         ASMGF8N    ASMGF8N         CCONV                            * 01120020
*         COMMENT    ASMGF8P         CTCOMT                           * 01140020
*         BLDIMG     ASMGF8P         CTBLDG                           * 01160020
*EXITS-                                                               * 01180020
*  ASMGF8...BRANCHES TO MAIN LINE CONTROL ASMGF8C                     * 01200020
*   PGCLS...XCTL  ,DE=(SRR)    I.E. EP=ASMGFPP  GO TO POST PROCESSOR  * 01220025
*   ALL OTHERS... RETURN CONTROL TO CALLER                            * 01240020
*TABLES/WORKAREAS-                                                    * 01260020
*        ASSEMBLER CONTROL TABLE  (SEE ASMGRTA)                       * 01280020
*        RLDTAB,ERRTAB... I/O DEVICES TABLE AREA                      * 01300020
*        F8CT2...FUNCTIONAL ROUTINE BASE/ENTRY ADDRESSES              * 01320020
*        F8CT3...COMMON SUBROUTINE BASE/ENTRY ADDRESSES               * 01340020
*                                                                     * 01360020
         EJECT                                                          01380020
         ENTRY     ASMGF8              MAIN ENTRY TO F8                 01400020
         EXTRN ASMGF8C                  MAIN LINE CONTROL               01420020
         EXTRN ASMGF8M                  MACHINE OP-CODE                 01440020
         EXTRN ASMGF8A                  ASSEMBLER OP-CODE               01460020
         EXTRN ASMGF8P                  PRINT                           01480020
         EXTRN ASMGF8D                  DC EVALUATION                   01500020
         EXTRN ASMGF8S                  SYMBOL TABLE                    01520020
         EXTRN ASMGF8V                  EXPRESSION EVALUATION           01540020
         EXTRN ASMGF8L                  LOG ERROR                       01560020
         EXTRN SRLINE                   ALIGNMENT SUBROUTINE            01580020
         EXTRN DCCOMP                   DECOMPOSITION SUBROUTINE        01600020
         EXTRN F8AREX                   ABSOLUTE AND RELOCATABLE EVAL   01620020
         EXTRN SECSET                   SET SECTION NUMBER ROUTINE      01640020
         EXTRN ASMGF8N                  FLOATING POINT DECIMAL CONVERT  01660020
         EXTRN COMMENT                  PRINT COMMENTS                  01680020
         EXTRN BLDIMG                   BUILD PRINT IMAGE               01700020
*./      DELETE    SEQ1=01720020,SEQ2=01820020                          01820026
*                                                                       01822025
L3C      EQU   3                        INCREMENT FOR GRA               01823025
L4A      EQU   4                        OFFSET IN AN AREA               01824025
L2       EQU   2                        NUMBER OF BYTES TO MOVE         01825025
L3D      EQU   3                        OFFSET IN AN AREA               01826025
L2A      EQU   2                        NUMBER OF BYTES TO MOVE         01827025
MKH      EQU   X'0F'                    MNOTE MASK                      01828025
MKI      EQU   X'80'                    LAST RECORD MASK                01829025
L1       EQU   1                        OFFSET IN AN AREA               01830025
L4B      EQU   4                        NUMBER OF BYTES TO MOVE         01831025
L2B      EQU   2                        NUMBER OF BYTES TO MOVE         01832025
L1A      EQU   1                        INCREMENT FOR GR1               01833025
L3E      EQU   3                        INCREMENT FOR GR1               01834025
INCR     EQU   516                      INCREMENT FOR GR1               01835025
L2C      EQU   2                        NUMBER OF BYTES TO MOVE         01836025
L8B      EQU   8                        RECORD I.D.                     01837025
L0       EQU   0                        RECORD ERROR I.D.               01838025
         EJECT                                                          01840020
         USING *,SRB                                                    01860020
         DC    H'0'                     BASE REFERENCE                  01880020
         B     GTP                      GET POINT SUBROUTINE            01900020
         B     GTM                      GET TEXT AND MOVE SUBROUTINE    01920020
         B     PUTX                     PUT SOURCE IN TERM BUFFER       01940025
         DS    2H                       DUMMY DISPLACEMENT FOR F/8      01960020
         DS    2H                       DUMMY DISPLACEMENT              01980020
         BC    15,PHC                   PHASE FINALIZATION              02000020
         DS    2H                       DUMMY DISPLACEMENT              02020020
         DS    2H                       DUMMY DISPLACEMENT              02040020
         DS    2H                       DUMMY DISPLACEMENT              02060020
         DS    2H                       DUMMY DISPLACEMENT              02080020
         B     PUTRL                    PUT RLD                         02100020
         B     GETLA                    GET LAT                         02120020
         B     PUTER                    PUT ERROR                       02140020
         B     SYSL                     SYSLIST D54                     02160020
         B     SYSO                     SYSOUT  D58                     02180020
         EJECT                                                          02200020
*  GETXTM-GET TEXT AND MOVE FOR F/8                                     02220020
*        SUBROUTINE RETRIEVES LOGICAL RECORD FROM INPUT                 02240020
*         TEXT STREAM AND STORES IN AREA SPECIFIED BY USER.             02260020
*        ENTER WITH FBA OF WORK AREA IN SP1                             02280020
*        EXIT WITH SP1 ZERO IF EOF READ                                 02300020
         SPACE 2                                                        02320020
GTM      STM       GRA,GRC,SAVE        SAVE REGISTERS                   02340026
         L         GRA,IBUFCPT         POINTER                          02360022
         BAL   GRZ,GTP                  GET POINT IN INPUT BUFFER       02380020
         BC    8,GTMX+2                 EOF READ RETURN                 02400020
         MVC   RLI(2),0(GRA)            MOVE TO HALFWORD BOUNDARY       02420020
         LR    GR2,SP1                                                  02440020
         LH    GRB,RLI                  FIRST SEG RLI                   02460026
         LR    GR1,GRA                  PTR                             02480022
         BAL   GRC,MOVE                 MOVE TO (GR2)                   02500026
GTMX     LTR   SP1,SP1                  SET EOF CC                      02520020
         ST        GRA,IBUFCPT                                          02540022
         LM        GRA,GRC,SAVE         RESTORE REGISTERS               02560026
         BR    SRR                      EXIT                            02580020
         EJECT                                                          02600020
*  GETPT-GET POINT FOR F/8                                              02620020
*        SUBROUTINE POINTS TO NEXT LOGICAL RECORD OF THE TEXT           02640020
*                  STREAM IN THE INPUT BUFFER.                          02660020
GTP      CLI   RD1,1                    NO DATA SW SET                  02680020
         BE    GT5                      IF YES, GO TO GT5               02700020
         BH    GTA                      IF SET TO NEED-NEW-DATA TO GTA  02720020
         MVC   RLI(2),0(GRA)            MOVE TO HALFWORD BOUND          02740022
         AH    GRA,RLI                                                  02760022
GT1      TM    2(GRA),X'80'             LAST RECORD BIT SET             02780022
         BZ    GTX                      IF NO, TO GTX                   02800022
         MVI   RD1,2                    SET FOR NEED-NEW-DATA ON NXT E  02820020
GTX      LTR   GRA,GRA                  SET EOF CC                      02840020
         BR    GRZ                      EXIT                            02860020
*./      DELETE    SEQ1=02880020,SEQ2=02940020                          02940022
GT5      SR    GRA,GRA        EOF NO DATA EXIT                          02960020
         BR    GRZ                      EXIT                            02980020
GTA      MVI   RD1,0                    CLEAR NEED DATA SW              03000022
         BAL   GRC,TEXTIN               READ TEXT                       03020026
         L     GRA,RDADD               RESET POINTER                    03040022
         CLC   0(4,GRA),EOF             HAS EOF BEEN READ               03060022
         BE    GT10                     IF YES, GO TO GT10              03080022
         B     GT1                      RETURN FOR NXPT                 03100022
*./      DELETE    SEQ1=03120020,SEQ2=03520020                          03520022
GT10     MVI   RD1,1                    SET NO-DATA ENTRANCE SWITCH     03540020
         B     GT5                      EXIT                            03560020
*./      DELETE    SEQ1=03580020,SEQ2=03620020                          03620022
         EJECT                                                          03640020
* SUBROUTINE TO MOVE ANY SIZE BLOCK FROM (GR1) TO (GR2)                 03660020
MOVE     S     GRB,=F'256'              NUMBER OF BYTES GT 256 .Q       03680026
         BP    M1                       IF YES, GO TO M1                03700020
         LA    GRB,255(,GRB)            DESCREASE LITERAL COUNT BY 1    03720026
         EX    GRB,M2                   EXECUTE MVC                     03740026
         LA    GRB,1(,GRB)              INC COUNT TO LITERAL COUNT      03760026
         AR    GR1,GRB                  ADVANCE SOURCE POINTER          03780026
         AR    GR2,GRB                  ADVANCE DESTINATION POINTER     03800026
         BR    GRC                      RETURN TO CALLER                03820026
M1       MVC   0(256,GR2),0(GR1)        MOVE 256 BYTES                  03840020
         LA    GR1,256(,GR1)            ADVANCE SOURCE PTR BY 256       03860026
         LA    GR2,256(,GR2)            ADVANCE DESTINATION PTR BY 256  03880026
         B     MOVE                     RETURN TO MOVE                  03900020
M2       MVC   0(*-*,GR2),0(GR1)        EXECUTED MOVE                   03920026
         EJECT                                                          03940020
* GET LITERAL ADJUSTMENT TABLE-PHASE F/8                                03960020
GETLA    L     SP1,LABPTR               LAT LOGICAL REC PTR             03980020
         L         SP1,16(0,SP1)       POINT AT NEXT LAT ENTRY          04000020
         LTR       SP1,SP1                                              04020020
         BCR       8,SRR                EOF EXIT                        04040020
         ST    SP1,LABPTR                                               04060020
         BR    SRR                      EXIT                            04080020
         EJECT                                                          04100020
* PUT RELOCATION DICTIONARY-PHASE F/8                                   04120020
PUTRL    L     SP1,RLDPTR               RLD LOGICAL RECORD POINTER      04140020
         CL    SP1,RLDLBA               PTR EXCEED BUFFER               04160020
         BL    PUTRL2                   NO TO PUTRL1                    04180020
         LA    GR1,RLDTAB               RLD IO PARAMETER TABLE          04200020
         BAL   SP2,WROF                 WRITE OVERFLOW FILE             04220020
         L     SP1,RLDTAB+4             BUFFER PTR                      04240020
         LA    SP1,1(SP1)               FIRST LOGICAL RECORD            04260020
PUTRL2   LR    GR1,SP1                                                  04280020
         LA    GR1,6(GR1)               ADVANCE TO NEXT LOGICAL REC     04300020
         ST    GR1,RLDPTR                                               04320020
         BR    SRR                      EXIT                            04340020
RLDTAB   DC    F'0'                     FIRST BLOCK PTR                 04360020
         DC    A(RLDBUF)                BUFFER ADDRESS                  04380020
         DC    F'121'                   LENGTH                          04400020
         DC    H'0'                     BLOCK COUNT                     04420020
         DC    X'1'                     FIRST TIME SWITCH               04430025
         EJECT                                                          04430525
* PUTX IS USED IF TERM OPTION IS SPECIFIED                              04431025
* TERM BUFFER IS PLACED IN CORE                                         04431525
* CONTROL IS GIVEN TO WROF WHEN THE BUFFER IS FILLED (6 RECORDS)        04432025
* AND NO ERROR RECORD FOUND                                             04432525
* WHEN ERROR RECORD FOUND, CONTROL GOES FROM F8P                        04433025
* TO WROF VIA PUTER                                                     04433525
* SP1 CONTAINS POINTER TO SOURCE RECORD                                 04434025
* SP2 CONTAINS FLAGA BYTE VALUE                                         04434525
*                                                                       04435025
GEN      EQU   X'30'                    POSITION IN FLAGA               04435525
CONT     EQU   X'02'                    POSITION IN FLAGA               04436025
TERM     EQU   X'08'                    POSITION IN L1PARBYT2           04436525
SRCLN    EQU   86                       STMT(5)+GEN/BLANK(1)+SOURCE(80) 04437025
PUTX     TM    CTTRMI(ACT),TERM         TERM OPTION REQUIRED            04437525
         BCR   8,SRR                    NO, THEN RETURN                 04438025
         STM   GRA,GRC,SAVE             YES, SOURCE TXT IN BUFFER       04438525
         STH   SP2,FLAGA                TYPE OF RECORD INDICATOR        04439025
         LM    GRA,GRC,TRPARM           GET FORMER INFORMATION          04439525
         TM    FLAGA,CONT               IS CONTINUATION BIT ON .Q       04440025
         BO    PUTX5                    YES, CHECK IF ENOUGH ROOM       04440525
         TM    TSTSW,NOPRT              IS BUFFER WRITTEN .Q            04441025
         BZ    PUTX2                    YES, ERROR HAS OCCURRED         04441525
         TM    TSTSW,NSTMT              ERRORS IN PRECEEDING STMT .Q    04442025
         BO    PUTX2                    NO, IGNORE STMT (1 BFR)         04442525
         TM    TSTSW,NALL               LAST BUFFER WRITTEN .Q          04443025
         BZ    PUTX1                    NO, WRITE BUFFER NOW            04443525
         OI    TSTSW,POINT              YES, SCRATCH WRITTEN STMT       04444025
         B     PUTX2                    CONTINUE                        04444525
*                                                                       04445025
PUTX1    BAL   GR2,PUTX7                WRITE BUFFER                    04445525
PUTX2    OI    TSTSW,NSTMT+NALL         INDICATE NEW STMT               04446025
         NI    TSTSW,ALL-CONTB          RESET SWITCHES                  04446525
PUTX3    L     GRA,TRMTAB               SET UP BUFFER BASES             04447025
         LA    GRA,L3C(,GRA)            BUMP POINTER                    04447525
         SR    GRB,GRB                  LENGTH OF ALREADY MOVED SOURCE  04448025
         MVC   L4A(L2,GRC),CTSEQ8+2(ACT)  PICK UP STATEMENT NUMBER      04448525
         XC    0(L2,GRC),0(GRC)         SET ERLI TO ZERO                04449025
         NI    2(GRC),ALL-MKI           UNSET LAST RECORD BIT     V7A30 04449228
         TM    TSTSW,CONTB              CONT IF MORE THAN 6 RECORDS     04449525
         BO    PUTX4                    YES, FILL FROM BEGINNING        04450025
         TM    FLAGA,GEN                IS SOURCE GENERATED .Q          04450525
         BZ    PUTX9                    NO, IS IT MNOTE                 04451025
PUTX3A   TM    TSTSW,MSAVE+CBGEN        RESTORE FIRST SRC RECORD .Q     04451525
         BZ    PUTX3B                   NO, NOT NECESSARY               04452025
         MVC   0(SRCLN,GRA),TEMPBUF     YES, RESTORE IT FROM TEMPBUF    04452525
PUTX3B   LA    GRA,SRCLN(,GRA)          GEN SOURCE AFTER FIRST          04453025
*                                       MACRO INSTRUCTION CARD          04453525
         LA    GRB,SRCLN                TRLI WILL COVER 1ST CARD        04454025
PUTX4    MVC   0(SRCLN,GRA),0(SP1)      MOVE SOURCE TO BUFFER           04454525
         LA    GRA,SRCLN(,GRA)          NEXT AVAILABLE LOCATION         04455025
         LA    GRB,SRCLN(,GRB)          TRLI                            04455525
         OI    TSTSW,NOPRT              YES, INDICATE THIS              04456025
         STM   GRA,GRB,TRPARM           POINTERS OF TERM BUFFER         04456525
         LM    GRA,GRC,SAVE             RESTORE FORMER REGISTERS        04457025
         BR    SRR                      EXIT                            04457525
         SPACE 1                                                        04458025
PUTX5    CR    GRC,GRA                  BUFFER FILLED .Q                04458525
         BE    PUTX6                    YES, CHECK IF BUFFER WAS PRTD   04459025
         TM    TSTSW,NOPRT              BUFFER WRITTEN .Q               04459525
         BO    PUTX4                    NO, THEN MOVE RECORD            04460025
         B     PUTX8                    YES, THEN NEW BUFFER            04460525
PUTX6    TM    TSTSW,NOPRT              BUFFER WRITTEN .Q               04461025
         BZ    PUTX8                    YES, INDICATE CONTINUE BUFFER   04461525
         OI    2(GRC),MKI               SET LAST RECORD BIT       V7A30 04461828
         BAL   GR2,PUTX7                WRITE BUFFER                    04462025
PUTX8    OI    TSTSW,CONTB              INDICATE CONTINUED BUFFER       04462525
         TM    TSTSW,NSTMT              IS IT THE FIRST BUFFER .Q       04463025
         BZ    PUTX3                    NO, MOVE SOURCE TO BEG OF BFR   04463525
         NI    TSTSW,ALL-NSTMT          NOW FIRST CONTINUED BUFFER      04464025
         TM    FLAGA,GEN                IS STMT GENERATED .Q            04464525
         BZ    PUTX8A                   NO                              04465025
         OI    TSTSW,CBGEN              YES, SET GEN CONT BUFFER        04465525
         B     PUTX3                    AND MOVE SOURCE TO BEGINNING    04466025
PUTX8A   OI    TSTSW,MSAVE              FIRST SOURCE RCD IS SAVED       04466525
         L     GRA,TRMTAB               BUFFER AREA                     04467025
         MVC   TEMPBUF(SRCLN),L3D(GRA)  SAVE SOURCE RECORD              04467525
         B     PUTX3                    START TO FILL CONTINUE BUFFER   04468025
         SPACE 1                                                        04468525
PUTX7    L     GR1,TRMTAB               TERM BUFFER ADDRESS             04469525
         MVC   1(L2A,GR1),TRPARM+6      TRLI                            04470025
         LA    GR1,ERRTAB               NO ERROR RECORD                 04470525
         LR    SP2,GR2                  RETURN TO GR2                   04471025
         B     WROF                     WRITE BUFFER                    04472025
         SPACE 1                                                        04472525
PUTX9    TM    REPSW(ACT),MKH           IS IT A MNOTE .Q                04473025
         BO    PUTX3A                   YES, TREAT IT AS GENERATED      04473525
         NI    TSTSW,ALL-MSAVE-CBGEN    RESET INDICATION OF LONG STMTS  04474025
         B     PUTX4                    NO, THEN MOVE SOURCE            04474525
         SPACE 1                                                        04475025
TRPARM   DC    A(0)                     NEXT AVAILABLE LOCATION         04475525
         DC    A(0)                     TRLI                            04476025
         DC    A(0)                     AVAILABLE BYTES                 04476525
TRMTAB   DC    A(0)                     BUFFER ADDRESS                  04477025
         EJECT                                                          04477525
* PUT ERROR LOGICAL RECORD                                              04480020
* ENTER WITH FBA OF ERROR RECORD IN SP1                                 04500020
PUTER    STM   GRA,GRC,SAVE             PUT ERROR RECORD                04520020
         LM    GRA,GRC,ERPARM           ERROR PTR LIST                  04540020
         MVC   RLI(2),0(SP1)            RLI OF ERROR RECORD             04560020
         LH    GR1,RLI                                                  04580020
PUTE     CR    GR1,GRC                  DOES IT FIT                     04600020
         BNH   PUTE1                    YES TO PUTE1                    04620020
PUTE0    OI    2(GRB),MKI               SET LAST RECORD BIT OF PREVIOUS 04640025
         NI    TSTSW,ALL-NALL           ERROR FOUND IN THIS STMT        04650025
         LA    GR1,ERRTAB               ERROR IO PARAM TABLE            04660020
         BAL   SP2,WROF                 WRITE OVERFLOW FILE             04680020
         LH    GRC,EBUFLN               AVAILABLE BUFFER LENGTH         04690025
         BCTR  GRC,0                    DECREMENT BY 1                  04695025
         TM    CTTRMI(ACT),TERM         IS TERM SPECIFIED .Q            04700025
         BO    PUTE3                    YES, RETURN AFTER 1 ERR RECORD  04705025
         L     GRA,ERRTAB+4             BUFFER ADDRESS                  04720020
         LA    GRA,1(GRA)               FIRST LOG REC PTR               04740020
         LH    GR1,RLI                  ERR RLI                         04760020
PUTE1    SR    GRC,GR1                  DEC AVAILABLE BYTE COUNT        04780020
         BCTR  GR1,0                                                    04800020
         EX    GR1,PUTE2                EXECUTE MOVE OF ERROR RECORD    04820020
         NI    2(GRA),255-X'80'         RESET SPURIOUS LAST RECORD BIT  04840020
         LR    GRB,GRA                  ERR REC TO LAST REC PTR         04860020
         TM    CTTRMI(ACT),TERM         TERM OPTION .Q                  04870025
         BO    PUTE4                    YES, PUT SOURCE/ERROR RECORD    04875025
         AR    GRA,GR1                  UPDATE AVAILABLE LOC            04880020
         LA    GRA,1(GRA)                                               04900020
PUTE3    STM   GRA,GRC,ERPARM           SAVE PARAM                      04920025
         LM    GRA,GRC,SAVE             RESTORE                         04940020
         BR    SRR                      EXIT                            04960020
PUTE4    L     GR2,TRMTAB               BUFFER ADDRESS                  04965025
         MVC   1(L2A,GR2),TRPARM+6      TRLI TO TERM BUFFER             04970025
         B     PUTE0                    EXIT                            04975025
PUTE2    MVC   0(0,GRA),0(SP1)          MOVE C FROM SP1 TO GRA,GR1 BYTE 04980020
ERPARM   DC    A(ERRBUF+1)              AVAILABLE LOC                   05000020
         DC    A(0)                     LAST REC PTR                    05020020
         DC    A(L'ERRBUF-1)            AVAILABLE BYTES                 05040025
ERRTAB   DC    A(0)                     FIRST BLOCK PTR                 05060020
         DC    A(ERRBUF)                BUFFER ADDRESS                  05080020
* IF TERM OPTION, ADDRESS OF TERM BUFFER IN CORE                        05090025
         DC    A(L'ERRBUF)              LENGTH                          05100025
* IF TERM OPTION  DC  AL(L'TRRBUF)      TERM BUFFER                     05110025
         DC    H'0'                     BLOCK COUNT                     05120020
         DC    X'1'                     FIRST TIME SW                   05140020
         EJECT                                                          05160020
* SYSTEM LIST SUBROUTINE G ASSEMBLER                                    05180020
SYSL     TM    CTLSTI(ACT),X'10'        BYPASS IF NOLIST                05200026
         BCR   8,SRR                    NO PRINT, EXIT                  05220020
         STM   GRZ,GR1,IOSAVE           SAVE 13-01                      05240026
         LA    GRZ,IOSAVE+20            O/S SAVE AREA                   05260026
         L     GR1,LSTDCB(,ACT)         GET SYSPRINT DCB ADDRESS        05280026
         PUT   (1),(SP1)                PUT OUT RECORD                  05300026
         LM    GRZ,GR1,IOSAVE           RESTORE 13-01                   05320026
         BR    SRR                      AND RETURN                      05340026
*./      DELETE    SEQ1=05360020,SEQ2=06060020                          06060026
         EJECT                                                          06080020
* SYSTEM OUTPUT SUBROUTINE G ASSEMBLER                                  06100020
SYSO     LA    SP1,1(SP1)               BYPASS CTL CHAR.                06120020
         STM   13,1,IOSAVE              SAVE REGISTERS                  06140020
         LA    13,IOSAVE+20             SET UP SAVE AREA FOR OS/360     06160020
         TM    CTPCHI(ACT),X'80'        PUNCH OPTION BIT                06180020
         BZ    PCHI                     NO PUNCH, SKIP PUNCH PART       06200020
         L     1,PCHDCB(ACT)                                            06220020
         PUT   (1),(SP1)                OUTPUT TO SYSPUNCH              06240020
PCHI     TM    CTCGOI(ACT),X'40'        WAS NOLOAD OPTION SPECIFIED .Q  06260026
         BZ    PCHX                     IF NOLOAD SKIP SYSLIN           06280026
         L     1,GODCB(,ACT)            GET SYSLIN DCB ADDRESS          06300026
         PUT   (1),(SP1)                OUTPUT TO SYSLIN                06320026
PCHX     BC        *-*+15,PCHX1        EXECUTE OPTION SWITCH            06340026
         ST        SP1,PCHAD           PUT DATA ADDRESS IN WRITE CALL   06360020
         L         GR1,BUFFPT(0,ACT)   WRITE CARD ON SYSUT2             06380020
         CNOP      2,4                                                  06400020
         BALR      GR0,GR1                                              06420020
         DC        A(8,4)                                               06440020
PCHAD    DS        F                                                    06460020
         DC        A(80)                                                06480020
         L         GR1,BUFFPT(0,ACT)             CHECK IT               06500020
         CNOP      2,4                                                  06520020
         BALR      GR0,GR1                                              06540020
         DC        A(28,4)                                              06560020
PCHX1    LM    13,1,IOSAVE              RESTORE                         06580020
         BR    SRR                      RETURN                          06600020
         EJECT                                                          06620020
* PHCLS-PHASE F/8 CLOSE                                                 06640020
PHC      L     SP1,CTLDCP(ACT)          PCH BUFFER PTR                  06660020
         LTR   SP1,SP1                  SUPPRESS PUNCH OF EMPTY BUFFER. 06680020
         BZ    *+12                     IF EMPTY, SKIP                  06700020
         L     SRB,CTXTIO(ACT)                                          06720020
         BAL   SRR,SYSOUT(SRB)          PUNCH CARD                      06740020
         LH    1,CCRDCT(ACT)            CONVERT CARD SEQ. NO. BACK FROM 06760020
         CVD   1,DWORD                  HALF-WORD BINARY TO FOUR        06780020
         UNPK  CCRDCT(4,ACT),DWORD      ZONED DIGITS.                   06800020
         OI    CCRDCT+3(ACT),C'0'                                       06820020
         CLI   RLDTAB+14,0        CHECK IF ANY RLD ENTRIES EXIST        06840020
         BE    *+16               (IE. BUFFER NOT EMPTY                 06860020
         LA    SP1,RLDBUF+1       OR 'FIRST TIME SWITCH' RESET)         06880020
         CL    SP1,RLDPTR                                               06900020
         BE    PHC3                     NO RLD ENTRIES                  06920020
         BAL   SRR,PUTRL                PUT RLD                         06940020
         MVC   0(4,SP1),EOF             EMBED EOF LABEL                 06960020
         LA    GR1,RLDTAB               RLD IO PARAMETER TABLE          06980020
         BAL   SP2,WROF                 WRITE OVERFLOW FILE             07000020
PHC3     L     GR1,ERPARM+4                                             07020020
         LTR   GR1,GR1                  ERROR RECORD ENTRIES            07040020
         BZ    PHC4                     NO TO PHC4                      07060020
         TM    CTTRMI(ACT),TERM         IS TERM OPTION REQ .Q           07070025
         BZ    PHC3A                    NO, CONTINUE                    07072025
         TM    TSTSW,NOPRT+CONTB        IS LAST BUFFER WRITTEN .Q       07074025
         BNO   PHC33                    YES                             07076025
         TM    TSTSW,NALL               LAST LONG STMT ERROR FREE .Q    07078025
         BZ    PHC32                    NO, THEN WRITE LAST BUFFER      07080025
         OI    TSTSW,POINT              SCRATCH LAST STATEMENT          07082025
         B     PHC33                                                    07084025
PHC32    L     GRC,TRPARM+8             PT TO ERROR RECORD IF TERM      07086025
         BAL   GR2,PUTX7                WRITE TERM BUFFER               07088025
PHC33    L     GRA,TRMTAB               GET TERM BUFFER ADDRESS         07090025
         MVC   L1(L4B,GRA),EOF          SET END OF DATA SET             07092025
         B     PHC3B                    PUT END OF DATA SET             07094025
PHC3A    LM    GRA,GRC,ERPARM           ERROR BUFFER POINTERS           07096025
         LA    GR1,4                    RLI OF 4                        07100020
         STH   GR1,RLI                                                  07120020
         LA    SP1,EOF                  EOF INDICATOR                   07140020
         BAL   SRR,PUTE                 EMBED EOF                       07160020
PHC3B    LA    GR1,ERRTAB               ERR IO PARAMETER TABLE          07180025
         BAL   SP2,WROF                 WRITE OVERFLOW FILE             07200020
PHC4A    EQU   *                                                        07220025
         MVC   CTCRLD(L2B,ACT),RLDTAB+12  RLD BLOCK COUNT               07240025
         MVC   CTCERR(2,ACT),ERRTAB+12  ERR BLOCK COUNT                 07260020
         MVC   CTRRLD(4,ACT),RLDTAB     RLD FIRST BLK PTR               07280020
         MVC   CTRERR(4,ACT),ERRTAB     ERR FIRST BLK PTR               07300020
PHC6     EQU       *                                                    07310025
         L         GR1,BUFFPT(0,ACT)    REWIND SYSUT1                   07320020
         CNOP      2,4                                                  07340020
         BALR      GR0,GR1                                              07360020
         DC        A(24,0,1)                                            07380020
         L         GR1,BUFFPT(0,ACT)    REWIND SYSUT3                   07400020
         CNOP      2,4                                                  07420020
         BALR      GR0,GR1                                              07440020
         DC        A(24,8,1)                                            07460020
         L     SRR,ADLIST1(,ACT)        POINT TO LIST1 IN ASM           07470025
         LA    SRR,L1BLDL(,SRR)         POINT TO FPP IN BLDL TABLE      07480025
         XCTL  ,DE=(SRR)                GO TO POST PROCESSOR ASMGFPP    07490025
PHC4     STH   GR1,ERRTAB+12            MAKE SURE BLOCK COUNT           07495025
         B     PHC4A                    IS ZERO (REQ IF TERM)           07500025
         EJECT                                                          07510025
* TEXT I/O CALLING SEQUENCE                                             07520020
*./      DELETE    SEQ1=07540020,SEQ2=07540020                          07540022
*       BAL  GRC,TEXTIN                                                 07560026
TEXTIN   STM   GR0,GR1,IOSAVE           SAVE REGISTERS                  07580020
*./      DELETE    SEQ1=07600020,SEQ2=07600020                          07600022
         L         GR1,BUFFPT(0,ACT)    READ TEXT INPUT FILE            07620020
         CNOP      2,4                                                  07640020
         BALR      GR0,GR1                                              07660020
         DC        A(4,8)                                               07680020
RDADD    DS        F                                                    07700020
*./      DELETE    SEQ1=07720020,SEQ2=07800020                          07800022
         L         GR1,BUFFPT(0,ACT)   CHECK CALL                       07820020
         CNOP      2,4                                                  07840020
         BALR      GR0,GR1                                              07860020
         DC        A(28,8,0)                                            07880020
         LM    GR0,GR1,IOSAVE           RESTORE                         07900020
         BR    GRC                      RETURN                          07920026
         EJECT                                                          07940020
* OVERFLOW I/O INTERFACE WITH BUFFERING ROUTINE IN ASMGASM              07960020
*       ENTER WITH WRITE I/O PARAMETER TABLE ADDRESS IN GR1             07980020
*       CALLING SEQUENCE                                                08000020
*       LA     GR1,XXXTAB                                               08020020
*       BAL    SP2,WROF                                                 08040020
*                                                                       08060020
*                                                                       08080020
* WRITE OVERFLOW FILE INTERFACE WITH BUFF ROUTINE                       08100020
*                                                                       08120020
*                                                                       08140020
WROF     STM   GR0,GR1,IOSAVE           SAVE                            08160020
WRF2     TM    TSTSW,POINT              IS PREVIOUS STMT VALID .Q       08162025
         BZ    WRF5                     NO, THEN OK                     08164025
         NI    TSTSW,ALL-POINT          YES, SCRATCH STMT               08166025
         L     GR1,BUFFPT(,ACT)         POINT TO FORMER ERROR RECORD    08168025
         MVC   WRPOINT(4),NASAVE        POINT ADDRESS                   08170025
         CNOP  2,4                      ALIGN ARGUMENTS                 08172025
         BALR  GR0,GR1                  GO DO THE POINTW                08174025
         DC    A(16,0)                                                  08176025
WRPOINT  DS    F                                                        08178025
         LH    GR1,BLCNT                FETCH BLOCK COUNT               08180025
         LH    GR2,ERRTAB+12            ADJUST BLOCK COUNT              08182025
         SR    GR2,GR1                                                  08184025
         STH   GR2,ERRTAB+12            REPLACE THE BLOCK COUNT         08186025
         SR    GR1,GR1                  SET TEMPORARY BLOCK             08188025
         STH   GR1,BLCNT                COUNTER TO ZERO                 08190025
         L     GR1,IOSAVE+4             RESTORE IO TABLE ADDRESS        08192025
WRF5     LM        GR0,GR1,4(GR1)      GET ADDRESS AND LENGTH           08194025
         STM       GR0,GR1,WRADL       PASS ADDR AND LENGTH ON TO BUFF  08200025
         L         GR1,BUFFPT(0,ACT)   WRITE ON SYSUT1                  08220020
         CNOP      2,4                                                  08240020
         BALR      GR0,GR1                                              08260020
         DC        A(8,0)                                               08280020
WRADL    DS        2F                                                   08300020
         L         GR1,BUFFPT(0,ACT)   CHECK IT                         08320020
         CNOP      2,4                                                  08340020
         BALR      GR0,GR1                                              08360020
         DC        A(28,0)                                              08380020
         L     GR2,IOSAVE+4             IO TABLE PTR                    08400020
         LH    GR1,12(,GR2)             BLOCK COUNT                     08420025
         LA    GR1,1(,GR1)              INCREMENT FOR LAST WRITE        08440025
         STH   GR1,12(,GR2)             SAVE BLOCK COUNT                08460025
         L     GR1,BUFFPT(,ACT)         DO A NOTE ON SYSUT1             08480025
         CNOP  2,4                      TO ALIGN ARGUMENTS              08500025
         BALR  GR0,GR1                  GO DO THE NOTE                  08520025
         DC    A(20,0)                                                  08540025
WRNOTE   DS    F                                                        08560025
         CLI   14(GR2),0                FIRST TIME SWITCH SET .Q        08580025
         BE    WRF3                     NO, GO TO WRF3                  08600025
         MVI   14(GR2),0                CLEAR FIRST TIME SWITCH         08620025
         MVC   0(4,GR2),WRNOTE          PUT NOTE IN I/O TABLE           08640025
WRF3     TM    TSTSW,NSTMT+NALL         NEW STATEMENT PROBABLY          08650025
         BNO   WRF6                     WITHOUT ERRORS .Q  YES          08652025
         MVC   NASAVE(4),WRNOTE         NO, NOTE ADDRESS FOR NEW STMT   08654025
         SR    GR2,GR2                  ZERO A REGISTER AND             08656025
         STH   GR2,BLCNT                ZERO TEMPORARY BLOCK COUNT      08658025
WRF6     NI    TSTSW,ALL-NOPRT          SET WRITTEN BUFFER              08660025
         LH    GR1,BLCNT                GET CURRENT BLOCK COUNT         08662025
         LA    GR1,L1A(,GR1)            INCREASE TEMP BLOCK COUNT       08664025
         STH   GR1,BLCNT                RESTORE THE BLOCK COUNT         08666025
         SR    GR1,GR1                  ZERO A WORK REGISTER            08668025
         ST    GR1,TRPARM+4             AND SET TRLI TO ZERO            08670025
         BR    SP2                      EXIT WROF                       08680020
*                                                                       08700020
*                                                                       08720020
DWORD    DC    D'0'                     DOUBLE WORD FOR CVD             08740020
         LTORG                                                          08760020
         DROP  SRB                                                      08780020
         EJECT                                                          08800020
***BUFFERS WHICH OVERLAP PHASE INITIALISATION LOGIC***                  08820020
BUFORG   DS    0F                       BUFFER FBA                      08840027
*                                                                       08860027
IOSAVE   DS    23F                IO REGISTR SAVE AREA--OS INTERFACE    08880020
IBUFCPT  DS        F                   INPUT RECORD POINTER             08900022
SAVE     DS    4F                       SAVE AREA FIRST LEVEL           08920020
USINGP   DS    4F                       I/O BUFFER 3                    08940020
USINGT   DS    16F                      I/O BUFFER 4                    08960020
         CNOP  6,8                      D ALIGN ERRBUF AND TRRBUF       08980025
RLI      DS    1H                       TEMPERARY FOR HALF WORD ALIGN   09000020
ERRBUF   DS    0XL133                   ERROR BUFFER                    09010025
TRRBUF   DS    XL557                    TERMINAL ERROR BUFFER           09020025
TEMPBUF  DS    CL(SRCLN)                TEMPORARY TERMINAL BUFFER       09030025
EBUFLN   DC    H'133'                   ERROR BUFFER LENGTH, NOTERM     09040025
TBUFLN   DC    H'557'                   SOURCE/ERROR BUFFER LEN, TERM   09050025
         DS        0D                  PUT RLDBUF ON D BOUNDRY          09060020
RLDBUF   DS    XL121              RLD  BUFFER                           09080020
         ORG   BUFORG             OVERLAP BUFFERS/VOLATILE LOGIC        09100020
         SPACE 5                                                        09120020
*ADDRESS CONSTANTS FOR CONTROL TABLE INITIALISATION                     09140020
F8CT2    DS    0F                                                       09160020
         ORG   F8CT2-CT2+CDCVAL                                         09180020
         DC    A(ASMGF8D)               DC EVALUATION                   09200020
         ORG   F8CT2-CT2+ASOPRO                                         09220020
         DC    A(ASMGF8A)               ASSEMBLER OP-CODE               09240020
         ORG   F8CT2-CT2+MACHOP                                         09260020
         DC    A(ASMGF8M)               MACHINE OP-CODE                 09280020
         ORG   F8CT2-CT2+PRNT                                           09300020
         DC    A(ASMGF8P)               PRINT                           09320020
         ORG       F8CT2+CT2C*4                                         09330022
F8CT3    DS    0F                                                       09340020
         ORG   F8CT3-CT3+CTXTIO         I/O BASE                        09360020
         DC    A(TEXTIO)                                                09380020
         ORG   F8CT3-CT3+CSTGET         SYMBOL TABLE                    09400020
         DC    A(ASMGF8S)                                               09420020
         ORG   F8CT3-CT3+CEEVAL         EXPRESSION EVALUATION           09440020
         DC    A(ASMGF8V)                                               09460020
         ORG   F8CT3-CT3+CLOGER         LOG ERROR                       09480020
         DC    A(ASMGF8L)                                               09500020
         ORG   F8CT3-CT3+F8LIGN         ALIGNMENT                       09520020
         DC    A(SRLINE)                                                09540020
         ORG   F8CT3-CT3+F8DCMP                                         09560020
         DC    A(DCCOMP)                                                09580020
         ORG   F8CT3-CT3+F8EXPX                                         09600020
         DC    A(F8AREX)                                                09620020
         ORG   F8CT3-CT3+F8STSC                                         09640020
         DC    A(SECSET)                                                09660020
         ORG   F8CT3-CT3+CCONV          DC-FT.PT. CONVERSION            09680020
         DC    A(ASMGF8N)                                               09700020
         ORG   F8CT3-CT3+CTCOMT         PROCESS COMMENTS                09720020
         DC    A(COMMENT)                                               09740020
         ORG   F8CT3-CT3+CTBLDG         BUILD PRINT IMAGE               09760020
         DC    A(BLDIMG)                                                09780020
         SPACE 5                                                        09800020
* F8I- PHASE F/8 INPUT INITIALIZATION                                   09820020
ASMGF8   BALR      12,0                                                 09840020
         USING     *,12                                                 09860020
         ENTRYOUT  F8                                                   09880020
         L          SRB,=A(TEXTIO)     SET REAL BASE                    09900020
         USING TEXTIO,SRB                                               09920020
         DROP      12                                                   09940020
         L     GR1,CTLBTP(0,ACT)       SET LAT POINTER                  09960020
         ST    GR1,LABPTR               LAT FIRST LOG RECORD PTR        09980020
         ST    GR1,CTXWAP(0,ACT)       SET LAT POINTER                  10000020
         MVI   CESDIDPS(ACT),X'01'      PSEUDO-CURRENT ESD/ID           10020020
         MVI   CTEMERR(ACT),X'FF'       SET MNOTE INDICATOR             10040020
         MVC   CT2(CT2C*4,ACT),F8CT2    INITIALIZE F/8 FUNC ROUT PTR    10060020
         MVC   CT3(CT3C*4,ACT),F8CT3    INITIALIZE F/8 COMMON S/R PTR   10080020
         XC    CTUSPP(4,ACT),CTUSPP(ACT)  ZERO PUSH/POP NEST VALUES     10090027
         XC    STUMAP(4,ACT),STUMAP(ACT)  ZERO START OF UMAP CHAIN      10095027
         LA    SP2,USINGP               SAVE ADDRESS OF                 10100020
         ST    SP2,CTXIO3(ACT)          I/O BUFFER 3                    10120020
         LA    SP2,USINGT                                               10140020
         ST    SP2,CTXIO4(ACT)          I/O BUFFER 4                    10160020
         LA    GRA,F8WORK(ACT)                                          10180020
         LA    GRB,F8INST(ACT)                                          10200020
         ST    GRA,CTSAVE(ACT)          TEXT RECORD POINTER             10220020
         ST    GRB,CTSAVE+4(ACT)        INSTRUCTION BLDG AREA POINTER   10240020
         PACK  DWORD,CCRDCT(4,ACT)      CONVERT CARD SEQ. NO. FROM      10260020
         CVB   1,DWORD                  ZONED TO HALF-WORD BINARY.      10280020
         STH   1,CCRDCT(ACT)            PUT IN CURRENT CARD NO.         10300020
         XC    CTLDCP(4,ACT),CTLDCP(ACT)     ZERO LITERAL WORK AREA     10320020
         MVC   CTSEQN(4,ACT),=C'0000'   START SEQUENCE AT ZERO          10340020
         MVI   F8PON(ACT),X'00'         SET PRINT OPTION - ON           10360020
         MVI   F8PGEN(ACT),X'00'        GEN OPTION - ON                 10380020
         MVI   F8PDAT(ACT),X'FF'        DATA OPTION - OFF               10400020
         L     CRB,=A(ASMGF8C)          SET RETURN                      10420020
         ST    CRB,CTSAVE+8(ACT)        TO GO TO ASMGF8C                10440022
         ST    CRB,CTSAVE+12(ACT)                                       10460020
*./      DELETE    SEQ1=10480020,SEQ2=10520020                          10520027
*./      DELETE    SEQ1=10540022,SEQ2=10540022                          10540026
         TM        CTEXEC(ACT),X'20'   WAS EXECUTE SPECIFIED .Q         10560026
         BZ        GEMORRA             BRANCH IF NOT                    10580026
         MVI       PCHX+1,0            NOP THE SWITCH                   10600020
         B     GEMORRA             DON'T LOOK BACK                      10620020
         SPACE 6                                                        10640020
*THE FOLLOWING LOGIC DESTROYS PRECEDING LOGIC BY BUFFER                 10660020
*UTILIZATION, BUT IS ITSELF SAFE SINCE THE FOLLOWING LOGIC              10680020
*DOES NOT CAUSE MODIFICATION OF RLDBUF.                                 10700020
         SPACE                                                          10720020
Q        DS    0C                                                       10740020
         DS    XL(RLDBUF-Q)        POSITION LOGIC TO RLDBUF             10760020
         DC    X'08'               RLD TYPE                             10780020
         SPACE 3                                                        10800020
*                                                                       10820027
GEMORRA  DS    0H                                                       10840027
         TM    CTTRMI(ACT),TERM         TERM OPTION ON .Q               10860025
         BZ    PCHSIM                   NO, DON'T CHANGE                10862025
*                                       ERROR TAB VALUES                10864025
         LA    GR1,TRRBUF               GET TERM BUFFER ADDRESS         10866025
         ST    GR1,TRMTAB               STORE TERM BUFFER ADDRESS       10868025
         ST    GR1,ERRTAB+4             FOR WROF ROUTINE                10870025
         MVI   0(GR1),X'00'             TERM RECORD I.D.                10872025
         LA    GR1,L3E(,GR1)            BUMP RECORD POINTER TO          10874025
         ST    GR1,TRPARM               FIRST AVAILABLE SOURCE LOC      10876025
         LA    GR1,INCR(,GR1)           BUMP OVER SOURCE                10878025
         ST    GR1,TRPARM+8             ERROR MSG ADDR OF TERM BUFFER   10880025
         ST    GR1,ERPARM                                               10882025
         MVC   ERRTAB+10(2),TBUFLN      SET NEW TERM BUFFER LENGTH      10884025
PCHSIM   XC    USINGP(80),USINGP        CLEAR USING TABLES              10886025
         L     GR1,CTXIO1(ACT)          INPUT BUFFER                    10900022
         ST    GR1,RDADD                                                10920022
         MVI   RLDBUF,L8B               RECORD I.D.                     10940025
         MVI   ERRBUF,L0                ERROR RECORD I.D.               10960025
         TM    CTPCSW(ACT),X'FF'        TEST IF PRIVATE CODE IS SET     10980020
         BZ    CTRTRN(ACT)              PRIVATE CODE NOT SET, SKIP      11000020
         LA    GRY,PCCON                PRIVATE CODE INDICATOR (4)      11020020
         STC   GRY,CTYPE(ACT)           CURRENT TYPE CELL               11040020
         IC    GRY,CTPCSW(ACT)                                          11060020
         STC   GRY,CESDID(ACT)          CURRENT ESD - ID                11080020
         L     SP1,CADJBS(ACT)          ADJUSTMENT TABLE BASE           11100020
         LR    SP2,GRY                                                  11120020
         L     FRB,ASOPRO(ACT)    SET ASAOP ADDRESSING BASE             11140020
         L     GRY,F8STSC(ACT)          CSECT SETTING ROUTINE           11160020
         BALR  SRR,GRY                                                  11180020
         B     CTRTRN(ACT)              EXIT TO MAIN LINE CONTROL       11200020
         LTORG                                                          11220020
         ORG   ,                  END OF VOLATILE LOGIC                 11240020
         EJECT                                                          11260020
*NON-VOLATILE CONSTANTS AND SWITCHES                                    11280020
         SPACE                                                          11300020
ICS      DC    X'00'                                                    11320020
RD1      DC    X'02'                    BUFFER ONE SWITCHES             11340022
*./      DELETE    SEQ1=11360020,SEQ2=11360020                          11360022
OSW      DC    X'00'                                                    11380020
EOF      DC    4X'7F'                   EOF FOR LAT                     11400020
LABPTR   DS        F                    POINTER IN LAT                  11420020
LALBA    DC    F'0'                     LAT LBA                         11440020
RLDPTR   DC    A(RLDBUF+1)              POINTER IN RLD                  11460020
RLDLBA   DC    A(RLDBUF+121)            END OF RLD BUFFER               11480020
BLCNT    DS    H                        CURRENT BLOCK COUNT             11482025
FLAGA    DS    H                                                        11484025
NASAVE   DS    F                                                        11486025
TSTSW    DC    X'40'  SWITCH BYTE TO CONTROL OUTPUT ON UT1(TERM)        11488025
ALL      EQU   X'FF'                                                    11490025
NSTMT    EQU   X'80'  NEW STATEMENT IN BUFFER                           11492025
NALL     EQU   X'40'   ALL CARDS VALID SO FAR (SAME STATEMENT)          11494025
CONTB    EQU   X'20'  BUFFER CONTAINING ONLY CONTINUATUON CARDS         11496025
NOPRT    EQU   X'10'  BUFFER NOT WRITTEN                                11498025
POINT    EQU   X'08'  SCRATCH VALID STATEMENT ON UT1                    11500025
MSAVE    EQU   X'04'  FIRST NOT GEN SOURCE RECORD IS SAVED              11502025
CBGEN    EQU   X'02'  CONTB FOR GEN EXISTS WITHIN SAME MACRO            11504025
PCCON    EQU   4                        PRIVATE CODE INDICATOR          11506025
*                                                                       11510025
         END       ASMGF8                                               11520020
./ ADD NAME=ASMGF8L
F8L      TITLE     'ASMG F8  LOG ERROR SUBROUTINE'                      00020021
         ISEQ  73,78                                                    00040021
ASMGF8L  START                                                          00060020
         SPACE                                                          00080020
         PRINT      NOGEN                                               00100020
         FDIMEN                                                         00120020
         SPACE                                                          00140020
*TITLE 'ASMGF8L ' ... LOG ERROR                                       * 00160020
*FUNCTION/OPERATION-                                                  * 00180020
*  ASMGF8L ATTACHES THE ERROR MESSAGE TO AN EDITED TEXT RECORD. IF THE* 00200020
*   ERROR RECORD IS ALREADY PRESENT, LOGERR CHECKS FOR DUPLICATION AND* 00220020
*   A MAXIMUM OF 16 ERRORS, IF EITHER OF THESE CONDITIONS IS MET, THE * 00240020
*   ERROR IS NOT LOGGED. IF BOTH OF THE CONDITIONS ARE NOT MET, THE   * 00260020
*   ERROR IS LOGGED. IF THE ERROR RECORD IS NOT PRESENT, THE ERROR IS * 00280020
*   LOGGED AND A BIT IS SET IN TXERI SO THAT AN ERROR RECORD WILL BE  * 00300020
*   CREATED.                                                          * 00320020
*ENTRY POINT- ASMGF8L                                                 * 00340020
*     CALLING SEQUENCE--                                              * 00360020
*                                                                     * 00380020
*       L     SRB,CLOGER(ACT)           LOGERR BASE/ENTRY ADDRESS     * 00400020
*       L     SP1,POINTER               ABS POINTER TO ERROR (OR ZERO)* 00420020
*       BALR  SRR,SRB                                                 * 00440020
*       DC    AL2(ERRORCODE)            ERRORCODE EQU ERROR MSSG NUMBR* 00460020
*                                                                     * 00480020
* LOGERR WILL RETURN TO CALLING ROUTINE WITH SP1,SP2 UNCHANGED.       * 00500020
* GR0-GR2, GRX, GRY, AND GRZ ARE VOLATILE.                            * 00520020
*                                                                     * 00540020
*INPUT- NONE                                                          * 00560020
*OUTPUT- NONE                                                         * 00580020
*EXTERNAL ROUTINES-                                                   * 00600020
*   GETXTM- GET TEXT AND MOVE, CALLED IF AN ERROR RECORD IS PRESENT   * 00620020
*EXITS- NORMAL                                                        * 00640020
*   RETURNS TO CALLER VIA                                             * 00660020
*        BR    2(SRR)                   EXIT                          * 00680020
*   --- ERROR- NONE                                                   * 00700020
*TABLES/WORKAREAS-                                                    * 00720020
*   CTERRP(ACT)- POINTS TO THE ERROR RECORD WORK AREA                 * 00740020
*                                                                     * 00760020
         EJECT                                                          00780020
ERRMAX   EQU   16                       MAX NUMBER OF ERRORS/STATEMENT  00800020
         SPACE                                                          00820020
         USING     ASMGF8L,SRB                                          00840020
         SPACE 2                                                        00860020
         STM   SP1,SP2,SAVE2            ENTER LOGERR, SAVE REGS         00880020
         L     SP2,CTERRP(ACT)          POINTER TO ERROR REC WORK AREA  00900020
         SPACE                                                          00920020
         LA    SP1,1(SP1)               CALC RELATIVE POINTER         * 00940020
         S     SP1,F8OPRN(ACT)                                        * 00960020
         SPACE                                                          00980020
         BP    GETERR                   POINTER PRESENT                 01000020
         SR    SP1,SP1                  NOT PRESENT, CLEAR SP1          01020020
         EJECT                                                          01040020
GETERR   CLI   ERSWH(ACT),X'FF'         TEST ERROR REC IN CORE SWITCH   01060020
         MVI       CTERRSW(ACT),X'FF'  SET ERROR SW FOR F8P             01070023
         BE    ADDERR                   SET, ADD ERROR MESSAGE TO REC   01080020
         MVI   ERSWH(ACT),X'FF'         NOT SET, SET                    01100020
         MVI   2(SP2),X'10'             INITIALIZE ERR REC IN WORK AREA 01120020
         MVI   3(SP2),X'00'             REC TYPE EQ 001, COUNT EQ ZERO  01140020
         L     GR1,CTEXTP(ACT)                                          01160020
         TM    TXERI(GR1),X'04'         TEST ERROR REC FOLLOWS IND      01180020
         BO    GETREC                   SET, GET ERROR REC FROM TEXT    01200020
         OI    TXERI(GR1),X'04'         NOT SET, SET IT                 01220020
         B     ADDERR                   THEN ADD ERR MESSAGE TO NES REC 01240020
         SPACE                                                          01260020
GETREC   STM   SRB,SP2,SAVE4            SAVE REGISTERS                  01280020
         LR    SP1,SP2                  PUT RECORD IN ERROR WK AREA     01300020
         L     SRB,CTXTIO(ACT)          LOAD BASE                       01320020
         BAL   SRR,GETXTM(SRB)          GET ERROR REC FROM TEXT FILE    01340020
         USING *,SRR                    GETXTM DESTROYED OUR BASE       01360020
         LM    SRB,SP2,SAVE4            SO RESTORE OUR BASE USING SRR   01380020
         DROP  SRR                      NO MORE NEED FOR SRR, SO DROP   01400020
         SPACE                                                          01420020
ADDERR   CLI   3(SP2),ERRMAX            TEST ERROR COUNT                01440020
         BE    RETURN                   EXIT IF MAX                     01460020
         SPACE                                                          01480020
         SR    GR1,GR1                  PUT ERROR COUNT IN GR1          01500020
         IC    GR1,3(SP2)                                               01520020
         LR    GR2,GR1                  POINT GR2 TO CURRENT MESSAGE-1  01540020
         SLL   GR2,1                                                    01560020
         LA    GR2,0(GR2,SP2)                                           01580020
         SPACE                                                          01600020
         STC   SP1,5(GR2)               PUT COL POINTER IN ERR MESSAGE  01620020
         MVC   4(1,GR2),1(SRR)          PUT ERROR CODE  IN ERR MESSAGE  01640020
         LH    SP1,4(GR2)               PUT ERROR MESSAGE IN SP1        01660020
         SPACE                                                          01680020
CHECKERR CLR   GR2,SP2                  COMPARE CURRENT ERROR MESSAGE   01700020
         BE    COUNTERR                 AGAINST PRIOR MESSAGES          01720020
         CH    SP1,2(GR2)                                               01740020
         BE    RETURN                   IGNORE IF PREVIOUSLY LOGGED     01760020
         BCTR  GR2,0                                                    01780020
         BCT   GR2,CHECKERR             LOOP TO COMPARE ALL             01800020
         SPACE                                                          01820020
COUNTERR LA    GR1,1(GR1)               INC ERROR COUNT                 01840020
         STC   GR1,3(SP2)                                               01860020
         LA    GR1,4(GR1,GR1)           INC RECORD LENGTH               01880020
         STH   GR1,TXRL(SP2)                                            01900020
         SPACE                                                          01920020
RETURN   LM    SP1,SP2,SAVE2            RESTORE REGS                    01940020
         B     2(SRR)                   RETURN TO CALLING ROUTINE       01960020
         SPACE                                                          01980020
SAVE2    DS    2F                       SP1,SP2 SAVE AREA               02000020
SAVE4    DS    4F                       SRB-SP2 SAVE AREA               02020020
         SPACE                                                          02040020
         END   ASMGF8L                                                  02060020
./ ADD NAME=ASMGF8M
F8M      TITLE     'ASMG F8  MACHINE OPERATOR PROCESSOR (F8MOP)'        00020021
         ISEQ  73,78                                                    00040021
*./      DELETE    SEQ1=00050023,SEQ2=00055023                          00055026
         COPY      ASMGSET                                              00057026
ASMGF8M  START     ,                    MACHINE OP PROCESSOR            00060020
         PRINT        NOGEN                                             00080020
         FDIMEN                                                         00100020
         PRINT      GEN                                                 00120020
         SPACE 2                                                        00140020
*                                                                     * 00160020
*TITLE 'ASMGF8M ' ...  MACHINE OPERATOR PROCESSOR                     * 00180020
*FUNCTION/OPERATION-                                                  * 00200020
*  ASMGF8M PROCESSES THE OPERAND FIELDS OF EACH MACHINE INSTRUCTION.  * 00220020
*   IT SCANS THE OPERAND, CHECKS FOR SYNTAX ERRORS, FINDS THE CORRECT * 00240020
*   BASE, AND BUILDS 'F8INST' FOR PRINTING AND PUNCHING BY ASMGF8P.THE* 00260021
*   FOLLOWING ERRORS ARE DETECTED AND FLAGGED-                        * 00280020
*        IMMEDIATE FIELD           INVALID DELIMITER                  * 00300020
*        ALIGNMENT                 INCORRECT REGISTER                 * 00320020
*        LENGTH                    INVALID LITERAL USAGE              * 00340020
*        NON-REENTERANT            RELOCABILITY                       * 00360020
*        INVALID DISPLACEMENT      LOCATION COUNTER                   * 00380020
*        ILLEGAL START CARD        ADDRESSABILITY                     * 00400020
*ENTRY POINTS-                                                        * 00420020
*  ASMGF8M     MACHINE OPERAND PROCESSOR. CALLED VIA-                 * 00440020
*        L     FRB,MACHOP(ACT)          LOAD BASE/ENTRY               * 00460020
*        BALR  CRR,ACT                  CALL ASMGF8M                  * 00480020
*   F8AREX     RELOCATABLE EXPRESSION EVALUATOR. CALLED VIA-          * 00500020
*        L     FRB,MACHOP(ACT)          LOAD BASE                     * 00520020
*        L     GR1,F8EXPX(ACT)          LOAD ENTRY                    * 00540020
*        BALR  SRR,GR1                  CALL F8AREX                   * 00560020
*   DCCOMP     DE COMPILE. CALLED VIA-                                * 00580020
*        L     FRB,MACHOP(ACT)          LOAD BASE                     * 00600020
*        L     GR1,F8DCMP(ACT)          LOAD ENTRY                    * 00620020
*        BALR  SRR,GR1                  CALL DE COMPILE               * 00640020
*INPUT-                                                               * 00660020
*   SP2 POINTS TO THE OPERAND                                         * 00680020
*   GRA POINTS TO F8WORK(ACT)                                         * 00700020
*   F8WORK(ACT) CONTAINS RECORD TYPES 4, 6, OR 7                      * 00720020
*OUTPUT-                                                              * 00740020
*   F8INST(ACT) IS PRODUCED FOR PRINTING AND/OR PUNCHING BY ASMGF8P   * 00760021
*EXTERNAL ROUTINES-                                                   * 00780020
*   NAME            ROUTINE   USE                                     * 00800020
*   CEEVAL(ACT)     ASMGF8V   EXPRESSION EVALUATION                   * 00820020
*   CLOGER(ACT)     ASMGF8L   LOG ERROR                               * 00840020
*EXITS- NORMAL--                                                      * 00860020
*  ASMGF8M RETURNS TO CALLER VIA-                                     * 00880020
*        B     CTRTRN(ACT)              EXIT                          * 00900020
*   F8AREX AND DCCOMP RETURN TO CALLER VIA-                           * 00920020
*        BR    SRR                      EXIT                          * 00940020
*   ERRORS- NONE                                                      * 00960020
*TABLES/WORKAREAS-                                                    * 00980020
*   MOPTBL -   TRANSFER TABLE FOR TYPE OF INSTRUCTION                 * 01000020
*   EXFLGS -   FLAGS SET BY F8AREX. SEE F8AREX FOR MEANING            * 01020020
*   VALUEB -   RESULTS OF F8AREX                                      * 01040020
*   F8AREGS -  SAVE AREA FOR DCCOMP                                   * 01060020
*   USNGPP -   USING TABLE POINTER. 1X16 BYTES, FF=REGISTER USED      * 01080020
*                                               00=REGISTER NOT USED  * 01100020
*   USNGTP -   USING TABLE. 4X16 BYTES, BYTE 1= ESD/ID                * 01120020
*                                       BYTES 2-4 = VALUE             * 01140020
*NOTES-                                                               * 01160020
*   TO GET THE INDEX IN THE BRANCH TABLE 'MOPTBL', A FOUR BIT INDEX IS* 01180020
*   USED. THE FIRST 2 BITS COME FROM BITS 4-5 OF THE TXASC CODE (TYPE * 01200020
*   CLASS WITHIN INSTRUCTION) AND THE LAST 2 BITS COME FROM THE FIRST * 01220020
*   2 BITS OF THE MACHINE CODE (LENGTH).                              * 01240020
*                                                                     * 01260020
         EJECT                                                          01280020
         USING *,FRB                                                    01300020
         SR    GRZ,GRZ                                                  01320020
         MVI   RR2SWH(ACT),X'00'        SET TYPE 2 FLAG OFF             01340020
         MVI   ABSRX,X'00'              ZERO ABSOLUTE WITCH             01360020
         MVI   ERRSW,X'00'             TURN OFF STATEMENT ERROR SWITCH  01380020
         MVI   LITRLTWO,X'00'           ZERO MULT. LIT SWITCH           01400020
         MVI       LDECSW+1,X'80'      SET BZ                           01420020
         MVI       K257256+3,257-256   SET TEST FOR 256                 01440020
         LR    SP1,SP2                  OPERAND POINTER TO SP1          01460020
         IC    GRZ,F8WORK+4(ACT)        HEXOP                           01480020
         STC   GRZ,F8INST+3(ACT)        TO INSTRUCTION                  01500020
         SR    GRY,GRY                                                  01520020
         IC    GRY,BITS45               BITS 4 AND 5                    01540020
         MVC   ALIGNT+3(1),5(GRA)                                       01560020
         N     GRY,ALIGNT                                               01580020
         SRL   GRZ,6                    BITS 0 AND 1 TO 6 AND 7         01600020
         OR    GRZ,GRY                  16 WAY BRANCH TO MACHINE OPS    01620020
         AR    GRZ,GRZ                 DOUBLE FOR TABLE RECOVERY        01640020
         LH    GRZ,MOPTBL(GRZ)         GET RELATIVE ENTRY POIMT         01660020
         B     MOPROC(GRZ)             BRANCH TO PROPER PROCESSOR       01680020
MOPTBL   DS    0H                      START OF DISPLACEMENT TABLE      01700020
         DC    AL2(RR1-MOPROC)          REGISTER - REGISTER      TYPE 1 01720020
         DC    AL2(RX1-MOPROC)          REGISTER - INDEX STORAGE TYPE 1 01740020
         DC    AL2(RS1-MOPROC)          REGISTER - STORAGE       TYPE 1 01760020
         DC    AL2(SS1-MOPROC)          STORAGE - STORAGE        TYPE 1 01780020
         DC    AL2(RR2-MOPROC)          REGISTER - REGISTER      TYPE 2 01800020
         DC    AL2(RX2-MOPROC)          REGISTER - INDEX STORAGE TYPE 2 01820020
         DC    AL2(RS2-MOPROC)          REGISTER - STORAGE       TYPE 2 01840020
         DC    AL2(SS2-MOPROC)          STORAGE - STORAGE        TYPE 2 01860020
         DC    AL2(RR3-MOPROC)          REGISTER - REGISTER      TYPE 3 01880020
         DC    AL2(PROCER-MOPROC)       PROCEDURE ERROR          ****** 01900020
         DC    AL2(SI3-MOPROC)          STORAGE - IMMEDIATE      TYPE 3 01920020
         DC    AL2(SS3-MOPROC)          STORAGE-STORAGE  XIO     TYPE 3 01940020
         DC    AL2(RR4-MOPROC)          REGISTER - REGISTER      TYPE 4 01960020
         DC    AL2(PROCER-MOPROC)       PROCEDURE ERROR          ****** 01980020
         DC    AL2(SI4-MOPROC)          STORAGE - IMMEDIATE      TYPE 4 02000020
         AIF       (&SYM370).SS4                                        02010024
         DC    AL2(PROCER-MOPROC)       PROCEDURE ERROR          ****** 02020020
         AGO       .NOSS4                                               02022024
.SS4     ANOP                                                           02024024
         DC    AL2(SS4-MOPROC)          STORAGE - STORAGE  SRP   TYPE 4 02026024
.NOSS4   ANOP                                                           02028024
MOPROC   DS    0H                      RELATIVE ENTRY ZERO              02040020
*********************************************************************** 02060020
***   RR1   ***                                                         02080020
*REGISTER TO REGISTER INSTRUCTION TYPE 1 PROCESSOR                      02100020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF THOSE REGISTER TO         02120020
* REGISTER INSTRUCTIONS WHICH NAME BOTH REGISTERS EXPLICITLY.           02140020
*********************************************************************** 02160020
RR1      MVI   F8INST+15(ACT),X'02'     LENGTH IS 2 BYTES               02180020
         LA    GR0,2                                                    02200020
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 02220020
         BAL   SRR,R1PROC               PROCESS R1                      02240020
         BNE   DLMERR                                                   02260020
         LA    SP1,1(SP1)               SET POINTER TO NEXT CHAR        02280020
RR1A     BAL   SRR,R2PROC               PROCESS R2                      02300020
RRXT     CLI   0(SP1),IBLANK            IS NEXT CHAR A BLANK            02320020
         BNE   DLMERR                   NO, LOG ERROR                   02340020
         B     MOPRTN                   RETURN                          02360020
*********************************************************************** 02380020
***   RR2   ***                                                         02400020
*REGISTER TO REGISTER INSTRUCTION TYPE 2 PROCESSOR                      02420020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF THE SPM INSTRUCTION.      02440020
*********************************************************************** 02460020
RR2      MVI   F8INST+15(ACT),X'02'     LENGTH IS 2 BYTES               02480020
         LA    GR0,2                                                    02500020
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 02520020
RR2A     BAL   SRR,R1PROC               PROCESS R1                      02540020
         B     RRXT                     GO SEE IF NEXT CHAR A BLANK     02560020
*********************************************************************** 02580020
***   RR3   ***                                                         02600020
*REGISTER TO REGISTER INSTRUCTION TYPE 3 PROCESSOR                      02620020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF THE SVC INSTRUCTION.      02640020
*********************************************************************** 02660020
RR3      MVI   F8INST+15(ACT),X'02'     LENGTH IS 2 BYTES               02680020
         LA    GR0,2                                                    02700020
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 02720020
         BAL   SRR,IPROC                REGISTER BRANCH FOR TRAIL ONLY  02740020
*********************************************************************** 02760020
***   RR4   ***                                                         02780020
*REGISTER TO REGISTER INSTRUCTION TYPE 4 PROCESSOR                      02800020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF EXTENDED MNEMONIC         02820020
*REGISTER TO REGISTER INSTRUCTIONS.  R1 IS SET WITH AN IMPLICITLY       02840020
*DEFINED VALUE AND R2 RECEIVES THE EXPLICITLY DEFINED VALUE.            02860020
*********************************************************************** 02880020
RR4      MVI   F8INST+15(ACT),X'02'     LENGTH IS 2 BYTES               02900020
         LA    GR0,2                                                    02920020
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 02940020
         MVO   F8INST+4(1,ACT),F8WORK+3(1,ACT)    MOVE IN EXTENDED MNEM 02960020
         B     RR1A                     CONTINUE AS THOUGH RR1          02980020
*********************************************************************** 03000020
***   RX1   ***                                                         03020020
*REGISTER-INDEXABLE STORAGE INSTRUCTION TYPE 1 PROCESSOR                03040020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF REGISTER-INDEXABLE        03060020
* STORAGE INSTRUCTIONS IN WHICH BOTH OPERANDS ARE EXPLICITLY DEFINED.   03080020
*********************************************************************** 03100020
RX1      MVI   F8INST+15(ACT),X'14'     PUT OUT EA2                     03120020
         LA    GR0,4                    LENGTH IS 4 BYTES               03140020
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 03160020
         BAL   SRR,R1PROC               PROCESS R1                      03180020
         BNE   DLMERR                   IF ERROR BRANCH                 03200020
         LA    SP1,1(SP1)               UP TO NEXT CHAR                 03220020
RX2A     BAL   SRR,S2D2A                GET DISPLACEMENT                03240020
         BE    MOPRTN                   BRANCH IF END OF FIELD          03260020
         CLI   0(SP1),ILPARN            IS NEXT CHAR A LEFT PARN        03280020
         BNE   DLMERR                   DELIMETER NOT LEFT PAREN        03300020
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            03320020
         CLI   0(SP1),ICOMMA            IS NEXT CHARACTER COMMA         03340020
         BE    RX1B                     YES, SKIP INDEX                 03360020
RX1A     BAL   SRR,X2PROC               PROCESS X2 FIELD                03380020
         BE    RX1B                     IF COMMA, PROCESS B2            03400020
         CLI   0(SP1),IRPARN            IF NOT, IS DELIMETER RIGHT PARN 03420020
         BNE   DLMERR                   IF NOT, DELIMETER ERROR         03440020
         B     RX1C                     CHECK BLANK AND EXIT TO CALLER  03460020
RX1B     LA    SP1,1(SP1)               BUMP OPERAND POINTER            03480020
         BAL   SRR,B2A                  PROCESS B2                      03500020
RX1C     CLI   1(SP1),IBLANK           IS DELIMETER BLANK               03520020
         BE    MOPRTN                   COMMON RETURN                   03540020
         B     DLMERR                   DELIMETER ERROR                 03560020
*********************************************************************** 03580020
***   RX2   ***                                                         03600020
*REGISTER-INDEXABLE STORAGE INSTRUCTION TYPE 2 PROCESSOR                03620020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF REGISTER-INDEXABLE        03640020
* STORAGE INSTRUCTIONS IN WHICH R1 IS SET WITH AN IMPLICITLY DEFINED    03660020
* VALUE AND THE INDEXABLE VALUE IS SPECIFIED.                           03680020
*********************************************************************** 03700020
RX2      MVI   F8INST+15(ACT),X'14'     OUTPUT FLAG TO INSTRUCTION      03720020
         LA    GR0,4                    LENGTH IS 4 BYTES               03740020
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 03760020
         MVO   F8INST+4(1,ACT),F8WORK+3(1,ACT) R1 MASK TO INSTRUCTION   03780020
         B     RX2A                     COMMON RX1 AND RX2 PART         03800020
*********************************************************************** 03820020
***   RS1   ***                                                         03840020
*REGISTER-STORAGE INSTRUCTION TYPE 1 PROCESSOR                          03860020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF REGISTER-STORAGE          03880020
* INSTRUCTIONS IN WHICH R1,R3, AND STORAGE ARE SPECIFIED                03900020
*********************************************************************** 03920020
RS1      MVI   F8INST+15(ACT),X'14'     OUTPUT FLAG TO INSTRUCTION      03940020
         LA    GR0,4                    LENGTH IS 4 BYTES               03960020
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 03980020
         BAL   SRR,R1PROC               PROCESS R1                      04000020
         BNE   DLMERR                   DELIMETER ERROR IF NOT COMMA    04020020
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            04040020
         CLI       F8INST+3(ACT),X'B1' TEST FOR LRA                     04042023
         BE        RX2A                LRA IS REALLY RX, NOT RS OR SI   04044023
         AIF       (NOT &RPQ67).RPQ67#1                                 04046023
         CLI       F8INST+3(ACT),X'A3' TEST FOR SWPR                    04048023
         BE        SWAP                                                 04050023
         CLI       F8INST+3(ACT),X'A2' TEST FOR SLT                     04052023
         BE        SEARCH                                               04054023
.RPQ67#1 ANOP                                                           04056023
         BAL   SRR,R3PROC               PROCESS R3                      04060020
RS1A     BNE   DLMERR                   DELIMETER ERROR IF NOT COMMA    04080023
RS2A     LA    SP1,1(SP1)               BUMP OPERAND POINTER            04100020
         BAL   SRR,S2D2A                PROCESS S2 OR D2                04120020
         BE    MOPRTN                   EXIT                            04140020
         CLI   0(SP1),ILPARN            IS DELIMETER LEFT PAREN         04160020
         BNE   DLMERR                   NO, DELIMETER ERROR             04180020
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            04200020
         BAL   SRR,B2A                  PROCESS B2A                     04220020
         CLI   1(SP1),IBLANK           IS DELIMETER BLANK               04240020
         BE    MOPRTN                   YES, EXIT                       04260020
         B     DLMERR                   NO, DELIMETER ERROR             04280020
         AIF       (NOT &RPQ67).RPQ67#2                                 04282023
*                                                                       04284023
SEARCH   BAL       SRR,WEIRDLEN        PROCESS SLT LENGTH               04286023
         MVN       F8INST+4(1,ACT),VALUEB+3 INSERT LENGTH               04288023
         B         RS1A                CONTINUE                         04290023
*                                                                       04292023
SWAP     OI        TXASC+F8WORK(ACT),X'C0' CHANGE APPROPRIATE BITS      04294023
         B         RR1A                CONTINUE WITH RR FORMAT          04296023
.RPQ67#2 ANOP                                                           04298023
*********************************************************************** 04300020
***   RS2   ***                                                         04320020
*REGISTER-STORAGE INSTRUCTION TYPE 2 PROCESSOR                          04340020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF ALL SHIFT INSTRUCTIONS    04360020
*********************************************************************** 04380020
RS2      MVI   F8INST+15(ACT),X'14'     SET OUTPUT FLAGS IN INSTRUCTION 04400020
         LA    GR0,4                    LENGTH IS 4 BYTES               04420020
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 04440020
         BAL   SRR,R1PROC               PROCESS R1                      04460020
         BNE   DLMERR                   IF DELIMETER NOT COMMA, ERROR   04480020
         B     RS2A                     BRANCH TO COMMON RS1 RS2 RTN    04500020
*********************************************************************** 04520020
***   SI3   ***                                                         04540020
*STORAGE-IMMEDIATE INSTRUCTION TYPE 3 PROCESSOR                         04560020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF ALL STORAGE-IMMEDIATE     04580020
* INSTRUCTIONS EXCEPT LPSW,SSM,HIO,SIO,TIO,TCH, AND TS                  04600020
*********************************************************************** 04620020
SI3      MVI   F8INST+15(ACT),X'24'     SET OUTPUT FLAGS IN INSTRUCTION 04640020
         LA    GR0,4                    LENGTH IS 4 BYTES               04660020
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 04680020
         BAL   SRR,S1D1                 PROCESS S1 D1                   04700020
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              04720020
         BE    SI3A                     IF COMMA PROCESS I              04740020
         CLI   0(SP1),ILPARN            DELIMETER LEFT PAREN TEST       04760020
         BNE   DLMERR                   DELIMETER ERROR                 04780020
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            04800020
         BAL   SRR,B1                   PROCESS B1                      04820020
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            04840020
         CLI   0(SP1),ICOMMA           IS DELIMETER COMMA               04860020
         BNE   DLMERR                   DELIMETER ERROR                 04880020
SI3A     LA    SP1,1(SP1)              BUMP OPERAND POINTER BY ONE      04900020
         BAL   SRR,IPROC               PROCESS IMMEDIATE FIELD          04920020
*********************************************************************** 04940020
***   SI4   ***                                                         04960020
*STORAGE-IMMEDIATE INSTRUCTION TYPE 4 PROCESSOR                         04980020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF THE STORAGE-IMMEDIATE     05000020
* INSTRUCTIONS LPSW,SSM,HIO,SIO,TIO,TCH, AND TS                         05020020
*********************************************************************** 05040020
SI4      MVI   F8INST+15(ACT),X'24'     SET OUTPUT FLAGS IN INSTRUCTION 05060020
         LA    GR0,4                    LENGTH IS 4 BYTES               05080020
         TM    F8WORK+3(ACT),X'20'      IS EXTEN ON .Q                  05092024
         BZ    SI4A                     NO EXTENDED OP CODE             05094024
         MVN   F8INST+4(1,ACT),F8WORK+3(ACT)  INSERT EXTEN MASK OFFSET  05094226
         TR    F8INST+4(1,ACT),TASTABLE GET 2ND BYTE OF OPCODE          05094327
         CLC   F8INST+3(2,ACT),=X'B20B' IS IT INSERT PSW KEY (IPK) .Q   05094427
         BE    SI4B                     BRANCH IF YES                   05094527
         CLC   F8INST+3(2,ACT),=X'B20D' IS IT PTLB .Q                   05094626
         BNE   SI4A                     BRANCH IF NOT                   05094826
SI4B     DS    0H                                                       05094927
         CLI   0(SP1),IBLANK            IS OPERAND NULL .Q              05095026
         BE    MOPRTA                   EXIT NOW IF SO                  05095226
         CLI   0(SP1),ICOMMA            OR SPECIFIC NULL .Q             05095427
         BE    MOPRTA                   EXIT NOW IF SO                  05095626
         B     MOPRTA                   FOOLISHLY IGNORE THE OPND ERROR 05096027
SI4A     DS    0H                                                       05098024
         CLI   F8INST+3(ACT),X'B3'      A DUMMY 'B21X' OPCODE .Q        05100027
         BNE   SI4C                     BRANCH IF NOT                   05102027
         NI    F8INST+3(ACT),X'FE'      ALTER FIRST BYTE OF OPCODE      05104027
         OI    F8INST+4(ACT),X'10'      ALTER SECOND BYTE OF OPCODE     05106027
SI4C     DS    0H                                                       05108027
         ST    GR0,CTF8LNGT(,ACT)       SET LENGTH FOR WRAP AROUND TEST 05110027
         BAL   SRR,S1D1                 PROCESS S1 OR D1                05120020
         BE    MOPRTN                   IF DELIMETER BLANK, EXIT        05140020
         CLI   0(SP1),ILPARN            IS DELIMETER LEFT PAREN         05160020
         BNE   DLMERR                   NO, DELIMETER ERROR             05180020
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            05200020
         BAL   SRR,B1                   PROCESS B1                      05220020
         CLI   1(SP1),IBLANK            DELIMETER AFTER PAREN BLANK     05240020
         BE    MOPRTN                   YES, EXIT                       05260020
         B     DLMERR                   NO, ERROR                       05280020
TASTABLE DS    0XL16                    TRANSLATE TABLE FOR 2 BYTE OPS  05281026
*                                           2ND BYTE 0X     2ND BYTE 1X 05282027
         DC    X'00'                        ---             SPX         05283027
         DC    X'01'                        HDV,SIOF,CLRIO  STPX        05284027
         DC    X'02'                        STIDP           STAP        05285027
         DC    X'03'                        STIDC           RRB         05286027
         DC    X'04'                        SCK             ---         05287027
         DC    X'05'                        STCK            ---         05288027
         DC    X'06'                        SCKC            ---         05289027
         DC    X'07'                        STCKC           ---         05290027
         DC    X'08'                        SPT             ---         05291027
         DC    X'09'                        STPT            ---         05292027
         DC    X'0A'                        SPKA            ---         05293027
         DC    X'0B'                        IPK             ---         05294027
         DC    X'0C'                        ---             ---         05295027
         DC    X'0D'                        PTLB            ---         05296027
         DC    X'0E'                        ---             ---         05297027
         DC    X'0F'                        ---             ---         05298027
*********************************************************************** 05300020
***   SS1   ***                                                         05320020
*STORAGE TO STORAGE INSTRUCTION TYPE 1 PROCESSOR                        05340020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF THE STORAGE TO STORAGE    05360020
* INSTRUCTIONS REQUIRING BOTH L1 AND L2 EITHER EXPLICIT OR IMPLICIT     05380020
*********************************************************************** 05400020
SS1      MVI   F8INST+15(ACT),X'36'     SET OUTPUT FLAGS IN INSTRUCTION 05420020
         LA    GR0,6                    LENGTH IS 6 BYTES               05440027
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 05460020
         BAL   SRR,S1D1                 PROCESS S1 OR D1                05480020
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              05500020
         BNE   SS1A                     NO, SKIP IMPLIED LENGTH 1       05520020
         BAL   SRR,IMPLL1               INSERT INPLIED LENGTH 1         05540020
SS12ND   LA    SP1,1(SP1)               SECOND OPERAND ENTRY            05560020
         BAL   SRR,S2D2B                PROCESS S2 OR D2, IS DELIM BLNK 05580020
         BNE   SS1N                     NO, SKIP IMPMPLIED LENGTH       05600020
         BAL   SRR,IMPLL2               INSERT INPLIED LENGTH 2         05620020
         B     MOPRTN                   MACHINE OP EXIT                 05640020
IMPLL1   CLI   STLONG+1(ACT),15         IF LARGER THAN 15, TOO BIG      05660020
         BH    LENERR                   ERROR EXIT                      05680020
         CLI   STLONG(ACT),0            IF LARGER THAN 15, TOO BIG      05700020
         BH    LENERR                   ERROR EXIT                      05720020
         MVO   F8INST+4(1,ACT),STLONG+1(1,ACT)  IMPLIED LENGTH TO INST  05740020
         BR    SRR                              RETURN TO CALLER        05760020
IMPLL2   CLI   STLONG+1(ACT),15         IF LARGER THAN 15, TOO BIG      05780020
         BH    LENERR                   ERROR EXIT                      05800020
         CLI   STLONG(ACT),0            IF LARGER THAN 15, ERROR        05820020
         BH    LENERR                   ERROR EXIT                      05840020
         MVN   F8INST+4(1,ACT),STLONG+1(ACT)                            05860020
         BR    SRR                              RETURN TO CALLER        05880020
SS1A     CLI   0(SP1),ILPARN            IS DELIMETER LEFT PAREN         05900020
         BNE   DLMERR                   NO, ERROR                       05920020
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            05940020
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              05960020
         BNE   SS1B                     IF NO, PROCESS LENGTH           05980020
         BAL   SRR,IMPLL1               IMPLIED LENGTH 1 TO INSTRUCTION 06000020
         B     SS1E                     PROCESS BASE 1                  06020020
SS1B     BAL   SRR,L1PROC               PROCESS L1                      06040020
         MVO   F8INST+4(1,ACT),VALUEB+3(1) L1 VALUE TO INSTRUCTION      06060020
         BNE   SS1D                     IF DELIMETER NOT COMMA, SKIP B1 06080020
SS1E     LA    SP1,1(SP1)               BUMP OPERAND POINTER            06100020
         BAL   SRR,B1                   PROCESS B1                      06120020
SS1C     LA    SP1,1(SP1)               BUMP OPERAND POINTER            06140020
         CLI   0(SP1),ICOMMA            IS DELIMETER AFTER PAREN COMMA  06160020
         BE    SS12ND                   IF YES, DO SECOND OPERAND       06180020
         B     DLMERR                   IF NO, DELIMETER ERROR          06200020
SS1N     CLI   0(SP1),ILPARN           IS DELIMERT LEFT PAREN           06220020
         BNE   DLMERR                   NO, ERROR                       06240020
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            06260020
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              06280020
         BNE   SS1P                     IF NO, PROCESS LENGTH           06300020
         BAL   SRR,IMPLL2               IMPLIED LENGTH 2 TO INSTRUCTION 06320020
         B     SS1S                     PROCESS BASE 2                  06340020
SS1P     BAL   SRR,L2PROC               PROCESS L2                      06360020
         MVN   F8INST+4(1,ACT),VALUEB+3 MOVE L2 VALUE TO INSTRUCTION    06380020
         BNE   SS1R                     IF DELIMETER NOT COMMA, SKIP B2 06400020
SS1S     LA    SP1,1(SP1)               BUMP OPERAND POINTER            06420020
         BAL   SRR,B2B                  PROCESS B2                      06440020
SS1Q     CLI   1(SP1),IBLANK            IS DELIEETER AFTER PAREN BLANK  06460020
         BE    MOPRTN                   IF YES, EXIT MACHINE OP PROCESS 06480020
         B     DLMERR                   IF NO, DELIMETER ERROR          06500020
SS1D     CLI   0(SP1),IRPARN            IS DELIMETER RIGHT PAREN        06520020
         BE    SS1C                     CHECK NEXT DELIMETER            06540020
         B     DLMERR                   IF NO, DELIMETER ERROR          06560020
SS1R     CLI   0(SP1),IRPARN            IS DELIMETER RIGHT PAREN        06580020
         BE    SS1Q                     CHECK NEXT DELIMETER            06600020
         B     DLMERR                   IF NO, DELIMETER ERROR          06620020
*********************************************************************** 06640020
***   SS2   ***                                                         06660020
*STORAGE TO STORAGE INSTRUCTION TYPE 2 PROCESSOR                        06680020
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF THE STORAGE TO STORAGE    06700020
* INSTRUCTIONS REQUIRING ONLY ONE MOVE LENGTH                           06720020
*********************************************************************** 06740020
SS2      MVI   F8INST+15(ACT),X'36'     SET OUTPUT FLAGS IN INSTRUCTION 06760020
         LA    GR0,6                    LENGTH IS 6 BYTES               06780020
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 06800020
         BAL   SRR,S1D1                 PROCESS S1 OR D1                06820020
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA              06840020
         BNE   SS2A                     NO, SKIP IMPLIED LENGTH         06860020
         BAL   SRR,IMPLL                INSERT IMPLIED LENGTH           06880020
SS22ND   LA    SP1,1(SP1)               SECOND OPERAND ENTRY            06900020
         BAL   SRR,S2D2B                PROCESS S2 OR D2, IS DELIM BLNK 06920020
         BNE   SS2N                     NO, PROCESS BASE                06940020
         B     MOPRTN                   MACHINE OP EXIT                 06960020
SS2A     CLI   0(SP1),ILPARN            IS DELIMETER LEFT PAREN         06980020
         BNE   DLMERR                   IF NO, DELIMETER ERROR          07000020
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            07020020
         CLI   0(SP1),ICOMMA            IS NEXT DELIMETER COMMA         07040020
         BNE   SS2B                     IF NOT, PROCESS LENGTH          07060020
         BAL   SRR,IMPLL                IF COMMA, IMPLIED LENGTH TO INS 07080020
         B     SS2E                     PROCESS B1                      07100020
SS2B     BAL   SRR,LPROC                PROCESS LENGTH                  07120020
         MVC   F8INST+4(1,ACT),VALUEB+3 LENGTH VALUE TO INSTRUCTION     07140020
         BNE   SS2D                     IF NOT COMMA, TRY RIGHT PAREN   07160020
SS2E     LA    SP1,1(SP1)               IF DELIMETER COMMA, BUMP OPRN   07180020
         BAL   SRR,B1                   PROCESS B1                      07200020
SS2C     LA    SP1,1(SP1)               BUMP OPERAND POINTER            07220020
         CLI   0(SP1),ICOMMA            IS NEXT DELIMETER COMMA         07240020
         BE    SS22ND                   YES, DO 2ND OPERAND             07260020
         B     DLMERR                   NO, DELIMETER ERROR             07280020
IMPLL    CLI   STLONG(ACT),0            IS LENGTH GREATER THAN 255      07300020
         BH    LENERR                   IF HIGH, TOO BIG                07320020
         MVC   F8INST+4(1,ACT),STLONG+1(ACT) IMPLIED LENGTH TO INST     07340020
         BR    SRR                           RETURN TO CALLING RTN      07360020
SS2N     CLI   0(SP1),ILPARN                 IS DELIMETER LEFT PAREN    07380020
         BNE   DLMERR                        NO, DELIMETER ERROR        07400020
         B     SS2S                          PROCESS B2                 07420020
SS2S     EQU   SS1S                                                     07440020
SS2D     CLI   0(SP1),IRPARN                 IS DELIMETER LEFT PAREN    07460020
         BE    SS2C                          IF EQUAL TEST FUTHER       07480020
         B     DLMERR                        IF NOT, DELIMETER ERROR    07500020
*                                                                       07520020
*        SS3                                                            07540020
*              SAME AS SS2 EXCEPT LENGTH FIELD NOT DECREMENTED BY       07560020
*               ONE IF GIVEN EXPLICITLY.                                07580020
*                                                                       07600020
SS3      MVI       LDECSW+1,X'F0'      SO EXPLICIT LENGTH NOT DECREMENT 07620020
         MVI       K257256+3,256-256   SET TEST FOR 255                 07640020
         B         SS2                                                  07660020
         AIF       (NOT &SYM370).NOSS4A                                 07662024
*********************************************************************** 07662224
***   SS4   ***                                                         07662424
*STORAGE TO STORAGE INSTRUCTION TYPE 4 PROCESSOR                        07662624
* THIS ROUTINE PROCESSES THE OPERAND FIELD OF THE STORAGE TO STORAGE    07662824
* INSTRUCTIONS REQUIRING ONE MOVE LENGTH AND A MASK                     07663024
*********************************************************************** 07663224
SS4      MVI   F8INST+15(ACT),X'36'     SET OUTPUT FLAGS IN INSTRUCTION 07663424
         LA    GR0,6                    LENGTH IS 6 BYTES               07663624
         ST    GR0,CTF8LNGT(ACT)        SET LENGTH FOR WRAP AROUND TEST 07663824
         BAL   SRR,S1D1                 PROCESS S1 OR D1                07664024
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA .Q           07664224
         BNE   SS4A                     NO, SKIP IMPLIED LENGTH1        07664424
         BAL   SRR,IMPLL1               INSERT IMPLIED LENGTH1          07664624
SS42ND   LA    SP1,1(SP1)               SECOND OPERAND ENTRY            07664824
         BAL   SRR,S2D2B                PROCESS S2 OR D2                07665024
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA .Q           07665224
         BE    SS43RD                   PROCESS MASK                    07665424
         CLI   0(SP1),ILPARN            IS DELIMETER LEFT PAREN .Q      07665624
         BNE   DLMERR                   NO, DELIMETER ERROR             07665824
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            07666024
         BAL   SRR,B2B                  PROCESS B2                      07666224
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            07666324
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA .Q           07666424
         BNE   DLMERR                   NO, DELIMETER ERROR             07666624
SS43RD   LA    SP1,1(SP1)               BUMP OPERAND POINTER            07666824
         BAL   SRR,F8ARGX               MASK EXPRESSION EVALUATION      07666924
         TM    AEXP1,X'01'              TEST IF MASK GT 15              07667026
         BNZ   I4ERR                    BRANCH IF YES                   07667126
         CLI   VALUEB+3,10              IS VALUE A DECIMAL DIGIT .Q     07667226
         BL    M1PR1                    YES, FILL IT IN INSTRUCTION     07667326
I4ERR    BAL   SRR,ERRNO0               REPORT THE MASK ERROR           07667426
         DC    AL2(ERRIMM)              IMMEDIATE FIELD ERROR           07667526
         B     SS4EXIT                  GO AND TERMINATE                07667626
M1PR1    MVN   F8INST+4(1,ACT),VALUEB+3 PUT M INTO INSTRUCTION          07667726
SS4EXIT  CLI   0(SP1),IBLANK            IS DELIMITER BLANK .Q           07667826
         BE    MOPRTN                   YES, EXIT                       07668024
         B     DLMERR                   NO, ERROR                       07668224
SS4A     CLI   0(SP1),ILPARN            IS DELIMETER LEFT PAREN .Q      07668424
         BNE   DLMERR                   NO, ERROR                       07668624
         LA    SP1,1(SP1)               BUMP OPERAND POINTER            07668824
         CLI   0(SP1),ICOMMA            IS DELIMETER COMMA .Q           07669024
         BNE   SS4B                     IF NO, PROCESS LENGTH           07669224
         BAL   SRR,IMPLL1               IMPLIED LENGTH 1 TO INSTRUCTION 07669424
         B     SS4E                     PROCESS BASE 1                  07669624
SS4B     BAL   SRR,L1PROC               PROCESS L1                      07669824
         MVO   F8INST+4(1,ACT),VALUEB+3(1) L1 VALUE TO INSTRUCTION      07670024
         BNE   SS4D                     IF DELIMETER NOT COMMA, SKIP B1 07670224
SS4E     LA    SP1,1(SP1)               BUMP OPERAND POINTER            07670424
         BAL   SRR,B1                   PROCESS B1                      07670624
SS4C     LA    SP1,1(SP1)               BUMP OPERAND POINTER            07670824
         CLI   0(SP1),ICOMMA            IS DELIMETER AFTER PAREN COMMA  07671024
         BE    SS42ND                   IF YES, DO SECOND OPERAND       07671224
         B     DLMERR                   IF NO, DELIMETER ERROR          07671424
SS4D     CLI   0(SP1),IRPARN            IS DELIMETER RIGHT PAREN .Q     07671624
         BE    SS4C                     CHECK NEXT DELIMETER            07671824
         B     DLMERR                   IF NO, DELIMETER ERROR          07672024
.NOSS4A  ANOP                                                           07675024
         SPACE     2                                                    07680020
R1PROC   ST    SRR,RRHOLD               R1 PROCESSOR ENTRY, STORE EXIT  07700020
         BAL   SRR,F8ARGX               REGISTER EXPRESSION EVALUATION  07720020
         TM    AEXP1,X'03'              REGISTER REQUIREMENTS AND SIZE  07740020
         BZ    R1PR1                    IF 0, OK                        07760020
         BAL   SRR,REGERR               REGISTER ERROR ROUTINE          07780020
R1PR1    MVO   F8INST+4(1,ACT),VALUEB+3(1) PUT R1 INTO INSTRUCTION      07800020
         CLI   0(SP1),ICOMMA            IS ENDING DELIMETER COMMA       07820020
         L     SRR,RRHOLD               LOAD EXIT                       07840020
         BR    SRR                      EXIT TO CALLER                  07860020
R2PROC   ST    SRR,RRHOLD               R2 PROCESSOR ENTRY,STORE EXIT   07880020
         CLI   TXHEX(GRA),X'25'         CHECK LRDR OP                   07885023
         BNE   R2CHEK                   NO                              07890023
         NI    TXASC(GRA),X'BF'         YES, MAKE R2 0-4 REQMENT        07895023
R2CHEK   CLI   TXHEX(GRA),X'27'         CHECK MXDR OP                   07900023
         BNE   R2VAL                    NO                              07905023
         OI    TXASC(GRA),X'40'         YES, MAKE R2 EVEN REQMENT       07910023
R2VAL    BAL   SRR,F8ARGX               REGISTER EXPRESSION EVAL        07915023
         TM    AEXP1,X'03'              REGISTER & SIZE REQUIREMENT     07920020
         BZ    R2PR1                    IF 0, OK                        07940020
         BAL   SRR,REGERR               REGISTER ERROR ROUTINE          07960020
R2PR1    OC    F8INST+4(1,ACT),VALUEB+3 R2 (OR R3) TO INSTRUCTION       07980020
         CLI   0(SP1),ICOMMA            IS ENDING DELIMETER COMMA       08000020
         L     SRR,RRHOLD               LOAD EXIT                       08020020
         BR    SRR                      EXIT TO CALLER                  08040020
R3PROC   ST    SRR,RRHOLD               R2 PROCESSOR ENTRY, STORE EXIT  08060020
         BAL   SRR,F8ARGX               REGISTER EXPRESSION EVALUATION  08080020
         TM    AEXP1,X'01'              SIZE REQUIREMENT ONLY           08100020
         BZ    R2PR1                    IF 0, OK                        08120020
         BAL   SRR,REGERR               REGISTER ERROR ROUTINE          08140020
         B     R2PR1                    FINISH SCAN ETC                 08160020
IPROC    ST    SRR,RRHOLD               I PROCESSOR ENTRY, STORE EXIT   08180020
         BAL   SRR,F8AREX               EVALUATE IMMEDIATE EXPRESSION   08200020
         AIF       (NOT &SYM370).MCNOTOK                                08204025
         CLI   F8INST+3(ACT),X'AF'      IS IT MC (MONITOR CALL) .Q      08206025
         BNE   NOT#MC                   NO, CHECK AGAINST 255           08208025
         TM    AEXP1,X'01'              IS SIZE 15 OR LESS .Q           08210025
         BZ    IPR1                     YES, GO AHEAD                   08212025
         B     IMMERR                   NO, GO LOG OUT ERROR            08214025
NOT#MC   DS    0H                       NOT A 370 MC INSTRUCTION        08216025
.MCNOTOK ANOP                                                           08218025
         TM    AEXP2,X'01'              IS SIZE OK                      08220020
         BZ    IPR1                     IF 0, OK                        08240020
IMMERR   BAL   SRR,ERRZRO               IMMEDIATE ERROR                 08260020
         DC    AL2(ERRIMM)              IMMEDIATE FIELD ERROR           08280020
IPR1     MVC   F8INST+4(1,ACT),VALUEB+3 IMMEDIATE VALUE TO INSTRUCTION  08300020
         CLI   0(SP1),IBLANK            IS BLANK TERMINATING DELIMETER  08320020
         BE    MOPRTN                   IF YES, OK EXIT TO MLC          08340020
         B     DLMERR                   IF NOT, DELIMETER ERROR         08360020
X2PROC   ST    SRR,RRHOLD               X2 PROCESSOR ENTRY              08380020
         BAL   SRR,F8AREX               EVALUATE INDEX EXPRESSION       08400020
         TM    AEXP1,X'01'              IS SIZE OK                      08420020
         BZ    X2PR1                    YES                             08440020
         BAL   SRR,REGERR               NO, LOG REGISTER ERROR          08460020
X2PR1    TM    VALUEB+3,X'FF'           TEST IF DEFINED REGISTER        08465024
         BZ    X2PR1A                   IS NON-ZERO                     08470024
         NI    ALIGNERR,X'FE'           YES, DON'T GIVE ALIGN ERROR     08475024
X2PR1A   OC    F8INST+4(1,ACT),VALUEB+3 INDEX VALUE TO INSTRUCTION      08480024
         CLI   0(SP1),ICOMMA            IS ENDING DELIMETER COMMA       08500020
         L     SRR,RRHOLD               LOAD EXIT                       08520020
         BR    SRR                      EXIT TO CALLER                  08540020
L1PROC   ST    SRR,RRHOLD               TEMP STORE EXIT                 08560020
         BAL   SRR,F8AREX               EVALUATE L1                     08580020
         TM    AEXP2,X'01'              IS THIS ABSOLUTE EXPRESSION & + 08600020
         BO    LLNERR                   IF 1, LENGTH ERROR              08620020
         L     GRY,VALUEB               EXPRESSION VALUE TO GRY         08640020
         S     GRY,K17                  TEST AGAINST LIMIT OF 16        08660020
L1L2L    BC    11,LLNERR                BRANCH ON ALL BUT NEGATIVE      08680020
         L     GRY,VALUEB               EXPRESSION VALUE TO GRY         08700020
         LTR   GRY,GRY                  TEST FOR ZERO                   08720020
LDECSW   BC        *-*,L1PR1(*-*)      IF SS2 BR ON 0.  IF SS3 BR.      08740020
         BCTR  GRY,0                    IF NOT 0, DECREMENT BY 1        08760020
DONTZAP  ST    GRY,VALUEB               PUT BACK IN VALUE B             08780023
L1PR1    L     SRR,RRHOLD               LOAD EXIT                       08800020
         CLI   0(SP1),ICOMMA            IS EXPRESSION DELIMETER COMMA   08820020
         BR    SRR                      EXIT TO CALLER                  08840020
L2PROC   EQU   L1PROC                   L2 PROCESSOR SAME AS L1         08860020
         AIF       (NOT &RPQ67).RPQ67#3                                 08861023
*                                                                       08862023
WEIRDLEN ST        SRR,RRHOLD          SAVE RETURN ADDRESS              08863023
         BAL       SRR,F8AREX          EVALUATE THE LENGTH              08864023
         TM        AEXP1,X'01'         IS IT < 16 AND > 0 ?             08865023
         BO        LLNERR              NO                               08866023
         L         GRY,VALUEB          PUT LENGTH IN GRY                08867023
         S         GRY,=F'5'           IS IT LESS THAN 5 ?              08868023
         BNM       LLNERR              IF NOT, LENGTH ERROR             08869023
         A         GRY,=F'4'           RESTORE TO IBM LENGTH            08870023
         BNM       DONTZAP             IF > 0, DON'T ZERO VALUE         08871023
         SR        GRY,GRY             OTHERWISE LEAVE TRUE ZERO        08872023
         B         DONTZAP                                              08873023
.RPQ67#3 ANOP                                                           08874023
LPROC    ST    SRR,RRHOLD               L PROCESSOR, TEMP STORE EXIT    08880020
         BAL   SRR,F8AREX               EVALUATE L EXPRESSION           08900020
         TM    AEXP3,X'01'              IS THIS ABSOLUTE EXPRESSION & + 08920020
         BO    LLNERR                   IF 1, LENGTH ERROR              08940020
         L     GRY,VALUEB               EXPRESSION VALUE TO GRY         08960020
         S         GRY,K257256          TEST FOR LIMIT OF 256 OR 255    08980020
         B     L1L2L                    BRANCH TO COMMON PART LENGTH    09000020
S2D2A    ST    SRR,RRHOLD               S1 OR S2 OR D1 OR D2 ENTRY      09020020
         BAL   SRR,F8AREX               EVALUATE S OR D EXPRESSION      09040020
         TM    SREXP,X'01'              IS IT SIMPLY RELOCATABLE        09060020
         BO    S2D2AA                   IF ONE, TRY ABSOLUTE BRANCH     09080020
         BAL   SRR,DECOMP               YES, SIMPLY RELOCATABLE         09100020
*./      DELETE    SEQ1=09120020,SEQ2=09120020                          09120022
         MVI   ABSFLG,X'00'            TURN ABSOLUTE FLAG OFF           09140020
         MVC   F8INST+12(3,ACT),VALUEB+1 SET ABSOLUTE OPERAND 2         09160020
         MVC   F8INST+5(2,ACT),BSTVAL+2  SET BASE AND DISPLACEMENT 2    09180020
         TM    SREXP,X'2D'              ANY ERROR TRAIL LEFT            09200020
         BZ    S2D2XT                   IF 0, NO                        09220020
         BAL   SRR,S2ERR                IF YES, HUNT DOWN ERROR         09240020
S2D2XT   CLI   0(SP1),IBLANK            IS EXPRESSION DELIMETER BLANK   09260020
         L     SRR,RRHOLD               LOAD EXIT                       09280020
         BR    SRR                      EXIT TO CALLER                  09300020
S2D2AA   TM    AEXP3,X'01'               IS THIS ABSOLUTE               09320020
         BO    SSERRTST                HANDLE ERROR                     09340020
         BAL   SRR,DECOMP              DECOMPOSE EXPRESSION VALUE       09360020
*./      DELETE    SEQ1=09380020,SEQ2=09380020                          09380022
         MVI   ABSFLG,X'FF'            TURN ABSOLUTE FLAG ON            09400020
         MVC   F8INST+12(3,ACT),VALUEB+1 SET ABSOLUTE OPERAND 2         09420020
         MVC   F8INST+5(2,ACT),BSTVAL+2  SET B2 AND D2 IN INSTRUCTION   09440020
         TM    AEXP3,X'2D'              ANY ERROR TRAIL LEFT            09460020
         BZ    S2D2XT                   NO, SKIP TO COMMON ROUTINE      09480020
         BAL   SRR,D2ERR                YES, HUNT DOWN ERROR            09500020
         B     S2D2XT                   BRANCH TO COMMON ROUTINE        09520020
S1D1     ST    SRR,RRHOLD               TEMP STORE RETURN               09540020
         BAL   SRR,F8AREX               EVALUATE S1 OR D1               09560020
         TM    SREXP,X'01'              IS IT SIMPLY RELOCATABLE        09580020
         BO    S1D1AB                   NO                              09600020
         BAL   SRR,DECOMP               DECOMPOSE EXPRESSION VALUE      09620020
*./      DELETE    SEQ1=09640020,SEQ2=09640020                          09640022
         MVI   ABSFLG,X'00'            TURN ABSOLUTE FLAG OFF           09660020
         MVC   F8INST+9(3,ACT),VALUEB+1 SET ABSOLUTE OPERAND 1          09680020
         MVC   F8INST+5(2,ACT),BSTVAL+2 SET B1 AND D1 IN INSTRUCTION    09700020
         TM    SREXP,X'55'              ANY ERROR TRAIL LEFT            09720020
         BZ    S2D2XT                   NO, SKIP TO COMMON ROUTINE      09740020
         BAL   SRR,S1ERR                YES, HUNT DOWN ERROR            09760020
         B     S2D2XT                   BRANCH TO COMMON ROUTINE        09780020
S1D1AB   TM    AEXP3,X'01'               IS THIS ABSOLUTE               09800020
         BO    SSERRTST                HANDLE ERROR                     09820020
         BAL   SRR,DECOMP              DECOMPOSE EXPRESSION VALUE       09840020
*./      DELETE    SEQ1=09860020,SEQ2=09860020                          09860022
         MVI   ABSFLG,X'FF'             ABSOLUTE FLAG                   09880022
         MVC   F8INST+9(3,ACT),VALUEB+1 SET ABSOLUTE OPERAND 1          09900020
         MVC   F8INST+5(2,ACT),BSTVAL+2 SET B1 AND D1 IN INSTRUCTION    09920020
         TM    AEXP3,X'55'              ANY ERROR TRAIL LEFT            09940020
         BZ    S2D2XT                   IF NONE, COMMON EXIT            09960020
SSERRTST BAL   SRR,D1ERR               IF ERROR, HUNT IT DOWN           09980020
         B     S2D2XT                   BRANCH TO COMMON EXIT           10000020
S2D2B    ST    SRR,RRHOLD               TEMP STORE EXIT                 10020020
         BAL   SRR,F8AREX               EVALUATE S2 OR D2               10040020
         TM    SREXP,X'01'              IS THIS EXPRESSION SIMPLY RELOC 10060020
         BO    S2D2AB                   NO, TRY ABSOLUTE                10080020
         BAL   SRR,DECOMP               DECOMPOSE EXPRESSION VALUE      10100020
*./      DELETE    SEQ1=10120020,SEQ2=10120020                          10120022
         MVI   ABSFLG,X'00'             ABSOLUTE FLAG                   10140020
         MVC   F8INST+12(3,ACT),VALUEB+1 SET ABSOLUTE OPERAND 2         10160020
         MVC   F8INST+7(2,ACT),BSTVAL+2 SET B2 AND D2 IN INSTRUCTION    10180020
         TM    SREXP,X'2D'              ANY ERROR TRAIL LEFT            10200020
         BZ    S2D2XT                   NO, EXIT TO COMMON EXIT         10220020
         BAL   SRR,S2ERR                YES, HUNT ERROR                 10240020
         B     S2D2XT                   EXIT TO COMMON EXIT             10260020
S2D2AB   TM    AEXP3,X'01'               IS THIS ABSOLUTE               10280020
         BO    SSERRTST                 IF NOT ABSOLUTE HANDLE ERROR    10300020
         BAL   SRR,DECOMP               DECOMPOSE EXPRESSION VALUE      10320020
*./      DELETE    SEQ1=10340020,SEQ2=10340020                          10340022
         MVI   ABSFLG,X'FF'             ABSOLUTE FLAG                   10360020
         MVC   F8INST+12(3,ACT),VALUEB+1 SET ABSOLUTE OPERAND 2         10380020
         MVC   F8INST+7(2,ACT),BSTVAL+2 SET B2 AND D2 IN INSTRUCTION    10400020
         TM    AEXP3,X'2D'              ANY ERROR TRAIL LEFT            10420020
         BZ    S2D2XT                   NO, GO TO COMMON EXIT           10440020
         BAL   SRR,D2ERR                YES, HUNT ERROR                 10460020
         B     S2D2XT                   NOW GO TO COMMON EXIT           10480020
B1       ST    SRR,RRHOLD               SAVE RETURN                     10500020
         BAL   SRR,F8AREX               EVALUATE EXPRESSION             10520020
         BAL   SRR,BXTEST               SEE IF LEGAL BASE               10540022
         MVC   F8INST+5(2,ACT),VALUEE+2 NON-DECOMPOSED ABS DISPLACEMENT 10550022
         MVO   F8INST+5(1,ACT),VALUEB+3(1) B1 VALUE TO INSTRUCTION      10560022
BXIT     L     SRR,RRHOLD               RESTORE RETURN ADDRESS          10580020
         CLI   0(SP1),IRPARN            IS NEXT CHAR A RIGHT PARN       10600020
         BNE   DLMERR                   NO, ERROR                       10620020
         BR    SRR                      YES, EXIT                       10640020
B2A      EQU   B1                       B2A AND B1 ARE DONE THE SAME    10660020
B2B      ST    SRR,RRHOLD               SAVE EXIT ADDRESS               10680020
         BAL   SRR,F8AREX               EVALUATE EXPRESSION             10700020
B2B1     BAL   SRR,BXTEST               SEE IF LEGAL BASE               10720020
         MVC   F8INST+7(2,ACT),VALUEE+2 NON-DECOMPOSED ABS DISPLACEMENT 10730022
         MVO   F8INST+7(1,ACT),VALUEB+3(1)   MOVE IN VALUE              10740020
         B     BXIT                     EXIT                            10760020
*********************************************************************** 10780020
***   F8AREX   ***                                                      10800020
*ABSOLUTE AND SIMPLY RELOCATABLE EXPRESSION EVALUATOR AND CHECK         10820020
* THIS ROUTINE CALLS ON THE EXPRESSION EVALUATION SUBROUTINE (EEVAL)    10840020
* TO ACTUALLY EVALUATE THE EXPRESSION.  ONCE THE EXPRESSION IS          10860020
* EVALUATED, CHECKS ARE MADE FOR CERTAIN POTENTIAL ERRORS.  IF A        10880020
* POTENTIAL ERROR EXISTS, THAT BIT OF A TEST FLAG REMAINS ONE. IF       10900020
* A POTENTIAL ERROR IS ELIMINATED, THAT BIT OF A GIVEN TEST FLAG IS     10920020
* SET TO ZERO.                                                          10940020
* TEST FLAGS ARE AS FOLLOWS.                                            10960020
*  AEXP1 REPRESENTS ABSOLUTE EXPRESSION OF VALUE LESS THAN   16         10980020
*  AEXP2 REPRESENTS ABSOLUTE EXPRESSION OF VALUE LESS THAN  256         11000020
*  AEXP3 REPRESENTS ABSOLUTE EXPRESSION OF VALUE LESS THAN 4096         11020020
*  SREXP REPRESENTS SIMPLY RELOCATABLE EXPRESSION                       11040020
* BITS WITHIN FLAGS ARE AS FOLLOWS.                                     11060020
*  BIT7 = 0, VALID VALUE                                                11080020
*  BIT6 = 0, REGISTER REQUIREMENT MET                                   11100020
*  BIT5 = 0, ALIGNMENT CORRECT                                          11120020
*  BIT4 = 0, LITERAL IN SECOND OPERAND REQUIREMENT OK                   11140020
*  BIT3 = 0, LITERAL IN FIRST OPERAND REQUIREMENT OK                    11160020
*  BIT2      SPARE LATER TO BE USED FOR REENTRANT CHECK                 11180020
*  BIT1      SPARE                                                      11200020
*  BIT0      SPARE                                                      11220020
*********************************************************************** 11240020
F8AREX   MVI   EXFLGS,X'7F'             BIT 1 = 0, DONT CHECK REG       11260020
         B     F8RREX                   CHECK REGISTER VALIDITY         11280020
F8ARGX   MVI   EXFLGS,X'FF'             BIT 1 SET TO 1                  11300020
F8RREX   MVC   EXFLGS+1(3),EXFLGS       INITIALIZE ABS AND RELOC FLAGS  11320020
         MVI   CREXPC,X'FF'        INITIALIZE COMPLEX OFF               11340020
         MVI   LTVLSW,X'00'             INITIALIZE LITERAL SWITCH       11360020
         XC    VALUEB(6),VALUEB         ZERO VALUE AND SIGN AND ESD-ID  11380020
         ST    SRR,HLDSRR               SAVE EXIT                       11400020
         CLI   0(SP1),IEQUAL            CHECK FOR LITERAL               11420020
         BE    LTVL                     DO LITERAL EVALUATION           11440020
         SR    SP2,SP2                                                  11460020
         L     SRB,CEEVAL(ACT)          EEVAL TABLE ADDRESS             11480020
         BALR  SRR,SRB                  DO EXPRESSION EVALUATION        11500020
LTVLXT   BC    8,AEXP                   IF ZERO, ABSOLUTE VALUE         11520020
         BC    4,JSREXP                 IF 1, SIMPLY RELOCATABLE EXPR   11540020
         BC    2,CREXP                  IF 2, COMPLEXLY RELOC EXPR      11560020
         BC    1,EREVAL                 IF 3, EXPRESSION ERROR          11580020
AEXP     LTR   GRY,SP2                  CURRENT EXP VALUE TEST NEGATIVE 11600020
         ST    GRY,VALUEB               EXPRESSION VALUE TO VALUEB      11620020
         TM    VALUEB,X'FF'             TEST FOR WRAP AROUND            11640020
         BM    EXWRAP                   IF MIXED, WRAP AROUND OCCURRED  11660020
         MVI   VALUEB,X'00'             ZERO FIRST BYTE OF VALUE        11680020
         SL    GRY,K16                  IF LESS THAN +16, OK            11700020
         BM    SEXP1                                                    11720020
         L     GRY,VALUEB               EXPRESSION VALUE TO GRY         11740020
         SL    GRY,K256                 IS VALUE LESS THAN +256         11760020
         BM    SEXP2                                                    11780020
         B     SEXP3                    ABSOLUTE EXPRESSION             11800020
EXWRAP   BAL   SRR,ERRZRO               ZERO INSTRUCTION AND LOG ERROR  11820020
         DC    AL2(ERRWRP)              WRAP AROUND ERROR CODE          11840020
         XC    VALUEB(4),VALUEB         ZERO VALUE                      11860020
         B     SEXP3                    SET ABSOLUTE                    11880020
JSREXP   NI    SREXP,X'FE'              SHUT OFF SIMPLY RELOC BIT       11900020
         MVC   VALUEB(6),0(SP2)         EXPRESSION VALUE, SIGN & ESD-ID 11920020
         B     PASSRE                   BRANCH PAST ABSOLUTE SETTINGS   11940020
SEXP1    NI    AEXP1,X'FE'              15 OK                           11960020
SEXP2    NI    AEXP2,X'FE'              255 OK                          11980020
SEXP3    NI    AEXP3,X'9E'              VALUE AND REENTRANT BITS OFF    12000020
         NI    SREXP,X'9F'              REENTRANT BITS OFF              12020020
PASSRE   LA    GRA,F8WORK(ACT)          ADDRESS OF FIRST BYTE OF TEXT   12040020
         TM    AEXP1,X'80'              IF BIT 1 IS ZERO,               12060020
         BZ    NONREG                   NO REGISTER TEST REQUIRED       12080020
         TM    TXASC(GRA),X'80'         TEST ASSEMBLER SWITCH CODE      12100020
         BZ    NOTFLT                   IF ZERO, NOT FLOATING POINT     12120020
         TM    TXASC(GRA),X'40'         TEST ASSEMBLER SWITCH CODE      12140020
         BO    TS0246                   IF ZERO, ONLY 0 OR 4 ALLOWED    12160020
         AIF       (NOT &RPQ67).RPQ67#4                                 12165023
         OI        TXASC(GRA),X'40'    NEXT REGISTER CAN BE 2 OR 6      12170023
.RPQ67#4 ANOP                                                           12175023
         TM    VALUEB+3,X'FB'           TEST VALUE FOR OTHER THAN 4     12180020
         BZ    SET106                   IF ZERO, VALUE IS 0 OR 4        12200020
         B     DNTSET                   IF NOT, DONT SET                12220020
TS0246   L     GRZ,VALUEB               CURRENT EXPRESSION VALUE        12240020
*./      DELETE    SEQ1=12260020,SEQ2=12360020                          12360023
         N         GRZ,FLOTMASK        TEST FOR 0, 2, 4, OR 6           12380023
         BZ        SET106              IF SO, OK                        12400023
         B     DNTSET                   IF NONE OF THESE, DONT SET      12420020
NOTFLT   TM    TXASC(GRA),X'40'        CHECK IF EVEN REGISTER NEEDED    12440020
         BZ    SET106                   IF ZERO, EVEN NOT NECESSARY     12460020
         AIF       (NOT &SYM370).STAY1                                  12472224
         CLI   F8INST+3(ACT),X'0F'      IS IT MVCL OR CLCL              12472424
         BNH   DBLEVEN                  YES, DON'T RESET EVEN REGISTER  12472624
.STAY1   ANOP                                                           12472824
         NI    TXASC(GRA),X'BF'         EVEN REGISTER ONLY IN 1 ST OPND 12480020
         AIF       (NOT &SYM370).STAY2                                  12492224
DBLEVEN  DS    0H                                                       12492424
.STAY2   ANOP                                                           12492624
         TM    VALUEB+3,X'01'           CHECK IF EXPRESSION VALUE EVEN  12500020
         BO    DNTSET                   IF 1, VALUE IS NOT EVEN         12520020
SET106   NI    AEXP1,X'FD'              SET REGISTER CHECK OK           12540020
DNTSET   L     SRR,HLDSRR               LOAD EXIT ADDRESS               12560020
         BR    SRR                      EXIT                            12580020
NONREG   TM    TXASC(GRA),X'30'        TEST FOR ALIGNMENT NECESSARY     12600020
         BZ    WORDAL                   IF 0, ALIGNMENT UNNECESSARY     12620020
         BO    DWALIN                   BOTH 1, DOUBLE WORD ALIGNMENT   12640020
         TM    TXASC(GRA),X'20'        IF 1, WORD ALIGNMENT NECESSARY   12660020
         BZ    HWALIN                   IF 0, HALF WORD ALIGNMENT NEEDD 12680020
FWALIN   TM    VALUEB+3,X'03'           TEST LOW TWO BITS OF VALUE      12700020
         BZ    WORDAL                   IF ZERO, WORD ALIGNED           12720020
         B     LITTST                   IF NOT ALIGNED, ERROR           12740020
DWALIN   TM    VALUEB+3,X'07'           TEST LOW THREE BITS OF VALUE    12760020
         BZ    WORDAL                   IF ZERO, DOUBLE WORD ALIGNED    12780020
         B     LITTST                   IF NOT ALIGNED, ERROR           12800020
HWALIN   TM    VALUEB+3,X'01'           TEST LOW BIT OF VALUE           12820020
         BZ    WORDAL                   IF ZERO, HALF WORD ALIGNED      12840020
         B     LITTST                   IF NOT ALIGNED, ERROR           12860020
WORDAL   NI    SREXP,X'FB'              ALIGNMENT OK                    12880020
         NI    AEXP3,X'FB'              ALIGNMENT OK                    12900020
LITTST   TM    TXASC(GRA),X'02'        IS LITERAL OK IN 2ND OPND        12920020
         BZ    SAX04                    IF ZERO, LITERAL NOT PERMITTED  12940020
SAX00    NI    SREXP,X'D7'              REENTRANT AND LITERAL OK 2ND    12960020
         NI    AEXP3,X'D7'              REENTRANT AND LITERAL OK 2ND    12980020
SAX01    TM    TXASC(GRA),X'01'        IS LITERAL OK IN 1ST OPND        13000020
         BZ    SAX05                    IF ZERO, LITERAL NOT PERMITTED  13020020
SAX02    NI    SREXP,X'AF'              REENTRANT AND LITERAL OK 1ST    13040020
         NI    AEXP3,X'AF'              REENTRANT AND LITERAL OK 1ST    13060020
         B     DNTSET                   EXIT                            13080020
SAX04    TM    CTRENTI(ACT),X'20'       IS RE-ENTRANT CHECK NEEDED .Q   13100026
         BZ    SAX040                   IF ZERO, NO                     13120020
         CLC   CTNDID+1(1,ACT),VALUEB+5 NEXT DSECT ESD-ID VS THIS ESD   13140020
         BNL   SAX04A                   IF NOT LOWER, CSECT OR COMMON   13160020
SAX040   NI    AEXP3,X'9F'              IF HI, REENTRANT                13180020
         NI    SREXP,X'9F'              IF HI REENTRANT                 13200020
SAX04A   TM    LTVLSW,X'FF'             IS THIS A LITERAL               13220020
         BNE   SAX04B                   IF NOT 0, LITERAL SKIP SETTING  13240020
         NI    SREXP,X'F7'              IF 0, NO LITERAL, TURN OFF ERR  13260020
SAX04B   B     SAX01                    CHECK FOR 1ST OPERAND           13280020
SAX05    TM    CTRENTI(ACT),X'20'       IS RE-ENTRANT CHECK REQUIRED .Q 13300026
         BZ    SAX050                   IF ZERO, NO                     13320020
         CLC   CTNDID+1(1,ACT),VALUEB+5 NEXT DSECT ESD-ID VS THIS ESD-I 13340020
         BNL   SAX05A                  IF NOT LOWER, CSECT OR COOMMON   13360020
SAX050   NI    AEXP3,X'9F'              IF HIGH, REENTRANT              13380020
         NI    SREXP,X'9F'              IF HI, REENTRANT                13400020
SAX05A   TM    LTVLSW,X'FF'             IS THIS A LITERAL               13420020
         BNE   SAX05B                   YES, SKIP SETTING               13440020
         NI    SREXP,X'EF'              NO, TURN ERROR BIT OFF          13460020
SAX05B   B     DNTSET                   EXIT                            13480020
CREXP    SR    GRZ,GRZ                  SET THE                         13500020
         ST    GRZ,VALUEB               VALUE ZERO                      13520020
         ST    GRZ,CREXPC               AND SET COMPLEX ON              13540020
         MVI   AEXP1,1                  JUST RELOCATABILITY ERROR       13560020
         MVI   AEXP2,1                  JUST RELOCATABILITY ERROR       13580020
         MVI   AEXP3,1                  JUST RELOCATABILITY ERROR       13600020
         MVI   SREXP,1                  JUST RELOCATABILITY ERROR       13620020
         B     DNTSET                                                   13640020
*********************************************************************** 13660020
***   DCCOMP   ***                                                      13680020
* THIS IS THE ENTRY TO DECOMP ROUTINE WHEN ENTERED FROM OTHER CONTROL   13700020
* SECTIONS                                                              13720020
*********************************************************************** 13740020
DCCOMP   STM   SRB,SRR,F8REGS           STUFF RETURN AND RETURN BASE    13760020
         STC   SP1,AEXP3                STORE ABSOLUTE, RELOCATABLE FLG 13780020
         LR    SP1,GRY                                                  13800020
         TM    AEXP3,X'01'              TEST IT                         13820020
         BNE   DCCM01                   IF ONE RELOCATABLE              13840020
         ST    SP2,VALUEE               PUT ABSOLUTE VALUE              13860020
         LA    SP2,VALUEE               PICK UP ITS ADDRESS             13880020
DCCM01   MVC   VALUEB(6),0(SP2)         EXPRESSION VALUE, SIGN & ESD-ID 13900020
         BAL   SRR,DECOMP               GO TO DECOMPOSE ROUTINE         13920020
         L     SP2,BSTVAL               DECOMPOSED VALUE TO SP2         13940020
         LM    SRB,SRR,F8REGS           RESTORE RETURN AND RETURN BASE  13960020
         BR    SRR                      RETURN TO EXTERNAL PROGRAM      13980020
*********************************************************************** 14000020
***   DECOMP   ***                                                      14020020
* THIS ROUTINE DECOMPOSES BOTH ABSOLUTE AND RELOCATABLE VALUES WHENEVER 14040020
* POSSIBLE.  WHEN NOT POSSIBLE A RELOCATABILITY ERROR IS NOTED.         14060020
*********************************************************************** 14080020
DECOMP   SR    GRZ,GRZ                  ZERO REGISTER                   14100020
         MVI   DCMPSW,X'00'             SET NO REGISTER SWITCH          14120020
         MVC   TEMVAL(4),VALUEB        SAVE VALUE FOR FUTURE USE        14140020
         L     GRC,USNGPP(ACT)         USING TABLE FLAGS POINTER        14160020
         L     GR2,USNGTP(ACT)         USING TABLE POINTER              14180020
         STC   GRZ,BSTREG               ZERO BEST REGISTER              14200020
         TM    AEXP3,X'01'                                              14220020
         BZ    DCMP01                   IF ZERO, ESD-ID IS ZERO         14240020
         IC    GRZ,5(SP2)               IF NOT, FETCH ESD-ID            14260020
         STC   GRZ,VALUEB              ESD-ID TO FIRST BYTE             14280020
         MVC   VALUEE(4),VALUEB         VALUE AND ESD-ID                14300020
         MVC   BSTVAL(4),BYTES3         HIGHST POSSIBLE RELOC VAL       14320020
         B     DCMP0A                   BRANCH AROUND ABSOLUTE SETTING  14340020
DCMP01   L     GRZ,VALUEB              ESD-ID AND VALUE                 14360020
         ST    GRZ,VALUEE                                               14380020
         LR    GRY,GRZ                 ESDID AND VALUE                  14400020
         N     GRY,BYTES3               DROP LEADING BYTE               14420020
         ST    GRY,BSTVAL               FOR INITIAL VALUE               14440020
DCMP0A   LA    GRA,16                   COUNTER                         14460020
         SR    GRB,GRB                  USINGP INDEX                    14480020
         SR    GR1,GR1                                                  14500020
DCMP02   SR    GRD,GRD                  ZERO REGISTER                   14520020
         L     GRC,USNGPP(ACT)          ADDR OF USNG TABLE POINTERS     14540020
         IC    GRD,0(GRB,GRC)           ONE OF 16 USING TABLE INDICATOR 14560020
         LTR   GRD,GRD                  IS THIS REGESTER BEING USED     14580020
         BZ    DCMP03                   IF ZERO, NOT USING              14600020
         IC    GRD,0(GR1,GR2)          INPUT USING ESD-ID               14620020
         SR    GR0,GR0                  ZERO REGISTER ZERO TO LOSE JUNK 14640020
         IC    GR0,VALUEB               ESD-ID THIS VALUE               14660020
         SR    GRD,GR0                  USING ESD VS THIS ESD           14680020
         BNE   DCMP03                  IF NOT EQUAL, SKIP IT            14700020
         L     GRZ,VALUEE                                               14720020
         L     GRC,LITWRK               WITHIN LITERAL POOL             14740020
         L     GR2,USNGTP(ACT)                                          14760020
         SL    GRZ,0(GR1,GR2)           VALUE & ESD-ID IN USING TABLE   14780020
         N     GRZ,BYTES3               DROP LEADING BYTE               14800020
         CL    GRZ,BSTVAL               SEE IF THIS IS THE BEST VALUE   14820020
         BH    DCMP03                   IF HI, NO GOOD                  14840020
         OI    DCMPSW,X'FF'             SET REGISTER POSSIBILITY        14860020
         ST    GRZ,BSTVAL               IF NOT, KEEP BEST VALUE         14880020
         STC   GRB,BSTREG               KEEP AS BEST REGISTER           14900020
DCMP03   BCT   GRA,DCMP06                                               14920020
         TM    DCMPSW,X'FF'             HAS A POSSIBLE REGISTER FOUND   14940020
         BZ    DCMP09                   CHECK FOR ABSOLUTE              14960020
DCMP04   L     GRZ,BSTVAL               TAKE BEST VALUE TO DATE         14980020
         SL    GRZ,FOR096               1 TOO BIG FOR DISPLACEMENT      15000020
         BM    DCMP05                   IF NEGATIVE GO TO ENDOFF        15020020
DCMPER   SR    GRZ,GRZ                  IF NOT, ERROR                   15040020
         ST    GRZ,BSTVAL               ZERO BEST VALUE                 15060020
         STC   GRZ,BSTREG               ZERO BEST REGISTER              15080020
         TM    CTSCON(ACT),X'08'        IS IT S-CON CALL TO DECOMP .Q   15084026
         BZ    DCMPER1                  BRANCH IF NOT                   15088026
         OI    CTSCON(ACT),X'04'        YES, INDICATE ADDRESSING ERROR  15092026
         B     DCMP05                   FOR S-CON ROUTINE               15096026
DCMPER1  ST    SRR,HLDSRR               SAVE RETURN                     15100026
         BAL   SRR,ERRZRO              ADDRESSABILITY ERROR             15120020
         DC    AL2(ERRADR)             ADDRESSABILITY ERROR             15140020
         L     SRR,HLDSRR               RESTORE RETURN ADDRESS          15160020
DCMP05   IC    GRZ,BSTREG               REGISTER                        15180020
         SLL   GRZ,4                    POSITION FOR MERGE              15200020
         STC   GRZ,BSTREG                                               15220020
         OC    BSTVAL+2(1),BSTREG       COMBINE BASE AND REGISTER       15240020
         MVC   VALUEB(4),TEMVAL        RESTORE VALUE TO VALUEB          15260020
         BR    SRR                      ERROR EXIT FROM SUBROUTINE      15280020
DCMP06   LA    GRB,1(GRB)              NEXT USINGP                      15300020
         LA    GR1,4(GR1)               NEXT USING VALUE                15320020
         B     DCMP02                   DO NEXT                         15340020
DCMP09  TM    VALUEB,X'FF'             IS VALUE ABSOLUTE                15360020
         BNE   DCMPER                   IF NOT 0, DECOMP ERROR          15380020
         L     GRZ,BSTVAL               BEST VALUE TO REGISTER          15400020
         S     GRZ,FOR096               CHECK SIZE OF ABLOLUTE          15420020
         BM    DCMP05                   IF OK CONTINUE                  15440020
DESPER   SR    GRZ,GRZ                  DELPLACEMENT ERROR              15460020
         ST    GRZ,BSTVAL               ZERO BEST VALUE                 15480020
         STC   GRZ,BSTREG               ZERO BEST REGISTER              15500020
         ST    SRR,HLDSRR               SAVE RETURN REGISTER            15520020
         BAL   SRR,ERRZRO               LOG DISPLACEMENT ERROR          15540020
         DC    AL2(ERRDIS)              VALUE FOR DISPLACEMENT          15560020
         L     SRR,HLDSRR               LOAD RETURN ADDRESS             15580020
         B     DCMP05                   FINISH OFF ROUTINE              15600020
*********************************************************************** 15620020
***************LITERAL EVALUATION ROUTINE****************************** 15640020
***** THIS ROUTINE MERELY SCANS FOR NEXT OPERAND.  LEAVING SP1 POINTING 15660020
******AT THE DELIMETER IF ANY.  IT DOES A SYNTACTICAL ERROR SCAN AND    15680020
******FETCHES THE VALUE OF THE LITERAL AND ITS LENGTH.***************** 15700020
*********************************************************************** 15720020
FAKE     B     2(SRR)                   SKIP AROUND LOG ERROR NUMBER    15740020
FAKEIT   DC    A(FAKE,FAKE)             CHANGED SO WE DONT LOG ERROR    15760020
LTVL     MVI   QUOTFLAG,X'00'           SET QUOTE FLAG EVEN             15780020
         TM    LITRLTWO,X'FF'           ANY PREVIOUS LITERAL THIS OPRND 15800020
         BNZ   LTVL13                   IF NOT 0, YES -- ERROR          15820020
         MVI   LITRLTWO,X'FF'           SET LITRL ENCOUNTERED SWITCH ON 15840020
         SR    GRB,GRB                  SET PAREN FLAG BALANCED         15860020
         L     GRC,F8OPRN(ACT)          ADDR OF OPRN                    15880020
         SR    GRD,GRD                  ZERO REGISTER                   15900020
         BCTR  GRC,0                    POINTER TO OPRN LENGTH          15920020
LTVL00   DS    0H                                                 V7A13 15930028
         IC    GRD,0(GRC)               INPUT PPRN LENGTH               15940020
         A     GRD,F8OPRN(ACT)          COMPUTE END OF OPRN             15960020
         LR    GRX,GRD                  TEMP SAVE                       15980020
LTVL01   SR    GRD,SP1                  IS POINTER AT END               16000020
         BM    LTVLERR                  IF NEGATIVE, YES, ERROR         16020020
         CLI   0(SP1),ILPARN            IS THIS CHAR A LEFT PAREN       16040020
         BE    LTVLP2                   IF YES, PROCESS THAT TYPE LITR  16060020
         CLI   0(SP1),IQUOTE            IS THIS CHAR A QUOTE            16080020
         BE    LTVLQ1                   IF COMMA, PROC THAT KIND LITR   16100020
         LA    SP1,1(SP1)               IF NOT POINT AT NEXT CHAR       16120020
         LR    GRD,GRX                  GET END OF OPERAND ADDRESS      16140020
         B     LTVL01                   TRY AGAIN                       16160020
LTVLP2   LA    SP1,1(SP1)               POINT AT CHAR AFTER LEFT PAREN  16180020
         MVC   FAKEIT,CLOGER(ACT)       CHANGE SO LOG ERROR DOESNT      16200020
         MVC   CLOGER(4,ACT),FAKEIT+4     LOG ERROR BUT JUST RETURNS    16220020
         L     SRB,CEEVAL(ACT)          ADDRESS OF EXPRESSION EVAL RTN  16240020
         BALR  SRR,SRB                  EVALUATE EXPRESSION             16260020
         MVC   CLOGER(4,ACT),FAKEIT     RESTORE LOG ERROR EXIT          16280020
         LTR   SP1,SP1                  HAS CATASTROPHIC ERROR OCCURRED 16300020
         BZ    CTRTRN(ACT)              IF ZERO ALL THRU                16320020
         CLI   0(SP1),ICOMMA            DID EXPRESSION END WITH COMMA   16340020
         BE    LTVLP2                   IF SO, DO AGAIN                 16360020
         CLI   0(SP1),IRPARN            DID EXPRESSION END WITH RT PARN 16380020
         BNE   DLMERR                   IF NOT, DELIMETER ERROR         16400020
         LA    SP1,1(,SP1)              BUMP OPERAND POINTER      V7A13 16420028
         CLI   0(SP1),ICOMMA            IS LITERAL DELIM COMMA .Q V7A13 16430028
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13 16440028
         CLI   0(SP1),IBLANK            IS LITERAL DELIM BLANK .Q V7A13 16450028
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13 16460028
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A13 16470028
         BNO   DLMERR                   NO, DELIMITER ERROR       V7A13 16480028
         SR    GRD,GRD                  ZERO WORK REGISTER        V7A13 16500028
         B     LTVL00                   AND TRY AGAIN             V7A13 16520028
LTVLQ1   XI    QUOTFLAG,X'FF'           TURN ON QUOTFLAG                16540020
         B     LTVLQ5                   CHECK NEXT CHARACTER            16560020
LTVLQ2   CLI   1(SP1),IQUOTE            IS DOUBLE QUOTE PRESENT         16580020
         BE    LTVLQ3                   IF SO, UP OPRN POINTER          16600020
         XI    QUOTFLAG,X'FF'           FLIP ODD QUOTE FLAG             16620020
         B     LTVLQ4                   DONT SKIP OVER QUOTE            16640020
LTVLQ3   LA    SP1,1(SP1)               SKIP OVER QUOTE                 16660020
LTVLQ4   TM    QUOTFLAG,X'FF'           IS QUOTE STRING ENDED           16680020
         BNZ   LTVLQ5                   IF NOT ZERO, CONTINUE     V7A13 16700028
         LA    SP1,1(,SP1)              BUMP OPERAND POINTER      V7A13 16702028
         CLI   0(SP1),ICOMMA            IS LITERAL DELIM COMMA .Q V7A13 16704028
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13 16706028
         CLI   0(SP1),IBLANK            IS LITERAL DELIM BLANK .Q V7A13 16708028
         BE    LTVL10                   IF SO, OK TO EXIT         V7A13 16710028
         B     DLMERR                   IF NOT, DELIM ERROR       V7A13 16712028
LTVLQ5   LA    SP1,1(SP1)               IF NOT BUMP TO NEXT CHARACTER   16720020
         LR    GRD,GRX                  ADDRESS OF END OF OPERAND       16740020
         SR    GRD,SP1                  HAVE WE GONE TOOO FAR           16760020
         BM    LTVLERR                  IF NEGATIVE, YES                16780020
         CLI   0(SP1),IQUOTE            IF POSITIVE, IN NEXT CHAR QUOTE 16800020
         BE    LTVLQ2                   IF SO, CHECK FOR DOUBLES AGAIN  16820020
         B     LTVLQ5                   IF NOT, TRY NEXT CHARACTER      16840020
LTVLERR  SR    SP1,SP1                  ZERO OPERAND POINTER            16860020
         TM    *+1,X'FF'                SET CONDITION CODE FOR ERROR    16880020
         B     LTVLXT                   EXIT TO F8AREX                  16900020
LTVL10   L     GRB,CTXABP(ACT)          PTR TO APPEND FIXED FIELD       16920020
         TM    TXLASI(GRB),X'03'        IS LITERAL IN POOL .Q     V7A11 16940028
         BNZ   LITVL11                  YES, CONTINUE             V7A11 16942028
         L     GRC,CTEXTP(,ACT)         NO, GET ADDRESS TO TEXT   V7A11 16944028
         TM    2(GRC),X'02'             IS EQUAL SIGN IND. ON .Q  V7A11 16946028
         BO    LTVLERR                  YES, ERROR FOUND EARLIER  V7A11 16948028
LITVL11  DS    0H                                                 V7A11 16950028
         MVC   LITWRK+1(3),TXLDSP(GRB)  GET LITERAL DISPLACEMENT        16960020
         L     GRC,LITWRK               WITHIN LITERAL POOL             16980020
         SR    GRD,GRD                                                  17000020
         IC    GRD,TXLSTG(GRB)          GET LITERAL STRING NO           17020020
         L         SP2,LATP(ACT)       POINT TO LAT                     17030023
         LTR       SP2,SP2             IF NO TABLE, NO LITERALS         17035023
         BZ        LTVLERR                                              17040023
         AR        GRD,SP2             POINT AT LITERAL STRING          17045023
         MVC   LITWRK+1(3),1(GRD)       GET ADJUSTMENT                  17060020
         MVC   LITID(1),0(GRD)          SET ESD                         17080020
         A     GRC,LITWRK               GET ADJUSTED ADDRESS            17100020
         ST    GRC,LITWRK               FOR MAIN LINE                   17120020
         LA    SP2,LITWRK               POINTER TO VALUE FOR MAIN LINE  17140020
         SR    GRC,GRC                                                  17160020
         IC    GRC,TXLLEN(GRB)          GET EENGTH ATTRIBUTE            17180020
         STH   GRC,STLONG(ACT)          SET LENGTH ATTRIBUTE FOR MLC    17200020
LTVL12   LCR   GRC,GRC                  SET CC=4 FOR MAIN LINE          17220020
         MVI   LTVLSW,X'FF'             SET LITERAL SWITCH FOR MLC      17240020
         B     JSREXP                   TAKE SIMPLY RELOCATABLE BRANCH  17260020
LTVL13   BAL   SRR,ERRZRO               LOG AN ERROR                    17280020
         DC    AL2(ERRLIT)              INVALID LITERAL USAGE           17300020
         B     LTVLERR                  EXIT                            17320020
LITWRK   DC    F'0'                     FULL WORD ALIGNED FOR           17340020
         DC    X'0'                        LITERAL WORK AREA            17360020
LITID    DC    X'0'                     LITERAL ESD/ID                  17380020
SETSEC   STC   SP2,WORDBB               CURRENT ESD-ID                  17400020
         CLC   WORDBB(1),0(SP1)         COMP. TO ADJ TABLE ENTRIES      17420020
         BE    SECFND                   FOUND, BRANCH OUT               17440020
         LA    SP1,4(SP1)               NOT FOUND, BUMP BY 4            17460020
         L     GRX,CTADJEND(0,ACT)      END OF TABLE + 1                17480020
         CR    GRX,SP1                  IS TABLE EXHAUSTED              17500020
         BNH   SETSEC                   EXIT WHEN TABLE EXHAUSTED       17520020
         L     SP2,CTZERO(ACT)          ZERO CELL TO SHOW ERROR         17540020
         BR    SRR                      ERR O                           17560020
SECFND   L     SP2,BYTES3               0FFF FOR MASK                   17580020
         N     SP2,0(SP1)               EXTRACT CSECT ORG               17600020
         ST    SP2,F8CADJ(ACT)          STORE                           17620020
         MVC   F8INST(3,ACT),F8CADJ+1(ACT)                              17640020
         BR    SRR                      RETURN                          17660020
DLMERR   BAL   SRR,ERRZRO               LOG ERROR                       17680020
         DC    AL2(ERRDLM)             DELIMETER ERROR                  17700020
MOPRTN   TM    ALIGNERR,X'03'           TEST IF ANY ALIGN ERROR         17720024
         BNO   MOPRTA                   BRANCH IF NO                    17725024
         MVI   ALIGNERR,X'01'           RESET ALIGN ERROR               17727524
         BAL   SRR,ERRNO0               ALIGNMENT ERROR                 17730024
         DC    AL2(ERRLIN)              ALIGNMENT ERROR                 17732524
MOPRTA   TM    ERRSW,X'FF'              CHECK FOR ANY ERROR FLAG        17735024
         BZ    DNTZRO                   IF ERRSW NOT ZERO, BYPASS       17740020
         XC    F8INST+3(12,ACT),F8INST+3(ACT) ZERO INST BLDG AREA       17760020
DNTZRO   B     CTRTRN(ACT)              RETURN TO MAIN LINE CONTROL     17780020
ERRZRO   MVI   ERRSW,X'FF'              SET SWITCH TO ZERO INSTRUCTION  17800020
ERRNO0   L     SRB,CLOGER(ACT)          LOGERR BASE AND ENTRY           17820020
         BR    SRB                      ENTER LOGERR                    17840020
PROCER   BAL   SRR,ERRZRO              PROCEDURE ERROR                  17860020
         DC    AL2(ERPROC)             PROCEDURE ERROR                  17880020
         B     MOPRTN                  MACHINE OP PROCESSOR EXIT        17900020
EREVAL   MVI   ERRSW,X'FF'              EXPRESSION EVALUATION ERROR     17920020
         SR    GR0,GR0                  ZERO A REGISTER                 17940020
         ST    GR0,EXFLGS               TURN OTHER ERRORS OFF           17960020
         LTR   SP1,SP1                  IS IT CATASTROPHIC              17980020
         BZ    MOPRTN                  IF ZERO,YES, ABORT               18000020
         B     DNTSET                   IF NO, CONTINUE                 18020020
REGERR   ST    SRR,HOLDER               REGISTER ERROR, STORE RETURN    18040020
         BAL   SRR,ERRZRO               LOG ERROR                       18060020
         DC    AL2(ERRREG)             REGISTER ERROR                   18080020
         L     SRR,HOLDER               RESTORE RETURN ADDRESS          18100020
         BR    SRR                      AND EXIT                        18120020
LLNERR   BAL   SRR,ERRZRO               LENGTH ERROR                    18140020
         DC    AL2(ERRLLN)             LENGTH ERROR                     18160020
         B     L1PR1                    EXIT                            18180020
S2ERR    ST    SRR,HOLDER               ERROR FLAGGED IN S2             18200020
S2LITR   TM    SREXP,X'08'              IS THERE A LITERAL IN 2ND OPERD 18220020
         BZ    S2RENT                   NO, OK                          18240020
         MVI   LITRLTWO,X'00'           RESET 'ONE LIT ALREADY' SWITCH  18250025
         BAL   SRR,ERRZRO               ERROR                           18260020
         DC    AL2(ERRLIT)             LITERAL ERROR                    18280020
S2RENT   TM    SREXP,X'20'              REENTRANT CHECK                 18300020
         BZ    SXRLOC                   OK, GO ON                       18320020
SXRENT   BAL   SRR,ERRNO0               REENTRANT ERROR                 18340023
         DC    AL2(ERRENT)             REENTRANT ERROR                  18360020
SXRLOC   TM    SREXP,X'01'              RELOCATABILITY ERROR            18380020
         BZ    TERORL                   IF ZERO, RELOCATABILITY OK      18400020
         BAL   SRR,ERRZRO               NOT, LOG ERROR                  18420020
         DC    AL2(ERRDIS)              DISPLACEMENT ERROR              18440020
TERORL   TM    AEXP3,X'04'              IS ALIGNMENT OK                 18460020
         BZ    S2ERXT                   YES, GO ON                      18480020
         L     SRR,ADLIST1(,ACT)        POINT TO LIST1 IN ASMGASM       18481025
         TM    L1PBYT1(SRR),X'01'       IS ALIGN OPTION ON .Q           18482025
         BO    ERORL                    YES, GO LOG IT                  18483023
         LA    SRR,ALBEG                GET ALIGN OP-TABLE START        18484023
         LA    GR1,ALEND-ALBEG          GET TABLE LENGTH                18485023
         LA    GRA,F8WORK(ACT)          RESTORE GRA                     18485524
         IC    GR2,TXHEX(,GRA)          GET HEX OP-CODE                 18486023
ALEX     EX    GR2,ALCOMP               DOES OP REQUIRE ALIGNMENT       18487023
         BE    ERORL                    YES, GO LOG IT                  18488023
         LA    SRR,1(,SRR)              STEP TO NEXT OP                 18489023
         BCT   GR1,ALEX                 LOOP UNTIL TABLE SCANNED        18490023
         B     S2ERXT                   EXIT IF NO ALIGN REQUIRED       18491023
ALCOMP   CLI   0(SRR),0                 DUMMY COMPARE                   18492023
*./      DELETE    SEQ1=18500020,SEQ2=18520020                          18520024
ERORL    MVI   ALIGNERR,X'03'           POSSIBLE ALIGNMENT ERROR        18530024
S2ERXT   L     SRR,HOLDER               S2 ERROR EXIT                   18540020
         BR    SRR                      RETURN                          18560020
S1ERR    ST    SRR,HOLDER               ERROR FLAGGED IN S1             18580020
S1LITR   TM    SREXP,X'10'              IS A LITERAL IN 1ST OPERAND OK  18600020
         BZ    S1RENT                   YES, CONTINUE                   18620020
         MVI   LITRLTWO,X'00'           RESET 'ONE LIT ALREADY' SWITCH  18630025
         BAL   SRR,ERRZRO               LITERAL ERROR                   18640020
         DC    AL2(ERRLIT)             LITERAL ERROR                    18660020
S1RENT   TM    SREXP,X'40'              REENTRANT CHECK                 18680020
         BZ    SXRLOC                   OK                              18700020
         B     SXRENT                   LOG ERROR                       18720020
D2ERR    ST    SRR,HOLDER               DISPLACEMENT IN 2ND OPERAND CHK 18740020
D2RENT   TM    AEXP3,X'20'              REENTRANT CHECK                 18760020
DXRENT   BZ    D2RLOC                   OK                              18780020
         BAL   SRR,ERRNO0               REENTRANT ERROR                 18800023
         DC    AL2(ERRENT)             REENTRANT ERROR                  18820020
D2RLOC   TM    AEXP3,X'01'              ABSOLUTE VALUE CHECK            18840020
         BZ    TERORL                   IF ZERO, ABSOLUTE VALUE OK      18860020
         BAL   SRR,ERRZRO               NOT LOG ERROR                   18880020
         DC    AL2(ERRDIS)              DISPLACEMENT ERROR              18900020
         TM    CREXPC,X'FF'             IS THIS COMPLEXLY RELOCATABLE   18920020
         BNZ   TERORL                   IF NOT COMPLEXLY RELOC, NOT ERR 18940020
         BAL   SRR,ERRZRO               LOG THE ERROR                   18960020
         DC    AL2(ERRLOC)              RELOCATABILITY ERROR            18980020
         B     TERORL                   TRY NEXT ERROR TEST             19000020
D1ERR    ST    SRR,HOLDER               DISPLACEMENT IN 1ST OPERAND CHK 19020020
         TM    AEXP3,X'40'              REENTRANT CHECK                 19040020
         B     DXRENT                                                   19060020
BXTEST   ST    SRR,HOLDER               BASE TEST ... SAVE RETURN       19080020
         TM    AEXP1,X'01'              IS IT VALID VALUE .LT. 16       19100020
         BO    BXERR2                   IF NOT 0, ERROR                 19120020
         TM    VALUEB+3,X'FF'           TEST IF DEFINED REGISTER        19140024
         BZ    GOON1                    IS NON-ZERO                     19144024
         NI    ALIGNERR,X'FE'           YES, DON'T GIVE ALIGN ERROR     19146024
GOON1    CLI   ABSFLG,X'FF'             IS IT ABSOLUTE .Q               19148024
         BNE   BXERR1                   IF NOT ABSOLUTE, ERROR          19160020
         L     SRR,VALUEE               GET VALUE                       19180022
         C     SRR,K4096                SET CC DEPENDING UPON SIZE      19200022
         BL    BXEXIT                   SCRAM IF OK                     19220022
*./      DELETE    SEQ1=19240020,SEQ2=19280020                          19280022
         TM        ERRSW,X'FF'         WAS THERE AN EXPRESSION EVAL ERR 19286023
         BO        BXEXIT              OMIT THIS ERROR MESSAGE IF SO    19292023
BXERR1   BAL   SRR,ERRZRO               LOG ERROR                       19300020
         DC    AL2(ERRDIS)              DISPLACEMENT ERROR              19320020
         B     BXEXIT                   EXIT                            19340020
BXERR2   BAL   SRR,ERRZRO               LOG ERROR                       19360020
         DC    AL2(ERRREG)             REGISTER ERROR                   19380020
BXEXIT   L     SRR,HOLDER               RESTORE EXIT ADDRESS            19400020
         BR    SRR                      AND EXIT                        19420020
LENERR   DS    0H                                                       19440027
         CLC   BYTES2(2),STLONG(ACT)    WAS IMPLIED LENGTH ZERO .Q      19444027
         BCR   8,SRR                    USE ZERO IF SO                  19448027
         ST    SRR,HOLDER               SAVE RETURN ADDRESS             19452027
         BAL   SRR,ERRZRO               LOG ERROR                       19460020
         DC    AL2(ERRLEN)              IMPLIED LENGTH ERROR            19480027
         L     SRR,HOLDER               RESTORE RETURN ADDRESS          19500020
         BR    SRR                      AND EXIT                        19520020
*./      DELETE    SEQ1=19540020,SEQ2=19580020                          19580023
         ENTRY DCCOMP                   DE COMPILE - EXTERNAL           19600020
         ENTRY DECOMP                   DE COMPILE - INTERNAL           19620020
         ENTRY F8AREX                   EVALUATE EXPRESSION             19640020
KTWO     DC    F'2'                     CONSTANTS - 2                   19660020
K16      DC    F'16'                               16                   19680020
K17      DC    F'17'                    SEVENTEEN FOR LENGTH COMPARE    19700020
K240     DC    F'240'                             240                   19720020
K256     DC    F'256'                   FULL WORD VALUE 256             19740020
K257256  DC        A(256+*-*)          257 OR 256                       19760020
K4095    DC    F'4095'                           4095                   19780020
K4096    DC    F'4096'                 CONSTANT DECIMAL 4096            19800020
BYTES3   DC    X'00FFFFFF'             THREE BYTE MALK                  19820020
BYTES2   EQU       BYTES3+2             SIXTEEN BINARY ONES             19825027
FLOTMASK DC        X'FFFFFFF9'         MASK FOR FLOAT REG TEST          19830023
F8REGS   DS    16F                      SAVE AREA FOR DCCOMP            19840020
WORDBB   DC    F'0'                     SAVE FOR CURRENT ESD            19860020
HLDSRR   DC    F'0'                     SAVE AREA FOR RETURN            19880020
HOLDER   DC    F'0'                     SAVE AREA FOR ERROR RETURN      19900020
RRHOLD   DC    F'0'                     SAVE AREA FOR RETURN            19920020
*./      DELETE    SEQ1=19940020,SEQ2=19940020                          19940022
CREXPC   DC    F'0'                     COMPLEX SWITCH                  19960020
DCMPSW   DC    X'00'                    DECOMPOSABILITY SWITCH          19980020
ALIGNT   DS    F                        TEMP FOR ALIGNMENT              20000020
BSTVAL   DS    F                        BEST VALUE FOR BASE             20020020
VALUEE   DS    F                       TEMPORARY VALUE AND ESD-ID       20040020
VALUEZ   DS    F                                                        20060020
TEMVAL   DC    F'0'                    TEMPORARY STORAGE SLAQUE         20080020
EXFLGS   DS    0F                       FLAGS FOR F8AREX                20100020
AEXP1    DC    X'00'                      SEE F8AREX FOR THE            20120020
AEXP2    DC    X'00'                        MEANING OF THESE FLAGS      20140020
AEXP3    DC    X'00'                          AND THE MEANING OF THE    20160020
SREXP    DC    X'00'                            BITS WITHIN THE FLAGS   20180020
VALUEB   DC    F'0'                    EXPRESSION VALUE                 20200020
EXPESD   DC    X'0000'                  EXPRESSION SIGN AND ESD-ID      20220020
ABSFLG   DC    X'00'                    ABSOLUTE FLAG                   20240020
LTVLSW   DC    X'00'                    LITERAL SWITCH                  20260020
BITS45   DC    X'0C'                    BITS 4 AND 5                    20280020
F8FF     DC    X'FF'                    ONE BYTE OF ONES                20300020
RENTERR  DC    X'00'                    REENTRANT ERROR FLAG            20320020
RENTRANT DC    X'FF'                    REENTRANT FLAG                  20340020
QUOTFLAG DC    X'00'                    QUOTE FLAG 0 = EVEN             20360020
BSTREG   DS    C                        BEST BASE REG FOR LOWEST DISP   20380020
ABSRX    DS    C                        ABSOLUTE SWITCH                 20400020
ERRSW    DC    X'00'                   ERROR SWITCH FOR ZEROING INST    20420020
LITRLTWO DC    X'00'                    MULITPLE LITERAL SWITCH         20440020
ALIGNERR DC    X'01'                    BIT7=1  NO REGISTER SPECIFIED   20441024
*                                       BIT6=1  ALIGN ERROR PENDING     20441524
ALBEG    EQU   *                        START REQUIRED ALGN TABLE       20442023
         DC    X'47'                    BC                              20444023
         DC    X'45'                    BAL                             20446023
         DC    X'46'                    BCT                             20448023
         DC    X'44'                    EX                              20450023
         DC    X'86'                    BXH                             20452023
         DC    X'87'                    BXLE                            20454023
         DC    X'82'                    LPSW                            20456023
ALEND    EQU   *                        END REQUIRED ALIGN TABLE        20458023
ERRIMM   EQU   20                      IMMEDIATE FIELD ERROR            20460020
ERRDLM   EQU   39                       INVALID DELIMITER               20480020
ERRLIN  EQU   33                        ALIGNMENT ERROR                 20500020
ERRREG   EQU   10                       INCORRECT REGISTER              20520020
ERRLLN   EQU   3                        LENGTH ERROR                    20540020
ERRLIT  EQU   15                        INVALID LITERAL USAGE           20560020
ERRENT   EQU       58                  RE-ENTRANCY VIOLATION            20580023
ERRLOC   EQU   25                       RELOCATABILITY                  20600020
ERRDIS  EQU   8                         INVALID DISPLACEMENT            20620020
ERRLEN   EQU   3                        LENGTH                          20640020
ERRWRP   EQU   7                        WRAP AROUND ERROR CODE          20660020
LATP     EQU   CTXWAP                   POINTER TO LITERAL ADDRESS TABL 20680020
USNGPP   EQU   CTXIO3                   I/O BUFFER 3                    20700020
USNGTP   EQU   CTXIO4                   I/O BUFFER 4                    20720020
ERPROC   EQU   80                       ILLEGAL START CARD              20740020
ERRADR   EQU   35                       ADDRESSABILITY                  20760020
SXTEEN   EQU   K16                      CONSTANT OF 16                  20780020
FOR095   EQU   K4095                    CONSTANT OF 4095                20800020
FOR096   EQU   K4096                    CONSTANT OF 4096                20820020
         LTORG                                                          20830027
         END   ASMGF8M                                                  20840020
./ ADD NAME=ASMGF8N
F8N      TITLE     'ASMG F8  FLOATING-FIXED POINT CONVERSION'           00020023
         ISEQ      73,78                                                00040023
ASMGF8N  START     ,                    DECIMAL CONVERSION ROUTINE      00060023
         PRINT      NOGEN                                               00080023
         FDIMEN                                                         00100023
         PRINT GEN                                                      00120023
*                                                                     * 00140023
*TITLE 'ASMGF8N ' ...  FIXED-FLOATING POINT CONVERSION                * 00160023
*FUNCTION/OPERATION-                                                  * 00180023
*   TO DO ALL FIXED OR FLOATING POINT CONVERSION FOR DC STATEMENTS. IT* 00200023
*   IS CALLED BY ASMGF8D ONCE FOR EACH CONSTANT TO BE CONVERTED.      * 00220023
*ENTRY POINT- ASMGF8N                                                 * 00240023
*  ASMGF8N IS CALLED VIA                                              * 00260023
*        L     SRB,CCONV(ACT)           GET BASE/ENTRY                * 00280023
*        BALR  SRR,SRB                  CALL ASMGF8N                  * 00300023
*INPUT- TWO REGISTERS ARE USE FOR INPUT                               * 00320023
*   (1)  ZWRB  POINTS TO FIRST CHAR OF STRING TO BE CONVERTED         * 00340023
*   (A)  SP1   POINTS TO DC WORKBUCKET                                * 00360023
*OUTPUT- THREE REGISTERS ARE USED FOR OUTPUT                          * 00380023
*   (1)  ZWRB  POINTS TO CHAR TERMINATING FIELD                       * 00400023
*   (B)  SP2   POINTS TO BINARY CONVERTED VALUE                       * 00420023
*   (D)  GRZ   POINTS TO BYTE CONTAINING ERROR NUMBER                 * 00440023
*                  0 - NO ERROR                                       * 00460023
*                 11 - SCALE MODIFIER                                 * 00480023
*                 13 - EXPONENT MODIFIER                              * 00500023
*                 17 - TRUNCATION                                     * 00520023
*                 39 - INVALID DELIMITER                              * 00540023
*                 70 - FLOATING POINT CHARACTERISTIC OUT OF RANGE     * 00560023
*                109 - PRECISION LOST                                 * 00580023
*EXTERNAL ROUTINES- NONE                                              * 00600023
*EXITS- NORMAL AND ERROR                                              * 00620023
*    RETURN VIA                                                       * 00640023
*        BR    SRR                      EXIT                          * 00660023
*TABLES/WORKAREA                                                      * 00680023
*   ZWSVRG- SAVE AREA FOR REGISTERS B THROUGH E                       * 00700023
*   DCVW-   CONTAINS RESULTS OF CONVERSION                            * 00720023
*   HOLD-   CONTAINS PACKED NUMBER TO BE CONVERTED                    * 00740023
         EJECT                                                          00760023
         USING *,SRB                                                    00780023
*                                                                       00800023
*    INITIALIZATION                                                     00820023
*                                                                       00840023
DCNVRT1  MVI   DCSW,0                   ZERO SWITCHES                   00860023
         MVI   DCXPON,X'00'             SET SIGN POSITIVE               00880023
         MVC   DCXPON+1(5),TXDEXP(SP1)  GET EXP AND SCL MODF            00900023
         LH    GR2,DCSCAL               GET SCALE MODIFIER              00920023
CNV1     SRL   GR2,5                    SHIFT EXTRANEOUS BITS           00940023
         STH   GR2,DCSCAL               SAVE IN SCALE MODIFIER          00960023
         TM    TXDEXP(SP1),X'80'        TEST SIGN OF EXPONENT MODIFIER  00980023
         BZ    CNV2                     BRANCH IF PLUS                  01000023
         MVI   DCXPON,X'FF'             SET SIGN NEGATIVE               01020023
CNV2     LH    GR2,DCVW                 GET LENGTH MODIFIER             01040023
         TM    TXDLMD(SP1),X'01'        IS LENGTH MODIFIER BITS         01060023
         BO    CNV3                     YES                             01080023
         SLL   GR2,3                    NO,BYTES, SO SHIFT FOR BITS     01100023
CNV3     BCTR  GR2,0                    DECREMENT BY ONE                01120023
         STH   GR2,DCLNG+2              SAVE LENGTH MODIFIER            01140023
         CLI   TXDTYP(SP1),X'07'        TEST IF FIXED OR FLOATING       01160023
         BL    ZWFLCV                   BRANCH IF FLOATING              01180023
         CLI   TXDTYP(SP1),X'0E'        IS THIS L-CON                   01200023
         BNE   ZWFXCV                     NO.  FIXED.                   01220023
         MVI   ZWSW,X'09'                 YES. SET INDICATOR            01240023
         B     ZWA2                     GO INITIALIZE                   01260023
*A                                                                      01280023
*A MOVE SCALE FACTOR AND EXPO MOD TO WORK AREA.CHECK RANGE OF FORMER    01300023
*A SAVE REGISTERS 11,13,14.INIT CONTROL SWITCHES(ZWSW) AND ACCUMULATOR  01320023
*A                                                                      01340023
ZWFLCV   MVI   ZWSW,X'01'          SET SWITCH FOR FLOATING POINT        01360023
ZWA2     SR    ZWRD,ZWRD           LOWER LIMIT SCALE FACTOR             01380023
         LA    ZWRE,30             UPPER LIMIT SCALE FACTOR             01400023
         B     ZWA1                     SKIP FIXED POINT SET UP         01420023
ZWFXCV   MVI   ZWSW,0              SET SWITCH FOR FIXED POINT           01440023
         LA    ZWRD,187            LOWER                                01460023
         LCR   ZWRD,ZWRD             LIMIT SCALE FACTOR                 01480023
         LA    ZWRE,346            UPPER LIMIT SF                       01500023
ZWA1     LH    ZWRA,DCSCAL         SCALE FACTOR                         01520023
         LH    ZWRH,DCXPON         EXPONENT MODIFIER                    01540023
         STM   ZWRI,ZWRB,ZWSVRG    SAVE ABOVE,REGS 11-13,AND RETURN ADD 01560023
         XC    ZWACC,ZWACC         CLEAR ACCUMULATOR                    01580023
         SR    ZWRL,ZWRL           PREPARE TO MARK DECIMAL POINT        01600023
         LR    ZWRF,ZWRB           SET UP FOR NO EXP DIGITS TEST        01620023
         LR    ZWRI,ZWRH           SAVE EXPONENT MODIFIER               01640023
*B                                                                      01660023
*B SCAN TEXT MARKING DECIMAL,END OF VALUE,FIRST TERMINATOR.             01680023
*B CONVERT EXPONENT IF ANY AND MODIFY.                                  01700023
*B                                                                      01720023
ZWB1     LR    ZWRJ,ZWRB           MARK END OF VALUE FIELD              01740023
         CLI   0(ZWRB),IE               BRANCH                          01760023
         BNE   ZWB3                     IF CHARACTER NOT E              01780023
         LA    ZWRB,1(ZWRB)             STEP OVER E                     01800023
         BAL   ZWRG,ZWS1           STEP OVER SIGN IF PRESENT            01820023
         BAL   ZWRG,DECON          CONVERT EXPONENT                     01840023
         CLI   1(ZWRJ),IMINUS      BRANCH                               01860023
         BNE   ZWB2                     UNLESS EXP NEGATIVE             01880023
         LCR   ZWRH,ZWRH           COMPLEMENT EXPONENT                  01900023
ZWB2     AR    ZWRI,ZWRH           ADD TO EXP MODIFIER                  01920023
         ST    ZWRI,ZWDE           STORE MODIFIED EXP                   01940023
ZWB3     CLI   0(ZWRB),ICOMMA           BRANCH OUT                      01960023
         BE    ZWC1                     IF CHAR COMMA                   01980023
         CLI   0(ZWRB),IQUOTE           BRANCH OUT                      02000023
         BE    ZWC1                     IF CHAR QUOTE                   02020023
         CLI   0(ZWRB),IPRIOD           BRANCH                          02040023
         BNE   ZWB4                     UNLESS CHAR DECIMAL POINT       02060023
         LR    ZWRL,ZWRB           MARK DECIMAL POINT                   02080023
ZWB4     LA    ZWRB,1(ZWRB)             ADVANCE TEXT POINTER            02100023
         B     ZWB1                     CONTINUE LOOP                   02120023
*C                                                                      02140023
*C SAVE POINTER TO TERMINATOR.CHECK EXPONENT AND SCALE FACTOR RANGE AND 02160023
*C CHECK FOR NO EXPONENT DIGITS. SET UP TO SCAN VALUE.                  02180023
*C                                                                      02200023
ZWC1     ST    ZWRB,ZWAUXT              SAVE PTR TO TERMINATING CHAR    02220023
         LA    ZWRH,ZRCD13              SET NO. FOR EXP RANGE ERROR     02240023
         AH    ZWRI,=H'5'          MAKE RANGE SYMMETRIC                 02260023
         LPR   ZWRI,ZWRI           TAKE MAGNITUDE                       02280023
         CH    ZWRI,=H'80'         BRANCH                               02300023
         BH    ZWZ3                     IF EXPONENT OUTSIDE RANGE       02320023
         LA    ZWRH,ZRCD11              SET NO. FOR SCL FAC RANGE ERROR 02340023
         CR    ZWRA,ZWRD           BRANCH                               02360023
         BL    ZWZ3                     IF SF TOO SMALL                 02380023
         CR    ZWRA,ZWRE           BRANCH                               02400023
         BH    ZWZ3                     IF SF TOO LARGE                 02420023
         CR    ZWRB,ZWRF           BRANCH TO ERROR ROUTINE              02440023
         BE    ZWZ4                     IF NO EXP DIGIT OR TEXT         02460023
         L     ZWRB,ZWTXPT         RESET TEXT POINT TO BEGINNING VALUE  02480023
         BAL   ZWRG,ZWS1           STEP OVER VALUE SIGN IF PRESENT      02500023
         LTR   ZWRL,ZWRL           IF NO DECIMAL                        02520023
         BNZ   ZWD1                  SET MARK TO                        02540023
         LR    ZWRL,ZWRJ             END OF VALUE                       02560023
*D                                                                      02580023
*D STEP OVER DECIMAL POINT. CHECK FOR END OF VALUE.                     02600023
*D                                                                      02620023
ZWD1     CR    ZWRB,ZWRL           IF NEXT CHAR                         02640023
         BNE   ZWD2                     DECIMAL POINT                   02660023
         LA    ZWRB,1(ZWRB)             ADVANCE VALUE POINTER           02680023
         LR    ZWRL,ZWRB             AND DECIMAL MARKER                 02700023
ZWD2     CR    ZWRB,ZWRJ           IF END OF VALUE                      02720023
         BNL   ZWM1                  BRANCH                             02740023
         EJECT                                                          02760023
*E                                                                      02780023
*E CONVERT PIECE OF VALUE.CHECK FOR ZERO.COMPUTE ADJUSTED EXP FOR PIECE 02800023
*E                                                                      02820023
ZWE1     BAL   ZWRG,DECON          CONVERT PIECE OF VALUE               02840023
         TM    VASCTL,X'C0'        IF ONE OR MORE DIGITS CONVERTED      02860023
         BZ    ZWE2                     AND NON-DIGIT REACHED, BRANCH   02880023
         TM    VASCTL,X'80'        IF NO DIGITS FOUND                   02900023
         BO    ZWZ4                     BRANCH TO INVALID TERM. MESSAGE 02920023
         LA    ZWRB,9(ZWRF)        CORRECT VALUE POINTER                02940023
ZWE2     OI    ZWSW,X'02'          SET VALUE FOUND SWITCH               02960023
         LTR   ZWRD,ZWRH           COPY AND TEST VALUE                  02980023
         BZ    ZWD1                     BRANCH IF ZERO                  03000023
         LR    ZWRG,ZWRL           LOCATION DECIMAL                     03020023
         SR    ZWRG,ZWRB             MINUS LOCATION CHAR AFTER FLD CNVT 03040023
         A     ZWRG,ZWDE             PLUS EXP GIVES ADJ EXP FOR THIS    03060023
*                                    PIECE OF VALUE                     03080023
         TM    ZWSW,X'05'          BRANCH UNLESS FIRST NON-ZERO         03100023
         BNM   ZWG1                  PIECE FLOATING VALUE               03120023
*F                                                                      03140023
*F IF FLOATING PT COMPUTE WORKING SCALE FACTOR.                         03160023
*F                                                                      03180023
         LCR   ZWRC,ZWRG           COMPLEMENT ADJ EXP                   03200023
         MH    ZWRC,=HS13'3.322'   MULT BY LOG 10 BASE 2 (3.527 HEX)    03220023
         SRA   ZWRC,13             SCALE PRODUCT                        03240023
ZWF1     BCTR  ZWRC,0              COUNT NUMBER BITS                    03260023
         SRA   ZWRD,1                AND SUBTRACT                       03280023
         BP    ZWF1                     FROM PRODUCT                    03300023
         SRA   ZWRC,2              ROUND DOWN TO MULTIPLE OF 4          03320023
         SLA   ZWRC,2                                                   03340023
         AH    ZWRC,=H'124'          AND ADD 124                        03360023
         ST    ZWRC,ZWSF           STORE WORKING SCALE FACTOR           03380023
         OI    ZWSW,X'04'          SET FL PT INIT SWITCH                03400023
         LPR   ZWRF,ZWRC           IF WORKING SCALE FACTOR WILL         03420023
         CH    ZWRF,=H'400'          PRODUCE INVALID CHARACTERISTIC     03440023
         BH    ZWQ7                     BRANCH TO INVALID EXP MSG       03460023
*G                                                                      03480023
*G COMPUTE AMT OF BINARY SHIFT. SPLIT INTO WORD INDEX AND BIT SHIFT.    03500023
*G RESET WORKING AREA. TEST SIGN OF ADJ EXPONENT.                       03520023
*G                                                                      03540023
ZWG1     LA    ZWRC,32             32                                   03560023
         AR    ZWRC,ZWRG             PLUS ADJ EXP                       03580023
         A     ZWRC,ZWSF           PLUS SCALE FACTOR GIVES BIN SHIFT    03600023
* NOTE - ZWSF HAS S-MODIFIER VALUE IF F-, H-CON,                        03620023
*             OR THE WORKING SCALE FACTOR IF L-, D-, OR E-CON.          03640023
         SRDA  ZWRC,5              SEPARATE INTO BIT AND WORD SHIFTS    03660023
         SRL   ZWRD,27             POSITION BIT SHIFT                   03680023
         SLL   ZWRC,2              POSITION WORD SHIFT                  03700023
         XC    ZWW1,ZWW1           CLEAR WORK AREA                      03720023
         LTR   ZWRG,ZWRG           TEST ADJ EXP                         03740023
         BNP   ZWI1                BRANCH IF ZERO OR NEG                03760023
         EJECT                                                          03780023
*H                                                                      03800023
*H ADJ EXP IS PLUS.  MULTIPLY VALUE BY 5 TO THE GIVEN POWER.            03820023
*H                                                                      03840023
         ST    ZWRH,ZWW2           STORE VALUE                          03860023
         LR    ZWRA,ZWRC           WORD SHIFT IN BYTES                  03880023
         SH    ZWRA,=H'16'           LESS 16 = LEFT LIMIT OF WORK AREA  03900023
         BP    ZWJ8                     BRANCH IF LIMIT DEFINES NO WORK 03920023
ZWH1     SR    ZWRI,ZWRI           RESET WORK AREA POINTER              03940023
         SR    ZWRH,ZWRH           CLEAR CARRY REG                      03960023
ZWH2     L     ZWRF,ZWW2(ZWRI)     LOAD PART OF VALUE                   03980023
         M     ZWRE,=F'5'          TIMES 5                              04000023
         ALR   ZWRF,ZWRH           ADD CARRY                            04020023
         BC    12,ZWH3             PROPAGATE                            04040023
         AH    ZWRE,=H'1'            CARRY                              04060023
ZWH3     LTR   ZWRH,ZWRE           SAVE CARRY AND TEST SIGN             04080023
         BNM   ZWH4                  IF NEGATIVE                        04100023
         AH    ZWRH,=H'5'            CORRECT                            04120023
ZWH4     ST    ZWRF,ZWW2(ZWRI)     STORE PARTIAL PRODUCT                04140023
         SH    ZWRI,=H'4'          STEP AREA POINTER LEFT               04160023
         CR    ZWRI,ZWRA           IF LEFT LIMIT NOT REACHED            04180023
         BNL   ZWH2                  BRANCH                             04200023
         LTR   ZWRH,ZWRH           TEST FINAL CARRY                     04220023
         BZ    ZWH5                     IF NOT ZERO                     04240023
         OI    DCSW,DCTRUN           SET TRUNCATION INDICATOR           04260023
ZWH5     BCT   ZWRG,ZWH1           DECREMENT ADJ EXP AND CLOSE LOOP     04280023
         B     ZWJ1                     SHIFT VALUE                     04300023
*I                                                                      04320023
*I ADJ EXP IS NOT PLUS. SHIFT VALUE AS INDICATED BY THE WORD INDEX AND  04340023
*I DIVIDE BY 5 TO THE MAGNITUDE OF THE GIVEN POWER. RESET WORD INDEX    04360023
*I                                                                      04380023
ZWI1     LCR   ZWRC,ZWRC           COMPLEMENT WORD SHIFT GIVES LEFT     04400023
*                                    LIMIT WORK AREA                    04420023
         BP    ZWD1                     BRANCH IF LIMIT DEFINES NO WORK 04440023
         ST    ZWRH,ZWW2(ZWRC)     STORE VALUE IN WORK AREA SHIFTED     04460023
         LCR   ZWRG,ZWRG           COMPLEMENT AND TEST ADJ EXP GIVES    04480023
*                                    COUNT FOR NUMBER TIMES TO DIVIDE   04500023
         BZ    ZWI5                     BRANCH IF ZERO                  04520023
ZWI2     LR    ZWRI,ZWRC           SET WORKING POINTER TO LEFT LIMIT    04540023
         SR    ZWRE,ZWRE           CLEAR UPPER DIVIDEND REG             04560023
ZWI3     L     ZWRF,ZWW2(ZWRI)     LOAD PART OF DIVIDEND                04580023
         D     ZWRE,=F'10'         DIVIDE                               04600023
         SLL   ZWRF,1                BY 5                               04620023
         CH    ZWRE,=H'5'          IF REMAINDER                         04640023
         BL    ZWI4                     TOO LARGE                       04660023
         SH    ZWRE,=H'5'            CORRECT REMAINDER                  04680023
         AH    ZWRF,=H'1'            AND DIVIDEND                       04700023
ZWI4     ST    ZWRF,ZWW2(ZWRI)     STORE PARTIAL QUOTIENT               04720023
         AH    ZWRI,=H'4'          STEP WORKING POINTER RIGHT           04740023
         BNP   ZWI3                REPEAT UNTIL RIGHT LIMIT REACHED     04760023
         BCT   ZWRG,ZWI2           REDUCE COUNT AND CLOSE LOOP          04780023
ZWI5     SR    ZWRC,ZWRC           CLEAR WORD SHIFT                     04800023
         OC    ZWW1(L'ZWW1-L'ZWACC),ZWW1  TEST HI PART OF WORK AREA     04820023
         BE    ZWJ1                     IF NOT ZERO                     04840023
         OI    DCSW,DCTRUN           SET TRUNCATION INDICATOR           04860023
*J                                                                      04880023
*J SHIFT VALUE PER WORD SHIFT AND BIT SHIFT. TRUNCATE TO 160            04900023
*J BITS AND ADD TO ACCUMULATOR.                                         04920023
*J                                                                      04940023
ZWJ1     SR    ZWRG,ZWRG           RESET CARRY REG                      04960023
         LA    ZWRH,16             INIT ACCUMULATOR POINTER             04980023
ZWJ2     SR    ZWRE,ZWRE           RESET WORKING REGISTERS              05000023
         SR    ZWRF,ZWRF                                                05020023
         LTR   ZWRC,ZWRC           TEST WORD INDEX                      05040023
         BP    ZWJ4                     IF PLUS LEAVE WORK AREA CLEAR   05060023
         BZ    ZWJ3                     IF ZERO FETCH ONE WORD OF RESLT 05080023
         L     ZWRF,ZWW2+4(ZWRC)   FETCH LO WORD OF RESULT              05100023
ZWJ3     L     ZWRE,ZWW2(ZWRC)     FETCH HI WORD OF RESULT              05120023
ZWJ4     SLDL  ZWRE,0(ZWRD)        BIT SHIFT                            05140023
         ALR   ZWRE,ZWRG           ADD IN CARRY                         05160023
         BC    3,ZWJ5              BRANCH IF CARRY LEAVING ONE IN ZWRG  05180023
         SR    ZWRG,ZWRG           RESET CARRY                          05200023
ZWJ5     LTR   ZWRH,ZWRH           END OF ACCU                          05220023
         BM    ZWJ7                     YES, BRANCH                     05240023
         AL    ZWRE,ZWACC(ZWRH)    ADD IN PIECE FROM ACCUMULATOR        05260023
         BC    12,ZWJ6             BRANCH IF NO CARRY                   05280023
         LA    ZWRG,1              SET CARRY                            05300023
ZWJ6     ST    ZWRE,ZWACC(ZWRH)    STEP WORKAREA PT                     05320023
         SH    ZWRC,=H'4'          STEP ACCU PT                         05340023
         SH    ZWRH,=H'4'          REPEAT FOR EACH WORD OF ACCU         05360023
         B     ZWJ2                     LOOP                            05380023
ZWJ7     LTR   ZWRE,ZWRE           TEST CARRY                           05400023
         BZ    ZWD1                     IF ON                           05420023
ZWJ8     OI    DCSW,DCTRUN           SET TRUNCATION INDICATOR           05440023
         B     ZWD1                     STEP OVER DECIMAL POINT         05460023
*M                                                                      05480023
*M SET UP TO FORMAT RESULT. BRANCH TO APPROPRIATE ROUTINE.              05500023
*M                                                                      05520023
ZWM1     LM    ZWRL,ZWRJ,ZWSF      GET SCALE FACTOR AND TEXT POINTER,   05540023
         L     ZWRC,DCLNG               GET BIT LENGTH                  05560023
         LCR   ZWRC,ZWRC             AND COMPLEMENT                     05580023
         TM    ZWSW,X'06'          WHAT FORMAT REQUIRED                 05600023
         BZ    ZWZ4                     BRANCH IF TEXT TRIVIAL          05620023
         BO    ZWP1                     BRANCH IF FLOAT PT AND NON-ZERO 05640023
         EJECT                                                          05660023
*N                                                                      05680023
*N FORMAT FIXED POINT RESULT.                                           05700023
*N                                                                      05720023
ZWN1     TM    ZWACC+L'ZWACC-4,X'80'    TEST DROPPED BIT                05740023
         BZ    ZWN2                       NO ROUND NEEDED               05760023
         LA    ZWRI,L'ZWACC-4           LOAD INDEX REG                  05780023
ZWN3     LA    ZWRA,1                   LOAD ROUND/CARRY BIT            05800023
         AL    ZWRA,ZWACC-4(ZWRI)       ADD IN PIECE OF VALUE           05820023
         ST    ZWRA,ZWACC-4(ZWRI)                                       05840023
         BC    12,ZWN2                  IF NO CARRY, GO QUIT            05860023
         SH    ZWRI,=H'4'                 ELSE PROPAGATE CARRY          05880023
         BP    ZWN3                         THRU ALL OF ZWACC           05900023
         OI    DCSW,DCTRUN              IF CARRY OUT SET TRUNC.INDIC.   05920023
ZWN2     CLI   0(ZWRJ),IMINUS           IF VALUE SIGN IS NEGATIVE       05940023
         BE    ZWN4                       GO DO NEG. OUTPUT             05960023
* VALUE IS POSITIVE.  MOVE INTACT TO OUTPUT.                            05980023
         LM    ZWRG,ZWRB,ZWACC                                          06000023
         STM   ZWRG,ZWRB,DCVW           STORE IN OUTPUT AREA            06020023
* TEST FOR TRUNCATION OF HIGH-ORDER BITS (POSITIVE DATA)                06040023
         CH    ZWRC,=H'-63'             IS LENGTH OVER 2 WORDS          06060023
         BL    ZWN6                       YES.  GO DO HI 2 WORDS        06080023
         OR    ZWRG,ZWRH                TEST HI 2 WORDS FIRST           06100023
         BNZ   ZWN8                     SHOULD BE ZERO                  06120023
         SLDA  ZWRA,63(ZWRC)            TEST TRUN. IN BITS OF LO        06140023
*                                       2 WDS                           06160023
         B     ZWN6+L'ZWN6                THEN GO TEST                  06180023
ZWN6     SLDA  ZWRG,127(ZWRC)           TEST TRUN. IN BITS OF HI        06200023
*                                       2 WDS                           06220023
         BC    10,ZWZ5                  IF OKAY GO PUT IT OUT           06240023
         B     ZWN8                     ELSE GO LOG ERROR               06260023
* VALUE IS NEGATIVE.  COMPLIMENT IT AND PUT IN OUTPUT.                  06280023
ZWN4     LA    ZWRI,L'ZWACC-4           LOAD UP INDEX                   06300023
         SR    ZWRA,ZWRA                CLEAR REDUCTION BIT             06320023
ZWN5     L     ZWRB,ZWACC-4(ZWRI)       PICK UP A WORD                  06340023
         LCR   ZWRB,ZWRB                COMPLIMENT IT, 2'S COMP         06360023
         SLR   ZWRB,ZWRA                REDUCE TO 1'S COMP IF ABOVE    X06380023
                                            FIRST NON-ZERO WORD         06400023
         BC    2,ZWN0                   BRANCH IF VALUE IS STILL ZERO   06420023
* BRANCH GOES WRONG IF ZERO IS DEVELOPED ABOVE 1ST NON-ZERO. BUT THAT'S 06440023
*  OKAY, AS, ONCE ZWRA IS = 1, RELOADING IT DOESN'T MATTER ANYWAY.      06460023
         LA    ZWRA,1                   BEGIN 1'S COMPLIMENT NEXT WORD  06480023
ZWN0     ST    ZWRB,DCVW-4(ZWRI)        STORE IN OUTPUT AREA            06500023
         SH    ZWRI,=H'4'               NEXT                            06520023
         BP    ZWN5                       WORD                          06540023
* TEST FOR TRUNCATION OF HIGH-ORDER BITS (NEGATIVE DATA)                06560023
         LM    ZWRG,ZWRB,DCVW           PICK UP COMP. VALUE             06580023
         CH    ZWRC,=H'-63'             IS LENGTH OVER 2 WORDS          06600023
         BL    ZWN7                       YES.  GO DO HI 2 WORDS        06620023
         SLDA  ZWRG,63                  TEST HI 2 WORDS FIRST           06640023
         BC    3,ZWN8                   SHOULD BE MAX NEG OR ZERO       06660023
         SLDA  ZWRA,63(ZWRC)            TEST TRUN. IN BITS OF LO 2 WDS  06680023
         B     ZWN7+L'ZWN7                THEN GO TEST                  06700023
ZWN7     SLDA  ZWRG,127(ZWRC)           TEST TRUN. IN BITS OF HI 2 WDS  06720023
         BC    12,ZWZ5                  IF OKAY GO PUT IT OUT           06740023
* SET TRUNCATION INDICATOR AND GO PUT OUT VALUE                         06760023
ZWN8     OI    DCSW,DCTRUN                ELSE SET TRUNCATION SW,       06780023
         B     ZWZ5                         THEN GO PUT IT OUT.         06800023
         EJECT                                                          06820023
*P                                                                      06840023
*P NORMALIZE FLOATING POINT RESULT                                      06860023
*P                                                                      06880023
ZWP1     LH    ZWRD,DCSCAL              GET S-MODIFIER                  06900023
         CLI   ZWACC,X'10'              IS HIGH HEX DIGIT GT 0          06920023
         BNL   ZWP2                     -YES.                           06940023
* VALUE NEEDS NORMALIZATION.            -NO.                            06960023
         MVC   ZWW1(L'ZWACC),ZWACC      PUT IN TEMP STORAGE             06980023
         MVO   ZWACC+10(10),ZWW1+10(10) SHIFT VALUE LEFT 4 BITS         07000023
         MVO   ZWACC+00(11),ZWW1+00(11)                                 07020023
         AH    ZWRL,=H'4'               ADJUST WORKING SCALE FACTOR     07040023
         B     ZWP1                     RETEST NORMALIZATION            07060023
* ROUND VALUE TO LENGTH                                                 07080023
*   CALCULATE LEFT SHIFT FOR ROUNDING-BIT                               07100023
ZWP2     LR    ZWRE,ZWRD                GRAB S-MOD (HEX BYTES)          07120023
         SLA   ZWRE,2                     MAKE INTO BITS                07140023
         TM    ZWSW,X'08'               IS THIS AN L-CON                07160023
         BZ    ZWP3                       NO. GO TO  D-,E- FORMULA      07180023
         CH    ZWRC,=H'-63'               YES. IS LENGTH .GT. 64 BITS   07200023
         BNL   ZWP3                         NO. USE D,E-CON FORMULA     07220023
         CH    ZWRC,=H'-71'                 YES. IS LENGTH .GT. 72      07240023
         BL    ZWP4                           YES. USE LONG L FORMULA   07260023
         SH    ZWRE,=H'-71'                   NO. SPECIAL L FORMULA,    07280023
         B     ZWP5                             GO SHIFT                07300023
ZWP4     AH    ZWRE,=H'8'               LONG L-CON FORM.                07320023
ZWP3     AH    ZWRE,=H'134'             SHORT L-CON, D-E-CON.           07340023
         AR    ZWRE,ZWRC                SUBTRACT LENGTH-1               07360023
*                                                                       07380023
ZWP5     CH    ZWRE,=H'127'             WILL ANY OF VALUE BE RETAINED   07400023
         BH    ZWQ1                       NO.  SKIP ROUNDING.           07420023
         SRDL  ZWRE,5                   SPLIT SHIFT INTO                07440023
         SRL   ZWRF,32-5                  BITS AND                      07460023
         SLL   ZWRE,2                     WORDS  (IN BYTE TERMS).       07480023
         LCR   ZWRE,ZWRE                                                07500023
         LA    ZWRI,L'ZWACC-4(,ZWRE)    INIT INDEX WORD-SHIFT ADJUSTED  07520023
         LA    ZWRA,1                   LOAD ROUND BIT                  07540023
         SLL   ZWRA,0(ZWRF)             POSITION IT                     07560023
ZWP6     AL    ZWRA,ZWACC-4(ZWRI)       ADD IN PIECE OF VALUE           07580023
         ST    ZWRA,ZWACC-4(ZWRI)                                       07600023
         BC    12,ZWQ1                  IF NO CARRY, GO QUIT            07620023
         LA    ZWRA,1                     ELSE LOAD CARRY REGISTER,     07640023
         SH    ZWRI,=H'4'                                               07660023
         BP    ZWP6                       GO PROPAGATE CARRY            07680023
*OVERFLOW ON ROUNDING. NUTS.                                            07700023
         MVI   ZWACC,X'10'              PUT CORRECTED VALUE             07720023
         SH    ZWRL,=H'4'  (ART'S FIX)  ADJUST WORKING SCALE FACTOR     07740023
         EJECT                                                          07760023
*Q                                                                      07780023
*Q SHIFT RIGHT PER SCALE MOD., PLACE EXPONENT(S), POSITION FOR OUTPUT   07800023
*Q                                                                      07820023
ZWQ1     LR    ZWRB,ZWRD                GET S-MOD                       07840023
         AH    ZWRB,=H'1'               BUMP TO MOVE EXTRA BYTE IF     X07860023
                                          S-MOD IS ODD                  07880023
         SRA   ZWRB,1                   MAKE INTO BYTES                 07900023
         XC    ZWW1(L'ZWACC-3),ZWW1     CLEAR NEW HIGH BYTES            07920023
         LA    ZWRI,ZWW1+1(ZWRB)        INDEX MOVE. ADD 1 FOR EXP.      07940023
         MVC   0(L'ZWACC-5,ZWRI),ZWACC  MOVE AND SHIFT BY BYTES         07960023
         TM    DCSCAL+1,X'1'            WAS S-MOD ODD                   07980023
         BZ    ZWQ2                       NO. LET IT SIT                08000023
         MVO   ZWW1+1(16),ZWW1+1(16)    SHIFT BACK 1 HEX DIGIT          08020023
ZWQ2     MVC   ZWACC(L'ZWACC-3),ZWW1    BRING IT HOME                   08040023
*VALUE IN ZWW1 USED LATER IN LOST PRECISION TEST                        08060023
*                                                                       08080023
*CALCULATE EXPONENT BYTE AND INSERT IT IN VALUE                         08100023
         LA    ZWRB,384                 FORM                            08120023
         SR    ZWRB,ZWRL                  CHARACTERISTIC                08140023
         SRA   ZWRB,2                                                   08160023
         AR    ZWRB,ZWRD                ADJUST FOR S-MODIFIER           08180023
         LR    ZWRA,ZWRB                                                08200023
         SRA   ZWRA,7                   TEST FOR                        08220023
ZWQ7     LA    ZWRH,ZRCD70              CHARACTERISTIC                  08240023
         BNZ   ZWZ3                       OUT OF BOUNDS                 08260023
         CLI   0(ZWRJ),IMINUS           IF VALUE IS NEGATIVE            08280023
         BNE   *+8                        NOT NEG                       08300023
         LA    ZWRB,X'80'(,ZWRB)          PUT - SIGN                    08320023
         STC   ZWRB,ZWACC               PLUG IN EXPONENT                08340023
         TM    ZWSW,X'08'               IS THIS A L-CON                 08360023
         BZ    ZWQ3                       NO.  GO DO FINALS.            08380023
*THIS IS AN L-CON, PROCESS LOWER EXPONENT                               08400023
         LM    ZWRE,ZWRF,ZWACC+8        PICK LOW 2 WORDS                08420023
         SRDL  ZWRE,8                   MAKE ROOM FOR EXPONENT          08440023
         STM   ZWRE,ZWRF,ZWACC+8                                        08460023
         STM   ZWRE,ZWRF,ZWW1+8         SAVE FOR LATER TEST             08480023
         SH    ZWRB,=H'14'              LOWER EXPONENT IS 14 LESS       08500023
         STC   ZWRB,ZWACC+8             PLUG IT IN                      08520023
* IF LOW EXPONENT UNDERFLOWED, THE SIGN BIT WILL BE WRONG.              08540023
*  CORRECT FOR THAT POSSIBILITY.                                        08560023
         NI    ZWACC+8,B'01111111'      KILL WHATEVER SIGN BIT          08580023
         CLI   0(ZWRJ),IMINUS           IS VALUE NEGATIVE               08600023
         BNE   *+8                      BIF NO                          08620023
         OI    ZWACC+8,B'10000000'      YES, PUT - SIGN                 08640023
* CLODDY LOOP TO SHIFT VALUE FROM ZWACC TO DCVW, AND ALSO MOVE          08660023
* TEST VALUE FROM ZWW1 TO LOW ZWW1.                                     08680023
ZWQ3     AH    ZWRC,=H'127'             COMPUTE SHIFT                   08700023
         SRDL  ZWRC,5                                                   08720023
         SRL   ZWRD,32-5                BIT SHIFT                       08740023
         SLL   ZWRC,2                   WORD SHIFT IN BYTES             08760023
         XC    DCVW(12),DCVW            CLEAR RECEIVING AREA            08780023
         XC    ZWW1+16(12),ZWW1+16      CLEAR RECIEVING AREA            08800023
         SR    ZWRI,ZWRI                CLEAR LOOP INDEX                08820023
         SR    ZWRG,ZWRG                CLEAR CARRY REG                 08840023
         SR    ZWRH,ZWRH                CLEAR CARRY REG                 08860023
ZWQ4     L     ZWRE,ZWACC(ZWRI)         PICK UP WORD                    08880023
         L     ZWRL,ZWW1(ZWRI)          PICK UP WORD                    08900023
         SR    ZWRF,ZWRF                CLEAR RH WORD                   08920023
         SR    ZWRJ,ZWRJ                CLEAR RH WORD                   08940023
         SRDL  ZWRE,0(ZWRD)             SHIFT PER BIT SHIFT             08960023
         SRDL  ZWRL,0(ZWRD)             SHIFT PER BIT SHIFT             08980023
         OR    ZWRE,ZWRG                PUT IN BIT FROM PREVIOUS WORD   09000023
         OR    ZWRL,ZWRH                PUT IN BIT FROM PREVIOUS WORD   09020023
         LR    ZWRG,ZWRF                SAVE OUTSHIFT FOR NEXT WORD     09040023
         LR    ZWRH,ZWRJ                SAVE OUTSHIFT FOR NEXT WORD     09060023
         LA    ZWRB,0(ZWRI,ZWRC)        ADD 2 INDEX REGS TOGETHER       09080023
         ST    ZWRE,DCVW(ZWRB)          PUT WORD OFFSET PER WD SHIFT    09100023
         ST    ZWRL,ZWW1+16(ZWRB)       PUT WORD OFFSET PER WD SHIFT    09120023
         AH    ZWRI,=H'4'               BUMP INDEX                      09140023
         CH    ZWRB,=H'12'              TEST WHERE LATEST WD STORED     09160023
         BL    ZWQ4                       BR IF NOT LAST WORD           09180023
* TEST THE VALUE AT ZWW1+4 FOR LOST PRECISION                           09200023
         OC    ZWW1+16(16),ZWW1+16      ZERO IF SHIFTED OUT ALL BITS    09220023
         BNZ   ZWZ5                       IF BIT, GO OUTPUT             09240023
         LA    ZWRH,ZRCD109                                             09260023
         BAL   ZWRG,MERROR              POST ERROR MESSAGE, THEN        09280023
         B     ZWZ5                       GO OUTPUT                     09300023
         EJECT                                                          09320023
*S1                                                                     09340023
*S1 STEP OVER SIGN.                                                     09360023
*S1                                                                     09380023
ZWS1     CLI   0(ZWRB),IPLUS            IF CHAR IS +                    09400023
         BE    ZWS11                    BRANCH                          09420023
         CLI   0(ZWRB),IMINUS           IF CHAR                         09440023
         BCR   7,ZWRG                IS - RETURN                        09460023
ZWS11    LA    ZWRB,1(ZWRB)        STEP TEXT POINTER                    09480023
         BR    ZWRG                     RETURN                          09500023
*Z                                                                      09520023
*Z ERROR ROUTINE  AND RETURN ROUTINE.                                   09540023
*Z                                                                      09560023
ZWZ4     LA    ZWRH,ZRCD39              LOAD ERROR NUMBER               09580023
ZWZ3     BAL   ZWRG,MERROR         STORE ERROR MESSAGE                  09600023
         XC    DCVW,DCVW           CLEAR OUTPUT AREA                    09620023
ZWZ5     LM    ZWRI,ZWRG,ZWSVRG    RESTORE REG 11, 13, AND LINK ADDRESS 09640023
         L     ZWRB,ZWAUXT              RESTORE TEXT POINTER            09660023
         LA    SP2,DCVW                                                 09680023
         LA    GRZ,DCSW                                                 09700023
         BR    SRR                      RETURN                          09720023
*                                                                       09740023
MERROR   STC   ZWRH,DCSW                SET ERROR                       09760023
         BR    ZWRG                     AND RETURN                      09780023
         SPACE 2                                                        09800023
*DECON- CONVERT A PIECE OF THE VALUE                                    09820023
*       INPUT- CONDEX POINTS TO FIRST CHAR                              09840023
*       OUTPUT-BINVAL CONTAINS CONVERTED VALUE                          09860023
*              CONDEX TO TERMINATING CHAR                               09880023
*              ZWRF POINTS TO FIRST CHAR OF FIELD                       09900023
*              DECSW CONTAINS 1 IF TERMINATING CHAR COMMA               09920023
*                             2 IF TERMINATING CHAR QUOTE               09940023
*              VASCTL CONTAINS X'00'  NO ERRORS                         09960023
*                              X'40'  TOO LONG                          09980023
*                              X'80'  NO CHAR TO CONVERT                10000023
         SPACE 2                                                        10020023
DECON    BCTR  CONDEX,0                 SEE IT BACK ONE                 10040023
GETMOD   MVI   SIGN,X'0C'               SET SIGN PLUS                   10060023
         SR    CNT,CNT                  ZERO COUNTER                    10080023
         NI    VASCTL,X'00'             AND FLAG                        10100023
         ST    CONDEX,AFIRST            SAVE POINTER TO BEGINNING-1     10120023
ADDIT    LA    CONDEX,1(CONDEX)         UP TO NEXT CHAR                 10140023
         CLI   0(CONDEX),I9             IS CHAR NUMERIC                 10160023
         BH    SETUP                    NO, BRANCH                      10180023
         LA    CNT,1(CNT)               YES, UP COUNTER                 10200023
         B     ADDIT                    LOOP, LOOKING FOR NON-NUMERIC   10220023
SETUP    ST    CONDEX,SAVEAD            SAVE END POINTER                10240023
         CLI   0(CONDEX),IQUOTE         IS IT A QUOTE                   10260023
         BNE   COM                      NO                              10280023
         OI    DECSW,2                  YES, SET AS QUOTE AND CONTINUE  10300023
         B      BACK                                                    10320023
COM      CLI   0(CONDEX),ICOMMA         IS IT A COMMA                   10340023
         BNE   BACK                     NO, CONTINUE                    10360023
         ST     CONDEX,COMADD           YES, SAVE POINTER TO COMMA      10380023
         OI    DECSW,1                  SET AS COMMA                    10400023
BACK     L     CONDEX,AFIRST            BEGIN AT BEGINNING              10420023
         LA    CONDEX,1(CONDEX)                                         10440023
SET1     LTR   CNT,CNT                  ARE THERE CHAR TO CONVERT       10460023
         BZ    ZNONE                    NO, RETURN                      10480023
         CH    CNT,=H'10'               YES, IS IT GREATER THAN MAX     10500023
         BH    GTTEN                    YES, TRY TO GET DOWN TO NINE    10520023
         BL    GOTOIT                   NO, OK                          10540023
         CLC   0(10,CONDEX),=X'02010407040803060407'  =10 CHARS, IS IT X10560023
                                                        .GT. 2**31-1    10580023
         BNH   GOTOIT                   NO, CONVERT                     10600023
ZLONG    OI    VASCTL,X'40'             YES, SET FLAG                   10620023
         LA    CNT,9                    AND CONVERT 9                   10640023
GOTOIT   BCTR  CNT,0                    DECREMENT FOR MOVE              10660023
         EX    CNT,PACKIT               PACK VALUE INTO HOLD            10680023
         OC    HOLD+7(1),SIGN           SET POSITIVE SIGN               10700023
         CVB   BINVAL,HOLD              CONVERT HOLD TO BINARY          10720023
LEAVE    LR    ZWRF,CONDEX              SET TO FIRST CHAR               10740023
         L     CONDEX,SAVEAD            SET TO TERMINATOR               10760023
         BR    REG                      RETURN                          10780023
ZNONE    OI    VASCTL,X'80'             SET CODE, NONE TO CONVERT       10800023
         B     LEAVE                    AND EXIT                        10820023
GTTEN    CLI   0(CONDEX),IZERO          IS FIRST CHAR A ZERO            10840023
         BNE   ZLONG                    NO, TOO LONG                    10860023
         LA    CONDEX,1(CONDEX)         YES, IGNORE ZERO                10880023
         BCTR  CNT,0                    AND SEE IF IT IS                10900023
         B     SET1                     NOW SHORT ENOUGH                10920023
PACKIT   PACK  HOLD(8),0(00,CONDEX)     EXECUTED PACK TO PACK HOLD      10940023
         EJECT                                                          10960023
* ZWSVRG THRU ZWACC ARE STORED AND LOADED BY MULTIPLE OPS               10980023
* AND MUST BE IN GIVEN SEQUENCE.                                        11000023
ZWSVRG   DS    4F                  SAVE R11, R13, AND RETURN ADDR.      11020023
ZWDE     DS    F                   DECIMAL EXPONENT                     11040023
ZWSF     DS    F                   FIXED PT SCALE AND FLOATING PT EXPON 11060023
ZWTXPT   DS    F                   SAVE TEXT POINTER                    11080023
         DS    0F                  ENSURE WORD ALIGNMENT OF ZWACC       11100023
ZWACC    DS    XL20                ACCUMULATOR                          11120023
ZWAUXT   DS    F                        PTR TO CHAR TERMINATING FIELD   11140023
ZWSW     DS    C                   CONTROL SWITCHES AND VALUE SIGN      11160023
*                             BIT 7 X'01' = FLOATING POINT  (ELSE FIXD) 11180023
*                                 6    2  = VALUE FOUND (MAYBE ZERO)    11200023
*                                 5    4  = FLT.PT IS INITIALIZED (WSF) 11220023
*                                 4    8  = FLT.PT IS L-CON             11240023
*                                                                       11260023
         DS    0F                  SET PROPER ALIGNMENT FOR ZWW1        11280023
ZWW1     DS    XL56                WORK AREA                            11300023
ZWW2     EQU   ZWW1+L'ZWW1-4       LOW WORD OF WORK AREA                11320023
*                                                                       11340023
DCLNG    DC    F'0'                     LENGTH MODIFIER                 11360023
* DCXPON THRU DCVW ARE LOADED SERIALLY BY MVC AND MUST BE TOGETHER      11380023
         DC    0F'0'               ENSURE ALIGNMENT OF DCVW             11400023
DCXPON   DC    H'00'                    EXPONENT                        11420023
DCSCAL   DC    H'00'                    SCALE                           11440023
DCVW     DC    XL16'0'             OUTPUT AREA  (WORD ALIGNED)          11460023
HOLD     DC    D'0'                     DOUBLE WORD FOR CVB INST        11480023
AFIRST   DC    F'0'                     SAVE AREA FOR BEGINNING POINTER 11500023
SAVEAD   DC    F'0'                     SAVE AREA FOR ENDING POINTER    11520023
COMADD   DC    F'0'                     HOLD                            11540023
VASCTL   DC    X'00'                    DECON FLAG                      11560023
DCSW     DC    X'00'                    ERROR FLAG                      11580023
SIGN     DC    X'0'                     SIGN FOR PACKED                 11600023
DECSW    DC    X'0'                     FLAG - 1=COMMA, 2=QUOTE         11620023
         LTORG                                                          11640023
*                                                                       11660023
ZWRA     EQU   0                        REGISTERS- SCALE FACTOR         11680023
ZWRB     EQU   1                                   POINTER TO SCAN CHAR 11700023
ZWRC     EQU   GRC                                 WORKING SCALE FACTOR 11720023
ZWRD     EQU   GRD                                 LOWER LIMIT SCALE    11740023
ZWRE     EQU   4                                   UPPER LIMIT SCALE    11760023
ZWRF     EQU   5                                   LOW WORD OF RESULT   11780023
ZWRG     EQU   14                                  ADJECTIVE EXPONENT   11800023
ZWRH     EQU   15                                  BINARY RESULT        11820023
ZWRI     EQU   11                                  EXPONENT MODIFIER    11840023
ZWRJ     EQU   13                                  END POINTER          11860023
ZWRL     EQU   12                                  POSITION OF DEC PONT 11880023
CONDEX   EQU   ZWRB                     POINTER TO SCAN CHAR            11900023
CNT      EQU   ZWRF                     COUNTER FOR CHAR TO CONVERT     11920023
BINVAL   EQU   ZWRH                     BINARY VALUE-DECON              11940023
REG      EQU   ZWRG                     RETURN REGISTER-DECON           11960023
ZRCD11   EQU   11                       SCALE MODIFIER ERROR            11980023
ZRCD13   EQU   13                       EXPONENT MODIFIER ERROR         12000023
DCTRUN   EQU   17                       TRUNCATION ERROR                12020023
ZRCD39   EQU   39                       INVALID DELIMITER               12040023
ZRCD70   EQU   70           FLOATING POINT CHARACTERISTIC OUT OF RANGE  12060023
ZRCD109  EQU   109                      PRECISION LOST                  12080023
         END   DCNVRT1                                                  12100023
./ ADD NAME=ASMGF8P
F8P      TITLE     'ASMG F8  OUTPUT FORMATTING ROUTINE (F8PRNT)'        00020021
         ISEQ  73,78                                                    00040021
ASMGF8P  START                                                          00060020
         USING RECORD,GRA                                               00080020
         USING MAINLN,FRB               FRB IS PRIMARY BASE REGISTER    00100020
         PRINT        NOGEN                                             00120020
         FDIMEN                                                         00140020
         PRINT      GEN                                                 00160020
*                                                                     * 00180020
*TITLE 'ASMGF8P ' ...  PRINT                                          * 00200020
*FUNCTION/OPERATION-                                                  * 00220020
*  ASMGF8P IS TO PRODUCE THE LISTING AND THE OBJECT DECK. TO DO THIS  * 00240020
*  ASMGF8P HAS FOUR ENTRY POINTS-                                     * 00260020
*        PRNT-      PROCESS EDITED TEXT RECORD (LEFT HALF)  TYPE 100  * 00280020
*        BLDIMG     BUILDS SOURCE IMAGE (RIGHT HALF)        TYPE 110  * 00300020
*                                                                111  * 00320020
*        COMMENT    MOVES IN SOURCE IMAGE (RIGHT HALF)      TYPE 000  * 00340020
*                                                                010  * 00360020
*                                                                011  * 00380020
*                   PUTS OUT ERROR LINE                          001  * 00400020
*        LOADRA     PRINTS ERROR LINE                       TYPE 001  * 00420020
*ENTRY POINTS- SEE INDIVIDUAL ROUTINE                                 * 00440020
*INPUT- SEE INDIVIDUAL ROUTINE                                        * 00460020
*OUTPUT- SEE INDIVIDUAL ROUTINE                                       * 00480020
*EXTERNAL ROUTINES-                                                   * 00500020
*        NAME           ROUTINE    USE                                * 00520020
*        SYSP(SRB)      ASMGF8I    PUNCH ON SYSLIN AND/OR SYSPUNCH    * 00540022
*        WTERR(SRB)     ASMGF8I    WRITE ERROR RECORD                 * 00560020
*        SYSL(SRB)      ASMGF8I    PRINT ON SYSPRINT                  * 00580020
*             BEFORE THE ABOVE ROUTINES ARE CALLED, SRB IS LOADED     * 00600020
*             FROM CTXTIO(ACT).                                       * 00620020
*EXITS- ALL ROUTINE EXIT VIA-  BR  SRR                                * 00640020
*TABLES/WORKAREAS-                                                    * 00660020
*   LIST-     PUSH-DOWN POP-UP SAVE AREA                              * 00680020
*   H1-       HEADING ONE                                             * 00700020
*   H2-       HEADING TWO                                             * 00720020
*   DETAIL-   PRINT OUTPUT BUFFER                                     * 00740020
*   DUMOUT-   PRINT DUMMY OUTPUT BUFFER                               * 00760020
*   TXTOUT-   PUNCH OUTPUT BUFFER                                     * 00780020
*   LFTHLF-   LEFT HALF OF DETAIL RECORD                              * 00800020
*   SOURCE-   RIGHT HALF OF DETAIL RECORD                             * 00820020
*./      DELETE    SEQ1=00840020,SEQ2=00840020                          00840021
*   INPUT-    INPUT SOURCE RECORD                                     * 00860020
*   ERREC     INPUT/OUTPUT ERROR RECORD                               * 00880020
*                                                                     * 00900020
         EJECT                                                          00920020
*                                                                     * 00940020
*TITLE 'PRNT' ... PROCESS EDITED TEXT RECORDS (LOAD LEFT HALF AND     * 00960020
*                 PRINT)                                              * 00980020
*ENTRY POINT-  PRNT(ACT)   CALLED VIA-                                * 01000020
*        L     SRB,PRNT(ACT)            LOAD BASE/ENTRY               * 01020020
*        BALR  SRR,SRB                  CALL PRNT                     * 01040020
*INPUT-  F8WORK(ACT)   INPUT RECORD                                   * 01060020
*        F8INST(ACT)   LEFT HALF TO BE PRINTED                        * 01080020
*OUTPUT- DETAIL        PRINT IMAGE FOR SYSL(SRB)                      * 01100020
*        TXTOUT        PUNCH IMAGE FOR SYSP(SRB)                      * 01120020
*                                                                     * 01140020
         SPACE 2                                                        01160020
MAINLN   EQU   *                                                        01180020
* ENTRY FOR LEFT HAND SIDE                                              01200020
PRNT00   BAL   GRX,CALLCF               SAVE REGISTERS                  01220020
         L     GRA,RECADDR              LOAD ADDRESS OF INPUT RECORD    01240020
         TM    REPSW(ACT),X'0F'         IS IT PUNCH,REPRO, MNOTE OR TTL 01260020
         BZ    PRNT01                   NO, SKIP                        01280020
*        ************************************************************** 01300020
TSTAOP   MVC   RLI(2),F8WORK+6(ACT)    POINTER                          01320020
         LH    GRX,RLI      TO 2ND                                      01340020
         LA    GR2,F8WORK(GRX,ACT)        OPERAND FIELD                 01360020
         MVC   RLIF+1(1),0(GR2)   MOVE 2ND OPND LENGTH TO ALIGNED CELL  01380020
         LH    GR1,RLIF                                                 01400020
         LTR   GR1,GR1                  IS 2ND OPRN LENGTH 0            01420020
         BNE   TSTAOP1                 NO                               01440020
         TM    REPSW(ACT),X'06'         IS THIS A REPRO                 01460020
         BC    11,RETNCF               NO                               01480020
REPROF7  NI    REPSW(ACT),X'FE'        TURN SWITCH TO 2 FOR F7 REPRO    01500020
         LA    GR1,80                  LENGTH OF REPRO                  01520020
TSTAOP1  BCTR  GR1,0                   REDUCE FOR MOVE                  01540020
         LA    GR2,1(GR2)               IF NOT BUMP BY 1                01560020
         LR    SP2,GR2                                                  01580020
         TM    REPSW(ACT),X'0C'         TEST MNOTE AND TITLE BITS       01600020
         BO    MNOTE00                 IF ONES, MNOTE                   01620020
         BM    TITLE00                 IF MIXED, TITLE                  01640020
         TM    REPSW(ACT),X'02'                                         01660020
         BO    REPRO00                IF 3, REPRO                       01680020
         B     PUNCH00                  IF 1, PUNCH                     01700020
MNOTE00  LA    GR1,1(GR1)               2ND OPRN LENGTH                 01720020
MNOTE01  DS        0H                                                   01730027
         LA        GRZ,SOURCE+C        SET PRINT LINE PTR TO CONTIN     01740027
         LA        GRB,E+1-C           MAX NUMBER OF BYTES PER LINE     01750027
         MVI       LOC,XBLANK          BLANK OUT ENTIRE LINE            01760020
         MVC       LOC+1(L'DETAIL-2),LOC  INCLUDING CONTINUE COLUMN     01780026
         MVI       SOURCE-1,C'+'       AN MNOTE IS GENERATED            01782027
         TM        FLAGA,X'02'         TEST IF CONTINUATION             01783025
         BO        MNOTE03             SKIP IF SO                       01786025
         CLI       0(GR2),X'5C'        TEST IF COMMENT                  01789025
         BE        MNOTE02             SKIP IF SO                       01792027
         MVC       LOC+9(13),MNOMSG    PLACE ***MNOTE*** MESSAGE        01795025
MNOTE02  DS        0H                                                   01800027
         LA        GRZ,SOURCE+B        RESET PRINT LINE POINTER         01805027
         LA        GRB,E+1             RESET LENGTH OF FIRST LINE       01810027
MNOTE03  DS    0H                                                       01815027
         CR    GR1,GRB                                                  01820020
         BNH   NOCONT                   NO CONT. LINES NEEDED           01840020
* MORE BYTES REMAINING THAN WILL FIT ON ONE LINE                        01860020
         MVI   SOURCE+E+1,X'E7'         SET CONT. MARK ON               01880020
         SR    GR1,GRB                  DETERMINE OVERHANG              01900020
         STH   GR1,K                    SAVE FOR NEXT LINE              01920020
         LR    GR1,GRB                  MOVE MAX NO. OF BYTES           01940020
NOCONT   BCTR  GR1,0                    REDUCE FOR MOVE                 01960020
*./      DELETE    SEQ1=01980020,SEQ2=02000020                          02000023
         EX    GR1,MOVES                MOVE                            02020020
         STM   GR1,GR2,SRRGRY          SAVE ADDR. OF 2ND OPRN           02040020
         BAL   SRR,MNOTE04              PUT OUT MNOTE                   02060027
*                                                                       02080020
         TM    SOURCE+E+1,XNOTBL        ARE BYTES REMAINING             02100020
         BZ    RETNCF                   NO,EXIT TO USER                 02120020
* CONTINUATIONS FOR MNOTE                                               02140020
         MVI   PUNSWH,X'FF'             TURN OFF PUNCH                  02160020
         BAL   SRR,CHKSWJ               PRINT MNOTE LINE                02180020
         LM    GR1,GR2,SRRGRY          RESTORE PTR TO 2ND OPRN          02200020
         LA    GR2,1(GR2,GR1)           ADJUST TEXT RECORD PTR          02220020
         LH    GR1,K                    PICK UP REMAINING BYTE COUNT    02240020
         OI    FLAGA,X'02'              SET CONTINUATION 'ON'           02260020
         B     MNOTE01                  RETURN FOR ANOTHER LINE         02280020
*                                                                       02300020
MNOTE04  BAL   GRX,CALLCF               SAVE REGISTERS                  02320027
         B     LOADRK                   LOAD RIGHT HALF                 02340020
TITLE00  MVI   HEADNG,XBLANK            EXTERNAL BLANK TO HEADING       02360020
         MVC   HEADNG+1(99),HEADNG      BLANK MOST OF HEADING           02380020
         LA    GRZ,HEADNG              ADDR. FOR MOVE                   02400020
         EX    GR1,MOVES                MOVE                            02420020
         L     GRA,RECADDR              LOAD ADDRESS OF INPUT RECORD    02440020
         B     INLCPL                                                   02460020
REPRO00  ST    GR2,SRRGRY             SAVE ADDR OF 2ND OPERAND          02480020
         MVI   PUNSWH,X'FF'               TURN OFF PUNCH                02500020
         MVC       DWORD(1),SOURCE-1   SAVE PRINT POSITION 40           02520020
         CLI       SOURCE-1,XBLANK     WAS THIS STATEMENT GENERATED     02540020
         BE        REPRO01             NO, PRINT IT                     02560020
         CLI       F8PGEN(ACT),X'FF'   DO WE PRINT GEN STATEMENT  V7A07 02580028
         BNE       REPRO01             YES, PRINT IT                    02600020
         MVI       PRNTSW,MKX          SET NOT TO PRINT                 02620025
REPRO01  BAL   SRR,CHKSWH             PRINT 'REPRO'                     02640020
         MVC       SOURCE-1(1),DWORD   RESTORE PRINT POSITION 40        02660020
         L     GR2,SRRGRY             RESTORE PTR TO 2ND OPND           02680020
         LA    GRZ,SOURCE                                               02700020
         EX    GR1,MOVES                                                02720020
         LA    GRX,CTSEQ8+2(ACT)       UPDATE STATEMENT NO.             02740020
         BAL   SRR,CNVRT                    AND                         02760020
         MVC   DSTMNT,DWORD             MOVE TO PRINT LINE              02780020
         BAL   SRR,CHKSWH             PRINT REPRO LINE                  02800020
         MVI   LSTRCD,X'40'            RESET LAST RECORD TYPE           02820020
         TM    REPSW(ACT),X'03'        IS THIS F8 REPRO                 02840020
         BM    RETNCF                  NO                               02860020
PUNCH00  BAL   GRB,DUMP           DUMP PUNCH BUFFER IF NEEDED           02880020
         LA    GRZ,DUMOUT+1       ADDR FOR MOVE                         02900020
         EX    GR1,MOVES                                                02920020
         LA    SP1,DUMOUT         ADDR FOR PUNCH                        02940020
         L     SRB,CTXTIO(ACT)          TEXT I/O BASE                   02960020
         BAL   SRR,SYSP(SRB)            ENTRY POINT TO PUNCH RTN        02980020
         MVI   DUMOUT+1,XBLANK    BLANK ENTIRE DUMOUT                   03000020
         MVC   DUMOUT+2(L'DETAIL-2),DUMOUT+1                            03020026
         B     RETNCF                                                   03040020
MOVES    MVC   0(*-*,GRZ),0(GR2)        MOVE                            03060027
*        ************************************************************** 03080020
PRNT01   MVC   LFTHLF(4),CONSR             MOVE IN FLI AND FLAG         03100020
         MVC   XESDID(1),CESDID(ACT)    MOVE IN CURRENT ESD-ID          03120020
         MVC   LOCCTR(16),F8INST(ACT)   MOVE IN LEFT HAND SIDE          03140020
         MVC   FLAGA(1),F8WORK+2(ACT)                                   03160020
INLCPL   DS    0H                                                       03162027
         TM    FLAGA,X'70'              IS THIS SOURCE RECORD .Q        03164027
         BNZ   INLCNSRC                 BRANCH IF NOT                   03166027
         MVI   LOCLSTRD,X'00'           SET SOURCE LAST RECORD TYPE     03168027
INLCNSRC DS    0H                                                       03170027
         TM    SPACSW(ACT),X'FF'        IS SPACE SWITCH ON              03180027
         BZ    PRINT1                   NO, SKIP                        03200020
         BM    SPACERR                  SPACE ERROR                     03220020
         STH   SP2,BLKBLK               SPACE ON AND OK           V7A10 03240028
         B     PRINT6                   NORMAL SPACE ROUTINE            03260020
SPACERR  MVI   SPACSW(ACT),X'00'       TURN SPACE SWITCH OFF            03280020
         B     INLCPL                                                   03300020
PRINT1   CLI   EJCTSW(ACT),X'FF'        IS EJECT SWITCH ON              03320020
         BE    PRINT7                   YES, EJECT                      03340020
* ANTICIPATE NEEDING LOCAL PRINT SWITCH ON AND LOCAL PUNCH SWITCH OFF   03360020
         MVI   PRNTSW,MKY               NO, SET SWITCHES                03380025
         MVI   PUNSWH,X'FF'                                             03400020
         MVI   ALGSWH,X'FF'             SET ALIGNMENT SWITCH OFF        03420020
*                                                                       03440020
         TM    FLAGA,X'40'              LEFT HAND SIDE                  03460020
         BO    PRINT3                     YES                           03480020
         TM    FLAGA,X'20'                NO -- IS THIS AN ERROR REC    03500020
         BO    PRINT2                       NO -- CONTINUE              03520020
         TM    FLAGA,X'10'                  MAYBE -- LOOK AGAIN         03540020
         BO    PRINT4                         YES -- ERROR RECORD       03560020
* RECORD TYPE 000, 010 OR 011                                           03580020
PRINT2   TM    LSTRCD,X'40'        IS THERE A LINE TO BE PRINTED        03600020
         BO    PRNT2B                   NO -- CONTINUE                  03620020
         CLI       CTERRSW(ACT),X'FF'  TEST FOR ERROR ON LAST LINE      03630023
         BE        PRNT2A              PRINT IT IF SO                   03635023
         TM    LSTRCD,X'10'             MAYBE -- GEN SWITCH INVOLVED    03640020
         BZ    PRNT2A                   NO, GO AHEAD AND PRINT          03660020
         CLI   F8PGEN(ACT),X'FF'          YES - IS GEN SWITCH OFF       03680020
         BNE   PRNT2A                   ON -- PRINT                     03700025
         MVI   PRNTSW,MKX               OFF -- BLANK THE LINE           03710025
PRNT2A   BAL   SRR,CHKSWH               PRINT LINE                      03720020
         MVI   PRNTSW,MKY               TURN PRINT SWITCH ON            03740025
PRNT2B   B     LOADRERR               NOW LOAD THIS RIGHT HALF          03760020
* RECORD TYPE 100,110 OR 111                                            03780020
PRINT3   MVI   PUNSWH,0                 TURN PUNCH SWITCH ON            03800020
         MVN   LLTH+1(1),FLAG           SEPARATE BYTE COUNTS FROM IND'S 03820020
         TM    FLAGA,X'10'              SHOULD GEN. SWITCH BE CHECKED   03840020
         BZ    PRNT3A                    NO                             03860020
         CLI   F8PGEN(ACT),X'FF'        YES, IS GEN SWITCH OFF          03880020
         BNE   PRNT3A                   NO -- GEN SWITCH IS ON          03882027
         LA    GRX,PRNT3B               FINAL TARGET ADDRESS            03884027
         CLI   LOCLSTRD,X'00'           WAS LAST RECORD SOURCE .Q       03886027
         BCR   7,GRX                    BRANCH IF NOT                   03888027
         CLI   F8PON(ACT),X'FF'         IS PRINT 'OFF' .Q               03890027
         BCR   8,GRX                    YES -- TURN PRINT SWITCH OFF    03891027
         TM    CTLSTI(ACT),X'10'        IS 'LIST' OPTION ON .Q          03892027
         BCR   8,GRX                    BRANCH IF NOT                   03893027
         TM    CTLSTI(ACT),X'10'        WAS 'LIST' OPTION SPECIFIED .Q  03894027
         BCR   8,GRX                    BRANCH IF NOT                   03896027
         CLI   LLTH+1,X'0F'             SHOULD LOCCTR BE BLANK          03898027
         BCR   8,GRX                    BRANCH IF YES                   03900027
         CLI   F8WORK+4(ACT),EQUX       IS THIS AN EQU RECORD .Q        03902027
         BCR   8,GRX                    YES, LOCATION COUNTER USELESS   03904027
         CLI   F8WORK+4(ACT),USINGX     IS THIS A USING RECORD .Q       03906027
         BCR   8,GRX                    YES, LOCATION COUNTER USELESS   03908027
         L     SRR,LSTDCB(,ACT)         SYSPRINT DCB ADDRESS            03910027
         L     SRR,L1DCBLPT(,SRR)       LAST RECORD POINTER             03911027
         LTR   SRR,SRR                  IS THERE A LAST POINTER .Q      03912027
         BZ    LOCSARND                 BRANCH IF NOT                   03913027
         CLI   1(SRR),XBLANK            IS LOC FIELD BLANK .Q           03914027
         BNE   LOCSARND                 BRANCH IF NOT                   03916027
         UNPK  WORK(7),LOCCTR(4)        1ST SIX DIGITS OF LOC FIELD     03918027
         MVZ   WORK(6),WORK-1           CLEAR ZONE BITS                 03920027
         L     GRB,CTRTBP(,ACT)         POINT TO TRANSLATE TABLE        03922027
         TR    WORK(6),0(GRB)           TRANSLATE TO PRINTABLE          03924027
         MVC   1(6,SRR),WORK            ADD LOCATION COUNTER TO CALL    03926027
LOCSARND DS    0H                                                       03928027
         MVI   LOCLSTRD,X'FF'           REMEMBER NON SOURCE TYPE NOW    03930027
         BR    GRX                      TURN OFF PRINT SWITCH           03932027
PRNT3A   DS    0H                                                       03934027
         TM    LSTRCD,X'40'             WAS LAST RECORD LEFT HLF SIDE   03936027
         BZ    PRNT3C                     NO                            03940020
         CLI   F8PDAT(ACT),X'00'        DO WE PRINT DATA                03960020
         BE    PRNT3C                       YES -- LOAD LEFT HALF       03980020
PRNT3B   MVI   PRNTSW,MKX                   NO -- TURN PRINT SW OFF     04000025
*                                                                       04020020
PRNT3C   BAL   SRR,LOADLH               NOW LOAD LEFT HALF              04040020
         CLI   ALGSWH,X'FF'        WAS ALIGNMENT DATA JUST PROCESSED    04060020
         BE    EXIT1                 NO                                 04080025
         B     EXIT2                 YES                                04100020
* ERROR RECORD                                                          04120020
PRINT4   MVC       CTERRSW(1,ACT),CTEMERR(ACT) SET F8P ERROR SWITCH     04140023
         MVC   ERREC(4),F8WORK(ACT)    MOVE ERLI,EFLAG,NERR TO INPUT    04160020
         MVC   ESTMNT(2),CTSEQ8+2(ACT) INSERT STATEMENT NO.             04180020
         LH    GRX,ERLI                UP REC LENGTH BY 2               04200020
         LA    GRX,2(GRX)                                               04220020
         STH   GRX,ERLI                                                 04240020
         LA    GR1,7                                                    04260020
         SR    GRX,GR1                 NO. REMAINING BYTES MINUS ONE    04280020
         BM    PRNT4A                   IF MINUS DONT MOVE              04300020
         EX    GRX,MVERCD              MOVE REMAINDER OF ERR REC        04320020
PRNT4A   LA    SP1,ERREC                LOAD ADDR. OF REFORMATTED REC   04340020
         L     SRB,CTXTIO(ACT)          LOAD BASE                       04360020
         BAL   SRR,WTERR(SRB)          PUR ERR REC IN TEXT STREAM       04380020
         B     RETNCF                  AND RETURN                       04400020
MVERCD   MVC   ERR1(*-*),F8WORK+4(ACT)  EXECUTED MOVE                   04420027
* SPACE RECORD                                                          04440020
*                                                                       04460020
PRINT6   MVI   SPACSW(ACT),X'00'        TURN OFF SPACE SWITCH           04480020
         LH    GRY,BLKCNT               TOTAL BLANK LINE COUNT    V7A10 04500028
         LH    GR1,BLKBLK               FOR SUCCESSIVE 'SPACE' OP V7A10 04520028
         AR    GRY,GR1                    (CALLCF HAS JUST USED GRY AND 04540020
         STH   GRY,BLKCNT               BLANK LINE COUNTER        V7A10 04560028
         B     PRNT7B                   CONTINUE                        04580020
* EJECT RECORD                                                          04600020
*                                                                       04620020
PRINT7   DS    0H                                                 V7A10 04640028
         CLC   BLKCNT,LCNT              LARGE SPACE WAITING .Q    V7A10 04650028
         BNH   PRNT7A                      NO                           04660020
         BAL   SRR,PGEHED                 YES -- EJECT FOR BIG SPACE    04680020
PRNT7A   BAL   SRR,PGEHED              EJECT TO A NEW PAGE              04700020
         MVI   EJCTSW(ACT),X'00'        TURN EJECT SWITCH OFF           04720020
         MVC   BLKCNT,HONE              SET FIRST BLANK LINE CNT  V7A10 04740028
PRNT7B   MVI   DETAIL+1,XBLANK          BLANK OUT ENTIRE                04760020
         MVC   DETAIL+2(L'DETAIL-2),DETAIL+1   DETAIL LINE              04780026
         MVI   LSTRCD,X'40'             SET LAST RECORD LEFT HALF       04800020
         B     RETNCF                   RETURN TO CALLER                04820020
         EJECT                                                          04840020
*./      DELETE    SEQ1=04860020,SEQ2=05020020                          05020023
*        ************************************************************** 05040020
*        LOAD RIGHT HALF OF OUTPUT PAGE                                 05060020
*        ************************************************************** 05080020
*./      DELETE    SEQ1=05100020,SEQ2=05180020                          05180023
LOADRERR CLI       CTERRSW(ACT),X'FF'  IS PRINT ERROR MSG SWITCH ON     05200023
         BNE   LOADRI                NO -- CONTINUE WITH LOAD RGT HLF   05220020
*./      DELETE    SEQ1=05240020,SEQ2=05300020                          05300023
* PRINT ERROR MESSAGE                                                   05320020
         CLC   CTSEQ8+2(2,ACT),HZERO    IS ERROR BEFORE FIRST STMT      05330026
         BE    LOADRH                   YES,DO NOT PRINT *ERROR*        05340023
         MVC   DUMOUT+10(13),ERRMSG     USE DUMOUT AREA                 05350023
         LA    GRB,DUMOUT                 FOR PRINT BUFFER              05360020
         MVI       BLKCNT,0            IGNORE SPACE COMMANDS            05370023
         CLI   LCNT+1,X'00'             ENOUGH ROOM ON THIS PAGE        05380020
         BH    LOADRF                     YES                           05400020
         MVI   LCNT+1,X'01'               NO -- WELL, MAKE ROOM         05420020
LOADRF   BAL   SRR,DMPIT                PRINT THE LINE OUT              05440023
LOADRH   MVI       CTERRSW(ACT),X'00'  RESET PRINT ERROR MSG SWITCH     05460023
LOADRI   TM    REPSW(ACT),X'0F'    IS THIS MNOTE                        05480020
         BO    TSTAOP            YES                                    05500020
         SR    GRB,GRB                  MOVE 1, 2, ... 80 BYTE          05520020
         IC    GRB,1(GRA)                 SOURCE IMAGE                  05540020
         LA     GRB,252(GRB)            DECREASE LOW BYTE OF GRB BY 4   05560020
         EX     GRB,MOVCRD                BY ADDING COMPLEMENT OF 4     05580020
         L     GRC,CTRTBP(ACT)         ADDRESS OF TRANSLATE TABLE       05600020
         EX    GRB,TRANS                   MOVE AND TRANSLATE           05620020
         MVI   CTEMERR(ACT),X'FF'       TURN ON MNOTE                   05640020
LOADRK   TM    FLAGA,X'10'              WAS THIS SOURCE REC GENERATED   05660020
         BZ    LOADRJ                     NO                            05680020
          MVI  SOURCE-1,C'+'              YES - PLACE A '+' IN LISTING  05700020
LOADRJ   TM    FLAGA,X'02'             CONTINUATION BIT ON              05720020
         BO    EXIT                    YES - LEAVE STMNT. NO. BLANK     05740020
         TM    FLAGA,X'30'                NO -- TYPE 110, NON-LITR      05760020
         BM    EXIT                    YES - SKIP STMNT. NO.            05780020
         LA    GRX,CTSEQ8+2(ACT)       PICK UP STATEMENT NO., INCREASE  05800020
         BAL   SRR,CNVRT                  BY 1, CONVERT TO EXTERNAL     05820020
         MVC   DSTMNT,DWORD                 AND MOVE TO DETAIL LINE     05840020
EXIT     LH    SP2,FLAGA                PASS FLAGA TO PUTER             05852025
         LA    SP1,DSTMNT               SOURCE IN TERM BUFFER           05854025
         L     SRB,CTXTIO(,ACT)         LOAD BASE                       05856025
         BAL   SRR,PUTXT(,SRB)          SOURCE IN BUFFER FOR UT1        05858025
EXIT1    MVC   LSTRCD,FLAGA             CURRENT TYPE TO LAST RECORD     05860025
EXIT2    MVI   FLAG,X'00'               RESET F8PRNT WORKAREA FLAG      05880020
         B     RETNCF                       AND EXIT                    05900020
MOVCRD   MVC   SOURCE(*-*),CARD         EXECUTED MOVE                   05920027
TRANS    TR    SOURCE(*-*),0(GRC)       EXECUTED TRANSLATE              05940027
*        ************************************************************** 05960020
*        LOAD LEFT HALF OF OUTPUT PAGE                                  05980020
*        ************************************************************** 06000020
LOADLH   UNPK  WORK(15),LOCCTR(8)       1ST 14 HEX DIGITS + 1 HEX JUNK  06020020
         UNPK  WORK+14(15),SSB2D2(8)    15TH THROUGH 29TH               06040020
         MVC   WORK+29(1),EA2+2         30TH                            06060020
*./      DELETE    SEQ1=06080020,SEQ2=06160020                          06160025
         MVZ   WORK(32),WORK-1         REMOVE ZONE BITS                 06170027
         L     GRB,CTRTBP(ACT)         ADDRESS OF TRANSLATE TABLE       06180020
         TR    WORK(30),0(GRB)          TRANSLATE ALL 30 EXPANDED BYTES 06200020
         CLI   LLTH+1,X'0F'             SHOULD LOCCTR COLUMN BE BLANK   06220020
         BNE   LOADLX                     NO                            06240020
         MVI   LLTH+1,X'00'               YES -- RESET BYTE COUNT       06260020
         B     CHKSWH                       AND CHECK PRINT/NO PRINT    06280020
LOADLX   DS    0H                                                       06300027
         TM    F8WORK+3(ACT),X'80'      IS THIS AN ASSEMBLER OP .Q      06302027
         BZ    NOTASOP                  IF ZERO, NOT ASSEMBLER OP       06304027
         CLI   F8WORK+4(ACT),EQUX       TEST IF 'EQU' RECORD            06306027
         BE    EQUY                     BRANCH IF YES                   06308027
         CLI   F8WORK+4(ACT),USINGX     TEST IF 'USING' RECORD          06310027
         BE    EQUY                     BRANCH IF YES                   06312027
         CLI   F8WORK+4(ACT),ORGX       TEST IF 'ORG' RECORD            06314027
         BE    ORGY                     BRANCH IF YES                   06315027
NOTASOP  DS    0H                                                       06316027
         MVC   LOC(6),WORK              MOVE LOCATION COUNTER           06318027
         TM    FLAG,X'F0'              IS THIS A DS STATEMENT           06320020
         BO    CHKSWH                   YES -- JUMP TO PRINT ROUTINE    06340020
         TM    FLAG,X'80'               NO --- IS THIS ALIGNMENT DATA   06360020
         BO    ALIGN                     YES -- GO TO ALIGNMENT ROUTINE 06380020
         TM    FLAG,X'40'                NO --- TEST FOR DC             06400020
         BO    DCLH                       YES -- GO TO DC/DS SECTION    06420020
         LA    GRX,CHKSWH                 NO --- TREAT AS MACH INSTR    06440020
         CLI   FLAG,X'00'               FIRST -- CHECK IF BYTE COUNT 0  06460020
         BCR   8,GRX                      YES -- JUMP TO CHKSWH         06480020
         TM    FLAG,X'30'                 NO --- DETERMINE SYLLABLE CNT 06500020
         BZ    BYTE2                        CNT = 2 -- SKIP LAST 2 SYLL 06520020
         BM    BYTE4                        CNT = 4 -- SKIP LAST SYLL   06540020
BYTE6    MVC   LOC+17(4),WORK+14            CNT = 6 -- MOVE ALL 3 SYLL  06560020
BYTE4    MVC   LOC+12(4),WORK+10         MOVE 2ND SYLLABLE              06580020
BYTE2    MVC   LOC+7(4),WORK+6           MOVE 1ST SYLLABLE              06600020
* CHECK FOR PRESENCE OF EFFECTIVE ADDRESS 1                             06620020
CHKEA1   TM    FLAG,X'20'              EFFECTIVE ADDRESS 1 PRESENT      06640020
         BZ    CHKEA2                    NO --- GO CHECK FOR EA2        06660020
         MVC   LOC+21(6),WORK+18         YES -- MOVE IT                 06680020
         CLI   LOC+21,X'F0'             DOES EA1 HAVE LEADING ZERO      06700020
         BNE   CHKEA2                    NO --- LEAVE IT AS IS          06720020
         MVI   LOC+21,XBLANK              YES -- REPLACE BY BBLANK      06740020
* CHECK FOR PRESENCE OF EFFECTIVE ADDRESS 2                             06760020
CHKEA2   TM    FLAG,X'10'              EFFECTIVE ADDRESS 2 PRESENT      06780020
         BCR   8,GRX                     NO --- SKIP TO CHKSWH          06800020
         MVC   LOC+27(6),WORK+24         YES -- MOVE IT                 06820020
         CLI   LOC+27,X'F0'             DOES EA2 HAVE LEADING ZERO      06840020
         BCR   7,GRX                     NO                             06860020
         MVI   LOC+27,XBLANK              YES -- REPLACE BY BLANK       06880020
         BCR   15,GRX                   TO CKSWH                        06900020
*        PRINT EXTRA ADDRESS FOR 'ORG'                                  06905027
ORGY     DS    0H                                                       06908027
         MVC   LOC(6),WORK              PLACE OLD LOCATION ON LINE      06910027
         MVC   LOC+27(6),WORK+6         PLACE NEW LOCATION ON LINE      06912027
         B     CHLDZERO                 CHECK FOR LEADING ZERO          06915027
*                                                                       06920027
EQUY     DS    0H                                                       06922027
         MVC   LOC+27(6),WORK           MOVE EQU ARGUMENT TO ADDR2 FLD  06924027
CHLDZERO DS    0H                                                       06926027
         CLI   LOC+27,X'F0'             IS THERE A LEADING ZERO .Q      06928027
         BNE   CHKSWH                   TO CHKSWH IF NOT                06930027
         MVI   LOC+27,XBLANK            REMOVE LEADING ZERO             06932027
         B     CHKSWH                   TO CHKSWH                       06934027
*                                                                       06936027
ALIGN    MVI   ALGSWH,X'00'             TURN ALIGNMENT DATA SWITCH ON   06940020
         MVI   PUNSWH,X'00'               TURN PUNCH SWITCH ON          06960020
         MVC   DUMOUT+1(6),WORK         MOVE LOCATION COUNTER           06980020
         LA    GRB,DUMOUT               LOAD ADDRESS OF DUMMY LINE      07000020
         LH    GRX,LLTH                 PICK UP BYTE COUNT,             07020020
         AR    GRX,GRX                    DOUBLE IT,                    07040020
         BZ    CHKSWH                     (SKIP MOVE IF 0 ALIGN BYTES)  07060020
         BCTR  GRX,0                        REDUCE BY 1 AND             07080020
         EX    GRX,MOVALG                     MOVE ALIGNMENT DATA       07100020
         B     CHKSWHX                  PRINT ALIGNMENT IF PRINT SW ON  07120020
*                                                                       07140020
MOVALG   MVC   DUMOUT+8(*-*),WORK+6     MOVE ALIGNMENT BYTES            07160027
MOVDC    MVC   LOC+7(*-*),WORK+6        MOVE DC BYTES                   07180027
*                                                                       07200020
DCLH     LH    GR1,LLTH                 GET DC LENGTH                   07220026
         AR    GR1,GR1                  DOUBLE DC LENGTH                07240026
         BZ    CHKSWH                   SKIP MOVE IF NO DC BYTES        07260020
         BCTR  GR1,0                    REDUCE BY ONE FOR EXECUTED MOVE 07280026
         EX    GR1,MOVDC                GO MOVE DC TO OUTPUT            07300026
*        ************************************************************** 07320020
*        PRINT ROUTINE                                                  07340020
*        ************************************************************** 07360020
CHKSWH   LA    GRB,DETAIL               PICK UP POINTER TO DETAIL LINE  07380020
CHKSWHX  CLI       CTERRSW(ACT),X'FF'  TEST IF ERROR SW ON              07390023
         BE        DMPIT               PRINT IRREGARDLESS IF SO         07395023
         CLI   PRNTSW,MKX               IS PRINT SWITCH ON .Q           07400025
         BE    CLEAR                      NO -- CLEAR LINE              07420020
         B     DMPLIN                     YES, PRINT LINE               07440020
*                                                                       07460020
CHKSWJ   LA    GRB,DETAIL                LOAD ADDRESS OF DETAIL LINE    07480020
*                                                                       07500020
DMPLIN   CLI   F8PON(ACT),X'FF'         PRINTS = X'00' IF PRINT ASSEM   07520020
         BE    CLEAR                      OP IS ON, = X'FF' IF OFF      07540020
DMPIT    SR    GRD,GRD                  ZERO SO CAN INSERT CHAR         07560023
         ST    SRR,REGHLD               STORE RETURN REGISTER           07580020
         LH    GRD,BLKCNT               PICK UP BLANK LINE COUNT  V7A10 07600028
         CH    GRD,LCNT                 TEST IF THERE IS ENOUGH ROOM    07620020
         BL    DMPLNB                     YES -- CONTINUE TO DMPLNB     07640020
         BAL   SRR,PGEHEDIT               NO --- PRINT HEADING          07660023
         LA    GRD,1                        AND SET BLANK LINE COUNT 1  07680020
DMPLNB   STC   GRD,0(GRB)               ONE BLANK LINE AFTER HEADING    07700020
         LR    SP1,GRB                  PICK UP LOCATION OF LINE        07720020
         L     SRB,CTXTIO(ACT)          LOAD BASE                       07740020
         BAL   SRR,SYSL(SRB)            CALL SYSLIST                    07760020
         LH    GRX,LCNT                 ADJUST                          07780020
         SR    GRX,GRD                    LCNT                          07800020
         BNP       DMPEXIT             DON'T LET LCNT GET NEGATIVE      07810023
         BCTR  GRX,0                        FOR LINE                    07820020
         STH   GRX,LCNT                       JUST PRINTED              07840020
DMPEXIT  L     SRR,REGHLD               RESTORE SRR NOW                 07860023
         MVC   BLKCNT,HZERO             RESET BLANK LINE COUNT    V7A10 07880028
* CLEAR DETAIL OR DUMMY LINE NOW WHETHER PRINTING TOOK PLACE OR NOT     07900020
CLEAR    MVI   1(GRB),XBLANK            CLEAR FIRST POSITION TO BLANK   07920020
         MVC   2(L'DETAIL-2,GRB),1(GRB)   CLEAR NEXT 131                07940026
*                                                                       07960020
         CLI   PUNSWH,X'00'             TEST LOCAL PUNCH SWITCH         07980027
         BE    GOTXT                      ON --- GO TO PUNCH ROUTINE    08000020
         BR    SRR                        OFF -- RETURN TO USER NOW     08020020
*        ************************************************************** 08040020
*        PAGE HEADING ROUTINE                                           08060020
*        ************************************************************** 08080020
PGEHED   CLI   F8PON(ACT),X'FF'         PRINTS = X'00' IF PRINT ASSEM   08100020
         BCR   8,SRR                      OP IS 'ON', = X'FF' IF 'OFF'  08120020
PGEHEDIT DS    0H                                                       08125027
         TM    CTLSTI(ACT),X'10'        WAS 'NOLIST' SPECIFIED .Q       08130027
         BCR   8,SRR                    BRANCH NOW IF YES               08135027
         ST    SRR,REGHLD+4             STORE RETURN REGISTER           08140027
         L     SRR,ADLIST1(,ACT)        POINT TO LIST1 IN ASMGASM       08150026
         L     GRZ,L1PAGENO(,SRR)       GET CURRENT PAGE NUMBER         08160026
         LA    GRZ,1(,GRZ)              BUMP BY ONE                     08170026
         ST    GRZ,L1PAGENO(,SRR)       AND RESTORE FOR THE FUTURE      08180026
         BAL   SRR,CNVRTX               CONVERT TO CHARACTER AND        08190026
         MVC   PCNT,DWORD+1             STORE IN PRIMARY HEADER LINE    08200026
         MVC   DECKNM(8),CTITLE(ACT)    MOVE PROGRAM I.D. TO HEADER     08220027
         LA    SP1,H1                    NOW EJECT AND PRINT            08240020
         MVI   H1SPC,X'FF'                    PRIMARY HEADING LINE      08260027
         L     SRB,CTXTIO(ACT)          LOAD BASE                       08280020
         BAL   SRR,SYSL(SRB)            CALL SYSLIST                    08300020
         SR    GRX,GRX                  PREPARE FOR NEW LINE COUNT      08320025
         IC    GRX,CTPGLNCT(,ACT)       GET PAGE LINE COUNT             08330025
         LTR   GRX,GRX                  TEST FOR LINECNT=0              08340025
         BNZ   *+8                      NO, IT'S NOT ZERO               08350025
         LH    GRX,H32766               YES IT IS SO MAKE IT HUGE       08360025
         LA    GRX,1(,GRX)              ADD ONE ON                      08370025
         STH   GRX,LCNT                 RESTORE DETAIL LINE COUNT       08380025
         MVC   DATE(9),CTDATE(ACT)      CURRENT DATE TO HEADING LINE    08390025
         LA    SP1,H2                   LOAD ADDRESS OF HEADING LINE 2  08400020
         MVI   H2SPC,X'02'              DOUBLE SPACE                    08420020
         BAL   SRR,SYSL(SRB)           PRINT SECONDARY HEADING          08440020
         L     SRR,REGHLD+4             GET RETURN ADDRESS              08460020
         BR    SRR                      RETURN TO USER                  08480020
*        ************************************************************** 08500020
*        UPDATE STATEMENT, PAGE AND CARD SEQUENCE NUMBERS               08520020
*        ************************************************************** 08540020
CNVRT    LH    GRZ,0(,GRX)              GET BINARY NUMBER               08560026
         N     GRZ,MASK2                ZAP TOP HALF OF WORD            08570026
         LA    GRZ,1(,GRZ)              INCREASE NUMBER AND             08580026
         STH   GRZ,0(,GRX)              SAVE IT IN BINARY               08600026
CNVRTX   CVD   GRZ,DWORD                CONVERT TO DECIMAL              08620020
         UNPK      DWORD(5),DWORD+5(3) UNPACK                           08640020
         OI        DWORD+4,X'F0'       AND GET RID OF SIGN              08660020
         MVC       SAVSEQ,DWORD+1      SAVE NUMBER WITH LEADING ZEROS   08680020
* REPLACE LEADING ZEROS OF 4 BYTE WORD AT DWORD WITH BLANKS             08700020
*   BUT FIRST MOVE RAW NUMBER (LEADING ZEROS AND ALL) TO LOCATION SEQ   08720020
         LA    GRY,DWORD                GET ADDRESS OF DWORD            08740020
SUPR     TM    0(GRY),X'0F'             IS CHAR A ZERO                  08760020
         BCR   4,SRR                    NO, EXIT                        08780020
         MVI   0(GRY),X'40'             YES, REPLACE WITH BLANK         08800020
         LA    GRY,1(GRY)               UP TO NEXT CHAR                 08820020
         B     SUPR                     LOOP FOR ALL LEADING ZEROES     08840020
*        ************************************************************** 08860020
*        PUNCH ROUTINE                                                  08880020
*        ************************************************************** 08900020
GOTXT    TM        FLAG,X'F0'          IS THIS A DS STATEMENT           08920025
         BCR       1,SRR               RETURN IF SO                     08940025
         CLI       LLTH+1,0            IS THERE ANY DATA TO OUTPUT      08960025
         BCR       8,SRR               RETURN IF NOT                    08980025
         TM        CESDIDPS(ACT),X'FF' IS THIS DSECT OR COM             09000025
         BCR       8,SRR               RETURN IF SO                     09020025
         BAL       GRX,CALLCF          SAVE THE REGS                    09040025
         LH        GRA,BYTCNT          TEST IF PRIOR DATA ON TXT CARD   09060025
         LTR       GRA,GRA                                              09080025
         BZ        NEWCARD             START NEW CARD IF NOT            09100025
         CLC       ESDIDX,CESDID(ACT)  TEST IF THIS DATA FOR SAME ESDID 09110025
         BNE       DUMPIT              PUNCH CARD AND START NEW IF NOT  09120025
         A         GRA,ADDR-1          COMPUTE LOC LAST DATA ENDS AT    09130025
         L         GRB,LOCCTR-1        GET LOC THIS DATA STARTS AT      09140025
         LA        GRA,0(,GRA)         CLEAR TOP BYTES                  09150025
         LA        GRB,0(,GRB)                                          09160025
         CR        GRA,GRB             TEST IF THIS DATA FOLLOWS DIRECT 09170025
         BE        NFRST               CONTINUE PRESENT CARD IF SO      09180025
DUMPIT   BAL       GRB,DUMP            PUNCH OUT LAST CARD              09190025
NEWCARD  MVC       ADDR,LOCCTR         INIT NEW CARD   PLACE ADDRESS    09200025
         MVC   ESDIDX,CESDID(ACT)       CHANGE TO CURRENT ESD/ID        09220020
         LA    GRX,CCRDCT(ACT)         UPDATE DACK SEQ NO.              09240020
         BAL   SRR,CNVRT                CONVERT IT TO DECIMAL           09260020
         MVC   SEQ,SAVSEQ               MOVE IN WITH LEADING ZEROES     09280020
         MVC   IDRH(4),CTITLE(ACT)      MOVE IN DECK NAME               09300020
         LA    GRX,TXTOUT-1       SAVE ADDR. OF CARD IMAGE              09320020
         ST    GRX,CTLDCP(ACT)                   IN ACT TABLE           09340020
         LA    GRA,INS                  O/P AND SET O/P PTR TO COL. 17  09360020
         B     NFRSTB                   SKIP                            09380020
NFRST    L     GRA,OUTPOI               PICK UP DYNAMIC O/P PTR.        09400020
NFRSTB   LA    GRC,OPCODE               LOAD PTR TO 1ST BYTE TO PUNCH   09420020
         LH    GRD,LLTH                 LOAD NUMBER OF BYTES TO PUNCH.  09440020
         LH    SRB,BYTCNT               LOAD DYNAMIC BYTE COUNT.        09460020
LOOPA    MVC   0(1,GRA),0(GRC)          MOVE ONE BYTE TO PUNCH BUFFER.  09480020
         LA    GRC,1(GRC)               KICK SENDING POINTER.           09500020
         LA    GRA,1(GRA)               KICK RECEIVING POINTER.         09520020
         LA    SRB,1(SRB)               KICK BYTE COUNT                 09540020
         LA    GR1,56                   FOR COMPARE                     09560020
         CR    SRB,GR1                  DOES BYTE COUNT = 56            09580020
         BNE   MORTXT                   NO, BRANCH TO LOOP CONTROL.     09600020
         STH   SRB,BYTCNT               YES, STORE BYTE COUNT IN O/P.   09620020
         BAL   GRB,DUMP                 DUMP PUNCH BUFFER.              09640020
         LA    GR1,1                    FOR COMPARE                     09660020
         CR    GRD,GR1            MORE LLTH BYTES TO MOVE?              09680020
         BE    NOMORE                  NO                               09700020
         LA    GRX,CCRDCT(ACT)         UPDATE DECK SEQ. NO.             09720020
         BAL   SRR,CNVRT                CONVERT TO DECIMAL              09740020
         MVC   SEQ,SAVSEQ               MOVE IN NUMBER                  09760020
         LA    GRX,TXTOUT-1        SAVE ADDR. OF CARD IMAGE             09780020
         ST    GRX,CTLDCP(ACT)         IN ACT TABLE                     09800020
NOMORE   LA    GR1,56                  KICK LOADING ADDRESS IN          09820020
         A     GR1,TXTOUT+4             PUNCH BUFFER BY 56.             09840020
         ST    GR1,TXTOUT+4                                             09860020
         LA    GRA,INS                  RESET O/P POINTER TO COL. 17    09880020
         SR    SRB,SRB                  SET REGISTER BYTE COUNT = 0.    09900020
MORTXT   BCT   GRD,LOOPA                LOOP UNTIL LLTH BYTES MOVED.    09920020
         STH   SRB,BYTCNT               STORE DYNAMIC BYTE COUNT        09940020
         ST    GRA,OUTPOI               STORE DYNAMIC O/P POINTER.      09960020
         B     RETNCF                   EXIT PUNCH ROUTINE.             09980020
* DUMP PUNCH BUFFER                                                     10000020
DUMP     CLI   BYTCNT+1,0               DOES BYTE COUNT = 0.            10020020
         BCR   8,GRB                    YES, RETURN TO LOCAL USER.      10040020
         ST    GRB,REGHLD              SAVE REGS                        10060020
         STM   GR1,GR2,REGHLD+4         ALL OF THEM                     10080020
         LA    SP1,TXTOUT-1             PICK UP ADDR OF CARD IMAGE AND  10100020
         L     SRB,CTXTIO(ACT)          LOAD BASE                       10120020
         BAL   SRR,SYSP(SRB)            CALL SYSPUNCH                   10140020
         L     GRB,REGHLD                                               10160020
         LM    GR1,GR2,REGHLD+4        RESTORE REGS                     10180020
         SR    GRX,GRX              SET TO ZERO WHEN                    10200020
         ST    GRX,CTLDCP(ACT)                  PUNCH BUFFER EMPTY      10220020
         MVI   INS,X'40'                  CLEAR CARD AREA               10240020
         MVC   INS+1(55),INS                  AND                       10260020
         MVI   BYTCNT+1,0               RESET DYNAMIC BYTE COUNT TO 0.  10280020
         BR    GRB                              RETURN TO LOCAL USER    10300020
         TITLE 'ASMG F8  GENERATED OUTPUT FORMATTING ROUTINE (F8PRNT)'  10320026
*                                                                     * 10340020
*TITLE- 'BLDIMG' ...  BUILD RIGHT HALF                                * 10360020
*ENTRY- BLDIMG  CALLED VIA-                                           * 10380020
*        EXTERN  BLDIMG                                               * 10400020
*        L     FRB,PRNT(ACT)            LOAD BASE                     * 10420020
*        L     GRX,=A(BLDIMG)           LOAD ENTRY                    * 10440020
*        BALR  SRR,GRX                  CALL BLDIMG                   * 10460020
*INPUT-  F8WORK(ACT)     INPUT RECORD                                 * 10480020
*OUTPUT- SOURCE          BUILT CARD IMAGE                             * 10500020
*NOTES-                                                               * 10520020
*   BLDIMG BUILDS THE RIGHT HALF OF THE OUTPUT LINE (DETAIL) FROM THE * 10540020
*   EDITED TEXT RECORD FOR RECORD TYPES 6 (LITERALS, CONDITIONAL      * 10560020
*   ASSEMBLY) AND 7 (TEXT AND MNOTE GENERATED BY MACRO EXPANSION).    * 10580020
*                                                                     * 10600020
         SPACE 2                                                        10620020
BLDIMG   BAL   GRX,CALLCF               SAVE REGISTERS                  10640020
         L     GRA,RECADDR              LOAD ADDRESS OF INPUT RECORD    10660020
         TM    F8WORK+3(ACT),X'80'     IS THIS AN ASSEMBLER OP          10680020
         BZ    BLDIMG0                 IF ZERO,NOT ASSEMBLRT OP         10700020
         CLI   F8WORK+4(ACT),MNOTEX     IS RECORD MNOTE                 10720020
         BNE   BLDIMG0                 IF NOT EQUAL BUILD IMAGE         10740020
         MVC   RLI(2),F8WORK+6(ACT)    POINT TO                         10760020
         LH    GRX,RLI                      1ST CHARACTER               10780020
         LA    GR2,F8WORK(GRX,ACT)               IN 2ND COMMENT FIELD   10800020
         LA    GR2,1(GR2)               LOOK AT NEXT CHAR               10820020
         CLI   0(GR2),X'5C'            IS THIS *                        10840020
         BE    MNOTERR                 YES                              10860020
MNOTEOP  MVI   CTEMERR(ACT),X'00'        SET MNOTE ERROR 37 FLAG        10880020
MNOTERR  MVI   FLAGA,X'00'        MAKE STMNT LOOK LIKE SOURCE           10900020
         MVI   REPSW(ACT),X'0F'            SET MNOTE                    10920020
         B     INLCPL                   PROCESS MNOTE                   10940020
BLDIMG0  MVC   FLAGA(1),F8WORK+2(ACT)   PICK UP EDITED REC FLAG         10960026
BLDIMG2  MVC   RLIX(2),RLIC             INITIALIZE 1ST 2 BYTES OF REC   10980020
         NI    FLAGA,X'34'              IF EDITED RECORD TYPE IS '111', 11000026
         TM    F8WORK+2(ACT),X'70'           MAKE GENERATED RECORD TYPE 11020020
         BO    BLDXX       '011'.  IF GENERATED REC                     11040020
         TM    F8WORK+3(ACT),X'40'           TYPE IS '110',MAKE GENERA- 11060020
         BO    BLDXX                        TED TYPE '010' UNLESS ED    11080020
         CLI   F8WORK+4(ACT),KLITR            REC IS LITR--IF SO,       11100020
         BNE   BLDXX                          MAKE GENERATED REC TYPE   11120020
         NI    FLAGA,X'DF'                     '000'                    11140026
*                                                                       11160027
*        START WITH NAME FIELD AND WORK FORWARD                         11170027
*                                                                       11180027
BLDXX    DS    0H                                                       11190027
         BAL   SRR,CLEARA               CLEAR CARD IMAGE                11200027
         SR    GRB,GRB                  ZERO LENGTH REGISTER            11210027
         ST    GRB,CUROFF               ZERO CURRENT OFFSET POINTER     11220027
         LA    GRD,CARD+B               INITIAL CARD LOCATION           11230027
         ST    GRD,CURPTR               SET THIS AS INITIAL CARD POSN   11240027
         IC    GRB,F8WORK+8(,ACT)       PICK UP LENGTH OF NAME FIELD    11250027
         LA    GRC,F8WORK+9(,ACT)       'FROM' ADDRESS OF NAME FIELD    11260027
         LA    GRD,B                    'TO' OFFSET FOR NAME            11270027
         BAL   SRR,SETSEG               ENTER LABEL SEGMENT             11280027
         LA    GRD,9                    'TO' OFFSET FOR OPCODE          11290027
         BAL   SRR,SETSEG               ENTER OPCODE SEGMENT            11300027
         TM    F8WORK+3(ACT),X'80'      AN ASSEMBLER OP .Q        V7A04 11301028
         BZ    BLDNOTIT                 BRANCH IF NOT             V7A04 11302028
         CLI   F8WORK+4(ACT),TITLEX     A GENERATED TITLE .Q      V7A04 11303028
         BE    BLDTITLE                 YES, NO CONTINUATIONS     V7A04 11304028
BLDNOTIT DS    0H                                                 V7A04 11305028
         LA    GRD,C                    'TO' ADDRESS FOR OPERAND        11310027
         CLI   0(GRC),IBLANK            BLANK OPERAND .Q          V7A09 11311028
         BNE   BLDXX01                  BRANCH IF NOT             V7A09 11312028
         C     GRB,F1                   AND THAT IS ALL .Q        V7A09 11313028
         BNE   BLDXX01                  BRANCH IF NOT             V7A09 11314028
         LA    GRC,1(,GRC)              BUMP START ADDRESS        V7A09 11315028
         SR    GRB,GRB                  ZERO STRING LENGTH        V7A09 11316028
BLDXX01  DS    0H                                                 V7A09 11317028
         BAL   SRR,SETSEG               ENTER OPERAND SEGMENT           11320027
         LTR   GRB,GRB                  ANY COMMENTS .Q                 11330027
         BZ    BLDPUT                   BRANCH IF NOT                   11340027
         BCTR  GRB,0                    DECREMENT COMMENT LENGTH        11350027
         SR    GRD,GRD                  ZERO REGISTER                   11360027
         IC    GRD,0(,GRC)              COMMENT OFFSET                  11370027
         LA    GRC,1(,GRC)              START OF COMMENT                11380027
BLDPUT   DS    0H                                                       11390027
         BAL   SRR,SETSEG               ENTER COMMENT SEGMENT           11400027
BLDTITLE DS    0H                                                 V7A04 11405028
         L     GRA,RECADDR              INPUT RECORD ADDRESS            11410027
         BAL   SRR,OUTSV                OUTPUT THE IMAGE                11420027
         B     RETNCF                   EXIT AFTER LAST LINE            11430027
         SPACE     2                                                    11440027
*                                                                       11450027
*        ENTER SEGMENT OF PRINT LINE CARD IMAGE                         11460027
*                                                                       11470027
*  INPUT           GRB -- NUMBER OF BYTES TO BE ADDED                   11480027
*                  GRC -- 'FROM' ADDRESS OF STRING                      11490027
*                  GRD -- DESIRED 'TO' OFFSET IN CARD                   11500027
*                  SRR -- RETURN REGISTER                               11510027
*                                                                       11520027
SETSEG   DS    0H                                                       11530027
         ST    SRR,SEGRTN               SAVE CALLER'S RETURN ADDRESS    11540027
         STM   GRB,GRC,SEGALEN          ACTUAL SEGMENT LENGTH/ADDR      11550027
         LTR   GRB,GRB                  IS SEGMENT NULL .Q              11560027
         BNP   SETDONE                  EXIT IF SO                      11570027
SETDEC   DS    0H                                                       11580027
         S     GRB,F1                   LENGTH-1 OF STRING SEGMENT      11590027
         BZ    SETPOSTS                 BRANCH IF NOW ZERO              11600027
         LA    GR1,0(GRB,GRC)           LAST CHAR OF STRING             11610027
         CLI   0(GR1),IBLANK            IS LAST CHAR BLANK .Q           11620027
         BE    SETDEC                   AGAIN IF YES                    11630027
SETPOSTS DS    0H                                                       11640027
         C     GRD,CUROFF               IS DESIRED OFFSET OK .Q         11650027
         BP    SETPOSOK                 BRANCH IF YES                   11660027
         LTR   GRD,GRD                  IS THIS THE LABEL FIELD .Q      11670027
         BZ    SETPOSOK                 BRANCH IF YES                   11680027
         L     GRD,CUROFF               BUMP TO 1ST AVAILABLE SLOT      11690027
         A     GRD,F1                   LEAVE ONE BLANK                 11700027
SETPOSOK DS    0H                                                       11710027
         LR    GR2,GRD                  DESIRED OFFSET TO START         11720027
         S     GR2,CUROFF               NUMBER OF BLANKS                11730027
SETBLKOK DS    0H                                                       11740027
         LR    GR1,GR2                  NUMBER OF BLANKS                11750027
         A     GR1,CURPTR               POTENTIAL END OF LINE           11760027
         LA    GR0,CARD+E+1             ACTUAL END OF LINE              11770027
         SR    GR1,GR0                  WILL BLANKS FIT .Q              11780027
         BNP   SETBLKFN                 BRANCH IF YES                   11790027
         LR    GR2,GR1                  LENGTH REMAINING                11800027
         MVI   CARD+E+1,IX              SET CONTINUATION                11810027
         L     GRA,RECADDR              LOAD ADDRESS OF INPUT RECORD    11820027
         BAL   SRR,OUTSV                PUT OUT PARTIAL LINE            11830027
         BAL   SRR,CLEARA               CLEAR CARD IMAGE                11840027
         OI    FLAGA,X'02'              SET CONTINUATION ON             11850027
         LA    GR0,CARD+C               CONTINUATION COLUMN             11860027
         ST    GR0,CURPTR               SET IT AS CURRENT POINTER       11870027
         B     SETBLKOK                 GO PROCESS MORE BLANKS          11880027
SETBLKFN DS    0H                                                       11890027
         LR    GR1,GR2                  CURRENT CARD OFFSET             11900027
         A     GR1,CURPTR               CURRENT CARD POSN               11910027
         ST    GR1,CURPTR               SET CURRENT CARD POSN           11920027
         LA    GRD,1(GRB,GRD)           UPDATE OFFSET AFTER SEGMENT     11930027
         ST    GRD,CUROFF               UPDATE CURRENT OFFSET           11940027
         L     GRD,CURPTR               GET CURRENT CARD POINTER        11950027
SETCOMOK DS    0H                                                       11960027
         LA    GR1,0(GRD,GRB)           END OF CARD PTR                 11970027
         LA    GR0,CARD+E               ACTUAL END-1 OF CARD            11980027
         SR    GR1,GR0                  WILL IT FIT .Q                  11990027
         BNP   SETFINOK                 BRANCH IF YES                   12000027
         SR    GRB,GR1                  DECREMENT BY EXCESS             12010027
         BM    SETCOMZR                 THE BOUNDARY CASE               12020027
         EX    GRB,SEGMVC               MOVE IN SEGMENT                 12030027
         LA    GRC,1(GRB,GRC)           UPDATE INPUT POINTER            12040027
SETCOMZR DS    0H                                                       12050027
         LR    GRB,GR1                  SET LENGTH REMAINING            12060027
         BCTR  GRB,0                    SET LENGTH-1                    12070027
         MVI   CARD+E+1,IX              SET CONTINUATION                12080027
         L     GRA,RECADDR              LOAD ADDRESS OF INPUT RECORD    12090027
         BAL   SRR,OUTSV                PUT OUT PARTIAL LINE            12100027
         BAL   SRR,CLEARA               CLEAR CARD IMAGE                12110027
         OI    FLAGA,X'02'              SET CONTINUATION ON             12120027
         LA    GRD,CARD+C               CONTINUATION COLUMN             12130027
         ST    GRD,CURPTR               SET IT AS CURRENT POINTER       12140027
         B     SETCOMOK                 GO PROCESS NEXT PART            12150027
SETFINOK DS    0H                                                       12160027
         EX    GRB,SEGMVC               MOVE IN REMAINING SEGMENT       12170027
         LA    GRD,1(GRB,GRD)           NEXT POSSIBLE 'TO' ADDRESS      12180027
         ST    GRD,CURPTR               REMEMBER THAT                   12190027
SETDONE  DS    0H                                                       12200027
         L     GRC,SEGALEN              CURRENT SEGMENT LENGTH          12210027
         A     GRC,SEGALEN+4            PLUS STARTING ADDRESS           12220027
         IC    GRB,0(,GRC)              LENGTH OF NEXT FIELD            12230027
         LA    GRC,1(,GRC)              'FROM' ADDR OF NEXT FIELD       12240027
         L     SRR,SEGRTN               RESTORE RETURN ADDRESS          12250027
         BR    SRR                      AND RETURN                      12260027
*                                                                       12270027
*        CLEAR 80 BYTE AREA                                             12280027
*                                                                       12290027
CLEARA   DS    0H                                                       12300027
         MVI   CARD,IBLANK              PUT BLANK IN COLUMN ONE         12310027
         MVC   CARD+1(79),CARD          AND PROPAGATE DOWN CARD         12320027
         BR    SRR                      AND RETURN                      12330027
*                                                                       12340027
*        OUTPUT RIGHT HALF IN PRINT BUFFER                              12350027
*                                                                       12360027
OUTSV    DS    0H                                                       12370027
         BAL   GRX,CALLCF               SAVE REGISTERS                  12380027
         BAL   SRR,INLCPL               GO TO LOAD RIGHT HALF           12390027
*./      DELETE    SEQ1=12400020,SEQ2=13340020                          13340027
         TITLE 'F8PRINT COMMENTS PROCESSOR V -II'                       13360020
*                                                                     * 13380020
*TITLE 'COMMENT' ...  MOVE IN RIGHT HALF                              * 13400020
*ENTRY- COMMENT  CALLED VIA-                                          * 13420020
*        L     FRB,PRNT(ACT)            LOAD BASE                     * 13440020
*        L     GRX,CTCOMT(ACT)          LOAD ENTRY                    * 13460020
*        BALR  SRR,GRX                  CALL COMMENT                  * 13480020
*INPUT-  F8WORK(ACT)     INPUT IMAGE                                  * 13500020
*OUTPUT- SOURCE          PART OF PRINT IMAGE                          * 13520020
*                                                                     * 13540020
         SPACE 2                                                        13560020
COMMENT  BAL   GRX,CALLCF               SAVE REGISTERS                  13580020
         LA    SP1,F8WORK(ACT)          ADDRESS OF INPUT AREA           13600020
         L     GRA,RECADDR              LOAD ADDRESS OF INPUT RECORD    13620020
*./      DELETE    SEQ1=13640020,SEQ2=13680020                          13680023
         MVC   RLI,0(SP1)               RECORD LENGTH INDICATOR         13700020
         LH    GRX,RLI                  PUT IT IN A REGISTER FOR MOVE   13720020
         TM    2(SP1),X'30'             TEST FOR TYPE 011               13730023
         BO    OUTPUT2                  BRANCH IF YES                   13740023
OUTPUT1  EX    GRX,MOVOUT               MOVE RECORD FOR OUTPUT          13750023
         BAL   SRR,INLCPL              GO TO PRINT ROUTINE              13760020
         B     RETNCF                   RETURN AND RESTORE REGISTERS    13780020
OUTPUT2  CH    GRX,H74                  IS CONTINUATION NEEDED          13780723
         BNH   OUTPUT1                  IF NO GO BACK                   13781423
         LA    GRX,E+5                  LENGTH OF RECORD                13782123
         EX    GRX,MOVOUT               MOVE RECORD                     13782823
         STH   GRX,0(GRA)               STORE LENGTH IN MOVED REC       13783523
         MVI   74(GRA),IX               MOVE IN CONTINUATION BYTE       13784223
         BAL   SRR,OUTPUT3              TO PRINT RTNE VIA OUTPUT3       13784923
         LA    SP1,F8WORK(ACT)          ADDRESS OF INPUTAREA            13785623
         OI    2(SP1),X'02'             SET CONTINUATION BIT            13786323
         MVI   3(SP1),IBLANK            BLANK OUT COLUMN                13787023
         MVC   4(14,SP1),3(SP1)         1 TO 15                         13787723
         LH    GRX,RLI                  LOAD RECORD LENGTH              13788423
         SH    GRX,H74                  CALCULATE LENGTH OF PART        13789123
         EX    GRX,MOV                  TO OVERLAY OLD PART             13789823
         LH    GRX,RLI                  LOAD RECORD LENGTH              13790523
         SH    GRX,H56                  CALCULATE NEW RECORD LNGTH      13791223
         STH   GRX,RLI                  STORE IN RLI                    13791923
         STH   GRX,0(SP1)               AND IN INPUT AREA               13792623
         B     OUTPUT2                                                  13793323
OUTPUT3  BAL   GRX,CALLCF               SAVE REGISTERS                  13794023
         BAL   SRR,INLCPL               GO TO PRINT ROUTINE             13794723
         B     RETNCF                   RETURN AND RESTORE REGS         13795423
H74      DC    H'74'                                                    13796123
H56      DC    H'56'                                                    13796823
MOV      MVC   18(*-*,SP1),74(SP1)      EXECUTED                        13797527
*./      DELETE    SEQ1=13800020,SEQ2=13800020                          13800026
MOVOUT   MVC   0(*-*,GRA),0(SP1)        EXECUTED MOVE RECORD            13820026
*                                                                       13840020
***                                                                     13860020
         ENTRY BLDIMG                   BUILD IMAGE ENTRY               13880026
         ENTRY COMMENT                  PRINT COMMENT ENTRY             13900020
*./      DELETE    SEQ1=13920020,SEQ2=13920020                          13920023
         TITLE 'PUSH DOWN, POP UP ROUTINE -- SAVES GRA, GRB, ... SRR'   13940020
         USING LIST,GRY                 FOR PUSH-DOWN POP-UP LIST       13960020
CALLCF   L     GRY,PUSHDN               GET PRIOR LEVEL POINTER         13980020
         LA    GRY,24(GRY)              OBTAIN POINTER TO NEW LEVEL     14000020
         ST    GRY,PUSHDN               SAVE POINTER TO LATEST LEVEL    14020020
         STM   GRA,SRR,LIST             SAVE GRA, GRB, GRC, GRD, SRB    14040020
         BR    GRX                        AND SRR AND RETURN TO CALLER  14060020
*                                                                       14080020
RETNCF   LM    GRY,GR1,PUSHDN           PICK UP CURRENT LEVEL POINTER   14100020
         BXLE  GRY,GR0,*+4                POP UP TO PRIOR LEVEL         14120020
         ST    GRY,PUSHDN                 PUSHDOWNS                     14140020
         LM    GRA,SRR,LIST+24          RESTORE REGISTERS SAVED         14160020
         BR    SRR                      EXIT                            14180020
         DROP  GRY                      NO LONGER USE LIST              14200020
*                                                                       14220020
PUSHDN   DC    A(LIST-24)               POSITION IN LIST                14240020
POPUP    DC    F'-24'                   POP UP COUNTER                  14260026
LIST     DC    30F'0'                   5 LEVEL PUSH DOWN STORAGE       14280020
*                                                                       14300020
         TITLE 'F8PRINT CONSTANTS FOR V - II'                           14320020
***                                                                     14340020
***                                                                     14360020
* FULL WORD DC'S, DS'S AND ADCON'S, FORCED FULL WORD ALIGNMENTS, ETC    14380020
***                                                                     14400020
         DS    0F                       FULL WORD ALIGN                 14420020
RLIC     DC    FL2'83'                  LOGICAL RECORD LENGTH           14440020
RECADDR  DC    A(RECORD)                ADDRESS OF INPUT RECORD         14460020
CURPTR   DC    A(0)                     CURRENT CARD POINTER            14470027
CUROFF   DC    A(0)                     CURRENT CARD OFFSET             14480027
F1       DC    F'1'                     CONSTANT ONE                    14490027
HONE     EQU   F1+2                     HALFWORD CONSTANT ONE     V7A10 14495028
SEGRTN   DC    A(0)                     RETURN ADDRESS SAVE AREA        14500027
SEGALEN  DC    2A(0)                    ACTUAL SEGMENT LENGTH/ADDR      14510027
SEGMVC   MVC   0(*-*,GRD),0(GRC)        EXECUTED MOVE SEGMENT           14520027
SVMNTE   DS    2F                       BYTES FOR NEXT LINE             14540026
SRRGRY   DS    2F                      TWO REGISTERS SAVED              14560020
*./      DELETE    SEQ1=14580020,SEQ2=14580020                          14580027
OUTPOI   DS    F                        DYNAMIC O/P PTR                 14600020
*./      DELETE    SEQ1=14620020,SEQ2=14620020                          14620027
REGHLD   DS    4F                       WORK REG HOLD AREA              14640020
FFOUR    DC    F'4'                     FULLWORD CONSTANT FOUR          14650026
HZERO    EQU   FFOUR                    HALFWORD CONSTANT ZERO          14655026
***                                                                     14660020
* HALF WORD CONSTANTS AND DS'S                                          14680020
***                                                                     14700020
RLI      DS    1H                       POINTER TO SECOND OPERAND       14720020
RLIF     DC    H'0'                     RECORD LENGTH INDICATOR         14740020
LLTH     DC    H'0'                     LEFT HAND SIDE BYTE COUNT       14760020
LCNT     DC    H'0'                     LINE COUNT                      14780020
BCNT     DC    H'0'                     PUNCH AREA BYTE COUNT           14800020
BLKCNT   DC    H'0'                     BLANK LINE COUNT          V7A10 14810028
BLKBLK   DC    H'0'                     NUM SPACES IN SPACE STMT  V7A10 14820028
H32766   DC    H'32766'                 LARGEST +VE HALF WORD LESS ONE  14830025
***                                                                     14840020
* HEX CONSTANTS                                                         14860020
***                                                                     14880020
FRST     DC    X'00'                    FIRST PASS SWITCH               14900020
*./      DELETE    SEQ1=14920020,SEQ2=14940020                    V7A10 14940028
         DC    X'0F'                    MASK WITH ZERO ZONE BEFORE WORK 14960027
WORK     DC    XL32'00'                 WORK AREA FOR UNPACK            14980027
MASK2    DC    0F'0',XL4'FFFF'          MASK FOR LOAD LOGICAL HALFWORD  14990027
PRNTSW   DC    X'00'                    LOCAL PRINT SWITCH              15000020
PUNSWH   DC    X'FF'                    LOCAL PUNCH SWITCH              15020020
LSTRCD   DC    X'40'                    LAST RECORD IN INDICATOR        15040020
LOCLSTRD DC    X'00'                    LAST RECORD TYPE READ           15060027
ALGSWH   DC    X'FF'                    ALIGNMENT DATA PROCESSED SWITCH 15080020
RECTYP   DC    X'40'                    SUBSTITUTED TYPE FOR X'57' REC  15100020
CONSR    DC    X'00144700'             CONSTANT PART OF RECORD          15120020
***                                                                     15140020
* CHARACTER CONSTANTS                                                   15160020
***                                                                     15180020
SAVSEQ   DC    C'0000'             SAVE AREA FOR DECK SEQ. NO.          15200020
ERRMSG   DC    C'*** ERROR ***'                                         15220020
MNOMSG   DC    C'*** MNOTE ***'                                         15230025
*                                                                       15240020
DWORD    DS    D                        RESULTS OF CNVRT                15260020
*        ************************************************************** 15280020
* NORMAL CARD FORMAT PARAMETERS                                         15300020
B        EQU   0                        BEGIN -1                        15320020
E        EQU   70                       END -1                          15340020
C        EQU   15                       CONTINUE - 1                    15360020
***                                                                     15380020
SYSL     EQU   SYSLST                   SYSLIST                         15400020
SYSP     EQU   SYSOUT                   SYSPUNCH                        15420020
*./      DELETE    SEQ1=15440020,SEQ2=15440020                          15440023
K        EQU   SVMNTE                   BYTES LEFT                      15460020
*                                                                       15480026
*                                                                       15500020
XNOTBL   EQU   X'01'                    LOGICAL INT X AND NOT INT BLNK  15520020
BLNK     EQU   X'32'                    INTERNAL BLANK                  15540020
KBLANK   EQU   BLNK                     INTERNAL BLANK                  15560020
KLITR    EQU   X'25'                    LITERAL RECORD                  15580020
*                                                                       15600026
XBLANK   EQU   X'40'                    EXTERNAL BLANK                  15620020
*                                                                       15626027
USINGX   EQU   X'23'                    USING RECORD                    15628027
ORGX     EQU   X'20'                    ORG RECORD                      15630025
TITLEX   EQU   X'18'                    TITLE RECORD                    15640020
REPROX   EQU   X'17'                    REPRODUCE RECORD                15660020
PUNCHX   EQU   X'16'                    PUNCH RECORD                    15680020
EQUX     EQU   X'1F'                    EQU RECORD                      15690027
MNOTEX   EQU   X'0E'                    MNOTE RECORD                    15700020
*                                                                       15710025
MKY      EQU   X'00'                    PRINT ON SWITCH MASK            15715025
MKX      EQU   X'FF'                    PRINT OFF SWITCH MASK           15720025
         SPACE 3                                                        15730025
* HEADING DATA                                                          15740020
H1       DS    0CL133                   HEADING CODE                    15760026
H1SPC    DC    X'FF'                    PAGE EJECT                      15780027
DECKNM   DC    C'STUVWXYZ'              PROGRAM IDENTIFICATION          15800027
         DC    C' '                     ONE BLANK                       15820027
HEADNG   DS    0CL100                   PROGRAMMER HDG FROM TITLE STMNT 15840020
         DC    C'                                                  '    15860020
         DC    C'                                                  '    15880020
         DC    C'  PAGE '               2 BLANKS, 'PAGE', 1 BLANK       15900027
PCNT     DC    C'WXYZ'                  PAGE NUMBER                     15920020
         DC    12C' '                                                   15930026
* SECONDARY HEADER LINE                                                 15940026
H2       DS    0CL133                   HEADING TWO                     15960026
H2SPC    DC    X'02'                                                    15980020
         DC    C'  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STAT' 16000020
         DC    C'EMENT                                            '     16020020
         DC        9C' '                                                16040020
DATE     DC        CL9'DD MMM YY'                                       16060026
         DC    12C' '                                                   16070026
* WORKAREA FOR RUN-OF-MILL DETAIL LINE                                  16080026
DETAIL   DS    0CL133                   DETAIL LINE                     16100026
DETSPC   DC    X'00'                    SPACES                          16120020
LOC      DS    0CL40                    LEFT HALF                       16140020
         DC        C'                                  ' 34 BLANKS      16160020
DSTMNT   DC        C'07080'            DETAIL LINE STATEMENT NUMBER     16180020
         DC    X'40'                                                    16200020
SOURCE   DS    CL80                     RIGHT HALF                      16220020
         DC    12C' '                                                   16230026
* DUMMY LINE -- FOR ALIGNMENT, ERROR LINE, PUNCH, REPRO                 16240026
         CNOP      6,8                 PUT DUMOUT ON D BOUNDRY          16260020
         DS        C                                                    16280020
DUMOUT   DC    X'00'                                                    16300020
         DC    C'                        '                              16320020
         DC    C'                        '                              16340020
         DC    C'                        '                              16360020
         DC    C'                        '                              16380020
         DC    C'                        '                              16400020
         DC    CL12' '                                                  16410026
         DC    X'00'                                                    16420020
***                                                                     16440020
* PUNCH BUFFER                                                          16460020
***                                                                     16480020
         DS    0D                      ON D BOUNDRY                     16500020
TXTOUT   DS    0CL80                                                    16520020
         DC    X'02'                    CARD COL 1                      16540020
         DC    C'TXT '                  COLS 2 - 5                      16560020
ADDR     DC    C'000'                   COLS 6 - 8                      16580020
         DC    C'  '                    COLS 9, 10                      16600020
BYTCNT   DC    X'0000'                  COLS 11, 12                     16620020
         DC    X'404000'                COLS 13 - 15                    16640020
ESDIDX   DC    X'01'                    COL 16                          16660020
INS      DS    0CL56                    COLS 17 - 72                    16680020
         DC    C'        '                                              16700020
         DC    C'        '                                              16720020
         DC    C'        '                                              16740020
         DC    C'        '                                              16760020
         DC    C'        '                                              16780020
         DC    C'        '                                              16800020
         DC    C'        '                                              16820020
IDRH     DC    C'ABCD'                  COLS 73 - 76                    16840020
SEQ      DC    C'0000'                  COLS 77 - 80                    16860020
         EJECT                                                          16880020
* RECORDS OF VARIOUS SORTS                                              16900020
*                                                                       16920020
         DS    0F                                                       16940020
         DC    X'00'                                                    16960020
LFTHLF   DS    0CL20                    LEFT HALF IMAGE                 16980020
RLIB     DC    FL2'20'                  LENGTH                          17000020
FLAGB    DC    X'57'                    FLAG FOR LEFT HALF WORKAREA     17020020
XESDID   DC    X'01'                    CURRENT ESDID                   17040020
LOCCTR   DS    CL3                      LOCATION COUNTER                17060020
OPCODE   DS    CL1                      OP CODE                         17080020
RRR1     DS    CL1                      REGISTER SPECIFICATION          17100020
RXB2D2   DS    CL2                      2ND INSTRUCTION BYTE            17120020
SSB2D2   DS    CL2                      3RD INSTRUCTION BYTE            17140020
EA1      DS    CL3                      EFFECTIVE ADDRESS 1             17160020
EA2      DS    CL3                      EFFECTIVE ADDRESS 2             17180020
FLAG     DS    CL1                      BYTE COUNT                      17200020
*                                                                       17220020
         SPACE 3                                                        17240025
*                                                                       17260025
* F8PRINT INPUT AREAS                                                   17280025
RECORD   CSECT                                                          17300020
         DS    0F                       WORD ALIGNED                    17320020
INPUT    DS    CL400                    400 BYTES FOR RECORD            17340020
* FORMAT OF SOURCE RECORD                                               17360020
RLIA     EQU   INPUT                    LENGTH                          17380020
FLAGA    EQU   INPUT+2                  FLAG                            17400020
CARD     EQU   INPUT+3                  CARD IMAGE                      17420020
* FORMAT OF ERROR RECORD                                                17440020
ERREC    EQU   INPUT                    INTERNAL NAME                   17460020
ERLI     EQU   INPUT                    LENGTH VARIES FROM 8 - 38 BYTES 17480026
EFLAG    EQU   INPUT+2                  FLAG FOR ERROR RECORDS          17500020
NERR     EQU   INPUT+3                 NUMBER OF ERRORAS                17520020
ESTMNT   EQU   INPUT+4                  STATEMENT NUMBER                17540020
ERR1     EQU   INPUT+6                 1-16 ERR CODES AND PTRS          17560020
RGTHLF   EQU   INPUT                    RIGHT HALF                      17580020
RLIX     EQU   RLIA                     LENGTH                          17600020
         SPACE 2                                                        17620026
         END                                                            17640020
./ ADD NAME=ASMGF8S
F8S      TITLE     'ASMG F8  SYMBOL TABLE GET'                          00020021
         ISEQ  73,78                                                    00040021
ASMGF8S  CSECT                                                          00060020
 SPACE                                                                  00080020
         PRINT        NOGEN                                             00100020
         FDIMEN                                                         00120020
*                                                                     * 00140020
*TITLE 'ASMGF8S ' ... SYMBOL TABLE GET                                * 00160020
*FUNCTION/OPERATION-                                                  * 00180020
*  ASMGF8S LOOKS UP THE SYMBOL IN THE SYMBOL TABLE AND RETURNS        * 00200020
*   WITH EITHER THE VALUE OR A NOT FOUND INDICATOR                    * 00220020
*ENTRY POINT- STGETR                                                  * 00240020
*   CALLING SEQUENCE                                                  * 00260020
*        LA    SP1,SYMBOL               POINT TO SYMBOL               * 00280020
*        L     SRB,CSTGET(ACT)          GET BASE/ENTRY                * 00300020
*        BALR  SRR,SRB                  CALL ASMGF8S                  * 00320020
*INPUT-  SP1   POINTS TO SYMBOL                                       * 00340020
*        SP2   CONTAINS LENGTH OF SYMBOL OR ZERO                      * 00360020
*OUTPUT- SP1   POINTS TO ATTRIBUTES IF FOUND                          * 00380020
*              IS ZERO IF NOT FOUND                                   * 00400020
*        SP2   CONTAINS LENGTH OF SYMBOL-1                            * 00420020
*EXTERNAL ROUTINES- NONE                                              * 00440020
*EXITS- NORMAL                                                        * 00460020
*   RETURNS VIA                                                       * 00480020
*        BR    SRR                      EXIT                          * 00500020
*     - ERROR -- NONE                                                 * 00520020
*NOTES- SEE NOTES FOR ASMGF7S                                         * 00540020
         EJECT                                                          00560020
         ENTRY STGETR                                                   00580020
 SPACE                                                                  00600020
FR0      EQU       0                   FLOATING REGISTER 0              00620020
*        *     SYMBOLIC DISPLACEMENTS                                   00640020
*                                                                       00660020
UNDEF    EQU   32                      UNDEFINED SYMBOL FLAG            00680020
LASH     EQU   31                      LTH OF LITERAL HASH (28) + OPSYN 00700023
ISYM     EQU   0                                   Y+0                  00720020
ADJ      EQU   7                                   Y+7                  00740020
ICHAIN   EQU   14                                  Y+14                 00760020
 EJECT                                                                  00780020
         USING *,SRB                                                    00800020
STGETR   LTR   SP2,SP2                  IF PARAMETER SP2 WAS GIVEN,     00820020
         BP    KNOWN LENGTH SYMBOL.     LENGTH IS KNOWN, BRANCH         00840020
         MVI       SETLEN+3,0          IN CASE NOT SYMBOL               00860020
         CLI   0(SP1),IALPHA            IS FIRST CHAR PART OF SYMBOL    00880020
         BH    GETOUT                   NO, RETURN NOT FOUND            00900020
 SPACE                                                                  00920020
         LR    SP2,SP1                  SP2= BEGINNING OF NAME          00940020
SCAN     LA    SP2,1(SP2)               SET AT NEXT CHAR                00960020
         CLI   0(SP2),IALPHA            IS THIS CHAR PART OF SYMBOL     00980020
         BNH   SCAN                     YES, LOOP                       01000020
 SPACE                                                                  01020020
         SR    SP2,SP1                  =LENGTH OF SYMBOL               01040020
KNOWN    C         SP2,=F'8'           TEST FOR SYMBOL TOO BIG          01060020
         BCTR  SP2,0                    REDUCE BY ONE FOR COMPARE       01080020
         STC       SP2,SETLEN+3        SET LENGTH ON EXIT               01100020
         BH      GETOUT                 SET 'NOT FOUND' AND EXIT.       01120020
 SPACE                                                                  01140020
         STC       SP2,MOVSYM+1        PUT LENGTH-1 IN MOVE INST        01160020
         STC       SP2,TRSYM+1           AND IN TRANSLATE INST          01180020
         SDR       FR0,FR0             CLEAR WORK BENCH                 01200020
         STD       FR0,BENCH                                            01220020
MOVSYM   MVC       BENCH(*-*),0(SP1)   MOVE SYMBOL TO BENCH             01240020
TRSYM    TR        BENCH(*-*),CODE2    TRANSLATE TO 2ND INTERNAL CODE   01260020
         L         SP1,BENCH+4         PACK THE SYMBOL TO 6 BYTES       01280020
         SRDL      SP1,6                                                01300020
         SRL       SP1,2                                                01320020
         SRDL      SP1,6                                                01340020
         SRL       SP1,2                                                01360020
         SRDL      SP1,6                                                01380020
         SRL       SP1,2                                                01400020
         SRDL      SP1,6                                                01420020
         ST        SP2,BENCH+4                                          01440020
         L         SP1,BENCH                                            01460020
         SRDL      SP1,6                                                01480020
         SRL       SP1,2                                                01500020
         SRDL      SP1,6                                                01520020
         SRL       SP1,2                                                01540020
         SRDL      SP1,6                                                01560020
         SRL       SP1,2                                                01580020
         SRDL      SP1,6+8                                              01600020
         ST        SP2,BENCH                                            01620020
         X         SP2,BENCH+4          FOLD SYMBOL INTO FULLWORD.      01640020
         SR        SP1,SP1              CLEAR 4 BYTES OF DIVIDEND.      01660020
         D       SP1,CPRIME(0,ACT)      PRIME IS HASH DIMENSION.        01680020
         LA     SP2,0(SP1,SP1)          MULTIPLY BY                     01700020
         AR     SP2,SP1                 THREE BYTES/POINTER.            01720020
         L      SP1,CTSYMP(0,ACT)       FIND SYMBOL TABLE BASE          01740020
         LA     SP2,LASH-ICHAIN(SP2,SP1) LASH = LENGTH OF LITERAL HASH. 01760020
 SPACE                                                                  01780020
FOLLOW   MVC   F0XXX+1(3),ICHAIN(SP2)   POINTER TO BOUNDARY             01800020
         L     SP2,F0XXX                POINTER TO REGISTER             01820020
         LTR   SP2,SP2                                                  01840020
         BZ        GETOUT                                               01860020
         CLC       BENCH+1(6),ISYM(SP2) COMPARE SYMBOLS.                01880020
         BNE      FOLLOW                BRANCH NOT CORRECT SYMBOL       01900020
 SPACE                                                                  01920020
         TM    ADJ(SP2),UNDEF          TEST FOR UNDEFINED ENTRY         01940020
         BZ        FOUND               NO  THIS IS OK                   01960020
 SPACE 2                                                                01980020
GETOUT   L         SP2,=F'-6'          SET PARAM 'NOT FOUND'.           02000020
FOUND    LA    SP1,6(0,SP2)             SET SP1 TO POINT TO ATTRIBUTE   02020020
SETLEN   LA        SP2,*-*             SET LENGTH OF SYMBOL IN SP2      02040020
         BCR   15,SRR                  EXIT.                            02060020
 SPACE 4                                                                02080020
BENCH    DS        D                    WORK BENCH                      02100020
F0XXX    DC        F'0'                                                 02120020
 SPACE                                                                  02140020
CODE2 DC X'30313233343536373839101112131415161718191A1B1C1D1E1F'        02160020
      DC X'202122232425262728290A0B0C000000000000000000000000'          02180020
 SPACE                                                                  02200020
         LTORG                                                          02220020
 SPACE                                                                  02240020
         END   STGETR                                                   02260020
./ ADD NAME=ASMGF8V
F8V      TITLE     'ASMG F8  EVALUATION ROUTINE'                        00020021
         ISEQ      73,78                                                00040021
ASMGF8V  START                                                          00060020
EEVAL    EQU   ASMGF8V                                                  00080020
         PRINT        NOGEN                                             00100020
         FDIMEN                                                         00120020
         PRINT      GEN                                                 00140020
*                                                                     * 00160020
*TITLE 'ASMGF8V ' ...  EXPRESSION EVALUATION                          * 00180020
*FUNCTION/OPERATION-                                                  * 00200020
*  ASMGF8V EVALUATES EXPRESSIONS AND CONVERTS SELF-DEFINED TERMS TO   * 00220020
*   THEIR PROPER VALUES. THE FOLLOWING ERRORS ARE DETECTED AND LOGGED-* 00240020
*              RELOCATABILITY      SELF DEFINING VALUE TOO LARGE      * 00260020
*              ARITHMETIC OVERFLOW TWO CONSECUTIVE TERMS              * 00280020
*              UNDEFINED SYMBOL    TWO CONSECUTIVE OPERATORS          * 00300020
*              ILLEGAL CHARACTER   TWO OPERATORS ILLEGALLY COMBINED   * 00320020
*              TOO MANY TERMS      TOO MANY LEVELS OF PARENTHESES     * 00340020
*              INVALID SYMBOL      PREMATURE END OF EXPRESSION        * 00360020
*              EXPRESSION VALUE TOO LARGE                             * 00380020
*ENTRY POINT-  ASMGF8V                                                * 00400020
*   CALLING SEQUENCE                                                  * 00420020
*        L     SRB,CEEVAL(ACT)    PICK UP ASMGF8V ADDRESS FROM ACT    * 00440020
*        BALR  SRR,SRB                                                * 00460020
*        CEEVAL(ACT) IS LOADED BY ASMGF8I WITH ADDRESS OF ASMGF8V     * 00480020
*INPUT-                                                               * 00500020
*   REGISTERS-                                                        * 00520020
*        SP1 CONTAINS ADDRESS OF FIRST CHARACTER OF THE EXPRESSION TO * 00540020
*        BE EVALUATED                                                 * 00560020
*   PARAMETERS-                                                       * 00580020
*        CTSDVI(ACT)- HIGH-ORDER BIT (BIT 0)                          * 00600020
*            0=NO EFFECT UPON ASMGF8V                                 * 00620022
*            1=IF THE FIRST (OR ONLY) TERM OF THE EXPRESSION IS A     * 00640020
*              SELF-DEFINING TERM, THEN-                              * 00660020
*                  THE BIT IS RESET TO 0                              * 00680020
*                  THE VALUE OF THE S.D.T. IS PLACED IN REG. SP1      * 00700020
*                  CONDITION CODE IS SET TO 0                         * 00720020
*                  ASMGF8V EXITS TO CALLING ROUTINE                   * 00740022
*        CTSDVI(ACT)- BIT 2                                           * 00760020
*            1='PREVIOUSLY DEFINED SYMBOL' ERROR                      * 00780020
*        F8YDC+1(ACT)                                                 * 00800020
*            X'01'=RESULT IS AN ADCON, MAY BE FOUR BYTES LONG         * 00820020
*OUTPUT-                                                              * 00840020
*   REGISTERS-                                                        * 00860020
*        SP1 CONTAINS ADDRESS OF THE CHARACTER FOLLOWING THE CHARACTER* 00880020
*                     WHICH TERMINATED THE EXPRESSION                 * 00900020
*                  OR ZERO, IF A SYNTACTICAL ERROR WAS DISCOVERED IN  * 00920020
*                     THE EXPRESSION   (FATAL ERROR)                  * 00940020
*        SP2 CONTAINS THE VALUE OF THE EXPRESSION, IF THE EXPRESSION  * 00960020
*                     WAS ABSOLUTE                                      00980020
*                  OR A POINTER TO AN OUTPUT PARAMETER LIST (RLIST),  * 01000020
*                     IF THE EXPRESSION WAS RELOCATABLE.              * 01020020
*   CONDITION CODE-                                                   * 01040020
*        CC=0   ABSOLUTE EXPRESSION                                   * 01060020
*        CC=1   SIMPLY RELOCATABLE EXPRESSION                         * 01080020
*        CC=2   COMPLEXLY RELOCATABLE EXPRESSION                      * 01100020
*        CC=3   EVALUATION IMPOSSIBLE (ERROR)                         * 01120020
*   PARAMETERS-                                                       * 01140020
*        LIST POINTED TO BY SP1-                                      * 01160020
*             ONE FULL WORD CONTAINING THE VALUE OF THE EXPRESSION    * 01180020
*             25 HALF-WORDS, ONE FOR EACH POSSIBLE TERM IN EXPR.      * 01200027
*                  ABSOLUTE TERM ENTRIES...BOTH BYTES 0               * 01220020
*                  PAIRED RELOCATABLE TERM ENTRIES...BOTH BYTES 0     * 01240020
*                  RELOCATABLE TERM ENTRIES...FIRST BYTE=SIGN         * 01260020
*                       (1=+,2=-),SECOND BYTE=ESD-ID                  * 01280020
*             A SIMPLY RELOCATABLE EXPRESSION WILL HAVE A TERM ENTRY  * 01300020
*             IN ONLY THE FIRST HALF-WORD.  THE REMAINING 15 HALF     * 01320020
*             WORDS WILL CONTAIN ZEROES.  A COMPLEXLY RELOCATABLE     * 01340020
*             EXPRESSION WILL HAVE A NON-ZERO ENTRY FOR EACH UNPAIRED * 01360020
*             RELOCATABLE TERM. THESE ENTRIES MAY BE SCATTERED THROUGH* 01380020
*             THE PARAMETER LIST.                                     * 01400020
*        CTLRCI(ACT), BIT 1                                           * 01420020
*            0= NO REFERENCE TO LOCATION COUNTER (*) IN EXPRESSION    * 01440020
*            1=REFERENCE TO LOC. CNTR WAS MADE IN EXPRESSION          * 01460020
*        STLONG(ACT) CONTAINS LENGTH ATTRIBUTE OF FIRST TERM IN EXPR. * 01480020
*EXTERNAL ROUTINES-                                                   * 01500020
*        NAME           ROUTINE    USE                                * 01520020
*        CSTGET(ACT)    ASMGF8S    FIND SYMBOL IN SYMBOL TABLE        * 01540020
*        CLOGER(ACT)    ASMGF8L    LOG ERROR                          * 01560020
*EXITS- NORMAL-                                                       * 01580020
*        RETURN TO CALLING PROGRAM VIA-                               * 01600020
*        BR    SRR                                                    * 01620020
*       ERRORS-                                                       * 01640020
*          PROCESSING OF EXPRESSION IS COMPLETED AND NORMAL EXIT      * 01660020
*          OCCURS IF THESE ERRORS ARE ENCOUNTERED-  (NON-FATAL ERRORS)* 01680020
*             EXPRESSION VALUE TOO LARGE                              * 01700020
*             SYMBOL NOT PREVIOUSLY DEFINED                           * 01720020
*             ARITHMETIC ERROR                                        * 01740020
*             RELOCATABILITY ERROR                                    * 01760020
*             SELF-DEFINING TERM VALUE TOO LARGE                      * 01780020
*                  OR ZERO, IF AN ERROR WAS DISCOVERED IN THE EXPRES'N* 01800020
*             THE CONDITION CODE WILL NOT BE 3 FOR 'EXPR. VALUE ECEEDS* 01820020
*             RANGE'                                                  * 01840020
*          EXPRESSION PROCESSING IS DISCONTINUED, SP1 AND SP2 ARE SET * 01860020
*          TO ZERO, AND ASMGF8V RETURNS TO THE CALLING ROUTINE, IF THE* 01880021
*          FOLLOWING SYNTACTICAL ERRORS ARE ENCOUNTERED. (FATAL ERR'S)* 01900020
*             TWO TERMS NOT SEPARATED                                 * 01920020
*             ILLEGAL CHARACTER                                       * 01940020
*             TOO MANY TERMS                                          * 01960020
*             TWO OPERATORS ILLEGALLY COMBINED                        * 01980020
*             TOO MANY LEVELS OF PARENTHESES                          * 02000020
*             EXPRESSION END PREMATURE                                * 02020020
*             INVALID SYMBOL                                          * 02040020
*          IN ALL CASES, THE ERRORS ARE LOGGED.                       * 02060020
*TABLES/WORK AREAS-                                                   * 02080020
*   TERMS- AN ENTRY IS MADE FOR EACH TERM IN EXPRESSION ... AT END    * 02100027
*          OF EVALUATION, FIRST ENTRY CONTAINS RESULT VALUE.          * 02120027
*   RLIST- TERM ENTRY PORTION OF OUTPUT PARAMETER LIST.               * 02140027
*   NTRMS- AT END OF EVALUATION, FIRST BYTE CONTAINS 2*NUMBER OF      * 02160027
*          TERMS.                                                     * 02180020
*   OPRNS- AN ENTRY IS MADE FOR EACH OPERATOR IN EXPRESSION.          * 02200027
*NOTE-  SEARCH FOR SYMBOLS BEGINS WITH WORK BUCKETS. IF SYMBOL IS NOT * 02220020
*       FOUND, SEARCH CONTINUES IN THE SYMBOL TABLE                   * 02240020
*   THE TERMINATING CHARACTER WILL ALWAYS BE A LEFT OR RIGHT PARN. OR * 02260020
*   A BLANK OR A COMMA, UNLESS THERE WAS A SYNTACTICAL ERROR.         * 02280020
*                                                                     * 02300020
*  GRD USED FOR BASE OF TERMS WORK AREA                                 02310027
*  GRX USED FOR POINTER TO TERMS LIST                                   02320020
*  GRY USED FOR POINTER TO OPRNS LIST                                   02340020
*  GRZ USED FOR POINTER TO NTRMS LIST                                   02360020
*  GR2 USED FOR POINTER TO RLIST LIST                                   02380020
* GR0,GR1,GRA, AND GRB USED AS WORK REGISTERS                           02400020
         EJECT                                                          02420020
         USING *,SRB                    USING SRB                       02440020
*                                                                       02460020
*  INITIALIZE                                                           02480020
*                                                                       02500020
         STM   GRA,GRD,REGSAV           SAVE SOME VOLATILE REGISTERS    02510027
         L     GRD,CTFVEVAL(,ACT)       GET ADDR OF TERMS WORK AREA     02520027
         USING TERMSWK,GRD              AND SET THE BASE                02530027
         SR    GR0,GR0                  ZERO A WORK REGISTER            02540027
         STH   GR0,STLONG(,ACT)         ZERO TO STLONG(ACT)             02560027
         MVI   TERMS,X'00'              ZERO TO TERMS                   02580027
         MVC   TERMS+1(TERMSLEN-1),TERMS  ZERO ALL OF TERM WORK AREA    02600027
         NI    CTLCRI(ACT),X'BF'        SET BIT FOR LOC. CNTR. REF. OFF 02620020
         LA    GRZ,NTRMS                GET ADDRESS OF NTRMS            02630027
         LA    GRX,TERMS                GET ADDRESS OF TERMS            02640027
         LA    GRY,OPRNS                GET ADDRESS OF OPRNS            02650027
         LA    GR2,RLIST                GET ADDRESS OF RLIST            02660027
         ST    SP1,FTXPPT              SAV PT TO FIRST BYTE OF EXP      02680020
*                                                                       02700020
*  SCAN OF THE EXPRESSION FOR TERMS OR OPERATORS                        02720020
*                                                                       02740020
LOOK     CLI   0(SP1),IALPHA            IS CHAR. ALPHANUMERIC           02760020
         BH    NOTAM                    NO, GO LOOK FOR SPECIAL CHAR    02780020
         ST    SP1,ERRPT               SAV PT TO FIRST BYTE OF TERM     02800020
         STM   GRZ,GRY,SAVE             SAVE 3 WORK REGISTERS           02820020
         CLI   0(SP1),IA                IS CHAR. A NUMBER               02840020
         BL    DEC                      YES, GO TREAT AS DECIMAL S.D.T. 02860020
         CLI   1(SP1),IQUOTE            IS NEXT CHAR. A QUOTE           02880020
         BE    NEXTQ                    YES, GO LOOK AT FOLLOWIN CHAR   02900020
*                                                                       02920020
*  SYMBOL IN THE EXPRESSION                                             02940020
*                                                                       02960020
SYM      DS    0H                                                       02970027
         CLI   COND,CONDE               TWO TERMS IN A ROW .Q           02980027
         BNL   ERR10                    BAD SHOW, TWO CONSECUTIVE TERMS 03000027
         SR    GR0,GR0                  FORM A ZERO AND                 03020020
         ST    GR0,0(GRX)               ZERO TO TERMS LIST              03040020
         CLI   LREF,0                  IS L'SYMBOL                      03060020
         BE    TRYSWB                  NO                               03080020
         CLI   0(SP1),IMULT            IS L'*                           03100020
         BNE   TRYSWB                  NO                               03120020
         MVI   3(GRX),1                1 TO TERMS LIST                  03140020
         MVI   LREF,0                  CLEAR LREF                       03160020
         MVN   LREF(1),F8INST+15(ACT)  MOVE IN LENGTH ATTRIBUTE         03180020
         CLI   LREF,2                   IS IT A ZERO OR A ONE           03200020
         BL    ATTR1                   0YES, GIVE VALUE OF ONE          03220020
         CLI   LREF,8                   IS IT .GT. 8                    03240020
         BH    ATTR1                   GYES, SET VALUE OF ONE           03260020
         MVC   3(1,GRX),LREF           PUT L'* VALUE IN TERMS LIST      03280020
ATTR1    LA    SP1,1(SP1)              POSITION SP1 TO CHAR. AFTER *    03300020
         B     LSTAR                                                    03320020
*                                                                       03340020
*  LOOK FOR SYMBOL VALUE IN WORK BUCKET                                 03360020
*                                                                       03380020
*                                                                       03400020
* CTXWBP(ACT), FULL WORD ALIGNED, POINTS TO 'NEXT' SYMBOL WORK BUCKET.  03420020
* WHEN ZERO, THERE IS NO 'NEXT' SYMBOL WORK BUCKET.                     03440020
*                                                                       03460020
TRYSWB   L     SP2,CTXWBP(ACT)         POINTER TO NEXT SYM. WK-BUCKET   03480020
         LTR   SP2,SP2                  IS THERE A NEXT SYM. WK-BUCKET  03500020
         BZ    TRYST                                                    03520020
         LR    GR1,SP2                  YES, LOAD WORK BUCKET POINTER   03540020
         LA    GR1,6(GR1)               BUMP POINTER TO SYM. WK-BUCKET  03560020
         ST    GR1,CTXWBP(ACT)                    BY 6                  03580020
         TM    TXSUBS(SP2),X'10'        IS VALUE IN WORK-BUCKET         03600020
         BO    WBFNDX                   YES, DONT SEARCH SYMBOL TABLE   03620020
*                                                                       03640020
*  LOOK FOR SYMBOL VALUE IN SYMBOL TABLE                                03660020
*                                                                       03680020
TRYST    STM   SRB,SP2,NCOMP            SAVE OUR BASE                   03700020
         SR    SP2,SP2                  SET LENGTH UNKNOWN              03720020
         L     SRB,CSTGET(ACT)          LOAD BASE/ENTRY                 03740020
         BALR  SRR,SRB                  TO STGET ROUTINE                03760020
         DROP  SRB                      SRB DESTROYED BY STGET, SO      03780020
         USING *,SRR                    USE TEMP. BASE OF SRR           03800020
         LTR   GR1,SP1                  POINTER TO GR1 AND TEST         03820020
         LR    GR0,SP2                  LENGTH OF SYMBOL TO GR0         03840020
         LM    SRB,SP2,NCOMP            RESTORE OUR BASE                03860020
         DROP  SRR                      BASE SRB RESTORED, DROP TEMP.   03880020
         USING EEVAL,SRB                SRR AND START USING OUR BASE    03900020
         BC    7,FOUND                  HAS SYMBOL BEEN FOUND           03920020
*                                                                       03940020
*  SYMBOL NOT FOUND IN EITHER A WORK BUCKET OR THE SYMBOL TABLE         03960020
*                                                                       03980020
         MVI   TERMS,0                                                  04000020
         MVC   TERMS+1(RCNTR-TERMS),TERMS  ZERO TERMS, RLIST AND RCNTR  04020027
         C     GR0,FSEVEN               IF SYMBOL LEN-1 GT SEVEN        04040027
         BH    ERR3                     LOG ERROR /INVALID SYMBOL/      04060020
         B     ERR15                    SYMBOL NOT FOUND                04080020
SCANE    LA    SP1,1(SP1)               SCAN TO END OF SYMBOL           04100020
COND3    EQU   SCANE                                                    04120020
         CLI   0(SP1),IPLUS             SEE IF AT END OF SYMBOL         04140020
         BL    SCANE                    NO, LOOP FOR NEXT CHAR          04160020
         B     COMPT4                   YES, START AGAIN                04180020
*                                                                       04200020
*  SYMBOL VALUE FOUND IN SYMBOL TABLE                                   04220020
*                                                                       04240020
FOUND    AR    SP1,GR0                  ADD SYMBOL LENGTH TO PTR        04260020
         LA    SP1,1(SP1)               UP TO NEXT CHAR                 04280020
         CLI   LREF,0                   IS L'SYMBOL                     04300020
         BH    LSYM                     YES, PROCESS                    04320020
         TM    1(GR1),3                 IS THIS A NAME                  04340020
         BC    14,ESDMV                NO                               04360020
         CLI   SYMBL,0                  IS THIS THE FIRST TERM          04380020
         BH    MOVE                     NO, BRANCH                      04400020
         MVC   STLONG(2,ACT),6(GR1)     LENGTH TO STLONG                04420020
MOVE     MVC   1(3,GRX),3(GR1)          VALUE TO TERMS LIST             04440020
         CLI   2(GR1),0                 IS ABSOLUTE TERM                04460020
         BE    COMPT4                   YES, BRANCH                     04480020
ESDMV    MVC   1(1,GR2),2(GR1)          ESD-ID TO RLIST                 04500020
         TM    1(GR1),X'04'             IS DSECT-COM BIT ON (BIT5)      04520020
         BC    7,OUT                                                    04540020
         TM    1(GR1),X'03'            IS EXTRN(01) OR DSECT(10)        04560020
         BM    OUT              YES                                     04580020
*                                                                       04600020
*  LOOK FOR ADJUSTMENT VALUE FOR RELOCATABLE SYMBOL                     04620020
*                                                                       04640020
SUCH     CLC   1(1,GR2),CESDID(ACT)     IS THIS THE CURRENT ESD-ID      04660020
         BE    OUTL                     YES, GET OUT OF LOOP            04680020
         L     SP2,CTADJEND(0,ACT)      ADDRESS OF END OF ADJ TABLE     04700020
         L     GR1,CADJBS(ACT)          ADDRESS OF START OF ADJ TABLE   04720020
FINDA    CLC   1(1,GR2),0(GR1)          IS THIS THE ESD-ID              04740020
         BE    ADDV                     YES, GET OUT                    04760020
         LA    GR1,4(GR1)               BUMP GR1 BY 4 (FOR ADJ TABLE)   04780020
         CLR   GR1,SP2                  HAVE REACHED END OF ADJ TABLE   04800020
         BL    FINDA                    NO, LOOP                        04820020
         B     OUT                      YES, QUIT                       04840020
ADDV     MVC   NCOMP+1(3),1(GR1)        ADJ VALUE TO NCOMP              04860020
         MVI   NCOMP,0                                                  04880020
         L     GR1,NCOMP                ADJ VALUE TO GR1                04900020
ADDADJ   A     GR1,0(GRX)               ADD ADJ VALUE TO S. T. VALUE    04920020
         ST    GR1,0(GRX)                                               04940020
         MVI   0(GRX),X'00'            ZERO 1ST BYTE                    04960020
OUT      DS    0H                                                       04970027
         MVI   COND,CONDF               SET RELOCATABLE TERM            04980027
         MVI   0(GR2),1                 CODE FOR + SIGN = 1 TO RLIST    05000020
         IC    GR1,RCNTR                BUMP RCNTR BY 1 (RELOCATABLE)   05020020
         LA    GR1,1(GR1)                                               05040020
         STC   GR1,RCNTR                                                05060020
         B     COMPT                    CONTINUE                        05080020
*                                                                       05100020
*  SYMBOL VALUE FOUND IN WORK BUCKET                                    05120020
*                                                                       05140020
WBFNDX   LA    SP1,1(SP1)               SCAN TO END OF SYMBOL           05160020
         CLI   0(SP1),IPLUS             IS IT STILL PART OF SYMBOL      05180020
         BL    WBFNDX                   YES, CONTINUE SCAN              05200020
         CLI   LREF,0                   IS L'SYMBOL                     05220020
         BH    LSYMWB                   YES, PROCESS                    05240020
         TM    TXSTPC(SP2),X'03'       IS THIS A NAME                   05260020
         BC    14,WBESDMV              NO                               05280020
         CLI   SYMBL,0                  IS THIS THE FIRST TERM          05300020
         BH    WBFNDY                   NO, SKIP FIRST TERM PROCESSING  05320020
         MVC   STLONG+1(1,ACT),TXSLEN(SP2)                              05340020
         TM    TXSEXI(SP2),X'04'        IS LENGTH GR THAN 256           05360020
         BZ    WBFNDY                   NO, LEAVE AS IS                 05380020
         MVI   STLONG(ACT),255          SET FIRST BYTE OF STLONG =255   05400020
WBFNDY   MVC   1(3,GRX),TXSVAL(SP2)     VALUE TO TERMS LIST             05420020
         CLI   TXSESD(SP2),0           IS ABSOLUTE TERM                 05440020
         BE    COMPT4                   YES                             05460020
WBESDMV  MVC   1(1,GR2),TXSESD(SP2)    ESD-ID TO RLIST                  05480020
         TM    TXSDOC(SP2),X'20'        IS DSECT-COM BIT ON (BIT 2)     05500020
         BC    7,OUT                    YES                             05520020
         TM    TXSTPC(SP2),X'03'       IS EXTRN(01) OR DSECT(10)        05540020
         BM    OUT              YES                                     05560020
         B     SUCH                     NO, LOOK FOR ADJUSTMENT VALUE   05580020
*                                                                       05600020
*  L'SYMBOL VALUE FOUND IN SYMBOL TABLE                                 05620020
*                                                                       05640020
LSYM     TM    1(GR1),3                 IS THIS A NAME                  05660020
         BC    14,UPLSYM                NO                              05680020
MOVEL    MVC   2(2,GRX),6(GR1)          LENGTH TO TERMS LIST            05700020
         B     UPLSYM                   CONTINUE                        05720020
*                                                                       05740020
*  L'SYMBOL VALUE FOUND IN WORK BUCKET                                  05760020
*                                                                       05780020
LSYMWB   MVC   1(3,GRX),TXSVAL(SP2)    LENGTH TO TERMS LIST        6822 05800020
UPLSYM   L     GR1,0(GRX)                                               05820020
         LA    GR1,1(GR1)                                               05840020
         N     GR1,LOW16                CLEAR TOP HALFWORD        V7A51 05850028
         ST    GR1,0(GRX)               BUMP VALUE OF L'SYMBOL BY 1     05860020
LSTAR    MVI   LREF,0                  SET LREF TO ZERO                 05880020
         B     COMPT4                   GO ON                           05900020
*                                                                       05920020
*  DECIMAL SELF-DEFINING VALUE IN THE EXPRESSION                        05940020
*                                                                       05960020
DEC      LA    SHFR,3                   DEC. TYPE INDICATOR TO SHFR     05980020
         BAL   RETR,SDVCF               TO SELF-DEFINING VALUE ROUTINE  06000020
         LA    GR0,8                    MAX. NO. OF CHAR. TO GR0        06020020
         LM    GRZ,GRY,SAVE             RE-LOAD SAVED REGISTERS         06040020
         ST    VALR,0(GRX)              VALUE TO TERMS LIST             06060020
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15 06062028
         BNO   DECNEX                   BRANCH IF NOT             V7A15 06064028
         LA    GR0,10                   MAX NO OF DIGITS          V7A15 06066028
         B     ABSD                     GO AND CHECK RESULT       V7A15 06068028
DECNEX   DS    0H                                                 V7A15 06070028
         CLI   0(GRX),0                 IS FIRST BYTE ZERO              06080020
         BH    ERR0                     NO, ERROR - TOO LARGE           06100020
         B     ABSD                     GO ON                           06120020
*                                                                       06140020
*  1ST CHARACTER IS ALPHABETIC AND 2ND IS A QUOTE                       06160020
*                                                                       06180020
NEXTQ    CLI   0(SP1),IB                IS BINARY SELF-DEF. VALUE       06200020
         BE    BINRY                    YES, BINARY CONVERT             06220020
         CLI   0(SP1),IC                IS CHARACTER SELF-DEF. VALUE    06240020
         BE    CHARS                    YES, CHARACTER CONVERT          06260020
         CLI   0(SP1),IX                IS HEXADECIMAL SELF-DEF. VALUE  06280020
         BE    HEX                      YES, HEXADECIMAL CONVERT        06300020
         CLI   0(SP1),IL                IS L'SYMBOL                     06320020
         BNE   ERR9                     NO, ERROR - ILLEGAL CHAR        06340020
*                                                                       06360020
*  L'SYMBOL IN THE EXPRESSION                                           06380020
*                                                                       06400020
         LA    SP1,2(SP1)               POINT SP1 TO 1ST CHAR. OF SYM.  06420020
         MVI   LREF,X'FF'               SET L'SYMBOL FLAG NON-ZERO      06440020
         CLI   0(SP1),IALPHA           IS CHAR. ALPHANUMERIC            06460020
         BNH   ALPHA                   YES                              06480020
MAYLCNTR CLI   0(SP1),IMULT            IS CHAR. *                       06500020
         BNE   ERR9                    NO                               06520020
ALPHA    CLI   0(SP1),IA               IS CHAR. ALPHABETIC              06540020
         BL    ERR9                    NO                               06560020
*                                                                       06580020
* IN WORK BUCKET, VALUE = LENGTH.                                       06600020
* IN SYMBOL TABLE, PICK UP LENGTH ATTRIBUTE PART OF SYMBOL.             06620020
*                                                                       06640020
         B     SYM                      SYMBOL IN EXPRESSION            06660020
*                                                                       06680020
*  BINARY SELF-DEFINING VALUE IN THE EXPRESSION                         06700020
*                                                                       06720020
BINRY    LA    SHFR,1                   BINARY TYPE INDICATOR TO SHFR   06740020
         LA    SP1,2(SP1)               POSITION SP1 TO FIRST CHAR.     06760020
         BAL   RETR,SDVCF               TO SELF-DEFINING VALUE ROUTINE  06780020
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15 06782028
         BNO   BINNEX                   BRANCH IF NOT             V7A15 06784028
         LA    GR0,32                   MAX NO OF BITS            V7A15 06786028
         B     LM                       GO AND CHECK RESULT       V7A15 06788028
BINNEX   DS    0H                                                 V7A15 06790028
         LA    GR0,24                   MAX. NO. OF CHAR. TO GR0        06800020
         B     LM                       CONTINUE                        06820020
*                                                                       06840020
*  CHARACTER SELF-DEFINING VALUE IN THE EXPRESSION                      06860020
*                                                                       06880020
CHARS    LA    SP1,2(SP1)               POSITION SP1 TO FIRST CHAR.     06900020
         LA    SHFR,8                   CHAR. TYPE INDICATOR TO SHFR    06920020
         BAL   RETR,SDVCF               TO SELF-DEFINING VALUE ROUTINE  06940020
         LA    GR0,4                    MAX NO OF CHARACTERS      V7A15 06960028
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15 06962028
         BO    CHANEX                   BRANCH IF YES             V7A15 06964028
         LA    GR0,3                    MAX NO OF CHARACTERS      V7A15 06966028
CHANEX   DS    0H                                                 V7A15 06968028
         LM    GRZ,GRY,SAVE             RE-LOAD SAVED REGISTERS         06980020
         ST    VALR,0(GRX)              VALUE TO TERMS LIST             07000020
         L     SP2,CTRTBP(ACT)          POINTER TO TRANSLATE TABLE      07020020
         TR    0(4,GRX),0(SP2)          TRANSLATE CHAR. VALUE           07040020
         B     CKQ                      CONTINUE                        07060020
*                                                                       07080020
*  HEXADECIMAL SELF-DEFINING VALUE IN THE EXPRESSION                    07100020
*                                                                       07120020
HEX      LA    SHFR,4                   HEX TYPE INDICATOR TO SHFR      07140020
         LA    SP1,2(SP1)               POSITION SP1 TO FIRST CHAR.     07160020
         BAL   RETR,SDVCF               TO SELF-DEFINING VALUE ROUTINE  07180020
         LA    GR0,8                    MAX NO OF HEX DIGITS      V7A15 07182028
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q            V7A15 07184028
         BO    LM                       BRANCH IF YES             V7A15 07186028
         LA    GR0,6                    MAX. NO. OF CHAR. TO GR0        07200020
LM       LM    GRZ,GRY,SAVE             RE-LOAD SAVED REGISTERS         07220020
         ST    VALR,0(GRX)              VALUE TO TERMS LIST             07240020
CKQ      CLI   0(SP1),IQUOTE            IS ENDING CHAR. A QUOTE         07260020
         BNE   ERR9                     NO, ERROR - ILLEGAL CHAR        07280020
         LA    SP1,1(SP1)               POSITION SP1 TO CHAR. AFTER '   07300020
         LTR   CNTR,CNTR                IS CNTR ZERO                    07320020
         BZ    ERR9                     YES, ERROR - ILLEGAL CHAR       07340020
ABSD     CLR   CNTR,GR0                 IS CNTR GR THAN MAX.            07360020
         BH    ERR0                     YES, ERROR - TOO MUCH           07380020
         CLI   COND,CONDA               IS COND UNCHANGED .Q            07400027
         BH    ABSCK                    NO, TEST FOR .GT. 2             07420020
         TM    CTSDVI(ACT),X'80'        IS BIT FOR SELF-DEF. VALUE ON   07440020
         BZ    ABSCK+8                  NO                              07460020
         NI    CTSDVI(ACT),X'7F'        SET THE BIT OFF                 07480020
         B     FINIS                                                    07500020
ABSCK    DS    0H                                                       07510027
         CLI   COND,CONDE               TWO TERMS IN A ROW .Q           07520027
         BNL   ERR10                    ERROR IF YES                    07540027
COMPT4   DS    0H                                                       07550027
         MVI   COND,CONDE               SET ABSOLUTE TERM               07560027
COMPT    DS    0H                                                       07570027
         LA    GR0,RLIST                START OF RELOC LIST             07580027
         LR    GRB,GR2                  THIS IS WHERE WE'RE AT          07585027
         SR    GRB,GR0                  THIS IS THE DIFFERENCE          07590027
         CH    GRB,CTTERMC(,ACT)        TOO MANY TERMS .Q               07595027
         LA    GRB,MNYERR               DIAGNOSTIC IF SO                07600027
         BH    FATLER1                                                  07620020
         OI    SYMBL,1                  OR SYMBL WITH 1                 07640020
         MVI   0(GRZ),2                 2 TO NTRMS LIST                 07660020
         LA    GRZ,1(GRZ)               BUMP GRZ BY 1 (FOR NTRMS)       07680020
         LA    GRX,4(GRX)               BUMP GRX BY 4 (FOR TERMS)       07700020
         LA    GR2,2(GR2)               BUMP GR2 BY 2 (FOR RLIST)       07720020
         B     LOOK                     GO ON IN STRING                 07740020
*                                                                       07760020
*  1ST CHARACTER IS NOT ALPHANUMERIC                                    07780020
*                                                                       07800020
NOTAM    CLI   0(SP1),ICOMMA            IS CHAR. A COMMA                07820020
         BL    LTCOM                    NO, IS A +,-,*, OR /            07840020
         BE    BLCOM                    YES, GO TO BLANK OR COMMA       07860020
         CLI   0(SP1),ILPARN            IS CHAR. A LEFT PAREN.          07880020
         BE    LPAR                     YES                             07900020
         BL    ERR9                     NO, ERROR - ILLEGAL CHAR        07920020
         CLI   0(SP1),IQUOTE            IS CHAR A ' OR ) OR BLANK       07940020
         BL    RPAR                     RIGHT PARN                      07960020
         BH    BLCOM                    BLANK                           07980020
         B     ERR9               ' IS ILLEGAL FIRST CHAR.              08000020
*                                                                       08020020
*  RIGHT PARENTHESIS IN THE EXPRESSION                                  08040020
*                                                                       08060020
RPAR     DS    0H                                                       08070027
         CLI   COND,CONDE               DOES RIGHT PAREN FOLLOW TERM .Q 08080027
         BL    ERR12                    NO, ERROR - TWO CONSECUTIVE OPS 08100027
         MVI   COND,CONDE               SET RIGHT PAREN COND            08120027
         CLI   PCNTR,0                  IS PCNTR =0                     08140020
         BH    NOEND                    NO                              08160020
         B     ENDNG                    YES                             08180020
*                                                                       08200020
*  1ST CHARACTER IS EITHER +,-,*, OR /.                                 08220020
*                                                                       08240020
LTCOM    CLI   0(SP1),IASTER            IS CHAR. AN ASTERISK            08260020
         BE    STAR                     YES                             08280020
         BH    SLASH                    BRANCH IF /                     08300020
*                                                                       08320020
*  + OR - IN THE EXPRESSION                                             08340020
*                                                                       08345027
PLMIN    DS    0H                                                       08350027
         CLI   COND,CONDE               WAS LAST ENTRY A TERM .Q        08355027
         BNL   PLMIN3                   BRANCH IF YES                   08360027
         TM    CTEXTENI(ACT),X'04'      IS EXTEN ON .Q                  08365027
         BZ    ERR12                    NO UNARY +,- IF NOT             08370027
         CLI   COND,CONDA               1ST OPERATOR/TERM .Q            08380027
         BE    COMPT4                   ENTER ZERO OPERAND IF YES       08385027
         MVI   COND,CONDC               UNARY OPERATOR                  08390027
PLMIN2   DS    0H                                                       08395027
         LA    GR0,IALPHA-2             BUMP OPERATOR BY TWO            08400027
         B     SET1                     AND ENTER SAME                  08405027
PLMIN3   DS    0H                                                       08410027
         MVI   COND,CONDB               BINARY + OR -                   08415027
SET      DS    0H                                                       08420027
         LA    GR0,IALPHA               TO CALCULATE NEWOP              08430027
SET1     DS    0H                                                       08440027
         IC    GR1,0(SP1)               GET THIS CHAR                   08460020
         SR    GR1,GR0                                                  08480020
         STC   GR1,NEWOP                HIERARCHY CODE TO NEWOP         08500020
*                                                                       08520020
*  MAIN LOOP TO PERFORM ARITHMETIC                                      08540020
*                                                                       08560020
LOOP     DS    0H                                                       08570027
         LA    GR1,OPRNS                POINT TO FIRST OPERATOR ENTRY   08580027
         CR    GRY,GR1                  ARE THERE PREVIOUS OPERATORS .Q 08590027
         BH    ONZ                      YES                             08600020
         CLI   ENDOE,0                  IS ENDOE=0                      08620020
         BH    FINIS                    NO                              08640020
PUT      MVC   0(1,GRY),NEWOP           NEWOP TO OPRNS LIST             08660020
BUMPY    LA    GRY,1(GRY)               BUMP GRY BY 1 (FOR OPRNS)       08680020
BUMPR    LA    SP1,1(SP1)               BUMP SP1 BY 1 (FOR NON-ALFNUM)  08700020
         B     LOOK                     CONTINUE IN STRING              08720020
ONZ      BCTR  GRY,0                    POINT GRY TO PREVIOUS OPERATOR  08740020
         CLC   0(1,GRY),NEWOP           IS NEW HIERARCHY LT-EQ PREVIOUS 08760020
         BNL   LE                       YES                             08780020
         CLI   NEWOP,OPSLASH            TEST NEW OP /                   08800027
         BNE   STEPUP                   NO                              08820020
         CLI   0(GRY),OPSTAR            TEST PREV OP *                  08840027
         BE    WORK                     YES, DO * FIRST                 08860020
STEPUP   LA    GRY,1(GRY)               ADD 1 BACK TO GRY               08880020
         B     PUT                                                      08900020
LE       DS    0H                                                       08910027
         CLI   NEWOP,OPUMINUS           IS THIS UNARY - .Q              08912027
         BE    STEPUP                   JUST ENTER IT IF YES            08914027
         CLI   NEWOP,OPUPLUS            IS THIS UNARY + .Q              08916027
         BE    STEPUP                   JUST ENTER IT IF YES            08918027
         CLI   0(GRY),OPEND             IS OLD HIERARCHY ZERO .Q        08920027
         BH    WORK                     NO                              08940020
         IC    GR1,PCNTR                SUBTRACT 1 FROM PCNTR           08960020
         BCTR  GR1,0                                                    08980020
         STC   GR1,PCNTR                                                09000020
         B     BUMPR                    CONTINUE LOOP                   09020020
*                                                                       09040020
*  LEFT PARENTHESIS IN THE EXPRESSION                                   09060020
*                                                                       09080020
LPAR     DS    0H                                                       09090027
         CLI   COND,CONDE               WAS A TERM LAST ENTRY .Q        09100027
         BNL   LPEND                    YES, PROCESS END                09120027
         MVI   COND,CONDB               SET LEFT PAREN COND             09140027
         SR    GR1,GR1                  ZERO WORK REGISTER              09150027
         IC    GR1,PCNTR                GET CURRENT PAREN COUNT         09160027
         CH    GR1,CTPARENC(,ACT)       TOO MANY LEVELS OF PARENS .Q    09180027
         LA    GRB,PARERR               DIAGNOSTIC IF SO                09200027
         BH    FATLER2                  BRANCH IF PAREN ERROR           09220027
         LA    GR1,1(,GR1)              BUMP PCNTR BY ONE               09240027
         STC   GR1,PCNTR                                                09260020
         MVI   0(GRY),0                 ZERO TO OPRNS LIST              09280020
         B     BUMPY                    RETURN TO PERFORM ARITHMETIC    09300020
*                                                                       09320020
*  ASTERISK IN THE EXPRESSION                                           09340020
*                                                                       09360020
STAR     DS    0H                                                       09370027
         CLI   COND,CONDD               FORMER STAR OR SLASH .Q         09380027
         BE    ERR12                    YES, ERROR - 2 CONSECUTIVE OPS  09400027
         BL    LCNTR                    BRANCH IF LOC CNTR REFERENCE    09420020
*                                                                       09440020
*  ASTERISK IS MULTIPLICATION OPERATOR                                  09460020
*                                                                       09480020
FORD1    DS    0H                                                       09490027
         MVI   COND,CONDD               SET MULT/DIV COND               09500027
         B     PLMIN2                   GO ADJUST OPERATION             09520027
*                                                                       09540020
*  SLASH IN THE EXPRESSION                                              09560020
*                                                                       09580020
SLASH    DS    0H                                                       09590027
         CLI   COND,CONDE               DOES A TERM PRECEDE             09600027
         BL    ERR12                    ERROR IF NOT                    09620027
         B     FORD1                    CONTINUE AS THOUGH MULTIPLICATN 09640020
*                                                                       09660020
*  BLANK OR COMMA IN THE EXPRESSION                                     09680020
*                                                                       09700020
BLCOM    DS    0H                                                       09710027
         CLI   COND,CONDE               TERM PRECEDE BLANK OR COMMA .Q  09720027
         BL    ERR17                    ERROR IF NOT                    09740027
*                                                                       09760020
*  LEFT PARENTHESIS END CONDITION                                       09780020
*                                                                       09800020
LPEND    CLI   PCNTR,0                  IS PCNTR =0                     09820020
         BH    ERR17                    NO, ERROR                       09840020
ENDNG    MVI   ENDOE,15                 SET ENDOE NON-ZERO              09860020
NOEND    DS    0H                                                       09870027
         MVI   NEWOP,OPEND              SET NEWOP ZERO                  09880027
         B     LOOP                     MAIN ARITH LOOP                 09900020
*                                                                       09920020
*  ASTERISK IS LOCATION COUNTER                                         09940020
*                                                                       09960020
LCNTR    OI    CTLCRI(ACT),X'40'        SET BIT FOR LOC. CNTR. REF. ON  09980020
         LA    SP1,1(SP1)               POSITION SP1 TO NEXT CHAR.      10000020
         L     SP2,CTXABP(ACT)          POINTER TO LOC. CNTR.           10020020
         MVC   1(3,GRX),TXLOC(SP2)      LOC. CNTR VALUE TO TERMS LIST   10040020
         MVI   0(GRX),0                                                 10060020
         CLI   SYMBL,0                 IS THIS THE FIRST TERM           10080020
         BH    LCNTR2                  NO                               10100020
         MVN   LREF(1),F8INST+15(ACT)  MOVE IMPLIED EXPRESSION LENGTH   10120020
         CLI   LREF,0                  DONT DECREMENT LREF IF ZERO      10140020
         BE    LCNTR1                   ZERO, SO DONT                   10160020
         IC    GR1,LREF                TO TEMP LOC                      10180020
         BCTR  GR1,0                   DECREMENT BY 1                   10200020
         STC   GR1,LREF                AND MOVE                         10220020
LCNTR1   MVC   STLONG+1(1,ACT),LREF         TO STLONG                   10240020
         MVI   LREF,0                  SET LREF TO ZERO                 10260020
LCNTR2   MVC   1(1,GR2),CESDID(ACT)    CURRENT ESD-ID TO RLIST          10280020
OUTL     L     GR1,F8CADJ(ACT)          CURRENT ADJ VALUE TO GR1        10300020
         B     ADDADJ                   PROCESS END OF ADJUSTMENT       10320020
*                                                                       10340020
*  PERFORM ARITHMETIC AND RELOCATABILITY WORK                           10360020
*                                                                       10380020
WORK     ST    GR2,NCOMP                STORE GR2 IN NCOMP              10400020
         LA    GR0,8                    POINT GRX TO 1ST OF THE 2       10420020
         SR    GRX,GR0                       TERMS ENTRIES              10440020
         LA    GR0,2                    POINT GRZ TO 1ST OF THE 2       10460020
         SR    GRZ,GR0                       NTRMS ENTRIES              10480020
         IC    GR0,1(GRZ)               2ND NTRMS  ENTRY TO GR0         10500020
         SR    GR2,GR0                  SUBT. 2ND NTERMS ENTRY FRM GR2  10520020
         SR    GR1,GR1                  ZERO A WORK REGISTER            10525027
         IC    GR1,0(,GRY)              GET OPERATOR FUNCTION           10530027
         AR    GR1,GR1                  DOUBLE IT                       10535027
         LH    GR1,OPBRANCH(GR1)        GET INDEX BRANCH VALUE          10540027
         B     ASMGF8V(GR1)             THE APPROPRIATE ROUTINE         10545027
OPBRANCH DC    H'1'                     ZERO ERROR                      10550027
         DC    AL2(OPPLS-ASMGF8V)       BINARY PLUS                     10555027
         DC    AL2(OPMINS-ASMGF8V)      BINARY MINUS                    10560027
         DC    AL2(OPUPLS-ASMGF8V)      UNARY PLUS                      10565027
         DC    AL2(OPUMINS-ASMGF8V)     UNARY MINUS                     10570027
         DC    AL2(MULDV-ASMGF8V)       MULTIPLICATION                  10575027
         DC    AL2(MULDV-ASMGF8V)       DIVISION                        10580027
*                                                                       10600020
*  OPERATOR IS SUBTRACTION.  COMPLEMENT 2ND VALUE AND CHANGE THE        10620020
*  RELOCATION SIGN BYTE OF THE TERMS IN THE 2ND VALUE.                  10640020
*                                                                       10642027
OPUMINS  DS    0H                                                       10644027
         CLI   0(GR2),OPPLUS            IS SIGN BYTE + .Q               10646027
         BL    NOCHGU                   BRANCH IF ABSOLUTE              10648027
         BE    PLCHGU                   BRANCH IF SIGN +                10650027
         MVI   0(GR2),OPPLUS            CHANGE - SIGN TO +              10652027
         B     NOCHGU                   AND CONTINUE                    10654027
PLCHGU   DS    0H                                                       10656027
         MVI   0(GR2),OPMINUS           CHANGE + SIGN TO -              10658027
NOCHGU   DS    0H                                                       10660027
         L     GR1,4(,GRX)              GET CURRENT VALUE               10662027
         LCR   GR1,GR1                  COMPLEMENT 2ND TERMS LIST ENTRY 10664027
OPUSET   DS    0H                                                       10666027
         LA    GRX,4(,GRX)              BUMP OPND POINTER               10668027
         L     GR2,NCOMP                RESTORE RLIST POINTER           10670027
         LA    GRZ,1(,GRZ)              UNARY HAS BUT ONE TERM          10672027
         B     STORE                    AND CONTINUE                    10674027
OPUPLS   DS    0H                                                       10676027
         L     GR1,4(,GRX)              GET CURRENT VALUE               10678027
         B     OPUSET                   AND REENTER IT                  10680027
*                                                                       10682027
OPMINS   DS    0H                                                       10684027
         L     GR1,4(,GRX)              GET 2ND TERMS LIST ENTRY        10686027
         LCR   GR1,GR1                  COMPLEMENT 2ND TERMS LIST ENTRY 10700020
         ST    GR1,4(GRX)                                               10720020
CHG      DS    0H                                                       10730027
         CLI   0(GR2),OPPLUS            TEST SIGN BYTE IN 2ND RLIST     10740027
         BL    NOCHG                    BRANCH IF ABS. VALUE            10760020
         BE    PLCHG                    BRANCH IF SIGN +                10780020
         MVI   0(GR2),OPPLUS            CHANGE SIGN TO +                10800027
         B     NOCHG                                                    10820020
PLCHG    DS    0H                                                       10830027
         MVI   0(GR2),OPMINUS           CHANGE SIGN TO -                10840027
NOCHG    DS    0H                                                       10850027
         LA    GR2,2(,GR2)              POINT GR2 TO NEXT ENTRY         10860027
         CL    GR2,NCOMP                ARE THERE MORE ENTRIES          10880020
         BL    CHG                      BRANCH BACK IF MORE ENTRIES     10900020
         SR    GR2,GR0                  SUBT. 2ND NTERMS ENTRY FRM GR2  10920020
*                                                                       10940020
*  OPERATION IS ADDITION OR SUBTRACTION.  SCRATCH ENTRIES IN THE        10960020
*  RELOCATION LIST WHERE POSSIBLE.                                      10980020
*                                                                       11000020
OPPLS    IC    GR0,0(GRZ)               1ST NTRMS  ENTRY TO GR0         11020020
         LR    GR1,GR2                  POINT GR1 TO 2ND NTRMS LIST     11040020
         SR    GR2,GR0                  POINT GR2 TO 1ST NTRMS LIST     11060020
         LR    SP2,GR1                  SAVE GR1 IN SP2                 11080020
BCOMP    DS    0H                                                       11090027
         CLI   0(GR2),OPPLUS            IS FIRST SIGN + (CODE =1)       11100027
         BL    NSCR                     BRANCH IF ABS. VALUE (CODE =0)  11120020
         BH    F2MIN                    BRANCH IF FIRST SIGN -          11140027
         CLI   0(GR1),OPMINUS           IS SECOND SIGN -                11160027
         BL    NSCR                     BRANCH IF SIGN NOT -            11180020
OPP      CLC   1(1,GR2),1(GR1)          COMPARE FIRST TO SECOND ESD-ID  11200020
         BNE   NSCR                     BRANCH IF NOT THE SAME          11220020
         MVI   0(GR2),0                 ZERO TO FIRST SIGN              11240020
         MVI   1(GR2),0                 ZERO TO FIRST ESD-ID            11260020
         MVC   0(2,GR1),0(GR2)          ZERO TO 2ND SIGN AND ESD-ID     11280020
         IC    GR0,RCNTR                SUBTRACT 2 FROM RCNTR           11300020
         BCTR  GR0,0                    MINUS 1                         11320020
         BCTR  GR0,0                      MINUS 1 MORE                  11340020
         STC   GR0,RCNTR                     SAVE                       11360020
         B     NSCR                                                     11380020
F2MIN    DS    0H                                                       11390027
         CLI   0(GR1),OPPLUS            IS SECOND SIGN +                11400027
         BE    OPP                      YES                             11420020
NSCR     LA    GR1,2(GR1)               POINT GR1 TO NEXT IN 2ND RLIST  11440020
         CL    GR1,NCOMP                                                11460020
         BL    BCOMP                    BRANCH BACK IF MORE IN 2ND LIST 11480020
         LA    GR2,2(GR2)               POINT GR2 TO NEXT IN 1ST LIST   11500020
         LR    GR1,SP2                  START OF 2ND LIST BACK TO GR1   11520020
         CLR   GR1,GR2                                                  11540020
         BH    BCOMP                    BRANCH BACK IF MORE IN 1ST LIST 11560020
         L     GR2,NCOMP                NCOMP BACK TO GR2               11580020
         LCR   GR1,GR1                  COMPLEMENT GR1                  11600020
         AR    GR1,GR2                  2ND NTRMS ENTRY TO GR1          11620020
         IC    GR0,0(GRZ)               1ST NTRMS ENTRY TO GR0          11640020
         AR    GR1,GR0                  ADD THE 2 NTRMS ENTRIES         11660020
         STC   GR1,0(GRZ)               SUM TO POSITION OF THE 1ST      11680020
*                                                                       11700020
*  PERFORM ADDITION                                                     11720020
*                                                                       11740020
         L     GR1,0(GRX)               1ST TERMS LIST ENTRY TO GR1     11760020
         A     GR1,4(GRX)               ADD 2ND ENTRY                   11780020
         BO    ERR13             -DUMMY-APPROP. OVERFLOW ROUTINE TO SYS 11800020
STORE    ST    GR1,0(GRX)               RESULT TO 1ST TERMS LIST ENTRY  11820020
         LA    GRX,4(GRX)               BUMP GRX BY 4 (FOR TERMS LIST)  11840020
         LA    GRZ,1(GRZ)               BUMP GRZ BY 1 (FOR NTRMS LIST)  11860020
         B     LOOP                     CONTINUE IN ARITH LOOP          11880020
*                                                                       11900020
*  OPERATOR IS MULTIPLICATION OR DIVISION.  CHECK THAT NO RELOCATABLE   11920020
*  TERMS REMAIN IN THE 2 VALUES.                                        11940020
*                                                                       11960020
MULDV    SR    GR1,GR1                  CLEAR GR1                       11980020
         IC    GR1,0(GRZ)               1ST NTERMS ENTRY TO GR1         12000020
         AR    GR0,GR1                  ADD THE 2 NTRMS ENTRIES         12020020
         STC   GR0,0(GRZ)               SUM TO 1ST ENTRY LOCATION       12040020
         SR    GR2,GR1                  SUBT. 1ST NTRMS ENTRY FROM GR2  12060020
         LA    GR0,2                    2 TO GR0                        12080020
         L     GR1,NCOMP                                                12100020
         SR    GR1,GR0                  C(NCOMP)-2 TO GR1               12120020
MORE     CLI   0(GR2),0                 IS IT A RELOCATABLE VALUE       12140020
         BH    ERR11                    YES, ERROR                      12160020
MORE1    BXLE  GR2,GR0,MORE                                             12180020
         SR    GR1,GR1                  ZERO GR1                        12200020
         C     GR1,4(GRX)                                               12220020
         BE    STORE                    BRANCH IF 2ND TERMS ENTRY =0    12240020
         L     GR0,0(GRX)               1ST TERMS ENTRY TO GR0          12260020
         SRDA  GR0,32                   PROPAGATE SIGN BIT              12280020
         CLI   0(GRY),OPSTAR            IS OPERATOR * OR /              12300027
         BH    DIV                      BRANCH IF /                     12320020
*                                                                       12340020
*  PERFORM MULTIPLICATION                                               12360020
*                                                                       12380020
         M     GR0,4(GRX)               MULTIPLY BY 2ND TERMS ENTRY     12400020
         LTR   GR1,GR1                                                  12420020
         BNL   CHK0                     BRANCH IF LOW-ORDER NON-NEG     12440020
         LCR   GR0,GR0                  COMPLEMENT HIGH-ORDER           12460020
         BCTR  GR0,0                    SUBTRACT 1 FROM THE COMPLEMENT  12480020
CHK0     LTR   GR0,GR0                  SEE IF ZERO                     12500020
         BNZ   ERR13                    ERROR IF HIGH-ORDER NOW NOT=0   12520020
         B     STORE                    SAVE RESULT                     12540020
*                                                                       12560020
*  PERFORM DIVISION                                                     12580020
*                                                                       12600020
DIV      D     GR0,4(GRX)               DIVIDE 1ST BY 2ND TERMS ENTRY   12620020
         B     STORE                    SAVE RESULT                     12640020
*                                                                       12660020
*  END OF EXPRESSION FOUND                                              12680020
*                                                                       12700020
FINIS    TM    F8YDC+1(ACT),X'01'       IS THIS ADCON                   12720020
         BO    NOTST                    YES,ADCON MAY BE 4 BYTES        12740020
         BAL   GRZ,DATATST              RESULT MUST NOT EXCEED 3 BYTES  12760020
NOTST    DS    0H                                                       12780027
         L     SP2,TERMS                MOVE RESULT TO SP2              12800027
         ST    SP2,RLIST-4              RESULT TO HEAD RLIST            12820027
         CLI   ERROR,0                  WERE THERE ERRORS               12840020
         BH    SETE                     YES                             12860020
         CLI   RCNTR,0                  IS IT RELOCATABLE               12880020
         BE    SETRET                   RETURN WITH CC=0 (ABSOLUTE EXP) 12900027
         LA    SP2,RLIST-4              POINTER TO RESULT TO SP2        12920020
         CLI   RCNTR,1                  IS IT COMPLEX RELOCATABLE       12940020
         BH    SETRET                   RETURN WITH CC=2 (COMPLX REL.)  12960027
         LA    GR1,RLIST-2              FIND FIRST AND ONLY RLIST ENTRY 12980020
FIND     LA    GR1,2(GR1)                    WHERE SIGN BYTE NON-ZERO   13000020
         CLI   0(GR1),1                 IS THIS IT                      13020020
         BL    FIND                     NO, KEEP LOOKING                13040020
         BH    SETRET                   RETURN WITH CC=2 (COMPLX REL.)  13060027
         MVC   RLIST(2),0(GR1)          MOVE ENTRY TO TOP OF LIST       13080020
         XC        RLIST+2(30),RLIST+2 ZERO REST OF LIST                13090022
         CLI   0(GR1),2                 SET CC = 1                      13100020
         B     SETRET                   RETURN WITH CC=1 (SIMPLY REL.)  13120027
*                                                                       13140020
DATATST  TM    TERMS,X'FF'              VALUE EXCEEDS 3 BYTES           13160020
         BCR   11,GRZ                   (BNM) NO                        13180027
         STM   SRB,GR2,NCOMP                                            13200020
         L     SP1,FTXPPT               SET COL PTR TO 1ST BYTE         13220020
         L     SRB,CLOGER(ACT)          TO LOGERR                       13240020
         BALR  SRR,SRB                                                  13260020
         DROP  SRB                      SAME THING CONCERNING OUR BASE  13280020
         USING *,SRR                    SO USE TEMP. UNTIL RESTORED     13300020
         DC    AL2(VALTOLG)             ERROR CODE                      13320020
         LM    SRB,GR2,NCOMP            RESTORE                         13340020
         DROP  SRR                      DROP TEMP.                      13360020
         USING EEVAL,SRB                AND USE OURS                    13380020
DATAOK   MVI   TERMS,0                  ZERO 1ST BYTE OF RESULT         13400020
         BR    GRZ                                                      13420020
         EJECT                                                          13440020
*                                                                       13460020
*                                                                       13480020
*  ERROR FOUND                                                          13500020
*                                                                       13520020
* TABLE OF ERROR CODES USED IN EEVAL                                    13540020
INVALID  EQU   18                       INVALID SYMBOL                  13560020
RELERR   EQU   25                  RELOCATABILITY ERROR                 13580020
SELFDEF  EQU   91                  SELF-DEF. VALUE TOO LARGE            13600020
ARITHER  EQU   56                  ARITHMETIC ERROR-OVERFLOW            13620020
UDSERR   EQU   24                  UNDEFINED SYMBOL                     13640020
ILORDER  EQU   85                  TWO TERMS NOT SEPARATE               13660020
ILLCHAR  EQU   85                  ILLEGAL CHARACTER                    13680020
MNYERR   EQU   27                  EXP. CONTAINS MORE THAN CTTERMC TRMS 13700027
OPERR    EQU   85                  TWO OPERATORS ILLEGALLY COUPLED      13720020
PARERR   EQU   26                  TOO MANY LEVELS OF PARENS            13740020
ENDERR   EQU   39                  EXP. END PREMATURE-UNPAIRED PAREN    13760020
VALTOLG  EQU   110              VALUE EXCEEDS RANGE                     13780020
* NON-FATAL ERROR FOUND                                                 13800020
* LOG ERROR, CONTINUE NORMAL PROCESSING                                 13820020
*                                                                       13840020
*  ERROR IS RELOCATABLE TERM INVOLVED IN A MULT. OR DIV. OPERATION      13860020
*                                                                       13880020
ERR11    LA    GRA,MORE1                RETURN ADDRESS                  13900020
         LA    GRB,RELERR          RELOCATABILITY ERROR                 13920020
         B     NFATLER1                                                 13940020
*                                                                       13960020
*  ERROR IS SELF-DEFINING VALUE TOO LARGE                               13980020
*                                                                       14000020
ERR0     LA    GRA,ABSD+6               RETURN ADDRESS                  14020020
         LA    GRB,SELFDEF         SELF-DEF. VALUE TOO LARGE            14040020
         B     NFATLER2                                                 14060020
*                                                                       14080020
* ERROR IS SYMBOL LENGTH                                                14100020
*                                                                       14120020
ERR3     LA    GRA,SCANE                RETURN ADDRESS                  14140020
         LA    GRB,INVALID              SYMBOL TOO LONG                 14160020
         B     ERRXXX                                                   14180020
*                                                                       14200020
*                                                                       14220020
*  ERROR IS ARITHMETIC                                                  14240020
*                                                                       14260020
ERR13    LA    GRA,STORE                RETURN ADDRESS                  14280020
         LA    GRB,ARITHER         ARITHMETIC ERROR                     14300020
         B     NFATLER1                                                 14320020
*                                                                       14340020
* ERROR IS SYMBOL NOT FOUND OR SYMBOL MUST BE PREVIOUSLY DEFINED        14360020
*                                                                       14380020
ERR15    LA    GRA,SCANE                RETURN ADDRESS                  14400020
ERR15B   LA    GRB,UDSERR          UNDEFINED SYMBOL                     14420020
         B     ERRXXX                                                   14440020
*                                                                       14460020
NFATLER1 MVC   ERRPT(4),FTXPPT         SET COL PTR TO 1ST BYTE          14480020
NFATLER2 STM   SRB,GR2,NCOMP            SAVE                            14500020
         L     SP1,ERRPT                ERROR POSITION                  14520020
         B     ERRXX                                                    14540020
*                                                                       14560020
* FATAL ERROR FOUND                                                     14580020
* LOG ERROR, EXIT FROM EEVAL WITH SP1 AND SP2 EQUAL 0                   14600020
*                                                                       14620020
*                                                                       14640020
*ERROR IS ILLEGAL CHARACTER                                             14660020
*                                                                       14680020
ERR9     LA    GRB,ILLCHAR         ILLEGAL CHARACTER                    14700020
         B     FATLER2                                                  14720020
*                                                                       14740020
* ERROR IS TWO CONSECUTIVE OPERATORS                                    14760020
*                                                                       14780020
ERR12    LA    GRB,OPERR           ILLEGAL ORDER OF OPERATORS           14800020
         B     FATLER2                                                  14820020
*                                                                       14840020
*ERROR IS ILLEGAL END OF EXPRESSION OR UNPAIRED PARENS                  14860020
*                                                                       14880020
ERR17    LA    GRB,ENDERR          EXPRESSION END PREMATURE             14900020
         B     FATLER2                                                  14920020
*                                                                       14940020
* ERROR IS TWO CONSECUTIVE TERMS                                        14960020
*                                                                       14980020
ERR10    LA    GRB,ILORDER         ILLEGAL ORDER OF TERMS               15000020
*                                                                       15020020
FATLER1  STM   SRB,GR2,NCOMP            SAVE                            15040020
         L     SP1,ERRPT               PT TO 1ST OF TERM OR EXP.        15060020
         LA    GRA,EXERR                FATAL ERROR EXIT                15080020
         B     ERRXX                                                    15100020
FATLER2   LA   GRA,EXERR                FATAL ERROR EXIT                15120020
*                                                                       15140020
*                                                                       15160020
ERRXXX   STM   SRB,GR2,NCOMP            SAVE                            15180020
ERRXX    STH   GRB,ERCODE               PUT IN ERROR CODE               15200020
         MVI   ERROR,X'FF'         TURN ON ERROR SWITCH                 15220020
ERRLOG   L     SRB,CLOGER(ACT)          LOAD BASE/ENTRY                 15240020
         BALR  SRR,SRB             TO LOGERR                            15260020
         DROP  SRB                      THE SAME BIT ABOUT              15280020
         USING *,SRR                    BASE REGISTER TROUBLE           15300020
ERCODE   DS    AL2                 ERROR CODE                           15320020
         LM    SRB,GR2,NCOMP            RESTORE BASE                    15340020
         DROP  SRR                      SET UP AS WAS BEFORE            15360020
         USING EEVAL,SRB                BASE REGISTER SWITCHING         15380020
         BR    GRA                 NO,CONTINUE PROCESSING EXPRESSION    15400020
EXERR    SR    SP1,SP1               SET SP1 TO ZERO                    15420020
SETE     SR    SP2,SP2             SET SP2 TO ZERO                      15440020
         TM    ERROR,X'FF'         SET CC=3 FOR ERROR CONDITION         15460027
SETRET   DS    0H                                                       15470027
         LM    GRA,GRD,REGSAV           RESTORE VOLATILE REGISTERS      15480027
         BR    SRR                      EXIT                            15500020
         EJECT                                                          15520020
* CONVERT SELF-DEFINING VALUES                                          15540020
* ENTER WITH REGISTER COLR POINTING TO 1ST CHARACTER OF CONSTANT.       15560020
* LOAD REGISTER SHFR WITH CONSTANT TYPE INDICATOR-                      15580020
*        1 = BINARY                                                     15600020
*        3 = DECIMAL                                                    15620020
*        4 = HEX                                                        15640020
*        8 = CHARACTER                                                  15660020
* BRANCH WITH RETURN REGISTER RTNR.                                     15680020
* RETURNS WITH CONVERTED VALUE IN REGISTER VALR, RIGHT JUSTIFIED,       15700020
* SIGNIFICANT CHARACTER COUNT IN REGISTER CNTR, COLR AT 1ST             15720020
* NON-CONSTANT CHARACTER.                                               15740020
* REGISTERS SAVR AND CHAR ARE SCRATCHED.                                15760020
* SINGLE + CAUSES IMMEDIATE RETURN WITH CNTR = 0 AND COLR AT +.         15780020
* LEADING BITS MAY BE LOST IF VALUE TOO LARGE.                          15800020
RETR     EQU    GRZ                     RETURN ADDRESS                  15820020
COLR     EQU    SP1                     POINTER TO CHAR                 15840020
SHFR     EQU   GRX                      SHIFT COUNTER                   15860020
VALR     EQU   SP2                      VALUE                           15880020
SAVR     EQU    GRY                     SAVE FOR VALUE                  15900020
CHAR     EQU    GR0                     CHARACTER                       15920020
CNTR     EQU    GR1                     COUNTER                         15940020
SDVCF    SR    VALR,VALR                CLEAR VALUE                     15960020
         LR    CHAR,VALR                CLEAR CHAR                      15980020
         LR    CNTR,VALR                CLEAR COUNT                     16000020
         STC   SHFR,SDV08+1             STORE SHIFT                     16020020
         CLI   SDV08+1,8                TEST FOR C-CONSTANT             16040020
         BNE   SDV01                    NO                              16060020
         L     VALR,SDV09               YES, LOAD EXTERNAL ZEROES       16080020
SDV01    LA    SAVR,SDV08-1(SHFR)       TEST CHAR RANGE                 16100020
         CLC   0(1,COLR),0(SAVR)                                        16120020
         BH    SDV07                    EXIT ON TOO HIGH                16140020
         IC    CHAR,0(COLR)                                             16160020
         LR    SAVR,VALR                SAVE CUMULATIVE VALUE           16180020
         CLI   SDV08+1,8                TEST FOR C-CONSTANT             16200020
         BNE   SDV04                    NO, TO SHIFT                    16220020
         CLI   0(COLR),IQUOTE           TEST '                          16240020
         BNE   SDV02                    NO                              16260020
         CLI   1(COLR),IQUOTE           TEST ''                         16280020
         BE    SDV03                    YES, TO SKIP                    16300020
         B     SDV07                    NO, EXIT                        16320020
SDV02    CLI   0(COLR),IAMPSD           TEST +                          16340020
         BNE   SDV04                    NO, TO SHIFT                    16360020
         CLI   1(COLR),IAMPSD           TEST ++                         16380020
         BNE   SDV06                    NO, ERROR                       16400020
SDV03    LA    COLR,1(COLR)             SKIP ' OR +                     16420020
SDV04    DS    0H                                                 V7A15 16440028
         CLI   SDV08+1,3                TEST FOR DECIMAL CONSTANT V7A15 16442028
         BNE   SDV05                    BRANCH IF NOT             V7A15 16444028
         SLA   VALR,0(SHFR)             OLD VALUE TIMES EIGHT     V7A15 16446028
         BO    SDVOFLO                  ERROR IF OVERFLOW         V7A15 16448028
         AR    SAVR,SAVR                TWICE OLD VALUE           V7A15 16450028
         AR    VALR,SAVR                TEN TIMES OLD VALUE       V7A15 16452028
         BO    SDVOFLO                  BRANCH IF OVERFLOW        V7A15 16454028
         AR    VALR,CHAR                PLUS NEXT DIGIT           V7A15 16460028
         BNO   SDV05A                   BRANCH IF NO OVERFLOW     V7A15 16470028
SDVOFLO  DS    0H                                                 V7A15 16480028
         LA    CNTR,10                  TOO MANY DECIMAL DIGITS   V7A15 16490028
         B     SDV05A                   AND CONTINUE              V7A15 16500028
SDV05    DS    0H                                                 V7A15 16510028
         SLL   VALR,0(SHFR)             SHIFT OLD VALUE           V7A15 16520028
         ALR   VALR,CHAR                ADD CHAR TO VALUE         V7A15 16530028
SDV05A   DS    0H                                                 V7A15 16540028
         LA    CNTR,1(CNTR)             STEP COUNT                      16560020
         LA    COLR,1(COLR)             STEP COLUMN POINTER             16580020
         B     SDV01                    TO NEXT CHAR                    16600020
SDV06    SR    CNTR,CNTR                CLEAR COUNT FOR ERROR           16620020
SDV07    BR    RETR                     EXIT                            16640020
*                                                                       16660020
*                                                                       16680020
SDV08    DC    X'0100090F000000FF'      LIMITS                          16700020
         DS    0F                                                       16720020
SDV09    DC    X'F0F0F0F0'              EBCDIC ZEROES                   16740020
LOW16    DC    F'65535'                 LAST SIXTEEN BITS ON      V7A51 16745028
FSEVEN   DC    F'7'                     FULLWORD CONSTANT               16750027
REGSAV   DS    4F                       SAVE AREA FOR F8V VOLATILE REGS 16760027
REGSAV1   DS   F                                                        16780020
ERRPT    DS    F                       SAV AREA FOR COL PTR             16800020
FTXPPT   DS    F                       SAV AREA FOR PTR TO 1ST BYTE     16820020
OTHERR   DC    X'00'                   SWITH FOR ERR PATH,0-OFF,1-ON    16840020
FATAL    DC    X'00'               FATAL ERR SWH (0=NON-FATAL,1=FATAL)  16860020
*        START OF TERMS WORK AREA                                       16870027
TERMSWK  DSECT                                                          16875027
TERMS    DS    25F                      LIST OF VALUES                  16880027
RLIST    DS    25H                      RELOCATABILITY LIST             16900027
RCNTR    DS    C                        COUNTER OF RELOCATABLE TERMS    16920020
ERROR    DS    C                        ON(1), OFF(0)                   16940020
PCNTR    DS    C                        COUNTER OF LEVEL OF '('         16960027
SYMBL    DS    C         0=SYM 1ST TERM,1=NOT 1ST TERM,255=SYM NOT FND  16980020
NTRMS    DS    25C                      NUMBER OF TERMS PER TERMS ENTRY 17000027
OPRNS    DS    40C                      LIST OF OPERATIONS              17020027
COND     DS    C                        VALIDITY INDICATOR              17040020
ENDOE    DS    C                        END EXPRESSION FLAG             17060020
NEWOP    DS    C                        LATEST OPERATION FOUND          17080020
LREF     DS    C                        L'SYM REF  ON(1) OFF(0)         17100020
TERMSLEN EQU   *-TERMS                  LENGTH OF TERMS WORK AREA       17110027
ASMGF8V  CSECT                          AS YOU WERE                     17115027
NCOMP    DS    11F                      GENERAL SAVE AREA               17120020
SAVE     EQU   NCOMP                                                    17140020
         EJECT                                                          17150027
*********************************************************************** 17160027
*         *PREVIOUS*                                                  * 17162027
*  CHAR   *  COND  *     ACTION                                       * 17164027
*********************************************************************** 17166027
* START   *   --   * SET COND = 0                                       17168027
*********************************************************************** 17170027
*  (      *0/1/2/3 * SET COND = 1                                       17172027
*         *4/5     * IF PCNTR GT CTTERMC, LOG ASMG026                   17174027
*********************************************************************** 17176027
*  )      *0/1/2/3 * LOG ASMG085                                        17178027
*         *4/5     * SET COND = 4, IF PCNTR=0 END EXPRESSION            17180027
*********************************************************************** 17182027
*  +-     *0       * SET INITIAL ZERO TERM                              17184027
*         *1/2/3   * SET COND = 2                                       17186027
*         *4/5     * SET COND = 1                                       17188027
*********************************************************************** 17190027
*  *      *0/1/2   * SET COND = 5, * IS LOCATION COUNTER                17192027
*         *3       * LOG ASMG085                                        17194027
*         *4       * SET COND = 3, * IS MULT                            17196027
*         *5       * LOG ASMG025                                        17198027
*********************************************************************** 17200027
*  /      *0/1/2/3 * LOG ASMG085                                        17202027
*         *4       * SET COND =3                                        17204027
*         *5       * LOG ASMG025                                        17206027
*********************************************************************** 17208027
*ABSOLUTE *0/1/2/3 * SET COND = 4                                       17210027
*TERM     *4/5     * LOG ASMG085                                        17212027
*********************************************************************** 17214027
*RELOCAT- *0/1/2   * SET COND = 5                                       17216027
*ABLE TERM*3       * LOG ASMG025                                        17218027
*         *4/5     * LOG ASMG085                                        17220027
*********************************************************************** 17222027
*,OR BLANK*0/1/2/3 * LOG ASMG039                                        17224027
*         *4/5     * IF PCNTR GT 0, LOG ASMG039                         17226027
*********************************************************************** 17228027
*                                                                       17230027
CONDA    EQU   0                        INITIAL COND SETTING            17232027
CONDB    EQU   1                        LEFT PAREN, BINARY + OR -       17233027
CONDC    EQU   2                        UNARY + OR -                    17234027
CONDD    EQU   3                        ASTERISK OR SLASH               17235027
CONDE    EQU   4                        ABSOLUTE TERM OR RIGHT PAREN    17236027
CONDF    EQU   5                        RELOCATABLE TERM                17237027
*                                                                       17238027
*        HEIRARCHY CODES FOR OPRNS                                      17239027
OPEND    EQU   0                        BLANK OR COMMA                  17240027
OPPLUS   EQU   1                        BINARY PLUS                     17241027
OPMINUS  EQU   2                        BINARY MINUS                    17242027
OPUPLUS  EQU   3                        UNARY PLUS                      17243027
OPUMINUS EQU   4                        UNARY MINUS                     17244027
OPSTAR   EQU   5                        MULTIPLICATION                  17245027
OPSLASH  EQU   6                        DIVISION                        17246027
*                                                                       17247027
         END                                                            17260020
./ ADD NAME=ASMGIS00
IS00     TITLE     'INSTRUCTION SET COMPATIBLE WITH ASSEMBLER (F)'      00020026
         ISEQ      73,78                                                00040021
ASMGIS00 INSTSET                                                        00060020
A        INST  OP=5A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00080020
               LIT1=NO,LIT23=YES                                        00100020
B        INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00120020
               LIT1=NO,LIT23=YES,MASK=2F                                00140020
C        INST  OP=59,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00160020
               LIT1=NO,LIT23=YES                                        00180020
D        INST  OP=5D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00200020
               LIT1=NO,LIT23=YES                                        00220020
L        INST  OP=58,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00240020
               LIT1=NO,LIT23=YES                                        00260020
M        INST  OP=5C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00280020
               LIT1=NO,LIT23=YES                                        00300020
N        INST  OP=54,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00320020
               LIT1=NO,LIT23=YES                                        00340020
O        INST  OP=56,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00360020
               LIT1=NO,LIT23=YES                                        00380020
S        INST  OP=5B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00400020
               LIT1=NO,LIT23=YES                                        00420020
X        INST  OP=57,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00440020
               LIT1=NO,LIT23=YES                                        00460020
AD       INST  OP=6A,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00480020
               LIT1=NO,LIT23=YES                                        00500020
AE       INST  OP=7A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00520020
               LIT1=NO,LIT23=YES                                        00540020
AH       INST  OP=4A,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00560020
               LIT1=NO,LIT23=YES                                        00580020
AL       INST  OP=5E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00600020
               LIT1=NO,LIT23=YES                                        00620020
AP       INST  OP=FA,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00640020
               LIT1=NO,LIT23=YES                                        00660020
AR       INST  OP=1A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00680020
               LIT1=NO,LIT23=NO                                         00700020
AU       INST  OP=7E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00720020
               LIT1=NO,LIT23=YES                                        00740020
AW       INST  OP=6E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00760020
               LIT1=NO,LIT23=YES                                        00780020
BC       INST  OP=47,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00800020
               LIT1=NO,LIT23=YES                                        00820020
BE       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00840020
               LIT1=NO,LIT23=YES,MASK=28                                00860020
BH       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00880020
               LIT1=NO,LIT23=YES,MASK=22                                00900020
BL       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00920020
               LIT1=NO,LIT23=YES,MASK=24                                00940020
BM       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00960020
               LIT1=NO,LIT23=YES,MASK=24                                00980020
BO       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01000020
               LIT1=NO,LIT23=YES,MASK=21                                01020020
BP       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01040020
               LIT1=NO,LIT23=YES,MASK=22                                01060020
BR       INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01080020
               LIT1=NO,LIT23=NO,MASK=2F                                 01100020
BZ       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01120020
               LIT1=NO,LIT23=YES,MASK=28                                01140020
CD       INST  OP=69,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01160020
               LIT1=NO,LIT23=YES                                        01180020
CE       INST  OP=79,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01200020
               LIT1=NO,LIT23=YES                                        01220020
CH       INST  OP=49,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01240020
               LIT1=NO,LIT23=YES                                        01260020
CL       INST  OP=55,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01280020
               LIT1=NO,LIT23=YES                                        01300020
CP       INST  OP=F9,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01320020
               LIT1=YES,LIT23=YES                                       01340020
CR       INST  OP=19,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01360020
               LIT1=NO,LIT23=NO                                         01380020
CS       INST  OP=BA,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,               ,01390027
               EVEN=NO,LIT1=NO,LIT23=NO                                 01395027
DC       INST  OP=26,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01400020
               SUB=NO,F8UPC=YES,MASK=02                                 01420020
DD       INST  OP=6D,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01440020
               LIT1=NO,LIT23=YES                                        01460020
DE       INST  OP=7D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01480020
               LIT1=NO,LIT23=YES                                        01500020
DP       INST  OP=FD,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01520020
               LIT1=NO,LIT23=YES                                        01540020
DR       INST  OP=1D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,01560020
               LIT1=NO,LIT23=NO                                         01580020
DS       INST  OP=27,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01600020
               SUB=NO,F8UPC=YES,MASK=02                                 01620020
ED       INST  OP=DE,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01640020
               LIT1=NO,LIT23=YES                                        01660020
EX       INST  OP=44,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01680020
               LIT1=NO,LIT23=YES                                        01700020
IC       INST  OP=43,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01720020
               LIT1=NO,LIT23=YES                                        01740020
LA       INST  OP=41,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01760020
               LIT1=NO,LIT23=YES                                        01780020
LD       INST  OP=68,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01800020
               LIT1=NO,LIT23=YES                                        01820020
LE       INST  OP=78,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01840020
               LIT1=NO,LIT23=YES                                        01860020
LH       INST  OP=48,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01880020
               LIT1=NO,LIT23=YES                                        01900020
LM       INST  OP=98,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01920020
               LIT1=NO,LIT23=YES                                        01940020
LR       INST  OP=18,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01960020
               LIT1=NO,LIT23=NO                                         01980020
MC       INST  OP=AF,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01990025
               LIT1=YES,LIT23=NO                                        01995026
MD       INST  OP=6C,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02000020
               LIT1=NO,LIT23=YES                                        02020020
ME       INST  OP=7C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02040020
               LIT1=NO,LIT23=YES                                        02060020
MH       INST  OP=4C,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02080020
               LIT1=NO,LIT23=YES                                        02100020
MP       INST  OP=FC,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02120020
               LIT1=NO,LIT23=YES                                        02140020
MR       INST  OP=1C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,02160020
               LIT1=NO,LIT23=NO                                         02180020
NC       INST  OP=D4,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02200020
               LIT1=NO,LIT23=YES                                        02220020
NI       INST  OP=94,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02240020
               LIT1=NO,LIT23=NO                                         02260020
NR       INST  OP=14,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02280020
               LIT1=NO,LIT23=NO                                         02300020
OC       INST  OP=D6,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02320020
               LIT1=NO,LIT23=YES                                        02340020
OI       INST  OP=96,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02360020
               LIT1=NO,LIT23=NO                                         02380020
OR       INST  OP=16,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02400020
               LIT1=NO,LIT23=NO                                         02420020
SD       INST  OP=6B,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02440020
               LIT1=NO,LIT23=YES                                        02460020
SE       INST  OP=7B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02480020
               LIT1=NO,LIT23=YES                                        02500020
SH       INST  OP=4B,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02520020
               LIT1=NO,LIT23=YES                                        02540020
SL       INST  OP=5F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02560020
               LIT1=NO,LIT23=YES                                        02580020
SP       INST  OP=FB,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02600020
               LIT1=NO,LIT23=YES                                        02620020
SR       INST  OP=1B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02640020
               LIT1=NO,LIT23=NO                                         02660020
ST       INST  OP=50,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02680020
               LIT1=NO,LIT23=NO                                         02700020
SU       INST  OP=7F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02720020
               LIT1=NO,LIT23=YES                                        02740020
SW       INST  OP=6F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02760020
               LIT1=NO,LIT23=YES                                        02780020
TM       INST  OP=91,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02800020
               LIT1=YES,LIT23=NO                                        02820020
TR       INST  OP=DC,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02840020
               LIT1=NO,LIT23=YES                                        02860020
TS       INST  OP=93,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02880020
               LIT1=NO,LIT23=NO                                         02900020
XC       INST  OP=D7,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02920020
               LIT1=NO,LIT23=YES                                        02940020
XI       INST  OP=97,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02960020
               LIT1=NO,LIT23=NO                                         02980020
XR       INST  OP=17,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03000020
               LIT1=NO,LIT23=NO                                         03020020
ADR      INST  OP=2A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03040020
               LIT1=NO,LIT23=NO                                         03060020
AER      INST  OP=3A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03080020
               LIT1=NO,LIT23=NO                                         03100020
AGO      INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03120020
               SUB=NO,F8UPC=NO,MASK=00                                  03140020
AIF      INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03160020
               SUB=NO,F8UPC=NO,MASK=00                                  03180020
ALR      INST  OP=1E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03200020
               LIT1=NO,LIT23=NO                                         03220020
AUR      INST  OP=3E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03240020
               LIT1=NO,LIT23=NO                                         03260020
AWR      INST  OP=2E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03280020
               LIT1=NO,LIT23=NO                                         03300020
AXR      INST  OP=36,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,03310023
               LIT1=NO,LIT23=NO                                         03315023
BAL      INST  OP=45,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03320020
               LIT1=NO,LIT23=YES                                        03340020
BCR      INST  OP=07,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03360020
               LIT1=NO,LIT23=NO                                         03380020
BCT      INST  OP=46,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03400020
               LIT1=NO,LIT23=YES                                        03420020
BNE      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03440020
               LIT1=NO,LIT23=YES,MASK=27                                03460020
BNH      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03480020
               LIT1=NO,LIT23=YES,MASK=2D                                03500020
BNL      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03520020
               LIT1=NO,LIT23=YES,MASK=2B                                03540020
BNM      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03560020
               LIT1=NO,LIT23=YES,MASK=2B                                03580020
BNO      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03600020
               LIT1=NO,LIT23=YES,MASK=2E                                03620020
BNP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03640020
               LIT1=NO,LIT23=YES,MASK=2D                                03660020
BNZ      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03680020
               LIT1=NO,LIT23=YES,MASK=27                                03700020
BXH      INST  OP=86,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03720020
               LIT1=NO,LIT23=YES                                        03740020
CCW      INST  OP=28,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=YES,    ,03760020
               SUB=YES,F8UPC=YES,MASK=00                                03780020
CDR      INST  OP=29,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03800020
               LIT1=NO,LIT23=NO                                         03820020
CDS      INST  OP=BB,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,               ,03830027
               EVEN=NO,LIT1=NO,LIT23=NO                                 03835027
CER      INST  OP=39,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03840020
               LIT1=NO,LIT23=NO                                         03860020
CLC      INST  OP=D5,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03880020
               LIT1=YES,LIT23=YES                                       03900020
CLI      INST  OP=95,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03920020
               LIT1=YES,LIT23=NO                                        03940020
CLM      INST  OP=BD,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,03950025
               ALIGN=C,LIT1=NO,LIT23=YES                                03955025
CLR      INST  OP=15,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03960020
               LIT1=NO,LIT23=NO                                         03980020
COM      INST  OP=1E,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04000023
               SUB=NO,F8UPC=YES,MASK=00                                 04020023
CVB      INST  OP=4F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04040020
               LIT1=NO,LIT23=YES                                        04060020
CVD      INST  OP=4E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04080020
               LIT1=NO,LIT23=NO                                         04100020
CXD      INST  OP=2C,TYPE=ASSEM,UPC=YES,STE=YES,LCR=NO,F7XREF=NO,      ,04120020
               SUB=NO,F8UPC=YES,MASK=00                                 04140020
DDR      INST  OP=2D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04160020
               LIT1=NO,LIT23=NO                                         04180020
DER      INST  OP=3D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04200020
               LIT1=NO,LIT23=NO                                         04220020
DXD      INST  OP=2B,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04240020
               SUB=NO,F8UPC=YES,MASK=0A                                 04260020
END      INST  OP=21,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,04280020
               SUB=YES,F8UPC=NO,MASK=04                                 04300020
EQU      INST  OP=1F,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,04320020
               SUB=YES,F8UPC=NO,MASK=0A                                 04340020
HDR      INST  OP=24,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04360020
               LIT1=NO,LIT23=NO                                         04380020
HDV      INST  OP=9E,TYPE=EXTEN,FLOAT=NO,EVEN=NO,ALIGN=C,              ,04390024
               CLASS=3,LIT1=NO,LIT23=NO,MASK=21                         04395024
HER      INST  OP=34,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04400020
               LIT1=NO,LIT23=NO                                         04420020
HIO      INST  OP=9E,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04440020
               LIT1=NO,LIT23=NO                                         04460020
ICM      INST  OP=BF,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,04470025
               ALIGN=C,LIT1=NO,LIT23=YES                                04475025
IPK      INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,04477027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=2B                         04478027
ISK      INST  OP=09,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04480020
               LIT1=NO,LIT23=NO                                         04500020
LCR      INST  OP=13,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04520020
               LIT1=NO,LIT23=NO                                         04540020
LDR      INST  OP=28,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04560020
               LIT1=NO,LIT23=NO                                         04580020
LER      INST  OP=38,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04600020
               LIT1=NO,LIT23=NO                                         04620020
LNR      INST  OP=11,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04640020
               LIT1=NO,LIT23=NO                                         04660020
LPR      INST  OP=10,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04680020
               LIT1=NO,LIT23=NO                                         04700020
LRA      INST  OP=B1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,               ,04710026
               EVEN=NO,LIT1=NO,LIT23=YES                                04715026
LTR      INST  OP=12,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04720020
               LIT1=NO,LIT23=NO                                         04740020
MDR      INST  OP=2C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04760020
               LIT1=NO,LIT23=NO                                         04780020
MER      INST  OP=3C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04800020
               LIT1=NO,LIT23=NO                                         04820020
MVC      INST  OP=D2,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04840020
               LIT1=NO,LIT23=YES                                        04860020
MVI      INST  OP=92,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04880020
               LIT1=NO,LIT23=NO                                         04900020
MVN      INST  OP=D1,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04920020
               LIT1=NO,LIT23=YES                                        04940020
MVO      INST  OP=F1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04960020
               LIT1=NO,LIT23=YES                                        04980020
MVZ      INST  OP=D3,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05000020
               LIT1=NO,LIT23=YES                                        05020020
MXD      INST  OP=67,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=DOUBLE,  ,05024023
               LIT1=NO,LIT23=YES                                        05028023
MXR      INST  OP=26,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,05032023
               LIT1=NO,LIT23=NO                                         05036023
NOP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,05040020
               LIT1=NO,LIT23=YES,MASK=20                                05060020
ORG      INST  OP=20,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,05080020
               SUB=YES,F8UPC=YES,MASK=04                                05100020
RDD      INST  OP=85,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05120020
               LIT1=NO,LIT23=NO                                         05140020
RRB      INST  OP=B3,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,  *OP=B2*     ,05142027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=23                         05144027
SCK      INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,05150025
               ALIGN=C,LIT1=YES,LIT23=NO,MASK=24                        05155026
SDR      INST  OP=2B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05160020
               LIT1=NO,LIT23=NO                                         05180020
SER      INST  OP=3B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05200020
               LIT1=NO,LIT23=NO                                         05220020
SIO      INST  OP=9C,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05240020
               LIT1=NO,LIT23=NO                                         05260020
SLA      INST  OP=8B,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05280020
               LIT1=NO,LIT23=NO                                         05300020
SLL      INST  OP=89,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05320020
               LIT1=NO,LIT23=NO                                         05340020
SLR      INST  OP=1F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05360020
               LIT1=NO,LIT23=NO                                         05380020
SPM      INST  OP=04,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05400020
               LIT1=NO,LIT23=NO                                         05420020
SPT      INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,05430026
               ALIGN=D,LIT1=YES,LIT23=NO,MASK=28                        05435026
SPX      INST  OP=B3,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,  *OP=B2*     ,05437027
               ALIGN=F,LIT1=NO,LIT23=YES,MASK=20                        05438027
SRA      INST  OP=8A,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05440020
               LIT1=NO,LIT23=NO                                         05460020
SRL      INST  OP=88,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05480020
               LIT1=NO,LIT23=NO                                         05500020
SRP      INST  OP=F0,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=3,               ,05510025
               ALIGN=C,LIT1=NO,LIT23=NO                                 05515026
SSK      INST  OP=08,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05520020
               LIT1=NO,LIT23=NO                                         05540020
SSM      INST  OP=80,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05560020
               LIT1=YES,LIT23=NO                                        05580020
STC      INST  OP=42,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05600020
               LIT1=NO,LIT23=NO                                         05620020
STD      INST  OP=60,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,05640020
               LIT1=NO,LIT23=NO                                         05660020
STE      INST  OP=70,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,05680020
               LIT1=NO,LIT23=NO                                         05700020
STH      INST  OP=40,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,05720020
               LIT1=NO,LIT23=NO                                         05740020
STM      INST  OP=90,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,05760020
               LIT1=NO,LIT23=NO                                         05780020
SUR      INST  OP=3F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05800020
               LIT1=NO,LIT23=NO                                         05820020
SVC      INST  OP=0A,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05840020
               LIT1=NO,LIT23=NO                                         05860020
SWR      INST  OP=2F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05880020
               LIT1=NO,LIT23=NO                                         05900020
SXR      INST  OP=37,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,05910023
               LIT1=NO,LIT23=NO                                         05915023
TCH      INST  OP=9F,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05920020
               LIT1=NO,LIT23=NO                                         05940020
TIO      INST  OP=9D,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05960020
               LIT1=NO,LIT23=NO                                         05980020
TRT      INST  OP=DD,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06000020
               LIT1=YES,LIT23=YES                                       06020020
WRD      INST  OP=84,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06040020
               LIT1=YES,LIT23=NO                                        06060020
ZAP      INST  OP=F8,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06080020
               LIT1=NO,LIT23=YES                                        06100020
ACTR     INST  OP=25,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06120020
               SUB=NO,F8UPC=NO,MASK=00                                  06140020
ANOP     INST  OP=0B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06160020
               SUB=NO,F8UPC=NO,MASK=00                                  06180020
BALR     INST  OP=05,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06200020
               LIT1=NO,LIT23=NO                                         06220020
BCTR     INST  OP=06,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06240020
               LIT1=NO,LIT23=NO                                         06260020
BXLE     INST  OP=87,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,06280020
               LIT1=NO,LIT23=YES                                        06300020
CLCL     INST  OP=0F,TYPE=MACH,FLOAT=NO,EVEN=YES,CLASS=0,              ,06310025
               ALIGN=C,LIT1=NO,LIT23=NO                                 06315025
CNOP     INST  OP=29,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=NO,      ,06320020
               SUB=YES,F8UPC=YES,MASK=06                                06340020
COPY     INST  OP=0C,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06360020
               SUB=NO,F8UPC=NO,MASK=00                                  06380020
DROP     INST  OP=24,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,06400020
               SUB=YES,F8UPC=YES,MASK=06                                06420020
EDMK     INST  OP=DF,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06440020
               LIT1=NO,LIT23=YES                                        06460020
GBLA     INST  OP=00,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06480020
               SUB=NO,F8UPC=NO,MASK=00                                  06500020
GBLB     INST  OP=01,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06520020
               SUB=NO,F8UPC=NO,MASK=00                                  06540020
GBLC     INST  OP=02,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06560020
               SUB=NO,F8UPC=NO,MASK=00                                  06580020
ICTL     INST  OP=11,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06600020
               SUB=NO,F8UPC=NO,MASK=00                                  06620020
ISEQ     INST  OP=12,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06640020
               SUB=NO,F8UPC=NO,MASK=00                                  06660020
LCDR     INST  OP=23,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06680020
               LIT1=NO,LIT23=NO                                         06700020
LCER     INST  OP=33,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06720020
               LIT1=NO,LIT23=NO                                         06740020
LCLA     INST  OP=03,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06760020
               SUB=NO,F8UPC=NO,MASK=00                                  06780020
LCLB     INST  OP=04,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06800020
               SUB=NO,F8UPC=NO,MASK=00                                  06820020
LCLC     INST  OP=05,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06840020
               SUB=NO,F8UPC=NO,MASK=00                                  06860020
LCTL     INST  OP=B7,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,06870025
               ALIGN=F,LIT1=NO,LIT23=YES                                06875025
LNDR     INST  OP=21,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06880020
               LIT1=NO,LIT23=NO                                         06900020
LNER     INST  OP=31,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06920020
               LIT1=NO,LIT23=NO                                         06940020
LPDR     INST  OP=20,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06960020
               LIT1=NO,LIT23=NO                                         06980020
LPER     INST  OP=30,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07000020
               LIT1=NO,LIT23=NO                                         07020020
LPSW     INST  OP=82,TYPE=MACH,CLASS=3,ALIGN=D,FLOAT=NO,EVEN=NO,       ,07040020
               LIT1=YES,LIT23=NO                                        07060020
LRDR     INST  OP=25,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07064023
               LIT1=NO,LIT23=NO                                         07068023
LRER     INST  OP=35,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07072023
               LIT1=NO,LIT23=NO                                         07076023
LTDR     INST  OP=22,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07080020
               LIT1=NO,LIT23=NO                                         07100020
LTER     INST  OP=32,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07120020
               LIT1=NO,LIT23=NO                                         07140020
MEND     INST  OP=10,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07160020
               SUB=NO,F8UPC=NO,MASK=00                                  07180020
MVCL     INST  OP=0E,TYPE=MACH,FLOAT=NO,EVEN=YES,CLASS=0,              ,07182025
               ALIGN=C,LIT1=NO,LIT23=NO                                 07184025
MXDR     INST  OP=27,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,07190023
               LIT1=NO,LIT23=NO                                         07195023
NOPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07200020
               LIT1=NO,LIT23=NO,MASK=20                                 07220020
PACK     INST  OP=F2,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07240020
               LIT1=NO,LIT23=YES                                        07260020
PTLB     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,07270026
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=2D                         07272026
SCKC     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,07274026
               ALIGN=D,LIT1=YES,LIT23=NO,MASK=26                        07276026
SETA     INST  OP=06,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07280020
               SUB=NO,F8UPC=NO,MASK=00                                  07300020
SETB     INST  OP=07,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07320020
               SUB=NO,F8UPC=NO,MASK=00                                  07340020
SETC     INST  OP=08,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07360020
               SUB=NO,F8UPC=NO,MASK=00                                  07380020
SIGP     INST  OP=AE,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,               ,07382027
               EVEN=NO,LIT1=NO,LIT23=NO                                 07384027
SIOF     INST  OP=9C,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,07390025
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=21                         07395025
SLDA     INST  OP=8F,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07400020
               LIT1=NO,LIT23=NO                                         07420020
SLDL     INST  OP=8D,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07440020
               LIT1=NO,LIT23=NO                                         07460020
SPKA     INST  OP=B2,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,              ,07470027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=2A                         07475027
SRDA     INST  OP=8E,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07480020
               LIT1=NO,LIT23=NO                                         07500020
SRDL     INST  OP=8C,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07520020
               LIT1=NO,LIT23=NO                                         07540020
STAP     INST  OP=B3,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,  *OP=B2*     ,07542027
               ALIGN=H,LIT1=NO,LIT23=NO,MASK=22                         07543027
STCK     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,07544025
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=25                         07546026
STCM     INST  OP=BE,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,07554025
               ALIGN=C,LIT1=NO,LIT23=NO                                 07556025
STPT     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,07557026
               ALIGN=D,LIT1=NO,LIT23=NO,MASK=29                         07558026
STPX     INST  OP=B3,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,  *OP=B2*     ,07559027
               ALIGN=F,LIT1=NO,LIT23=NO,MASK=21                         07559527
UNPK     INST  OP=F3,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07560020
               LIT1=NO,LIT23=YES                                        07580020
AIFB     INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07600020
               SUB=NO,F8UPC=NO,MASK=00                                  07620020
AGOB     INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07640020
               SUB=NO,F8UPC=NO,MASK=00                                  07660020
CLRIO    INST  OP=9D,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,07670027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=21                         07675027
CSECT    INST  OP=1C,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,07680020
               SUB=NO,F8UPC=YES,MASK=00                                 07700020
DSECT    INST  OP=1D,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,07720020
               SUB=NO,F8UPC=YES,MASK=08                                 07740020
EJECT    INST  OP=15,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07760020
               SUB=NO,F8UPC=NO,MASK=04                                  07780020
ENTRY    INST  OP=19,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,07800020
               SUB=NO,F8UPC=NO,MASK=06                                  07820020
EXTRN    INST  OP=1A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07840020
               SUB=NO,F8UPC=NO,MASK=06                                  07860020
LTORG    INST  OP=22,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,07880020
               SUB=YES,F8UPC=YES,MASK=00                                07900020
MACRO    INST  OP=0D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07920020
               SUB=NO,F8UPC=NO,MASK=00                                  07940020
MEXIT    INST  OP=0F,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07960020
               SUB=NO,F8UPC=NO,MASK=00                                  07980020
MNOTE    INST  OP=0E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08000020
               SUB=NO,F8UPC=NO,MASK=00                                  08020020
OPSYN    INST  OP=2D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08030023
               SUB=NO,F8UPC=NO,MASK=08                                  08035023
PRINT    INST  OP=13,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08040020
               SUB=NO,F8UPC=NO,MASK=04                                  08060020
PUNCH    INST  OP=16,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08080020
               SUB=NO,F8UPC=NO,MASK=06                                  08100020
REPRO    INST  OP=17,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08120020
               SUB=NO,F8UPC=NO,MASK=04                                  08140020
SPACE    INST  OP=14,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08160020
               SUB=NO,F8UPC=NO,MASK=04                                  08180020
START    INST  OP=1B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08200020
               SUB=NO,F8UPC=YES,MASK=00                                 08220020
STCKC    INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,08221026
               ALIGN=D,LIT1=NO,LIT23=NO,MASK=27                         08222026
STCTL    INST  OP=B6,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,08224025
               ALIGN=F,LIT1=NO,LIT23=NO                                 08226025
STIDC    INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,08228025
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=23                         08230025
STIDP    INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,08232025
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=22                         08234025
STNSM    INST  OP=AC,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,08235026
               LIT1=NO,LIT23=NO                                         08236026
STOSM    INST  OP=AD,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,08237026
               LIT1=NO,LIT23=NO                                         08238026
TITLE    INST  OP=18,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08240020
               SUB=NO,F8UPC=NO,MASK=00                                  08260020
USING    INST  OP=23,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,08280020
               SUB=YES,F8UPC=YES,MASK=06                                08300020
WXTRN    INST  OP=2E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08310025
               SUB=NO,F8UPC=NO,MASK=06                                  08315025
GLDEND   EQU       *                                                    08320023
         END                                                            08340020
./ ADD NAME=ASMGIS02
IS02     TITLE     'RESTRICTED INSTRUCTION SET FOR SYSTEM 360 MACHINES' 00020026
         ISEQ      73,78                                                00040026
*                                                                       00060026
         COPY      ASMGSET                                              00080026
ASMGIS02 INSTSET                                                        00100026
A        INST  OP=5A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00120026
               LIT1=NO,LIT23=YES                                        00140026
B        INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00160026
               LIT1=NO,LIT23=YES,MASK=2F                                00180026
C        INST  OP=59,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00200026
               LIT1=NO,LIT23=YES                                        00220026
D        INST  OP=5D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00240026
               LIT1=NO,LIT23=YES                                        00260026
L        INST  OP=58,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00280026
               LIT1=NO,LIT23=YES                                        00300026
M        INST  OP=5C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00320026
               LIT1=NO,LIT23=YES                                        00340026
N        INST  OP=54,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00360026
               LIT1=NO,LIT23=YES                                        00380026
O        INST  OP=56,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00400026
               LIT1=NO,LIT23=YES                                        00420026
S        INST  OP=5B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00440026
               LIT1=NO,LIT23=YES                                        00460026
X        INST  OP=57,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00480026
               LIT1=NO,LIT23=YES                                        00500026
AD       INST  OP=6A,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00520026
               LIT1=NO,LIT23=YES                                        00540026
AE       INST  OP=7A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00560026
               LIT1=NO,LIT23=YES                                        00580026
AH       INST  OP=4A,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00600026
               LIT1=NO,LIT23=YES                                        00620026
AL       INST  OP=5E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00640026
               LIT1=NO,LIT23=YES                                        00660026
AR       INST  OP=1A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00680026
               LIT1=NO,LIT23=NO                                         00700026
AU       INST  OP=7E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00720026
               LIT1=NO,LIT23=YES                                        00740026
AW       INST  OP=6E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00760026
               LIT1=NO,LIT23=YES                                        00780026
BC       INST  OP=47,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00800026
               LIT1=NO,LIT23=YES                                        00820026
BE       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00840026
               LIT1=NO,LIT23=YES,MASK=28                                00860026
BH       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00880026
               LIT1=NO,LIT23=YES,MASK=22                                00900026
BL       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00920026
               LIT1=NO,LIT23=YES,MASK=24                                00940026
BM       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00960026
               LIT1=NO,LIT23=YES,MASK=24                                00980026
BO       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01000026
               LIT1=NO,LIT23=YES,MASK=21                                01020026
BP       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01040026
               LIT1=NO,LIT23=YES,MASK=22                                01060026
BR       INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01080026
               LIT1=NO,LIT23=NO,MASK=2F                                 01100026
BZ       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01120026
               LIT1=NO,LIT23=YES,MASK=28                                01140026
CD       INST  OP=69,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01160026
               LIT1=NO,LIT23=YES                                        01180026
CE       INST  OP=79,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01200026
               LIT1=NO,LIT23=YES                                        01220026
CH       INST  OP=49,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01240026
               LIT1=NO,LIT23=YES                                        01260026
CL       INST  OP=55,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01280026
               LIT1=NO,LIT23=YES                                        01300026
CR       INST  OP=19,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01320026
               LIT1=NO,LIT23=NO                                         01340026
DC       INST  OP=26,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01360026
               SUB=NO,F8UPC=YES,MASK=02                                 01380026
DD       INST  OP=6D,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01400026
               LIT1=NO,LIT23=YES                                        01420026
DE       INST  OP=7D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01440026
               LIT1=NO,LIT23=YES                                        01460026
DR       INST  OP=1D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,01480026
               LIT1=NO,LIT23=NO                                         01500026
DS       INST  OP=27,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01520026
               SUB=NO,F8UPC=YES,MASK=02                                 01540026
EX       INST  OP=44,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01560026
               LIT1=NO,LIT23=YES                                        01580026
IC       INST  OP=43,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01600026
               LIT1=NO,LIT23=YES                                        01620026
LA       INST  OP=41,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01640026
               LIT1=NO,LIT23=YES                                        01660026
LD       INST  OP=68,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01680026
               LIT1=NO,LIT23=YES                                        01700026
LE       INST  OP=78,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01720026
               LIT1=NO,LIT23=YES                                        01740026
LH       INST  OP=48,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01760026
               LIT1=NO,LIT23=YES                                        01780026
LM       INST  OP=98,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01800026
               LIT1=NO,LIT23=YES                                        01820026
LR       INST  OP=18,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01840026
               LIT1=NO,LIT23=NO                                         01860026
MD       INST  OP=6C,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01880026
               LIT1=NO,LIT23=YES                                        01900026
ME       INST  OP=7C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01920026
               LIT1=NO,LIT23=YES                                        01940026
MH       INST  OP=4C,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01960026
               LIT1=NO,LIT23=YES                                        01980026
MR       INST  OP=1C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,02000026
               LIT1=NO,LIT23=NO                                         02020026
NC       INST  OP=D4,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02040026
               LIT1=NO,LIT23=YES                                        02060026
NI       INST  OP=94,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02080026
               LIT1=NO,LIT23=NO                                         02100026
NR       INST  OP=14,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02120026
               LIT1=NO,LIT23=NO                                         02140026
OC       INST  OP=D6,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02160026
               LIT1=NO,LIT23=YES                                        02180026
OI       INST  OP=96,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02200026
               LIT1=NO,LIT23=NO                                         02220026
OR       INST  OP=16,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02240026
               LIT1=NO,LIT23=NO                                         02260026
SD       INST  OP=6B,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02280026
               LIT1=NO,LIT23=YES                                        02300026
SE       INST  OP=7B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02320026
               LIT1=NO,LIT23=YES                                        02340026
SH       INST  OP=4B,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02360026
               LIT1=NO,LIT23=YES                                        02380026
SL       INST  OP=5F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02400026
               LIT1=NO,LIT23=YES                                        02420026
SR       INST  OP=1B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02440026
               LIT1=NO,LIT23=NO                                         02460026
ST       INST  OP=50,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02480026
               LIT1=NO,LIT23=NO                                         02500026
SU       INST  OP=7F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02520026
               LIT1=NO,LIT23=YES                                        02540026
SW       INST  OP=6F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02560026
               LIT1=NO,LIT23=YES                                        02580026
TM       INST  OP=91,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02600026
               LIT1=YES,LIT23=NO                                        02620026
TR       INST  OP=DC,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02640026
               LIT1=NO,LIT23=YES                                        02660026
TS       INST  OP=93,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02680026
               LIT1=NO,LIT23=NO                                         02700026
XC       INST  OP=D7,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02720026
               LIT1=NO,LIT23=YES                                        02740026
XI       INST  OP=97,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02760026
               LIT1=NO,LIT23=NO                                         02780026
XR       INST  OP=17,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02800026
               LIT1=NO,LIT23=NO                                         02820026
ADR      INST  OP=2A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,02840026
               LIT1=NO,LIT23=NO                                         02860026
AER      INST  OP=3A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,02880026
               LIT1=NO,LIT23=NO                                         02900026
AGO      INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,02920026
               SUB=NO,F8UPC=NO,MASK=00                                  02940026
AIF      INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,02960026
               SUB=NO,F8UPC=NO,MASK=00                                  02980026
ALR      INST  OP=1E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03000026
               LIT1=NO,LIT23=NO                                         03020026
AUR      INST  OP=3E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03040026
               LIT1=NO,LIT23=NO                                         03060026
AWR      INST  OP=2E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03080026
               LIT1=NO,LIT23=NO                                         03100026
BAL      INST  OP=45,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03120026
               LIT1=NO,LIT23=YES                                        03140026
BCR      INST  OP=07,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03160026
               LIT1=NO,LIT23=NO                                         03180026
BCT      INST  OP=46,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03200026
               LIT1=NO,LIT23=YES                                        03220026
BER      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03240026
               LIT1=NO,LIT23=NO,MASK=28                                 03260026
BHR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03280026
               LIT1=NO,LIT23=NO,MASK=22                                 03300026
BLR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03320026
               LIT1=NO,LIT23=NO,MASK=24                                 03340026
BMR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03360026
               LIT1=NO,LIT23=NO,MASK=24                                 03380026
BNE      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03400026
               LIT1=NO,LIT23=YES,MASK=27                                03420026
BNH      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03440026
               LIT1=NO,LIT23=YES,MASK=2D                                03460026
BNL      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03480026
               LIT1=NO,LIT23=YES,MASK=2B                                03500026
BNM      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03520026
               LIT1=NO,LIT23=YES,MASK=2B                                03540026
BNO      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03560026
               LIT1=NO,LIT23=YES,MASK=2E                                03580026
BNP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03600026
               LIT1=NO,LIT23=YES,MASK=2D                                03620026
BNZ      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03640026
               LIT1=NO,LIT23=YES,MASK=27                                03660026
BOR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03680026
               LIT1=NO,LIT23=NO,MASK=21                                 03700026
BPR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03720026
               LIT1=NO,LIT23=NO,MASK=22                                 03740026
BXH      INST  OP=86,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03760026
               LIT1=NO,LIT23=YES                                        03780026
BZR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03800026
               LIT1=NO,LIT23=NO,MASK=28                                 03820026
CCW      INST  OP=28,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=YES,    ,03840026
               SUB=YES,F8UPC=YES,MASK=00                                03860026
CDR      INST  OP=29,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03880026
               LIT1=NO,LIT23=NO                                         03900026
CER      INST  OP=39,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03920026
               LIT1=NO,LIT23=NO                                         03940026
CLC      INST  OP=D5,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03960026
               LIT1=YES,LIT23=YES                                       03980026
CLI      INST  OP=95,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04000026
               LIT1=YES,LIT23=NO                                        04020026
CLR      INST  OP=15,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04040026
               LIT1=NO,LIT23=NO                                         04060026
COM      INST  OP=1E,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04080026
               SUB=NO,F8UPC=YES,MASK=00                                 04100026
CVB      INST  OP=4F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04120026
               LIT1=NO,LIT23=YES                                        04140026
CVD      INST  OP=4E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04160026
               LIT1=NO,LIT23=NO                                         04180026
CXD      INST  OP=2C,TYPE=ASSEM,UPC=YES,STE=YES,LCR=NO,F7XREF=NO,      ,04200026
               SUB=NO,F8UPC=YES,MASK=00                                 04220026
DDR      INST  OP=2D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04240026
               LIT1=NO,LIT23=NO                                         04260026
DER      INST  OP=3D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04280026
               LIT1=NO,LIT23=NO                                         04300026
DXD      INST  OP=2B,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04320026
               SUB=NO,F8UPC=YES,MASK=0A                                 04340026
END      INST  OP=21,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,04360026
               SUB=YES,F8UPC=NO,MASK=04                                 04380026
EQU      INST  OP=1F,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,04400026
               SUB=YES,F8UPC=NO,MASK=0A                                 04420026
HDR      INST  OP=24,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04440026
               LIT1=NO,LIT23=NO                                         04460026
HDV      INST  OP=9E,TYPE=EXTEN,FLOAT=NO,EVEN=NO,ALIGN=C,              ,04480026
               CLASS=3,LIT1=NO,LIT23=NO,MASK=21                         04500026
HER      INST  OP=34,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04520026
               LIT1=NO,LIT23=NO                                         04540026
HIO      INST  OP=9E,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04560026
               LIT1=NO,LIT23=NO                                         04580026
ISK      INST  OP=09,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04600026
               LIT1=NO,LIT23=NO                                         04620026
LCR      INST  OP=13,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04640026
               LIT1=NO,LIT23=NO                                         04660026
LDR      INST  OP=28,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04680026
               LIT1=NO,LIT23=NO                                         04700026
LER      INST  OP=38,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04720026
               LIT1=NO,LIT23=NO                                         04740026
LNR      INST  OP=11,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04760026
               LIT1=NO,LIT23=NO                                         04780026
LPR      INST  OP=10,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04800026
               LIT1=NO,LIT23=NO                                         04820026
LTR      INST  OP=12,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04840026
               LIT1=NO,LIT23=NO                                         04860026
MDR      INST  OP=2C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04880026
               LIT1=NO,LIT23=NO                                         04900026
MER      INST  OP=3C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04920026
               LIT1=NO,LIT23=NO                                         04940026
MVC      INST  OP=D2,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04960026
               LIT1=NO,LIT23=YES                                        04980026
MVI      INST  OP=92,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05000026
               LIT1=NO,LIT23=NO                                         05020026
MVN      INST  OP=D1,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05040026
               LIT1=NO,LIT23=YES                                        05060026
MVO      INST  OP=F1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05080026
               LIT1=NO,LIT23=YES                                        05100026
MVZ      INST  OP=D3,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05120026
               LIT1=NO,LIT23=YES                                        05140026
NOP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,05160026
               LIT1=NO,LIT23=YES,MASK=20                                05180026
ORG      INST  OP=20,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,05200026
               SUB=YES,F8UPC=YES,MASK=04                                05220026
POP      INST  OP=2F,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,05230027
               SUB=NO,F8UPC=NO,MASK=06                                  05232027
RDD      INST  OP=85,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05240026
               LIT1=NO,LIT23=NO                                         05260026
SDR      INST  OP=2B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05280026
               LIT1=NO,LIT23=NO                                         05300026
SER      INST  OP=3B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05320026
               LIT1=NO,LIT23=NO                                         05340026
SIO      INST  OP=9C,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05360026
               LIT1=NO,LIT23=NO                                         05380026
SLA      INST  OP=8B,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05400026
               LIT1=NO,LIT23=NO                                         05420026
SLL      INST  OP=89,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05440026
               LIT1=NO,LIT23=NO                                         05460026
SLR      INST  OP=1F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05480026
               LIT1=NO,LIT23=NO                                         05500026
SPM      INST  OP=04,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05520026
               LIT1=NO,LIT23=NO                                         05540026
SRA      INST  OP=8A,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05560026
               LIT1=NO,LIT23=NO                                         05580026
SRL      INST  OP=88,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05600026
               LIT1=NO,LIT23=NO                                         05620026
SSK      INST  OP=08,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05640026
               LIT1=NO,LIT23=NO                                         05660026
SSM      INST  OP=80,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05680026
               LIT1=YES,LIT23=NO                                        05700026
STC      INST  OP=42,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05720026
               LIT1=NO,LIT23=NO                                         05740026
STD      INST  OP=60,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,05760026
               LIT1=NO,LIT23=NO                                         05780026
STE      INST  OP=70,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,05800026
               LIT1=NO,LIT23=NO                                         05820026
STH      INST  OP=40,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,05840026
               LIT1=NO,LIT23=NO                                         05860026
STM      INST  OP=90,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,05880026
               LIT1=NO,LIT23=NO                                         05900026
SUR      INST  OP=3F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05920026
               LIT1=NO,LIT23=NO                                         05940026
SVC      INST  OP=0A,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05960026
               LIT1=NO,LIT23=NO                                         05980026
SWR      INST  OP=2F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06000026
               LIT1=NO,LIT23=NO                                         06020026
TCH      INST  OP=9F,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06040026
               LIT1=NO,LIT23=NO                                         06060026
TIO      INST  OP=9D,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06080026
               LIT1=NO,LIT23=NO                                         06100026
TRT      INST  OP=DD,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06120026
               LIT1=YES,LIT23=YES                                       06140026
WRD      INST  OP=84,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06160026
               LIT1=YES,LIT23=NO                                        06180026
ACTR     INST  OP=25,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06200026
               SUB=NO,F8UPC=NO,MASK=00                                  06220026
ANOP     INST  OP=0B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06240026
               SUB=NO,F8UPC=NO,MASK=00                                  06260026
BALR     INST  OP=05,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06280026
               LIT1=NO,LIT23=NO                                         06300026
BCTR     INST  OP=06,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06320026
               LIT1=NO,LIT23=NO                                         06340026
BNER     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06360026
               LIT1=NO,LIT23=NO,MASK=27                                 06380026
BNHR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06400026
               LIT1=NO,LIT23=NO,MASK=2D                                 06420026
BNLR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06440026
               LIT1=NO,LIT23=NO,MASK=2B                                 06460026
BNMR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06480026
               LIT1=NO,LIT23=NO,MASK=2B                                 06500026
BNOR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06520026
               LIT1=NO,LIT23=NO,MASK=2E                                 06540026
BNPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06560026
               LIT1=NO,LIT23=NO,MASK=2D                                 06580026
BNZR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06600026
               LIT1=NO,LIT23=NO,MASK=27                                 06620026
BXLE     INST  OP=87,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,06640026
               LIT1=NO,LIT23=YES                                        06660026
CNOP     INST  OP=29,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=NO,      ,06680026
               SUB=YES,F8UPC=YES,MASK=06                                06700026
COPY     INST  OP=0C,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06720026
               SUB=NO,F8UPC=NO,MASK=00                                  06740026
DROP     INST  OP=24,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,06760026
               SUB=YES,F8UPC=YES,MASK=06                                06780026
GBLA     INST  OP=00,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06800026
               SUB=NO,F8UPC=NO,MASK=00                                  06820026
GBLB     INST  OP=01,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06840026
               SUB=NO,F8UPC=NO,MASK=00                                  06860026
GBLC     INST  OP=02,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06880026
               SUB=NO,F8UPC=NO,MASK=00                                  06900026
ICTL     INST  OP=11,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06920026
               SUB=NO,F8UPC=NO,MASK=00                                  06940026
ISEQ     INST  OP=12,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06960026
               SUB=NO,F8UPC=NO,MASK=00                                  06980026
LCDR     INST  OP=23,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07000026
               LIT1=NO,LIT23=NO                                         07020026
LCER     INST  OP=33,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07040026
               LIT1=NO,LIT23=NO                                         07060026
LCLA     INST  OP=03,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07080026
               SUB=NO,F8UPC=NO,MASK=00                                  07100026
LCLB     INST  OP=04,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07120026
               SUB=NO,F8UPC=NO,MASK=00                                  07140026
LCLC     INST  OP=05,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07160026
               SUB=NO,F8UPC=NO,MASK=00                                  07180026
LNDR     INST  OP=21,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07200026
               LIT1=NO,LIT23=NO                                         07220026
LNER     INST  OP=31,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07240026
               LIT1=NO,LIT23=NO                                         07260026
LPDR     INST  OP=20,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07280026
               LIT1=NO,LIT23=NO                                         07300026
LPER     INST  OP=30,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07320026
               LIT1=NO,LIT23=NO                                         07340026
LPSW     INST  OP=82,TYPE=MACH,CLASS=3,ALIGN=D,FLOAT=NO,EVEN=NO,       ,07360026
               LIT1=YES,LIT23=NO                                        07380026
LRER     INST  OP=35,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07400026
               LIT1=NO,LIT23=NO                                         07420026
LTDR     INST  OP=22,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07440026
               LIT1=NO,LIT23=NO                                         07460026
LTER     INST  OP=32,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07480026
               LIT1=NO,LIT23=NO                                         07500026
MEND     INST  OP=10,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07520026
               SUB=NO,F8UPC=NO,MASK=00                                  07540026
NOPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07560026
               LIT1=NO,LIT23=NO,MASK=20                                 07580026
PACK     INST  OP=F2,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07600026
               LIT1=NO,LIT23=YES                                        07620026
PUSH     INST  OP=30,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,07630027
               SUB=NO,F8UPC=NO,MASK=06                                  07632027
SETA     INST  OP=06,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07640026
               SUB=NO,F8UPC=NO,MASK=00                                  07660026
SETB     INST  OP=07,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07680026
               SUB=NO,F8UPC=NO,MASK=00                                  07700026
SETC     INST  OP=08,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07720026
               SUB=NO,F8UPC=NO,MASK=00                                  07740026
SLDA     INST  OP=8F,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07760026
               LIT1=NO,LIT23=NO                                         07780026
SLDL     INST  OP=8D,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07800026
               LIT1=NO,LIT23=NO                                         07820026
SRDA     INST  OP=8E,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07840026
               LIT1=NO,LIT23=NO                                         07860026
SRDL     INST  OP=8C,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07880026
               LIT1=NO,LIT23=NO                                         07900026
UNPK     INST  OP=F3,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07920026
               LIT1=NO,LIT23=YES                                        07940026
CSECT    INST  OP=1C,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,07960026
               SUB=NO,F8UPC=YES,MASK=00                                 07980026
DSECT    INST  OP=1D,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,08000026
               SUB=NO,F8UPC=YES,MASK=08                                 08020026
EJECT    INST  OP=15,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08040026
               SUB=NO,F8UPC=NO,MASK=04                                  08060026
ENTRY    INST  OP=19,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,08080026
               SUB=NO,F8UPC=NO,MASK=06                                  08100026
EXTRN    INST  OP=1A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08120026
               SUB=NO,F8UPC=NO,MASK=06                                  08140026
LTORG    INST  OP=22,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,08160026
               SUB=YES,F8UPC=YES,MASK=00                                08180026
MACRO    INST  OP=0D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08200026
               SUB=NO,F8UPC=NO,MASK=00                                  08220026
MEXIT    INST  OP=0F,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08240026
               SUB=NO,F8UPC=NO,MASK=00                                  08260026
MNOTE    INST  OP=0E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08280026
               SUB=NO,F8UPC=NO,MASK=00                                  08300026
PRINT    INST  OP=13,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08320026
               SUB=NO,F8UPC=NO,MASK=04                                  08340026
PUNCH    INST  OP=16,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08360026
               SUB=NO,F8UPC=NO,MASK=06                                  08380026
REPRO    INST  OP=17,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08400026
               SUB=NO,F8UPC=NO,MASK=04                                  08420026
SPACE    INST  OP=14,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08440026
               SUB=NO,F8UPC=NO,MASK=04                                  08460026
START    INST  OP=1B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08480026
               SUB=NO,F8UPC=YES,MASK=00                                 08500026
TITLE    INST  OP=18,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08520026
               SUB=NO,F8UPC=NO,MASK=00                                  08540026
USING    INST  OP=23,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,08560026
               SUB=YES,F8UPC=YES,MASK=06                                08580026
GLDEND   EQU       *                                                    08600026
         END                                                            08620026
./ ADD NAME=ASMGIS09
IS09     TITLE     'INSTRUCTION SET FOR 360 DOS'                        00020026
         ISEQ      73,78                                                00040023
ASMGIS09 INSTSET                                                        00060023
A        INST  OP=5A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00080023
               LIT1=NO,LIT23=YES                                        00100023
B        INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00120023
               LIT1=NO,LIT23=YES,MASK=2F                                00140023
C        INST  OP=59,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00160023
               LIT1=NO,LIT23=YES                                        00180023
D        INST  OP=5D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00200023
               LIT1=NO,LIT23=YES                                        00220023
L        INST  OP=58,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00240023
               LIT1=NO,LIT23=YES                                        00260023
M        INST  OP=5C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00280023
               LIT1=NO,LIT23=YES                                        00300023
N        INST  OP=54,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00320023
               LIT1=NO,LIT23=YES                                        00340023
O        INST  OP=56,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00360023
               LIT1=NO,LIT23=YES                                        00380023
S        INST  OP=5B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00400023
               LIT1=NO,LIT23=YES                                        00420023
X        INST  OP=57,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00440023
               LIT1=NO,LIT23=YES                                        00460023
AD       INST  OP=6A,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00480023
               LIT1=NO,LIT23=YES                                        00500023
AE       INST  OP=7A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00520023
               LIT1=NO,LIT23=YES                                        00540023
AH       INST  OP=4A,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00560023
               LIT1=NO,LIT23=YES                                        00580023
AL       INST  OP=5E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00600023
               LIT1=NO,LIT23=YES                                        00620023
AP       INST  OP=FA,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00640023
               LIT1=NO,LIT23=YES                                        00660023
AR       INST  OP=1A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00680023
               LIT1=NO,LIT23=NO                                         00700023
AU       INST  OP=7E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00720023
               LIT1=NO,LIT23=YES                                        00740023
AW       INST  OP=6E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00760023
               LIT1=NO,LIT23=YES                                        00780023
BC       INST  OP=47,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00800023
               LIT1=NO,LIT23=YES                                        00820023
BE       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00840023
               LIT1=NO,LIT23=YES,MASK=28                                00860023
BH       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00880023
               LIT1=NO,LIT23=YES,MASK=22                                00900023
BL       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00920023
               LIT1=NO,LIT23=YES,MASK=24                                00940023
BM       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00960023
               LIT1=NO,LIT23=YES,MASK=24                                00980023
BO       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01000023
               LIT1=NO,LIT23=YES,MASK=21                                01020023
BP       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01040023
               LIT1=NO,LIT23=YES,MASK=22                                01060023
BR       INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01080023
               LIT1=NO,LIT23=NO,MASK=2F                                 01100023
BZ       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01120023
               LIT1=NO,LIT23=YES,MASK=28                                01140023
CD       INST  OP=69,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01160023
               LIT1=NO,LIT23=YES                                        01180023
CE       INST  OP=79,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01200023
               LIT1=NO,LIT23=YES                                        01220023
CH       INST  OP=49,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01240023
               LIT1=NO,LIT23=YES                                        01260023
CL       INST  OP=55,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01280023
               LIT1=NO,LIT23=YES                                        01300023
CP       INST  OP=F9,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01320023
               LIT1=YES,LIT23=YES                                       01340023
CR       INST  OP=19,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01360023
               LIT1=NO,LIT23=NO                                         01380023
DC       INST  OP=26,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01400023
               SUB=NO,F8UPC=YES,MASK=02                                 01420023
DD       INST  OP=6D,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01440023
               LIT1=NO,LIT23=YES                                        01460023
DE       INST  OP=7D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01480023
               LIT1=NO,LIT23=YES                                        01500023
DP       INST  OP=FD,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01520023
               LIT1=NO,LIT23=YES                                        01540023
DR       INST  OP=1D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,01560023
               LIT1=NO,LIT23=NO                                         01580023
DS       INST  OP=27,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01600023
               SUB=NO,F8UPC=YES,MASK=02                                 01620023
ED       INST  OP=DE,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01640023
               LIT1=NO,LIT23=YES                                        01660023
EX       INST  OP=44,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01680023
               LIT1=NO,LIT23=YES                                        01700023
IC       INST  OP=43,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01720023
               LIT1=NO,LIT23=YES                                        01740023
LA       INST  OP=41,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01760023
               LIT1=NO,LIT23=YES                                        01780023
LD       INST  OP=68,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01800023
               LIT1=NO,LIT23=YES                                        01820023
LE       INST  OP=78,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01840023
               LIT1=NO,LIT23=YES                                        01860023
LH       INST  OP=48,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01880023
               LIT1=NO,LIT23=YES                                        01900023
LM       INST  OP=98,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01920023
               LIT1=NO,LIT23=YES                                        01940023
LR       INST  OP=18,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01960023
               LIT1=NO,LIT23=NO                                         01980023
MD       INST  OP=6C,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02000023
               LIT1=NO,LIT23=YES                                        02020023
ME       INST  OP=7C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02040023
               LIT1=NO,LIT23=YES                                        02060023
MH       INST  OP=4C,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02080023
               LIT1=NO,LIT23=YES                                        02100023
MP       INST  OP=FC,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02120023
               LIT1=NO,LIT23=YES                                        02140023
MR       INST  OP=1C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,02160023
               LIT1=NO,LIT23=NO                                         02180023
NC       INST  OP=D4,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02200023
               LIT1=NO,LIT23=YES                                        02220023
NI       INST  OP=94,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02240023
               LIT1=NO,LIT23=NO                                         02260023
NR       INST  OP=14,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02280023
               LIT1=NO,LIT23=NO                                         02300023
OC       INST  OP=D6,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02320023
               LIT1=NO,LIT23=YES                                        02340023
OI       INST  OP=96,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02360023
               LIT1=NO,LIT23=NO                                         02380023
OR       INST  OP=16,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02400023
               LIT1=NO,LIT23=NO                                         02420023
SD       INST  OP=6B,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02440023
               LIT1=NO,LIT23=YES                                        02460023
SE       INST  OP=7B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02480023
               LIT1=NO,LIT23=YES                                        02500023
SH       INST  OP=4B,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02520023
               LIT1=NO,LIT23=YES                                        02540023
SL       INST  OP=5F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02560023
               LIT1=NO,LIT23=YES                                        02580023
SP       INST  OP=FB,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02600023
               LIT1=NO,LIT23=YES                                        02620023
SR       INST  OP=1B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02640023
               LIT1=NO,LIT23=NO                                         02660023
ST       INST  OP=50,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02680023
               LIT1=NO,LIT23=NO                                         02700023
SU       INST  OP=7F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02720023
               LIT1=NO,LIT23=YES                                        02740023
SW       INST  OP=6F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02760023
               LIT1=NO,LIT23=YES                                        02780023
TM       INST  OP=91,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02800023
               LIT1=YES,LIT23=NO                                        02820023
TR       INST  OP=DC,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02840023
               LIT1=NO,LIT23=YES                                        02860023
TS       INST  OP=93,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02880023
               LIT1=NO,LIT23=NO                                         02900023
XC       INST  OP=D7,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02920023
               LIT1=NO,LIT23=YES                                        02940023
XI       INST  OP=97,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02960023
               LIT1=NO,LIT23=NO                                         02980023
XR       INST  OP=17,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03000023
               LIT1=NO,LIT23=NO                                         03020023
ADR      INST  OP=2A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03040023
               LIT1=NO,LIT23=NO                                         03060023
AER      INST  OP=3A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03080023
               LIT1=NO,LIT23=NO                                         03100023
AGO      INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03120023
               SUB=NO,F8UPC=NO,MASK=00                                  03140023
AIF      INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03160023
               SUB=NO,F8UPC=NO,MASK=00                                  03180023
ALR      INST  OP=1E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03200023
               LIT1=NO,LIT23=NO                                         03220023
AUR      INST  OP=3E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03240023
               LIT1=NO,LIT23=NO                                         03260023
AWR      INST  OP=2E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03280023
               LIT1=NO,LIT23=NO                                         03300023
BAL      INST  OP=45,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03320023
               LIT1=NO,LIT23=YES                                        03340023
BCR      INST  OP=07,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03360023
               LIT1=NO,LIT23=NO                                         03380023
BCT      INST  OP=46,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03400023
               LIT1=NO,LIT23=YES                                        03420023
BNE      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03440023
               LIT1=NO,LIT23=YES,MASK=27                                03460023
BNH      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03480023
               LIT1=NO,LIT23=YES,MASK=2D                                03500023
BNL      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03520023
               LIT1=NO,LIT23=YES,MASK=2B                                03540023
BNM      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03560023
               LIT1=NO,LIT23=YES,MASK=2B                                03580023
BNO      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03600023
               LIT1=NO,LIT23=YES,MASK=2E                                03620023
BNP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03640023
               LIT1=NO,LIT23=YES,MASK=2D                                03660023
BNZ      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03680023
               LIT1=NO,LIT23=YES,MASK=27                                03700023
BXH      INST  OP=86,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03720023
               LIT1=NO,LIT23=YES                                        03740023
CCW      INST  OP=28,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=YES,    ,03760023
               SUB=YES,F8UPC=YES,MASK=00                                03780023
CDR      INST  OP=29,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03800023
               LIT1=NO,LIT23=NO                                         03820023
CER      INST  OP=39,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03840023
               LIT1=NO,LIT23=NO                                         03860023
CLC      INST  OP=D5,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03880023
               LIT1=YES,LIT23=YES                                       03900023
CLI      INST  OP=95,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03920023
               LIT1=YES,LIT23=NO                                        03940023
CLR      INST  OP=15,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03960023
               LIT1=NO,LIT23=NO                                         03980023
COM      INST  OP=1E,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04000023
               SUB=NO,F8UPC=YES,MASK=00                                 04020023
CVB      INST  OP=4F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04040023
               LIT1=NO,LIT23=YES                                        04060023
CVD      INST  OP=4E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04080023
               LIT1=NO,LIT23=NO                                         04100023
DDR      INST  OP=2D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04120023
               LIT1=NO,LIT23=NO                                         04140023
DER      INST  OP=3D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04160023
               LIT1=NO,LIT23=NO                                         04180023
END      INST  OP=21,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,04200023
               SUB=YES,F8UPC=NO,MASK=04                                 04220023
EQU      INST  OP=1F,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,04240023
               SUB=YES,F8UPC=NO,MASK=0A                                 04260023
HDR      INST  OP=24,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04280023
               LIT1=NO,LIT23=NO                                         04300023
HDV      INST  OP=9E,TYPE=EXTEN,FLOAT=NO,EVEN=NO,ALIGN=C,              ,04310024
               CLASS=3,LIT1=NO,LIT23=NO,MASK=21                         04315024
HER      INST  OP=34,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04320023
               LIT1=NO,LIT23=NO                                         04340023
HIO      INST  OP=9E,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04360023
               LIT1=NO,LIT23=NO                                         04380023
ISK      INST  OP=09,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04400023
               LIT1=NO,LIT23=NO                                         04420023
LCR      INST  OP=13,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04440023
               LIT1=NO,LIT23=NO                                         04460023
LDR      INST  OP=28,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04480023
               LIT1=NO,LIT23=NO                                         04500023
LER      INST  OP=38,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04520023
               LIT1=NO,LIT23=NO                                         04540023
LNR      INST  OP=11,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04560023
               LIT1=NO,LIT23=NO                                         04580023
LPR      INST  OP=10,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04600023
               LIT1=NO,LIT23=NO                                         04620023
LTR      INST  OP=12,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04640023
               LIT1=NO,LIT23=NO                                         04660023
MDR      INST  OP=2C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04680023
               LIT1=NO,LIT23=NO                                         04700023
MER      INST  OP=3C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04720023
               LIT1=NO,LIT23=NO                                         04740023
MVC      INST  OP=D2,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04760023
               LIT1=NO,LIT23=YES                                        04780023
MVI      INST  OP=92,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04800023
               LIT1=NO,LIT23=NO                                         04820023
MVN      INST  OP=D1,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04840023
               LIT1=NO,LIT23=YES                                        04860023
MVO      INST  OP=F1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04880023
               LIT1=NO,LIT23=YES                                        04900023
MVZ      INST  OP=D3,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04920023
               LIT1=NO,LIT23=YES                                        04940023
NOP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,04960023
               LIT1=NO,LIT23=YES,MASK=20                                04980023
ORG      INST  OP=20,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,05000023
               SUB=YES,F8UPC=YES,MASK=04                                05020023
RDD      INST  OP=85,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05040023
               LIT1=NO,LIT23=NO                                         05060023
SDR      INST  OP=2B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05080023
               LIT1=NO,LIT23=NO                                         05100023
SER      INST  OP=3B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05120023
               LIT1=NO,LIT23=NO                                         05140023
SIO      INST  OP=9C,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05160023
               LIT1=NO,LIT23=NO                                         05180023
SLA      INST  OP=8B,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05200023
               LIT1=NO,LIT23=NO                                         05220023
SLL      INST  OP=89,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05240023
               LIT1=NO,LIT23=NO                                         05260023
SLR      INST  OP=1F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05280023
               LIT1=NO,LIT23=NO                                         05300023
SPM      INST  OP=04,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05320023
               LIT1=NO,LIT23=NO                                         05340023
SRA      INST  OP=8A,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05360023
               LIT1=NO,LIT23=NO                                         05380023
SRL      INST  OP=88,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05400023
               LIT1=NO,LIT23=NO                                         05420023
SSK      INST  OP=08,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05440023
               LIT1=NO,LIT23=NO                                         05460023
SSM      INST  OP=80,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05480023
               LIT1=YES,LIT23=NO                                        05500023
STC      INST  OP=42,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05520023
               LIT1=NO,LIT23=NO                                         05540023
STD      INST  OP=60,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,05560023
               LIT1=NO,LIT23=NO                                         05580023
STE      INST  OP=70,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,05600023
               LIT1=NO,LIT23=NO                                         05620023
STH      INST  OP=40,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,05640023
               LIT1=NO,LIT23=NO                                         05660023
STM      INST  OP=90,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,05680023
               LIT1=NO,LIT23=NO                                         05700023
SUR      INST  OP=3F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05720023
               LIT1=NO,LIT23=NO                                         05740023
SVC      INST  OP=0A,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05760023
               LIT1=NO,LIT23=NO                                         05780023
SWR      INST  OP=2F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05800023
               LIT1=NO,LIT23=NO                                         05820023
TCH      INST  OP=9F,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05840023
               LIT1=NO,LIT23=NO                                         05860023
TIO      INST  OP=9D,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05880023
               LIT1=NO,LIT23=NO                                         05900023
TRT      INST  OP=DD,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05920023
               LIT1=YES,LIT23=YES                                       05940023
WRD      INST  OP=84,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05960023
               LIT1=YES,LIT23=NO                                        05980023
ZAP      INST  OP=F8,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06000023
               LIT1=NO,LIT23=YES                                        06020023
ACTR     INST  OP=25,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06040023
               SUB=NO,F8UPC=NO,MASK=00                                  06060023
ANOP     INST  OP=0B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06080023
               SUB=NO,F8UPC=NO,MASK=00                                  06100023
BALR     INST  OP=05,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06120023
               LIT1=NO,LIT23=NO                                         06140023
BCTR     INST  OP=06,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06160023
               LIT1=NO,LIT23=NO                                         06180023
BXLE     INST  OP=87,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,06200023
               LIT1=NO,LIT23=YES                                        06220023
CNOP     INST  OP=29,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=NO,      ,06240023
               SUB=YES,F8UPC=YES,MASK=06                                06260023
COPY     INST  OP=0C,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06280023
               SUB=NO,F8UPC=NO,MASK=00                                  06300023
DROP     INST  OP=24,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,06320023
               SUB=YES,F8UPC=YES,MASK=06                                06340023
EDMK     INST  OP=DF,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06360023
               LIT1=NO,LIT23=YES                                        06380023
GBLA     INST  OP=00,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06400023
               SUB=NO,F8UPC=NO,MASK=00                                  06420023
GBLB     INST  OP=01,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06440023
               SUB=NO,F8UPC=NO,MASK=00                                  06460023
GBLC     INST  OP=02,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06480023
               SUB=NO,F8UPC=NO,MASK=00                                  06500023
ICTL     INST  OP=11,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06520023
               SUB=NO,F8UPC=NO,MASK=00                                  06540023
ISEQ     INST  OP=12,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06560023
               SUB=NO,F8UPC=NO,MASK=00                                  06580023
LCDR     INST  OP=23,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06600023
               LIT1=NO,LIT23=NO                                         06620023
LCER     INST  OP=33,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06640023
               LIT1=NO,LIT23=NO                                         06660023
LCLA     INST  OP=03,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06680023
               SUB=NO,F8UPC=NO,MASK=00                                  06700023
LCLB     INST  OP=04,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06720023
               SUB=NO,F8UPC=NO,MASK=00                                  06740023
LCLC     INST  OP=05,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06760023
               SUB=NO,F8UPC=NO,MASK=00                                  06780023
LNDR     INST  OP=21,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06800023
               LIT1=NO,LIT23=NO                                         06820023
LNER     INST  OP=31,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06840023
               LIT1=NO,LIT23=NO                                         06860023
LPDR     INST  OP=20,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06880023
               LIT1=NO,LIT23=NO                                         06900023
LPER     INST  OP=30,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06920023
               LIT1=NO,LIT23=NO                                         06940023
LPSW     INST  OP=82,TYPE=MACH,CLASS=3,ALIGN=D,FLOAT=NO,EVEN=NO,       ,06960023
               LIT1=YES,LIT23=NO                                        06980023
LTDR     INST  OP=22,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07000023
               LIT1=NO,LIT23=NO                                         07020023
LTER     INST  OP=32,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07040023
               LIT1=NO,LIT23=NO                                         07060023
MEND     INST  OP=10,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07080023
               SUB=NO,F8UPC=NO,MASK=00                                  07100023
NOPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07120023
               LIT1=NO,LIT23=NO,MASK=20                                 07140023
PACK     INST  OP=F2,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07160023
               LIT1=NO,LIT23=YES                                        07180023
SETA     INST  OP=06,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07200023
               SUB=NO,F8UPC=NO,MASK=00                                  07220023
SETB     INST  OP=07,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07240023
               SUB=NO,F8UPC=NO,MASK=00                                  07260023
SETC     INST  OP=08,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07280023
               SUB=NO,F8UPC=NO,MASK=00                                  07300023
SLDA     INST  OP=8F,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07320023
               LIT1=NO,LIT23=NO                                         07340023
SLDL     INST  OP=8D,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07360023
               LIT1=NO,LIT23=NO                                         07380023
SRDA     INST  OP=8E,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07400023
               LIT1=NO,LIT23=NO                                         07420023
SRDL     INST  OP=8C,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07440023
               LIT1=NO,LIT23=NO                                         07460023
UNPK     INST  OP=F3,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07480023
               LIT1=NO,LIT23=YES                                        07500023
AIFB     INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07520023
               SUB=NO,F8UPC=NO,MASK=00                                  07540023
AGOB     INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07560023
               SUB=NO,F8UPC=NO,MASK=00                                  07580023
CSECT    INST  OP=1C,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,07600023
               SUB=NO,F8UPC=YES,MASK=00                                 07620023
DSECT    INST  OP=1D,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,07640023
               SUB=NO,F8UPC=YES,MASK=08                                 07660023
EJECT    INST  OP=15,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07680023
               SUB=NO,F8UPC=NO,MASK=04                                  07700023
ENTRY    INST  OP=19,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,07720023
               SUB=NO,F8UPC=NO,MASK=06                                  07740023
EXTRN    INST  OP=1A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07760023
               SUB=NO,F8UPC=NO,MASK=06                                  07780023
LTORG    INST  OP=22,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,07800023
               SUB=YES,F8UPC=YES,MASK=00                                07820023
MACRO    INST  OP=0D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07840023
               SUB=NO,F8UPC=NO,MASK=00                                  07860023
MEXIT    INST  OP=0F,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07880023
               SUB=NO,F8UPC=NO,MASK=00                                  07900023
MNOTE    INST  OP=0E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07920023
               SUB=NO,F8UPC=NO,MASK=00                                  07940023
PRINT    INST  OP=13,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07960023
               SUB=NO,F8UPC=NO,MASK=04                                  07980023
PUNCH    INST  OP=16,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08000023
               SUB=NO,F8UPC=NO,MASK=06                                  08020023
REPRO    INST  OP=17,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08040023
               SUB=NO,F8UPC=NO,MASK=04                                  08060023
SPACE    INST  OP=14,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08080023
               SUB=NO,F8UPC=NO,MASK=04                                  08100023
START    INST  OP=1B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08120023
               SUB=NO,F8UPC=YES,MASK=00                                 08140023
TITLE    INST  OP=18,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08160023
               SUB=NO,F8UPC=NO,MASK=00                                  08180023
USING    INST  OP=23,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,08200023
               SUB=YES,F8UPC=YES,MASK=06                                08220023
WXTRN    INST  OP=2E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08230025
               SUB=NO,F8UPC=NO,MASK=06                                  08235025
GLDEND   EQU       *                                                    08240023
         END                                                            08260023
./ ADD NAME=ASMGIS11
IS11     TITLE     'RESTRICTED INSTRUCTION SET FOR MACRO EXPANSIONS'    00020027
         ISEQ      73,78                                                00040027
*                                                                       00060027
         COPY      ASMGSET                                              00080027
ASMGIS11 INSTSET                                                        00100027
AGO      INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00120027
               SUB=NO,F8UPC=NO,MASK=00                                  00140027
AIF      INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00160027
               SUB=NO,F8UPC=NO,MASK=00                                  00180027
END      INST  OP=21,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,00200027
               SUB=YES,F8UPC=NO,MASK=04                                 00220027
ACTR     INST  OP=25,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00240027
               SUB=NO,F8UPC=NO,MASK=00                                  00260027
ANOP     INST  OP=0B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00280027
               SUB=NO,F8UPC=NO,MASK=00                                  00300027
COPY     INST  OP=0C,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00320027
               SUB=NO,F8UPC=NO,MASK=00                                  00340027
GBLA     INST  OP=00,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00360027
               SUB=NO,F8UPC=NO,MASK=00                                  00380027
GBLB     INST  OP=01,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00400027
               SUB=NO,F8UPC=NO,MASK=00                                  00420027
GBLC     INST  OP=02,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00440027
               SUB=NO,F8UPC=NO,MASK=00                                  00460027
LCLA     INST  OP=03,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00480027
               SUB=NO,F8UPC=NO,MASK=00                                  00500027
LCLB     INST  OP=04,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00520027
               SUB=NO,F8UPC=NO,MASK=00                                  00540027
LCLC     INST  OP=05,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00560027
               SUB=NO,F8UPC=NO,MASK=00                                  00580027
MEND     INST  OP=10,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00600027
               SUB=NO,F8UPC=NO,MASK=00                                  00620027
SETA     INST  OP=06,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00640027
               SUB=NO,F8UPC=NO,MASK=00                                  00660027
SETB     INST  OP=07,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00680027
               SUB=NO,F8UPC=NO,MASK=00                                  00700027
SETC     INST  OP=08,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00720027
               SUB=NO,F8UPC=NO,MASK=00                                  00740027
MACRO    INST  OP=0D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00760027
               SUB=NO,F8UPC=NO,MASK=00                                  00780027
MEXIT    INST  OP=0F,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00800027
               SUB=NO,F8UPC=NO,MASK=00                                  00820027
MNOTE    INST  OP=0E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,00840027
               SUB=NO,F8UPC=NO,MASK=00                                  00860027
GLDEND   EQU       *                                                    00880027
         END                                                            00900027
./ ADD NAME=ASMGIS20
IS20     TITLE     'INSTRUCTION SET FOR A 360 MODEL 20'                 00020026
         ISEQ      73,78                                                00040021
ASMGIS20 INSTSET                                                        00060020
B        INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00080020
               LIT1=NO,LIT23=YES,MASK=2F                                00100020
AH       INST  OP=4A,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00120020
               LIT1=NO,LIT23=YES                                        00140020
AP       INST  OP=FA,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00160020
               LIT1=NO,LIT23=YES                                        00180020
AR       INST  OP=1A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00200020
               LIT1=NO,LIT23=NO                                         00220020
BC       INST  OP=47,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00240020
               LIT1=NO,LIT23=YES                                        00260020
BE       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00280020
               LIT1=NO,LIT23=YES,MASK=28                                00300020
BH       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00320020
               LIT1=NO,LIT23=YES,MASK=22                                00340020
BL       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00360020
               LIT1=NO,LIT23=YES,MASK=24                                00380020
BM       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00400020
               LIT1=NO,LIT23=YES,MASK=24                                00420020
BO       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00440020
               LIT1=NO,LIT23=YES,MASK=21                                00460020
BP       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00480020
               LIT1=NO,LIT23=YES,MASK=22                                00500020
BR       INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,00520020
               LIT1=NO,LIT23=NO,MASK=2F                                 00540020
BZ       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00560020
               LIT1=NO,LIT23=YES,MASK=28                                00580020
CH       INST  OP=49,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00600020
               LIT1=NO,LIT23=YES                                        00620020
CP       INST  OP=F9,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00640020
               LIT1=YES,LIT23=YES                                       00660020
DC       INST  OP=26,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,00680020
               SUB=NO,F8UPC=YES,MASK=02                                 00700020
DP       INST  OP=FD,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00720020
               LIT1=NO,LIT23=YES                                        00740020
DS       INST  OP=27,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,00760020
               SUB=NO,F8UPC=YES,MASK=02                                 00780020
ED       INST  OP=DE,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00800020
               LIT1=NO,LIT23=YES                                        00820020
LH       INST  OP=48,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00840020
               LIT1=NO,LIT23=YES                                        00860020
MP       INST  OP=FC,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00880020
               LIT1=NO,LIT23=YES                                        00900020
NI       INST  OP=94,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00920020
               LIT1=NO,LIT23=NO                                         00940020
OI       INST  OP=96,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00960020
               LIT1=NO,LIT23=NO                                         00980020
SH       INST  OP=4B,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01000020
               LIT1=NO,LIT23=YES                                        01020020
SP       INST  OP=FB,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01040020
               LIT1=NO,LIT23=YES                                        01060020
SR       INST  OP=1B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01080020
               LIT1=NO,LIT23=NO                                         01100020
TM       INST  OP=91,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01120020
               LIT1=YES,LIT23=NO                                        01140020
TR       INST  OP=DC,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01160020
               LIT1=NO,LIT23=YES                                        01180020
AGO      INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,01200020
               SUB=NO,F8UPC=NO,MASK=00                                  01220020
AIF      INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,01240020
               SUB=NO,F8UPC=NO,MASK=00                                  01260020
BAS      INST  OP=4D,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01280020
               LIT1=NO,LIT23=YES                                        01300020
BCR      INST  OP=07,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01320020
               LIT1=NO,LIT23=NO                                         01340020
BER      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01360020
               LIT1=NO,LIT23=NO,MASK=28                                 01380020
BHR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01400020
               LIT1=NO,LIT23=NO,MASK=22                                 01420020
BLR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01440020
               LIT1=NO,LIT23=NO,MASK=24                                 01460020
BMR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01480020
               LIT1=NO,LIT23=NO,MASK=24                                 01500020
BNE      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01520020
               LIT1=NO,LIT23=YES,MASK=27                                01540020
BNH      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01560020
               LIT1=NO,LIT23=YES,MASK=2D                                01580020
BNL      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01600020
               LIT1=NO,LIT23=YES,MASK=2B                                01620020
BNM      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01640020
               LIT1=NO,LIT23=YES,MASK=2B                                01660020
BNO      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01680020
               LIT1=NO,LIT23=YES,MASK=2E                                01700020
BNP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01720020
               LIT1=NO,LIT23=YES,MASK=2D                                01740020
BNZ      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01760020
               LIT1=NO,LIT23=YES,MASK=27                                01780020
BOR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01800020
               LIT1=NO,LIT23=NO,MASK=21                                 01820020
BPR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01840020
               LIT1=NO,LIT23=NO,MASK=22                                 01860020
BZR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01880020
               LIT1=NO,LIT23=NO,MASK=28                                 01900020
CCW      INST  OP=28,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=YES,    ,01920020
               SUB=YES,F8UPC=YES,MASK=00                                01940020
CIO      INST  OP=9B,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01960020
               LIT1=NO,LIT23=NO                                         01980020
CLC      INST  OP=D5,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02000020
               LIT1=YES,LIT23=YES                                       02020020
CLI      INST  OP=95,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02040020
               LIT1=YES,LIT23=NO                                        02060020
COM      INST  OP=1E,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,02080023
               SUB=NO,F8UPC=YES,MASK=00                                 02100023
CXD      INST  OP=2C,TYPE=ASSEM,UPC=YES,STE=YES,LCR=NO,F7XREF=NO,      ,02120020
               SUB=NO,F8UPC=YES,MASK=00                                 02140020
DXD      INST  OP=2B,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,02160020
               SUB=NO,F8UPC=YES,MASK=0A                                 02180020
END      INST  OP=21,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,02200020
               SUB=YES,F8UPC=NO,MASK=04                                 02220020
EQU      INST  OP=1F,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,02240020
               SUB=YES,F8UPC=NO,MASK=0A                                 02260020
HPR      INST  OP=99,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02280020
               LIT1=YES,LIT23=NO                                        02300020
MVC      INST  OP=D2,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02320020
               LIT1=NO,LIT23=YES                                        02340020
MVI      INST  OP=92,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02360020
               LIT1=NO,LIT23=NO                                         02380020
MVN      INST  OP=D1,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02400020
               LIT1=NO,LIT23=YES                                        02420020
MVO      INST  OP=F1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02440020
               LIT1=NO,LIT23=YES                                        02460020
MVZ      INST  OP=D3,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02480020
               LIT1=NO,LIT23=YES                                        02500020
NOP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,02520020
               LIT1=NO,LIT23=YES,MASK=20                                02540020
ORG      INST  OP=20,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,02560020
               SUB=YES,F8UPC=YES,MASK=04                                02580020
POP      INST  OP=2F,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,02590027
               SUB=NO,F8UPC=NO,MASK=06                                  02592027
STH      INST  OP=40,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02600020
               LIT1=NO,LIT23=NO                                         02620020
XIO      INST  OP=D0,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02640020
               LIT1=NO,LIT23=NO                                         02660020
ZAP      INST  OP=F8,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02680020
               LIT1=NO,LIT23=YES                                        02700020
ACTR     INST  OP=25,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,02720020
               SUB=NO,F8UPC=NO,MASK=00                                  02740020
ANOP     INST  OP=0B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,02760020
               SUB=NO,F8UPC=NO,MASK=00                                  02780020
BASR     INST  OP=0D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02800020
               LIT1=NO,LIT23=NO                                         02820020
BNER     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,02840020
               LIT1=NO,LIT23=NO,MASK=27                                 02860020
BNHR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,02880020
               LIT1=NO,LIT23=NO,MASK=2D                                 02900020
BNLR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,02920020
               LIT1=NO,LIT23=NO,MASK=2B                                 02940020
BNMR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,02960020
               LIT1=NO,LIT23=NO,MASK=2B                                 02980020
BNOR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03000020
               LIT1=NO,LIT23=NO,MASK=2E                                 03020020
BNPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03040020
               LIT1=NO,LIT23=NO,MASK=2D                                 03060020
BNZR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03080020
               LIT1=NO,LIT23=NO,MASK=27                                 03100020
CNOP     INST  OP=29,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=NO,      ,03120020
               SUB=YES,F8UPC=YES,MASK=06                                03140020
COPY     INST  OP=0C,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03160020
               SUB=NO,F8UPC=NO,MASK=00                                  03180020
DROP     INST  OP=24,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,03200020
               SUB=YES,F8UPC=YES,MASK=06                                03220020
GBLA     INST  OP=00,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03240020
               SUB=NO,F8UPC=NO,MASK=00                                  03260020
GBLB     INST  OP=01,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03280020
               SUB=NO,F8UPC=NO,MASK=00                                  03300020
GBLC     INST  OP=02,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03320020
               SUB=NO,F8UPC=NO,MASK=00                                  03340020
ICTL     INST  OP=11,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03360020
               SUB=NO,F8UPC=NO,MASK=00                                  03380020
ISEQ     INST  OP=12,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03400020
               SUB=NO,F8UPC=NO,MASK=00                                  03420020
LCLA     INST  OP=03,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03440020
               SUB=NO,F8UPC=NO,MASK=00                                  03460020
LCLB     INST  OP=04,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03480020
               SUB=NO,F8UPC=NO,MASK=00                                  03500020
LCLC     INST  OP=05,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03520020
               SUB=NO,F8UPC=NO,MASK=00                                  03540020
MEND     INST  OP=10,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03560020
               SUB=NO,F8UPC=NO,MASK=00                                  03580020
NOPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03600020
               LIT1=NO,LIT23=NO,MASK=20                                 03620020
PACK     INST  OP=F2,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03640020
               LIT1=NO,LIT23=YES                                        03660020
PUSH     INST  OP=30,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,03670027
               SUB=NO,F8UPC=NO,MASK=06                                  03672027
SETA     INST  OP=06,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03680020
               SUB=NO,F8UPC=NO,MASK=00                                  03700020
SETB     INST  OP=07,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03720020
               SUB=NO,F8UPC=NO,MASK=00                                  03740020
SETC     INST  OP=08,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03760020
               SUB=NO,F8UPC=NO,MASK=00                                  03780020
SPSW     INST  OP=81,TYPE=MACH,CLASS=3,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03800020
               LIT1=YES,LIT23=NO                                        03820020
TIOB     INST  OP=9A,TYPE=MACH,CLASS=2,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03840020
               LIT1=YES,LIT23=NO                                        03860020
UNPK     INST  OP=F3,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03880020
               LIT1=NO,LIT23=YES                                        03900020
AIFB     INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03920020
               SUB=NO,F8UPC=NO,MASK=00                                  03940020
AGOB     INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03960020
               SUB=NO,F8UPC=NO,MASK=00                                  03980020
CSECT    INST  OP=1C,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04000020
               SUB=NO,F8UPC=YES,MASK=00                                 04020020
DSECT    INST  OP=1D,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04040020
               SUB=NO,F8UPC=YES,MASK=08                                 04060020
EJECT    INST  OP=15,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04080020
               SUB=NO,F8UPC=NO,MASK=04                                  04100020
ENTRY    INST  OP=19,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,04120020
               SUB=NO,F8UPC=NO,MASK=06                                  04140020
EXTRN    INST  OP=1A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04160020
               SUB=NO,F8UPC=NO,MASK=06                                  04180020
LTORG    INST  OP=22,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,04200020
               SUB=YES,F8UPC=YES,MASK=00                                04220020
MACRO    INST  OP=0D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04240020
               SUB=NO,F8UPC=NO,MASK=00                                  04260020
MEXIT    INST  OP=0F,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04280020
               SUB=NO,F8UPC=NO,MASK=00                                  04300020
MNOTE    INST  OP=0E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04320020
               SUB=NO,F8UPC=NO,MASK=00                                  04340020
OPSYN    INST  OP=2D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04350023
               SUB=NO,F8UPC=NO,MASK=08                                  04355023
PRINT    INST  OP=13,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04360020
               SUB=NO,F8UPC=NO,MASK=04                                  04380020
PUNCH    INST  OP=16,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04400020
               SUB=NO,F8UPC=NO,MASK=06                                  04420020
REPRO    INST  OP=17,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04440020
               SUB=NO,F8UPC=NO,MASK=04                                  04460020
SPACE    INST  OP=14,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04480020
               SUB=NO,F8UPC=NO,MASK=04                                  04500020
START    INST  OP=1B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04520020
               SUB=NO,F8UPC=YES,MASK=00                                 04540020
TITLE    INST  OP=18,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04560020
               SUB=NO,F8UPC=NO,MASK=00                                  04580020
USING    INST  OP=23,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,04600020
               SUB=YES,F8UPC=YES,MASK=06                                04620020
WXTRN    INST  OP=2E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,04630025
               SUB=YES,F8UPC=YES,MASK=06                                04635025
GLDEND   EQU       *                                                    04640023
         END                                                            04660020
./ ADD NAME=ASMGIS44
IS44     TITLE     'INSTRUCTION SET FOR A 360 MODEL 44'                 00020026
         ISEQ      73,78                                                00040021
ASMGIS44 INSTSET                                                        00060020
A        INST  OP=5A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00080020
               LIT1=NO,LIT23=YES                                        00100020
B        INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00120020
               LIT1=NO,LIT23=YES,MASK=2F                                00140020
C        INST  OP=59,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00160020
               LIT1=NO,LIT23=YES                                        00180020
D        INST  OP=5D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00200020
               LIT1=NO,LIT23=YES                                        00220020
L        INST  OP=58,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00240020
               LIT1=NO,LIT23=YES                                        00260020
M        INST  OP=5C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00280020
               LIT1=NO,LIT23=YES                                        00300020
N        INST  OP=54,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00320020
               LIT1=NO,LIT23=YES                                        00340020
O        INST  OP=56,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00360020
               LIT1=NO,LIT23=YES                                        00380020
S        INST  OP=5B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00400020
               LIT1=NO,LIT23=YES                                        00420020
X        INST  OP=57,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00440020
               LIT1=NO,LIT23=YES                                        00460020
AD       INST  OP=6A,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00480020
               LIT1=NO,LIT23=YES                                        00500020
AE       INST  OP=7A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00520020
               LIT1=NO,LIT23=YES                                        00540020
AH       INST  OP=4A,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00560020
               LIT1=NO,LIT23=YES                                        00580020
AL       INST  OP=5E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00600020
               LIT1=NO,LIT23=YES                                        00620020
AR       INST  OP=1A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00640020
               LIT1=NO,LIT23=NO                                         00660020
AU       INST  OP=7E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00680020
               LIT1=NO,LIT23=YES                                        00700020
AW       INST  OP=6E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00720020
               LIT1=NO,LIT23=YES                                        00740020
BC       INST  OP=47,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00760020
               LIT1=NO,LIT23=YES                                        00780020
BE       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00800020
               LIT1=NO,LIT23=YES,MASK=28                                00820020
BH       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00840020
               LIT1=NO,LIT23=YES,MASK=22                                00860020
BL       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00880020
               LIT1=NO,LIT23=YES,MASK=24                                00900020
BM       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00920020
               LIT1=NO,LIT23=YES,MASK=24                                00940020
BO       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00960020
               LIT1=NO,LIT23=YES,MASK=21                                00980020
BP       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01000020
               LIT1=NO,LIT23=YES,MASK=22                                01020020
BR       INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01040020
               LIT1=NO,LIT23=NO,MASK=2F                                 01060020
BZ       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01080020
               LIT1=NO,LIT23=YES,MASK=28                                01100020
CD       INST  OP=69,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01120020
               LIT1=NO,LIT23=YES                                        01140020
CE       INST  OP=79,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01160020
               LIT1=NO,LIT23=YES                                        01180020
CH       INST  OP=49,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01200020
               LIT1=NO,LIT23=YES                                        01220020
CL       INST  OP=55,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01240020
               LIT1=NO,LIT23=YES                                        01260020
CR       INST  OP=19,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01280020
               LIT1=NO,LIT23=NO                                         01300020
DC       INST  OP=26,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01320020
               SUB=NO,F8UPC=YES,MASK=02                                 01340020
DD       INST  OP=6D,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01360020
               LIT1=NO,LIT23=YES                                        01380020
DE       INST  OP=7D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01400020
               LIT1=NO,LIT23=YES                                        01420020
DR       INST  OP=1D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,01440020
               LIT1=NO,LIT23=NO                                         01460020
DS       INST  OP=27,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01480020
               SUB=NO,F8UPC=YES,MASK=02                                 01500020
EX       INST  OP=44,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01510022
               LIT1=NO,LIT23=YES                                        01515022
IC       INST  OP=43,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01520020
               LIT1=NO,LIT23=YES                                        01540020
LA       INST  OP=41,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01560020
               LIT1=NO,LIT23=YES                                        01580020
LD       INST  OP=68,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01600020
               LIT1=NO,LIT23=YES                                        01620020
LE       INST  OP=78,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01640020
               LIT1=NO,LIT23=YES                                        01660020
LH       INST  OP=48,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01680020
               LIT1=NO,LIT23=YES                                        01700020
LM       INST  OP=98,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01710022
               LIT1=NO,LIT23=YES                                        01715022
LR       INST  OP=18,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01720020
               LIT1=NO,LIT23=NO                                         01740020
MD       INST  OP=6C,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01760020
               LIT1=NO,LIT23=YES                                        01780020
ME       INST  OP=7C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01800020
               LIT1=NO,LIT23=YES                                        01820020
MH       INST  OP=4C,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01840020
               LIT1=NO,LIT23=YES                                        01860020
MR       INST  OP=1C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,01880020
               LIT1=NO,LIT23=NO                                         01900020
NI       INST  OP=94,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01920020
               LIT1=NO,LIT23=NO                                         01940020
NR       INST  OP=14,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01960020
               LIT1=NO,LIT23=NO                                         01980020
OI       INST  OP=96,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02000020
               LIT1=NO,LIT23=NO                                         02020020
OR       INST  OP=16,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02040020
               LIT1=NO,LIT23=NO                                         02060020
SD       INST  OP=6B,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02080020
               LIT1=NO,LIT23=YES                                        02100020
SE       INST  OP=7B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02120020
               LIT1=NO,LIT23=YES                                        02140020
SH       INST  OP=4B,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02160020
               LIT1=NO,LIT23=YES                                        02180020
SL       INST  OP=5F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02200020
               LIT1=NO,LIT23=YES                                        02220020
SR       INST  OP=1B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02240020
               LIT1=NO,LIT23=NO                                         02260020
ST       INST  OP=50,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02280020
               LIT1=NO,LIT23=NO                                         02300020
SU       INST  OP=7F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02320020
               LIT1=NO,LIT23=YES                                        02340020
SW       INST  OP=6F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02360020
               LIT1=NO,LIT23=YES                                        02380020
TM       INST  OP=91,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02400020
               LIT1=YES,LIT23=NO                                        02420020
TS       INST  OP=93,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02440020
               LIT1=NO,LIT23=NO                                         02460020
XI       INST  OP=97,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02480020
               LIT1=NO,LIT23=NO                                         02500020
XR       INST  OP=17,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02520020
               LIT1=NO,LIT23=NO                                         02540020
ADR      INST  OP=2A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,02560020
               LIT1=NO,LIT23=NO                                         02580020
AER      INST  OP=3A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,02600020
               LIT1=NO,LIT23=NO                                         02620020
AGO      INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,02640020
               SUB=NO,F8UPC=NO,MASK=00                                  02660020
AIF      INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,02680020
               SUB=NO,F8UPC=NO,MASK=00                                  02700020
ALR      INST  OP=1E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02720020
               LIT1=NO,LIT23=NO                                         02740020
AUR      INST  OP=3E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,02760020
               LIT1=NO,LIT23=NO                                         02780020
AWR      INST  OP=2E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,02800020
               LIT1=NO,LIT23=NO                                         02820020
BAL      INST  OP=45,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02840020
               LIT1=NO,LIT23=YES                                        02860020
BCR      INST  OP=07,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02880020
               LIT1=NO,LIT23=NO                                         02900020
BCT      INST  OP=46,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02920020
               LIT1=NO,LIT23=YES                                        02940020
BER      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,02960020
               LIT1=NO,LIT23=NO,MASK=28                                 02980020
BHR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03000020
               LIT1=NO,LIT23=NO,MASK=22                                 03020020
BLR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03040020
               LIT1=NO,LIT23=NO,MASK=24                                 03060020
BMR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03080020
               LIT1=NO,LIT23=NO,MASK=24                                 03100020
BNE      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03120020
               LIT1=NO,LIT23=YES,MASK=27                                03140020
BNH      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03160020
               LIT1=NO,LIT23=YES,MASK=2D                                03180020
BNL      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03200020
               LIT1=NO,LIT23=YES,MASK=2B                                03220020
BNM      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03240020
               LIT1=NO,LIT23=YES,MASK=2B                                03260020
BNO      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03280020
               LIT1=NO,LIT23=YES,MASK=2E                                03300020
BNP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03320020
               LIT1=NO,LIT23=YES,MASK=2D                                03340020
BNZ      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03360020
               LIT1=NO,LIT23=YES,MASK=27                                03380020
BOR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03400020
               LIT1=NO,LIT23=NO,MASK=21                                 03420020
BPR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03440020
               LIT1=NO,LIT23=NO,MASK=22                                 03460020
BXH      INST  OP=86,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03470022
               LIT1=NO,LIT23=YES                                        03475022
BZR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03480020
               LIT1=NO,LIT23=NO,MASK=28                                 03500020
CCW      INST  OP=28,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=YES,    ,03520020
               SUB=YES,F8UPC=YES,MASK=00                                03540020
CDR      INST  OP=29,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03560020
               LIT1=NO,LIT23=NO                                         03580020
CER      INST  OP=39,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03600020
               LIT1=NO,LIT23=NO                                         03620020
CLI      INST  OP=95,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03640020
               LIT1=YES,LIT23=NO                                        03660020
CLR      INST  OP=15,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03680020
               LIT1=NO,LIT23=NO                                         03700020
COM      INST  OP=1E,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,03720023
               SUB=NO,F8UPC=YES,MASK=00                                 03740023
CXD      INST  OP=2C,TYPE=ASSEM,UPC=YES,STE=YES,LCR=NO,F7XREF=NO,      ,03760020
               SUB=NO,F8UPC=YES,MASK=00                                 03780020
DDR      INST  OP=2D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03800020
               LIT1=NO,LIT23=NO                                         03820020
DER      INST  OP=3D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03840020
               LIT1=NO,LIT23=NO                                         03860020
DXD      INST  OP=2B,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,03880020
               SUB=NO,F8UPC=YES,MASK=0A                                 03900020
END      INST  OP=21,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,03920020
               SUB=YES,F8UPC=NO,MASK=04                                 03940020
EQU      INST  OP=1F,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,03960020
               SUB=YES,F8UPC=NO,MASK=0A                                 03980020
HDR      INST  OP=24,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04000020
               LIT1=NO,LIT23=NO                                         04020020
HDV      INST  OP=9E,TYPE=EXTEN,FLOAT=NO,EVEN=NO,ALIGN=C,              ,04030024
               CLASS=3,LIT1=NO,LIT23=NO,MASK=21                         04035024
HER      INST  OP=34,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04040020
               LIT1=NO,LIT23=NO                                         04060020
HIO      INST  OP=9E,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04080020
               LIT1=NO,LIT23=NO                                         04100020
ISK      INST  OP=09,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04120020
               LIT1=NO,LIT23=NO                                         04140020
LCR      INST  OP=13,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04160020
               LIT1=NO,LIT23=NO                                         04180020
LDR      INST  OP=28,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04200020
               LIT1=NO,LIT23=NO                                         04220020
LER      INST  OP=38,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04240020
               LIT1=NO,LIT23=NO                                         04260020
LNR      INST  OP=11,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04280020
               LIT1=NO,LIT23=NO                                         04300020
LPR      INST  OP=10,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04320020
               LIT1=NO,LIT23=NO                                         04340020
LTR      INST  OP=12,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04360020
               LIT1=NO,LIT23=NO                                         04380020
MDR      INST  OP=2C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04400020
               LIT1=NO,LIT23=NO                                         04420020
MER      INST  OP=3C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04440020
               LIT1=NO,LIT23=NO                                         04460020
MVI      INST  OP=92,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04480020
               LIT1=NO,LIT23=NO                                         04500020
NOP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,04520020
               LIT1=NO,LIT23=YES,MASK=20                                04540020
ORG      INST  OP=20,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,04560020
               SUB=YES,F8UPC=YES,MASK=04                                04580020
POP      INST  OP=2F,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,04590027
               SUB=NO,F8UPC=NO,MASK=06                                  04592027
SDR      INST  OP=2B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04600020
               LIT1=NO,LIT23=NO                                         04620020
SER      INST  OP=3B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04640020
               LIT1=NO,LIT23=NO                                         04660020
SIO      INST  OP=9C,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04680020
               LIT1=NO,LIT23=NO                                         04700020
SLA      INST  OP=8B,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04720020
               LIT1=NO,LIT23=NO                                         04740020
SLL      INST  OP=89,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04760020
               LIT1=NO,LIT23=NO                                         04780020
SLR      INST  OP=1F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04800020
               LIT1=NO,LIT23=NO                                         04820020
SPM      INST  OP=04,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04840020
               LIT1=NO,LIT23=NO                                         04860020
SRA      INST  OP=8A,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04880020
               LIT1=NO,LIT23=NO                                         04900020
SRL      INST  OP=88,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04920020
               LIT1=NO,LIT23=NO                                         04940020
SSK      INST  OP=08,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04960020
               LIT1=NO,LIT23=NO                                         04980020
SSM      INST  OP=80,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05000020
               LIT1=YES,LIT23=NO                                        05020020
STC      INST  OP=42,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05040020
               LIT1=NO,LIT23=NO                                         05060020
STD      INST  OP=60,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,05080020
               LIT1=NO,LIT23=NO                                         05100020
STE      INST  OP=70,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,05120020
               LIT1=NO,LIT23=NO                                         05140020
STH      INST  OP=40,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,05160020
               LIT1=NO,LIT23=NO                                         05180020
STM      INST  OP=90,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,05190022
               LIT1=NO,LIT23=NO                                         05195022
SUR      INST  OP=3F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05200020
               LIT1=NO,LIT23=NO                                         05220020
SVC      INST  OP=0A,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05240020
               LIT1=NO,LIT23=NO                                         05260020
SWR      INST  OP=2F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05280020
               LIT1=NO,LIT23=NO                                         05300020
TCH      INST  OP=9F,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05320020
               LIT1=NO,LIT23=NO                                         05340020
TIO      INST  OP=9D,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05360020
               LIT1=NO,LIT23=NO                                         05380020
ACTR     INST  OP=25,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,05400020
               SUB=NO,F8UPC=NO,MASK=00                                  05420020
ANOP     INST  OP=0B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,05440020
               SUB=NO,F8UPC=NO,MASK=00                                  05460020
BALR     INST  OP=05,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05480020
               LIT1=NO,LIT23=NO                                         05500020
BCTR     INST  OP=06,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05520020
               LIT1=NO,LIT23=NO                                         05540020
BNER     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,05560020
               LIT1=NO,LIT23=NO,MASK=27                                 05580020
BNHR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,05600020
               LIT1=NO,LIT23=NO,MASK=2D                                 05620020
BNLR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,05640020
               LIT1=NO,LIT23=NO,MASK=2B                                 05660020
BNMR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,05680020
               LIT1=NO,LIT23=NO,MASK=2B                                 05700020
BNOR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,05720020
               LIT1=NO,LIT23=NO,MASK=2E                                 05740020
BNPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,05760020
               LIT1=NO,LIT23=NO,MASK=2D                                 05780020
BNZR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,05800020
               LIT1=NO,LIT23=NO,MASK=27                                 05820020
BXLE     INST  OP=87,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,05830022
               LIT1=NO,LIT23=YES                                        05835022
CHPM     INST  OP=B3,TYPE=MACH,CLASS=2,ALIGN=F,FLOAT=NO,EVEN=NO,       ,05840020
               LIT1=YES,LIT23=NO                                        05860020
CNOP     INST  OP=29,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=NO,      ,05880020
               SUB=YES,F8UPC=YES,MASK=06                                05900020
COPY     INST  OP=0C,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,05920020
               SUB=NO,F8UPC=NO,MASK=00                                  05940020
DROP     INST  OP=24,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,05960020
               SUB=YES,F8UPC=YES,MASK=06                                05980020
GBLA     INST  OP=00,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06000020
               SUB=NO,F8UPC=NO,MASK=00                                  06020020
GBLB     INST  OP=01,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06040020
               SUB=NO,F8UPC=NO,MASK=00                                  06060020
GBLC     INST  OP=02,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06080020
               SUB=NO,F8UPC=NO,MASK=00                                  06100020
ICTL     INST  OP=11,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06120020
               SUB=NO,F8UPC=NO,MASK=00                                  06140020
ISEQ     INST  OP=12,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06160020
               SUB=NO,F8UPC=NO,MASK=00                                  06180020
LCDR     INST  OP=23,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06200020
               LIT1=NO,LIT23=NO                                         06220020
LCER     INST  OP=33,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06240020
               LIT1=NO,LIT23=NO                                         06260020
LCLA     INST  OP=03,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06280020
               SUB=NO,F8UPC=NO,MASK=00                                  06300020
LCLB     INST  OP=04,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06320020
               SUB=NO,F8UPC=NO,MASK=00                                  06340020
LCLC     INST  OP=05,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06360020
               SUB=NO,F8UPC=NO,MASK=00                                  06380020
LNDR     INST  OP=21,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06400020
               LIT1=NO,LIT23=NO                                         06420020
LNER     INST  OP=31,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06440020
               LIT1=NO,LIT23=NO                                         06460020
LPDR     INST  OP=20,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06480020
               LIT1=NO,LIT23=NO                                         06500020
LPER     INST  OP=30,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06520020
               LIT1=NO,LIT23=NO                                         06540020
LPSW     INST  OP=82,TYPE=MACH,CLASS=3,ALIGN=D,FLOAT=NO,EVEN=NO,       ,06560020
               LIT1=YES,LIT23=NO                                        06580020
LPSX     INST  OP=B2,TYPE=MACH,CLASS=3,ALIGN=D,FLOAT=NO,EVEN=NO,       ,06600020
               LIT1=YES,LIT23=NO                                        06620020
LTDR     INST  OP=22,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06640020
               LIT1=NO,LIT23=NO                                         06660020
LTER     INST  OP=32,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06680020
               LIT1=NO,LIT23=NO                                         06700020
MEND     INST  OP=10,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06720020
               SUB=NO,F8UPC=NO,MASK=00                                  06740020
NOPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06760020
               LIT1=NO,LIT23=NO,MASK=20                                 06780020
PUSH     INST  OP=30,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,06790027
               SUB=NO,F8UPC=NO,MASK=06                                  06792027
RDDW     INST  OP=B5,TYPE=MACH,CLASS=2,ALIGN=F,FLOAT=NO,EVEN=NO,       ,06800020
               LIT1=NO,LIT23=NO                                         06820020
SETA     INST  OP=06,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06840020
               SUB=NO,F8UPC=NO,MASK=00                                  06860020
SETB     INST  OP=07,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06880020
               SUB=NO,F8UPC=NO,MASK=00                                  06900020
SETC     INST  OP=08,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06920020
               SUB=NO,F8UPC=NO,MASK=00                                  06940020
SLDA     INST  OP=8F,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,06960020
               LIT1=NO,LIT23=NO                                         06980020
SLDL     INST  OP=8D,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07000020
               LIT1=NO,LIT23=NO                                         07020020
SRDA     INST  OP=8E,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07040020
               LIT1=NO,LIT23=NO                                         07060020
SRDL     INST  OP=8C,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,07080020
               LIT1=NO,LIT23=NO                                         07100020
WRDW     INST  OP=B4,TYPE=MACH,CLASS=2,ALIGN=F,FLOAT=NO,EVEN=NO,       ,07120020
               LIT1=YES,LIT23=NO                                        07140020
AIFB     INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07160020
               SUB=NO,F8UPC=NO,MASK=00                                  07180020
AGOB     INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07200020
               SUB=NO,F8UPC=NO,MASK=00                                  07220020
CSECT    INST  OP=1C,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,07240020
               SUB=NO,F8UPC=YES,MASK=00                                 07260020
DSECT    INST  OP=1D,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,07280020
               SUB=NO,F8UPC=YES,MASK=08                                 07300020
EJECT    INST  OP=15,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07320020
               SUB=NO,F8UPC=NO,MASK=04                                  07340020
ENTRY    INST  OP=19,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,07360020
               SUB=NO,F8UPC=NO,MASK=06                                  07380020
EXTRN    INST  OP=1A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07400020
               SUB=NO,F8UPC=NO,MASK=06                                  07420020
LTORG    INST  OP=22,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,07440020
               SUB=YES,F8UPC=YES,MASK=00                                07460020
MACRO    INST  OP=0D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07480020
               SUB=NO,F8UPC=NO,MASK=00                                  07500020
MEXIT    INST  OP=0F,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07520020
               SUB=NO,F8UPC=NO,MASK=00                                  07540020
MNOTE    INST  OP=0E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07560020
               SUB=NO,F8UPC=NO,MASK=00                                  07580020
OPSYN    INST  OP=2D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07590023
               SUB=NO,F8UPC=NO,MASK=08                                  07595023
PRINT    INST  OP=13,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07600020
               SUB=NO,F8UPC=NO,MASK=04                                  07620020
PUNCH    INST  OP=16,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07640020
               SUB=NO,F8UPC=NO,MASK=06                                  07660020
REPRO    INST  OP=17,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07680020
               SUB=NO,F8UPC=NO,MASK=04                                  07700020
SPACE    INST  OP=14,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07720020
               SUB=NO,F8UPC=NO,MASK=04                                  07740020
START    INST  OP=1B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07760020
               SUB=NO,F8UPC=YES,MASK=00                                 07780020
TITLE    INST  OP=18,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07800020
               SUB=NO,F8UPC=NO,MASK=00                                  07820020
USING    INST  OP=23,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,07840020
               SUB=YES,F8UPC=YES,MASK=06                                07860020
WXTRN    INST  OP=2E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07870025
               SUB=YES,F8UPC=YES,MASK=06                                07875025
GLDEND   EQU       *                                                    07880023
         END                                                            07900020
./ ADD NAME=ASMGIS60
IS60     TITLE     'INSTRUCTION SET FOR SYSTEM 360 MACHINES'            00020026
         ISEQ      73,78                                                00040026
*                                                                       00060026
         COPY      ASMGSET                                              00080026
ASMGIS60 INSTSET                                                        00100026
A        INST  OP=5A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00120026
               LIT1=NO,LIT23=YES                                        00140026
B        INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00160026
               LIT1=NO,LIT23=YES,MASK=2F                                00180026
C        INST  OP=59,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00200026
               LIT1=NO,LIT23=YES                                        00220026
D        INST  OP=5D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00240026
               LIT1=NO,LIT23=YES                                        00260026
L        INST  OP=58,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00280026
               LIT1=NO,LIT23=YES                                        00300026
M        INST  OP=5C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00320026
               LIT1=NO,LIT23=YES                                        00340026
N        INST  OP=54,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00360026
               LIT1=NO,LIT23=YES                                        00380026
O        INST  OP=56,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00400026
               LIT1=NO,LIT23=YES                                        00420026
S        INST  OP=5B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00440026
               LIT1=NO,LIT23=YES                                        00460026
X        INST  OP=57,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00480026
               LIT1=NO,LIT23=YES                                        00500026
AD       INST  OP=6A,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00520026
               LIT1=NO,LIT23=YES                                        00540026
AE       INST  OP=7A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00560026
               LIT1=NO,LIT23=YES                                        00580026
AH       INST  OP=4A,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00600026
               LIT1=NO,LIT23=YES                                        00620026
AL       INST  OP=5E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00640026
               LIT1=NO,LIT23=YES                                        00660026
AP       INST  OP=FA,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00680026
               LIT1=NO,LIT23=YES                                        00700026
AR       INST  OP=1A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00720026
               LIT1=NO,LIT23=NO                                         00740026
AU       INST  OP=7E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00760026
               LIT1=NO,LIT23=YES                                        00780026
AW       INST  OP=6E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00800026
               LIT1=NO,LIT23=YES                                        00820026
BC       INST  OP=47,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00840026
               LIT1=NO,LIT23=YES                                        00860026
BE       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00880026
               LIT1=NO,LIT23=YES,MASK=28                                00900026
BH       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00920026
               LIT1=NO,LIT23=YES,MASK=22                                00940026
BL       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00960026
               LIT1=NO,LIT23=YES,MASK=24                                00980026
BM       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01000026
               LIT1=NO,LIT23=YES,MASK=24                                01020026
BO       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01040026
               LIT1=NO,LIT23=YES,MASK=21                                01060026
BP       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01080026
               LIT1=NO,LIT23=YES,MASK=22                                01100026
BR       INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01120026
               LIT1=NO,LIT23=NO,MASK=2F                                 01140026
BZ       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01160026
               LIT1=NO,LIT23=YES,MASK=28                                01180026
CD       INST  OP=69,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01200026
               LIT1=NO,LIT23=YES                                        01220026
CE       INST  OP=79,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01240026
               LIT1=NO,LIT23=YES                                        01260026
CH       INST  OP=49,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01280026
               LIT1=NO,LIT23=YES                                        01300026
CL       INST  OP=55,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01320026
               LIT1=NO,LIT23=YES                                        01340026
CP       INST  OP=F9,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01360026
               LIT1=YES,LIT23=YES                                       01380026
CR       INST  OP=19,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01400026
               LIT1=NO,LIT23=NO                                         01420026
DC       INST  OP=26,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01440026
               SUB=NO,F8UPC=YES,MASK=02                                 01460026
DD       INST  OP=6D,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01480026
               LIT1=NO,LIT23=YES                                        01500026
DE       INST  OP=7D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01520026
               LIT1=NO,LIT23=YES                                        01540026
DP       INST  OP=FD,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01560026
               LIT1=NO,LIT23=YES                                        01580026
DR       INST  OP=1D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,01600026
               LIT1=NO,LIT23=NO                                         01620026
DS       INST  OP=27,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01640026
               SUB=NO,F8UPC=YES,MASK=02                                 01660026
ED       INST  OP=DE,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01680026
               LIT1=NO,LIT23=YES                                        01700026
EX       INST  OP=44,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01720026
               LIT1=NO,LIT23=YES                                        01740026
IC       INST  OP=43,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01760026
               LIT1=NO,LIT23=YES                                        01780026
LA       INST  OP=41,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01800026
               LIT1=NO,LIT23=YES                                        01820026
LD       INST  OP=68,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01840026
               LIT1=NO,LIT23=YES                                        01860026
LE       INST  OP=78,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01880026
               LIT1=NO,LIT23=YES                                        01900026
LH       INST  OP=48,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01920026
               LIT1=NO,LIT23=YES                                        01940026
LM       INST  OP=98,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01960026
               LIT1=NO,LIT23=YES                                        01980026
LR       INST  OP=18,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02000026
               LIT1=NO,LIT23=NO                                         02020026
MD       INST  OP=6C,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02040026
               LIT1=NO,LIT23=YES                                        02060026
ME       INST  OP=7C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02080026
               LIT1=NO,LIT23=YES                                        02100026
MH       INST  OP=4C,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02120026
               LIT1=NO,LIT23=YES                                        02140026
MP       INST  OP=FC,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02160026
               LIT1=NO,LIT23=YES                                        02180026
MR       INST  OP=1C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,02200026
               LIT1=NO,LIT23=NO                                         02220026
NC       INST  OP=D4,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02240026
               LIT1=NO,LIT23=YES                                        02260026
NI       INST  OP=94,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02280026
               LIT1=NO,LIT23=NO                                         02300026
NR       INST  OP=14,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02320026
               LIT1=NO,LIT23=NO                                         02340026
OC       INST  OP=D6,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02360026
               LIT1=NO,LIT23=YES                                        02380026
OI       INST  OP=96,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02400026
               LIT1=NO,LIT23=NO                                         02420026
OR       INST  OP=16,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02440026
               LIT1=NO,LIT23=NO                                         02460026
SD       INST  OP=6B,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02480026
               LIT1=NO,LIT23=YES                                        02500026
SE       INST  OP=7B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02520026
               LIT1=NO,LIT23=YES                                        02540026
SH       INST  OP=4B,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02560026
               LIT1=NO,LIT23=YES                                        02580026
SL       INST  OP=5F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02600026
               LIT1=NO,LIT23=YES                                        02620026
SP       INST  OP=FB,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02640026
               LIT1=NO,LIT23=YES                                        02660026
SR       INST  OP=1B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02680026
               LIT1=NO,LIT23=NO                                         02700026
ST       INST  OP=50,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02720026
               LIT1=NO,LIT23=NO                                         02740026
SU       INST  OP=7F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02760026
               LIT1=NO,LIT23=YES                                        02780026
SW       INST  OP=6F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02800026
               LIT1=NO,LIT23=YES                                        02820026
TM       INST  OP=91,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02840026
               LIT1=YES,LIT23=NO                                        02860026
TR       INST  OP=DC,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02880026
               LIT1=NO,LIT23=YES                                        02900026
TS       INST  OP=93,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02920026
               LIT1=NO,LIT23=NO                                         02940026
XC       INST  OP=D7,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02960026
               LIT1=NO,LIT23=YES                                        02980026
XI       INST  OP=97,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03000026
               LIT1=NO,LIT23=NO                                         03020026
XR       INST  OP=17,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03040026
               LIT1=NO,LIT23=NO                                         03060026
ADR      INST  OP=2A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03080026
               LIT1=NO,LIT23=NO                                         03100026
AER      INST  OP=3A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03120026
               LIT1=NO,LIT23=NO                                         03140026
AGO      INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03160026
               SUB=NO,F8UPC=NO,MASK=00                                  03180026
AIF      INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03200026
               SUB=NO,F8UPC=NO,MASK=00                                  03220026
ALR      INST  OP=1E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03240026
               LIT1=NO,LIT23=NO                                         03260026
AUR      INST  OP=3E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03280026
               LIT1=NO,LIT23=NO                                         03300026
AWR      INST  OP=2E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03320026
               LIT1=NO,LIT23=NO                                         03340026
AXR      INST  OP=36,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,03360026
               LIT1=NO,LIT23=NO                                         03380026
BAL      INST  OP=45,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03400026
               LIT1=NO,LIT23=YES                                        03420026
BCR      INST  OP=07,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03440026
               LIT1=NO,LIT23=NO                                         03460026
BCT      INST  OP=46,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03480026
               LIT1=NO,LIT23=YES                                        03500026
BER      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03520026
               LIT1=NO,LIT23=NO,MASK=28                                 03540026
BHR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03560026
               LIT1=NO,LIT23=NO,MASK=22                                 03580026
BLR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03600026
               LIT1=NO,LIT23=NO,MASK=24                                 03620026
BMR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03640026
               LIT1=NO,LIT23=NO,MASK=24                                 03660026
BNE      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03680026
               LIT1=NO,LIT23=YES,MASK=27                                03700026
BNH      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03720026
               LIT1=NO,LIT23=YES,MASK=2D                                03740026
BNL      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03760026
               LIT1=NO,LIT23=YES,MASK=2B                                03780026
BNM      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03800026
               LIT1=NO,LIT23=YES,MASK=2B                                03820026
BNO      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03840026
               LIT1=NO,LIT23=YES,MASK=2E                                03860026
BNP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03880026
               LIT1=NO,LIT23=YES,MASK=2D                                03900026
BNZ      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03920026
               LIT1=NO,LIT23=YES,MASK=27                                03940026
BOR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03960026
               LIT1=NO,LIT23=NO,MASK=21                                 03980026
BPR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,04000026
               LIT1=NO,LIT23=NO,MASK=22                                 04020026
BXH      INST  OP=86,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,04040026
               LIT1=NO,LIT23=YES                                        04060026
BZR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,04080026
               LIT1=NO,LIT23=NO,MASK=28                                 04100026
CCW      INST  OP=28,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=YES,    ,04120026
               SUB=YES,F8UPC=YES,MASK=00                                04140026
CDR      INST  OP=29,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04160026
               LIT1=NO,LIT23=NO                                         04180026
CER      INST  OP=39,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04200026
               LIT1=NO,LIT23=NO                                         04220026
CLC      INST  OP=D5,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04240026
               LIT1=YES,LIT23=YES                                       04260026
CLI      INST  OP=95,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04280026
               LIT1=YES,LIT23=NO                                        04300026
CLR      INST  OP=15,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04320026
               LIT1=NO,LIT23=NO                                         04340026
COM      INST  OP=1E,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04360026
               SUB=NO,F8UPC=YES,MASK=00                                 04380026
CVB      INST  OP=4F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04400026
               LIT1=NO,LIT23=YES                                        04420026
CVD      INST  OP=4E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04440026
               LIT1=NO,LIT23=NO                                         04460026
CXD      INST  OP=2C,TYPE=ASSEM,UPC=YES,STE=YES,LCR=NO,F7XREF=NO,      ,04480026
               SUB=NO,F8UPC=YES,MASK=00                                 04500026
DDR      INST  OP=2D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04520026
               LIT1=NO,LIT23=NO                                         04540026
DER      INST  OP=3D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04560026
               LIT1=NO,LIT23=NO                                         04580026
DXD      INST  OP=2B,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04600026
               SUB=NO,F8UPC=YES,MASK=0A                                 04620026
END      INST  OP=21,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,04640026
               SUB=YES,F8UPC=NO,MASK=04                                 04660026
EQU      INST  OP=1F,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,04680026
               SUB=YES,F8UPC=NO,MASK=0A                                 04700026
HDR      INST  OP=24,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04720026
               LIT1=NO,LIT23=NO                                         04740026
HDV      INST  OP=9E,TYPE=EXTEN,FLOAT=NO,EVEN=NO,ALIGN=C,              ,04760026
               CLASS=3,LIT1=NO,LIT23=NO,MASK=21                         04780026
HER      INST  OP=34,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04800026
               LIT1=NO,LIT23=NO                                         04820026
HIO      INST  OP=9E,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04840026
               LIT1=NO,LIT23=NO                                         04860026
ISK      INST  OP=09,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04880026
               LIT1=NO,LIT23=NO                                         04900026
LCR      INST  OP=13,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04920026
               LIT1=NO,LIT23=NO                                         04940026
LDR      INST  OP=28,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04960026
               LIT1=NO,LIT23=NO                                         04980026
LER      INST  OP=38,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05000026
               LIT1=NO,LIT23=NO                                         05020026
LNR      INST  OP=11,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05040026
               LIT1=NO,LIT23=NO                                         05060026
LPR      INST  OP=10,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05080026
               LIT1=NO,LIT23=NO                                         05100026
LTR      INST  OP=12,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05120026
               LIT1=NO,LIT23=NO                                         05140026
MDR      INST  OP=2C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05160026
               LIT1=NO,LIT23=NO                                         05180026
MER      INST  OP=3C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05200026
               LIT1=NO,LIT23=NO                                         05220026
MVC      INST  OP=D2,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05240026
               LIT1=NO,LIT23=YES                                        05260026
MVI      INST  OP=92,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05280026
               LIT1=NO,LIT23=NO                                         05300026
MVN      INST  OP=D1,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05320026
               LIT1=NO,LIT23=YES                                        05340026
MVO      INST  OP=F1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05360026
               LIT1=NO,LIT23=YES                                        05380026
MVZ      INST  OP=D3,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05400026
               LIT1=NO,LIT23=YES                                        05420026
MXD      INST  OP=67,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=DOUBLE,  ,05440026
               LIT1=NO,LIT23=YES                                        05460026
MXR      INST  OP=26,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,05480026
               LIT1=NO,LIT23=NO                                         05500026
NOP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,05520026
               LIT1=NO,LIT23=YES,MASK=20                                05540026
ORG      INST  OP=20,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,05560026
               SUB=YES,F8UPC=YES,MASK=04                                05580026
POP      INST  OP=2F,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,05590027
               SUB=NO,F8UPC=NO,MASK=06                                  05592027
RDD      INST  OP=85,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05600026
               LIT1=NO,LIT23=NO                                         05620026
SDR      INST  OP=2B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05640026
               LIT1=NO,LIT23=NO                                         05660026
SER      INST  OP=3B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05680026
               LIT1=NO,LIT23=NO                                         05700026
SIO      INST  OP=9C,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05720026
               LIT1=NO,LIT23=NO                                         05740026
SLA      INST  OP=8B,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05760026
               LIT1=NO,LIT23=NO                                         05780026
SLL      INST  OP=89,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05800026
               LIT1=NO,LIT23=NO                                         05820026
SLR      INST  OP=1F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05840026
               LIT1=NO,LIT23=NO                                         05860026
SPM      INST  OP=04,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05880026
               LIT1=NO,LIT23=NO                                         05900026
SRA      INST  OP=8A,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05920026
               LIT1=NO,LIT23=NO                                         05940026
SRL      INST  OP=88,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05960026
               LIT1=NO,LIT23=NO                                         05980026
SSK      INST  OP=08,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06000026
               LIT1=NO,LIT23=NO                                         06020026
SSM      INST  OP=80,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06040026
               LIT1=YES,LIT23=NO                                        06060026
STC      INST  OP=42,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06080026
               LIT1=NO,LIT23=NO                                         06100026
STD      INST  OP=60,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,06120026
               LIT1=NO,LIT23=NO                                         06140026
STE      INST  OP=70,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,06160026
               LIT1=NO,LIT23=NO                                         06180026
STH      INST  OP=40,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,06200026
               LIT1=NO,LIT23=NO                                         06220026
STM      INST  OP=90,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,06240026
               LIT1=NO,LIT23=NO                                         06260026
SUR      INST  OP=3F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06280026
               LIT1=NO,LIT23=NO                                         06300026
SVC      INST  OP=0A,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06320026
               LIT1=NO,LIT23=NO                                         06340026
SWR      INST  OP=2F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06360026
               LIT1=NO,LIT23=NO                                         06380026
SXR      INST  OP=37,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,06400026
               LIT1=NO,LIT23=NO                                         06420026
TCH      INST  OP=9F,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06440026
               LIT1=NO,LIT23=NO                                         06460026
TIO      INST  OP=9D,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06480026
               LIT1=NO,LIT23=NO                                         06500026
TRT      INST  OP=DD,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06520026
               LIT1=YES,LIT23=YES                                       06540026
WRD      INST  OP=84,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06560026
               LIT1=YES,LIT23=NO                                        06580026
ZAP      INST  OP=F8,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06600026
               LIT1=NO,LIT23=YES                                        06620026
ACTR     INST  OP=25,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06640026
               SUB=NO,F8UPC=NO,MASK=00                                  06660026
ANOP     INST  OP=0B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06680026
               SUB=NO,F8UPC=NO,MASK=00                                  06700026
BALR     INST  OP=05,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06720026
               LIT1=NO,LIT23=NO                                         06740026
BCTR     INST  OP=06,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06760026
               LIT1=NO,LIT23=NO                                         06780026
BNER     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06800026
               LIT1=NO,LIT23=NO,MASK=27                                 06820026
BNHR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06840026
               LIT1=NO,LIT23=NO,MASK=2D                                 06860026
BNLR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06880026
               LIT1=NO,LIT23=NO,MASK=2B                                 06900026
BNMR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06920026
               LIT1=NO,LIT23=NO,MASK=2B                                 06940026
BNOR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06960026
               LIT1=NO,LIT23=NO,MASK=2E                                 06980026
BNPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07000026
               LIT1=NO,LIT23=NO,MASK=2D                                 07020026
BNZR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07040026
               LIT1=NO,LIT23=NO,MASK=27                                 07060026
BXLE     INST  OP=87,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,07080026
               LIT1=NO,LIT23=YES                                        07100026
CNOP     INST  OP=29,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=NO,      ,07120026
               SUB=YES,F8UPC=YES,MASK=06                                07140026
COPY     INST  OP=0C,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07160026
               SUB=NO,F8UPC=NO,MASK=00                                  07180026
DROP     INST  OP=24,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,07200026
               SUB=YES,F8UPC=YES,MASK=06                                07220026
EDMK     INST  OP=DF,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07240026
               LIT1=NO,LIT23=YES                                        07260026
GBLA     INST  OP=00,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07280026
               SUB=NO,F8UPC=NO,MASK=00                                  07300026
GBLB     INST  OP=01,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07320026
               SUB=NO,F8UPC=NO,MASK=00                                  07340026
GBLC     INST  OP=02,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07360026
               SUB=NO,F8UPC=NO,MASK=00                                  07380026
ICTL     INST  OP=11,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07400026
               SUB=NO,F8UPC=NO,MASK=00                                  07420026
ISEQ     INST  OP=12,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07440026
               SUB=NO,F8UPC=NO,MASK=00                                  07460026
LCDR     INST  OP=23,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07480026
               LIT1=NO,LIT23=NO                                         07500026
LCER     INST  OP=33,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07520026
               LIT1=NO,LIT23=NO                                         07540026
LCLA     INST  OP=03,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07560026
               SUB=NO,F8UPC=NO,MASK=00                                  07580026
LCLB     INST  OP=04,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07600026
               SUB=NO,F8UPC=NO,MASK=00                                  07620026
LCLC     INST  OP=05,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07640026
               SUB=NO,F8UPC=NO,MASK=00                                  07660026
LNDR     INST  OP=21,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07680026
               LIT1=NO,LIT23=NO                                         07700026
LNER     INST  OP=31,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07720026
               LIT1=NO,LIT23=NO                                         07740026
LPDR     INST  OP=20,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07760026
               LIT1=NO,LIT23=NO                                         07780026
LPER     INST  OP=30,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07800026
               LIT1=NO,LIT23=NO                                         07820026
LPSW     INST  OP=82,TYPE=MACH,CLASS=3,ALIGN=D,FLOAT=NO,EVEN=NO,       ,07840026
               LIT1=YES,LIT23=NO                                        07860026
LRDR     INST  OP=25,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07880026
               LIT1=NO,LIT23=NO                                         07900026
LRER     INST  OP=35,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07920026
               LIT1=NO,LIT23=NO                                         07940026
LTDR     INST  OP=22,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07960026
               LIT1=NO,LIT23=NO                                         07980026
LTER     INST  OP=32,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08000026
               LIT1=NO,LIT23=NO                                         08020026
MEND     INST  OP=10,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08040026
               SUB=NO,F8UPC=NO,MASK=00                                  08060026
MXDR     INST  OP=27,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,08080026
               LIT1=NO,LIT23=NO                                         08100026
NOPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,08120026
               LIT1=NO,LIT23=NO,MASK=20                                 08140026
PACK     INST  OP=F2,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,08160026
               LIT1=NO,LIT23=YES                                        08180026
PUSH     INST  OP=30,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,08190027
               SUB=NO,F8UPC=NO,MASK=06                                  08192027
SETA     INST  OP=06,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08200026
               SUB=NO,F8UPC=NO,MASK=00                                  08220026
SETB     INST  OP=07,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08240026
               SUB=NO,F8UPC=NO,MASK=00                                  08260026
SETC     INST  OP=08,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08280026
               SUB=NO,F8UPC=NO,MASK=00                                  08300026
SLDA     INST  OP=8F,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08320026
               LIT1=NO,LIT23=NO                                         08340026
SLDL     INST  OP=8D,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08360026
               LIT1=NO,LIT23=NO                                         08380026
SRDA     INST  OP=8E,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08400026
               LIT1=NO,LIT23=NO                                         08420026
SRDL     INST  OP=8C,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08440026
               LIT1=NO,LIT23=NO                                         08460026
UNPK     INST  OP=F3,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,08480026
               LIT1=NO,LIT23=YES                                        08500026
AIFB     INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08520026
               SUB=NO,F8UPC=NO,MASK=00                                  08540026
AGOB     INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08560026
               SUB=NO,F8UPC=NO,MASK=00                                  08580026
CSECT    INST  OP=1C,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,08600026
               SUB=NO,F8UPC=YES,MASK=00                                 08620026
DSECT    INST  OP=1D,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,08640026
               SUB=NO,F8UPC=YES,MASK=08                                 08660026
EJECT    INST  OP=15,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08680026
               SUB=NO,F8UPC=NO,MASK=04                                  08700026
ENTRY    INST  OP=19,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,08720026
               SUB=NO,F8UPC=NO,MASK=06                                  08740026
EXTRN    INST  OP=1A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08760026
               SUB=NO,F8UPC=NO,MASK=06                                  08780026
LTORG    INST  OP=22,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,08800026
               SUB=YES,F8UPC=YES,MASK=00                                08820026
MACRO    INST  OP=0D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08840026
               SUB=NO,F8UPC=NO,MASK=00                                  08860026
MEXIT    INST  OP=0F,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08880026
               SUB=NO,F8UPC=NO,MASK=00                                  08900026
MNOTE    INST  OP=0E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08920026
               SUB=NO,F8UPC=NO,MASK=00                                  08940026
OPSYN    INST  OP=2D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08960026
               SUB=NO,F8UPC=NO,MASK=08                                  08980026
PRINT    INST  OP=13,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09000026
               SUB=NO,F8UPC=NO,MASK=04                                  09020026
PUNCH    INST  OP=16,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09040026
               SUB=NO,F8UPC=NO,MASK=06                                  09060026
REPRO    INST  OP=17,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09080026
               SUB=NO,F8UPC=NO,MASK=04                                  09100026
SPACE    INST  OP=14,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09120026
               SUB=NO,F8UPC=NO,MASK=04                                  09140026
START    INST  OP=1B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09160026
               SUB=NO,F8UPC=YES,MASK=00                                 09180026
TITLE    INST  OP=18,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09200026
               SUB=NO,F8UPC=NO,MASK=00                                  09220026
USING    INST  OP=23,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,09240026
               SUB=YES,F8UPC=YES,MASK=06                                09260026
WXTRN    INST  OP=2E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09280026
               SUB=NO,F8UPC=NO,MASK=06                                  09300026
GLDEND   EQU       *                                                    09320026
         END                                                            09340026
./ ADD NAME=ASMGIS67
IS67     TITLE     'INSTRUCTION SET FOR A 360 MODEL 67'                 00020026
         ISEQ      73,78                                                00040021
*                                                                       00050026
         COPY      ASMGSET                                              00055026
ASMGIS67 INSTSET                                                        00060020
A        INST  OP=5A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00080020
               LIT1=NO,LIT23=YES                                        00100020
B        INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00120020
               LIT1=NO,LIT23=YES,MASK=2F                                00140020
C        INST  OP=59,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00160020
               LIT1=NO,LIT23=YES                                        00180020
D        INST  OP=5D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00200020
               LIT1=NO,LIT23=YES                                        00220020
L        INST  OP=58,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00240020
               LIT1=NO,LIT23=YES                                        00260020
M        INST  OP=5C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00280020
               LIT1=NO,LIT23=YES                                        00300020
N        INST  OP=54,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00320020
               LIT1=NO,LIT23=YES                                        00340020
O        INST  OP=56,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00360020
               LIT1=NO,LIT23=YES                                        00380020
S        INST  OP=5B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00400020
               LIT1=NO,LIT23=YES                                        00420020
X        INST  OP=57,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00440020
               LIT1=NO,LIT23=YES                                        00460020
AD       INST  OP=6A,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00480020
               LIT1=NO,LIT23=YES                                        00500020
AE       INST  OP=7A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00520020
               LIT1=NO,LIT23=YES                                        00540020
AH       INST  OP=4A,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00560020
               LIT1=NO,LIT23=YES                                        00580020
AL       INST  OP=5E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00600020
               LIT1=NO,LIT23=YES                                        00620020
AP       INST  OP=FA,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00640020
               LIT1=NO,LIT23=YES                                        00660020
AR       INST  OP=1A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00680020
               LIT1=NO,LIT23=NO                                         00700020
AU       INST  OP=7E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00720020
               LIT1=NO,LIT23=YES                                        00740020
AW       INST  OP=6E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00760020
               LIT1=NO,LIT23=YES                                        00780020
AX       INST  OP=76,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00790023
               LIT1=NO,LIT23=YES,RPQ67=YES                              00795023
BC       INST  OP=47,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00800020
               LIT1=NO,LIT23=YES                                        00820020
BE       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00840020
               LIT1=NO,LIT23=YES,MASK=28                                00860020
BH       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00880020
               LIT1=NO,LIT23=YES,MASK=22                                00900020
BL       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00920020
               LIT1=NO,LIT23=YES,MASK=24                                00940020
BM       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00960020
               LIT1=NO,LIT23=YES,MASK=24                                00980020
BO       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01000020
               LIT1=NO,LIT23=YES,MASK=21                                01020020
BP       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01040020
               LIT1=NO,LIT23=YES,MASK=22                                01060020
BR       INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01080020
               LIT1=NO,LIT23=NO,MASK=2F                                 01100020
BZ       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01120020
               LIT1=NO,LIT23=YES,MASK=28                                01140020
CD       INST  OP=69,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01160020
               LIT1=NO,LIT23=YES                                        01180020
CE       INST  OP=79,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01200020
               LIT1=NO,LIT23=YES                                        01220020
CH       INST  OP=49,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01240020
               LIT1=NO,LIT23=YES                                        01260020
CL       INST  OP=55,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01280020
               LIT1=NO,LIT23=YES                                        01300020
CP       INST  OP=F9,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01320020
               LIT1=YES,LIT23=YES                                       01340020
CR       INST  OP=19,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01360020
               LIT1=NO,LIT23=NO                                         01380020
DC       INST  OP=26,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01400020
               SUB=NO,F8UPC=YES,MASK=02                                 01420020
DD       INST  OP=6D,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01440020
               LIT1=NO,LIT23=YES                                        01460020
DE       INST  OP=7D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01480020
               LIT1=NO,LIT23=YES                                        01500020
DP       INST  OP=FD,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01520020
               LIT1=NO,LIT23=YES                                        01540020
DR       INST  OP=1D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,01560020
               LIT1=NO,LIT23=NO                                         01580020
DS       INST  OP=27,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01600020
               SUB=NO,F8UPC=YES,MASK=02                                 01620020
DX       INST  OP=73,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01630023
               LIT1=NO,LIT23=YES,RPQ67=YES                              01635023
ED       INST  OP=DE,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01640020
               LIT1=NO,LIT23=YES                                        01660020
EX       INST  OP=44,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01680020
               LIT1=NO,LIT23=YES                                        01700020
IC       INST  OP=43,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01720020
               LIT1=NO,LIT23=YES                                        01740020
LA       INST  OP=41,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01760020
               LIT1=NO,LIT23=YES                                        01780020
LD       INST  OP=68,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01800020
               LIT1=NO,LIT23=YES                                        01820020
LE       INST  OP=78,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01840020
               LIT1=NO,LIT23=YES                                        01860020
LH       INST  OP=48,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01880020
               LIT1=NO,LIT23=YES                                        01900020
LM       INST  OP=98,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01920020
               LIT1=NO,LIT23=YES                                        01940020
LR       INST  OP=18,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01960020
               LIT1=NO,LIT23=NO                                         01980020
LX       INST  OP=74,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01990023
               LIT1=NO,LIT23=YES,RPQ67=YES                              01995023
MD       INST  OP=6C,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02000020
               LIT1=NO,LIT23=YES                                        02020020
ME       INST  OP=7C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02040020
               LIT1=NO,LIT23=YES                                        02060020
MH       INST  OP=4C,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02080020
               LIT1=NO,LIT23=YES                                        02100020
MP       INST  OP=FC,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02120020
               LIT1=NO,LIT23=YES                                        02140020
MR       INST  OP=1C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,02160020
               LIT1=NO,LIT23=NO                                         02180020
MX       INST  OP=72,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02190023
               LIT1=NO,LIT23=YES,RPQ67=YES                              02195023
NC       INST  OP=D4,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02200020
               LIT1=NO,LIT23=YES                                        02220020
NI       INST  OP=94,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02240020
               LIT1=NO,LIT23=NO                                         02260020
NR       INST  OP=14,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02280020
               LIT1=NO,LIT23=NO                                         02300020
OC       INST  OP=D6,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02320020
               LIT1=NO,LIT23=YES                                        02340020
OI       INST  OP=96,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02360020
               LIT1=NO,LIT23=NO                                         02380020
OR       INST  OP=16,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02400020
               LIT1=NO,LIT23=NO                                         02420020
SD       INST  OP=6B,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02440020
               LIT1=NO,LIT23=YES                                        02460020
SE       INST  OP=7B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02480020
               LIT1=NO,LIT23=YES                                        02500020
SH       INST  OP=4B,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02520020
               LIT1=NO,LIT23=YES                                        02540020
SL       INST  OP=5F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02560020
               LIT1=NO,LIT23=YES                                        02580020
SP       INST  OP=FB,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02600020
               LIT1=NO,LIT23=YES                                        02620020
SR       INST  OP=1B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02640020
               LIT1=NO,LIT23=NO                                         02660020
ST       INST  OP=50,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02680020
               LIT1=NO,LIT23=NO                                         02700020
SU       INST  OP=7F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02720020
               LIT1=NO,LIT23=YES                                        02740020
SW       INST  OP=6F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02760020
               LIT1=NO,LIT23=YES                                        02780020
SX       INST  OP=77,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02790023
               LIT1=NO,LIT23=YES,RPQ67=YES                              02795023
TM       INST  OP=91,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02800020
               LIT1=YES,LIT23=NO                                        02820020
TR       INST  OP=DC,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02840020
               LIT1=NO,LIT23=YES                                        02860020
TS       INST  OP=93,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02880020
               LIT1=NO,LIT23=NO                                         02900020
XC       INST  OP=D7,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02920020
               LIT1=NO,LIT23=YES                                        02940020
XI       INST  OP=97,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02960020
               LIT1=NO,LIT23=NO                                         02980020
XR       INST  OP=17,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03000020
               LIT1=NO,LIT23=NO                                         03020020
ADD      INST  OP=66,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=DOUBLE,  ,03030023
               LIT1=NO,LIT23=YES,RPQ67=YES                              03035023
ADR      INST  OP=2A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03040020
               LIT1=NO,LIT23=NO                                         03060020
AER      INST  OP=3A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03080020
               LIT1=NO,LIT23=NO                                         03100020
AGO      INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03120020
               SUB=NO,F8UPC=NO,MASK=00                                  03140020
AIF      INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03160020
               SUB=NO,F8UPC=NO,MASK=00                                  03180020
ALR      INST  OP=1E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03200020
               LIT1=NO,LIT23=NO                                         03220020
AUR      INST  OP=3E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03240020
               LIT1=NO,LIT23=NO                                         03260020
AWR      INST  OP=2E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03280020
               LIT1=NO,LIT23=NO                                         03300020
BAL      INST  OP=45,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03320020
               LIT1=NO,LIT23=YES                                        03340020
BAS      INST  OP=4D,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03360020
               LIT1=NO,LIT23=YES                                        03380020
BCR      INST  OP=07,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03400020
               LIT1=NO,LIT23=NO                                         03420020
BCT      INST  OP=46,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03440020
               LIT1=NO,LIT23=YES                                        03460020
BER      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03480020
               LIT1=NO,LIT23=NO,MASK=28                                 03500020
BHR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03520020
               LIT1=NO,LIT23=NO,MASK=22                                 03540020
BLR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03560020
               LIT1=NO,LIT23=NO,MASK=24                                 03580020
BMR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03600020
               LIT1=NO,LIT23=NO,MASK=24                                 03620020
BNE      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03640020
               LIT1=NO,LIT23=YES,MASK=27                                03660020
BNH      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03680020
               LIT1=NO,LIT23=YES,MASK=2D                                03700020
BNL      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03720020
               LIT1=NO,LIT23=YES,MASK=2B                                03740020
BNM      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03760020
               LIT1=NO,LIT23=YES,MASK=2B                                03780020
BNO      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03800020
               LIT1=NO,LIT23=YES,MASK=2E                                03820020
BNP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03840020
               LIT1=NO,LIT23=YES,MASK=2D                                03860020
BNZ      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03880020
               LIT1=NO,LIT23=YES,MASK=27                                03900020
BOR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03920020
               LIT1=NO,LIT23=NO,MASK=21                                 03940020
BPR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03960020
               LIT1=NO,LIT23=NO,MASK=22                                 03980020
BXH      INST  OP=86,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,04000020
               LIT1=NO,LIT23=YES                                        04020020
BZR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,04040020
               LIT1=NO,LIT23=NO,MASK=28                                 04060020
CCW      INST  OP=28,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=YES,    ,04080020
               SUB=YES,F8UPC=YES,MASK=00                                04100020
CDR      INST  OP=29,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04120020
               LIT1=NO,LIT23=NO                                         04140020
CER      INST  OP=39,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04160020
               LIT1=NO,LIT23=NO                                         04180020
CLC      INST  OP=D5,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04200020
               LIT1=YES,LIT23=YES                                       04220020
CLI      INST  OP=95,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04240020
               LIT1=YES,LIT23=NO                                        04260020
CLR      INST  OP=15,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04280020
               LIT1=NO,LIT23=NO                                         04300020
COM      INST  OP=1E,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04320023
               SUB=NO,F8UPC=YES,MASK=00                                 04340023
CVB      INST  OP=4F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04360020
               LIT1=NO,LIT23=YES                                        04380020
CVD      INST  OP=4E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04400020
               LIT1=NO,LIT23=NO                                         04420020
CXD      INST  OP=2C,TYPE=ASSEM,UPC=YES,STE=YES,LCR=NO,F7XREF=NO,      ,04440020
               SUB=NO,F8UPC=YES,MASK=00                                 04460020
DDR      INST  OP=2D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04480020
               LIT1=NO,LIT23=NO                                         04500020
DER      INST  OP=3D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04520020
               LIT1=NO,LIT23=NO                                         04540020
DXD      INST  OP=2B,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04560020
               SUB=NO,F8UPC=YES,MASK=0A                                 04580020
END      INST  OP=21,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,04600020
               SUB=YES,F8UPC=NO,MASK=04                                 04620020
EQU      INST  OP=1F,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,04640020
               SUB=YES,F8UPC=NO,MASK=0A                                 04660020
HDR      INST  OP=24,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04680020
               LIT1=NO,LIT23=NO                                         04700020
HDV      INST   OP=9E,TYPE=EXTEN,FLOAT=NO,EVEN=NO,ALIGN=C,             ,04710024
               CLASS=3,LIT1=NO,LIT23=MO,MASK=21                         04715024
HER      INST  OP=34,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04720020
               LIT1=NO,LIT23=NO                                         04740020
HIO      INST  OP=9E,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04760020
               LIT1=NO,LIT23=NO                                         04780020
ISK      INST  OP=09,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04800020
               LIT1=NO,LIT23=NO                                         04820020
LCR      INST  OP=13,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04840020
               LIT1=NO,LIT23=NO                                         04860020
LDR      INST  OP=28,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04880020
               LIT1=NO,LIT23=NO                                         04900020
LER      INST  OP=38,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04920020
               LIT1=NO,LIT23=NO                                         04940020
LMC      INST  OP=B8,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,04960020
               LIT1=NO,LIT23=YES                                        04980020
LNR      INST  OP=11,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05000020
               LIT1=NO,LIT23=NO                                         05020020
LPR      INST  OP=10,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05040020
               LIT1=NO,LIT23=NO                                         05060020
LRA      INST  OP=B1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05080020
               LIT1=NO,LIT23=YES                                        05100020
LTR      INST  OP=12,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05120020
               LIT1=NO,LIT23=NO                                         05140020
MDD      INST  OP=65,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=DOUBLE,  ,05150023
               LIT1=NO,LIT23=YES,RPQ67=YES                              05155023
MDR      INST  OP=2C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05160020
               LIT1=NO,LIT23=NO                                         05180020
MER      INST  OP=3C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05200020
               LIT1=NO,LIT23=NO                                         05220020
MVC      INST  OP=D2,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05240020
               LIT1=NO,LIT23=YES                                        05260020
MVI      INST  OP=92,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05280020
               LIT1=NO,LIT23=NO                                         05300020
MVN      INST  OP=D1,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05320020
               LIT1=NO,LIT23=YES                                        05340020
MVO      INST  OP=F1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05360020
               LIT1=NO,LIT23=YES                                        05380020
MVZ      INST  OP=D3,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05400020
               LIT1=NO,LIT23=YES                                        05420020
NOP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,05440020
               LIT1=NO,LIT23=YES,MASK=20                                05460020
ORG      INST  OP=20,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,05480020
               SUB=YES,F8UPC=YES,MASK=04                                05500020
POP      INST  OP=2F,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,05510027
               SUB=NO,F8UPC=NO,MASK=06                                  05512027
RDD      INST  OP=85,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05520020
               LIT1=NO,LIT23=NO                                         05540020
SDD      INST  OP=67,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=DOUBLE,  ,05550023
               LIT1=NO,LIT23=YES,RPQ67=YES                              05555023
SDR      INST  OP=2B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05560020
               LIT1=NO,LIT23=NO                                         05580020
SER      INST  OP=3B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05600020
               LIT1=NO,LIT23=NO                                         05620020
SIO      INST  OP=9C,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05640020
               LIT1=NO,LIT23=NO                                         05660020
SLA      INST  OP=8B,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05680020
               LIT1=NO,LIT23=NO                                         05700020
SLL      INST  OP=89,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05720020
               LIT1=NO,LIT23=NO                                         05740020
SLR      INST  OP=1F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05760020
               LIT1=NO,LIT23=NO                                         05780020
SLT      INST  OP=A2,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,05790023
               LIT1=NO,LIT23=NO,RPQ67=YES                               05795023
SPM      INST  OP=04,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05800020
               LIT1=NO,LIT23=NO                                         05820020
SRA      INST  OP=8A,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05840020
               LIT1=NO,LIT23=NO                                         05860020
SRL      INST  OP=88,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05880020
               LIT1=NO,LIT23=NO                                         05900020
SSK      INST  OP=08,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05920020
               LIT1=NO,LIT23=NO                                         05940020
SSM      INST  OP=80,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05960020
               LIT1=YES,LIT23=NO                                        05980020
STC      INST  OP=42,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06000020
               LIT1=NO,LIT23=NO                                         06020020
STD      INST  OP=60,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,06040020
               LIT1=NO,LIT23=NO                                         06060020
STE      INST  OP=70,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,06080020
               LIT1=NO,LIT23=NO                                         06100020
STH      INST  OP=40,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,06120020
               LIT1=NO,LIT23=NO                                         06140020
STM      INST  OP=90,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,06160020
               LIT1=NO,LIT23=NO                                         06180020
SUR      INST  OP=3F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06200020
               LIT1=NO,LIT23=NO                                         06220020
SVC      INST  OP=0A,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06240020
               LIT1=NO,LIT23=NO                                         06260020
SWR      INST  OP=2F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06280020
               LIT1=NO,LIT23=NO                                         06300020
TCH      INST  OP=9F,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06320020
               LIT1=NO,LIT23=NO                                         06340020
TIO      INST  OP=9D,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06360020
               LIT1=NO,LIT23=NO                                         06380020
TRT      INST  OP=DD,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06400020
               LIT1=YES,LIT23=YES                                       06420020
WRD      INST  OP=84,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06440020
               LIT1=YES,LIT23=NO                                        06460020
ZAP      INST  OP=F8,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06480020
               LIT1=NO,LIT23=YES                                        06500020
ACTR     INST  OP=25,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06520020
               SUB=NO,F8UPC=NO,MASK=00                                  06540020
ADDR     INST  OP=26,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,06550023
               LIT1=NO,LIT23=NO,RPQ67=YES                               06555023
ANOP     INST  OP=0B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06560020
               SUB=NO,F8UPC=NO,MASK=00                                  06580020
BALR     INST  OP=05,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06600020
               LIT1=NO,LIT23=NO                                         06620020
BASR     INST  OP=0D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06640020
               LIT1=NO,LIT23=NO                                         06660020
BCTR     INST  OP=06,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06680020
               LIT1=NO,LIT23=NO                                         06700020
BNER     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06720020
               LIT1=NO,LIT23=NO,MASK=27                                 06740020
BNHR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06760020
               LIT1=NO,LIT23=NO,MASK=2D                                 06780020
BNLR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06800020
               LIT1=NO,LIT23=NO,MASK=2B                                 06820020
BNMR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06840020
               LIT1=NO,LIT23=NO,MASK=2B                                 06860020
BNOR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06880020
               LIT1=NO,LIT23=NO,MASK=2E                                 06900020
BNPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06920020
               LIT1=NO,LIT23=NO,MASK=2D                                 06940020
BNZR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,06960020
               LIT1=NO,LIT23=NO,MASK=27                                 06980020
BXLE     INST  OP=87,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,07000020
               LIT1=NO,LIT23=YES                                        07020020
CNOP     INST  OP=29,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=NO,      ,07040020
               SUB=YES,F8UPC=YES,MASK=06                                07060020
COPY     INST  OP=0C,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07080020
               SUB=NO,F8UPC=NO,MASK=00                                  07100020
DROP     INST  OP=24,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,07120020
               SUB=YES,F8UPC=YES,MASK=06                                07140020
EDMK     INST  OP=DF,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07160020
               LIT1=NO,LIT23=YES                                        07180020
GBLA     INST  OP=00,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07200020
               SUB=NO,F8UPC=NO,MASK=00                                  07220020
GBLB     INST  OP=01,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07240020
               SUB=NO,F8UPC=NO,MASK=00                                  07260020
GBLC     INST  OP=02,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07280020
               SUB=NO,F8UPC=NO,MASK=00                                  07300020
ICTL     INST  OP=11,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07320020
               SUB=NO,F8UPC=NO,MASK=00                                  07340020
ISEQ     INST  OP=12,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07360020
               SUB=NO,F8UPC=NO,MASK=00                                  07380020
LCDR     INST  OP=23,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07400020
               LIT1=NO,LIT23=NO                                         07420020
LCER     INST  OP=33,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07440020
               LIT1=NO,LIT23=NO                                         07460020
LCLA     INST  OP=03,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07480020
               SUB=NO,F8UPC=NO,MASK=00                                  07500020
LCLB     INST  OP=04,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07520020
               SUB=NO,F8UPC=NO,MASK=00                                  07540020
LCLC     INST  OP=05,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07560020
               SUB=NO,F8UPC=NO,MASK=00                                  07580020
LNDR     INST  OP=21,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07600020
               LIT1=NO,LIT23=NO                                         07620020
LNER     INST  OP=31,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07640020
               LIT1=NO,LIT23=NO                                         07660020
LPDR     INST  OP=20,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07680020
               LIT1=NO,LIT23=NO                                         07700020
LPER     INST  OP=30,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07720020
               LIT1=NO,LIT23=NO                                         07740020
LPSW     INST  OP=82,TYPE=MACH,CLASS=3,ALIGN=D,FLOAT=NO,EVEN=NO,       ,07760020
               LIT1=YES,LIT23=NO                                        07780020
LTDR     INST  OP=22,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07800020
               LIT1=NO,LIT23=NO                                         07820020
LTER     INST  OP=32,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07840020
               LIT1=NO,LIT23=NO                                         07860020
MDDR     INST  OP=25,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,07870023
               LIT1=NO,LIT23=NO,RPQ67=YES                               07875023
MEND     INST  OP=10,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07880020
               SUB=NO,F8UPC=NO,MASK=00                                  07900020
NOPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07920020
               LIT1=NO,LIT23=NO,MASK=20                                 07940020
PACK     INST  OP=F2,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07960020
               LIT1=NO,LIT23=YES                                        07980020
PUSH     INST  OP=30,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,07984027
               SUB=NO,F8UPC=NO,MASK=06                                  07986027
SDDR     INST  OP=27,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,07990023
               LIT1=NO,LIT23=NO,RPQ67=YES                               07995023
SETA     INST  OP=06,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08000020
               SUB=NO,F8UPC=NO,MASK=00                                  08020020
SETB     INST  OP=07,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08040020
               SUB=NO,F8UPC=NO,MASK=00                                  08060020
SETC     INST  OP=08,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08080020
               SUB=NO,F8UPC=NO,MASK=00                                  08100020
SLDA     INST  OP=8F,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08120020
               LIT1=NO,LIT23=NO                                         08140020
SLDL     INST  OP=8D,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08160020
               LIT1=NO,LIT23=NO                                         08180020
SRDA     INST  OP=8E,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08200020
               LIT1=NO,LIT23=NO                                         08220020
SRDL     INST  OP=8C,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08240020
               LIT1=NO,LIT23=NO                                         08260020
STMC     INST  OP=B0,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,08280020
               LIT1=NO,LIT23=NO                                         08300020
SWPR     INST  OP=A3,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08310023
               LIT1=NO,LIT23=NO,RPQ67=YES                               08315023
UNPK     INST  OP=F3,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,08320020
               LIT1=NO,LIT23=YES                                        08340020
AIFB     INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08360020
               SUB=NO,F8UPC=NO,MASK=00                                  08380020
AGOB     INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08400020
               SUB=NO,F8UPC=NO,MASK=00                                  08420020
CSECT    INST  OP=1C,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,08440020
               SUB=NO,F8UPC=YES,MASK=00                                 08460020
DSECT    INST  OP=1D,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,08480020
               SUB=NO,F8UPC=YES,MASK=08                                 08500020
EJECT    INST  OP=15,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08520020
               SUB=NO,F8UPC=NO,MASK=04                                  08540020
ENTRY    INST  OP=19,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,08560020
               SUB=NO,F8UPC=NO,MASK=06                                  08580020
EXTRN    INST  OP=1A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08600020
               SUB=NO,F8UPC=NO,MASK=06                                  08620020
LTORG    INST  OP=22,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,08640020
               SUB=YES,F8UPC=YES,MASK=00                                08660020
MACRO    INST  OP=0D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08680020
               SUB=NO,F8UPC=NO,MASK=00                                  08700020
MEXIT    INST  OP=0F,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08720020
               SUB=NO,F8UPC=NO,MASK=00                                  08740020
MNOTE    INST  OP=0E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08760020
               SUB=NO,F8UPC=NO,MASK=00                                  08780020
OPSYN    INST  OP=2D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08790023
               SUB=NO,F8UPC=NO,MASK=08                                  08795023
PRINT    INST  OP=13,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08800020
               SUB=NO,F8UPC=NO,MASK=04                                  08820020
PUNCH    INST  OP=16,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08840020
               SUB=NO,F8UPC=NO,MASK=06                                  08860020
REPRO    INST  OP=17,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08880020
               SUB=NO,F8UPC=NO,MASK=04                                  08900020
SPACE    INST  OP=14,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08920020
               SUB=NO,F8UPC=NO,MASK=04                                  08940020
START    INST  OP=1B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08960020
               SUB=NO,F8UPC=YES,MASK=00                                 08980020
TITLE    INST  OP=18,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09000020
               SUB=NO,F8UPC=NO,MASK=00                                  09020020
USING    INST  OP=23,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,09040020
               SUB=YES,F8UPC=YES,MASK=06                                09060020
WXTRN    INST  OP=2E,TYPE=ASSEM,UPC=NO,LCR=NO,F7XREF=NO,               ,09070025
               SUB=YES,F8UPC=YES,MASK=06                                09075025
GLDEND   EQU       *                                                    09080023
         END                                                            09100020
./ ADD NAME=ASMGIS70
IS70     TITLE     'INSTRUCTION SET FOR SYSTEM 370 MACHINES'            00020026
         ISEQ      73,78                                                00040026
*                                                                       00060026
         COPY      ASMGSET                                              00080026
ASMGIS70 INSTSET                                                        00100026
A        INST  OP=5A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00120026
               LIT1=NO,LIT23=YES                                        00140026
B        INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00160026
               LIT1=NO,LIT23=YES,MASK=2F                                00180026
C        INST  OP=59,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00200026
               LIT1=NO,LIT23=YES                                        00220026
D        INST  OP=5D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00240026
               LIT1=NO,LIT23=YES                                        00260026
L        INST  OP=58,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00280026
               LIT1=NO,LIT23=YES                                        00300026
M        INST  OP=5C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00320026
               LIT1=NO,LIT23=YES                                        00340026
N        INST  OP=54,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00360026
               LIT1=NO,LIT23=YES                                        00380026
O        INST  OP=56,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00400026
               LIT1=NO,LIT23=YES                                        00420026
S        INST  OP=5B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00440026
               LIT1=NO,LIT23=YES                                        00460026
X        INST  OP=57,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00480026
               LIT1=NO,LIT23=YES                                        00500026
AD       INST  OP=6A,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00520026
               LIT1=NO,LIT23=YES                                        00540026
AE       INST  OP=7A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00560026
               LIT1=NO,LIT23=YES                                        00580026
AH       INST  OP=4A,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00600026
               LIT1=NO,LIT23=YES                                        00620026
AL       INST  OP=5E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00640026
               LIT1=NO,LIT23=YES                                        00660026
AP       INST  OP=FA,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00680026
               LIT1=NO,LIT23=YES                                        00700026
AR       INST  OP=1A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00720026
               LIT1=NO,LIT23=NO                                         00740026
AU       INST  OP=7E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00760026
               LIT1=NO,LIT23=YES                                        00780026
AW       INST  OP=6E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00800026
               LIT1=NO,LIT23=YES                                        00820026
BC       INST  OP=47,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00840026
               LIT1=NO,LIT23=YES                                        00860026
BE       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00880026
               LIT1=NO,LIT23=YES,MASK=28                                00900026
BH       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00920026
               LIT1=NO,LIT23=YES,MASK=22                                00940026
BL       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00960026
               LIT1=NO,LIT23=YES,MASK=24                                00980026
BM       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01000026
               LIT1=NO,LIT23=YES,MASK=24                                01020026
BO       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01040026
               LIT1=NO,LIT23=YES,MASK=21                                01060026
BP       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01080026
               LIT1=NO,LIT23=YES,MASK=22                                01100026
BR       INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01120026
               LIT1=NO,LIT23=NO,MASK=2F                                 01140026
BZ       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01160026
               LIT1=NO,LIT23=YES,MASK=28                                01180026
CD       INST  OP=69,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01200026
               LIT1=NO,LIT23=YES                                        01220026
CE       INST  OP=79,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01240026
               LIT1=NO,LIT23=YES                                        01260026
CH       INST  OP=49,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01280026
               LIT1=NO,LIT23=YES                                        01300026
CL       INST  OP=55,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01320026
               LIT1=NO,LIT23=YES                                        01340026
CP       INST  OP=F9,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01360026
               LIT1=YES,LIT23=YES                                       01380026
CR       INST  OP=19,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01400026
               LIT1=NO,LIT23=NO                                         01420026
CS       INST  OP=BA,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,               ,01430027
               EVEN=NO,LIT1=NO,LIT23=NO                                 01435027
DC       INST  OP=26,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01440026
               SUB=NO,F8UPC=YES,MASK=02                                 01460026
DD       INST  OP=6D,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01480026
               LIT1=NO,LIT23=YES                                        01500026
DE       INST  OP=7D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01520026
               LIT1=NO,LIT23=YES                                        01540026
DP       INST  OP=FD,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01560026
               LIT1=NO,LIT23=YES                                        01580026
DR       INST  OP=1D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,01600026
               LIT1=NO,LIT23=NO                                         01620026
DS       INST  OP=27,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01640026
               SUB=NO,F8UPC=YES,MASK=02                                 01660026
ED       INST  OP=DE,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01680026
               LIT1=NO,LIT23=YES                                        01700026
EX       INST  OP=44,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01720026
               LIT1=NO,LIT23=YES                                        01740026
IC       INST  OP=43,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01760026
               LIT1=NO,LIT23=YES                                        01780026
LA       INST  OP=41,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01800026
               LIT1=NO,LIT23=YES                                        01820026
LD       INST  OP=68,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01840026
               LIT1=NO,LIT23=YES                                        01860026
LE       INST  OP=78,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01880026
               LIT1=NO,LIT23=YES                                        01900026
LH       INST  OP=48,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01920026
               LIT1=NO,LIT23=YES                                        01940026
LM       INST  OP=98,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01960026
               LIT1=NO,LIT23=YES                                        01980026
LR       INST  OP=18,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02000026
               LIT1=NO,LIT23=NO                                         02020026
MC       INST  OP=AF,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02040026
               LIT1=YES,LIT23=NO                                        02060026
MD       INST  OP=6C,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02080026
               LIT1=NO,LIT23=YES                                        02100026
ME       INST  OP=7C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02120026
               LIT1=NO,LIT23=YES                                        02140026
MH       INST  OP=4C,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02160026
               LIT1=NO,LIT23=YES                                        02180026
MP       INST  OP=FC,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02200026
               LIT1=NO,LIT23=YES                                        02220026
MR       INST  OP=1C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,02240026
               LIT1=NO,LIT23=NO                                         02260026
NC       INST  OP=D4,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02280026
               LIT1=NO,LIT23=YES                                        02300026
NI       INST  OP=94,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02320026
               LIT1=NO,LIT23=NO                                         02340026
NR       INST  OP=14,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02360026
               LIT1=NO,LIT23=NO                                         02380026
OC       INST  OP=D6,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02400026
               LIT1=NO,LIT23=YES                                        02420026
OI       INST  OP=96,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02440026
               LIT1=NO,LIT23=NO                                         02460026
OR       INST  OP=16,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02480026
               LIT1=NO,LIT23=NO                                         02500026
SD       INST  OP=6B,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02520026
               LIT1=NO,LIT23=YES                                        02540026
SE       INST  OP=7B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02560026
               LIT1=NO,LIT23=YES                                        02580026
SH       INST  OP=4B,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02600026
               LIT1=NO,LIT23=YES                                        02620026
SL       INST  OP=5F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02640026
               LIT1=NO,LIT23=YES                                        02660026
SP       INST  OP=FB,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02680026
               LIT1=NO,LIT23=YES                                        02700026
SR       INST  OP=1B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02720026
               LIT1=NO,LIT23=NO                                         02740026
ST       INST  OP=50,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02760026
               LIT1=NO,LIT23=NO                                         02780026
SU       INST  OP=7F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02800026
               LIT1=NO,LIT23=YES                                        02820026
SW       INST  OP=6F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02840026
               LIT1=NO,LIT23=YES                                        02860026
TM       INST  OP=91,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02880026
               LIT1=YES,LIT23=NO                                        02900026
TR       INST  OP=DC,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02920026
               LIT1=NO,LIT23=YES                                        02940026
TS       INST  OP=93,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02960026
               LIT1=NO,LIT23=NO                                         02980026
XC       INST  OP=D7,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03000026
               LIT1=NO,LIT23=YES                                        03020026
XI       INST  OP=97,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03040026
               LIT1=NO,LIT23=NO                                         03060026
XR       INST  OP=17,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03080026
               LIT1=NO,LIT23=NO                                         03100026
ADR      INST  OP=2A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03120026
               LIT1=NO,LIT23=NO                                         03140026
AER      INST  OP=3A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03160026
               LIT1=NO,LIT23=NO                                         03180026
AGO      INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03200026
               SUB=NO,F8UPC=NO,MASK=00                                  03220026
AIF      INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03240026
               SUB=NO,F8UPC=NO,MASK=00                                  03260026
ALR      INST  OP=1E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03280026
               LIT1=NO,LIT23=NO                                         03300026
AUR      INST  OP=3E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03320026
               LIT1=NO,LIT23=NO                                         03340026
AWR      INST  OP=2E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03360026
               LIT1=NO,LIT23=NO                                         03380026
AXR      INST  OP=36,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,03400026
               LIT1=NO,LIT23=NO                                         03420026
BAL      INST  OP=45,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03440026
               LIT1=NO,LIT23=YES                                        03460026
BCR      INST  OP=07,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03480026
               LIT1=NO,LIT23=NO                                         03500026
BCT      INST  OP=46,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03520026
               LIT1=NO,LIT23=YES                                        03540026
BER      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03560026
               LIT1=NO,LIT23=NO,MASK=28                                 03580026
BHR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03600026
               LIT1=NO,LIT23=NO,MASK=22                                 03620026
BLR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03640026
               LIT1=NO,LIT23=NO,MASK=24                                 03660026
BMR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03680026
               LIT1=NO,LIT23=NO,MASK=24                                 03700026
BNE      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03720026
               LIT1=NO,LIT23=YES,MASK=27                                03740026
BNH      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03760026
               LIT1=NO,LIT23=YES,MASK=2D                                03780026
BNL      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03800026
               LIT1=NO,LIT23=YES,MASK=2B                                03820026
BNM      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03840026
               LIT1=NO,LIT23=YES,MASK=2B                                03860026
BNO      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03880026
               LIT1=NO,LIT23=YES,MASK=2E                                03900026
BNP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03920026
               LIT1=NO,LIT23=YES,MASK=2D                                03940026
BNZ      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03960026
               LIT1=NO,LIT23=YES,MASK=27                                03980026
BOR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,04000026
               LIT1=NO,LIT23=NO,MASK=21                                 04020026
BPR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,04040026
               LIT1=NO,LIT23=NO,MASK=22                                 04060026
BXH      INST  OP=86,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,04080026
               LIT1=NO,LIT23=YES                                        04100026
BZR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,04120026
               LIT1=NO,LIT23=NO,MASK=28                                 04140026
CCW      INST  OP=28,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=YES,    ,04160026
               SUB=YES,F8UPC=YES,MASK=00                                04180026
CDR      INST  OP=29,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04200026
               LIT1=NO,LIT23=NO                                         04220026
CDS      INST  OP=BB,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,               ,04230027
               EVEN=NO,LIT1=NO,LIT23=NO                                 04235027
CER      INST  OP=39,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04240026
               LIT1=NO,LIT23=NO                                         04260026
CLC      INST  OP=D5,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04280026
               LIT1=YES,LIT23=YES                                       04300026
CLI      INST  OP=95,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04320026
               LIT1=YES,LIT23=NO                                        04340026
CLM      INST  OP=BD,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,04360026
               ALIGN=C,LIT1=NO,LIT23=YES                                04380026
CLR      INST  OP=15,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04400026
               LIT1=NO,LIT23=NO                                         04420026
COM      INST  OP=1E,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04440026
               SUB=NO,F8UPC=YES,MASK=00                                 04460026
CVB      INST  OP=4F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04480026
               LIT1=NO,LIT23=YES                                        04500026
CVD      INST  OP=4E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04520026
               LIT1=NO,LIT23=NO                                         04540026
CXD      INST  OP=2C,TYPE=ASSEM,UPC=YES,STE=YES,LCR=NO,F7XREF=NO,      ,04560026
               SUB=NO,F8UPC=YES,MASK=00                                 04580026
DDR      INST  OP=2D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04600026
               LIT1=NO,LIT23=NO                                         04620026
DER      INST  OP=3D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04640026
               LIT1=NO,LIT23=NO                                         04660026
DXD      INST  OP=2B,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04680026
               SUB=NO,F8UPC=YES,MASK=0A                                 04700026
END      INST  OP=21,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,04720026
               SUB=YES,F8UPC=NO,MASK=04                                 04740026
EQU      INST  OP=1F,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,04760026
               SUB=YES,F8UPC=NO,MASK=0A                                 04780026
HDR      INST  OP=24,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04800026
               LIT1=NO,LIT23=NO                                         04820026
HDV      INST  OP=9E,TYPE=EXTEN,FLOAT=NO,EVEN=NO,ALIGN=C,              ,04840026
               CLASS=3,LIT1=NO,LIT23=NO,MASK=21                         04860026
HER      INST  OP=34,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04880026
               LIT1=NO,LIT23=NO                                         04900026
HIO      INST  OP=9E,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04920026
               LIT1=NO,LIT23=NO                                         04940026
ICM      INST  OP=BF,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,04960026
               ALIGN=C,LIT1=NO,LIT23=YES                                04980026
IPK      INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,04990027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=2B                         04995027
ISK      INST  OP=09,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05000026
               LIT1=NO,LIT23=NO                                         05020026
LCR      INST  OP=13,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05040026
               LIT1=NO,LIT23=NO                                         05060026
LDR      INST  OP=28,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05080026
               LIT1=NO,LIT23=NO                                         05100026
LER      INST  OP=38,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05120026
               LIT1=NO,LIT23=NO                                         05140026
LNR      INST  OP=11,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05160026
               LIT1=NO,LIT23=NO                                         05180026
LPR      INST  OP=10,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05200026
               LIT1=NO,LIT23=NO                                         05220026
LRA      INST  OP=B1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,               ,05240026
               EVEN=NO,LIT1=NO,LIT23=YES                                05260026
LTR      INST  OP=12,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05280026
               LIT1=NO,LIT23=NO                                         05300026
MDR      INST  OP=2C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05320026
               LIT1=NO,LIT23=NO                                         05340026
MER      INST  OP=3C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05360026
               LIT1=NO,LIT23=NO                                         05380026
MVC      INST  OP=D2,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05400026
               LIT1=NO,LIT23=YES                                        05420026
MVI      INST  OP=92,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05440026
               LIT1=NO,LIT23=NO                                         05460026
MVN      INST  OP=D1,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05480026
               LIT1=NO,LIT23=YES                                        05500026
MVO      INST  OP=F1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05520026
               LIT1=NO,LIT23=YES                                        05540026
MVZ      INST  OP=D3,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05560026
               LIT1=NO,LIT23=YES                                        05580026
MXD      INST  OP=67,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=DOUBLE,  ,05600026
               LIT1=NO,LIT23=YES                                        05620026
MXR      INST  OP=26,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,05640026
               LIT1=NO,LIT23=NO                                         05660026
NOP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,05680026
               LIT1=NO,LIT23=YES,MASK=20                                05700026
ORG      INST  OP=20,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,05720026
               SUB=YES,F8UPC=YES,MASK=04                                05740026
POP      INST  OP=2F,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,05750027
               SUB=NO,F8UPC=NO,MASK=06                                  05755027
RDD      INST  OP=85,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05760026
               LIT1=NO,LIT23=NO                                         05780026
RRB      INST  OP=B3,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,  *OP=B2*     ,05800027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=23                         05820027
SCK      INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,05840026
               ALIGN=C,LIT1=YES,LIT23=NO,MASK=24                        05860026
SDR      INST  OP=2B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05880026
               LIT1=NO,LIT23=NO                                         05900026
SER      INST  OP=3B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05920026
               LIT1=NO,LIT23=NO                                         05940026
SIO      INST  OP=9C,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05960026
               LIT1=NO,LIT23=NO                                         05980026
SLA      INST  OP=8B,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06000026
               LIT1=NO,LIT23=NO                                         06020026
SLL      INST  OP=89,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06040026
               LIT1=NO,LIT23=NO                                         06060026
SLR      INST  OP=1F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06080026
               LIT1=NO,LIT23=NO                                         06100026
SPM      INST  OP=04,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06120026
               LIT1=NO,LIT23=NO                                         06140026
SPT      INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,06160026
               ALIGN=D,LIT1=YES,LIT23=NO,MASK=28                        06180026
SPX      INST  OP=B3,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,  *OP=B2*     ,06190027
               ALIGN=F,LIT1=NO,LIT23=YES,MASK=20                        06195027
SRA      INST  OP=8A,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06200026
               LIT1=NO,LIT23=NO                                         06220026
SRL      INST  OP=88,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06240026
               LIT1=NO,LIT23=NO                                         06260026
SRP      INST  OP=F0,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=3,               ,06280026
               ALIGN=C,LIT1=NO,LIT23=NO                                 06300026
SSK      INST  OP=08,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06320026
               LIT1=NO,LIT23=NO                                         06340026
SSM      INST  OP=80,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06360026
               LIT1=YES,LIT23=NO                                        06380026
STC      INST  OP=42,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06400026
               LIT1=NO,LIT23=NO                                         06420026
STD      INST  OP=60,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,06440026
               LIT1=NO,LIT23=NO                                         06460026
STE      INST  OP=70,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,06480026
               LIT1=NO,LIT23=NO                                         06500026
STH      INST  OP=40,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,06520026
               LIT1=NO,LIT23=NO                                         06540026
STM      INST  OP=90,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,06560026
               LIT1=NO,LIT23=NO                                         06580026
SUR      INST  OP=3F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06600026
               LIT1=NO,LIT23=NO                                         06620026
SVC      INST  OP=0A,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06640026
               LIT1=NO,LIT23=NO                                         06660026
SWR      INST  OP=2F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06680026
               LIT1=NO,LIT23=NO                                         06700026
SXR      INST  OP=37,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,06720026
               LIT1=NO,LIT23=NO                                         06740026
TCH      INST  OP=9F,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06760026
               LIT1=NO,LIT23=NO                                         06780026
TIO      INST  OP=9D,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06800026
               LIT1=NO,LIT23=NO                                         06820026
TRT      INST  OP=DD,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06840026
               LIT1=YES,LIT23=YES                                       06860026
WRD      INST  OP=84,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06880026
               LIT1=YES,LIT23=NO                                        06900026
ZAP      INST  OP=F8,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06920026
               LIT1=NO,LIT23=YES                                        06940026
ACTR     INST  OP=25,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,06960026
               SUB=NO,F8UPC=NO,MASK=00                                  06980026
ANOP     INST  OP=0B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07000026
               SUB=NO,F8UPC=NO,MASK=00                                  07020026
BALR     INST  OP=05,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07040026
               LIT1=NO,LIT23=NO                                         07060026
BCTR     INST  OP=06,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07080026
               LIT1=NO,LIT23=NO                                         07100026
BNER     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07120026
               LIT1=NO,LIT23=NO,MASK=27                                 07140026
BNHR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07160026
               LIT1=NO,LIT23=NO,MASK=2D                                 07180026
BNLR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07200026
               LIT1=NO,LIT23=NO,MASK=2B                                 07220026
BNMR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07240026
               LIT1=NO,LIT23=NO,MASK=2B                                 07260026
BNOR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07280026
               LIT1=NO,LIT23=NO,MASK=2E                                 07300026
BNPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07320026
               LIT1=NO,LIT23=NO,MASK=2D                                 07340026
BNZR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07360026
               LIT1=NO,LIT23=NO,MASK=27                                 07380026
BXLE     INST  OP=87,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,07400026
               LIT1=NO,LIT23=YES                                        07420026
CLCL     INST  OP=0F,TYPE=MACH,FLOAT=NO,EVEN=YES,CLASS=0,              ,07440026
               ALIGN=C,LIT1=NO,LIT23=NO                                 07460026
CNOP     INST  OP=29,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=NO,      ,07480026
               SUB=YES,F8UPC=YES,MASK=06                                07500026
COPY     INST  OP=0C,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07520026
               SUB=NO,F8UPC=NO,MASK=00                                  07540026
DROP     INST  OP=24,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,07560026
               SUB=YES,F8UPC=YES,MASK=06                                07580026
EDMK     INST  OP=DF,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07600026
               LIT1=NO,LIT23=YES                                        07620026
GBLA     INST  OP=00,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07640026
               SUB=NO,F8UPC=NO,MASK=00                                  07660026
GBLB     INST  OP=01,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07680026
               SUB=NO,F8UPC=NO,MASK=00                                  07700026
GBLC     INST  OP=02,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07720026
               SUB=NO,F8UPC=NO,MASK=00                                  07740026
ICTL     INST  OP=11,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07760026
               SUB=NO,F8UPC=NO,MASK=00                                  07780026
ISEQ     INST  OP=12,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07800026
               SUB=NO,F8UPC=NO,MASK=00                                  07820026
LCDR     INST  OP=23,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07840026
               LIT1=NO,LIT23=NO                                         07860026
LCER     INST  OP=33,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,07880026
               LIT1=NO,LIT23=NO                                         07900026
LCLA     INST  OP=03,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07920026
               SUB=NO,F8UPC=NO,MASK=00                                  07940026
LCLB     INST  OP=04,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07960026
               SUB=NO,F8UPC=NO,MASK=00                                  07980026
LCLC     INST  OP=05,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08000026
               SUB=NO,F8UPC=NO,MASK=00                                  08020026
LCTL     INST  OP=B7,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,08040026
               ALIGN=F,LIT1=NO,LIT23=YES                                08060026
LNDR     INST  OP=21,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08080026
               LIT1=NO,LIT23=NO                                         08100026
LNER     INST  OP=31,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08120026
               LIT1=NO,LIT23=NO                                         08140026
LPDR     INST  OP=20,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08160026
               LIT1=NO,LIT23=NO                                         08180026
LPER     INST  OP=30,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08200026
               LIT1=NO,LIT23=NO                                         08220026
LPSW     INST  OP=82,TYPE=MACH,CLASS=3,ALIGN=D,FLOAT=NO,EVEN=NO,       ,08240026
               LIT1=YES,LIT23=NO                                        08260026
LRDR     INST  OP=25,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08280026
               LIT1=NO,LIT23=NO                                         08300026
LRER     INST  OP=35,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08320026
               LIT1=NO,LIT23=NO                                         08340026
LTDR     INST  OP=22,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08360026
               LIT1=NO,LIT23=NO                                         08380026
LTER     INST  OP=32,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08400026
               LIT1=NO,LIT23=NO                                         08420026
MEND     INST  OP=10,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08440026
               SUB=NO,F8UPC=NO,MASK=00                                  08460026
MVCL     INST  OP=0E,TYPE=MACH,FLOAT=NO,EVEN=YES,CLASS=0,              ,08480026
               ALIGN=C,LIT1=NO,LIT23=NO                                 08500026
MXDR     INST  OP=27,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,08520026
               LIT1=NO,LIT23=NO                                         08540026
NOPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,08560026
               LIT1=NO,LIT23=NO,MASK=20                                 08580026
PACK     INST  OP=F2,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,08600026
               LIT1=NO,LIT23=YES                                        08620026
PTLB     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,08640026
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=2D                         08660026
PUSH     INST  OP=30,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,08670027
               SUB=NO,F8UPC=NO,MASK=06                                  08675027
SCKC     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,08680026
               ALIGN=D,LIT1=YES,LIT23=NO,MASK=26                        08700026
SETA     INST  OP=06,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08720026
               SUB=NO,F8UPC=NO,MASK=00                                  08740026
SETB     INST  OP=07,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08760026
               SUB=NO,F8UPC=NO,MASK=00                                  08780026
SETC     INST  OP=08,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08800026
               SUB=NO,F8UPC=NO,MASK=00                                  08820026
SIGP     INST  OP=AE,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,               ,08830027
               EVEN=NO,LIT1=NO,LIT23=NO                                 08835027
SIOF     INST  OP=9C,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,08840026
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=21                         08860026
SLDA     INST  OP=8F,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08880026
               LIT1=NO,LIT23=NO                                         08900026
SLDL     INST  OP=8D,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08920026
               LIT1=NO,LIT23=NO                                         08940026
SPKA     INST  OP=B2,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,              ,08950027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=2A                         08955027
SRDA     INST  OP=8E,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,08960026
               LIT1=NO,LIT23=NO                                         08980026
SRDL     INST  OP=8C,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,09000026
               LIT1=NO,LIT23=NO                                         09020026
STAP     INST  OP=B3,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,  *OP=B2*     ,09030027
               ALIGN=H,LIT1=NO,LIT23=NO,MASK=22                         09035027
STCK     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,09040026
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=25                         09060026
STCM     INST  OP=BE,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,09080026
               ALIGN=C,LIT1=NO,LIT23=NO                                 09100026
STPT     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,09120026
               ALIGN=D,LIT1=NO,LIT23=NO,MASK=29                         09140026
STPX     INST  OP=B3,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,  *OP=B2*     ,09150027
               ALIGN=F,LIT1=NO,LIT23=NO,MASK=21                         09155027
UNPK     INST  OP=F3,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,09160026
               LIT1=NO,LIT23=YES                                        09180026
AIFB     INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09200026
               SUB=NO,F8UPC=NO,MASK=00                                  09220026
AGOB     INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09240026
               SUB=NO,F8UPC=NO,MASK=00                                  09260026
CLRIO    INST  OP=9D,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,09270027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=21                         09275027
CSECT    INST  OP=1C,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,09280026
               SUB=NO,F8UPC=YES,MASK=00                                 09300026
DSECT    INST  OP=1D,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,09320026
               SUB=NO,F8UPC=YES,MASK=08                                 09340026
EJECT    INST  OP=15,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09360026
               SUB=NO,F8UPC=NO,MASK=04                                  09380026
ENTRY    INST  OP=19,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,09400026
               SUB=NO,F8UPC=NO,MASK=06                                  09420026
EXTRN    INST  OP=1A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09440026
               SUB=NO,F8UPC=NO,MASK=06                                  09460026
LTORG    INST  OP=22,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,09480026
               SUB=YES,F8UPC=YES,MASK=00                                09500026
MACRO    INST  OP=0D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09520026
               SUB=NO,F8UPC=NO,MASK=00                                  09540026
MEXIT    INST  OP=0F,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09560026
               SUB=NO,F8UPC=NO,MASK=00                                  09580026
MNOTE    INST  OP=0E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09600026
               SUB=NO,F8UPC=NO,MASK=00                                  09620026
OPSYN    INST  OP=2D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09640026
               SUB=NO,F8UPC=NO,MASK=08                                  09660026
PRINT    INST  OP=13,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09680026
               SUB=NO,F8UPC=NO,MASK=04                                  09700026
PUNCH    INST  OP=16,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09720026
               SUB=NO,F8UPC=NO,MASK=06                                  09740026
REPRO    INST  OP=17,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09760026
               SUB=NO,F8UPC=NO,MASK=04                                  09780026
SPACE    INST  OP=14,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09800026
               SUB=NO,F8UPC=NO,MASK=04                                  09820026
START    INST  OP=1B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09840026
               SUB=NO,F8UPC=YES,MASK=00                                 09860026
STCKC    INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,09880026
               ALIGN=D,LIT1=NO,LIT23=NO,MASK=27                         09900026
STCTL    INST  OP=B6,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,09920026
               ALIGN=F,LIT1=NO,LIT23=NO                                 09940026
STIDC    INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,09960026
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=23                         09980026
STIDP    INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,10000026
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=22                         10020026
STNSM    INST  OP=AC,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,10040026
               LIT1=NO,LIT23=NO                                         10060026
STOSM    INST  OP=AD,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,10080026
               LIT1=NO,LIT23=NO                                         10100026
TITLE    INST  OP=18,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10120026
               SUB=NO,F8UPC=NO,MASK=00                                  10140026
USING    INST  OP=23,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,10160026
               SUB=YES,F8UPC=YES,MASK=06                                10180026
WXTRN    INST  OP=2E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10200026
               SUB=NO,F8UPC=NO,MASK=06                                  10220026
GLDEND   EQU       *                                                    10240026
         END                                                            10260026
./ ADD NAME=ASMGIS71
IS71     TITLE     'INSTRUCTION SET FOR SYSTEM 370 CMS MACHINES'        00020027
         ISEQ      73,78                                                00040027
*                                                                       00060027
         COPY      ASMGSET                                              00080027
ASMGIS71 INSTSET                                                        00100027
A        INST  OP=5A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00120027
               LIT1=NO,LIT23=YES                                        00140027
B        INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00160027
               LIT1=NO,LIT23=YES,MASK=2F                                00180027
C        INST  OP=59,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00200027
               LIT1=NO,LIT23=YES                                        00220027
D        INST  OP=5D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00240027
               LIT1=NO,LIT23=YES                                        00260027
L        INST  OP=58,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00280027
               LIT1=NO,LIT23=YES                                        00300027
M        INST  OP=5C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=YES,      ,00320027
               LIT1=NO,LIT23=YES                                        00340027
N        INST  OP=54,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00360027
               LIT1=NO,LIT23=YES                                        00380027
O        INST  OP=56,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00400027
               LIT1=NO,LIT23=YES                                        00420027
S        INST  OP=5B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00440027
               LIT1=NO,LIT23=YES                                        00460027
X        INST  OP=57,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00480027
               LIT1=NO,LIT23=YES                                        00500027
AD       INST  OP=6A,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00520027
               LIT1=NO,LIT23=YES                                        00540027
AE       INST  OP=7A,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00560027
               LIT1=NO,LIT23=YES                                        00580027
AH       INST  OP=4A,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00600027
               LIT1=NO,LIT23=YES                                        00620027
AL       INST  OP=5E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,00640027
               LIT1=NO,LIT23=YES                                        00660027
AP       INST  OP=FA,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00680027
               LIT1=NO,LIT23=YES                                        00700027
AR       INST  OP=1A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,00720027
               LIT1=NO,LIT23=NO                                         00740027
AU       INST  OP=7E,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,00760027
               LIT1=NO,LIT23=YES                                        00780027
AW       INST  OP=6E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,00800027
               LIT1=NO,LIT23=YES                                        00820027
BC       INST  OP=47,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,00840027
               LIT1=NO,LIT23=YES                                        00860027
BE       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00880027
               LIT1=NO,LIT23=YES,MASK=28                                00900027
BH       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00920027
               LIT1=NO,LIT23=YES,MASK=22                                00940027
BL       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,00960027
               LIT1=NO,LIT23=YES,MASK=24                                00980027
BM       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01000027
               LIT1=NO,LIT23=YES,MASK=24                                01020027
BO       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01040027
               LIT1=NO,LIT23=YES,MASK=21                                01060027
BP       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01080027
               LIT1=NO,LIT23=YES,MASK=22                                01100027
BR       INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,01120027
               LIT1=NO,LIT23=NO,MASK=2F                                 01140027
BZ       INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,01160027
               LIT1=NO,LIT23=YES,MASK=28                                01180027
CD       INST  OP=69,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01200027
               LIT1=NO,LIT23=YES                                        01220027
CE       INST  OP=79,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01240027
               LIT1=NO,LIT23=YES                                        01260027
CH       INST  OP=49,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01280027
               LIT1=NO,LIT23=YES                                        01300027
CL       INST  OP=55,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,01320027
               LIT1=NO,LIT23=YES                                        01340027
CP       INST  OP=F9,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01360027
               LIT1=YES,LIT23=YES                                       01380027
CR       INST  OP=19,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01400027
               LIT1=NO,LIT23=NO                                         01420027
CS       INST  OP=BA,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,               ,01440027
               EVEN=NO,LIT1=NO,LIT23=NO                                 01460027
DC       INST  OP=26,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01480027
               SUB=NO,F8UPC=YES,MASK=02                                 01500027
DD       INST  OP=6D,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01520027
               LIT1=NO,LIT23=YES                                        01540027
DE       INST  OP=7D,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01560027
               LIT1=NO,LIT23=YES                                        01580027
DP       INST  OP=FD,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01600027
               LIT1=NO,LIT23=YES                                        01620027
DR       INST  OP=1D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,01640027
               LIT1=NO,LIT23=NO                                         01660027
DS       INST  OP=27,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,01680027
               SUB=NO,F8UPC=YES,MASK=02                                 01700027
ED       INST  OP=DE,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01720027
               LIT1=NO,LIT23=YES                                        01740027
EX       INST  OP=44,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01760027
               LIT1=NO,LIT23=YES                                        01780027
IC       INST  OP=43,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01800027
               LIT1=NO,LIT23=YES                                        01820027
LA       INST  OP=41,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,01840027
               LIT1=NO,LIT23=YES                                        01860027
LD       INST  OP=68,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,01880027
               LIT1=NO,LIT23=YES                                        01900027
LE       INST  OP=78,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,01920027
               LIT1=NO,LIT23=YES                                        01940027
LH       INST  OP=48,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,01960027
               LIT1=NO,LIT23=YES                                        01980027
LM       INST  OP=98,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02000027
               LIT1=NO,LIT23=YES                                        02020027
LR       INST  OP=18,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02040027
               LIT1=NO,LIT23=NO                                         02060027
MC       INST  OP=AF,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02080027
               LIT1=YES,LIT23=NO                                        02100027
MD       INST  OP=6C,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02120027
               LIT1=NO,LIT23=YES                                        02140027
ME       INST  OP=7C,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02160027
               LIT1=NO,LIT23=YES                                        02180027
MH       INST  OP=4C,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02200027
               LIT1=NO,LIT23=YES                                        02220027
MP       INST  OP=FC,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02240027
               LIT1=NO,LIT23=YES                                        02260027
MR       INST  OP=1C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=YES,      ,02280027
               LIT1=NO,LIT23=NO                                         02300027
NC       INST  OP=D4,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02320027
               LIT1=NO,LIT23=YES                                        02340027
NI       INST  OP=94,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02360027
               LIT1=NO,LIT23=NO                                         02380027
NR       INST  OP=14,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02400027
               LIT1=NO,LIT23=NO                                         02420027
OC       INST  OP=D6,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02440027
               LIT1=NO,LIT23=YES                                        02460027
OI       INST  OP=96,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02480027
               LIT1=NO,LIT23=NO                                         02500027
OR       INST  OP=16,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02520027
               LIT1=NO,LIT23=NO                                         02540027
SD       INST  OP=6B,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02560027
               LIT1=NO,LIT23=YES                                        02580027
SE       INST  OP=7B,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02600027
               LIT1=NO,LIT23=YES                                        02620027
SH       INST  OP=4B,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,02640027
               LIT1=NO,LIT23=YES                                        02660027
SL       INST  OP=5F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02680027
               LIT1=NO,LIT23=YES                                        02700027
SP       INST  OP=FB,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02720027
               LIT1=NO,LIT23=YES                                        02740027
SR       INST  OP=1B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02760027
               LIT1=NO,LIT23=NO                                         02780027
ST       INST  OP=50,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,02800027
               LIT1=NO,LIT23=NO                                         02820027
SU       INST  OP=7F,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,02840027
               LIT1=NO,LIT23=YES                                        02860027
SW       INST  OP=6F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,02880027
               LIT1=NO,LIT23=YES                                        02900027
TM       INST  OP=91,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02920027
               LIT1=YES,LIT23=NO                                        02940027
TR       INST  OP=DC,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,02960027
               LIT1=NO,LIT23=YES                                        02980027
TS       INST  OP=93,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03000027
               LIT1=NO,LIT23=NO                                         03020027
XC       INST  OP=D7,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03040027
               LIT1=NO,LIT23=YES                                        03060027
XI       INST  OP=97,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03080027
               LIT1=NO,LIT23=NO                                         03100027
XR       INST  OP=17,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03120027
               LIT1=NO,LIT23=NO                                         03140027
ADR      INST  OP=2A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03160027
               LIT1=NO,LIT23=NO                                         03180027
AER      INST  OP=3A,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03200027
               LIT1=NO,LIT23=NO                                         03220027
AGO      INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03240027
               SUB=NO,F8UPC=NO,MASK=00                                  03260027
AIF      INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,03280027
               SUB=NO,F8UPC=NO,MASK=00                                  03300027
ALR      INST  OP=1E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03320027
               LIT1=NO,LIT23=NO                                         03340027
AUR      INST  OP=3E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03360027
               LIT1=NO,LIT23=NO                                         03380027
AWR      INST  OP=2E,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,03400027
               LIT1=NO,LIT23=NO                                         03420027
AXR      INST  OP=36,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,03440027
               LIT1=NO,LIT23=NO                                         03460027
BAL      INST  OP=45,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03480027
               LIT1=NO,LIT23=YES                                        03500027
BCR      INST  OP=07,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,03520027
               LIT1=NO,LIT23=NO                                         03540027
BCT      INST  OP=46,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,03560027
               LIT1=NO,LIT23=YES                                        03580027
BER      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03600027
               LIT1=NO,LIT23=NO,MASK=28                                 03620027
BHR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03640027
               LIT1=NO,LIT23=NO,MASK=22                                 03660027
BLR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03680027
               LIT1=NO,LIT23=NO,MASK=24                                 03700027
BMR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,03720027
               LIT1=NO,LIT23=NO,MASK=24                                 03740027
BNE      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03760027
               LIT1=NO,LIT23=YES,MASK=27                                03780027
BNH      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03800027
               LIT1=NO,LIT23=YES,MASK=2D                                03820027
BNL      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03840027
               LIT1=NO,LIT23=YES,MASK=2B                                03860027
BNM      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03880027
               LIT1=NO,LIT23=YES,MASK=2B                                03900027
BNO      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03920027
               LIT1=NO,LIT23=YES,MASK=2E                                03940027
BNP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,03960027
               LIT1=NO,LIT23=YES,MASK=2D                                03980027
BNZ      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,04000027
               LIT1=NO,LIT23=YES,MASK=27                                04020027
BOR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,04040027
               LIT1=NO,LIT23=NO,MASK=21                                 04060027
BPR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,04080027
               LIT1=NO,LIT23=NO,MASK=22                                 04100027
BXH      INST  OP=86,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,04120027
               LIT1=NO,LIT23=YES                                        04140027
BZR      INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,04160027
               LIT1=NO,LIT23=NO,MASK=28                                 04180027
CCW      INST  OP=28,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=YES,    ,04200027
               SUB=YES,F8UPC=YES,MASK=00                                04220027
CDR      INST  OP=29,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04240027
               LIT1=NO,LIT23=NO                                         04260027
CDS      INST  OP=BB,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,               ,04280027
               EVEN=NO,LIT1=NO,LIT23=NO                                 04300027
CER      INST  OP=39,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04320027
               LIT1=NO,LIT23=NO                                         04340027
CLC      INST  OP=D5,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04360027
               LIT1=YES,LIT23=YES                                       04380027
CLI      INST  OP=95,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04400027
               LIT1=YES,LIT23=NO                                        04420027
CLM      INST  OP=BD,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,04440027
               ALIGN=C,LIT1=NO,LIT23=YES                                04460027
CLR      INST  OP=15,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,04480027
               LIT1=NO,LIT23=NO                                         04500027
COM      INST  OP=1E,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04520027
               SUB=NO,F8UPC=YES,MASK=00                                 04540027
CVB      INST  OP=4F,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04560027
               LIT1=NO,LIT23=YES                                        04580027
CVD      INST  OP=4E,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=NO,EVEN=NO,       ,04600027
               LIT1=NO,LIT23=NO                                         04620027
CXD      INST  OP=2C,TYPE=ASSEM,UPC=YES,STE=YES,LCR=NO,F7XREF=NO,      ,04640027
               SUB=NO,F8UPC=YES,MASK=00                                 04660027
DDR      INST  OP=2D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04680027
               LIT1=NO,LIT23=NO                                         04700027
DER      INST  OP=3D,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04720027
               LIT1=NO,LIT23=NO                                         04740027
DXD      INST  OP=2B,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,04760027
               SUB=NO,F8UPC=YES,MASK=0A                                 04780027
END      INST  OP=21,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,04800027
               SUB=YES,F8UPC=NO,MASK=04                                 04820027
EQU      INST  OP=1F,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,04840027
               SUB=YES,F8UPC=NO,MASK=0A                                 04860027
HDR      INST  OP=24,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04880027
               LIT1=NO,LIT23=NO                                         04900027
HDV      INST  OP=9E,TYPE=EXTEN,FLOAT=NO,EVEN=NO,ALIGN=C,              ,04920027
               CLASS=3,LIT1=NO,LIT23=NO,MASK=21                         04940027
HER      INST  OP=34,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,04960027
               LIT1=NO,LIT23=NO                                         04980027
HIO      INST  OP=9E,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05000027
               LIT1=NO,LIT23=NO                                         05020027
HVC      INST  OP=83,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,               ,05040027
               EVEN=NO,LIT1=NO,LIT23=NO                                 05060027
ICM      INST  OP=BF,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,05080027
               ALIGN=C,LIT1=NO,LIT23=YES                                05100027
IPK      INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,05120027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=2B                         05140027
ISK      INST  OP=09,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05160027
               LIT1=NO,LIT23=NO                                         05180027
LCR      INST  OP=13,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05200027
               LIT1=NO,LIT23=NO                                         05220027
LDR      INST  OP=28,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05240027
               LIT1=NO,LIT23=NO                                         05260027
LER      INST  OP=38,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05280027
               LIT1=NO,LIT23=NO                                         05300027
LNR      INST  OP=11,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05320027
               LIT1=NO,LIT23=NO                                         05340027
LPR      INST  OP=10,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05360027
               LIT1=NO,LIT23=NO                                         05380027
LRA      INST  OP=B1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,               ,05400027
               EVEN=NO,LIT1=NO,LIT23=YES                                05420027
LTR      INST  OP=12,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05440027
               LIT1=NO,LIT23=NO                                         05460027
MDR      INST  OP=2C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05480027
               LIT1=NO,LIT23=NO                                         05500027
MER      INST  OP=3C,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,05520027
               LIT1=NO,LIT23=NO                                         05540027
MVC      INST  OP=D2,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05560027
               LIT1=NO,LIT23=YES                                        05580027
MVI      INST  OP=92,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05600027
               LIT1=NO,LIT23=NO                                         05620027
MVN      INST  OP=D1,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05640027
               LIT1=NO,LIT23=YES                                        05660027
MVO      INST  OP=F1,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05680027
               LIT1=NO,LIT23=YES                                        05700027
MVZ      INST  OP=D3,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05720027
               LIT1=NO,LIT23=YES                                        05740027
MXD      INST  OP=67,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=DOUBLE,  ,05760027
               LIT1=NO,LIT23=YES                                        05780027
MXR      INST  OP=26,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,05800027
               LIT1=NO,LIT23=NO                                         05820027
NOP      INST  OP=47,TYPE=EXTEN,CLASS=1,ALIGN=H,FLOAT=NO,EVEN=NO,      ,05840027
               LIT1=NO,LIT23=YES,MASK=20                                05860027
ORG      INST  OP=20,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,05880027
               SUB=YES,F8UPC=YES,MASK=04                                05900027
POP      INST  OP=2F,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,05920027
               SUB=NO,F8UPC=NO,MASK=06                                  05940027
RDD      INST  OP=85,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,05960027
               LIT1=NO,LIT23=NO                                         05980027
RRB      INST  OP=B3,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,  *OP=B2*     ,06000027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=23                         06020027
SCK      INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,06040027
               ALIGN=C,LIT1=YES,LIT23=NO,MASK=24                        06060027
SDR      INST  OP=2B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06080027
               LIT1=NO,LIT23=NO                                         06100027
SER      INST  OP=3B,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06120027
               LIT1=NO,LIT23=NO                                         06140027
SIO      INST  OP=9C,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06160027
               LIT1=NO,LIT23=NO                                         06180027
SLA      INST  OP=8B,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06200027
               LIT1=NO,LIT23=NO                                         06220027
SLL      INST  OP=89,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06240027
               LIT1=NO,LIT23=NO                                         06260027
SLR      INST  OP=1F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06280027
               LIT1=NO,LIT23=NO                                         06300027
SPM      INST  OP=04,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06320027
               LIT1=NO,LIT23=NO                                         06340027
SPT      INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,06360027
               ALIGN=D,LIT1=YES,LIT23=NO,MASK=28                        06380027
SPX      INST  OP=B3,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,  *OP=B2*     ,06400027
               ALIGN=F,LIT1=NO,LIT23=YES,MASK=20                        06420027
SRA      INST  OP=8A,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06440027
               LIT1=NO,LIT23=NO                                         06460027
SRL      INST  OP=88,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06480027
               LIT1=NO,LIT23=NO                                         06500027
SRP      INST  OP=F0,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=3,               ,06520027
               ALIGN=C,LIT1=NO,LIT23=NO                                 06540027
SSK      INST  OP=08,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06560027
               LIT1=NO,LIT23=NO                                         06580027
SSM      INST  OP=80,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06600027
               LIT1=YES,LIT23=NO                                        06620027
STC      INST  OP=42,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06640027
               LIT1=NO,LIT23=NO                                         06660027
STD      INST  OP=60,TYPE=MACH,CLASS=0,ALIGN=D,FLOAT=YES,EVEN=YES,     ,06680027
               LIT1=NO,LIT23=NO                                         06700027
STE      INST  OP=70,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=YES,EVEN=YES,     ,06720027
               LIT1=NO,LIT23=NO                                         06740027
STH      INST  OP=40,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,06760027
               LIT1=NO,LIT23=NO                                         06780027
STM      INST  OP=90,TYPE=MACH,CLASS=0,ALIGN=F,FLOAT=NO,EVEN=NO,       ,06800027
               LIT1=NO,LIT23=NO                                         06820027
SUR      INST  OP=3F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06840027
               LIT1=NO,LIT23=NO                                         06860027
SVC      INST  OP=0A,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,06880027
               LIT1=NO,LIT23=NO                                         06900027
SWR      INST  OP=2F,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,06920027
               LIT1=NO,LIT23=NO                                         06940027
SXR      INST  OP=37,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,06960027
               LIT1=NO,LIT23=NO                                         06980027
TCH      INST  OP=9F,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07000027
               LIT1=NO,LIT23=NO                                         07020027
TIO      INST  OP=9D,TYPE=MACH,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07040027
               LIT1=NO,LIT23=NO                                         07060027
TRT      INST  OP=DD,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07080027
               LIT1=YES,LIT23=YES                                       07100027
WRD      INST  OP=84,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07120027
               LIT1=YES,LIT23=NO                                        07140027
ZAP      INST  OP=F8,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07160027
               LIT1=NO,LIT23=YES                                        07180027
ACTR     INST  OP=25,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07200027
               SUB=NO,F8UPC=NO,MASK=00                                  07220027
ANOP     INST  OP=0B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07240027
               SUB=NO,F8UPC=NO,MASK=00                                  07260027
BALR     INST  OP=05,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07280027
               LIT1=NO,LIT23=NO                                         07300027
BCTR     INST  OP=06,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07320027
               LIT1=NO,LIT23=NO                                         07340027
BNER     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07360027
               LIT1=NO,LIT23=NO,MASK=27                                 07380027
BNHR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07400027
               LIT1=NO,LIT23=NO,MASK=2D                                 07420027
BNLR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07440027
               LIT1=NO,LIT23=NO,MASK=2B                                 07460027
BNMR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07480027
               LIT1=NO,LIT23=NO,MASK=2B                                 07500027
BNOR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07520027
               LIT1=NO,LIT23=NO,MASK=2E                                 07540027
BNPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07560027
               LIT1=NO,LIT23=NO,MASK=2D                                 07580027
BNZR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,07600027
               LIT1=NO,LIT23=NO,MASK=27                                 07620027
BXLE     INST  OP=87,TYPE=MACH,CLASS=0,ALIGN=H,FLOAT=NO,EVEN=NO,       ,07640027
               LIT1=NO,LIT23=YES                                        07660027
CLCL     INST  OP=0F,TYPE=MACH,FLOAT=NO,EVEN=YES,CLASS=0,              ,07680027
               ALIGN=C,LIT1=NO,LIT23=NO                                 07700027
CNOP     INST  OP=29,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=NO,      ,07720027
               SUB=YES,F8UPC=YES,MASK=06                                07740027
COPY     INST  OP=0C,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07760027
               SUB=NO,F8UPC=NO,MASK=00                                  07780027
DROP     INST  OP=24,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,07800027
               SUB=YES,F8UPC=YES,MASK=06                                07820027
EDMK     INST  OP=DF,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=NO,       ,07840027
               LIT1=NO,LIT23=YES                                        07860027
GBLA     INST  OP=00,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07880027
               SUB=NO,F8UPC=NO,MASK=00                                  07900027
GBLB     INST  OP=01,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07920027
               SUB=NO,F8UPC=NO,MASK=00                                  07940027
GBLC     INST  OP=02,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,07960027
               SUB=NO,F8UPC=NO,MASK=00                                  07980027
ICTL     INST  OP=11,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08000027
               SUB=NO,F8UPC=NO,MASK=00                                  08020027
ISEQ     INST  OP=12,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08040027
               SUB=NO,F8UPC=NO,MASK=00                                  08060027
LCDR     INST  OP=23,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08080027
               LIT1=NO,LIT23=NO                                         08100027
LCER     INST  OP=33,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08120027
               LIT1=NO,LIT23=NO                                         08140027
LCLA     INST  OP=03,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08160027
               SUB=NO,F8UPC=NO,MASK=00                                  08180027
LCLB     INST  OP=04,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08200027
               SUB=NO,F8UPC=NO,MASK=00                                  08220027
LCLC     INST  OP=05,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08240027
               SUB=NO,F8UPC=NO,MASK=00                                  08260027
LCTL     INST  OP=B7,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,08280027
               ALIGN=F,LIT1=NO,LIT23=YES                                08300027
LNDR     INST  OP=21,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08320027
               LIT1=NO,LIT23=NO                                         08340027
LNER     INST  OP=31,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08360027
               LIT1=NO,LIT23=NO                                         08380027
LPDR     INST  OP=20,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08400027
               LIT1=NO,LIT23=NO                                         08420027
LPER     INST  OP=30,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08440027
               LIT1=NO,LIT23=NO                                         08460027
LPSW     INST  OP=82,TYPE=MACH,CLASS=3,ALIGN=D,FLOAT=NO,EVEN=NO,       ,08480027
               LIT1=YES,LIT23=NO                                        08500027
LRDR     INST  OP=25,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08520027
               LIT1=NO,LIT23=NO                                         08540027
LRER     INST  OP=35,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08560027
               LIT1=NO,LIT23=NO                                         08580027
LTDR     INST  OP=22,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08600027
               LIT1=NO,LIT23=NO                                         08620027
LTER     INST  OP=32,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=YES,     ,08640027
               LIT1=NO,LIT23=NO                                         08660027
MEND     INST  OP=10,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,08680027
               SUB=NO,F8UPC=NO,MASK=00                                  08700027
MVCL     INST  OP=0E,TYPE=MACH,FLOAT=NO,EVEN=YES,CLASS=0,              ,08720027
               ALIGN=C,LIT1=NO,LIT23=NO                                 08740027
MXDR     INST  OP=27,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=YES,EVEN=DOUBLE,  ,08760027
               LIT1=NO,LIT23=NO                                         08780027
NOPR     INST  OP=07,TYPE=EXTEN,CLASS=3,ALIGN=C,FLOAT=NO,EVEN=NO,      ,08800027
               LIT1=NO,LIT23=NO,MASK=20                                 08820027
PACK     INST  OP=F2,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,08840027
               LIT1=NO,LIT23=YES                                        08860027
PTLB     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,08880027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=2D                         08900027
PUSH     INST  OP=30,TYPE=ASSEM,UPC=NO,STE=NO,F7XREF=NO,               ,08920027
               SUB=NO,F8UPC=NO,MASK=06                                  08940027
SCKC     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,08960027
               ALIGN=D,LIT1=YES,LIT23=NO,MASK=26                        08980027
SETA     INST  OP=06,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09000027
               SUB=NO,F8UPC=NO,MASK=00                                  09020027
SETB     INST  OP=07,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09040027
               SUB=NO,F8UPC=NO,MASK=00                                  09060027
SETC     INST  OP=08,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09080027
               SUB=NO,F8UPC=NO,MASK=00                                  09100027
SIGP     INST  OP=AE,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,               ,09120027
               EVEN=NO,LIT1=NO,LIT23=NO                                 09140027
SIOF     INST  OP=9C,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,09160027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=21                         09180027
SLDA     INST  OP=8F,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,09200027
               LIT1=NO,LIT23=NO                                         09220027
SLDL     INST  OP=8D,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,09240027
               LIT1=NO,LIT23=NO                                         09260027
SPKA     INST  OP=B2,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,              ,09280027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=2A                         09300027
SRDA     INST  OP=8E,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,09320027
               LIT1=NO,LIT23=NO                                         09340027
SRDL     INST  OP=8C,TYPE=MACH,CLASS=1,ALIGN=C,FLOAT=NO,EVEN=YES,      ,09360027
               LIT1=NO,LIT23=NO                                         09380027
STAP     INST  OP=B3,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,  *OP=B2*     ,09400027
               ALIGN=H,LIT1=NO,LIT23=NO,MASK=22                         09420027
STCK     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,09440027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=25                         09460027
STCM     INST  OP=BE,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,09480027
               ALIGN=C,LIT1=NO,LIT23=NO                                 09500027
STPT     INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,09520027
               ALIGN=D,LIT1=NO,LIT23=NO,MASK=29                         09540027
STPX     INST  OP=B3,TYPE=EXTEN,CLASS=3,FLOAT=NO,EVEN=NO,  *OP=B2*     ,09560027
               ALIGN=F,LIT1=NO,LIT23=NO,MASK=21                         09580027
UNPK     INST  OP=F3,TYPE=MACH,CLASS=0,ALIGN=C,FLOAT=NO,EVEN=NO,       ,09600027
               LIT1=NO,LIT23=YES                                        09620027
AIFB     INST  OP=09,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09640027
               SUB=NO,F8UPC=NO,MASK=00                                  09660027
AGOB     INST  OP=0A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09680027
               SUB=NO,F8UPC=NO,MASK=00                                  09700027
CLRIO    INST  OP=9D,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,09720027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=21                         09740027
CSECT    INST  OP=1C,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,09760027
               SUB=NO,F8UPC=YES,MASK=00                                 09780027
DSECT    INST  OP=1D,TYPE=ASSEM,UPC=NO,STE=YES,LCR=NO,F7XREF=NO,       ,09800027
               SUB=NO,F8UPC=YES,MASK=08                                 09820027
EJECT    INST  OP=15,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09840027
               SUB=NO,F8UPC=NO,MASK=04                                  09860027
ENTRY    INST  OP=19,TYPE=ASSEM,UPC=NO,STE=NO,LCR=YES,F7XREF=YES,      ,09880027
               SUB=NO,F8UPC=NO,MASK=06                                  09900027
EXTRN    INST  OP=1A,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,09920027
               SUB=NO,F8UPC=NO,MASK=06                                  09940027
LTORG    INST  OP=22,TYPE=ASSEM,UPC=YES,STE=YES,LCR=YES,F7XREF=NO,     ,09960027
               SUB=YES,F8UPC=YES,MASK=00                                09980027
MACRO    INST  OP=0D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10000027
               SUB=NO,F8UPC=NO,MASK=00                                  10020027
MEXIT    INST  OP=0F,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10040027
               SUB=NO,F8UPC=NO,MASK=00                                  10060027
MNOTE    INST  OP=0E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10080027
               SUB=NO,F8UPC=NO,MASK=00                                  10100027
OPSYN    INST  OP=2D,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10120027
               SUB=NO,F8UPC=NO,MASK=08                                  10140027
PRINT    INST  OP=13,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10160027
               SUB=NO,F8UPC=NO,MASK=04                                  10180027
PUNCH    INST  OP=16,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10200027
               SUB=NO,F8UPC=NO,MASK=06                                  10220027
REPRO    INST  OP=17,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10240027
               SUB=NO,F8UPC=NO,MASK=04                                  10260027
SPACE    INST  OP=14,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10280027
               SUB=NO,F8UPC=NO,MASK=04                                  10300027
START    INST  OP=1B,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10320027
               SUB=NO,F8UPC=YES,MASK=00                                 10340027
STCKC    INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,10360027
               ALIGN=D,LIT1=NO,LIT23=NO,MASK=27                         10380027
STCTL    INST  OP=B6,TYPE=MACH,FLOAT=NO,EVEN=NO,CLASS=0,               ,10400027
               ALIGN=F,LIT1=NO,LIT23=NO                                 10420027
STIDC    INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,10440027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=23                         10460027
STIDP    INST  OP=B2,TYPE=EXTEN,FLOAT=NO,EVEN=NO,CLASS=3,              ,10480027
               ALIGN=C,LIT1=NO,LIT23=NO,MASK=22                         10500027
STNSM    INST  OP=AC,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,10520027
               LIT1=NO,LIT23=NO                                         10540027
STOSM    INST  OP=AD,TYPE=MACH,CLASS=2,ALIGN=C,FLOAT=NO,EVEN=NO,       ,10560027
               LIT1=NO,LIT23=NO                                         10580027
TITLE    INST  OP=18,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10600027
               SUB=NO,F8UPC=NO,MASK=00                                  10620027
USING    INST  OP=23,TYPE=ASSEM,UPC=YES,STE=NO,LCR=YES,F7XREF=YES,     ,10640027
               SUB=YES,F8UPC=YES,MASK=06                                10660027
WXTRN    INST  OP=2E,TYPE=ASSEM,UPC=NO,STE=NO,LCR=NO,F7XREF=NO,        ,10680027
               SUB=NO,F8UPC=NO,MASK=06                                  10700027
GLDEND   EQU       *                                                    10720027
         ORG       ASMGIS71+X'1000'    FOR CMS PAGING                   10730027
         END                                                            10740027
./ ADD NAME=ASMGMACP
MACP     TITLE     'ASMG     ASSEMBLER (G7) MACRO POST PROCESSOR'       00020027
         ISEQ      73,78                                                00040027
*                                                                     * 00060027
*        SET GLOBAL SWITCHES                                          * 00080027
         COPY      ASMGSET                                              00100027
ASMGMACP CSECT                                                          00120027
         PRINT     NOGEN                                                00140027
         FDIMEN                                                         00160027
         PRINT     GEN                                                  00180027
         SPACE     2                                                    00200027
*********************************************************************** 00220027
*                                                                     * 00240027
*        ENTERED FROM ASMGRTA AFTER ASMGF3, THE END OF MACRO          * 00260027
*        PROCESSING.                                                  * 00280027
*                                                                     * 00300027
*        INPUT -   R3 POINTS TO FDIMEN COMMUNICATIONS AREA            * 00320027
*                                                                     * 00340027
*********************************************************************** 00360027
         SPACE     2                                                    00380027
         ST        R14,CTMRSRTN(,R3)   SAVE RETURN ADDRESS              00400027
         LR        R12,R15             TRANSFER ENTRY ADDRESS           00420027
         USING     ASMGMACP,R12        AND USE THAT AS A BASE           00440027
         LA        R13,SAVE            THIS IS MY SAVE AREA             00460027
         USING     SAVE,R13            AND USE THAT AS WORK AREA BASE   00480027
         L         R9,ADLIST1(,R3)     POINTER TO LIST1 IN ASMGASM      00500027
         IC        R1,L1ASPARM(,R9)    PICK UP LENGTH OF SYSPARM        00520027
         LTR       R1,R1               IS IT NULL .Q                    00540027
         BZ        ABEND952            YES, WE DIE                      00560027
         LA        R1,ESTART           FOR MESSAGE ADDRESSABILITY       00580027
         MVC       E0115-ESTART+1(1,R1),L1UPCOND(R9)  SET UPCOND SEV    00600027
         L         R2,L1ASPARM(,R9)    PICK UP ADDRESS OF SYSPARM       00620027
         CLC       =C'ASM',0(R2)       IS IT 'ASM' .Q                   00640027
         BNE       TSTPDP              BRANCH IF NOT                    00660027
SETASM   DS        0H                                                   00680027
         OI        POSTSW,ASM          SET ASM BIT                      00700027
         MVI       COMCHAR,C'*'        SET ASSEMBLER COMMENT IND        00720027
         B         DONEPARM            ALL DONE THIS PART               00740027
TSTPDP   DS        0H                                                   00760027
         CLC       =C'PDP',0(R2)       IS IT 'PDP' .Q                   00780027
         BNE       TSTCC70             BRANCH IF NOT                    00800027
         OI        POSTSW,PDP          SET PDP BIT                      00820027
         MVI       COMCHAR,C';'        SET PDP ASSEMBLER COMMENT IND    00840027
         OI        E0034+1-ESTART(R1),NOPERR  KILL INVALID OPCODES      00860027
         OI        E0088+1-ESTART(R1),NOPERR  KILL UNDEFINED OPCODES    00880027
         OI        E0101+1-ESTART(R1),NOPERR  KILL EOD ON SYSIN         00900027
         B         DONEPARM            ALL DONE THIS PART               00920027
TSTCC70  DS        0H                                                   00940027
         CLC       =C'CC70',0(R2)      IS IT 'CC70' .Q                  00960027
         BNE       TSTFORT             BRANCH IF NOT                    00980027
         OI        POSTSW,CC70         SET CC70 BIT                     01000027
         MVI       COMCHAR,C'*'        SET CC70 COMMENT IND             01020027
         OI        E0034+1-ESTART(R1),NOPERR  KILL INVALID OPCODES      01040027
         OI        E0088+1-ESTART(R1),NOPERR  KILL UNDEFINED OPCODES    01060027
         B         DONEPARM            ALL DONE THIS PART               01080027
TSTFORT  DS        0H                                                   01100027
         CLC       =C'FORT',0(R2)      IS IT 'FORT' .Q                  01120027
         BNE       TSTNEXT             BRANCH IF NOT                    01140027
         OI        POSTSW,FORT         SET FORTRAN BIT                  01160027
         MVI       COMCHAR,C'C'        SET COMMENT CHARACTER            01180027
         OI        E0034+1-ESTART(R1),NOPERR  KILL INVALID OPCODES      01200027
         OI        E0088+1-ESTART(R1),NOPERR  KILL UNDEFINED OPCODES    01220027
         B         DONEPARM            ALL DONE THIS PART               01240027
TSTNEXT  DS        0H                                                   01260027
ABEND952 DS        0H                                                   01280027
         BAL       R0,ASMABEND         ERROR, WE QUIT NOW               01300027
         DC        C'952I',AL1(L'MES952-1)                              01320027
MES952   DC        C'INVALID SYSPARM SPECIFIED FOR MACRO PROCESSING.'   01340027
DONEPARM DS        0H                                                   01360027
         MVC       HDECKID(4),CTITLE(R3) MOVE DECK I.D. TO HEADER       01380027
         MVC       HDATE(9),CTDATE(R3) MOVE DATE INTO HEADER            01400027
         LA        R1,1                LOAD ONE IN A REGISTER           01420027
         ST        R1,YLCNT            INITIALIZE LINES FOR NEW PAGE    01440027
         TM        L1PBYT(R9),LIST     WAS LIST OPTION SPECIFIED .Q     01460027
         BO        LISTYES             BRANCH IF YES                    01480027
         OI        MACROSW,NOPRINT     TURN ON NO PRINT SWITCH          01500027
LISTYES  DS        0H                                                   01520027
         LH        R1,CTXLEN(,R3)      GET BUFFER FROM ASMG             01540027
         AR        R1,R1               DOUBLE IT                        01560027
         A         R1,MACTBLM          PLUS MACRO TABLE SIZE            01580027
         ST        R1,SPREQ            SAVE IT FOR A SHRINK             01600027
         L         R1,L1BUFADR(,R9)    POINT TO ASMGBUFF                01620027
         CNOP      2,4                 FOR ALIGNMENT                    01640027
         BALR      R0,R1               GO DO THE SHRINK                 01660027
         DC        A(36)               SHRINK CALL                      01680027
SPREQ    DS        F                   ASKED FOR                        01700027
SPGOT    DS        F                   AND GOT                          01720027
         CLI       SPGOT,ON            DID WE                           01740027
         BE        NOCORE              BRANCH IF FAILED                 01760027
         L         R1,SPGOT            ADDRESS OF CORE GOT              01780027
         ST        R1,MACTBLA          SAVE MACRO TABLE ADDRESS         01800027
         A         R1,MACTBLM          PLUS SIZE OF MACRO TABLE         01820027
         ST        R1,IBUF             REMEMBER BUFFER ADDRESS          01840027
         TM        L1PBYT1(R9),BATCH   ARE WE IN 'BATCH' MODE .Q        01860027
         BO        READ                BRANCH IF YES                    01880027
         LOAD      EPLOC=L1ISNAME(,R9) LOAD VARIABLE INSTRUCTION SET    01900027
         ST        R0,L1ISADDR(,R9)    SAVE LOADED ADDRESS IN LIST1     01920027
READ     DS        0H                                                   01940027
         L         R1,L1BUFADR(,R9)    POINT TO ASMGBUFF                01960027
         CNOP      2,4                 FOR ALIGNMENT                    01980027
         BALR      R0,R1               GO AND DO THE READ               02000027
         DC        F'4'                READ REQUEST                     02020027
         DC        F'4'                SYSUT2                           02040027
IBUF     DS        F                   ADDRESS OF BUFFER                02060027
         L         R1,L1BUFADR(,R9)    POINT TO ASMGBUFF                02080027
         CNOP      2,4                 FOR ALIGNMENT                    02100027
         BALR      R0,R1               GO AND DO THE CHECK              02120027
         DC        F'28'               CHECK                            02140027
         DC        F'4'                SYSUT2                           02160027
UT2LEN   DS        F                   DATA LENGTH                      02180027
         L         R2,IBUF             GET START OF BUFFER              02200027
         MVC       UT2REML,UT2LEN      SET INITIAL BUFFER LENGTH        02220027
DEBLOCK  DS        0H                                                   02240027
         MVC       LENWORD+2(2),0(R2)  RECORD LENGTH                    02260027
         LH        R1,LENWORD+2        GET RECORD LENGTH                02280027
         LTR       R1,R1               CHECK ITS VALUE                  02300027
         BNP       READ                GET NEXT BLOCK IF INVALID        02320027
         TITLE     'SNAPDATA'                                           02340027
*                                                                     * 02360027
*        FORMAT RECORD JUST READ IN CHARACTER AND HEX                 * 02380027
*                                                                     * 02400027
         TM        L1PBYT3(R9),UNUSED  WAS 'UNUSED' SPECIFIED .Q        02420027
         BZ        SNAPARND            BRANCH IF NOT                    02440027
         STM       R0,R15,SNAPSAVE     SAVE ALL REGISTERS               02460027
         LR        R1,R2               TRANSFER AREA TO BE DUMPED       02480027
         A         R1,LENWORD          ADD LENGTH                       02500027
         BCTR      R1,0                POINT TO LAST USED BYTE          02520027
         ST        R1,ENDWORD          REMEMBER THAT INSTEAD            02540027
         LR        R1,R2               START OF AREA TO BE DUMPED       02560027
         MVC       SNAPCARR(133),L1BLANKS(R9) BLANK OUTPUT AREA         02580027
         LA        R10,SNAPCARR        POINT TO BLANK LINE              02600027
         BAL       R14,WRLST           AND PRINT IT                     02620027
         MVI       SNAPAREA+86,C'*'    BEFORE AND                       02640027
         MVI       SNAPAREA+119,C'*'   AFTER CHARACTER EQUIV            02660027
SNAPLOOP DS        0H                                                   02680027
         C         R1,ENDWORD          ARE WE DONE .Q                   02700027
         BH        SNAPDONE            BRANCH TO EXIT IF SO             02720027
         ST        R1,SNAPWORK         STORE ADDRESS                    02740027
         UNPK      SNAPAREA(7),SNAPWORK+1(4) MAKE IT PRINTABLE          02760027
         MVC       SNAPAREA+6(78),L1BLANKS+1(R9) BLANK HEX AREA         02780027
         TR        SNAPAREA(6),SNAPHEX RENDER INTO HEXADECIMAL          02800027
         MVC       SNAPAREA+87(32),0(R1) PUT IN CHARACTERS              02820027
         TR        SNAPAREA+87(32),SNAPTRAN TRANS INTO ANGLAIS          02840027
         LA        R2,SNAPAREA+9       POINT TO 1ST BUFFER POS'N        02860027
         LA        R6,2                2 TIMES THRU, 16 BYTES EACH      02880027
SNAPHALF DS        0H                                                   02900027
         LA        R7,4                4 WORDS PER HALF LINE            02920027
SNAPWORD DS        0H                                                   02940027
         C         R1,ENDWORD          ARE WE DONE .Q                   02960027
         BH        SNAPOUT             GET OUT IF SO                    02980027
         MVC       SNAPWORK(4),0(R1)   GET NEXT WORD FOR OUTPUT         03000027
         UNPK      0(9,R2),SNAPWORK(5) UNPACK INTO BUFFER               03020027
         MVI       8(R2),BLANK         BLANK DUMMY DIGIT                03040027
         TR        0(8,R2),SNAPHEX     MAKE IT PRINTABLE                03060027
         LA        R2,9(,R2)           BUMP TO NEXT OUTPUT AREA         03080027
         LA        R1,4(,R1)           POINT TO NEXT WORD               03100027
         BCT       R7,SNAPWORD         GO BACK UNLESS FINISHED HALF     03120027
         LA        R2,3(,R2)           SKIP 3 PRINT POS'NS              03140027
         BCT       R6,SNAPHALF         GO BACK IF ONLY HALF DONE        03160027
SNAPOUT  DS        0H                                                   03180027
         LA        R10,SNAPCARR        AREA TO BE PRINTED               03200027
         BAL       R14,WRLST           GO PRINT IT                      03220027
         B         SNAPLOOP            GO CHECK NEXT LINE               03240027
SNAPDONE DS        0H                                                   03260027
         LM        R0,R15,SNAPSAVE     RESTORE REGISTERS                03280027
SNAPARND DS        0H                                                   03300027
         TITLE     'GET RECORD TYPE AND JUMP ACCORDINGLY'               03320027
         ST        R2,PROCPTR          REMEMBER WHERE IT STARTED        03340027
         IC        R4,2(,R2)           GET RECORD FLAGS                 03360027
         N         R4,=X'00000070'     ONLY GET RECORD TYPE             03380027
         SRA       R4,2                ONTO FULL WORD INDEX             03400027
         B         *+4(R4)             JUMP ON CODE                     03420027
         B         NOEDIT              SOURCE AS IS                X000 03440027
         B         ML01A               ERROR RECORD                X001 03460027
         B         NOEDIT              CONSTRUCT FOR PRINT         X010 03480027
         B         GNOEDIT             IF GENERATED                X011 03500027
         B         SKIP                PROCESS ONLY                X100 03520027
         B         SKIP                ILLEGAL                     X101 03540027
         B         CONDCESS            PROCESS AND CONSTRUCT       X110 03560027
         B         PROCESS             IF GENED                    X111 03580027
         SPACE     2                                                    03600027
CONDCESS DS        0H                                                   03620027
         MVC       BUFR,L1BLANKS(R9)   CLEAR PRINT BUFFER               03640027
         TM        LASTTYPE,X'70'      WAS LAST TYPE SOURCE .Q          03660027
         BNZ       PROCESS             BRANCH IF NOT                    03680027
         TM        MACROSW,NOPRINT     ARE WE LISTING LINES .Q          03700027
         BO        PNCHCESS            BRANCH IF NOT                    03720027
         L         R1,L1DCBADS+L1SPRINT(,R9)  GET SYSPRINT DCB ADDR     03740027
         L         R1,L1DCBLPT(,R1)    GET LAST RECORD POINTER          03760027
         LTR       R1,R1               IS IT NULL .Q                    03780027
         BZ        PNCHCESS            BRANCH IF YES                    03800027
*                                                                     * 03820027
*        NOTE --  THIS LOOKBACK ON SYSPRINT FAILS IF 'UNUSED'         * 03840027
*                 OR IF CONTINUATION ON SYSIN                         * 03860027
*                                                                     * 03880027
         MVC       BCMNT-BUFR(15,R1),=C'***GENERATOR***'                03900027
         MVC       BOUTPUT-BUFR(1,R1),COMCHAR  MAKE IT A COMMENT        03920027
PNCHCESS DS        0H                                                   03940027
         L         R1,L1DCBADS+L1SPUNCH(,R9)  GET SYSPUNCH DCB ADDR     03960027
         L         R1,L1DCBLPT(,R1)    GET LAST RECORD POINTER          03980027
         LTR       R1,R1               IS IT NULL .Q                    04000027
         BZ        SLINCESS            BRANCH IF YES                    04020027
         MVC       0(1,R1),COMCHAR     MAKE IT A COMMENT                04040027
SLINCESS DS        0H                                                   04060027
         L         R1,L1DCBADS+L1SLIN(,R9)  GET SYSLIN DCB ADDR         04080027
         L         R1,L1DCBLPT(,R1)    GET FORMER RECORD POINTER        04100027
         LTR       R1,R1               IS IT NULL .Q                    04120027
         BZ        PROCESS             BRANCH IF YES                    04140027
         MVC       0(1,R1),COMCHAR     MAKE IT A COMMENT                04160027
PROCESS  DS        0H                                                   04180027
         MVC       BUFR,L1BLANKS(R9)   CLEAR PRINT BUFFER               04200027
         LA        R2,8(,R2)           POINT TO LABEL FIELD             04220027
         LA        R1,BOUTPUT          CURRENT POSITION IN OUTPUT       04240027
         MVI       BGENNED,GEN         MARK LINE GENERATED              04260027
         CNOP      0,4                                                  04280027
         BAL       R14,SETSEG          MOVE IN LABEL                    04300027
         DC        A(BOUTPUT)          TARGET FOR LABEL                 04320027
         CLI       COMCHAR,C'*'        IS COMMENT AN ASTERISK .Q        04340027
         BE        PROPCD              BRANCH IF YES                    04360027
         CLI       BOUTPUT,C'*'        IS THIS A MACRO COMMENT .Q       04380027
         BNE       PROPCD              BRANCH IF NOT                    04400027
         MVC       BOUTPUT(1),COMCHAR  SET USER'S TYPE OF COMMENT       04420027
         MVC       BCMNT(19),=C'***MACRO COMMENT***'                    04440027
PROPCD   DS        0H                                                   04460027
         CNOP      0,4                                                  04480027
         BAL       R14,SETSEG          MOVE IN OPCODE                   04500027
         DC        A(BOUTPUT+9)        TARGET FOR OPCODE                04520027
         CLC       =C'MNOTE ',0(R4)    WAS OPCODE 'MNOTE' .Q            04540027
         BNE       COMMNTS             BRANCH IF NOT                    04560027
         MVI       BGENNED,GEN         MARK LINE GENERATED              04580027
         MVC       BOUTPUT(80),L1BLANKS(R9)  CLEAR OPCODE               04600027
         CNOP      0,4                 ALIGN ARGUMENT                   04620027
         BAL       R14,SETSEG          ENTER THE MNOTE OPERAND          04640027
         DC        A(BOUTPUT+1)        START IN COLUMN TWO              04660027
         MVC       BOUTPUT(1),COMCHAR  COMMENT THE RECORD               04680027
         MVC       BCMNT(11),=C'***MNOTE***'                            04700027
         B         PUT                 PRINT OUT THE RESULT             04720027
COMMNTS  DS        0H                                                   04740027
         CNOP      0,4                                                  04760027
         BAL       R14,SETSEG          MOVE IN OPERAND                  04780027
         DC        A(BOUTPUT+15)       TARGET FOR OPERAND               04800027
         SR        R5,R5               ZERO WORK REGISTER               04820027
         IC        R5,0(,R2)           GET LENGTH OF COMMENT            04840027
         LTR       R5,R5               ANY COMMENT THERE .Q             04860027
         BZ        PUT                 BRANCH OUT IF NOT                04880027
         SR        R4,R4               ZERO ANOTHER WORK                04900027
         IC        R4,1(,R2)           GET COMMENT OFFSET               04920027
         LA        R4,BOUTPUT(R4)      GET COMMENT ADDRESS              04940027
         ST        R4,CMNTADDR         SET THE ADDRESS                  04960027
         BCTR      R5,0                LESS LENGTH FOR OFFSET           04980027
         STC       R5,1(,R2)           REPLACE LENGTH                   05000027
         LA        R2,1(,R2)           BUMP COMMENT POINTER             05020027
         CNOP      0,4                                                  05040027
         BAL       R14,SETSEG          MOVE IN COMMENT                  05060027
CMNTADDR DC        A(*-*)              TARGET FOR COMMENT               05080027
         B         PUT                 PRINT OUT THE RESULT             05100027
         TITLE     'PROCESS GENERATED COMMENT RECORD'                   05120027
GNOEDIT  DS        0H                                                   05140027
         MVC       BUFR,L1BLANKS(R9)   CLEAR PRINT BUFFER               05160027
         LA        R1,BOUTPUT          START OF OUTPUT FIELD            05180027
         LA        R2,2(,R2)           POINT TO RECORD FLAG BYTE        05200027
         L         R4,LENWORD          GET LENGTH OF SEGMENT            05220027
         S         R4,=F'3'            LESS RECORD OVERHEAD             05240027
SETNELP  DS        0H                                                   05260027
         LA        R6,0(R1,R4)         POINT TO END OF LINE             05280027
         S         R6,=A(BLINENO)      WILL IT FIT .Q                   05300027
         BNP       SETNEOK             BRANCH IF YES                    05320027
         SR        R4,R6               DECREMENT LENGTH BY EXCESS       05340027
         LR        R5,R6               REMEMBER THE EXCESS              05360027
         BCTR      R4,0                DECREMENT LENGTH BY ONE          05380027
         EX        R4,SETMVC           MOVE IN SEGMENT                  05400027
         L         R6,CTRTBP(,R3)      POINT TO TRANSLATION TABLE       05420027
         EX        R4,SETTRAN          CONVERT TO EBCDIC                05440027
         LA        R2,1(R4,R2)         BUMP POINTER IN STRING           05460027
         LR        R4,R5               CONTINUE WITH THE EXCESS LENGTH  05480027
         MVC       BOUTPUT(1),COMCHAR  COMMENT THE RECORD               05500027
         MVI       BGENNED,GEN         MARK IT GENERATED                05520027
         TM        MACROSW,MACCALL     IS THIS A CONTINUATION .Q        05540027
         BO        SETNEREC            BRANCH IF YES                    05560027
         BAL       R14,STMTBUMP        BUMP STATEMENT COUNTER           05580027
SETNEREC DS        0H                                                   05600027
         LA        R10,BUFR            POINT TO PRINT BUFFER            05620027
         BAL       R14,WRLST           PRINT THE RECORD                 05640027
         LA        R10,BOUTPUT         POINT TO RECORD                  05660027
         BAL       R14,WRPCH           AND PUNCH IT                     05680027
         OI        MACROSW,MACCALL     SET CONTINUE SWITCH              05700027
         MVC       LASTREC,BOUTPUT     SAVE LAST RECORD                 05720027
         MVC       BUFR,L1BLANKS(R9)   CLEAR PRINT BUFFER               05740027
         LA        R1,BOUTPUT+15       POINT TO CONTINUATION COLUMN     05760027
         B         SETNELP             LOOP BACK FOR MORE               05780027
SETNEOK  DS        0H                                                   05800027
         BCTR      R4,0                DECREMENT LENGTH BY ONE          05820027
         EX        R4,SETMVC           MOVE IN RECORD SEGMENT           05840027
         L         R6,CTRTBP(,R3)      POINT TO TRANSLATE TABLE         05860027
         EX        R4,SETTRAN          CONVERT SEGMENT TO EBCDIC        05880027
         MVC       BOUTPUT(1),COMCHAR  SET COMMENT CHARACTER            05900027
         MVI       BGENNED,GEN         SET RECORD AS GENERATED          05920027
         B         PUT                 GO WRITE RECORD OUT              05940027
         TITLE     'SCAN AND ENTER ONE GENERATED FIELD AT A TIME'       05960027
SETSEG   DS        0H                                                   05980027
         SR        R5,R5               ZERO WORK LENGTH                 06000027
         IC        R5,0(,R2)           GET LENGTH OF SEGMENT            06020027
         LTR       R4,R5               IS IT NULL .Q                    06040027
         BZ        SEGDONE             EXIT IF SO                       06060027
         C         R1,0(,R14)          IS OUT POINTER OK .Q             06080027
         BH        SETPOSOK            BRANCH IF YES                    06100027
         L         R1,0(,R14)          BUMP OUT POINTER                 06120027
SETPOSOK DS        0H                                                   06140027
         LA        R6,0(R1,R4)         POINT TO END IN LINE             06160027
         S         R6,=A(BLINENO)      WILL IT FIT .Q                   06180027
         BNP       SETFINOK            BRANCH IF YES                    06200027
         LR        R0,R14              SAVE RETURN ADDRESS              06220027
         SR        R4,R6               DECREMENT LENGTH BY EXCESS       06240027
         BCTR      R4,0                DECREMENT LENGTH BY ONE          06260027
         EX        R4,SETMVC           MOVE IN SEGMENT                  06280027
         STC       R6,1(R4,R2)         SAVE LENGTH REMAINING            06300027
         LA        R2,1(R4,R2)         POINT TO IT                      06320027
         L         R6,CTRTBP(,R3)      POINT TO TRANSLATION TABLE       06340027
         EX        R4,SETTRAN          CONVERT TO EBCDIC                06360027
         MVI       BOUTPUT+71,C'X'     SET CONTINUATION                 06380027
         CLI       LASTREC+71,BLANK    IS THIS CONTINUATION .Q          06400027
         BNE       SETLREC             BRANCH IF YES                    06420027
         BAL       R14,STMTBUMP        BUMP STATEMENT COUNTER           06440027
SETLREC  DS        0H                                                   06460027
         MVC       LASTREC,BOUTPUT     SAVE LAST RECORD                 06480027
         LA        R10,BUFR            POINT TO BUFFER                  06500027
         BAL       R14,WRLST           PRINT IT                         06520027
         LA        R10,BOUTPUT         POINT TO RECORD                  06540027
         BAL       R14,WRPCH           PUNCH IT                         06560027
         MVC       BUFR,L1BLANKS(R9)   CLEAR PRINT BUFFER               06580027
         MVI       BGENNED,GEN         MARK LINE GENERATED              06600027
         SR        R1,R1               ZERO CURRENT POINTER             06620027
         LR        R14,R0              RESTORE RETURN ADDRESS           06640027
         B         SETSEG              AND CONTINUE                     06660027
SETFINOK DS        0H                                                   06680027
         BCTR      R4,0                DECREMENT LENGTH BY ONE          06700027
         EX        R4,SETMVC           MOVE IN SEGMENT                  06720027
         L         R6,CTRTBP(,R3)      POINT TO TRANSLATE TABLE         06740027
         EX        R4,SETTRAN          CONVERT SEGMENT TO EBCDIC        06760027
SEGDONE  DS        0H                                                   06780027
         LA        R2,1(R2,R5)         POINT TO NEXT SEGMENT            06800027
         LR        R0,R1               REMEMBER OUTPUT ADDRESS          06820027
         LA        R1,1(R1,R4)         NEXT POSSIBLE OUTPUT ADDR        06840027
         LR        R4,R0               TRANSFER START ADDR              06860027
         B         4(,R14)             RETURN                           06880027
SETMVC   MVC       0(*-*,R1),1(R2)     EXECUTED MOVE SEGMENT            06900027
SETTRAN  TR        0(*-*,R1),0(R6)     EXECUTED TRANSLATE               06920027
         TITLE     '80 - 80 RECORD PROCESSING AND OUTPUT'               06940027
NOEDIT   DS        0H                                                   06960027
         MVC       BUFR,L1BLANKS(R9)   CLEAR PRINT BUFFER               06980027
         L         R1,LENWORD          GET SOURCE LENGTH                07000027
         LA        R0,1+3              ONE PLUS LENGTH/FLAG OVERHEAD    07020027
         SR        R1,R0               DECREMENT TOTAL LENGTH           07040027
         EX        R1,SRCMOVE          MOVE SOURCE RECORD TO OUTPUT     07060027
         L         R2,CTRTBP(,R3)      POINT TO TRANSLATE TABLE         07080027
         EX        R1,SRCTRAN          TRANSLATE TO EBCDIC              07100027
         B         PUT                 GO WRITE IT OUT                  07120027
SRCMOVE  MVC       BOUTPUT(*-*),3(R2)  EXECUTED MOVE SOURCE RECORD      07140027
SRCTRAN  TR        BOUTPUT(*-*),0(R2)  EXECUTED TRANSLATE SOURCE RECORD 07160027
         SPACE     2                                                    07180027
PUT      DS        0H                                                   07200027
         L         R2,PROCPTR          RESTORE WHERE WE STARTED         07220027
         TM        2(R2),X'10'         IF GENNED, NO MACROS             07240027
         BO        PUTO                BRANCH IF GENNED                 07260027
         CLC       BOUTPUT(1),COMCHAR  COMMENT CARD .Q                  07280027
         BE        PUTO                BRANCH IF YES                    07300027
         CLI       BOUTPUT,C'*'        IS THIS ASSEMBLER COMMENT .Q     07320027
         BE        PUTO                BRANCH IF YES                    07340027
         TM        2(R2),X'02'         CONTINUATION CARD .Q             07360027
         BO        PUTO                BRANCH IF YES                    07380027
         LA        R1,BOUTPUT          START OF RECORD                  07400027
SCNB     DS        0H                                                   07420027
         CLI       0(R1),BLANK         FIND 1ST BLANK                   07440027
         BE        SCNOP               BRANCH IF FOUND                  07460027
         LA        R1,1(,R1)           BUMP ALONG LABEL                 07480027
         B         SCNB                CONTINUE SEARCH                  07500027
SCNOP    DS        0H                                                   07520027
         LA        R1,1(,R1)           BUMP PAST BLANK                  07540027
         CLI       0(R1),BLANK         NOW GO FOR OPCODE                07560027
         BE        SCNOP               TRY AGAIN                        07580027
         LR        R10,R1              REMEMBER WHERE NAME STARTED      07600027
SCND     DS        0H                                                   07620027
         LA        R1,1(,R1)           POINT TO NEXT OPCODE             07640027
         CLI       0(R1),BLANK         END OF OPCODE .Q                 07660027
         BNE       SCND                NOT YET                          07680027
         SR        R1,R10              GET LENGTH OF OPCODE             07700027
         C         R1,=F'8'            GREATER THAN EIGHT .Q            07720027
         BNH       STNAME              BRANCH IF NOT                    07740027
         MVC       BCMNT(25),=C'OPCODE TOO LONG FOR MACRO'              07760027
         B         PUTO                AND PRINT IT                     07780027
STNAME   DS        0H                                                   07800027
         BCTR      R1,0                BACK OFF LENGTH BY ONE           07820027
         MVC       NAME(8),L1BLANKS+1(R9) BLANK TARGET                  07840027
         EX        R1,MNM              MOVE IN MACRO NAME               07860027
         ST        R1,NAMELEN          SAVE NAME ENTRY LENGTH-1         07880027
         CLC       =C'MEND ',NAME      IS IT 'MEND' .Q                  07900027
         BNE       NOTMEND             BRANCH IF NOT                    07920027
         TM        MACROSW,INMAC       IN A MACRO NOW .Q                07940027
         BNO       MENDERR             BRANCH IF NOT                    07960027
         MVC       BCMNT(10),=C'***MEND***'                             07980027
         OI        MACROSW,NOPUNCH     BUT DON'T PUNCH IT               08000027
         NI        MACROSW,ON-(INMAC+MACPROT)  OUT OF MACRO             08020027
         B         PUTO                GO PRINT IT                      08040027
MNM      MVC       NAME(*-*),0(R10)    EXECUTED MOVE MACRO NAME         08060027
MENDERR  DS        0H                                                   08080027
         MVC       ERBUFR,L1BLANKS(R9) CLEAR ERROR BUFFER AREA          08100027
         MVC       MSGBG(17),=C'MEND OUT OF ORDER'                      08120027
         LA        R10,ERBUFR          POINT TO IT                      08140027
         BAL       R14,WRLST           WRITE OUT ERROR                  08160027
         B         PUTO                PRINT IT                         08180027
NOTMEND  DS        0H                                                   08200027
         CLC       =C'MACRO ',NAME     IS IT 'MACRO' .Q                 08220027
         BNE       NOTMACRO            BRANCH IF NOT                    08240027
         TM        MACROSW,INMAC       IN A MACRO NOW .Q                08260027
         BO        MACROERR            BRANCH IF YES                    08280027
         MVC       BCMNT(11),=C'***MACRO***'                            08300027
         OI        MACROSW,INMAC+NOPUNCH+MACPROT  SET MACRO FLAGS       08320027
         B         PUTO                CONTINUE                         08340027
MACROERR DS        0H                                                   08360027
         MVC       ERBUFR,L1BLANKS(R9) CLEAR BUFFER AREA                08380027
         MVC       MSGBG(18),=C'MACRO OUT OF ORDER'                     08400027
         LA        R10,ERBUFR          POINT TO IT                      08420027
         BAL       R14,WRLST           WRITE OUT ERROR                  08440027
         B         PUTO                PRINT IT                         08460027
NOTMACRO DS        0H                                                   08480027
         TM        MACROSW,INMAC       IN A MACRO NOW .Q                08500027
         BO        MENDSKIP            BRANCH IF YES                    08520027
         CLC       =C'COPY ',NAME      'COPY' OPCODE .Q                 08540027
         BNE       NOTCOPY             BRANCH IF NOT                    08560027
         MVC       BCMNT(10),=C'***COPY***'                             08580027
         MVC       BOUTPUT(1),COMCHAR  MAKE IT A COMMENT                08600027
         B         PUTO                AND PRINT IT                     08620027
NOTCOPY  DS        0H                                                   08640027
         MVC       TRNAME,NAME         MOVE OPCODE NAME                 08660027
         L         R1,CTRTBP(,R3)      POINT TO TRANSLATE TABLE         08680027
         TR        TRNAME,0(R1)        TRANSLATE OPCODE TO INTERNAL     08700027
         SR        R1,R1               ZERO WORK LENGTH-1 REGISTER      08720027
         L         R14,L1ISADDR(,R9)   POINT TO INSTRUCTION SET         08740027
         LA        R4,X'85'            OPCODES START HERE               08760027
OPCDLOOP DS        0H                                                   08780027
         C         R4,0(,R14)          PAST END OF OPCODE TABLE .Q      08800027
         BNL       CKBATCH             BRANCH IF YES                    08820027
         LA        R15,0(R4,R14)       POINT TO OPCODE ENTRY            08840027
         IC        R1,2(,R15)          GET LENGTH-1 OF OPCODE           08860027
         N         R1,=F'7'            PURIFY THE LENGTH-1              08880027
         C         R1,NAMELEN          IS THE LENGTH-1 CORRECT .Q       08900027
         BL        OPCDNE              BRANCH ON IF NOT                 08920027
         BH        CKBATCH             QUIT NOW IF TOO BIG              08940027
         EX        R1,OPCDCLC          IS THIS IT .Q                    08960027
         BE        OPCDFOND            BRANCH IF YES                    08980027
OPCDNE   DS        0H                                                   09000027
         TM        2(R15),X'18'        IS TYPE EXTEN OR ASSEM .Q        09020027
         BNZ       OPCDEXAS            BRANCH IF YES                    09040027
         LA        R4,6(R1,R4)         POINT TO NEXT ENTRY              09060027
         B         OPCDLOOP            LOOP BACK AND TRY AGAIN          09080027
OPCDEXAS DS        0H                                                   09100027
         LA        R4,7(R1,R4)         POINT TO NEXT ENTRY              09120027
         B         OPCDLOOP            LOOP BACK AND TRY AGAIN          09140027
OPCDCLC  CLC       3(*-*,R15),TRNAME   EXECUTED COMPARE OPCODES         09160027
OPCDFOND DS        0H                                                   09180027
         TM        2(R15),X'08'        IS OPCODE TYPE ASSEM .Q          09200027
         BZ        PUTO                BRANCH TO PRINT IF NOT           09220027
         LA        R14,OPENCOM         COMMON BRANCHING POINT           09240027
         CLC       =C'SETA ',NAME      IS IT 'SETA' .Q                  09260027
         BCR       8,R14               BRANCH IF YES                    09280027
         CLC       =C'SETB ',NAME      IS IT 'SETB' .Q                  09300027
         BCR       8,R14               BRANCH IF YES                    09320027
         CLC       =C'SETC ',NAME      IS IT 'SETC' .Q                  09340027
         BCR       8,R14               BRANCH IF YES                    09360027
         CLC       =C'ACTR ',NAME      IS IT 'ACTR' .Q                  09380027
         BCR       8,R14               BRANCH IF YES                    09400027
         CLC       =C'AGO ',NAME       IS IT 'AGO' .Q                   09420027
         BCR       8,R14               BRANCH IF YES                    09440027
         CLC       =C'AIF ',NAME       IS IT 'AIF' .Q                   09460027
         BCR       8,R14               BRANCH IF YES                    09480027
         CLC       =C'ANOP ',NAME      IS IT 'ANOP' .Q                  09500027
         BCR       8,R14               BRANCH IF YES                    09520027
         CLC       =C'GBLA ',NAME      IS IT 'GBLA' .Q                  09540027
         BCR       8,R14               BRANCH IF YES                    09560027
         CLC       =C'GBLB ',NAME      IS IT 'GBLB' .Q                  09580027
         BCR       8,R14               BRANCH IF YES                    09600027
         CLC       =C'GBLC ',NAME      IS IT 'GBLC' .Q                  09620027
         BCR       8,R14               BRANCH IF YES                    09640027
         CLC       =C'LCLA ',NAME      IS IT 'LCLA' .Q                  09660027
         BCR       8,R14               BRANCH IF YES                    09680027
         CLC       =C'LCLB ',NAME      IS IT 'LCLB' .Q                  09700027
         BCR       8,R14               BRANCH IF YES                    09720027
         CLC       =C'LCLC ',NAME      IS IT 'LCLC' .Q                  09740027
         BCR       8,R14               BRANCH IF YES                    09760027
         B         PUTO                OTHERWISE PRINT ASSEMBLER OPCODE 09780027
OPENCOM  DS        0H                                                   09800027
         MVC       BOUTPUT(1),COMCHAR  COMMENT IT                       09820027
         MVC       BCMNT(17),=C'***CONDITIONAL***'                      09840027
         B         PUTO                AND PRINT IT                     09860027
MENDSKIP DS        0H                                                   09880027
         TM        MACROSW,MACPROT     EXPECTING PROTOTYPE .Q           09900027
         BO        PROTHERE            BRANCH IF YES                    09920027
         MVC       BCMNT(19),=C'***SKIP FOR MEND***'                    09940027
         B         PUTO                AND PRINT IT                     09960027
PROTHERE DS        0H                                                   09980027
         NI        MACROSW,ON-MACPROT  KILL PROTOTYPE EXPECTED SWITCH   10000027
         MVC       BCMNT(15),=C'***PROTOTYPE***'                        10020027
         BAL       R14,SETMACNM        ENTER NAME IN MACRO TABLE        10040027
         B         PUTO                AND PRINT IT                     10060027
CKBATCH  DS        0H                                                   10080027
         L         R1,MACTBLA          MACRO TABLE ADDRESS              10100027
         L         R4,MACTBLO          CURRENT MACRO OFFSET             10120027
         LA        R0,8                ENTRY LENGTH OF NAME             10140027
         LD        FR0,NAME            GET MACRO NAME                   10160027
TBLLOOP  DS        0H                                                   10180027
         SR        R4,R0               NEXT NAME                        10200027
         LTR       R4,R4               STILL OK .Q                      10220027
         BM        CKLIB               BRANCH IF NOT                    10240027
         CD        FR0,0(R4,R1)        IS THIS IT .Q                    10260027
         BNE       TBLLOOP             BRANCH IF NOT                    10280027
         B         FINDNENT            GOT IT, NO NEW ENTRY             10300027
CKLIB    DS        0H                                                   10320027
         L         R1,L1DCBADS+L1SLIB(,R9) SYSLIB DCB ADDR              10340027
         TM        48(R1),X'10'        IS IT OPEN .Q                    10360027
         BZ        PUTO                BRANCH IF NOT                    10380027
         TM        L1PBYT1(R9),BATCH   ARE WE IN BATCH MODE .Q          10400027
         BZ        FINDOS              NO MACRO TABLE IF NOT            10420027
         TM        L1PBYT3(R9),CMS     ARE WE UNDER CMS .Q              10440027
         BO        PUTO                YES, NO INCORE MACRO TABLE       10460027
         L         R9,ADLIST1(,R3)     START OF LIST1 IN ASMGASM        10480027
         L         R14,L1TOPMC(,R9)    TOP OF MACRO NAMES               10500027
         L         R15,L1BOTMC(,R9)    BOTTOM                           10520027
         LA        R0,11               ENTRY LENGTH                     10540027
         MVC       0(8,R15),NAME       MOVE NAME INTO TABLE             10560027
SCAN     DS        0H                                                   10580027
         SR        R14,R0              DECREMENT TO NEXT                10600027
         CLC       NAME(8),0(R14)      THIS ENTRY .Q                    10620027
         BNE       SCAN                BRANCH IF NOT                    10640027
         CR        R14,R15             THE ONE WE MOVED IN .Q           10660027
         BNE       FINDCMNT            BRANCH IF NOT                    10680027
         TM        L1SYNERR(R9),X'08'  DID MACRO TABLE OFLOW .Q         10700027
         BZ        PUTO                BRANCH IF NOT                    10720027
FINDOS   DS        0H                                                   10740027
         L         R1,L1DCBADS+L1SLIB(,R9) SYSLIB DCB ADDRESS           10760027
         FIND      (1),NAME,D          LET OS DO IT                     10780027
         LTR       R15,R15             WAS IT SUCCESSFUL .Q             10800027
         BNZ       PUTO                BRANCH IF NOT                    10820027
FINDCMNT DS        0H                                                   10840027
         BAL       R14,SETMACNM        ENTER NAME IN MACRO TABLE        10860027
FINDNENT DS        0H                                                   10880027
         MVC       BOUTPUT(1),COMCHAR  MAKE IT A COMMENT                10900027
         MVC       BCMNT(16),=C'***MACRO CALL***'                       10920027
         CLI       BOUTPUT+71,BLANK    IS THIS CONTINUED .Q             10940027
         BE        PUTO                BRANCH IF NOT                    10960027
         OI        MACROSW,MACCALL     SET CONTINUED MAC CALL           10980027
         MVI       BOUTPUT+71,BLANK    CLEAR CONTINUATION               11000027
         BAL       R14,STMTBUMP        SET STATEMENT NUMBER             11020027
         B         PUTPOINT            AND WRITE IT OUT                 11040027
SETMACNM DS        0H                                                   11060027
         STM       R0,R15,PRSAVE       SAVE CALLER'S REGS               11080027
         L         R1,MACTBLA          GET TABLE ADDRESS                11100027
         LTR       R1,R1               IS IT PRESENT .Q                 11120027
         BZ        SETMACDN            BRANCH IF NOT                    11140027
         L         R2,MACTBLO          GET CURRENT OFFSET               11160027
         AR        R1,R2               POINT TO NEXT SLOT               11180027
         MVC       0(8,R1),NAME        ADD MACRO NAME                   11200027
         LA        R2,8(,R2)           POINT TO NEXT ENTRY              11220027
         C         R2,MACTBLM          COMPARE WITH MAXIMUM             11240027
         BH        ABEND953            BRANCH IF TOO HIGH               11260027
         ST        R2,MACTBLO          SET NEW OFFSET                   11280027
SETMACDN DS        0H                                                   11300027
         LM        R0,R15,PRSAVE       RESTORE CALLER'S REGS            11320027
         BR        R14                 AND RETURN                       11340027
ABEND953 DS        0H                                                   11360027
         BAL       R0,ASMABEND         ERROR, WE QUIT NOW               11380027
         DC        C'953I',AL1(L'MES953-1)                              11400027
MES953   DC        C'MACRO NAMES USED TABLE OVERFLOWED.'                11420027
PUTO     DS        0H                  ****                             11440027
         TM        MACROSW,MACCALL     CONTINUED MACRO CALL .Q          11460027
         BZ        PUTNCONT            BRANCH IF NOT                    11480027
         NI        MACROSW,ON-MACCALL  CLEAR CONTINUED SWITCH           11500027
         MVC       BOUTPUT(1),COMCHAR  COMMENT THIS RECORD              11520027
         CLI       BOUTPUT+71,BLANK    IS THIS CONTINUED .Q             11540027
         BE        PUTPOINT            BRANCH IF NOT                    11560027
         OI        MACROSW,MACCALL     SET SWITCH AGAIN                 11580027
         MVI       BOUTPUT+71,BLANK    CLEAR CONTINUATION               11600027
         B         PUTPOINT            GO AND PRINT IT                  11620027
PUTNCONT DS        0H                                                   11640027
         CLI       LASTREC+71,BLANK    WAS LAST RECORD A CONTINUED REC  11660027
         BNE       PUTPOINT            BRANCH IF YES                    11680027
         BAL       R14,STMTBUMP        BUMP AND SET STATEMENT NUMBER    11700027
PUTPOINT DS        0H                                                   11720027
         MVC       LASTREC,BOUTPUT     SAVE CURRENT IMAGE               11740027
         LA        R10,BUFF            POINT TO OUTPUT RECORD           11760027
         MVI       BUFF,X'00'          SINGLE SPACE                     11780027
         BAL       R14,WRLST           BRANCH TO SYSPRINT ROUTINE       11800027
         LA        R10,BOUTPUT         POINT TO CARD IMAGE              11820027
         BAL       R14,WRPCH           BRANCH TO DECK/LOAD ROUTINE      11840027
SKIP     DS        0H                                                   11860027
         MVC       LASTTYPE,2(R2)      SAVE FORMER RECORD TYPE          11880027
         TM        2(R2),X'80'         TEST LAST RECORD                 11900027
         BO        INEND               YES                              11920027
         L         R0,UT2REML          CURRENT BLOCK REMAINDER LENGTH   11940027
         S         R0,LENWORD          CURRENT LENGTH                   11960027
         BNP       READ                NEXT BLOCK                       11980027
         ST        R0,UT2REML                                           12000027
         A         R2,LENWORD          TO NEXT RECORD                   12020027
         B         DEBLOCK                                              12040027
INEND    DS        0H                  END OF INPUT FILE                12060027
*                                                                     * 12080027
         NI        MACROSW,ON-NOPRINT  PRINT DIAGNOSTICS AND SUMMARY    12100027
         TM        CTTRMI(R3),TERM     IS TERM OPTION SPECIFIED .Q      12120027
         BZ        DIAGPH              NO, DON'T PRINT FINAL MESSAGE    12140027
         L         R1,ERCTR            GET NUMBER OF STMTS FLAGGED      12160027
         LTR       R1,R1               ARE THERE ANY .Q                 12180027
         BZ        NOTMSGSK            NO FINAL SKIP IF SO              12200027
         BAL       R14,TBLANK          LEAVE A BLANK                    12220027
NOTMSGSK DS        0H                                                   12240027
         MVC       BUFR,L1BLANKS(R9)   CLEAR PRINT BUFFER               12260027
         MVC       BUFR+1(L'TMSG),TMSG BUFFER AREA                      12280027
         MVC       BUFR+L'TMSG+2(4),CTITLE(R3)  ADD PROGRAM I.D.        12300027
         MVC       BUFR+30(8),L1PRTIME(R9) MOVE TIME TO HEADING LINE    12320027
         MVC       BUFR+42(9),L1PRDATE(R9) MOVE DATE TO HEADING LINE    12340027
         LA        R10,BUFR            ADDR TO PUT                      12360027
         BAL       R14,SYSTRMD         ASSEMBLER (G7) DONE MSG          12380027
         BAL       R14,TBLANK          TMSG                             12400027
         MVC       BUFR,L1BLANKS(R9)   BLANK OUTPUT BUFFER              12420027
         B         DIAGPH              BRANCH TO DIAGNOSTICS            12440027
STMTBUMP DS        0H                                                   12460027
         STM       R0,R15,PRSAVE       SAVE CALLER'S REGS               12480027
         L         R1,STMTCTR          GET CURRENT STMT COUNTER         12500027
         LA        R1,1(,R1)           BUMP BY ONE                      12520027
         ST        R1,STMTCTR          PUT IT BACK                      12540027
         BAL       R14,CVTBTC          CONVERT BINARY TO CHARACTER      12560027
         MVC       BSTMNO(L5),WORD-1   ADD STMT TO OUTPUT LINE          12580027
         LM        R0,R15,PRSAVE       RESTORE CALLER'S REGS            12600027
         BR        R14                 AND RETURN                       12620027
NOCORE   DS        0H                                                   12640027
         BAL       R0,ASMABEND         POINT TO ERROR MESSAGE           12660027
         DC        C'951I',AL1(L'MES951-1)  MESSAGE NUMBER AND LENGTH   12680027
MES951   DC        C'INSUFFICIENT CORE FOR SYSUT2 BUFFERS IN ASMGMACP'  12700027
ASMABEND DS        0H                                                   12720027
         L         R1,ADLIST1(,R3)     POINT TO LIST1 IN ASMGASM        12740027
         B         L1ABEND(,R1)        BRANCH TO ABEND ROUTINE          12760027
         TITLE     'MACRO POST PROCESSING DIAGNOSTIC PHASE'             12780027
ON       EQU       X'FF'               NORMAL SWITCH SETTING            12800027
OFF      EQU       X'00'               NORMAL SWITCH SETTING            12820027
GEN      EQU       C'+'                A GENERATED LINE MARKER          12840027
L1F      EQU       1                   NUMBER OF BYTES TO MOVE          12860027
L2D      EQU       2                   NUMBER OF BYTES TO MOVE          12880027
L8C      EQU       8                   NUMBER OF BYTES TO MOVE          12900027
L3B      EQU       3                   NUMBER OF BYTES TO MOVE          12920027
MLG      EQU       120-1               LENGTH OF BLANKING               12940027
MKF      EQU       X'10'               MASK FOR SYSPRINT                12960027
L4C      EQU       4                   NUMBER OF BYTES TO COMPARE       12980027
L4D      EQU       4                   OFFSET IN AN AREA                13000027
L2E      EQU       2                   NUMBER OF BYTES TO COMPARE       13020027
L3H      EQU       3                   NUMBER OF BYTES TO MOVE          13040027
L16      EQU       16                  NUMBER OF BYTES TO MOVE          13060027
L7A      EQU       7                   OFFSET IN AN AREA                13080027
L102     EQU       102                 NUMBER OF BYTES TO MOVE          13100027
L111     EQU       111                 NUMBER OF BYTES TO MOVE          13120027
MKI      EQU       X'80'               LAST RECORD MASK                 13140027
L2F      EQU       2                   OFFSET IN AN AREA                13160027
L2G      EQU       2                   NUMBER OF BYTES TO MOVE          13180027
L1G      EQU       1                   OFFSET IN AN AREA                13200027
L119     EQU       119                 NUMBER OF BYTES TO MOVE          13220027
L120     EQU       120                 NUMBER OF BYTES TO MOVE          13240027
L121     EQU       121                 NUMBER OF BYTES TO MOVE          13260027
L2H      EQU       2                   OFFSET IN AN AREA                13280027
L5       EQU       5                   NUMBER OF BYTES TO MOVE          13300027
L81      EQU       81                  NUMBER OF BYTES TO MOVE          13320027
L8D      EQU       8                   NUMBER OF BYTES TO MOVE          13340027
L73      EQU       73                  NUMBER OF BYTES TO MOVE          13360027
         SPACE     3                                                    13380027
DIAGPH   DS        0H                                                   13400027
         MVC       HEAD2+1(111),L1BLANKS+1(R9) CLEAR 2ND HEADER         13420027
         MVC       HEAD1+82(11),=C'DIAGNOSTICS' CHANGE 1ST HEADER       13440027
         CLI       L1SYNERR(R9),X'00'  ANY ERROR SWITCHES ON .Q         13460027
         BZ        ML00                NO, BRANCH AROUND                13480027
         LA        R4,X'80'            SET TO CHECK FIRST SWITCH        13500027
         LA        R6,BRANCHES         ROUTINES FOR VARIOUS SWITCHES    13520027
TST      DS        0H                                                   13540027
         TM        L1SYNERR(R9),X'80'+*-* TEST A SWITCH                 13560027
         BCR       1,R6                BOR    GO TO APPROPRIATE ROUTINE 13580027
         CLC       CTSEVCOD(1,R3),SVCODE HIGHEST SO FAR .Q              13600027
         BNL       BFBR                NO THEN SKIP IT                  13620027
         MVC       CTSEVCOD(1,R3),SVCODE YES THEN REPLACE IT            13640027
         MVI       SVCODE,X'00'        RESET THE TEMP CODE              13660027
BFBR     DS        0H                                                   13680027
         LA        R6,4(,R6)           SET TO NEXT ROUTINE              13700027
         SRA       R5,1                NEXT SWITCH TO TEST              13720027
         STC       R5,TST+1            IS PUT INTO CODING               13740027
         BNZ       TST                 BRANCH IF NOT LAST SWITCH TO TST 13760027
*                                                                     * 13780027
         MVI       TST+1,X'01'         RESTORE CODING                   13800027
         SR        R5,R5               ZERO A WORK REGISTER             13820027
         TM        L1SYNERR(R9),X'08'  DID INCORE MACRO TABLE O'FLOW    13840027
         BZ        NOOFLOW             BRANCH IF NOT                    13860027
         LA        R5,X'08'            SET REGISTER IF SO               13880027
NOOFLOW  DS        0H                                                   13900027
         XC        L1SYNERR(10,R9),L1SYNERR(R9) ZERO SW AND COUNTERS    13920027
         STC       R5,L1SYNERR(,R9)    RESET O'FLOW CONDITION           13940027
ML00     DS        0H                                                   13960027
         B         ML102               GO ENDUP ASMGMACP WITH STATS     13980027
*                                                                     * 14000027
*        PRINT OUT ***ERROR*** RECORDS                                * 14020027
*                                                                     * 14040027
ML01A    DS        0H                                                   14060027
         SR        R1,R1               ZERO REGISTER                    14080027
         IC        R1,ERCT(,R2)        GET ERROR COUNT                  14100027
         LTR       R1,R1               IS COUNT ZERO .Q                 14120027
         BNZ       ML02                NO, GO OUTPUT ERROR MESSAGES     14140027
         LA        R6,6                SET ERROR CODE TO PROCEDURE ERR  14160027
         B         ML03                SKIP GETTING ERROR CODE          14180027
ML02     DS        0H                                                   14200027
         SR        R6,R6               ZERO WORK REGISTER               14220027
         IC        R6,ERM(,R2)         GET ERROR CODE                   14240027
         CLI       ERM(R2),78          ERROR ASMG078 .Q                 14260027
         BNE       ML03                BRANCH IF NOT                    14280027
         OI        MACROSW,POSTER78    TURN OFF PUNCHING OUTPUT         14300027
ML03     DS        0H                                                   14320027
         MVC       ERBUFR,L1BLANKS(R9)  BLANK ERROR PRINT BUFFER        14340027
         MVC       ERBUFR+1(18),=C'****** ***ERROR***' SET ERROR IND    14360027
         MVC       ERCD(10),PRGTYP     MOVE PROGRAM TYPE TO MESSAGE     14380027
         LR        R1,R6               TRANSFER FOR CONVERSION          14400027
         BAL       R14,CVTBTC          GO CONVERT ERROR MESSAGE FOR     14420027
         OC        WORD(4),MASK        CHANGE BLANKS TO ZEROS           14440027
         MVC       ERNO(3),WORD+1      MOVE ERROR NUMBER TO PRINT       14460027
         LTR       R6,R6               IS ERROR CODE ZERO               14480027
         BZ        ML031               YES, BAD ERROR CODE              14500027
         BCTR      R6,0                REDUCE ERROR NUMBER BY 1         14520027
         AR        R6,R6               MULTIPLY BY 2                    14540027
         LA        R7,PTRTBL(R6)       POINT TO TABLE                   14560027
         LA        R1,ENDTBL           GET END OF TABLE LOCATION        14580027
         CR        R7,R1               IS NUMBER IN TABLE               14600027
         BL        ML04                YES, GO PUT MESSAGE              14620027
*                                                                     * 14640027
ML031    DS        0H                                                   14660027
         LH        R1,ENDTBL           ERROR NUMBER NOT KNOWN           14680027
         LA        R4,ESTART(R1)       ERROR CODE                       14700027
         LA        R7,MSGBG            SET POINTER FOR MESSAGE MOVE     14720027
         B         ML05                CONTINUE                         14740027
ML04     DS        0H                                                   14760027
         LH        R1,PTRTBL(R6)       GET POINTER TO MESSAGE           14780027
         LA        R4,ESTART(R1)       SET POINTER TO MESSAGE           14800027
         LA        R7,MSGBG            SET POINTER FOR MESSAGE MOVE     14820027
         CLI       ERCOL(R2),X'00'     IS COLUMN POINTER ZERO .Q        14840027
         BE        ML05                YES, GO PUT MESSAGE              14860027
*                                                                     * 14880027
         SR        R1,R1               NO, PUT OUT COLUMN POINTER       14900027
         IC        R1,ERCOL(,R2)       GET COLUMN POINTER               14920027
         BAL       R14,CVTBTC          GO CONVERT FOR LISTING           14940027
         MVC       MSGBG(25),PTRMSG    MOVE COLUMN POINTER MESSAGE      14960027
         MVC       MSGBG+20(3),WORD+1  MOVE COLUMN POINTER              14980027
         LA        R7,25(,R7)          STEP POINTER TO WHERE TO PUT     15000027
*                                       MESSAGE BY 20 BYTES           * 15020027
ML05     DS        0H                                                   15040027
         IC        R1,0(,R4)           GET MOVE LENGTH-1 OF MESSAGE     15060027
         EX        R1,MVMSG            MOVE MESSAGE TO BUFR             15080027
         TM        1(R4),NOPERR        IS ERROR VALID .Q                15100027
         BZ        MLVALER             BRANCH IF YES                    15120027
         TM        LASTTYPE,X'70'      WAS LAST RECORD GENNED .Q        15140027
         BNO       MLDONE              BRANCH IF NOT                    15160027
         IC        R1,1(,R4)           GET SEVERITY CODE                15180027
         N         R1,=X'0000007F'     CLEAR HIGH BIT                   15200027
         STC       R1,WORD+1           SAVE SEVERITY CODE               15220027
         LA        R4,WORD             WORK WITH ACTUAL SEVERITY        15240027
MLVALER  DS        0H                                                   15260027
         CLC       LSTMTN,STMTCTR      HAS STMT NUMBER CHANGED .Q       15280027
         BE        MLSEVCD             BRANCH IF NOT                    15300027
         MVC       LSTMTN,STMTCTR      SAVE NEW STMT NUMBER             15320027
         L         R1,ERCTR            GET CURRENT STATEMENTS IN ERROR  15340027
         LA        R1,1(,R1)           BUMP BY ONE                      15360027
         ST        R1,ERCTR            SAVE IT BACK FOR LISTING         15380027
MLSEVCD  DS        0H                                                   15400027
         CLC       CTSEVCOD(1,R3),1(R4)  COMPARE SEVCODE OF CURRENT     15420027
         BNL       *+10                MESSAGE TO HIGHEST CODE SO FAR   15440027
         MVC       CTSEVCOD(1,R3),1(R4)  ENCOUNTERED (INCLUDING MNOTE)  15460027
         LA        R10,ERBUFR          SET POINTER TO BUFR              15480027
         BAL       R14,WRLST           GO LIST MESSAGE                  15500027
         LA        R10,BUFR            POINT TO SYSPRINT BUFR           15520027
         BAL       R14,SYSTRMD         PRINT IT ON SYSTERM              15540027
         LA        R10,ERBUFR          POINT TO ERROR BUFR              15560027
         BAL       R14,SYSTRMD         GO LIST SYSTERM ERROR MSG        15580027
MLDONE   DS        0H                                                   15600027
         B         SKIP                RETURN TO CALLER                 15620027
*                                                                     * 15640027
*        PRINT OUT FINAL STATISTICS                                   * 15660027
*                                                                     * 15680027
ML102    DS        0H                                                   15700027
         L         R10,YLCNT           GET NUMBER OF LINES LEFT         15720027
         S         R10,=F'11'          DECREMENT BY TRAILER LENGTH      15740027
         BP        ML103               BRANCH IF STILL ROOM             15760027
         LA        R10,1               GET ONE IN A REGISTER            15780027
         ST        R10,YLCNT           SET UP FOR A NEW PAGE            15800027
ML103    DS        0H                                                   15820027
*                                                                     * 15840027
*        PRINT ERROR SUMMARY RECORDS                                  * 15860027
*                                                                     * 15880027
ML10     DS        0H                                                   15900027
         MVC       BUFR,L1BLANKS(R9)   BLANK SYSPRINT BUFFER            15920027
         L         R1,ERCTR            GET NUMBER OF ERROR RECORDS      15940027
         LTR       R1,R1               WERE THERE ANY ERRORS            15960027
         BNZ       ML101               BRANCH IF YES                    15980027
         MVC       BUFR(39),ERCTM+2    'NO STATEMENTS FLAGGED'          16000027
         MVC       BUFR(3),CAC         'NO'                             16020027
         B         ML112               GO AND PRINT IT                  16040027
ML101    DS        0H                                                   16060027
         MVC       BUFR(42),ERCTM-1    ENTER STMTS FLAGGED MESSAGE      16080027
         BCT       R1,ML101A           TEST FOR ONLY 1 ERROR RECORD     16100027
         MVI       BUFR+16,BLANK       BLANK 'S' ON 'STATEMENTS'        16120027
ML101A   DS        0H                                                   16140027
         A         R1,=F'1'            RESTORE STMTS FLAGGED            16160027
         BAL       R14,CVTBTC          CONVERT ERROR COUNT              16180027
         MVC       BUFR+2(4),WORD      FOR LISTING MESSAGE              16200027
ML112    DS        0H                                                   16220027
         LA        R10,BUFR            GET MESSAGE LOCATION             16240027
         BAL       R14,WRLST           PRINT NUMBER OF ERRORS           16260027
         BAL       R14,TBLANK          LEAVE A LINE ON SYSTERM          16280027
         BAL       R14,SYSTRMD         SYSTERM NUMBER OF ERRORS         16300027
ML100    DS        0H                                                   16320027
         IC        R1,CTSEVCOD(,R3)    GET SEVERITY CODE                16340027
         LTR       R1,R1               IS IT ZERO .Q                    16360027
         BZ        ZSVCD               IF SO, DON'T PRINT SEV CODE      16380027
         BAL       R14,CVTBTC          CONVERT TO DECIMAL               16400027
         MVC       BUFR(42),SVMES      MOVE SEVERITY MESSAGE            16420027
         MVC       BUFR+32(10),L1BLANKS+1(R9) BLANK PART OF RECORD      16440027
         MVC       BUFR+3(3),WORD+1    PUT IN SEVERITY CODE             16460027
         LA        R10,BUFR            POINT TO MESSAGE                 16480027
         BAL       R14,WRLST           PRINT SEVERITY MESSAGE           16500027
         BAL       R14,SYSTRMD         SYSTERM SEVERITY MESSAGE         16520027
ZSVCD    DS        0H                                                   16540027
*                                                                     * 16560027
*        PRINT OUT CARDS READ/LINES OUTPUT STATISTICS                 * 16580027
*                                                                     * 16600027
         MVI       BUFR,X'03'          LEAVE THREE LINES AGAIN          16620027
STATLOP1 DS        0H                                                   16640027
         SR        R4,R4               ZERO OFFSET IN DCB ADDR LIST     16660027
         MVC       BUFR+1(L'BUFR-1),L1BLANKS+1(R9)  BLANK OUTPUT LINE   16680027
         LA        R10,BUFR            POINT TO OUTPUT LINE             16700027
STATLOP2 DS        0H                                                   16720027
         L         R6,L1DCBADS(R4,R9)  GET ADDRESS OF NEXT DCB          16740027
TYPESW   TM        L1DCBPAD(R6),X'01'+*-* IS IT TYPE WE WANT .Q         16760027
         BZ        STATLOP3            BRANCH IF NOT                    16780027
         L         R1,L1DCBRCT(,R6)    GET NUMBER OF RECORDS            16800027
         LTR       R1,R1               IS IT ZERO .Q                    16820027
         BZ        STATLOP3            BRANCH IF SO                     16840027
         BAL       R14,CVTBTC          CONVERT TO CHARACTER             16860027
         SR        R1,R1               ZERO A REGISTER                  16880027
         ST        R1,L1DCBRCT(,R6)    ZERO RECORD COUNT                16900027
         MVC       1(5,R10),WORD-1     MOVE IN COUNT                    16920027
         LA        R5,L1DDNAM(R4,R4)   GET DDNAME OFFSET IN LIST1       16940027
         AR        R5,R9               POINT TO DDNAME                  16960027
         MVC       7(8,R10),0(R5)      ADD DDNAME                       16980027
         LA        R10,14(,R10)        BUMP TO END OF DDNAME            17000027
DDNAMLOP DS        0H                                                   17020027
         CLI       0(R10),BLANK        IS THIS THE END .Q               17040027
         BNE       DDNAMOUT            BRANCH IF YES                    17060027
         BCT       R10,DDNAMLOP        DECREMENT AND BRANCH             17080027
DDNAMOUT DS        0H                                                   17100027
         MVC       2(L'RECMESS,R10),RECMESS  ADD TEXT                   17120027
         LA        R10,L'RECMESS+2(,R10)  NEW END OF STRING             17140027
         MVI       0(R10),C','         FOLLOWED BY A COMMA              17160027
STATLOP3 DS        0H                                                   17180027
         LA        R4,4(,R4)           POINT TO NEXT DCB IN LIST        17200027
         LTR       R6,R6               AT END OF DCB LIST .Q            17220027
         BP        STATLOP2            BRANCH IF NOT                    17240027
         MVI       0(R10),BLANK        BLANK LAST COMMA                 17260027
         LA        R10,BUFR            LINE TO PRINT                    17280027
         BAL       R14,WRLST           GO PRINT IT                      17300027
         TM        TYPESW+1,X'02'      HAVE WE DONE OUTPUT .Q           17320027
         BO        STATEND             BRANCH IF YES                    17340027
         MVI       TYPESW+1,X'02'      DO OUTPUT RECORDS NOW            17360027
         MVC       RECMESS(6),=C'OUTPUT' CHANGE MESSAGE TEXT            17380027
         MVI       BUFR,X'00'          SINGLE SPACE                     17400027
         B         STATLOP1            DO IT AGAIN                      17420027
STATEND  DS        0H                                                   17440027
         L         R1,L1DCBADS+L1SPRINT(,R9) POINT TO SYSPRINT DCB      17460027
         MVI       L1DCBCC(R1),X'40'   SET NUMERIC CARRIAGE CONTROL     17480027
         SR        R0,R0               ZERO A WORK REGISTER             17500027
         ST        R0,L1DCBRCT(,R1)    ZERO SYSPRINT RECORD COUNT       17520027
         B         ARND                CLOSE PHASE                      17540027
         SPACE     2                                                    17560027
CVTBTC   DS        0H                                                   17580027
         CVD       R1,DWORD            CONVERT BINARY TO DECIMAL        17600027
         MVC       WORD-2(6),=X'402020202120'  EDIT MASK WITH BLANKS    17620027
         ED        WORD-2(6),DWORD+5   EDIT IN THE NUMBER               17640027
         BR        R14                 AND RETURN                       17660027
         SPACE     2                                                    17680027
ARND     DS        0H                                                   17700027
         LM        R0,R1,SPREQ         GET LENGTH/ADDR OF WORK AREA     17720027
         STM       R0,R1,RETREQ        STORE LENGTH/ADDR TO RELEASE IT  17740027
         L         R1,L1BUFADR(,R9)    POINT TO ASMGBUFF                17760027
         CNOP      2,4                 FOR ALIGNMENT                    17780027
         BALR      R0,R1               GO AND RELEASE THE SPACE         17800027
         DC        A(32)               GROW CALL                        17820027
RETREQ   DS        F                   LENGTH TO BE FREED               17840027
RETGOT   DS        F                   ADDRESS TO BE FREED              17860027
         L         R1,L1BUFADR(,R9)    POINT TO ASMGBUFF                17880027
         CNOP      2,4                 ALIGN PARAMETERS                 17900027
         BALR      R0,R1               GO AND TCLOSE SYSUT2             17920027
         DC        A(24,4,1)           MEANS A TCLOSE OF SYSUT2         17940027
         SR        R15,R15             ZERO A WORK REGISTER             17960027
         IC        R15,CTSEVCOD(,R3)   RC  =  HIGHEST SEVCODE           17980027
         C         R15,L1SAVECC(,R9)   IS THIS HIGHEST CC SO FAR        18000027
         BNH       *+8                 NO, PROCEED                      18020027
         ST        R15,L1SAVECC(,R9)   YES, SAVE HIGHEST SO FAR         18040027
         TM        L1PBYT1(R9),BATCH   IS BATCH ON .Q                   18060027
         BO        SAVESUM             YES, SAVE BATCH TABLE INFO       18080027
         DELETE    EPLOC=L1ISNAME(,R9) DELETE INSTRUCTION SET           18100027
         TM        L1SINSW(R9),X'80'   HAVE WE HIT END OF FILE .Q       18120027
         BO        RETURN              YES, THEN WE'RE DONE             18140027
         MVI       BUFR+1,BLANK        INSERT A BLANK                   18160027
         MVC       BUFR+2(L'BUFR-2),BUFR+1  AND MOVE IT ACROSS          18180027
         MVC       BUFF+1(L'MSUNPROC),MSUNPROC  TEXT OF ERROR MESSAGE   18200027
         MVC       BUFF+23(8),L1DDNAM+2*L1SIN(R9) PLACE SYSIN DDNAME    18220027
         MVC       BUFF+39(8),L1DDNAM+2*L1SUP(R9) AND SYSUP DDNAME      18240027
         TM        L1PBYT2(R9),UPDATE  WAS UPDATE SPECIFIED .Q          18260027
         BO        TWOFILES            BRANCH IF YES                    18280027
         MVI       BUFF+7,C'5'         CHANGE TO ASMG205                18300027
         MVC       BUFF+32(30),BUFF+48 BLANK SYSUP INFORMATION          18320027
TWOFILES DS        0H                                                   18340027
         MVC       HEAD2+1(30),HEAD2+31 BLANK SECOND HEADER             18360027
         MVI       BUFF,X'03'          TRIPLE SPACE                     18380027
         LA        R10,BUFF            POINT TO OUTPUT LINE             18400027
         BAL       R14,WRLST           GO LIST FINAL MESSAGE            18420027
         MVI       BUFF,X'00'          PREPARE FOR SYSTERM              18440027
         BAL       R14,TBLANK          LEAVE A LINE                     18460027
         BAL       R14,SYSTRMD         AND PRINT THE UNPROCESSED ERROR  18480027
         B         RETURN              THAT'S ALL                       18500027
GOAGAIN  DS        0H                                                   18520027
         LA        R10,ON              SET BATCH SWITCH FOR RTA         18540027
         LA        R2,L1BLDL+L1LENBL(,R9) ADDRESS OF F1 IN BLDL TABLE   18560027
         B         RETURN1             GO AND TERMINATE                 18580027
*                                                                     * 18600027
*        SAVE BATCH SUMMARY INFORMATION                               * 18620027
SAVESUM  DS        0H                                                   18640027
         L         R1,L1BUFADR(,R9)    ADDRESS OF ASMGBUFF              18660027
         CNOP      2,4                 ALIGN PARAMETERS                 18680027
         BALR      R0,R1               BRANCH TO SHRINK                 18700027
         DC        F'36'               MEANS A SHRINK OF BUFF SPACE     18720027
         DC        F'8'                I NEED 8 BYTES                   18740027
SHADR    DS        F                   BUFF WILL FILL THIS IN           18760027
*                                                                     * 18780027
         L         R1,SHADR            ADDRESS OF CORE WE GOT           18800027
         L         R4,L1BTCSUM(,R9)    GET FIRST BATCH SUMMARY ADDRESS  18820027
         LTR       R4,R4               FIRST PROGRAM IN BATCH .Q        18840027
         BNZ       *+8                 NO, THEN BRANCH AROUND           18860027
         ST        R1,L1BTCSUM(,R9)    REMEMBER 1ST 8 BYTES IN CHAIN    18880027
         MVI       0(R1),X'00'         THIS MAY NOT BE LAST ASSEMBLY    18900027
         STC       R15,1(,R1)          SEVERITY CODE OF THIS PROGRAM    18920027
         MVC       2(2,R1),ERCTR+2     NUMBER OF STMTS FLAGGED          18940027
         MVC       4(4,R1),CTITLE(R3)  PROGRAM I.D.                     18960027
         TM        L1SINSW(R9),X'80'   ARE WE AT EOF .Q                 18980027
         BNO       GOAGAIN             NO, SET XCTL FOR RTA             19000027
*                                                                     * 19020027
*        NOW PRINT THE BATCH SUMMARY                                  * 19040027
         MVI       0(R1),ON            MARKS THE LAST ASSEMBLY          19060027
         L         R5,L1BTCSUM(,R9)    ADDRESS OF FIRST BATCH ENTRY     19080027
         CLI       0(R5),ON            IS FIRST THE LAST .Q             19100027
         BE        RETURN              YES, SUMMARY IS THEN USELESS     19120027
         SR        R4,R4               ZERO A REGISTER                  19140027
         ST        R4,L1PAGENO(,R9)    ZERO PAGE COUNT                  19160027
         LA        R4,1                ONE IN A REGISTER                19180027
         ST        R4,YLCNT            INITIALIZE LINES FOR NEW PAGE    19200027
         MVC       HEAD1+1(101),L1BLANKS+1(R9) BLANK HEADER 1           19220027
         MVC       HEAD1+23(14),BSUMMARY SET UP 1ST HEADING             19240027
         MVC       HEAD2+1(59),=C'DECK NUMBER  DECK I.D.  SEVERITY CODE*19260027
                 NUMBER STMTS FLAGGED'                                  19280027
         MVC       BUFR,L1BLANKS(R9)   BLANK LINE BUFFER                19300027
         SR        R7,R7               ZERO TOTAL ERROR COUNT           19320027
         SR        R6,R6               ZERO FOR DECK NUMBER             19340027
NEXTPGM  LA        R6,1(,R6)           INCREMENT DECK NUMBER            19360027
         LR        R1,R6               TRANSFER DECK NUMBER             19380027
         BAL       R14,CVTBTC          CONVERT TO CHARACTER             19400027
         MVC       BUFF+3(4),WORD      MOVE INTO PRINT LINE             19420027
         MVC       BUFF+16(4),4(R5)    MOVE IN DECK I.D.                19440027
         IC        R1,1(,R5)           INSERT SEVERITY CODE             19460027
         BAL       R14,CVTBTC          CONVERT TO CHARACTER             19480027
         MVC       BUFF+30(4),WORD     MOVE INTO PRINT LINE             19500027
         LH        R1,2(,R5)           GET NUMBER OF STMTS FLAGGED      19520027
         AR        R7,R1               INCREASE TOTAL ERROR COUNT       19540027
         BAL       R14,CVTBTC          CONVERT TO CHARACTER             19560027
         MVC       BUFF+46(4),WORD     MOVE INTO PRINT LINE             19580027
         LA        R10,BUFF            POINT TO PRINT LINE              19600027
         BAL       R14,WRLST           PRINT INFORMATION LINE           19620027
         CLI       0(R5),ON            IS THIS THE END .Q               19640027
         BE        TESTMESS            YES, MAKE UP FIRST MESSAGE       19660027
         LA        R5,8(,R5)           POINT TO NEXT SUMMARY            19680027
         B         NEXTPGM             DO NEXT PROGRAM IN BATCH         19700027
*                                                                     * 19720027
*        OUTPUT NO STATEMENTS FLAGGED MESSAGE                         * 19740027
TESTMESS MVI       BUFF,X'02'          LEAVE 2 LINES                    19760027
         LTR       R7,R7               WERE NO STATEMENTS FLAGGED .Q    19780027
         BNZ       TWOMESS             NO, MAKE UP TWO MESSAGES         19800027
         MVC       BUFF+1(38),ERCTM+3  MOVE IN MESSAGE                  19820027
         MVC       BUFF+1(2),CAC+1     MOVE IN 'NO'                     19840027
         MVC       BUFF+31(6),BSUMMARY CHANGE MESSAGE                   19860027
         MVC       BUFF+37(20),BUFF+36 BLANK THE REST OF THE LINE       19880027
         B         LASTMESS            THAT'S ALL HERE                  19900027
*                                                                     * 19920027
*        NUMBER FLAGGED AND SEVERITY CODE                             * 19940027
TWOMESS  DS        0H                                                   19960027
         LR        R1,R7               NUMBER OF STATEMENTS FLAGGED     19980027
         BAL       R14,CVTBTC          CONVERT TO CHARACTER             20000027
         MVC       BUFF+1(41),ERCTM    MOVE IN MESSAGE                  20020027
         MVC       BUFF+34(6),BSUMMARY CHANGE MESSAGE                   20040027
         MVC       BUFF+40(20),BUFF+39 BLANK REST OF LINE               20060027
         BCT       R7,*+8              ONLY ONE ERROR .Q                20080027
         MVI       BUFF+16,BLANK       REMOVE 'S'                       20100027
         MVC       BUFF+2(4),WORD      MOVE IN NUMBER                   20120027
         LA        R10,BUFF            POINT TO OUTPUT LINE             20140027
         BAL       R14,WRLST           AND PRINT IT                     20160027
         MVI       BUFF,X'00'          DON'T SKIP LINE                  20180027
         MVC       BUFF+1(40),SVMES+1  MOVE IN SEVERITY MESSAGE         20200027
         L         R1,L1SAVECC(,R9)    GET HIGHEST SEVERITY CODE        20220027
         BAL       R14,CVTBTC          CONVERT TO CHARACTER             20240027
         MVC       BUFF+2(4),WORD      MOVE IN NUMBER                   20260027
LASTMESS DS        0H                                                   20280027
         LA        R10,BUFF            POINT TO MESSAGE                 20300027
         BAL       R14,WRLST           AND PRINT IT                     20320027
RETURN   DS        0H                                                   20340027
         SR        R10,R10             RETURN TO ASMGASM VIA RTA        20360027
RETURN1  DS        0H                                                   20380027
         L         R14,CTMRSRTN(,R3)   RESTORE RETURN REGISTER          20400027
         BR        R14                 AND RETURN                       20420027
*                                                                     * 20440027
BRANCHES EQU       *                   ROUTINES                         20460027
         B         AE20416             0                                20480027
         B         AE204               1                                20500027
         B         AE207               2                                20520027
         B         AE206               3                                20540027
         B         AE208               4         IN CORE MACRO DIR EXCE 20560027
         B         AE209               5         THIS MANY FINDS RESULT 20580027
         B         AE203               6                                20600027
         B         BFBR                7                                20620027
         SPACE     2                                                    20640027
AE203    DS        0H                                                   20660027
         MVI       SVCODE,X'04'        SEVERITY FOUR                    20680027
         MVC       BUFR+20(21),=C'ILLEGAL DCB OPERANDS.'                20700027
         MVC       BUFR+42(15),=C'SEE FIRST PAGE.'                      20720027
         LA        R7,C'3'             ASMG203                          20740027
         B         ASMGDDDI                                             20760027
AE204    DS        0H                                                   20780027
         MVI       SVCODE,X'04'        SEVERITY FOUR                    20800027
AE204B   DS        0H                                                   20820027
         MVC       BUFR+20(21),=C'UNOPENABLE DATA SETS.'                20840027
         MVC       BUFR+42(15),=C'SEE FIRST PAGE.'                      20860027
         LA        R7,C'4'             ASMG204                          20880027
         B         ASMGDDDI                                             20900027
AE20416  MVI       SVCODE,X'10'        SEVERITY CODE OF 16              20920027
         NI        L1SYNERR(R9),ON-X'40'  SKIP 204 SEV 4 TEST           20940027
         B         AE204B              OTHERWISE SAME AS OTHER 204      20960027
AE206    DS        0H                                                   20980027
         MVI       SVCODE,X'04'        SEVERITY FOUR                    21000027
         LA        R7,C'6'             ASMG206                          21020027
         MVC       BUFR+39(8),L1DDNAM+2*L1SPRINT(R9) SYSPRINT DDNAME    21040027
         LH        R1,L1IOERR+2(,R9)   GET NUMBER OF SYSPRINT ERRORS    21060027
         B         MSG67                                                21080027
AE207    DS        0H                                                   21100027
         MVI       SVCODE,X'04'        SEVERITY FOUR                    21120027
         LA        R7,C'7'             ASMG207                          21140027
         MVC       BUFR+39(8),L1DDNAM+2*L1SPUNCH(R9) SYSPUNCH DDNAME    21160027
         LH        R1,L1IOERR(,R9)     GET NUMBER OF SYSPUNCH ERRORS    21180027
         B         MSG67                                                21200027
AE208    DS        0H                                                   21220027
         MVC       BUFR+20(34),=C'MORE THAN****** MACROS ON LIBRARY.'   21240027
         L         R0,L1TOPMC(,R9)     GET ADDR OF TOP OF MACRO TABLE   21260027
         S         R0,L1BOTMC(,R9)     LESS THE BOTTOM                  21280027
         SRDA      R0,32               SET FOR A DIVIDE                 21300027
         D         R0,=F'11'           DIVIDE BY EACH ENTRY LENGTH      21320027
         BCTR      R1,0                LESS THE END DUMMY ENTRY         21340027
         CVD       R1,DWORD            CONVERT TO DECIMAL               21360027
         MVC       BUFR+29(6),=X'402020202020' ADD MASK                 21380027
         ED        BUFR+29(6),DWORD+5  EDIT IN NUMBER OF MACROS         21400027
         LA        R7,C'8'             ASMG208                          21420027
         B         ASMGDDDI            GO DO IT                         21440027
AE209    DS        0H                                                   21460027
         MVC       BUFR+25(40),=C'LIBRARY FINDS DONE TO COMPLETE ASSEMB*21480027
               LY.'                                                     21500027
         L         R1,L1FINDCT(,R9)    GET NUMBER OF FINDS DONE         21520027
         CVD       R1,DWORD            CONVERT TO DECIMAL               21540027
         BCT       R1,*+8              ONLY 1 FIND .Q                   21560027
         MVI       BUFR+37,BLANK       BLANK THE 'S'                    21580027
         MVC       BUFR+18(6),=X'402020202020' ADD MASK                 21600027
         ED        BUFR+18(6),DWORD+5  EDIT IN THE COUNT                21620027
         LA        R7,C'9'             ASMG209                          21640027
         B         ASMGDDDI            GO DO IT                         21660027
MSG67    DS        0H                                                   21680027
         MVC       BUFR+25(13),=C'I/O ERRORS ON'                        21700027
         CVD       R1,DWORD            CONVERT NUMBER TO DECIMAL        21720027
         BCT       R1,*+8              ONLY 1 ERROR .Q                  21740027
         MVI       BUFR+34,BLANK       YES, BLANK 'S' ON 'ERRORS'       21760027
         MVC       BUFR+18(6),=X'402020202020'                          21780027
         ED        BUFR+18(6),DWORD+5  EDIT IN NUMBER OF ERRORS         21800027
         LA        R1,BUFR+39          POINT TO DDNAME                  21820027
BLKSAD   DS        0H                                                   21840027
         LA        R1,1(,R1)           ADVANCE 1 CHARACTER              21860027
         CLI       0(R1),BLANK         END OF DDNAME .Q                 21880027
         BNE       BLKSAD              NO, CONTINUE LOOKING             21900027
         MVI       0(R1),C'.'          YES, PUT IN PERIOD               21920027
ASMGDDDI DS        0H                                                   21940027
         MVC       BUFR+9(10),PRGTYP                                    21960027
         STC       R7,BUFR+15          PUT IN LAST DIGIT                21980027
         LA        R10,BUFR                                             22000027
         BAL       R14,WRLST           GO LIST ERROR                    22020027
         MVC       CTLINECT(4,R3),YLCNT UPDATE LINES LEFT ON PAGE       22040027
         MVI       BUFR,X'00'          SET UP FOR SYSTERM               22060027
         BAL       R14,SYSTRMD         GO PRINT ERROR ON SYSTERM        22080027
         BAL       R14,TBLANK          AND LEAVE A BLANK LINE           22100027
         MVC       BUFR,L1BLANKS(R9)   RESET CARR CONTROL AND LINE      22120027
         B         BFBR                TEST NEXT SWITCH                 22140027
         EJECT                                                          22160027
*********************************************************************** 22180027
*        SYSPUNCH, SYSLIN OUTPUT ROUTINE                              * 22200027
*********************************************************************** 22220027
WRPCH    DS        0H                                                   22240027
         TM        MACROSW,POSTER78    AFTER ASMG078 ERROR .Q           22260027
         BCR       1,R14               RETURN IMMEDIATELY IF SO         22280027
         TM        MACROSW,INMAC+NOPUNCH  CAN I PUNCH THIS RECORD       22300027
         BCR       1,R14               BRANCH BACK IF NOT               22320027
         BZ        PCHNXT              TEST FURTHER IF NOTHING          22340027
         NI        MACROSW,ON-(INMAC+NOPUNCH)  CLEAR SWITCHES           22360027
         BR        R14                 AND RETURN                       22380027
PCHNXT   DS        0H                                                   22400027
         TM        L1PBYT(R9),DECK+LOAD ANYTHING TO WRITE OUT           22420027
         BCR       8,R14               BRANCH BACK IF NOT               22440027
         STM       R0,R15,PRSAVE       SAVE CALLER'S REGISTERS          22460027
         TM        L1PBYT(R9),DECK     WAS DECK SPECIFIED .Q            22480027
         BZ        NODECK              BRANCH IF NOT                    22500027
         L         R1,L1DCBADS+L1SPUNCH(,R9) GET SYSPUNCH DCB ADDRESS   22520027
         PUT       (1),(R10)           DO THE IO                        22540027
NODECK   DS        0H                                                   22560027
         TM        L1PBYT(R9),LOAD     WAS LOAD SPECIFIED .Q            22580027
         BZ        NOLOAD              BRANCH IF NOT                    22600027
         L         R1,L1DCBADS+L1SLIN(,R9) GET SYSLIN DCB ADDRESS       22620027
         PUT       (1),(R10)           DO THE IO                        22640027
NOLOAD   DS        0H                                                   22660027
         LM        R0,R15,PRSAVE       RESTORE CALLER'S REGS            22680027
         BR        R14                 AND RETURN                       22700027
*********************************************************************** 22720027
*        WRITE RECORDS ON SYSPRINT                                    * 22740027
*********************************************************************** 22760027
WRLST    DS        0H                                                   22780027
         TM        MACROSW,NOPRINT     SHOULD THIS LINE BE PRINTED .Q   22800027
         BCR       1,R14               BRANCH BACK IF NOT               22820027
         STM       R0,R15,PRSAVE       SAVE ALL REGISTERS               22840027
         L         R2,YLCNT            CURRENT LINE COUNT               22860027
         BCT       R2,WRLINE           AT BOTTOM OF PAGE .Q             22880027
         L         R1,L1PAGENO(,R9)    GET CURRENT PAGE NUMBER          22900027
         LA        R1,1(,R1)           INCREMENT BY ONE                 22920027
         ST        R1,L1PAGENO(,R9)    UPDATE CURRENT PAGE NUMBER       22940027
         BAL       R14,CVTBTC          CONVERT TO CHARACTER             22960027
         MVC       HPAGENO(4),WORD     MOVE TO HEADER LINE              22980027
         LA        R0,HEAD1            POINT TO FIRST HEADER            23000027
         BAL       R14,SYSL            PRINT IT                         23020027
         LA        R0,HEAD2            POINT TO SECOND HEADER           23040027
         BAL       R14,SYSL            PRINT IT                         23060027
         MVI       0(R10),X'01'        LEAVE A LINE NEXT TIME           23080027
         SR        R2,R2               ZERO A REGISTER                  23100027
         IC        R2,CTPGLNCT(,R3)    RESTORE LINE COUNT PER PAGE      23120027
WRLINE   DS        0H                                                   23140027
         ST        R2,YLCNT            SAVE NEW LINES LEFT              23160027
         LR        R0,R10              POINT TO LINE TO BE OUTPUT       23180027
         BAL       R14,SYSL            PRINT IT                         23200027
         MVI       0(R10),X'00'        RESET SPACE OPERAND              23220027
         LM        R0,R15,PRSAVE       RESTORE ALL REGISTERS            23240027
         BR        R14                 RETURN                           23260027
*********************************************************************** 23280027
*        SYSTEM LIST SUBROUTINE                                       * 23300027
*********************************************************************** 23320027
SYSL     DS        0H                                                   23340027
         L         R1,L1DCBADS+L1SPRINT(,R9) SYSPRINT DCB ADDR          23360027
         L         R15,48(,R1)         LOAD PUT ROUTINE ADDRESS         23380027
         BR        R15                 AND BRANCH TO IT                 23400027
         EJECT                                                          23420027
*                                                                     * 23440027
*                                                                     * 23460027
*        SYSTERM OUTPUT LISTING VIA SYSTERM                           * 23480027
*                                                                     * 23500027
SYSTRMD  DS        0H                                                   23520027
         TM        L1PBYT2(R9),TERM    IS TERM OPTION ON .Q             23540027
         BCR       8,R14               NO, THEN EXIT                    23560027
         STM       R0,R15,PRSAVE       SAVE ALL REGISTERS               23580027
SYSTRMD1 DS        0H                                                   23600027
         L         R4,L1TRSAVE(,R9)    RESTORE PAST LINE DATA           23620027
         BCT       R4,SYSTRA           TEST FOR NO EJECT                23640027
         MVI       0(R10),ON           SKIP TO A NEW PAGE               23660027
         SR        R4,R4               ZERO A REGISTER                  23680027
         IC        R4,CTPGLNCT(,R3)    GET LINE COUNT PER PAGE          23700027
SYSTRA   DS        0H                                                   23720027
         ST        R4,L1TRSAVE(,R9)    UPDATE LINES LEFT                23740027
         L         R1,L1DCBADS+L1STERM(,R9) SYSTERM DCB ADDRESS         23760027
         PUT       (1),(R10)                                            23780027
         MVI       0(R10),X'00'        RESET CARRIAGE CONTROL           23800027
         LM        R0,R15,PRSAVE       RESTORE REGISTERS                23820027
         BR        R14                 AND RETURN                       23840027
         SPACE     2                                                    23860027
*                                                                     * 23880027
*        BLANK LINE ON SYSTERM                                        * 23900027
*                                                                     * 23920027
TBLANK   DS        0H                                                   23940027
         TM        L1PBYT2(R9),TERM    IS TERM OPTION ON .Q             23960027
         BCR       8,R14               NO, THEN EXIT IMMEDIATELY        23980027
         STM       R0,R15,PRSAVE       SAVE REGISTERS                   24000027
         LA        R10,L1BLANKS(,R9)   POINT TO X'00'.BLANKS            24020027
         B         SYSTRMD1            GO AND PRINT IT                  24040027
         TITLE     'ASMGMACP    CONSTANTS AND WORK AREAS'               24060027
*********************************************************************** 24080027
*        CONSTANTS AND WORK AREAS                                     * 24100027
*********************************************************************** 24120027
         SPACE     2                                                    24140027
SAVE     DC        18F'0'              MY SAVE AREA                     24160027
PATCH    DC        10S(*)              ASMGMACP PATCH AREA              24180027
         SPACE     2                                                    24200027
FUPLIST  EQU       X'80'               *PARBYT1  FULLUPLIST             24220027
DOS      EQU       X'40'               *         DOS                    24240027
ESD      EQU       X'20'               *         ESD                    24260027
BATCH    EQU       X'10'               *         BATCH                  24280027
FLIST    EQU       X'08'               *         FULLLIST               24300027
EXTEN    EQU       X'04'               *         EXTEN                  24320027
FXREF    EQU       X'02'               *         FULLXREF               24340027
ALGN     EQU       X'01'               *         ALGN                   24360027
         SPACE                                                          24380027
DECK     EQU       X'80'               *PARBYT   DECK                   24400027
LOAD     EQU       X'40'               *         LOAD                   24420027
RENT     EQU       X'20'               *         RENT                   24440027
LIST     EQU       X'10'               *         LIST                   24460027
RLD      EQU       X'08'               *         RLD                    24480027
UPLIST   EQU       X'04'               *         UPLIST                 24500027
XREF     EQU       X'02'               *         XREF                   24520027
TEST     EQU       X'01'               *         TEST                   24540027
         SPACE                                                          24560027
LREF     EQU       X'80'               *PARBYT2  LREF                   24580027
UPDATE   EQU       X'40'               *         UPDATE                 24600027
EXECUTE  EQU       X'20'               *         EXECUTE                24620027
SPACE    EQU       X'10'               *         SPACE=MAX              24640027
TERM     EQU       X'08'               *         TERM                   24660027
NUM      EQU       X'04'               *         NUM                    24680027
STMT     EQU       X'02'               *         STMT                   24700027
*RSVD    EQU       X'01'               *         RESERVED               24720027
         SPACE                                                          24740027
UMAP     EQU       X'80'               *PARBYT3  UMAP                   24760027
CMS      EQU       X'40'               *         CMS                    24780027
*RSVD    EQU       X'20'               *         RESERVED               24800027
*RSVD    EQU       X'10'               *         RESERVED               24820027
*RSVD    EQU       X'08'               *         RESERVED               24840027
*RSVD    EQU       X'04'               *         RESERVED               24860027
*RSVD    EQU       X'02'               *         RESERVED               24880027
UNUSED   EQU       X'01'               *         UNUSED                 24900027
         SPACE                                                          24920027
*                                                                     * 24940027
POSTSW   DC        X'00'               TYPE OF POST PROCESSING          24960027
ASM      EQU       X'80'               360 ASSEMBLER CODE               24980027
PDP      EQU       X'40'               PDP ASSEMBLER CODE               25000027
CC70     EQU       X'20'               CC70 ASSEMBLER CODE              25020027
FORT     EQU       X'10'               FORTRAN CODE                     25040027
*                                                                     * 25060027
COMCHAR  DC        C' '                COMMENT CHARACTER                25080027
*                                                                     * 25100027
FR0      EQU       0                   FLOATING REGISTER ZERO           25120027
R0       EQU       0                                                    25140027
R1       EQU       1                                                    25160027
R2       EQU       2                                                    25180027
R3       EQU       3                   POINTS TO FDIMEN COMMUNICATIONS  25200027
R4       EQU       4                                                    25220027
R5       EQU       5                                                    25240027
R6       EQU       6                                                    25260027
R7       EQU       7                                                    25280027
R8       EQU       8                   UNUSED                           25300027
R9       EQU       9                   LIST1 COMMON AREA IN ASMGASM     25320027
R10      EQU       10                                                   25340027
R11      EQU       11                  UNUSED                           25360027
R12      EQU       12                  BASE REGISTER                    25380027
R13      EQU       13                  SAVE AREA POINTER                25400027
R14      EQU       14                  LINK REGISTER                    25420027
R15      EQU       15                  LINK REGISTER                    25440027
*                                                                     * 25460027
PRSAVE   DC        16F'0'              SAVE AREA FOR SYSTEM LIST        25480027
         SPACE     2                                                    25500027
YLCNT    DC        F'0'                LINE COUNTER                     25520027
ERCTR    DC        F'0'                NUMBER OF ERRORS                 25540027
MLSW     DC        X'00'               FF= ERROR 58 OR 46, 00= NOT      25560027
LASTTYPE DC        X'00'               SAVE FORMER RECORD TYPE          25580027
MACROSW  DC        X'00'               MACRO/MEND SWITCH                25600027
INMAC    EQU       X'80'                    IN A PROGRAMMER MACRO       25620027
NOPUNCH  EQU       X'40'                    NO PUNCH THIS STMT          25640027
POSTER78 EQU       X'20'                    AFTER ASMG078 MESSAGE       25660027
MACCALL  EQU       X'10'                    CONTINUED MACRO CALL        25680027
MACPROT  EQU       X'08'                    MACRO PROTOTYPE EXPECTED    25700027
NOPRINT  EQU       X'04'                    DON'T PRINT THIS STATEMENT  25720027
*                                                                     * 25740027
BLANK    EQU       X'40'               A BLANK CHARACTER                25760027
ZERX     EQU       X'F0'               A ZERO CHARACTER                 25780027
NOPERR   EQU       X'80'               BIT TO NO-OP AN ERROR            25800027
         EJECT                                                          25820027
*                                                                     * 25840027
*        WORK AND DATA AREA                                           * 25860027
*                                                                     * 25880027
SNAPWORK DC        D'0'                WORK AREA                        25900027
ENDWORD  DC        F'0'                WORK AREA FOR FULLWORD           25920027
SNAPSAVE DC        16F'0'              SAVE AREA FOR SNAPDATA           25940027
SNAPCARR DC        X'00'               CARRIAGE CONTROL FOR SNAP        25960027
SNAPAREA DC        CL132' '            FORMAT DATA HERE                 25980027
SNAPHEX  EQU       *-240               START OF TRANSLATE DOESN'T HURT  26000027
SNAPTRAN DC        X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                  26020027
         DC        X'C7C8C9D1D2D3D4D5D6D7D8D9E2E3E4E5'                  26040027
         DC        X'E6E7E8E95B7B7C4E605C616B7E504B4D'                  26060027
         DC        X'5D7D404B4B4B4B4B4B4B4B4B4B4B4B4B'                  26080027
         DC        192XL1'4B'                                           26100027
*                                                                     * 26120027
LSTMTN   DC        F'0'                LAST STATEMENT WITH ERROR        26140027
PTRMSG   DC        C'NEAR OPERAND COLUMN 000--'                         26160027
PRGTYP   DC        C'ASMG200   '                                        26180027
*                                                                     * 26200027
SVCODE   DC        X'00'               SEVERITY CODE FOR L1SYNERR'S     26220027
MASK     DC        4X'F0'              MASK TO SET BLANKS ZERO          26240027
LASTREC  DC        CL80' '             LAST RECORD PRINTED              26260027
BUFR     DS        0CL133              DETAIL OUTPUT BUFFER             26280027
         DC        X'01'               NUMERIC CARRIAGE CONTROL         26300027
         DC        132C' '                                              26320027
BUFF     EQU       BUFR                                                 26340027
BCMNT    EQU       BUFR+8              FOR (F7) COMMENTS                26360027
BSTMNO   EQU       BUFR+35             FOR (F7) STATEMENT COUNT         26380027
BGENNED  EQU       BUFR+40             FOR (F7) GENERATED STATEMENTS    26400027
BOUTPUT  EQU       BUFR+41             FOR (F7) OUTPUT RECORDS          26420027
BLINENO  EQU       BUFR+112            FOR (F7) LINE NUMBERS            26440027
ERBUFR   DS        0CL133              PRINT BUFFER FOR DIAGNOSTICS     26460027
         DC        X'00'               CARRIAGE CONTROL                 26480027
         DC        CL132' '            PRINT AREA                       26500027
ERNO     EQU       ERBUFR+26           ERROR NUMBER                     26520027
MSGBG    EQU       ERBUFR+33           BEGINNING OF ERROR MESSAGE       26540027
ERCD     EQU       ERBUFR+22           ERROR CODE                       26560027
*                                                                     * 26580027
NAME     DC        D'0'                FOR OPCODE NAMES                 26600027
TRNAME   DC        D'0'                TRANSLATED MACRO NAME            26620027
NAMELEN  DC        F'0'                LENGTH-1 OF OPCODE NAME ENTRY    26640027
MACTBLM  DC        A(&MAXMAC*8)        SIZE OF MACRO NAME TABLE         26660027
MACTBLO  DC        F'0'                CURRENT MACTBL OFFSET            26680027
MACTBLA  DC        A(0)                MACTBL ADDRESS                   26700027
PROCPTR  DC        F'0'                START EDITED TEXT STRING         26720027
*                                                                     * 26740027
*                                                                     * 26760027
HEAD1    DS        0CL133              HEADER LINE ONE                  26780027
         DC        X'FF'               SKIP TO NEW PAGE                 26800027
HDECKID  DC        CL4' '              DECK I. D.                       26820027
         DC        CL40' '                                              26840027
         DC        CL67'ASSEMBLER (G7) MACRO POST PROCESSOR'            26860027
         DC        CL4'PAGE'                                            26880027
         DC        C' '                                                 26900027
HPAGENO  DC        CL4' '              PAGE NUMBER                      26920027
         DC        CL12' '                                              26940027
*                                                                     * 26960027
HEAD2    DS        0CL133              HEADER LINE TWO                  26980027
         DC        X'02'               LEAVE TWO LINES BEFORE           27000027
         DC        CL35'       COMMENT'                                 27020027
         DC        CL76'STMT   SOURCE STATEMENT'                        27040027
HDATE    DC        CL9' '                                               27060027
         DC        CL12' '                                              27080027
*                                                                     * 27100027
BSUMMARY DC        CL14'BATCH  SUMMARY'                                 27120027
DCBEODAD EQU       32                  EODAD EXIT ADDRESS               27140027
DCBGET   EQU       48                  DCB GET ADDRESS                  27160027
ERM      EQU       4                   POSITION OF ERROR CODE           27180027
ERCT     EQU       3                   POSITION OF ERROR COUNT          27200027
ERCOL    EQU       5                   POSITION OF COLUMN IN ERROR      27220027
SVMES    DC        X'00',C'  000 WAS HIGHEST SEVERITY CODE'             27240027
         DC        10C' '                                               27260027
MSUNPROC DC        C'ASMG202   UNPROCESSED ******** AND/OR ******** REC*27280027
               ORDS EXIST.'                                             27300027
TMSG     DC        C'ASSEMBLER (G7) DONE'                               27320027
MVMSG    MVC       0(*-*,R7),2(R4)     EXECUTED MOVE MESSAGE TO BUFFER  27340027
         CNOP      2,4                 FOR PREFACE OF WORD              27360027
         DC        H'0'                PRELUDE TO WORD                  27380027
WORD     DC        F'0'                DECIMAL RESULTS OF CVTBTC        27400027
DWORD    DC        D'0'                WORK AREA FOR CVTBTC             27420027
LENWORD  DC        F'0'                WORK FOR DEBLOCKING              27440027
UT2REML  DC        F'0'                REMAINDER IN CURRENT BLOCK       27460027
STMTCTR  DC        F'0'                STATEMENT COUNTER                27480027
         DC        X'03'               BEGIN MESSAGE ERCTM              27500027
ERCTM    DC        C' '                ERROR COUNT                      27520027
         DC        C'     STATEMENTS FLAGGED IN THIS ASSEMBLY'          27540027
NOERM    EQU       ERCTM+2             NO ERROR MESSAGES POINTER        27560027
CAC      DC        X'03D5D6'           NUMERIC TRIPLE SPACE 'NO'        27580027
RECMESS  DC        C'SOURCE RECORDS'                                    27600027
EOF      DC        4X'7F'              EOF INDICATOR                    27620027
         TITLE     'ASMGMACP LITERALS'                                  27640027
*                                                                     * 27660027
         LTORG                                                          27680027
         DS        CL1                                                  27700027
         TITLE     'ASMGMACP DIAGNOSTIC TABLES AND MESSAGES'            27720027
         DS        0H                                                   27740027
         DC        AL2(E0017-ESTART)   FOR A ZERO                       27760027
PTRTBL   EQU       *                   POINTER TABLE                    27780027
         PRINT     NOGEN                                                27800027
         EPTR      117,ERROR=(36,53,54,113,114,117)  ERROR POINTERS     27820027
ENDTBL   DC        AL2(EFM-ESTART)     MESSAGE NOT DEFINED POINTER      27840027
         EJECT                                                          27860027
ESTART   DS        0H                                                   27880027
         EMSG      001,12,'DUPLICATION FACTOR ERROR'                    27900027
         EMSG      002,12,'RELOCATABLE DUPLICATION FACTOR'              27920027
         EMSG      003,12,'LENGTH ERROR'                                27940027
         EMSG      004,12,'RELOCATABLE LENGTH'                          27960027
         EMSG      005,08,'S-TYPE CONSTANT IN LITERAL'                  27980027
         EMSG      006,12,'INVALID ORIGIN'                              28000027
         EMSG      007,12,'LOCATION COUNTER ERROR'                      28020027
         EMSG      008,08,'INVALID DISPLACEMENT'                        28040027
         EMSG      009,12,'MISSING OPERAND'                             28060027
         EMSG      010,08,'INCORRECT SPECIFICATION OF REGISTER OR MASK' 28080027
         EMSG      011,08,'SCALE MODIFIER ERROR'                        28100027
         EMSG      012,08,'RELOCATABLE SCALE MODIFIER'                  28120027
         EMSG      013,08,'EXPONENT MODIFIER ERROR'                     28140027
         EMSG      014,08,'RELOCATABLE EXPONENT MODIFIER'               28160027
         EMSG      015,08,'INVALID LITERAL USAGE'                       28180027
         EMSG      016,08,'INVALID NAME'                                28200027
         EMSG      017,08,'DATA ITEM TOO LARGE'                         28220027
         EMSG      018,08,'INVALID SYMBOL'                              28240027
         EMSG      019,08,'EXTERNAL SYMBOL ERROR'                       28260027
         EMSG      020,08,'INVALID IMMEDIATE FIELD'                     28280027
         EMSG      021,08,'SYMBOL NOT PREVIOUSLY DEFINED'               28300027
         EMSG      022,12,'ESD TABLE OVERFLOW'                          28320027
         EMSG      023,08,'PREVIOUSLY DEFINED NAME'                     28340027
         EMSG      024,08,'UNDEFINED SYMBOL'                            28360027
         EMSG      025,08,'RELOCATABILITY ERROR'                        28380027
         EMSG      026,12,'TOO MANY LEVELS OF PARENTHESES'              28400027
         EMSG      027,12,'TOO MANY TERMS'                              28420027
         EMSG      028,04,'REGISTER NOT USED'                           28440027
         EMSG      029,08,'CCW ERROR'                                   28460027
         EMSG      030,12,'INVALID CNOP'                                28480027
         EMSG      031,08,'UNKNOWN TYPE'                                28500027
         EMSG      032,08,'OP-CODE NOT ALLOWED TO BE GENERATED'         28520027
         EMSG      033,04,'ALIGNMENT ERROR'                             28540027
         EMSG      034,08,'INVALID OP-CODE'                             28560027
         EMSG      035,08,'ADDRESSABILITY ERROR'                        28580027
         EMSG      036,16,'ASSEMBLER ERROR'                             28600027
         EMSG      037,00,'MNOTE STATEMENT'                             28620027
         EMSG      038,08,'ENTRY ERROR'                                 28640027
         EMSG      039,12,'INVALID DELIMITER'                           28660027
         EMSG      040,12,'STATEMENT IS TOO LONG'                       28680027
         EMSG      041,08,'UNDECLARED VARIABLE SYMBOL'                  28700027
         EMSG      042,08,'SINGLE TERM LOGICAL EXPRESSION IS NOT A SETB*28720027
                SYMBOL'                                                 28740027
         EMSG      043,08,'SET SYMBOL PREVIOUSLY DEFINED'               28760027
         EMSG   044,08,'SET SYMBOL USAGE INCONSISTENT WITH DECLARATION' 28780027
         EMSG      045,08,'ILLEGAL SYMBOLIC PARAMETER'                  28800027
         EMSG      046,04,'AT LEAST ONE RELOCATABLE Y-TYPE CONSTANT IN *28820027
               ASSEMBLY'                                                28840027
         EMSG      047,12,'SEQUENCE SYMBOL PREVIOUSLY DEFINED'          28860027
         EMSG      048,12,'SYMBOLIC PARAMETER PREVIOUSLY DEFINED OR SYS*28880027
               TEM VARIABLE SYMBOL DECLARED AS SYMBOLIC PARAMETER'      28900027
         EMSG      049,12,'VARIABLE SYMBOL MATCHES A PARAMETER'         28920027
         EMSG      050,08,'INCONSISTENT GLOBAL DECLARATIONS'            28940027
         EMSG      051,12,'MACRO DEFINITION PREVIOUSLY DEFINED'         28960027
         EMSG      052,08,'NAME FIELD CONTAINS ILLEGAL SET SYMBOL'      28980027
         EMSG      053,16,'ASSEMBLER ERROR'                             29000027
         EMSG      054,16,'ASSEMBLER ERROR'                             29020027
         EMSG      055,08,'INVALID EXECUTE CARD PARAMETER(S)'           29040027
         EMSG      056,08,'ARITHMETIC OVERFLOW'                         29060027
         EMSG      057,08,'SUBSCRIPT NOT WITHIN DIMENSIONS'             29080027
         EMSG      058,04,'RE-ENTRANCY VIOLATION'                       29100027
         EMSG      059,12,'UNDEFINED SEQUENCE SYMBOL'                   29120027
         EMSG      060,08,'ILLEGAL ATTRIBUTE NOTATION'                  29140027
         EMSG      061,12,'ACTR COUNTER EXCEEDED'                       29160027
         EMSG     062,08,'GENERATED STRING GREATER THAN 255 CHARACTERS' 29180027
         EMSG      063,08,'EXPRESSION 1 OF SUBSTRING IS ZERO OR MINUS'  29200027
         EMSG      064,08,'EXPRESSION 2 OF SUBSTRING IS ZERO OR MINUS'  29220027
         EMSG 065,08,'INVALID OR ILLEGAL TERM IN ARITHMETIC EXPRESSION' 29240027
         EMSG      066,12,'UNDEFINED OR DUPLICATE KEYWORD OPERAND'      29260027
         EMSG      067,08,'EXPRESSION 1 OF SUBSTRING GREATER THAN LENGT*29280027
               H OF CHARACTER EXPRESSION'                               29300027
         EMSG      068,08,'ILLEGAL LENGTH SPECIFICATION IN GBL OR LCL S*29320027
               TATEMENT'                                                29340027
         EMSG     069,08,'VALUE OF EXPRESSION 2 OF SUBSTRING TOO LARGE' 29360027
         EMSG      070,12,'FLOATING POINT CHARACTERISTIC OUT OF RANGE'  29380027
         EMSG      071,08,'ILLEGAL OCCURRENCE OF LCL, GBL, OR ACTR STAT*29400027
               EMENT'                                                   29420027
         EMSG      072,04,'ILLEGAL RANGE ON ISEQ STATEMENT'             29440027
         EMSG      073,08,'ILLEGAL NAME FIELD'                          29460027
         EMSG   074,08,'ILLEGAL STATEMENT IN COPY CODE OR SYSTEM MACRO' 29480027
         EMSG  075,08,'ILLEGAL STATEMENT OUTSIDE OF A MACRO DEFINITION' 29500027
         EMSG      076,12,'SEQUENCE ERROR'                              29520027
         EMSG      077,08,'ILLEGAL CONTINUATION CARD'                   29540027
         EMSG      078,00,'FOLLOWING ERRORS OCCURED WHILE EDITING LIBRA*29560027
               RY MACROS'                                               29580027
         EMSG      079,08,'ILLEGAL STATEMENT IN MACRO DEFINITION'       29600027
         EMSG      080,08,'ILLEGAL START CARD'                          29620027
         EMSG      081,08,'ILLEGAL FORMAT IN GBL OR LCL STATEMENTS'     29640027
         EMSG      082,08,'ILLEGAL DIMENSION SPECIFICATION IN GBL OR LC*29660027
               L STATEMENT'                                             29680027
         EMSG   083,08,'SET STATEMENT NAME FIELD NOT A VARIABLE SYMBOL' 29700027
         EMSG      084,08,'ILLEGAL OPERAND FIELD FORMAT'                29720027
         EMSG      085,08,'INVALID SYNTAX IN EXPRESSION'                29740027
         EMSG      086,08,'ILLEGAL USAGE OF SYSTEM VARIABLE SYMBOL'     29760027
         EMSG      087,08,'NO ENDING APOSTROPHE'                        29780027
         EMSG      088,12,'UNDEFINED OPERATION CODE'                    29800027
         EMSG      089,08,'INVALID ATTRIBUTE NOTATION'                  29820027
         EMSG      090,08,'INVALID SUBSCRIPT'                           29840027
         EMSG      091,08,'INVALID SELF-DEFINING TERM'                  29860027
         EMSG      092,08,'INVALID FORMAT FOR VARIABLE SYMBOL'          29880027
         EMSG      093,08,'UNBALANCED PARENTHESES OR EXCESSIVE LEFT PAR*29900027
               ENTHESES'                                                29920027
         EMSG      094,12,'INVALID OR ILLEGAL NAME OR OPERATION IN PROT*29940027
               OTYPE STATEMENT'                                         29960027
         EMSG      095,08,'ENTRY TABLE OVERFLOW'                        29980027
         EMSG      096,12,'MACRO INSTRUCTION OR PROTOTYPE OPERAND EXCEE*30000027
               DS 255 CHARACTERS IN LENGTH'                             30020027
         EMSG      097,12,'INVALID FORMAT IN MACRO INSTRUCTION OPERAND *30040027
               OR PROTOTYPE PARAMETER'                                  30060027
         EMSG      098,12,'EXCESSIVE NUMBER OF OPERANDS OR PARAMETERS'  30080027
         EMSG      099,12,'POSITIONAL MACRO INSTRUCTION OPERAND, PROTOT*30100027
               YPE PARAMETER OR EXTRA COMMA FOLLOWS KEYWORD'            30120027
         EMSG      100,08,'STATEMENT COMPLEXITY EXCEEDED'               30140027
         EMSG      101,12,'EOD ON SYSIN'                                30160027
         EMSG      102,16,'INVALID OR ILLEGAL ICTL'                     30180027
         EMSG      103,12,'ILLEGAL NAME IN OPERAND FIELD OF COPY CARD'  30200027
         EMSG      104,12,'COPY CODE NOT FOUND'                         30220027
         EMSG      105,12,'EOD ON SYSTEM MACRO LIBRARY'                 30240027
         EMSG      106,08,'NOT NAME OF DSECT OR DXD'                    30260027
         EMSG      107,08,'INVALID OPERAND'                             30280027
         EMSG      108,08,'INVALID EQU ARGUMENT'                        30300027
         EMSG      109,08,'PRECISION LOST'                              30320027
         EMSG      110,08,'EXPRESSION VALUE TOO LARGE'                  30340027
         EMSG      111,08,'INVALID PRINT, PUSH OR POP OPERAND'          30360027
         EMSG      112,08,'INVALID PUSH/POP REQUEST'                    30380027
         EMSG      113,16,'ASSEMBLER ERROR'                             30400027
         EMSG      114,16,'ASSEMBLER ERROR'                             30420027
         EMSG      115,*-*,'UPDATE CONDITION CODE EXCEEDED'             30440027
         EMSG      116,08,'ILLEGAL OPSYN'                               30460027
         EMSG      117,16,'ASSEMBLER ERROR'                             30480027
EFM      DC        AL1(19,04),C'MESSAGE NOT DEFINED'                    30500027
         PRINT     ON                                                   30520027
ENDM     DC        AL1(0)                                               30540027
         SPACE     3                                                    30560027
         END       ASMGMACP                                             30580027
./ ADD NAME=ASMGRTA
RTA      TITLE     'ASMG     ASSEMBLY PHASES ROOT SEGMENT'              00020021
         ISEQ  73,78                                                    00040021
         COPY      ASMGSET                                              00060020
ASMGRTA  START                                                          00080020
*                                                                     * 00100020
*TITLE- 'ASMGRTA ' ... ROOT SEGMENT ASSEMBLER PHASE                   * 00120020
*FUNCTION/OPERATION-                                                  * 00140020
*   SETS UP PARTS OF THE ASSEMBLER CONTROL TABLE AND SETS UP THE      * 00160020
*   REGISTER ACT FOR ALL OF PHASE F7, F8, AND FPP. CONTAINS THE       * 00180020
*   ASSEMBLER CONTROL TABLE AND THE TRANSLATE TABLE.                    00200020
*ENTRY POINTS-                                                        * 00220020
*  ASMGRTA ... ROOT SEGMENT FOR PHASES F7, F8, AND FPP                * 00240020
*        CALLING SEQUENCE FROM ASMGF3                                 * 00260025
*          XCTL   ,DE=(R9)     I.E. EP=ASMGRTA   CALL ASSEMBLER PHASES* 00280025
*EXTERNAL ROUTINES-                                                   * 00300020
*  ASMGRTA LINKS TO ASSEMBLER PHASES. CONTROL IN RTA IS AS SHOWN...   * 00320020
*       ASMGRTA LINKS  TO ASMGF7                                      * 00340020
*       ASMGF7  BRANCH TO ASMGFI                                      * 00360020
*       ASMGFI  XCTL   TO ASMGF8                                      * 00380020
*       ASMGF8  XCTL   TO ASMGFPP                                     * 00400020
*       ASMGFPP BRANCH TO ASMGFD                                      * 00420020
*       ASMGFD  BRANCH TO ASMGFEX IF EXECUTION OPTION                 * 00440020
*       ASMGFEX RETURN TO ASMGFD                                      * 00460020
*       ASMGFD  RETURN TO ASMGRTA                                     * 00480020
*       ASMGRTA RETURN TO ASMGASM                                     * 00500022
*EXITS- NORMAL                                                        * 00520020
*   RETURNS TO ASMGASM                                                * 00540022
*TABLES/WORKAREAS-                                                    * 00560020
*   ACT        ASSEMBLER CONTROL TABLE                                * 00580020
*   TRSLTB     TRANSLATE AND TEST TABLE                               * 00600020
*   ACT1       STORAGE FOR FUNCTION LINKAGE ALGORITHIMS               * 00620020
*   ACT2                   FUNCTION BASE/ENTRY ADDRESSES              * 00640020
*   ACT3                   SUBROUTINE BASE/ENTRY ADDRESSES            * 00660020
*   ACT4                   POINTERS TO COMMON DATA AREAS              * 00680020
*   ACT5                   CENTRAL TABLES AND ITEMS                   * 00700020
*   ACT6                   TEXT RECORD WORK AREA                      * 00720020
*                                                                     * 00740020
         EJECT                                                          00760020
         FDIMEN                                                         00780020
         SPACE 2                                                        00800026
*                                                                       00820026
*        REGISTER PARAMETERS PASSED FROM ASMGF3                         00840026
*                                                                       00860026
*   REGISTER 2 CONTAINS TEXT BLOCKSIZE ON UTILITY                       00880026
*   REGISTER 3 POINTS TO LIST1 AREA IN ASMGASM                          00900026
*   REGISTER 13 POINTS TO SAVE AREA IN ASMGASM                          00920026
*   REGISTER 14 CONTAINS ADDRESS OF RETURN TO ASMGASM                   00940026
*                                                                       00960026
BASE2    EQU   7                       TEMPORARY WORK BASE REGISTER     00980026
         EJECT                                                          01000020
         BALR  BASE2,0                  SET UP BASE                     01020020
         USING *,BASE2                                                  01040020
         ST        13,LIKSAV           SAVE ADDRESS OF SAVE AREA IN ASM 01060023
*./      DELETE    SEQ1=01080020,SEQ2=01080020                          01080023
         ST        14,RETSAV            SAVE RETURN ADDRESS             01100020
         MESSAGE   'PHASE RTA ENTERED'                                  01120020
         LA    BASE2,ACTABL             LOAD UP ACT                     01140020
         USING ACTABL,BASE2             USE IT AS BASE                  01160020
CTINIT0  BAL   SP1,CTINIT               CALL CTIN INITIALIZATION        01180026
         USING *,SP1                    BASE SET BY ABOVE BAL           01200026
*                                                                       01210026
*        NOW LINK TO ASMGF7, SRR ALREADY SET BY CTINIT                  01220026
         LINK  DE=(SRR),MF=(E,(1))      CALL ASMGF7 IN ASMGF7I          01230025
         DROP  SP1                                                      01232026
         SPACE 2                                                        01234026
         BALR      BASE2,0             CAME FROM FD IN ASMGFPP          01240025
         USING     *,BASE2             SET UP A BASE                    01250025
         L         13,LIKSAV           LOAD SAVE AREA ADDRESS           01260025
         L         14,RETSAV           AND THE RETURN ADDRESS           01270025
         LTR       SP1,SP1             IS R10 ZERO .Q                   01280025
         BNZ       F2XCTL              NO, THEN INVOKE F2 AGAIN         01290025
         BR        14                  RETURN TO ASMGASM                01300025
*                                                                       01310025
*                                      R9 IS ADDRESS OF LIST1 IN ASM    01320025
*                                      R2 POINTS TO F2 IN BLDL TABLE    01330025
F2XCTL   XCTL      DE=(GR2),MF=(E,(1)) GO TO F1 IN ASMGF2               01340025
         SPACE     3                                                    01350025
RETSAV   DC        F'0'                ADDRESS OF RETURN POINT IN ASM   01360023
LIKSAV   DC        F'0'                ADDRESS OF SAVE AREA IN ASM      01380023
         SPACE 2                                                        01400026
         DROP  BASE2                                                    01420020
         EJECT                                                          01440020
*                                       ******************************* 01460020
*                                       * TRANSLATE AND TEST TABLE    * 01480020
*                                       ******************************* 01500020
TRSLTB   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                01-16 01520020
         DC    X'C7C8C9D1D2D3D4D5D6D7D8D9E2E3E4E5'                02-16 01540020
         DC    X'E6E7E8E95B7B7C4E605C616B7E504B4D'                03-16 01560020
         DC    X'5D7D40333435363738393A3B3C3D3E3F'                04-16 01580020
         DC    X'324142434445464748494A2E4C2F274F'                05-16 01600020
         DC    X'2D5152535455565758595A2429305E5F'                06-16 01620020
         DC    X'282A62636465666768696A2B6C6D6E6F'                07-16 01640020
         DC    X'707172737475767778797A2526312C7F'                08-16 01660020
         DC    X'808182838485868788898A8B8C8D8E8F'                09-16 01680020
         DC    X'909192939495969798999A9B9C9D9E9F'                10-16 01700020
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'                11-16 01720020
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'                12-16 01740020
         DC    X'C00A0B0C0D0E0F101112CACBCCCDCECF'                13-16 01760020
         DC    X'D0131415161718191A1BDADBDCDDDEDF'                14-16 01780020
         DC    X'E0E11C1D1E1F20212223EAEBECEDEEEF'                15-16 01800020
         DC    X'00010203040506070809FAFBFCFDFEFF'                16-16 01820020
         EJECT                                                          01840020
ACTABL   DS    0F                       BEGINNING OF ASSEMBLER CONTROL  01860020
*                                       TABLE                           01880020
******** CT1 - MLC/FUNCTIONAL ROUTINE LINKAGE ALGORITHIMS ************* 01900020
*                                                                       01920020
         USING ACTABL,ACT               SET UP BASE                     01940020
         ORG   ACTABL                   PUT IN CORRECT SPOT             01960020
ACT1     DS    (CT1C)C                                                  01980020
*                                                                       02000020
         ORG   ACT1+0                   CTLNK1                          02020020
         STM   GRA,GRD,SAVER            SAVE                            02040020
         BR    FRB                      GO TO FUNCTION                  02060020
*                                                                       02080020
         ORG   ACT1+CTLNK2              CTLNK2                          02100020
         STM   GRA,GRD,SAVER            SAVE                            02120020
         L     FRB,CBRNDA(ACT)          GET THE BASE                    02140020
         BR    GRX                      GO TO THE FUNCTION              02160020
*                                                                       02180020
         ORG   ACT1+CTRTRN              CTRTRN                          02200020
         LM    GRA,GRD,SAVER            RESTORE THE SAVED REGISTERS     02220020
         BR    CRR                      RETURN                          02240020
*                                                                       02260020
         ORG   ACT1+CTSAVE              CTSAVE                          02280020
SAVER    DS    4F                       SAVE AREA FOR MLC/FUNCTION      02300020
         DROP  ACT                                                      02320020
*                                                                       02340020
*                                                                       02360020
******** CT2 - FUNCTIONAL ROUTINES BASE/ENTRY ADDRESSES *************** 02380020
*                                                                       02400020
         ORG   ACT1+CT2                                                 02420020
ACT2     DS    (CT2C)A                  SET ASIDE AREA FOR FUNCTION ADD 02440020
*                                                                       02460020
*                                                                       02480020
******** CT3 - COMMON SUBROUTINES BASE/ENTRY ADDRESS                    02500020
*                                                                       02520020
         ORG   ACT1+CT3                                                 02540020
ACT3     DS    (CT3C)A                  SET ASIDE AREA FOR SUBROUTINES  02560020
*                                                                       02580020
*                                                                       02600020
******** CT4 - POINTERS TO COMMON DATA AREAS ************************** 02620020
*                                                                       02640020
         ORG   ACT1+CT4                                                 02660020
ACT4     DS    (CT4C)A                  SET ASIDE AREA FOR COMMON DATA  02680020
*                                                                       02700020
*                                                                       02720020
******** CT5 - CENTRAL TABLES AND ITEMS ******************************* 02740020
*                                                                       02760020
         ORG   ACT1+CT5                                                 02780020
ACT5     DC    (CT5C)X'0'               SET ASIDE AREA FOR TABLES       02800020
*                                                                       02820020
*                                                                       02840020
******** CT6 - TEXT RECORD WORK AREA ********************************** 02860020
*                                                                       02880020
         ORG   ACT1+CT6                                                 02900020
ACT6     DS    (CT6C)C                  SET ASIDE AREA FOR WORK AREA    02920020
         EJECT                                                          02940020
******** CT2 INITIAL CONDITIONS *************************************** 02960020
*                                                                       02980020
         SPACE 5                                                        03000020
******** CT3 INITIAL CONDITIONS *************************************** 03020020
*                                                                       03040020
         SPACE 5                                                        03060020
******** CT4 INITIAL CONDITIONS *************************************** 03080020
*                                                                       03100020
         ORG   ACT1+CTRTBP             PUT IN ADDRESS OF TRT TABLE      03120020
         DC    A(TRSLTB)                                                03140020
         ORG       ACT1+CTLBTP                                          03160020
         DC        F'0'                                                 03180020
         SPACE 5                                                        03200020
******** CT5 INITIAL CONDITIONS *************************************** 03220020
*                                                                       03240020
         ORG   ACTABL+CTWORK            OVERLAY SCRATCH PAD AREA        03260020
         USING ACTABL,BASE2                                             03280020
******** CTINIT - F/7I8PP INITIALIZATION ROUTINE (ONCE ONLY CODE) ***** 03300020
*                                                                       03320020
*                                                                       03340020
*                                                                       03360020
* SAVE ENTRANCE PARAMETERS (SET BY F3) IN F7,F8,FPP CONTROL TABLE       03380020
*                                                                       03400020
CTINIT   DS    0H                                                       03420026
         LR    SRR,ACT                 TRANSFER ADDRESS OF LIST1 IN ASM 03440026
         LR    ACT,BASE2               TRANSFER ADDRESS OF COMMON TABLE 03450026
         ST    SRR,ADLIST1(,ACT)       SAVE ADDRESS OF LIST1 IN ASM     03460026
         STH   GR2,CTXLEN(,ACT)        SAVE TEXT BLOCK LENGTH           03480026
*                                                                       03520026
         MVC   CTFUPLI(4,ACT),L1PBYT1(SRR)  MOVE PARM BITS TO TABLE     03540026
         MVC   CTPGLNCT(1,ACT),L1LINECT+1(SRR)  LINES PER PAGE          03550026
         MVC   LSTDCB(8,ACT),L1DCBADS+L1SPRINT(SRR)  SYSPRINT           03560026
*                                             AND SYSPUNCH DCB ADDRS    03620026
         MVC   GODCB(4,ACT),L1DCBADS+L1SLIN(SRR)  SYSLIN DCB ADDRESS    03640026
         MVC   CTDATE(9,ACT),L1PRDATE(SRR)  GET DATE FROM ASM           03660026
         MVC   BUFFPT(4,ACT),L1BUFADR(SRR)  ADDRESS OF BUFF             03680026
*                                                                       03700026
         LA    GR2,ACT6                GET TEXT RECORD WORK AREA        03720026
         ST    GR2,CTXWAP(,ACT)        PUT IN TEXT WORK AREA POINTER    03740026
         ST    GR2,CTLDCP(,ACT)        AND LITERAL DC WORK AREA POINTER 03760026
         LA    SRR,L1BLDL+4*L1LENBL(,SRR)  ASMGF7 IN BLDL TABLE         03770027
*                                                                       03780026
         DROP  BASE2                                                    03800026
         BR    SP1                     RETURN TO CALLER                 03820026
         SPACE 5                                                        03840026
         ORG   ACT1+CHAINPT             CONTINUE INITIALIZATION IN CT5  03860020
         DC        A(ACT1+STCHAIN)     LAST ST ENTRY ON CHAIN           03880020
         ORG   ACT1+CTNDID                                              03900020
         DC    H'255'                   NEXT DSECT ID                   03920020
         ORG   ACT1+CTITLE                                              03940020
         DC    CL8' '                   FIRST TITLE LABEL               03960027
         ORG       ACT1+CFREEP                                          03980020
         DC       A(ESDSEG+FASH)                                        04000020
         ORG       ACT1+CSGCTR                                          04020020
         DC        H'16'                                                04040020
         ORG       ACT1+CPRIME                                          04060020
         DC        A(PRIME)                                             04080020
PRIME    EQU       307                                                  04100020
LASH     EQU       31                  LITERAL HASH (28) + OPSYN PTR    04120023
HASH     EQU       3*PRIME+LASH        SIZE OF HASH TABLE               04140020
FASH     EQU       HASH/8*8+8          HASH ROUNDED TO D LENGTH         04160020
ESDSEG   EQU       256                 ESD RESIDENT SEGMENT POINTR LGTH 04180020
         ORG       ASMGRTA+X'800'      ROUND UP TO TWO K                04190027
         END       ASMGRTA                                              04200020
./ ADD NAME=ASMGUP
UP       TITLE     'ASMGUP  --  UPDATE INPUT INTERFACE'                 00020025
         ISEQ      73,78                                                00040025
*                                                                       00060025
*        THIS DECK PERFORMS THE UPDATE INPUT FUNCTIONS FOR ASMG.        00080025
*        IT IS ONLY LOADED AND USED IF PARM=UPDATE IS SPECIFIED.        00100025
*                                                                       00120025
*        EACH TIME THE ASSEMBLER (OR THE USER'S PROGRAM IF EXECUTE)     00140025
*        ATTEMPTS TO READ A CARD ON SYSIN, THEN THIS ROUTINE IS         00160025
*        INVOKED INSTEAD.                                               00180025
*                                                                       00200025
*        THIS ROUTINE WILL READ RECORDS FROM SYSIN AND/OR SYSUP         00220025
*        TO DETERMINE WHICH RECORD SHOULD BE PASSED TO THE ASSEMBLER    00240025
*        NEXT.                                                          00260025
*                                                                       00280025
*        AFTER MOVING THE RECORD TO THE BUFFER SPECIFIED BY THE USER,   00300025
*        THE REGISTERS ARE SAVED SUCH THAT THE NEXT TIME THE ROUTINE    00320025
*        IS CALLED, IT WILL REMEMBER WHERE IT WAS AND WHAT IT WAS       00340025
*        DOING.                                                         00360025
*                                                                       00380025
*        USAGE OF FILES --                                              00400025
*                                                                       00420025
*    SYSIN   - THIS CONTAINS THE OLD MASTER DATA SET.                   00440025
*    SYSUP   - THIS CONTAINS THE UPDATE DECK.                           00460025
*    SYSOUT  - THIS WILL CONTAIN THE NEW MASTER DATA SET.  IT IS        00480025
*              AN IMAGINARY FILE, BEING IN FACT THE ASSEMBLER.          00500025
*    SYSPRINT- IF OPEN, THIS WILL CONTAIN THE UPDATE LOG IF             00520025
*              REQUESTED, PLUS ANY UPDATE DIAGNOSTICS.                  00540025
*    SYSTERM - IF OPEN, THIS WILL CONTAIN ANY UPDATE DIAGNOSTICS.       00560025
*                                                                       00580025
*    NOTE    - AT LEAST ONE OF SYSPRINT OR SYSTERM MUST BE OPEN.        00600025
*                                                                       00620025
         COPY      ASMGSET                                              00640026
*        END OF SETTING GLOBAL SWITCHES                                 00660026
         AIF       (NOT &HRDCOPY).NOJDESC                               00680025
*                                                                       00700025
*        A HARD COPY OF THE MERGED SYSOUT FILE MAY BE OBTAINED          00720025
*        BY TURNING ON THE &HRDCOPY VARIABLE AND REASSEMBLING           00740025
*        ASMGUP.                                                        00760025
*                                                                       00780025
*        THIS IS DONE BY POINTING THE SYSPUNCH DD CARD TO THE           00800025
*        DESIRED OUTPUT FILE AND SPECIFYING 'UNUSED' IN THE             00820025
*        PARAMETER LIST.  NOTE THAT THIS UNDOCUMENTED FEATURE           00840025
*        IS INCOMPATIBLE WITH THE 'DECK' OPTION AND THAT SYSPUNCH       00860025
*        MUST OPEN SUCCESSFULLY.  A DIAGNOSTIC MESSAGE IS LISTED        00880025
*        IF EITHER CONDITION FAILS.                                     00900025
*                                                                       00920025
.NOJDESC ANOP                                                           00940025
         EJECT                                                          00960025
*                                                                       00980025
*        THIS IS THE ENTRY POINT FOR ASMGUP.                            01000025
*        IS SIMPLY RESTORES THE REGISTERS AS SAVED BY THE WROUT         01020025
*        ROUTINE, AND THEN SIMULATES A RETURN FROM WROUT TO             01040025
*        WHOEVER CALLED IT.                                             01060025
*                                                                       01080025
ASMGUP   START                                                          01100025
         USING     *,RF                WE HAVE TO START WITH SOMETHING  01120025
         STM       R0,RF,UPSAV1        SAVE USER'S REGISTERS            01140025
         LM        R0,RF,UPSAV2        RESTORE MY REGISTERS             01160025
         BR        RE                  RETURN TO WROUT'S CALLER         01180025
         DROP      RF                  FORGET R15 NOW                   01200025
         USING     ASMGUP,RC           NOW WE USE R12                   01220025
         SPACE     4                                                    01260025
*                                                                       01280025
*        THIS ROUTINE IS ENTERED THE FIRST TIME THE ASSEMBLER           01300025
*        ATTEMPTS TO READ A RECORD.                                     01320025
*        IT DOES THE NECESSARY INITIALIZATION.                          01340025
*                                                                       01360025
*        INPUT   R9   ADDRESS OF LIST1 IN ASMGASM (1ST TIME ONLY).      01380025
*                R8   ADDRESS OF EXLST IN ASMGF1  (1ST TIME ONLY).      01400025
*                          NOT NORMALLY USED                            01420025
*                R0   ADDRESS OF BUFFER TO READ RECORD INTO.            01440025
*                                                                       01460025
UPINIT   L         R9,UPSAV1+36        GET ADDRESS OF LIST1             01480025
         L         R1,L1DCBADS+L1SUP(,R9)  ADDRESS OF SYSUP DCB         01500026
         MVC       DCBEODAD+1(3,R1),=AL3(RDUPEOF)  SET SYSUP EODAD      01520026
         MVC       PRDATE(9),L1PRDATE(R9)  MOVE DATE TO HEADER LINE     01540025
         AIF       (NOT &HRDCOPY).NOJINIT                               01560025
         TM    L1PBYT3(R9),X'01'       IS UNUSED BIT ON .Q              01580026
         BZ    ARNDJACQ                NO, BRANCH AROUND                01600025
*                                                                       01620025
*        TEST IF SYSPUNCH ALREADY OPEN                                  01640025
         L     R4,L1DCBADS+L1SPUNCH(,R9)  ADDRESS OF SYSPUNCH DCB       01660026
         TM    DCBOFLGS(R4),X'10'      TEST IF SYSPUNCH OPEN            01680025
         BZ    OPENJACQ                NO, WELL OPEN IT NOW             01700025
*                                                                       01720025
*        SYSPUNCH ALREADY OPEN                                          01740025
         MVC   $LIT0345+3(8),L1DDNAM+2*L1SPUNCH(R9)  SYSPUNCH DDNAME    01800026
         LA    R3,$LIT0345             ERROR MESSAGE                    01820025
         SR    R4,R4                   NO RECORD IN ERROR               01840025
         BAL   RE,ERROR                GO PRINT OUT ERROR               01860025
         B     ARNDJACQ                AND CONTINUE PROCESSING          01880025
         UPEMSG 345,12,'SYSPUNCH OPEN FOR ''DECK'''                     01900025
*                                                                       01920025
*        OPEN SYSPUNCH FOR OUTPUT OF MERGED DECK                        01940025
OPENJACQ DS    0H                                                       01960026
         STM   R0,RF,UPSAV2            SAVE MY REGISTERS                01980026
         LR    R2,RC                   REMEMBER MY BASE                 02000026
         DROP  RC                      FORGET THE OLD                   02020026
         USING ASMGUP,R2               AND USE THE NEW                  02040026
         LM    R5,RF,UPSAV1+20         RESTORE SOME OF CALLER'S REGS    02060026
         LA        RC,4095(RB)         RECOVER 2ND BASE REG       V7A48 02062028
         LA        RC,1(,RC)           FOR OPEN EXIT IN ASMGF1    V7A48 02064028
         OPEN  ((R4),(OUTPUT,REREAD))  OPEN SYSPUNCH                    02070026
         LM    R0,RF,UPSAV2            RESTORE MY OLD REGISTERS         02080026
         DROP  R2                      FORGET THE TEMPORARY             02090026
         USING ASMGUP,RC               AND REVERT TO THE OLD            02100026
         TM    DCBOFLGS(R4),X'10'      TEST IF SYSPUNCH OPEN NOW        02120025
         BO    SETJACQ                 YES, GO SET SWITCH               02140025
*                                                                       02160025
*        SYSPUNCH OPEN FAILED                                           02180025
         MVC   $LIT0200+18(8),L1DDNAM+2*L1SPUNCH(R9)  SYSPUNCH DDNAME   02240026
         LA    R3,$LIT0200             ERROR MESSAGE                    02260025
         SR    R4,R4                   NO RECORD IN ERROR               02280025
         BAL   RE,ERROR                GO PRINT OUT ERROR               02300025
         B     ARNDJACQ                AND CONTINUE PROCESSING          02320025
         UPEMSG 200,08,'UNABLE TO OPEN SYSPUNCH'                        02340025
*                                                                       02360025
*        SET SYSPUNCH WRITEOUT SWITCH                                   02380025
SETJACQ  NI    SWITJACQ+1,X'0F'        ALTER A BRANCH INSTRUCTION       02400025
*                                                                       02420025
*        THAT'S ALL TO INITIALIZE                                       02440025
ARNDJACQ DS    0H                      JUST A LABEL                     02460025
.NOJINIT ANOP                                                           02480025
         B         UPIN                START BY READING SYSIN           02500025
         EJECT                                                          02520025
*        THIS IS THE MAIN LOOP OF THE ASMGUP ROUTINE.                   02540025
*        IT READS CARDS FROM SYSUP AND SYSIN WHEN NECESSARY.            02560025
*        IT IDENTIFIES THE TYPE OF CARD COMING FROM SYSUP, AND          02580025
*        ACTS ACCORDINGLY.                                              02600025
*                                                                       02620025
*        READ A RECORD FROM SYSIN                                       02640025
UPIN     BAL       RE,RDIN             READ A RECORD ON SYSIN           02660025
*                                                                       02680025
*        READ A RECORD FROM SYSUP                                       02700025
UPUP     BAL       RE,RDUP             READ A RECORD ON SYSUP           02720025
         CLC       UTUPREC(2),=C'./'   TEST IF A CONTROL CARD           02740025
         BE        UPCC                BRANCH IF IT IS                  02760025
*.* DAN SKOMSKY 09/22/2007 ALLOW EXTENDED UPDATE FORMAT       DS092207  02761025
         CLC       UTUPREC(2),=C'.\'   TEST IF A CONTROL CARD DS092207  02763025
         BNE       *+4+4+4 ---------+  NO, JUMP OVER FORCE    DS092207  02765025
         MVI       UTUPREC+1,C'/'   |  FORCE STD FORMAT       DS092207  02767025
         B         UPCC             |  AND CONTINUE AS UPDATE DS092207  02769025
*                                <--+                                   02780025
*        TEST IF UPDATE CARD HAS A SEQUENCE NUMBER                      02800025
         CLC       UTUPSEQ(8),=CL8' '  TEST FOR A BLANK SEQUENCE        02820025
         BNE       UPDATA              BRANCH IF NOT BLANK              02840025
         AP        DSSNEW1,DSSINCR     GET NEXT AUTONUMBER        V7A20 02841028
         BZ        DSSERROR            NOT IN EFFECT, BLANK BAD   V7A20 02842028
         UNPK      UTUPSEQ(8),DSSNEW1(5)  INTO THE CARD           V7A20 02843028
         OI        UTUPSEQ+7,X'F0'     FIX LAST COLUMN UP         V7A20 02844028
         B         UPDATA              AND GIVE THE CARD TO ASMG  V7A20 02845028
DSSERROR DS        0H                  AUTO-NUMBER DEAD, BAD CARD V7A20 02846028
         UPEMSG    321                 ERROR MESSAGE              V7A48 02850028
         MVC       9(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME      V7A48 02855028
         LA        R4,UTUPREC          RECORD IN ERROR                  02940025
         BAL       RE,ERROR            PROCESS THE ERROR                02960025
         B         UPUP                GET THE NEXT SYSUP CARD          02980025
*                                                                       03000025
*        SYSUP CARD WITH A VALID SEQUENCE NUMBER                        03020025
UPDATA   LA        R1,UTUPSEQ          SEQUENCE NUMBER OF SYSUP         03040025
         BAL       RE,COPYUT           COPY SYSIN TILL SEQUENCE FOUND   03060025
         LA        RA,UTUPREC          WRITE OUT SYSUP NOW              03080025
         BAL       RE,WROUT            WRITE IT OUT                     03100025
         LTR       RF,RF               TEST IF SEQUENCE ERROR           03120025
         BNZ       UPUP                GET NEXT CARD IF ERROR           03140025
         NI        ERSW,X'FF'-(ERSWER+ERSWFL)  CLEAR ERROR SWITCH       03160025
*.* DAN SKOMSKY 09/22/2007 USE EQUATE TO DEFINE SEQUENCE LEN  DS092207  03162025
*.*      CLC       UTINSEQ(8),UTUPSEQ  TEST IF INSERT OR REPL DS092207  03180025
         CLC       UTINSEQ(UPSEQLN),UTUPSEQ   TEST IF INSERT  DS092207  03182025
         BE        UPREPL              BRANCH IF REPLACE                03200025
         TM        L1PBYT(R9),X'04'    DON'T LIST IF NOUPLIST           03220026
         BZ        UPUP                GET NEXT SYSUP RECORD            03240025
         UPEMSG    323                 COMMENT TEXT               V7A48 03300028
         LA        R4,UTUPREC          RECORD TO BE PRINTED             03320025
         BAL       RE,ERROR            GO PRINT IT OUT                  03340025
         B         UPUP                GET NEXT SYSUP RECORD            03360025
*                                                                       03380025
UPREPL   TM        L1PBYT(R9),X'04'    DON'T LIST IF NOUPLIST           03400026
         BZ        UPIN                GET TWO MORE RECORDS IF OFF      03420025
         UPEMSG    324                 MESSAGE TEXT               V7A48 03480028
         LA        R4,UTINREC          POINT TO SYSIN RECORD            03500025
         BAL       RE,ERROR            GO PRINT IT                      03520025
         UPEMSG    325                 MESSAGE TEXT               V7A48 03580028
         LA        R4,UTUPREC          POINT TO SYSUP RECORD            03600025
         BAL       RE,ERROR            GO AND PRINT IT                  03620025
         B         UPIN                GET TWO MORE CARDS               03640025
*                                                                       03660025
*        CONTROL CARD READ ON SYSUP                                     03680025
UPCC     LA        R8,UTUPREC+2        POINT TO SYSUP RECORD            03700025
         SP        DSSNEW1,DSSNEW1     CLEAR NEW1                 V7A20 03701028
         MVC       DSSINCR,DSSNEW1     AND CLEAR INCR             V7A20 03702028
UPCCA    CLI       0(R8),C' '          DOES A NAME FIELD EXIST          03720025
         BE        UPCCB               NO, CHECK FOR COMMAND            03740025
         BAL       RE,UPBUMP           BUMP RECORD POINTER              03760025
         B         UPCCA               CHECK AGAIN                      03780025
*                                                                       03800025
*        SEARCH FOR START OF COMMAND FIELD                              03820025
UPCCB    LA        R5,UPBADCOM         ERROR IF BUMP OVERFLOWS          03840025
UPCCC    BAL       RE,UPBUMP           GO ONE PAST FIRST BLANK          03860025
         CLI       0(R8),C' '          DOES A COMMAND START EXIST .Q    03880025
         BE        UPCCC               NOT YET, KEEP GOING              03900025
         CLC       =C'DELETE ',0(R8)   A 'DELETE' CARD .Q               03920025
         BE        UPCCD               YES, GO AND PROCESS IT           03940025
         CLC       =C'DELET ',0(R8)    IEBUPDAT/HASPGEN DELETE .Q V7A22 03942028
         BE        UPCCH               YES, ENTER DELETE CODE     V7A22 03944028
         CLC       =C'ENDUP ',0(R8)    AN 'ENDUP' CARD .Q               03960025
         BE        UPEND               YES, GO AND PROCESS IT           03980025
         CLC       =C'CHANGE ',0(R8)   A 'CHANGE' CARD .Q               04000025
         BE        UPCOM               YES, NOT SUPPORTED               04020025
         CLC       =C'CHNGE ',0(R8)    IEBUPDAT 'CHNGE' CARD?     V7A42 04021028
         BE        UPCOM               YES, NOT SUPPORTED         V7A42 04022028
         CLC       =C'ADD ',0(R8)      AN 'ADD' CARD .Q                 04040025
         BE        UPCOM               YES, NOT SUPPORTED               04060025
         CLC       =C'REPL ',0(R8)     A 'REPL' CARD .Q                 04080025
         BE        UPCOM               YES, NOT SUPPORTED               04100025
         CLC       =C'REPRO ',0(R8)    A 'REPRO' CARD .Q                04120025
         BE        UPCOM               YES, NOT SUPPORTED               04140025
         CLC       =C'NUMBER ',0(R8)   A 'NUMBER' CARD .Q               04160025
         BE        DSSNUM              YES, TRY TO AUTONUMBER     V7A20 04180028
         CLC       =C'LABEL ',0(R8)    A 'LABEL' CARD .Q                04200025
         BE        UPCOM               YES, NOT SUPPORTED               04220025
         CLC       =C'ALIAS ',0(R8)    AN 'ALIAS' CARD .Q               04240025
         BE        UPCOM               YES, NOT SUPPORTED               04260025
         CLI       0(R8),C'*'          A (G) EXTENDED COMMENT .Q  V7A21 04266028
         BNE       UPBADCOM            BRANCH IF NOT              V7A21 04268028
         UPEMSG    343                 MESSAGE ADDRESS            V7A48 04270028
         LA        R4,UTUPREC          COMMENT RECORD ON SYSUP    V7A48 04272028
         BAL       RE,ERROR            GO PRINT THE RECORD        V7A21 04274028
         B         UPCONT              CHECK FOR CONTINUATIONS    V7A21 04276028
*                                                                       04280025
*        CONTROL CARD NOT RECOGNIZED BY ASMG OR IEBUPDTE                04300025
UPBADCOM DS        0H                                                   04320027
         UPEMSG    337                 ERROR MESSAGE              V7A48 04360028
         LA        R4,UTUPREC          RECORD IN ERROR                  04380025
         BAL       RE,ERROR            PRINT THE ERROR                  04400025
         B         UPCONT              CHECK THIS AND GET NEXT SYSUP    04420025
*                                                                       04440025
*        CONTROL CARD NOT SUPPORTED BY ASMG                             04460025
UPCOM    TM        L1PBYT(R9),X'04'    IS NOUPLIST ON .Q                04480026
         BZ        UPCONT              YES, GET NEXT SYSUP CARD         04500025
         UPEMSG    336                 ERROR MESSAGE              V7A48 04560028
         LA        R4,UTUPREC          RECORD IN ERROR                  04580025
         BAL       RE,ERROR            GO PRINT THE ERROR               04600025
*                                                                       04620025
*        CHECK IF UNSUPPORTED CONTROL CARD WAS CONTINUED                04640025
UPCONT   CLI       UTUPREC+71,C' '     NO BLANK MEANS NO CONTINUE       04660025
         BE        UPUP                A BLANK, PROCESS NEXT SYSUP CARD 04680025
         BAL       RE,RDUP             CONTINUED, GET CONTINUING CARD   04700025
         TM        L1PBYT(R9),X'04'    IS NOUPLIST ON .Q                04720026
         BZ        UPCONT              YES, TEST THIS CARD FOR CONTIN   04740025
         UPEMSG    338                 ERROR MESSAGE              V7A48 04800028
         LA        R4,UTUPREC          RECORD IN ERROR                  04820025
         BAL       RE,ERROR            GO PRINT THE ERROR               04840025
         B         UPCONT              TEST THIS CARD FOR CONTIN        04860025
*                                                                       04880025
*        BUMP RECORD POINTER AND CHECK FOR END OF CARD                  04900025
UPBUMP   LA        R8,1(,R8)           BUMP BY ONE                      04920025
         LA        R4,UTUPREC+70       LAST POSSIBLE PARM ADDR    V7A42 04940028
         CR        R8,R4               ARE WE NOW TOO LATE .Q           04960025
         BCR       12,RE               BL+BE  NO, THEN RETURN           04980025
         BR        R5                  YES, GO TO ERROR ROUTINE         05000025
*                                                                       05020025
*        ./ ENDUP  --  CHECK THIS REALLY IS THE END OF SYSUP            05040025
UPEND    DS        0H                                                   05060025
         UPEMSG    339                 ERROR COMMENT              V7A48 05080028
         MVC       20(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME     V7A48 05090028
         LA        R4,UTUPREC          RECORD POINTER                   05140025
         BAL       RE,ERROR            PRINT IT OUT                     05160025
*                                                                       05180025
UPENDEOF BAL       RE,RDUP             READ AN EXTRA SYSUP RECORD       05200025
         TM        UTSW,UTSW1EOF       DID SYSUP GET AN EOF .Q          05220025
         BO        UPDATA              YES, OK TO CONTINUE WITH SYSIN   05240025
         UPEMSG    340                 ERROR MESSAGE              V7A48 05250028
         MVC       15(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME     V7A48 05280028
         LA        R4,UTUPREC          RECORD WITH PROBLEMS             05340025
         BAL       RE,ERROR            PROCESS THE ERROR                05360025
         B         UPENDEOF            DO IT TILL SYSUP ENDS            05380025
*                                                                       05400025
*        SEARCH FOR  ./ DELETE  OPERANDS                                05420025
UPCCH    DS        0H                                             V7A22 05422028
         BCTR      R8,0                BACKUP FOR 'DELET'         V7A22 05424028
UPCCD    LA        R5,UPDELER          ERROR IF BUMP OVERFLOWS          05440025
         LA        R8,6(,R8)           MOVE PAST 'DELETE'               05460025
UPCCE    BAL       RE,UPBUMP           GO ONE PAST FIRST BLANK          05480025
         CLI       0(R8),C' '          DOES A PARM EXIST .Q             05500025
         BE        UPCCE               NOT YET, KEEP GOING              05520025
         MVI       UPDELS1,X'FF'       1ST ARG NOT INITIALIZED          05530026
         MVI       UPDELS2,X'FF'       2ND ARG NOT INITIALIZED          05540026
         NI        ERSW,X'FF'-ERSWNUM  NUMERIC NOT REQUIRED             05550026
DELOOP   DS        0H                                                   05560026
         CLI       0(R8),C' '          AT THE END OF THE LINE .Q        05570026
         BE        DEDONE              YES, GO TEST FOR COMPLETENESS    05580026
         CLC       =C'SEQ1=',0(R8)     1ST KEYWORD FOUND .Q             05590026
         BNE       DETRY2              BRANCH IF NOT                    05600026
         LA        R1,UPDELS1          POINT TO 1ST ARG TARGET          05610026
         BAL       RE,DEPOINT          GO ENTER THE DATA                05620026
         B         DELOOP              CONTINUE                         05630026
DETRY2   DS        0H                                                   05640026
         CLC       =C'SEQ2=',0(R8)     2ND KEYWORD FOUND .Q             05650026
         BNE       UPDELEX             TRY POSITIONALS IF NOT     V7A22 05660028
         LA        R1,UPDELS2          POINT TO 2ND ARG TARGET          05670026
         BAL       RE,DEPOINT          GO ENTER IT                      05680026
         B         DELOOP              CONTINUE                         05690026
UPDELEX  DS        0H                                             V7A22 05700028
         LA        R1,UPDELS1          SET SEQ1 POSITIONAL 1      V7A22 05702028
         CLI       0(R1),X'FF'         HAVE WE GOTTEN SEQ1 .Q     V7A22 05704028
         BE        UPDELGO             NO, GO SCAN SEQ1 POSNL     V7A22 05706028
         LA        R1,UPDELS2          SET FOR SEQ2 POSITIONAL    V7A22 05708028
         CLI       0(R1),X'FF'         SCANNED SEQ2 .Q            V7A22 05710028
         BNE       UPDELER             YES, ERROR                 V7A22 05712028
UPDELGO  DS        0H                                             V7A22 05714028
         BAL       RE,DEPOINTX         GO SCAN OFF POSITIONAL SEQ V7A22 05716028
         B         DELOOP              LOOP NEXT SEQ NUMBER       V7A22 05718028
UPDELER  DS        0H                                                   05720027
         UPEMSG    334                 ERROR MESSAGE              V7A48 05740028
         LA        R4,UTUPREC          RECORD IN ERROR                  05760025
         BAL       RE,ERROR            GO PRINT OUT THE ERROR           05780025
         B         UPCONT              CHECK FOR CONTIN IN SYSUP        05800025
*                                                                       05820025
*        CHECK SEQUENCES SPECIFIED                                      05840025
DEDONE   DS        0H                                                   05850026
         CLI       UPDELS1,X'FF'       DID WE GET ARG 1 .Q              05860026
         BE        UPDELER             ERROR IF NOT                     05870026
         CLI       UPDELS2,X'FF'       DID WE GET ARG 2 .Q              05880026
         BNE       DEDONE1             BRANCH IF YES              V7A22 05890028
         MVC       UPDELS2(8),UPDELS1  SET SEQ2=SEQ1              V7A22 05892028
DEDONE1  DS        0H                                             V7A22 05894028
*.* DAN SKOMSKY 09/22/2007 USE EQUATE TO DEFINE SEQUENCE LEN  DS092207  05899025
*.*      CLC       UPDELS1(8),UPDELS2  TEST SEQ1 NOT GT SEQ2  DS092207  05900025
         CLC       UPDELS1(UPSEQLN),UPDELS2   TEST SEQ1 NOT GTDS092207  05902025
         BNH       UPDELIT             BRANCH IF OK                     05920025
         UPEMSG    335                 ERROR MESSAGE              V7A48 05980028
         LA        R4,UTUPREC          RECORD IN ERROR                  06000025
         BAL       RE,ERROR            PRINT OUT ERROR                  06020025
         B         UPCONT              CHECK FOR CONTIN IN SYSUP        06040025
*                                                                       06041026
*        SCAN OFF VARYING LENGTH ARGUMENT                               06042026
DEPOINT  DS        0H                                                   06043026
         LA        R8,5(,R8)           POINT PAST 'SEQN='         V7A22 06043228
DEPOINTX DS        0H                                             V7A22 06043428
         CLI       0(R1),X'FF'         IS ARG INITIALIZED .Q            06044026
         BCR       7,R5                ERROR IF NOT                     06045026
         ST        RE,UPSAV2           SAVE RETURN REGISTER             06046026
*./      DELETE    SEQ1=06047026,SEQ2=06047026                    V7A22 06047028
         LR        RA,R8               REMEMBER WHERE ARG STARTS        06048026
         LA        R3,9                MAX ARG LENGTH +1                06049026
DENEXT   DS        0H                                                   06050026
         CLI       0(R8),C','          END OF ARGUMENT .Q               06051026
         BE        DEOUT1              END OF SEARCH IF SO              06052026
         CLI       0(R8),C' '          END OF ARGUMENT .Q               06053026
         BE        DEOUT2              FINAL END OF SEARCH IF SO        06054026
         TM        ERSW,ERSWNUM        MUST IT BE NUMERIC .Q            06055026
         BZ        DENUMOK             BRANCH IF NOT                    06056026
         CLI       0(R8),C'0'          LESS THAN ZERO .Q                06057026
         BCR       4,R5                BM  ERROR IF SO                  06058026
         CLI       0(R8),C'9'          MORE THAN NINE .Q                06059026
         BCR       2,R5                BP  ERROR IF SO                  06060026
DENUMOK  DS        0H                                                   06061026
         BAL       RE,UPBUMP           BUMP TO NEXT CHAR                06062026
         BCT       R3,DENEXT           CONTINUE                         06063026
         BR        R5                  INVALID ARG IF HERE              06064026
DEOUT1   DS        0H                                                   06065026
         BAL       RE,UPBUMP           POINT PAST THE COMMA             06066026
DEOUT2   DS        0H                                                   06067026
         S         R3,=F'9'            GET LENGTH OF ARGUMENT           06068026
         LPR       R3,R3               THE ABSOLUTE LENGTH              06069026
         BCR       8,R5                DON'T TAKE NULL ARGS             06070026
         MVC       0(8,R1),=C'00000000'  ZERO TARGET RESULT             06071026
         LA        R2,8(,R1)           POINT PAST TARGET                06072026
         SR        R2,R3               LESS LENGTH OF ACTUAL ARG        06073026
         BCTR      R3,0                DECREMENT LENGTH BY ONE          06074026
         EX        R3,DEMOVE           MOVE IN ARGUMENT                 06075026
         L         RE,UPSAV2           RESTORE RETURN REGISTER          06076026
         BR        RE                  AND RETURN                       06077026
DEMOVE   MVC       0(*-*,R2),0(RA)     EXECUTED MOVE ARGUMENT           06078026
*                                                                       06079026
*        DO THE  ./ DELETE  PROCESSING                                  06080025
UPDELIT  SR        R8,R8               ZERO COUNTER                     06100025
         LA        R1,UPDELS1          ADDRESS OF STOPPING SEQUENCE     06120025
         BAL       RE,COPYUT           COPY SYSIN TILL SEQ1             06140025
         MVC       UPDEL01(8),UTINSEQ  SAVE SEQ OF 1ST CARD DELETED     06160025
*.* DAN SKOMSKY 09/22/2007 USE EQUATE TO DEFINE SEQUENCE LEN  DS092207  06162025
*.* UPDELCHK CLC   UPDELS2(8),UTINSEQ  TEST IF THIS CARD GETS DS092207  06180025
UPDELCHK CLC UPDELS2(UPSEQLN),UTINSEQ  TEST IF THIS CARD GETS DS092207  06182025
         BL        UPDELIND            BR IF THIS CARD NOT DELETED      06200025
         TM        L1PBYT(R9),X'04'    DON'T PRINT IF NOUPLIST          06220026
         BZ        UPDELDEL            DON'T PRINT IT IF BRANCH         06240025
         UPEMSG    326                 MESSAGE TEST               V7A48 06300028
         LA        R4,UTINREC          POINT TO SYSIN                   06320025
         BAL       RE,ERROR            PRINT IT OUT                     06340025
UPDELDEL MVC       UPDEL02(8),UTINSEQ  SAVE SEQ OF LAST CARD DELETED    06360025
         LA        R8,1(,R8)           BUMP CARDS DELETED COUNTER       06380025
         BAL       RE,RDIN             READ ANOTHER SYSIN CARD          06400025
         B         UPDELCHK            TEST IF THIS ONE GETS DELETED    06420025
*                                                                       06440025
*        OUTPUT THE RESULTS OF THE DELETE                               06460025
UPDELIND NI        ERSW,X'FF'-(ERSWER+ERSWFL)  CLEAR ERROR SWITCHES     06480025
         LTR       R8,R8               TEST IF 0 RECORDS DELETED        06500025
         BNZ       UPDELCVD            BRANCH IF NOT                    06520025
         UPEMSG    327                 ERROR MESSAGE              V7A48 06580028
         LA        R4,UTUPREC          ERRONIOUS COMMAND                06600025
         BAL       RE,ERROR            PRINT OUT ERROR                  06620025
         B         UPCONT              CHECK FOR CONTIN IN SYSUP        06640025
*                                                                       06660025
*        OUTPUT NUMBER OF RECORDS DELETED AND TEST IF RANGE CORRECT     06680025
*.* DAN SKOMSKY 09/22/2007 USE EQUATE TO DEFINE SEQUENCE LEN  DS092207  06682025
*.* UPDELCVD CLC   UPDELS1(8),UPDEL01  TEST IF RANGE WAS CORREDS092207  06700025
UPDELCVD CLC UPDELS1(UPSEQLN),UPDEL01  TEST IF RANGE WAS CORREDS092207  06702025
         BNE       UPDELRER            BRANCH IF RANGE ERROR            06720025
*.* DAN SKOMSKY 09/22/2007 USE EQUATE TO DEFINE SEQUENCE LEN  DS092207  06722025
*.*      CLC       UPDELS2(8),UPDEL02  TEST IF SEQ2 WAS OK    DS092207  06740025
         CLC       UPDELS2(UPSEQLN),UPDEL02   TEST IF SEQ2 WASDS092207  06742025
         BE        UPDELGOD            BRANCH IF GOOD DELETE            06760025
*                                                                       06780025
*        PRINT INCORRECT DELETE STATEMENT                               06800025
UPDELRER DS        0H                                             V7A48 06805028
         UPEMSG    328                 ERROR MESSAGE              V7A48 06809028
         MVC       3(8,R3),UPDEL01     SEQ1                       V7A48 06810028
         MVC       15(8,R3),UPDEL02    SEQ2                       V7A48 06815028
         LA        R4,UTUPREC          ERRONIOUS COMMAND RECORD         06920025
         BAL       RE,ERROR            BRANCH TO ERROR                  06940025
*                                                                       06960025
*        NORMAL DELETE MESSAGE                                          06980025
UPDELGOD TM        L1PBYT(R9),X'04'    IS NOUPLIST ON .Q                07000026
         BZ        UPCONT              YES, CHECK FOR CONTIN IN SYSUP   07020025
         UPEMSG    329                 MESSAGE TEXT               V7A48 07030028
         MVC       8(6,R3),=X'402020202120'  EDIT MASK            V7A48 07040028
         CVD       R8,ERCVD            CONVERT TO DECIMAL               07060025
         ED        8(6,R3),ERCVD+5  EDIT IN NUMBER                V7A48 07080028
         MVI       21(R3),C'S'         ASSUME PLURAL              V7A48 07100028
         BCT       R8,*+8              BUT TEST IT                      07120025
         MVI       21(R3),C' '         THERE'S ONLY ONE           V7A48 07140028
         LA        R4,UTUPREC          SYSUP RECORD                     07220025
         BAL       RE,ERROR            PRINT IT OUT                     07240025
         B         UPCONT              CHECK FOR CONTIN IN SYSUP        07260025
*                                                                 V7A20 07261028
*        SET UP FOR AUTOMATIC NUMBERING ON SYSUP                  V7A20 07261228
*                                                                 V7A20 07261428
DSSNUM   DS        0H                                             V7A20 07261628
         LA        R5,UPCOM            ERROR IF BUMP OVERFLOWS    V7A20 07261828
         LA        R8,6(,R8)           GET PAST 'NUMBER'          V7A20 07262028
DSSNUM1  DS        0H                                             V7A20 07262228
         BAL       RE,UPBUMP           SCAN FOR PARAMETER         V7A20 07262428
         CLI       0(R8),C' '          PARM PRESENT .Q            V7A20 07262628
         BE        DSSNUM1             NO, KEEP TRYING            V7A20 07262828
         MVI       DSS1,X'FF'          1ST ARG NOT INITIALIZED    V7A20 07263028
         MVI       DSS2,X'FF'          AND THE 2ND IS THE SAME    V7A20 07263228
         OI        ERSW,ERSWNUM        NUMERIC REQUIRED           V7A20 07263428
DSSLOOP  DS        0H                                             V7A20 07263628
         CLI       0(R8),C' '          END OF THE LINE .Q         V7A20 07263828
         BE        DSSDONE             CHECK FOR COMPLETENESS     V7A20 07264028
         CLC       =C'NEW1=',0(R8)     FIRST KEYWORD .Q           V7A20 07264228
         BNE       DSSTRY2             NO, CHECK THE OTHER        V7A20 07264428
         LA        R1,DSS1             1ST ARG TARGET             V7A20 07264628
         BAL       RE,DEPOINT          GO ENTER IT                V7A20 07264828
         B         DSSLOOP             KEEP GOING                 V7A20 07265028
DSSTRY2  DS        0H                                             V7A20 07265228
         CLC       =C'INCR=',0(R8)     2ND KEYWORD .Q             V7A20 07265428
         BCR       7,R5                NUMBER UNSUPPORTED ANYWAY  V7A20 07265628
         LA        R1,DSS2             SECOND TARGET              V7A20 07265828
         BAL       RE,DEPOINT          GO ENTER IT                V7A20 07266028
         B         DSSLOOP             CONTINUE LOOKING           V7A20 07266228
DSSDONE  DS        0H                  CHECK FOR ALL OK           V7A20 07266428
         CLI       DSS1,X'FF'          ARG1 OK .Q                 V7A20 07266628
         BCR       8,R5                NO, ERROR HIM              V7A20 07266828
         CLI       DSS2,X'FF'          AND ARG2 .Q                V7A20 07267028
         BCR       8,R5                BOTH ARE REQUIRED          V7A20 07267228
         PACK      DSSNEW1(5),DSS1(8)  INTO THE FIELD             V7A20 07267428
         PACK      DSSINCR(5),DSS2(8)  AS PACKED DECIMAL          V7A20 07267628
         SP        DSSNEW1(5),DSSINCR(5)  PREPARE FOR FIRST TIME  V7A20 07267828
         UPEMSG    342                 MESSAGE TEXT               V7A48 07268028
         MVC       3(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME      V7A48 07268228
         LA        R4,UTUPREC          SYSUP RECORD               V7A20 07268428
         BAL       RE,ERROR            PRINT IT OUT               V7A20 07268628
         B         UPCONT              CHECK FOR CONTINUATION     V7A20 07268828
         EJECT                                                          07280025
RDIN1    DS        0F                                                   07300025
         DC        18F'0'              SYSIN READ SAVE AREA             07320025
*                                                                       07340025
*        THIS ROUTINE READS RECORDS FROM SYSIN AND CHECKS FOR           07360025
*        CHECKS FOR CORRECT SEQUENCING.                                 07380025
*                                                                       07400025
RDIN     DS        0H                                                   07420025
         STM       RE,RC,12(RD)        SAVE CALLER'S REGISTERS          07440025
         LR        RF,RD               TRANSFER SAVE AREA               07460025
         LA        RD,RDIN1            READ SYSIN SAVE AREA             07480025
         ST        RF,4(,RD)           FORWARD CHAINING                 07500025
         ST        RD,8(,RF)           BACKWARD CHAINING                07520025
         L         RF,16(,RF)          RESTORE R15                      07540025
         L         R8,L1DCBADS+L1SIN(,R9)  SYSIN DCB ADDRESS            07560026
         MVC       SAEODAD+1(3),DCBEODAD+1(R8)    SAVE EODAD EXIT       07580026
         MVC       DCBEODAD+1(3,R8),=AL3(RDINEOF)  SET MY EODAD         07600026
RDINA    DS        0H                                                   07620027
         NI        L1SINSW(R9),X'FE'   TURN OFF RE-READ SWITCH          07640027
         LR        R1,R8               TRANSFER DCB ADDRESS             07660027
         L         RF,L1DBLK+4(,R9)                               V7A42 07662028
         LTR       RF,RF                                          V7A42 07668028
         BNZ       RDINWYL                                        V7A42 07670028
         L         RF,L1DCBPAD(,R8)    GET REAL SYSIN GET ADDRESS       07680027
RDINWYL  DS        0H                                             V7A42 07685028
         BALR      RE,RF               DO THE GET                       07700027
         TM        L1SINSW(R9),X'01'   TEST RE-READ SWITCH              07720025
         BZ        RDINOK              GO ON IF NO RE-READ REQ'D        07725027
         MVC       L1DCBPAD+1(3,R8),DCBGET+1(R8)  SAVE REAL ADDRESS     07730027
         MVC       DCBGET+1(3,R8),L1SINAD+1(R9)  RESET DUMMY ASM ADDR   07735027
         B         RDINA               RE-ISSUE THE GET                 07740027
RDINOK   DS        0H                                                   07745027
         MVC       UTINREC,0(R1)       MOVE THE RECORD            V7A42 07751028
         CLC       UTINSEQ(8),=CL8' '  TEST FOR BLANK SEQUENCE NUMBER   07760025
         BNE       RDINB               SEQUENCE NUMBER OK               07780025
         UPEMSG    320                 MESSAGE TEXT               V7A48 07785028
         MVC       9(8,R3),L1DDNAM+2*L1SIN(R9)  SYSIN DDNAME      V7A48 07790028
         LA        R4,UTINREC          RECORD IN ERROR                  07880025
         BAL       RE,ERROR            PRINT OUT ERROR                  07900025
         B         RDINA               GET NEXT SYSIN RECORD            07920025
RDINB    TM        UTSW,UTSWIN         TEST FOR FIRST RECORD            07940025
         BO        RDFINI              BRANCH IF FIRST RECORD           07960025
*.* DAN SKOMSKY 09/22/2007 USE EQUATE TO DEFINE SEQUENCE LEN  DS092207  07962025
*.*      CLC       UTINSEQ(8),UTINOLD CHECK FOR SEQUENCE ERRORDS092207  07980025
         CLC UTINSEQ(UPSEQLN),UTINOLD CHECK FOR SEQUENCE ERRO DS092207  07982025
         BH        RDFINI              BRANCH IF OK                     08000025
         UPEMSG    332                 MESSAGE TEXT               V7A48 08005028
         MVC       3(8,R3),L1DDNAM+2*L1SIN(R9)  SYSIN DDNAME      V7A48 08010028
         LA        R4,UTINREC          RECORD IN ERROR                  08100025
         BAL       RE,ERROR            PRINT OUT ERROR                  08120025
         B         RDINA               GET NEXT SYSIN RECORD            08140025
RDFINI   MVC       UTINOLD(8),UTINSEQ  SAVE SEQ TO TEST NEXT RECORD     08160025
         NI        UTSW,X'FF'-UTSWIN   TURN OFF FIRST CARD SWITCH       08180025
*                                                                       08200025
*        FIX THINGS UP AND RETURN                                       08220025
         MVC       DCBEODAD+1(3,R8),SAEODAD+1  RESTORE EODAD            08240026
RDRETRN  L         RD,4(,RD)           RESTORE SAVE AREA                08260025
         LM        RE,RC,12(RD)        RESTORE REGISTERS          V7A42 08290028
         SR        RF,RF               SET RETURN CODE                  08300025
         BR        RE                  RETURN                           08320025
*                                                                       08340025
*        EOF ON SYSIN                                                   08360025
RDINEOF  OI        UTSW,UTSWEOF        SET EOF ON SYSIN                 08380025
         MVC       DCBEODAD+1(3,R8),SAEODAD+1  RESTORE SYSIN EODAD      08400026
         MVC       UTINREC,UTLASTR     SYSIN BECOMES INFINITE     V7A42 08420028
         TM        UTSW,UTSW1EOF       HAS SYSUP ENDED .Q               08440025
         BNZ       REODAD              YES, TAKE EODAD EXIT             08460025
         B         RDRETRN             GO AND RETURN                    08480025
         EJECT                                                          08500025
COPYUT1  DS        0F                                                   08520025
         DC        18F'0'              COPY SYSIN UTILITY SAVE AREA     08540025
*                                                                       08560025
*        THIS ROUTINE COPIES CARDS FROM SYSIN TO SYSOUT                 08580025
*        UNTIL A SEQUENCE NUMBER GREATER THAN THE ONE                   08600025
*        SPECIFIED IS FOUND.                                            08620025
*                                                                       08640025
*        INPUT   R1   ADDR OF STOPPING SEQUENCE NUMBER                  08660025
*                                                                       08680025
COPYUT   DS        0H                                                   08700025
         STM       RE,RC,12(RD)        SAVE CALLER'S REGISTERS          08720025
         LR        RF,RD               TRANSFER SAVE ADDRESS            08740025
         LA        RD,COPYUT1          COPYUT SAVE AREA                 08760025
         ST        RF,4(,RD)           FORWARD CHAINING                 08780025
         ST        RD,8(,RF)           BACKWARD CHAINING                08800025
         L         RF,16(,RF)          RETAIN R15                       08820025
         LR        R8,R1               ADDR OF STOPPING SEQUENCE        08840025
*.* DAN SKOMSKY 09/22/2007 USE EQUATE TO DEFINE SEQUENCE LEN  DS092207  08842025
*.* COTEST   CLC   UTINSEQ(8),0(R8) TEST FOR STOPPING SEQUENCEDS092207  08860025
COTEST   CLC   UTINSEQ(UPSEQLN),0(R8)  TEST FOR STOPPING SEQUEDS092207  08862025
         BNL       CODONE              BRANCH IF END OF COPY            08880025
*                                                                       08900025
*        WRITE RECORD TO SYSOUT                                         08920025
         LA        RA,UTINREC          RECORD FROM SYSIN                08940025
         BAL       RE,WROUT            'WRITE' OUT TO SYSOUT            08960026
         TM        L1PBYT1(R9),X'80'   IS IT FULLUPLIST .Q              08980025
         BZ        COREAD              NO, DON'T LIST IT                09000025
         UPEMSG    341                 MESSAGE TEXT               V7A48 09040028
         LA        R4,UTINREC          SYSIN RECORD TO PRINT            09080025
         BAL       RE,ERROR            GO AND PRINT IT                  09100025
         NI        ERSW,X'FF'-(ERSWER+ERSWFL) CLEAR ERROR SWITCHES      09120025
*                                                                       09140025
*        READ A CARD FROM SYSIN                                         09160025
COREAD   BAL       RE,RDIN             READ NEXT SYSIN CARD             09180025
         B         COTEST              TEST IF THIS CARD GETS COPIED    09200025
*                                                                       09220025
*        RETURN                                                         09240025
CODONE   L         RD,4(,RD)           GET LAST SAVE                    09260025
         LM        RE,RC,12(RD)        RESTORE CALLER'S REGS      V7A42 09290028
         SR        RF,RF               SET ZERO RETURN CODE             09300025
         BR        RE                  RETURN                           09320025
         EJECT                                                          09340025
RDUP1    DS        0F                                                   09360025
         DC        18F'0'              READ SYSUP SAVE AREA             09380025
*                                                                       09400025
*        THIS ROUTINE READS RECORDS ON SYSUP                            09420025
*        R7 WILL BE ALTERED WHEN  RDUP  RETURNS                         09440025
*                                                                       09460025
RDUP     DS        0H                                                   09480025
         STM       RE,RC,12(RD)        SAVE CALLER'S REGISTERS          09500026
         LR        RF,RD               REMEMBER SAVE AREA               09520025
         LA        RD,RDUP1            NEW SAVE AREA                    09540025
         ST        RF,4(,RD)           CHAIN FORWARD                    09560025
         ST        RD,8(,RF)           AND BACKWARD                     09580025
         L         RF,16(RF)           RESTORE R15                      09600025
RDUPA    L         R1,L1DCBADS+L1SUP(,R9)  ADDR OF SYSUP DCB            09620026
         NI        L1SINSW(R9),X'FE'   TURN OFF THE RE-READ SWITCH      09640025
         L         RF,L1DBLK+4(,R9)    POINT AT 'GET' ROUTINE     V7A42 09650028
         LTR       RF,RF               IS IT PREVENT .Q           V7A42 09655028
         BNZ       RDUPWYL             BRANCH IF YES              V7A42 09660028
         L         RF,DCBGET(R1)       REAL ACCESS METHOD ADDR    V7A42 09665028
RDUPWYL  DS        0H                                             V7A42 09670028
         BALR      RE,RF               DO THE GET                 V7A42 09675028
         TM        L1SINSW(R9),X'01'   TEST RE-READ SWITCH              09680025
         BO        RDUPA               RE-READ IF ON                    09700025
         MVC       UTUPREC,0(R1)       MOVE THE RECORD            V7A42 09720028
         L         R2,L1DCBADS+L1SIN(,R9)  GET SYSIN DCB ADDRESS        09722026
         L         R1,L1DCBRCT(,R2)    GET SYSIN RECORD COUNT           09724026
         BCTR      R1,0                DECREMENT BY ONE                 09726026
         ST        R1,L1DCBRCT(,R2)    AND RESTORE                      09728026
         L         R2,L1DCBADS+L1SUP(,R9)  GET SYSUP DCB ADDRESS        09730026
         L         R1,L1DCBRCT(,R2)    GET SYSUP RECORD COUNT           09732026
         LA        R1,1(,R1)           BUMP BY ONE                      09734026
         ST        R1,L1DCBRCT(,R2)    AND RESTORE                      09736026
*                                                                       09740025
*        RETURN TO CALLER                                               09760025
RDUPRET  L         RD,4(,RD)           RESTORE SAVE AREA POINTER        09780025
         LM        RE,RC,12(RD)        RESTORE REGISTERS          V7A42 09810028
         SR        RF,RF               SET RETURN CODE                  09820025
         BR        RE                  RETURN                           09840025
*                                                                       09860025
*        EOF ON SYSUP                                                   09880025
RDUPEOF  OI        UTSW,UTSW1EOF       SET EOF ON SYSUP                 09900025
         MVC       UTUPREC,UTLASTR     DUMMY EOF SYSUP RECORD     V7A42 09920028
         TM        UTSW,UTSWEOF        HAS SYSIN ENDED .Q               09940025
         BZ        RDUPRET             NO, NOT YET                      09960025
*                                                                       09980025
*        TAKE EODAD OF SYSIN AND NEVER RETURN                           10000025
REODAD   L         R2,L1DCBADS+L1SIN(,R9)  SYSIN DCB ADDRESS            10020026
         MVC       UPSAV1+61(3),DCBEODAD+1(R2)  ALTER R15 FOR A BRANCH  10040026
         LM        R0,RF,UPSAV1        RESTORE CALLER'S REGISTERS       10060025
         BR        RF                  BRANCH TO EODAD                  10080025
         EJECT                                                          10100025
ERROR1   DS        0F                                                   10120025
         DC        18F'0'              ERROR SAVE AREA                  10140025
ERCVD    DS        D                   CVD WORK AREA                    10160025
*                                                                       10200025
*        THIS ROUTINE PRINTS AN ERROR MESSAGE                           10220025
*                                                                       10240025
*        IF THE SAME ERROR OCCURS TWICE IN A ROW, THEN THE FLUSH        10260025
*        SWITCH IS SET AND A 'FLUSHING' MESSAGE IS PRINTED INSTEAD.     10280025
*                                                                       10300025
*        INPUT -                                                        10320025
*                R3   ERROR MESSAGE                                     10360025
*                R4   RECORD IN ERROR                                   10380025
*                                                                       10400025
ERROR    DS        0H                                                   10420025
         STM       RE,RC,12(RD)        SAVE CALLER'S REGISTERS          10440025
         LR        RF,RD               TRANSFER SAVE AREA               10460025
         LA        RD,ERROR1           ESTABLISH SAVE FOR ERROR         10480025
         ST        RF,4(,RD)           FORWARD CHAINING                 10500025
         ST        RD,8(,RF)           BACKWARD CHAINING                10520025
         L         RF,16(,RF)          RESTORE R15                      10540025
*                                                                       10560025
         LR        R5,R4               TRANSFER RECORD IN ERROR         10580025
         LR        R4,R3               ERROR MESSAGE POINTER            10600025
         BAL       RE,ERNUMSEV         GET ERROR NUMBER AND SEVERITY    10620027
         LTR       R1,R1               IS IT SERIOUS .Q                 10622027
         BNZ       ERCOMP              BRANCH IF YES                    10624027
         NI        ERSW,X'FF'-(ERSWER+ERSWFL)  CLEAR ERROR SWITCHES     10626027
         BAL       RE,PRINT            GO PRINT IT                      10628027
         B         ERDONE              AND RETURN                       10630027
*                                                                       10640025
*        CHECK FOR HIGHEST COMPLETION CODE SO FAR                       10660025
ERCOMP   DS        0H                                                   10670027
         CH        R1,UTRETCD          COMPARE WITH PREVIOUS HIGH       10680025
         BNH       *+8                 BRANCH IF NOT HIGHER             10700025
         STH       R1,UTRETCD          SAVE THIS AS HIGHEST SO FAR      10720025
         CLC       UTRETCD+1(1),L1UPCOND(R9)  GREATER THAN MAX .Q       10724027
         BNH       ERLEMAX             BRANCH IF NOT                    10728027
         OI        L1SYNERR+1(R9),X'01'  SET ERROR FOR ASMGF3           10732027
         MVC       L1UPCOND(1,R9),UTRETCD+1  REMEMBER THE HIGHER        10736027
*                                                                       10740025
*        TEST IF THIS SAME ERROR AS LAST                                10760025
ERLEMAX  DS        0H                                                   10770027
         TM        ERSW,ERSWER         TEST IF NOT INTERVENING OK OPER  10780025
         BZ        ERPUT               OK OPERATION FOUND               10800025
         CH        R3,UTERCODE         TEST IF SAME ERROR AS LAST TIME  10820025
         BNE       ERPUT               BRANCH IF NOT SAME               10840025
         TM        ERSW,ERSWFL         TEST IF ALREADY IN FLUSH MODE    10860025
         BO        ERDONE              YES WE ARE                       10880025
         UPEMSG    330                 ERROR MESSAGE              V7A48 10940028
         BAL       RE,ERNUMSEV         GET ERROR NUMBER AND SEVERITY    10950027
         BAL       RE,PRINT            GO TO PRINT ROUTINE              10960025
         OI        ERSW,ERSWFL         SET FLUSH MODE                   10980025
         B         ERDONE              RETURN                           11000025
*                                                                       11002027
*        GET ERROR NUMBER AND SEVERITY                                  11004027
ERNUMSEV DS        0H                                                   11006027
         SR        R3,R3               CLEAR ERROR NUMBER               11008027
         IC        R3,0(,R4)           GET ERROR NUMBER LESS 200 OFFSET 11010027
         LA        R3,200(,R3)         ACTUAL ERROR NUMBER              11012027
         SR        R1,R1               CLEAR SEVERITY                   11014027
         IC        R1,2(,R4)           GET ERROR SEVERITY               11016027
         BR        RE                  AND RETURN                       11018027
*                                                                       11020025
*        NOT FLUSHING  --  PRINT ERROR MESSAGE                          11040025
ERPUT    DS        0H                                                   11060025
         STH       R3,UTERCODE         SAVE TO SEE IF NEXT ERROR FLUSH  11120025
         BAL       RE,PRINT            GO TO PRINT ROUTINE              11140025
         OI        ERSW,ERSWER         SET ERROR OCCURRED               11160025
         NI        ERSW,X'FF'-ERSWFL   CLEAR FLUSH MODE                 11180025
*                                                                       11200025
*        RETURN                                                         11220025
ERDONE   L         RD,4(,RD)           RESTORE FORMER SAVE AREA         11240025
         LM        RE,RC,12(RD)        RESTORE REGISTERS                11260025
         SR        RF,RF               SET RETURN CODE                  11280025
         BR        RE                  RETURN                           11300025
         EJECT                                                          11320025
PRINT1   DS        0F                                                   11340025
         DC        18F'0'              SAVE AREA FOR PRINT              11360025
*                                                                       11380025
*        THIS ROUTINE BUILDS UP A PRINT LINE FROM THE INPUT             11400025
*        PARAMETERS AND PRINTS IT.                                      11420025
*        CAN'T TELL WHERE LAST LINE WAS PRINTED (IF EXECUTE)            11440025
*        SO DON'T TRY ANY EFFICIENT CARRIAGE CONTROL MODS.              11460025
*                                                                       11480025
*        INPUT   R1   NUMERIC CARRIAGE CONTROL                          11500025
*                     R1 = 0  LEAVE NO SPACE, DON'T PRINT ON SYSTERM    11520025
*                     R1 = 4  LEAVE A SPACE, DON'T PRINT ON SYSTERM     11540025
*                     R1 >=8  LEAVE A SPACE, PRINT ON SYSTERM           11560025
*                R3   MESSAGE I.D.                                      11580025
*                R4   COMMENT TEXT OR 0 IF NONE                         11600025
*                R5   RECORD TO BE PRINTED                              11620025
*                                                                       11640025
*        WORK AREA                                                      11660025
*                                                                       11680025
PRNUM    DS        D                   CVD WORK AREA                    11700025
*                                                                       11710027
PRCARR   DS        C                   SAVE AREA FOR R1 CARR CONTROL    11720025
MVTEXT   MVC       UTPRCOM(*-*),0(R1)  MOVE IN COMMENT                  11740025
*                                                                       11760025
*./      DELETE    SEQ1=11780025,SEQ2=11920025                          11920026
*                                                                       11940025
PRINT    DS        0H                                                   11960025
         STM       RE,RC,12(RD)        SAVE CALLER'S REGISTERS          11980025
         LR        RF,RD               REMEMBER OLD SAVE                12000025
         LA        RD,PRINT1           NEW SAVE AREA                    12020025
         ST        RF,4(,RD)           FORWARD CHAIN                    12040025
         ST        RD,8(,RF)           BACKWARD CHAIN                   12060025
         L         RF,16(,RF)          RESTORE R15                      12080025
         SRL       R1,2                CHANGE 0,4,8 TO 0,1,2            12090027
         STC       R1,PRCARR           SAVE NUMERIC CARR CONTROL        12100025
         L         R8,L1DCBADS+L1SPRINT(,R9)  POINT TO SYSPRINT DCB     12120026
*                                                                       12140025
*        BLANK THE BUFFER                                               12160025
*        USING CARR CONTROL AND BLANKS IN LIST1                         12180026
         MVC       UTPRBUF(L'UTPRBUF),L1BLANKS(R9) BLANK ENTIRE AREA    12200026
*                                                                       12220025
         MVC       UTPRID(4),=C'ASMG'  PLACE 4 CHARS OF I.D.            12240025
         CVD       R3,PRNUM            CONVERT I.D. TO PACKED           12260025
         UNPK      UTPRID+4(3),PRNUM(8)  CONVERT TO CHAR IN PRINT LINE  12280025
         OI        UTPRID+6,X'F0'      FIX UP LAST ZONE                 12300025
*                                                                       12320027
*        PLACE COMMENT TEXT                                             12340027
*                                                                       12360027
         LTR       R4,R4               TEST IF THERE IS ANY             12380025
         BZ        PRREC               BRANCH IF NONE                   12400025
         LA        R1,3(,R4)           ADDRESS OF TEXT                  12420025
         IC        R2,1(,R4)           LENGTH-1 FOR MVC                 12460025
         EX        R2,MVTEXT           MOVE COMMENT TO PRINT LINE       12480025
*                                                                       12500025
*        PLACE THE RECORD                                               12520025
PRREC    LTR       R5,R5               TEST IF A RECORD PRESENT         12540025
         BZ        PRTEST              BRANCH IF NOT                    12560025
         MVC       UTPRREC(80),0(R5)   MOVE RECORD TO PRINT LINE        12580025
PRTEST   IC        R5,L1DCBCC(,R8)     SAVE CARRIAGE CONTROL            12590027
         NI        L1DCBCC(R8),X'7F'   TURN OFF ASA BIT                 12600027
         OI        L1DCBCC(R8),X'40'   TURN ON NUMERIC BIT              12605027
         L         R2,L1UTLINO(,R9)    GET NUMBER OF LINES LEFT         12610026
         BCT       R2,*+8              DECREMENT AND TEST               12620025
         B         PRHEAD              DOWN TO ONE, EJECT               12640025
         CLI       PRCARR,X'00'        TEST IF THIS ONE NORMAL          12660025
         BE        PRLINE              BRANCH IF SO                     12680025
*                                                                       12700025
*        DOUBLE SPACING REQUIRED                                        12720025
PRDEC    BCT       R2,*+8              PRINT IF NOT END OF PAGE         12740025
         B         PRHEAD              IT IS THE END OF PAGE            12760025
*./      DELETE    SEQ1=12780025,SEQ2=12780025                          12780026
         MVI       UTPRCARR,X'01'      LEAVE A BLANK LINE               12800026
         B         PRLINE              GO AND PRINT THIS LINE           12820025
*                                                                       12840025
*        SKIP TO NEW PAGE AND PRINT TITLE AND HEADING                   12860025
PRHEAD   DS        0H                                                   12880026
         L         R1,L1PAGENO(,R9)    GET CURRENT PAGE NUMBER          12900026
         LA        R1,1(,R1)           BUMP PAGE NUMBER BY ONE          12920026
         ST        R1,L1PAGENO(,R9)    SAVE IT BACK                     12940026
         CVD       R1,PRNUM            CONVERT TO DECIMAL               12960026
         MVC       PRPAGNO(4),=X'40202120'  SET EDIT MASK               12980026
         ED        PRPAGNO(4),PRNUM+6  EDIT PAGE NUMBER TO OUTPUT       13000026
         PUT       (R8),PRHEAD1        PRINT TITLE LINE                 13020026
         PUT       (R8),PRHEAD2        PRINT HEADER LINE                13040026
         LH        R2,L1LINECT(,R9)    RESET LINES PER PAGE             13060026
         MVI       UTPRCARR,X'01'      DOUBLE SPACE NEXT LINE           13070026
*                                                                       13080026
*        PRINT THE LINE                                                 13100025
PRLINE   DS        0H                                                   13120026
         PUT       (R8),UTPRBUF        PRINT THE LINE                   13140026
         STC       R5,L1DCBCC(,R8)     RESTORE CARRIAGE CONTROL         13160027
         ST        R2,L1UTLINO(,R9)    SAVE LINES LEFT FOR NEXT         13180025
*                                                                       13200025
*        TEST IF SYSTERM IS OPEN                                        13220025
PRTERM   L         R8,L1DCBADS+L1STERM(,R9)  POINT TO SYSTERM DCB       13240026
         TM        DCBOFLGS(R8),X'10'  DID SYSTERM OPEN .Q              13260025
         BZ        PRDONE              NO, TIME TO RETURN               13280025
         CLI       PRCARR,X'02'        IS SEVERITY TWO OR MORE .Q       13300025
         BL        PRDONE              NO, DON'T PRINT ON SYSTERM       13320025
         L         R4,L1TRSAVE(,R9)    GET SYSTERM LINE COUNT           13340026
         IC        R5,L1DCBCC(,R8)     RETAIN CARRIAGE CONTROL          13360027
         NI        L1DCBCC(R8),X'7F'   TURN OFF ASA BIT                 13380027
         OI        L1DCBCC(R8),X'40'   TURN ON NUMERIC BIT              13390027
         MVI       UTPRCARR,X'00'      NO SPACE FOR THIS                13400026
         BCT       R4,PRTERR           NEW PAGE YET .Q                  13420026
         MVI       UTPRCARR,X'FF'      YES, EJECT THIS PAGE             13440026
         LH        R4,L1LINECT(,R9)    RESTORE LINES PER PAGE           13460026
PRTERR   PUT       (R8),UTPRBUF        PRINT THIS LINE                  13480026
         STC       R5,L1DCBCC(,R8)     RESTORE CARRIAGE CONTROL         13500027
         ST        R4,L1TRSAVE(,R9)    RESTORE SYSTERM LINE COUNT       13510026
*                                                                       13520025
*        RETURN                                                         13540025
PRDONE   L         RD,4(,RD)           RESTORE FORMER SAVE AREA         13560025
         LM        RE,RC,12(RD)        RESTORE REGISTERS                13580025
         SR        RF,RF               SET RETURN CODE                  13600025
         BR        RE                  RETURN                           13620025
         EJECT                                                          13640025
*                                                                       13660025
*        THIS ROUTINE 'WRITES' RECORDS TO THE                           13680025
*        ASSEMBLER AFTER CHECKING FOR CORRECT SEQUENCING.               13700025
*                                                                       13720025
*                                                                       13740025
*        INPUT   RA   ADDRESS OF RECORD TO BE WRITTEN                   13760025
*                                                                       13780025
*        RETURN IS EFFECTED VIA THE ASMGUP ENTRY POINT                  13800025
*        THE NEXT TIME THE ASSEMBLER CALLS ASMGUP FOR                   13820025
*        ANOTHER CARD.                                                  13840025
*                                                                       13860025
WROUT    DS        0H                                                   13880025
         SR        RF,RF               PRESUMABLY WE RETURN TRIUMPHANT  13900025
         STM       R0,RF,UPSAV2        SAVE ALL MY REGISTERS            13920025
         TM        UTSW,UTSWOUT        IS THIS FIRST CARD RETURNED .Q   13940025
         BO        UPWRITE             YES, SKIP SEQUENCE CHECK         13960025
*.* DAN SKOMSKY 09/22/2007 USE EQUATE TO DEFINE SEQUENCE LEN  DS092207  13962025
*.*      CLC       72(8,RA),UTOUTSEQ   CHECK SEQUENCING OK    DS092207  13980025
         CLC  72(UPSEQLN,RA),UTOUTSEQ  CHECK SEQUENCING OK    DS092207  13982025
         BH        UPWRITE             BRANCH IF OK                     14000025
*                                                                       14020025
*        BLAME INCORRECT SEQUENCE ON SYSUP CAUSE SYSIN ALREADY CHECKED  14040025
         UPEMSG    331                 ERROR MESSAGE              V7A48 14100028
         MVC       3(8,R3),L1DDNAM+2*L1SUP(R9)  SYSUP DDNAME      V7A48 14120028
         LA        R4,UTUPREC          SYSUP IS IN ERROR                14140025
         BAL       RE,ERROR            PRINT OUT ERROR                  14160025
         LM        R0,RF,UPSAV2        RESTORE ALL REGISTERS            14180025
         LA        RF,4                SET RETURN CODE                  14200025
         BR        RE                  AND RETURN                       14220025
*                                                                       14240025
*        RETURN RECORD TO SYSOUT                                        14260025
UPWRITE  NI        UTSW,X'FF'-UTSWOUT  TURN OFF FIRST SYSOUT CARD SW    14280025
         MVC       UTOUTSEQ(8),72(RA)  SAVE SEQ FOR CHECKING THE NEXT   14300025
         AIF       (NOT &HRDCOPY).NOJOUT                                14320025
*                                                                       14340025
*        DO WE WRITE THIS RECORD OUT ON SYSPUNCH ALSO .Q                14360025
SWITJACQ BC    *-*+15,OMITJACQ         SWITCH FOR SYSPUNCH OUTPUT       14380025
         L     R1,L1DCBADS+L1SPUNCH(,R9)  SYSPUNCH DCB ADDRESS          14400026
         PUT   (1)                     GET BUFFER FOR MERGED RECORD     14420026
         MVC   0(80,R1),0(RA)          MOVE RECORD TO THE BUFFER        14440026
OMITJACQ DS    0H                      JUST ANOTHER LABEL               14460025
.NOJOUT  ANOP                                                           14480025
*./      DELETE    SEQ1=14500025,SEQ2=14500025                          14500026
         ST        RA,UPSAV1+4*R1      PASS ADDR OF RECORD TO USER      14520026
         LM        R0,RF,UPSAV1        GET ALL USER'S REGISTERS         14540025
         BR        RE                  RETURN TO HIM                    14560025
         EJECT                                                          14580025
*                                                                       14600025
*        WORK AREA USED BY ASMGUP                                       14620025
*                                                                       14640025
*.* DAN SKOMSKY 09/22/2007 USE EQUATE TO DEFINE SEQUENCE LEN  DS092207  14642025
UPSEQLN  EQU       &UPSEQLN            SEQUENCE FIELD LENGTH  DS092207  14644025
UPSAV1   DC        16F'0'              SAVE AREA FOR USERS REGISTERS    14660025
UPSAV2   DC        12F'0',A(ASMGUP,UPSAV3,UPINIT,0)                     14680025
*                                      SAVE AREA FOR MY REGISTERS       14700025
UPSAV3   DC        18F'0'              SAVE AREA FOR O/S USAGE          14720025
PATCH    DC        10S(*)              PATCH AREA                       14730026
*                                                                       14740025
ERSW     DC        X'00'               ERROR SWITCH                     14760025
ERSWER   EQU       X'80'               ERROR ON LAST OPERATION          14780025
ERSWFL   EQU       X'40'               IN FLUSH MODE                    14800025
ERSWNUM  EQU       X'20'               NUMERIC ARGUMENT REQUIRED        14810026
*                                                                       14820025
UTSW     DC        X'C0'               FILE SWITCH                      14840025
UTSWIN   EQU       X'80'               NOTHING ON SYSIN YET             14860025
UTSWOUT  EQU       X'40'               NOTHING ON SYSOUT YET            14880025
UTSWEOF  EQU       X'20'               EOF ON SYSIN                     14900025
UTSW1EOF EQU       X'10'               EOF ON SYSUP                     14920025
*                                                                       14940025
PRHEAD1  DS        0CL133              PRINTER TITLE LINE               14960026
         DC        X'FF'               EJECT BEFORE PRINTING            14980026
         DC        CL34' '             BLANKS                           15000025
         DC        CL26'ASSEMBLER (G)  UPDATE  LOG'                     15020026
         DC        CL51' '             BLANKS                           15040026
         DC        C'PAGE '            PAGE                             15060025
PRPAGNO  DS        CL4                 PAGE NUMBER                      15080025
         DC        CL12' '             TRAILER BLANKS                   15090026
*                                                                       15100025
PRHEAD2  DS        0CL133              PRINTER TITLE LINE TWO           15120026
         DC        X'02'               SPACE 2 AND PRINT                15140026
         DC        CL2' '                                               15160025
         DC        CL10'I.D.'                                           15180025
         DC        CL30'MESSAGE'                                        15200025
         DC        CL69'RECORD'                                         15220025
PRDATE   DS        CL9                 TODAY'S DATE                     15240025
         DC        CL12' '             TRAILER BLANKS                   15250026
*                                                                       15260025
UTPRBUF  DS        0CL133              LINE BUFFER                      15280026
UTPRCARR DS        X                   NUMERICAL CARRIAGE CONTROL       15300025
UTPRID   DS        CL10                I.D. PORTION                     15320025
UTPRCOM  DS        CL30                COMMENT OR ERROR MESSAGE         15340025
UTPRREC  DS        CL80                RECORD BEING PRINTED             15360025
         DC        CL12' '             TRAILER BLANKS                   15370026
*                                                                       15380025
UTERCODE DC        H'0'                FORMER ERROR MESSAGE I.D.        15400025
UTRETCD  DC        H'0'                HIGHEST RETURN CODE              15420025
*                                                                       15440025
UTINREC  DS        CL80                SYSIN RECORD                     15480025
UTINSEQ  EQU       *-8                 SYSIN SEQUENCE NUMBER            15500025
*                                                                       15520025
UTUPREC  DS        CL80                SYSUP RECORD                     15580025
UTUPSEQ  EQU       *-8                 SYSUP SEQUENCE NUMBER            15600025
*                                                                       15620025
UTLASTR  DC        80X'FF'             DUMMY EOF RECORD FOR SYSIN,SYSUP 15660025
*                                                                       15680025
UTOUTSEQ DS        CL8                 FORMER SYSOUT SEQUENCE NUMBER    15700025
UTINOLD  DS        CL8                 FORMER SYSIN SEQUENCE NUMBER     15720025
*                                                                       15740025
UPDELS1  DS        CL8                 SEQ1 FROM DELETE CARD            15760025
UPDELS2  DS        CL8                 SEQ2 FROM DELETE CARD            15780025
UPDEL01  DS        CL8                 SEQ OF 1ST CARD DELETED          15800025
UPDEL02  DS        CL8                 SEQ OF LAST CARD DELETED         15820025
*                                                                 V7A20 15822028
DSS1     DS        CL8                 NEW1 CHAR WORK AREA        V7A20 15824028
DSS2     DS        CL8                 INCR CHAR WORK AREA        V7A20 15826028
DSSNEW1  DC        PL5'0'              NEW1 PACKED VALUE          V7A20 15828028
DSSINCR  DC        PL5'0'              INCR PACKED VALUE          V7A20 15830028
SAEODAD  DS        F                   SAVE SYSIN EODAD ADDRESS         15840025
         SPACE     1                                              V7A48 15842028
         LTORG     ,                                              V7A48 15844028
UPERROR  DS        0F                                             V7A48 15850028
*                                                                       15860025
*        ERROR DESCRIPTIONS                                             15880025
*                                                                       15882027
*     ERROR SEVERITY          MEANING                                   15884027
*           0   --   JUST A PASSING COMMENT.                            15886027
*           4   --   AN INTERESTING COMMENT.                            15888027
*           8   --   UNSUPPORTED FUNCTION, ALL OK.                      15890027
*          12   --   POSSIBLE ERROR, MAYBE ALL OK.                      15892027
*          16   --   PROBABLE ERROR.                                    15894027
*                                                                       15896027
         UPEMSG    320,12,'BLANK SYSINXXX SEQUENCE FIELD'               15900025
         UPEMSG    321,12,'BLANK SYSUPXXX SEQUENCE FIELD'               15920025
         UPEMSG    323,00,'     INSERTION'                              15940025
         UPEMSG    324,00,'     TO BE REPLACED'                         15960025
         UPEMSG    325,00,'     REPLACEMENT'                            15980025
         UPEMSG    326,00,'     DELETION'                               16000025
         UPEMSG    327,16,'NO RECORDS IN RANGE'                         16020025
         UPEMSG    328,16,'XXXXXXXX TO XXXXXXXX MISMATCH'               16040025
         UPEMSG    329,00,'     XXXXXX RECORDS DELETED'                 16060025
         UPEMSG    330,04,'FLUSHING'                                    16080025
         UPEMSG    331,12,'SYSUPXXX SEQUENCE ERROR'                     16100025
         UPEMSG    332,12,'SYSINXXX SEQUENCE ERROR'                     16120025
         UPEMSG    334,16,'INVALID DELETE OPERANDS'                     16140025
         UPEMSG    335,16,'SEQ1 IS GREATER THAN SEQ2'             V7A37 16160028
         UPEMSG    336,08,'CONTROL CARD NOT SUPPORTED'                  16180025
         UPEMSG    337,16,'CONTROL CARD NOT RECOGNIZED'                 16200025
         UPEMSG    338,00,'CONTINUED CONTROL CARD'                      16220025
         UPEMSG    339,04,'./ ENDUP CARD ON SYSUPXXX'                   16240025
         UPEMSG    340,12,'UNPROCESSED SYSUPXXX RECORDS'                16260025
         UPEMSG    341,00              SYSIN RECORD UNDER FULLUPLIST    16280025
         UPEMSG    342,00,'SYSUPXXX NUMBERING RECORD'             V7A20 16282028
         UPEMSG    343,04,'COMMENT CONTROL CARD'                  V7A21 16284028
*                                                                       16300025
*        END OF ASMGUP DECK                                             16320025
*        MISCELLANEOUS DECLARATIONS                                     16340025
*                                                                       16360025
R0       EQU       0                                                    16380025
R1       EQU       1                                                    16400025
R2       EQU       2                                                    16420025
R3       EQU       3                                                    16440025
R4       EQU       4                                                    16460025
R5       EQU       5                                                    16480025
R6       EQU       6                                                    16500025
R7       EQU       7                                                    16520025
R8       EQU       8                                                    16540025
R9       EQU       9                                                    16560025
RA       EQU      10                                                    16580025
RB       EQU      11                                                    16600025
RC       EQU      12                                                    16620025
RD       EQU      13                                                    16640025
RE       EQU      14                                                    16660025
RF       EQU      15                                                    16680025
*                                                                       16700025
         LIST1EQU                                                       16720025
*                                                                       16740025
*        DCB DISPLACEMENTS                                              16760025
DCBEODAD EQU       32                                                   16780025
DCBGET   EQU       48                                                   16800025
DCBOFLGS EQU       48                                                   16820025
*                                                                       16840025
         LTORG                                                          16860025
         ORG       ASMGUP+X'1000'      ROUND SIZE UP                    16870027
         END       ASMGUP                                               16880025
./ ENDUP                                                                77777777
/*                                                                      88888888
//                                                                      99999999
